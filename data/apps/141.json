{
  "task_id": "APPS/141",
  "problem_id": 141,
  "prompt": "You have a set of items, each having some integer weight not greater than $8$. You denote that a subset of items is good if total weight of items in the subset does not exceed $W$.\n\nYou want to calculate the maximum possible weight of a good subset of items. Note that you have to consider the empty set and the original set when calculating the answer.\n\n\n-----Input-----\n\nThe first line contains one integer $W$ ($0 \\le W \\le 10^{18}$) \u2014 the maximum total weight of a good subset.\n\nThe second line denotes the set of items you have. It contains $8$ integers $cnt_1$, $cnt_2$, ..., $cnt_8$ ($0 \\le cnt_i \\le 10^{16}$), where $cnt_i$ is the number of items having weight $i$ in the set.\n\n\n-----Output-----\n\nPrint one integer \u2014 the maximum possible weight of a good subset of items.\n\n\n-----Examples-----\nInput\n10\n1 2 3 4 5 6 7 8\n\nOutput\n10\n\nInput\n0\n0 0 0 0 0 0 0 0\n\nOutput\n0\n\nInput\n3\n0 4 1 0 0 9 8 3\n\nOutput\n3",
  "solutions": "[\"import time\\nimport random\\nW = int(input())\\nM = [int(a) for a in input().split()]\\nA = [0] * 8\\nsTime = time.time()\\n\\ns = 0\\nmi = 10**20\\nfor i in range(8):\\n    if s + M[i]*(i+1) <= W:\\n        s += M[i]*(i+1)\\n        A[i] = M[i]\\n    else:\\n        t = (W-s)//(i+1)\\n        s += t*(i+1)\\n        A[i] += t\\n    \\n    if s <= W:\\n        mi = min(mi, W-s)\\n\\nwhile time.time() - sTime < 1.7:\\n    i = random.randrange(8)\\n    a = random.randrange(2)\\n    if W-s >= 20 or (s-W < 10 and a == 0):\\n        if A[i] < M[i]:\\n            A[i] += 1\\n            s += (i+1)\\n    else:\\n        if A[i] > 0:\\n            A[i] -= 1\\n            s -= (i+1)\\n\\n    if s <= W:\\n        mi = min(mi, W-s)\\n\\nprint(W-mi)\\n\", \"import time\\nimport random\\nW = int(input())\\nM = [int(a) for a in input().split()]\\nA = [0] * 8\\nsTime = time.time()\\n\\ns = 0\\nmi = 10**20\\nfor i in range(8):\\n    if s + M[i]*(i+1) <= W:\\n        s += M[i]*(i+1)\\n        A[i] = M[i]\\n    else:\\n        t = (W-s)//(i+1)\\n        s += t*(i+1)\\n        A[i] += t\\n    \\n    if s <= W:\\n        mi = min(mi, W-s)\\n\\nwhile time.time() - sTime < 1.7:\\n    i = random.randrange(8)\\n    a = random.randrange(2)\\n    if W-s >= 20 or (s-W < 10 and a == 0):\\n        if A[i] < M[i]:\\n            A[i] += 1\\n            s += (i+1)\\n    else:\\n        if A[i] > 0:\\n            A[i] -= 1\\n            s -= (i+1)\\n\\n    if s <= W:\\n        mi = min(mi, W-s)\\n\\nprint(W-mi)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"10\\n1 2 3 4 5 6 7 8\\n\",\n    \"0\\n0 0 0 0 0 0 0 0\\n\",\n    \"3\\n0 4 1 0 0 9 8 3\\n\",\n    \"27\\n0 0 0 0 0 5 0 0\\n\",\n    \"178\\n731 0 0 0 0 0 0 0\\n\",\n    \"9890292762705840\\n0 0 0 0 7807819738278974 0 0 0\\n\",\n    \"11994176272990019\\n0 6395394930893349 0 0 0 0 0 0\\n\",\n    \"7517891175237043\\n0 0 0 0 0 0 0 1985236500005094\\n\",\n    \"0\\n0 10 0 0 0 0 0 0\\n\",\n    \"16\\n10 0 0 0 0 0 0 0\\n\",\n    \"0\\n2 0 0 0 0 0 0 0\\n\",\n    \"25\\n0 0 0 0 2 0 6 0\\n\",\n    \"774\\n84 0 0 0 460 0 0 0\\n\",\n    \"1843961714300273\\n1144009530854086 0 3048782373340161 0 0 0 0 0\\n\",\n    \"39402932710920212\\n0 0 0 7036655838029546 0 2597660979346835 0 0\\n\",\n    \"11171191554286070\\n2626501702108587 0 0 0 0 5566294923912459 0 0\\n\",\n    \"63\\n0 0 0 2 0 0 11 0\\n\",\n    \"46\\n0 3 0 7 0 0 0 0\\n\",\n    \"0\\n0 0 11 0 0 0 0 0\\n\",\n    \"37\\n0 0 0 7 8 3 0 0\\n\",\n    \"5406\\n0 0 0 0 445 0 317 449\\n\",\n    \"22811212883819247\\n0 1108162468654312 9267849252941926 5641326481085349 0 0 0 0\\n\",\n    \"3137841239857635\\n7677921040133039 0 5495760715307810 2198739007844282 0 0 0 0\\n\",\n    \"29423547216942029\\n9895725754469899 0 0 8464394659873434 0 4904621060298183 0 0\\n\",\n    \"23\\n11 10 0 0 0 0 0 3\\n\",\n    \"19\\n11 0 0 2 15 0 0 0\\n\",\n    \"30\\n0 0 0 0 4 10 0 7\\n\",\n    \"34\\n4 0 0 0 1 0 0 4\\n\",\n    \"1875\\n0 798 174 852 0 0 0 912\\n\",\n    \"80868264586325506\\n1072315406454538 2114883572736101 0 0 8817884998022571 0 4759615298395558 0\\n\",\n    \"38606490797285479\\n4947145092494350 8393851861334193 0 0 6862567426880355 86046173247284 0 0\\n\",\n    \"56852360334032010\\n0 0 0 536990956573391 1362485805899816 0 9568453774301551 2495134440145933\\n\",\n    \"0\\n4 0 0 0 9 7 0 10\\n\",\n    \"291\\n0 4 12 6 0 0 0 15\\n\",\n    \"1\\n12 5 0 15 0 0 0 10\\n\",\n    \"23\\n0 0 0 2 4 8 0 0\\n\",\n    \"1663\\n158 31 0 8 331 0 0 103\\n\",\n    \"90863901102013027\\n1036468344254765 8333950452337866 8622398070250315 0 3641583080876000 6369319652902795 0 0\\n\",\n    \"45483991037794898\\n0 0 5588410294597843 7919914742520282 8154363286108837 0 1890846143898513 5717232650778992\\n\",\n    \"38876292360852128\\n1178251863709588 888548687085905 0 0 860241043595441 4299934410797162 6840168978135254 0\\n\",\n    \"51\\n13 0 8 0 0 11 5 2\\n\",\n    \"19\\n13 0 7 13 8 0 0 7\\n\",\n    \"42\\n0 5 0 0 6 3 15 0\\n\",\n    \"48\\n4 0 2 4 0 3 0 8\\n\",\n    \"12685\\n520 889 403 371 0 0 693 619\\n\",\n    \"17995373119137346\\n1000616987087695 1180984772132040 0 1798956587187536 2523555158323738 0 3689830081375222 1031386339031284\\n\",\n    \"30361907087590648\\n6229675496701336 818014478481256 0 2818191705144909 0 3695646114549742 8019046413271050 748578016378469\\n\",\n    \"160467956487838089\\n8447480211038196 3786639833112288 5524073757598810 0 6104734381448390 0 9141982740627313 4977828192507207\\n\",\n    \"109\\n6 8 15 0 1 8 0 15\\n\",\n    \"299\\n5 0 2 5 2 0 5 15\\n\",\n    \"88\\n14 11 13 0 12 13 0 9\\n\",\n    \"72\\n5 5 0 0 0 7 0 4\\n\",\n    \"12282\\n873 126 799 171 654 962 0 764\\n\",\n    \"85923820136671751\\n964769924887921 7400047356766509 4975506514190167 1405527235771476 4382377364622534 7882077638503525 3500436605565292 0\\n\",\n    \"119123552460662018\\n3498903844029943 3716105624507639 7482020124180982 0 5500450380168266 6948819026020927 2545732662843252 5875686752523921\\n\",\n    \"2221420976968371\\n9088741118174393 6684739569073263 6815865321859996 7909538647066915 0 1443796503119370 6774982838971990 6387123574227518\\n\",\n    \"305\\n15 7 3 12 0 15 7 15\\n\",\n    \"564\\n14 13 12 11 0 4 10 14\\n\",\n    \"23\\n6 5 5 6 11 0 4 12\\n\",\n    \"5\\n1 8 3 5 6 2 7 4\\n\",\n    \"1656\\n614 595 574 591 235 925 161 262\\n\",\n    \"29618542583626836\\n928922862688147 247081676560684 4780028176352503 6915462458444330 1702883498127665 8104801497783356 4128546773963281 4249939744510315\\n\",\n    \"263313949370306890\\n4140164751166140 6614205360468614 8773811688442168 7305250350819495 9250632788512985 7714928459050216 8422821279105776 5352796431133309\\n\",\n    \"94517213607565382\\n9730010615245182 9582835010066942 1479698035863364 9714334322750847 3745605970644132 1944174340211658 2306294955584258 5230106975772456\\n\",\n    \"351\\n7 6 7 8 5 15 14 9\\n\",\n    \"224\\n7 7 3 4 2 5 2 4\\n\",\n    \"108\\n15 0 12 15 9 15 1 15\\n\",\n    \"4\\n0 0 0 0 0 0 0 4\\n\",\n    \"18\\n0 0 0 0 0 0 0 4\\n\",\n    \"10\\n0 0 0 0 0 0 0 4\\n\",\n    \"6\\n0 0 0 0 0 0 14 7\\n\",\n    \"166\\n0 0 0 0 0 0 13 11\\n\",\n    \"6\\n0 0 0 0 0 0 14 4\\n\",\n    \"97\\n0 0 0 0 0 7 13 9\\n\",\n    \"16\\n0 0 0 0 0 7 1 0\\n\",\n    \"15\\n0 0 0 0 0 7 9 3\\n\",\n    \"74\\n0 0 0 0 1 3 15 3\\n\",\n    \"151\\n0 0 0 0 1 6 5 13\\n\",\n    \"30\\n0 0 0 0 1 15 9 8\\n\",\n    \"6684\\n839 419 279 209 167 139 119 104\\n\",\n    \"6700\\n839 419 279 209 167 139 119 107\\n\",\n    \"6701\\n839 419 279 209 167 139 119 107\\n\",\n    \"16\\n0 0 0 0 0 25 74 1\\n\",\n    \"8000000000000016\\n0 0 6 0 0 0 0 1000000000000001\\n\",\n    \"1000000000000000000\\n100000000 10515151555 120000000005 11164161 890025412 955598741111111 48444888661656 8410286451320\\n\",\n    \"10\\n9 0 0 0 1 0 0 0\\n\",\n    \"100\\n99 0 0 0 0 0 1 0\\n\",\n    \"1000000006\\n0 0 0 1000000000 1 0 1 1000000000\\n\"\n  ],\n  \"outputs\": [\n    \"10\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"24\\n\",\n    \"178\\n\",\n    \"9890292762705840\\n\",\n    \"11994176272990018\\n\",\n    \"7517891175237040\\n\",\n    \"0\\n\",\n    \"10\\n\",\n    \"0\\n\",\n    \"24\\n\",\n    \"774\\n\",\n    \"1843961714300273\\n\",\n    \"39402932710920212\\n\",\n    \"11171191554286070\\n\",\n    \"63\\n\",\n    \"34\\n\",\n    \"0\\n\",\n    \"37\\n\",\n    \"5406\\n\",\n    \"22811212883819247\\n\",\n    \"3137841239857635\\n\",\n    \"29423547216942029\\n\",\n    \"23\\n\",\n    \"19\\n\",\n    \"30\\n\",\n    \"34\\n\",\n    \"1875\\n\",\n    \"80868264586325506\\n\",\n    \"38606490797285479\\n\",\n    \"56852360334032010\\n\",\n    \"0\\n\",\n    \"188\\n\",\n    \"1\\n\",\n    \"23\\n\",\n    \"1663\\n\",\n    \"90863901102013027\\n\",\n    \"45483991037794898\\n\",\n    \"38876292360852128\\n\",\n    \"51\\n\",\n    \"19\\n\",\n    \"42\\n\",\n    \"48\\n\",\n    \"12685\\n\",\n    \"17995373119137346\\n\",\n    \"30361907087590648\\n\",\n    \"160467956487838089\\n\",\n    \"109\\n\",\n    \"196\\n\",\n    \"88\\n\",\n    \"72\\n\",\n    \"12282\\n\",\n    \"85923820136671751\\n\",\n    \"119123552460662018\\n\",\n    \"2221420976968371\\n\",\n    \"305\\n\",\n    \"326\\n\",\n    \"23\\n\",\n    \"5\\n\",\n    \"1656\\n\",\n    \"29618542583626836\\n\",\n    \"263313949370306890\\n\",\n    \"94517213607565382\\n\",\n    \"351\\n\",\n    \"132\\n\",\n    \"108\\n\",\n    \"0\\n\",\n    \"16\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"165\\n\",\n    \"0\\n\",\n    \"97\\n\",\n    \"13\\n\",\n    \"15\\n\",\n    \"74\\n\",\n    \"151\\n\",\n    \"30\\n\",\n    \"6684\\n\",\n    \"6700\\n\",\n    \"6701\\n\",\n    \"15\\n\",\n    \"8000000000000015\\n\",\n    \"6140374583995647\\n\",\n    \"10\\n\",\n    \"100\\n\",\n    \"1000000005\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1132/E",
  "starter_code": ""
}