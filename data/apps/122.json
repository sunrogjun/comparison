{
  "task_id": "APPS/122",
  "problem_id": 122,
  "prompt": "Vasya has an array a consisting of positive integer numbers. Vasya wants to divide this array into two non-empty consecutive parts (the prefix and the suffix) so that the sum of all elements in the first part equals to the sum of elements in the second part. It is not always possible, so Vasya will move some element before dividing the array (Vasya will erase some element and insert it into an arbitrary position).\n\nInserting an element in the same position he was erased from is also considered moving.\n\nCan Vasya divide the array after choosing the right element to move and its new position?\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 100000) \u2014 the size of the array.\n\nThe second line contains n integers a_1, a_2... a_{n} (1 \u2264 a_{i} \u2264 10^9) \u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint YES if Vasya can divide the array after moving one element. Otherwise print NO.\n\n\n-----Examples-----\nInput\n3\n1 3 2\n\nOutput\nYES\n\nInput\n5\n1 2 3 4 5\n\nOutput\nNO\n\nInput\n5\n2 2 3 4 5\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn the first example Vasya can move the second element to the end of the array.\n\nIn the second example no move can make the division possible.\n\nIn the third example Vasya can move the fourth element by one position to the left.",
  "solutions": "[\"def solve(n,a):\\n    tot=0\\n    for i in range(n):\\n        tot+=a[i]\\n    diffs = [] #alla suffix - prefix diffs[i]=prefix-suffix om delas innan element i\\n    diffs.append(-tot)\\n    for i in range(n):\\n        tot-=2*a[i]\\n        diffs.append(-tot)\\n        if tot==0:\\n            return (\\\"YES\\\")\\n    for i in range(n):\\n        diffmake=2*a[i]\\n        j=binary(diffs,diffmake)\\n        if j>i and j!=-1:\\n            return (\\\"YES\\\")\\n        j=binary(diffs,-diffmake)\\n        if i>=j and j!=-1:\\n            return (\\\"YES\\\")\\n    return (\\\"NO\\\")\\n\\n\\ndef binary(a,value):\\n    hi=len(a)\\n    lo=-1\\n    while (lo+1<hi):\\n        mi=(lo+hi)//2\\n        if a[mi]==value:\\n            return mi\\n        if a[mi]<value:\\n            lo=mi\\n        else:\\n            hi=mi\\n    return -1\\n\\n\\nn=int(input())\\na = input().split()\\nfor i in range (n):\\n    a[i]=int(a[i])\\nprint(solve(n,a))\\n\", \"def solve():\\n    n = int(input())\\n    #n, w = map(int, input().split())\\n    a = list(map(int, input().split()))\\n    #a = [list(map(int, input().split())) for _ in range(n)]\\n    ok = 0\\n    Su = sum(a)\\n    di = dict()\\n    di[0] = 1\\n    su = 0\\n    for i in range(n):\\n        su += a[i]\\n        if di.get(a[i] * 2, 0) == 0:\\n            di[a[i] * 2] = 1\\n        if di.get(su - Su + su, 0) == 0:\\n            pass\\n        else:\\n            ok = 1\\n    di.clear()\\n    di[0] = 1\\n    su = 0\\n    for i in range(-1, -n - 1, -1):\\n        su += a[i]\\n        if di.get(a[i] * 2, 0) == 0:\\n            di[a[i] * 2] = 1\\n        if di.get(su - Su + su, 0) == 0:\\n            pass\\n        else:\\n            ok = 1\\n    if ok:\\n        print('YES')\\n    else:\\n        print('NO')\\n\\ndef __starting_point():\\n    solve()\\n__starting_point()\", \"def mp():  return list(map(int,input().split()))\\ndef lt():  return list(map(int,input().split()))\\ndef pt(x):  print(x)\\ndef ip():  return input()\\ndef it():  return int(input())\\ndef sl(x):  return [t for t in x]\\ndef spl(x): return x.split()\\ndef aj(liste, item): liste.append(item)\\ndef bin(x):  return \\\"{0:b}\\\".format(x)\\ndef listring(l): return ' '.join([str(x) for x in l])\\ndef ptlist(l): print(' '.join([str(x) for x in l]))\\n\\nn = it()\\na = lt()\\nk = 0\\nleft = 0\\nright = sum(a)\\nbl = False\\ndict = {}\\nfor i in range(n):\\n    if a[i] in dict:\\n        (ma,mi) = dict[a[i]]\\n        dict[a[i]] = (max(ma,i),min(mi,i))\\n    else:\\n        dict[a[i]] = (i,i)\\nwhile k < n and not bl:\\n    if right == left:\\n        bl = True\\n    elif right > left:\\n        x = (right-left)/2\\n        if x == int(x) and int(x) in dict and dict[int(x)][0] >= k:\\n            bl = True\\n        else:\\n            right -= a[k]\\n            left += a[k]\\n            k += 1\\n    else:\\n        x = (left-right)/2\\n        if x == int(x) and int(x) in dict and dict[int(x)][1] <= k-1:\\n            bl = True\\n        else:\\n            right -= a[k]\\n            left += a[k]\\n            k += 1\\nif bl:\\n    pt(\\\"YES\\\")\\nelse:\\n    pt(\\\"NO\\\")\\n            \\n            \\n\", \"def solve(a):\\n    s = sum(a)\\n    if s % 2 == 1:\\n        return False\\n    s //= 2\\n\\n    elements = set()\\n    cs = 0\\n    n = len(a)\\n\\n    for i in range(n):\\n        cs += a[i]\\n        if cs == s:\\n            return True\\n\\n        elements.add(a[i])\\n\\n        if i > 0 and cs > s and cs - s in elements:\\n            return True\\n\\n    return False\\n\\n\\ndef main():\\n    n = int(input())\\n    a = list(map(int, input().split()))\\n\\n    if solve(a):\\n        print(\\\"YES\\\")\\n    elif solve(a[::-1]):\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\n\\n\\ndef __starting_point():\\n    # import sys\\n    # sys.stdin = open(\\\"in.txt\\\")\\n    main()\\n\\n__starting_point()\", \"\\n# Python Interpreter Version: Python 3.5.2\\n#\\n# Note: Educational Codeforces Round 21\\n\\ndef divPos(arr):\\n    sumArr = sum(arr)\\n    targetSum = sumArr / 2\\n    if sumArr % 2 != 0:\\n        return False\\n    lArr = set()\\n    sumlArr = 0\\n    for i in range(len(arr)):\\n        lArr.add(arr[i])\\n        sumlArr += arr[i]\\n        if sumlArr == targetSum or (sumlArr > targetSum and sumlArr - targetSum in lArr):\\n            return True\\n    return False\\n\\ndef __starting_point():\\n    n = input()\\n    arr = [int(x) for x in input().split()]\\n    # arr = [2,2,3,4,5]\\n    if divPos(arr) or divPos(arr[::-1]):\\n        print('YES')\\n    else:\\n        print('NO')\\n\\n__starting_point()\", \"import math\\nimport re\\n\\ndef f(arr, n):\\n    a = set()\\n    x = 0\\n    y = sum(arr)\\n    res = 'NO'\\n    for i in range(n):\\n        x += arr[i]\\n        y -= arr[i]\\n        a.add(arr[i])\\n        q = x - y\\n\\n        if q % 2 != 0:\\n            continue\\n        elif q == 0 or (q > 0 and q / 2 in a):\\n            res = 'YES'\\n            break\\n    return res\\n\\nn = int(input())\\narr = list(map(int, input().split()))\\n\\nres = f(arr, n)\\nif res == 'NO':\\n    arr = arr[::-1]\\n    res = f(arr, n)\\n\\nprint(res)\\n\\n    # arr = list(map(int, input().split()))\\n# res = 0\\n# a = {math.pow(2, i) for i in range(35)}\\n# for i in range(n-1):\\n#     for j in range(i+1,n):\\n#         if arr[i] + arr[j] % 2 % 2 % 2 % 2 % 2 in a:\\n#             res += 1\\n#\\n# print(res)\\n\\n\\n# arr = list(map(int, input().split()))\\n# m = int(input())\\n# spis = list(map(int, input().split()))\\n#\\n# arr1 = sorted(arr, reverse=True)\\n# a = [n - arr1.index(arr[el - 1]) for el in spis]\\n# print(' '.join(map(str, a)))\\n\", \"import sys\\nfrom itertools import accumulate\\n\\ndef solve():\\n    n = int(input())\\n    a = [int(i) for i in input().split()]\\n\\n    S = sum(a)\\n\\n    if S & 1:\\n        print('NO')\\n        return\\n\\n    f_a = dict()\\n    l_a = dict()\\n\\n    for i in range(n):\\n        if a[i] not in f_a:\\n            f_a[a[i]] = i\\n\\n    for i in range(n - 1, -1, -1):\\n        if a[i] not in l_a:\\n            l_a[a[i]] = i\\n\\n    ps = [0] + list(accumulate(a))\\n    S //= 2\\n\\n    for k in range(1, n + 1):\\n        x = S - ps[k]\\n\\n        if x == 0:\\n            print('YES')\\n            return\\n        elif x > 0:\\n            if x in l_a and k <= l_a[x]:\\n                print('YES')\\n                return\\n        else:\\n            x *= -1\\n            \\n            if x in f_a and f_a[x] < k:\\n                print('YES')\\n                return\\n\\n    print('NO')\\n\\n\\ndef __starting_point():\\n    solve()\\n__starting_point()\", \"import sys\\nfrom itertools import accumulate\\n\\ndef solve():\\n    n = int(input())\\n    a = [int(i) for i in input().split()]\\n\\n    S = sum(a)\\n\\n    if S & 1:\\n        print('NO')\\n        return\\n\\n    S //= 2\\n\\n    ap = set()\\n    ps = [0] + list(accumulate(a))\\n\\n    for i in range(1, n + 1):\\n        x = ps[i] - S\\n        ap.add(a[i - 1])\\n\\n        if x == 0 or x in ap:\\n            print('YES')\\n            return\\n\\n    ap = set()\\n    a = a[::-1]\\n    ps = [0] + list(accumulate(a))\\n\\n    for i in range(1, n + 1):\\n        x = ps[i] - S\\n        ap.add(a[i - 1])\\n\\n        if x == 0 or x in ap:\\n            print('YES')\\n            return\\n\\n    print('NO')\\n\\ndef __starting_point():\\n    solve()\\n__starting_point()\", \"n = int(input())\\narr = [int(x) for x in input().split()]\\nif n==1:\\n\\tprint(\\\"NO\\\")\\n\\treturn\\ns = sum(arr)\\nsp = 0\\nss = s\\nsetq = {}\\nsetp = {}\\nfor i in arr:\\n\\tsetq[i] = setq.get(i,0)+1\\n\\tsetp[i] = 0\\nfor i in range(n):\\n\\tsp += arr[i]\\n\\tss -= arr[i]\\n\\tsetp[arr[i]] += 1\\n\\tsetq[arr[i]] -= 1\\n\\tval = ss-sp\\n\\tif val>0 and not val&1:\\n\\t\\tval //= 2\\n\\t\\tans = setq.get(val,0)\\n\\t\\tif ans>0:\\n\\t\\t\\tprint(\\\"YES\\\")\\n\\t\\t\\treturn\\n\\telif val<0 and not (-val)&1:\\n\\t\\tval = -val\\n\\t\\tval //= 2\\n\\t\\tans = setp.get(val,0)\\n\\t\\tif ans>0:\\n\\t\\t\\tprint(\\\"YES\\\")\\n\\t\\t\\treturn\\n\\telif val==0:\\n\\t\\tprint(\\\"YES\\\")\\n\\t\\treturn\\nprint(\\\"NO\\\")\\n\", \"class Dick:\\n    def __init__(self):\\n        self.s = 0\\n        self.m = dict()\\n    def add(self, x):\\n        self.s += x\\n        if x in self.m:\\n            self.m[x] += 1\\n        else:\\n            self.m[x] = 1\\n    def rm(self, x):\\n        self.s -= x\\n        if self.m[x] > 1:\\n            self.m[x] -= 1\\n        else:\\n            self.m.pop(x)\\n    def shasei(self):\\n        return self.s\\n    def ininder(self, x):\\n        return x in self.m\\ndef ok(a,n):\\n    w = sum(a)\\n    if w & 1:\\n        return 0\\n    f = Dick()\\n    s = Dick()\\n    for x in a:\\n        s.add(x)\\n    w //= 2\\n    for i in range(n):\\n        if s.ininder(w - f.shasei()) or f.ininder(w - s.shasei()):\\n            return 1\\n        f.add(a[i])\\n        s.rm(a[i])\\n    return 0\\n\\nn = int(input())\\na = list(map(int, input().split()))\\nprint(\\\"YES\\\" if ok(a,n) else \\\"NO\\\")\", \"n = int(input())\\na = list(map(int, input().split()))\\ns = sum(a)\\n\\n\\ndef solve(a):\\n    rtn = False\\n    tmp = 0\\n    dic = {}\\n    for i in range(n):\\n        tmp += a[i]\\n        dic[a[i]] = True\\n        if tmp == s // 2:\\n            rtn = True\\n            break\\n        elif s // 2 < tmp and (tmp - s // 2) in dic:\\n            rtn = True\\n            break\\n    return rtn\\n\\n\\nif n == 1 or s % 2 == 1:\\n    print('NO')\\nelif solve(a) or solve(list(reversed(a))):\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"def solve(n,a):\\n    tot=0\\n    for i in range(n):\\n        tot+=a[i]\\n    diffs = [] #alla suffix - prefix diffs[i]=prefix-suffix om delas innan element i\\n    diffs.append(-tot)\\n    for i in range(n):\\n        tot-=2*a[i]\\n        diffs.append(-tot)\\n        if tot==0:\\n            return (\\\"YES\\\")\\n    for i in range(n):\\n        diffmake=2*a[i]\\n        j=binary(diffs,diffmake)\\n        if j>i and j!=-1:\\n            return (\\\"YES\\\")\\n        j=binary(diffs,-diffmake)\\n        if i>=j and j!=-1:\\n            return (\\\"YES\\\")\\n    return (\\\"NO\\\")\\n\\n\\ndef binary(a,value):\\n    hi=len(a)\\n    lo=-1\\n    while (lo+1<hi):\\n        mi=(lo+hi)//2\\n        if a[mi]==value:\\n            return mi\\n        if a[mi]<value:\\n            lo=mi\\n        else:\\n            hi=mi\\n    return -1\\n\\n\\nn=int(input())\\na = input().split()\\nfor i in range (n):\\n    a[i]=int(a[i])\\nprint(solve(n,a))\", \"import sys\\nfrom bisect import bisect_left, bisect_right\\n\\n# sys.stdin = open(\\\"in\\\", \\\"r\\\")\\n\\n\\ndef find(arr, x):\\n    i1 = bisect_left(arr, x)\\n    i2 = bisect_right(arr, x)\\n    if(i1 < len(arr) and arr[i1] == x):\\n        return i1, i2 - 1\\n    else:\\n        return -1\\n\\n\\nn = int(input())\\n\\narr = [(i, int(x)) for i, x in enumerate(input().split())]\\ncum = []\\nfor i in range(n):\\n    if(i == 0):\\n        cum.append(arr[i][1])\\n    else:\\n        cum.append(cum[i - 1] + arr[i][1])\\n\\narr.sort(key=lambda a: a[1])\\nvalues = [a[1] for a in arr]\\n\\nfor i in range(n):\\n    a = cum[i]\\n    b = cum[n - 1] - cum[i]\\n    diff = a - b\\n\\n    if diff == 0:\\n        print(\\\"YES\\\")\\n        return\\n    elif(diff % 2 != 0):\\n        break\\n    else:\\n        diff //= 2\\n    idx = find(values, abs(diff))\\n\\n    if(idx != -1 and ((diff > 0 and arr[idx[0]][0] <= i) or (diff < 0 and arr[idx[1]][0] > i))):\\n        print(\\\"YES\\\")\\n        return\\nprint(\\\"NO\\\")\\n\", \"from functools import reduce\\n\\ndef solve():\\n    sum_ = a[:]\\n    for i in range(1, n):\\n        sum_[i] += sum_[i - 1]\\n    if (sum_[n - 1] % 2):  return False\\n    half = int(sum_[n - 1] / 2)\\n    st = set([0])\\n    for i in range(n):\\n        if sum_[i] >= half and sum_[i] - half in st:\\n            return True\\n        st.add(a[i])\\n\\n    sum_ = a[:]\\n    for i in range(n - 2, -1, -1):\\n        sum_[i] += sum_[i + 1]\\n    st = set([0])\\n    for i in range(n - 1, -1, -1):\\n        if sum_[i] >= half and sum_[i] - half in st:\\n            return True\\n        st.add(a[i])\\n    return False\\n\\nwhile True:\\n    try:\\n        n = int(input())\\n    except:\\n        break\\n    a = [int(x) for x in input().split(' ')]\\n    print('YES' if solve() else \\\"NO\\\")\\n    \\n\", \"class Dick:\\n    def __init__(self):\\n        self.s = 0\\n        self.m = dict()\\n    def add(self, x):\\n        self.s += x\\n        if x in self.m:\\n            self.m[x] += 1\\n        else:\\n            self.m[x] = 1\\n    def rm(self, x):\\n        self.s -= x\\n        if self.m[x] > 1:\\n            self.m[x] -= 1\\n        else:\\n            self.m.pop(x)\\n    def shasei(self):\\n        return self.s\\n    def ininder(self, x):\\n        return x in self.m\\ndef ok(a,n):\\n    w = sum(a)\\n    if w & 1:\\n        return 0\\n    f = Dick()\\n    s = Dick()\\n    for x in a:\\n        s.add(x)\\n    w //= 2\\n    for i in range(n):\\n        if s.ininder(w - f.shasei()) or f.ininder(w - s.shasei()):\\n            return 1\\n        f.add(a[i])\\n        s.rm(a[i])\\n    return 0\\n\\nn = int(input())\\na = list(map(int, input().split()))\\nprint(\\\"YES\\\" if ok(a,n) else \\\"NO\\\")\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\ne = set([0])\\np = 0\\ns = sum(a)\\nif s % 2:\\n    st = False\\nelse:\\n    st = True\\nif st:\\n    st = False\\n    for j in range(2):\\n        for i in a:\\n            p += i\\n            e.add(i)\\n            if p - s // 2 in e:\\n                st = True\\n                break\\n        e = set([0])\\n        p = 0\\n        a.reverse()\\nprint('YES' if st else 'NO')\\n\", \"def divider(a):\\n    t = sum(a)\\n    d = []\\n    d.append(-t)\\n    for i in range(len(a)):\\n        t -= 2 * a[i]\\n        d.append(-t)\\n        if t == 0:\\n            return (\\\"YES\\\")\\n    for i in range(len(a)):\\n        s = 2 * a[i]\\n        j = binary(d, s)\\n        if j > i and j != -1:\\n            return (\\\"YES\\\")\\n        j = binary(d, -s)\\n        if i >= j and j != -1:\\n            return (\\\"YES\\\")\\n    return (\\\"NO\\\")\\n\\n\\ndef binary(a, value):\\n    hi = len(a)\\n    lo = -1\\n    while (lo + 1 < hi):\\n        mi = (lo + hi) // 2\\n        if a[mi] == value:\\n            return mi\\n        if a[mi] < value:\\n            lo = mi\\n        else:\\n            hi = mi\\n    return -1\\n\\n\\ndef __starting_point():\\n    n = input()\\n    a = [int(i) for i in input().split()]\\n    print(divider(a))\\n\\n__starting_point()\", \"def f(aa, s):\\n    d = {a: i for i, a in enumerate(aa)}\\n    for i, a in enumerate(aa):\\n        if s in d and i <= d[s]:\\n            return True\\n        s -= a\\n        if s <= 0:\\n            break\\n    return not s\\n\\n\\nn = int(input())\\naa = list(map(int, input().split()))\\ns, res = sum(aa), False\\nif not s & 1 and n > 1:\\n    res = f(aa, s // 2)\\n    if not res:\\n        aa.reverse()\\n        res = f(aa, s // 2)\\nprint((\\\"NO\\\", \\\"YES\\\")[res])\", \"from itertools import *\\nn = int(input())\\nl = list(map(int, input().split()))\\nfor j in range(0, 2):\\n\\tm = {}\\n\\tl = [0] + list(reversed(l))\\n\\tfor i in range(len(l)):\\n\\t\\tm[l[i]] = i\\n\\tac = list(accumulate(l))\\n\\ts = ac[-1]\\n\\tfor i in range(0, len(ac)-1):\\n\\t\\tif ac[i] == s/2 or (s/2-ac[i] in m.keys() and m[s/2-ac[i]] > i):\\n\\t\\t\\tprint('YES')\\n\\t\\t\\tquit()\\nprint('NO')\", \"\\n\\n\\ndef func():\\n    n = int(input())\\n\\n\\n    array = []\\n    sum = 0\\n    for index,number in enumerate(input().split()):\\n        num = int(number)\\n        array.append(num)\\n        sum += num\\n\\n    if sum%1 ==1:\\n        print(\\\"NO\\\")\\n        return\\n    setn = set()\\n    sumSub = 0\\n    indexdict = {}\\n    for indexm,number in enumerate(array):\\n        sumSub += number\\n\\n\\n        sum2 = sumSub * 2 - sum\\n        if sum2%2 == 1:\\n            continue\\n        sum2 /= 2\\n        setn.add(sum2)\\n        indexdict[sum2] = indexm\\n\\n    i = 0\\n    if 0 in setn:\\n        print(\\\"YES\\\")\\n        return\\n    while i < n:\\n        num = array[i]\\n\\n        if num in setn and num in indexdict and i < indexdict[num]:\\n\\n            print(\\\"YES\\\")\\n            return\\n        if -num in setn and -num in indexdict and i > indexdict[-num]:\\n            print(\\\"YES\\\")\\n            return\\n        i+=1\\n\\n    print(\\\"NO\\\")\\n\\nfunc()\\n\", \"#!/usr/bin/env python3\\n\\nimport sys\\nfrom collections import Counter\\n\\nn = int(input())\\na = [int(x) for x in input().split()]\\n\\ns = sum(a)\\nc1 = Counter(a)\\nc2 = Counter()\\n\\ncur = 0\\nfor x in a:\\n    c1[x] -= 1\\n    c2[x] += 1\\n    cur += x\\n\\n    s1 = cur\\n    s2 = s - s1\\n    if s1 == s2:\\n        print('YES')\\n        return\\n    if (s2 - s1) % 2 == 1:\\n        continue\\n    if s2 > s1:\\n        if c1[(s2 - s1) // 2] > 0:\\n            print('YES')\\n            return\\n    else:\\n        if c2[(s1 - s2) // 2] > 0:\\n            print('YES')\\n            return\\n\\nprint('NO')\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n1 3 2\\n\",\n    \"5\\n1 2 3 4 5\\n\",\n    \"5\\n2 2 3 4 5\\n\",\n    \"5\\n72 32 17 46 82\\n\",\n    \"6\\n26 10 70 11 69 57\\n\",\n    \"7\\n4 7 10 7 5 5 1\\n\",\n    \"8\\n9 5 5 10 4 9 5 8\\n\",\n    \"10\\n9 6 8 5 5 2 8 9 2 2\\n\",\n    \"15\\n4 8 10 3 1 4 5 9 3 2 1 7 7 3 8\\n\",\n    \"20\\n71 83 54 6 10 64 91 98 94 49 65 68 14 39 91 60 74 100 17 13\\n\",\n    \"20\\n2 8 10 4 6 6 4 1 2 2 6 9 5 1 9 1 9 8 10 6\\n\",\n    \"100\\n9 9 72 55 14 8 55 58 35 67 3 18 73 92 41 49 15 60 18 66 9 26 97 47 43 88 71 97 19 34 48 96 79 53 8 24 69 49 12 23 77 12 21 88 66 9 29 13 61 69 54 77 41 13 4 68 37 74 7 6 29 76 55 72 89 4 78 27 29 82 18 83 12 4 32 69 89 85 66 13 92 54 38 5 26 56 17 55 29 4 17 39 29 94 3 67 85 98 21 14\\n\",\n    \"100\\n89 38 63 73 77 4 99 74 30 5 69 57 97 37 88 71 36 59 19 63 46 20 33 58 61 98 100 31 33 53 99 96 34 17 44 95 54 52 22 77 67 88 20 88 26 43 12 23 96 94 14 7 57 86 56 54 32 8 3 43 97 56 74 22 5 100 12 60 93 12 44 68 31 63 7 71 21 29 19 38 50 47 97 43 50 59 88 40 51 61 20 68 32 66 70 48 19 55 91 53\\n\",\n    \"100\\n80 100 88 52 25 87 85 8 92 62 35 66 74 39 58 41 55 53 23 73 90 72 36 44 97 67 16 54 3 8 25 34 84 47 77 39 93 19 49 20 29 44 21 48 21 56 82 59 8 31 94 95 84 54 72 20 95 91 85 1 67 19 76 28 31 63 87 98 55 28 16 20 36 91 93 39 94 69 80 97 100 96 68 26 91 45 22 84 20 36 20 92 53 75 58 51 60 26 76 25\\n\",\n    \"100\\n27 95 57 29 91 85 83 36 72 86 39 5 79 61 78 93 100 97 73 23 82 66 41 92 38 92 100 96 48 56 66 47 5 32 69 13 95 23 46 62 99 83 57 66 98 82 81 57 37 37 81 64 45 76 72 43 99 76 86 22 37 39 93 80 99 36 53 83 3 32 52 9 78 34 47 100 33 72 19 40 29 56 77 32 79 72 15 88 100 98 56 50 22 81 88 92 58 70 21 19\\n\",\n    \"100\\n35 31 83 11 7 94 57 58 30 26 2 99 33 58 98 6 3 52 13 66 21 53 26 94 100 5 1 3 91 13 97 49 86 25 63 90 88 98 57 57 34 81 32 16 65 94 59 83 44 14 46 18 28 89 75 95 87 57 52 18 46 80 31 43 38 54 69 75 82 9 64 96 75 40 96 52 67 85 86 38 95 55 16 57 17 20 22 7 63 3 12 16 42 87 46 12 51 95 67 80\\n\",\n    \"6\\n1 4 3 100 100 6\\n\",\n    \"6\\n6 100 100 3 4 1\\n\",\n    \"6\\n4 2 3 7 1 1\\n\",\n    \"4\\n6 1 4 5\\n\",\n    \"3\\n228 114 114\\n\",\n    \"3\\n229 232 444\\n\",\n    \"3\\n322 324 555\\n\",\n    \"3\\n69 34 5\\n\",\n    \"6\\n5 4 1 2 2 2\\n\",\n    \"3\\n545 237 546\\n\",\n    \"5\\n2 3 1 1 1\\n\",\n    \"6\\n2 2 10 2 2 2\\n\",\n    \"5\\n5 4 6 5 6\\n\",\n    \"5\\n6 1 1 1 1\\n\",\n    \"2\\n1 3\\n\",\n    \"5\\n5 2 2 3 4\\n\",\n    \"2\\n2 2\\n\",\n    \"5\\n1 2 6 1 2\\n\",\n    \"5\\n1 1 8 5 1\\n\",\n    \"10\\n73 67 16 51 56 71 37 49 90 6\\n\",\n    \"1\\n10\\n\",\n    \"1\\n1\\n\",\n    \"2\\n1 1\\n\",\n    \"5\\n8 2 7 5 4\\n\",\n    \"1\\n2\\n\",\n    \"16\\n9 10 2 1 6 7 6 5 8 3 2 10 8 4 9 2\\n\",\n    \"4\\n8 2 2 4\\n\",\n    \"19\\n9 9 3 2 4 5 5 7 8 10 8 10 1 2 2 6 5 3 3\\n\",\n    \"11\\n7 2 1 8 8 2 4 10 8 7 1\\n\",\n    \"6\\n10 20 30 40 99 1\\n\",\n    \"10\\n3 7 9 2 10 1 9 6 4 1\\n\",\n    \"3\\n3 1 2\\n\",\n    \"2\\n9 3\\n\",\n    \"7\\n1 2 3 12 1 2 3\\n\",\n    \"6\\n2 4 4 5 8 5\\n\",\n    \"18\\n2 10 3 6 6 6 10 8 8 1 10 9 9 3 1 9 7 4\\n\",\n    \"20\\n9 6 6 10 4 4 8 7 4 10 10 2 10 5 9 5 3 10 1 9\\n\",\n    \"12\\n3 8 10 2 4 4 6 9 5 10 10 3\\n\",\n    \"11\\n9 2 7 7 7 3 7 5 4 10 7\\n\",\n    \"5\\n1 1 4 1 1\\n\",\n    \"2\\n4 4\\n\",\n    \"2\\n7 1\\n\",\n    \"5\\n10 5 6 7 6\\n\",\n    \"11\\n4 3 10 3 7 8 4 9 2 1 1\\n\",\n    \"6\\n705032704 1000000000 1000000000 1000000000 1000000000 1000000000\\n\",\n    \"8\\n1 5 6 8 3 1 7 3\\n\",\n    \"20\\n8 6 3 6 3 5 10 2 6 1 7 6 9 10 8 3 5 9 3 8\\n\",\n    \"11\\n2 4 8 3 4 7 9 10 5 3 3\\n\",\n    \"7\\n6 4 2 24 6 4 2\\n\",\n    \"17\\n7 1 1 1 8 9 1 10 8 8 7 9 7 9 1 6 5\\n\",\n    \"7\\n7 10 1 2 6 2 2\\n\",\n    \"5\\n10 10 40 10 10\\n\",\n    \"3\\n4 3 13\\n\",\n    \"5\\n5 2 10 2 1\\n\",\n    \"7\\n7 4 5 62 20 20 6\\n\",\n    \"6\\n1 5 2 20 10 2\\n\",\n    \"2\\n5 6\\n\",\n    \"14\\n5 2 9 7 5 8 3 2 2 4 9 1 3 10\\n\",\n    \"5\\n1 2 3 4 2\\n\",\n    \"5\\n2 2 2 5 5\\n\",\n    \"11\\n1 1 1 1 1 10 1 1 1 1 1\\n\",\n    \"9\\n8 4 13 19 11 1 8 2 8\\n\",\n    \"6\\n14 16 14 14 15 11\\n\",\n    \"9\\n14 19 1 13 11 3 1 1 7\\n\",\n    \"6\\n16 13 3 7 4 15\\n\",\n    \"4\\n11 7 12 14\\n\",\n    \"3\\n3 2 1\\n\",\n    \"5\\n2 1 3 6 4\\n\",\n    \"5\\n3 4 8 11 2\\n\",\n    \"5\\n1 2 10 3 4\\n\",\n    \"6\\n8 15 12 14 15 4\\n\",\n    \"5\\n1 2 4 4 5\\n\",\n    \"3\\n2 4 2\\n\",\n    \"5\\n2 3 1 6 4\\n\",\n    \"7\\n1 2 3 12 3 2 1\\n\",\n    \"3\\n3 4 13\\n\",\n    \"6\\n1 1 1 1 1000000000 1000000000\\n\",\n    \"6\\n19 6 5 13 6 13\\n\",\n    \"8\\n2 2 2 5 1 2 3 3\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/808/D",
  "starter_code": ""
}