{
  "task_id": "APPS/168",
  "problem_id": 168,
  "prompt": "Vasya has a pile, that consists of some number of stones. $n$ times he either took one stone from the pile or added one stone to the pile. The pile was non-empty before each operation of taking one stone from the pile.\n\nYou are given $n$ operations which Vasya has made. Find the minimal possible number of stones that can be in the pile after making these operations.\n\n\n-----Input-----\n\nThe first line contains one positive integer $n$\u00a0\u2014 the number of operations, that have been made by Vasya ($1 \\leq n \\leq 100$).\n\nThe next line contains the string $s$, consisting of $n$ symbols, equal to \"-\" (without quotes) or \"+\" (without quotes). If Vasya took the stone on $i$-th operation, $s_i$ is equal to \"-\" (without quotes), if added, $s_i$ is equal to \"+\" (without quotes).\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the minimal possible number of stones that can be in the pile after these $n$ operations.\n\n\n-----Examples-----\nInput\n3\n---\n\nOutput\n0\nInput\n4\n++++\n\nOutput\n4\nInput\n2\n-+\n\nOutput\n1\nInput\n5\n++-++\n\nOutput\n3\n\n\n-----Note-----\n\nIn the first test, if Vasya had $3$ stones in the pile at the beginning, after making operations the number of stones will be equal to $0$. It is impossible to have less number of piles, so the answer is $0$. Please notice, that the number of stones at the beginning can't be less, than $3$, because in this case, Vasya won't be able to take a stone on some operation (the pile will be empty).\n\nIn the second test, if Vasya had $0$ stones in the pile at the beginning, after making operations the number of stones will be equal to $4$. It is impossible to have less number of piles because after making $4$ operations the number of stones in the pile increases on $4$ stones. So, the answer is $4$.\n\nIn the third test, if Vasya had $1$ stone in the pile at the beginning, after making operations the number of stones will be equal to $1$. It can be proved, that it is impossible to have less number of stones after making the operations.\n\nIn the fourth test, if Vasya had $0$ stones in the pile at the beginning, after making operations the number of stones will be equal to $3$.",
  "solutions": "[\"n = int(input())\\ns = input()\\nb = 0\\nfor i in s:\\n    if i == '+':\\n        b += 1\\n    else:\\n        b -= 1\\n        b = max(b, 0)\\nprint(b)\", \"def go():\\n    n = int(input())\\n    a = [i for i in input()]\\n    x = 0\\n    for i in a:\\n        if i == '-':\\n            x = max(0, x - 1)\\n        else:\\n            x += 1\\n    return x\\n\\nprint(go())\\n\", \"def main():\\n    from sys import stdin, stdout\\n\\n    def read():\\n        return stdin.readline().rstrip('\\\\n')\\n\\n    def read_array(sep=None, maxsplit=-1):\\n        return read().split(sep, maxsplit)\\n\\n    def read_int():\\n        return int(read())\\n\\n    def read_int_array(sep=None, maxsplit=-1):\\n        return [int(a) for a in read_array(sep, maxsplit)]\\n\\n    def write(*args, **kwargs):\\n        sep = kwargs.get('sep', ' ')\\n        end = kwargs.get('end', '\\\\n')\\n        stdout.write(sep.join(str(a) for a in args) + end)\\n\\n    def write_array(array, **kwargs):\\n        sep = kwargs.get('sep', ' ')\\n        end = kwargs.get('end', '\\\\n')\\n        stdout.write(sep.join(str(a) for a in array) + end)\\n\\n    n = read_int()\\n    s = read()\\n    stones = 0\\n    for c in s:\\n        if c == '+':\\n            stones += 1\\n        else:\\n            stones -= 1\\n            if stones < 0:\\n                stones = 0\\n    write(stones)\\n\\nmain()\\n\", \"n=int(input())\\ns=input()\\ncur=0\\nfor a in s:\\n    cur=max(cur,0)\\n    if(a=='-'):\\n        cur-=1\\n    else: cur+=1\\n    cur=max(cur,0)\\nprint(cur)\", \"n = int(input())\\nx = input()\\ncur = 0\\nfor c in x:\\n    if c == '-':\\n        while cur <= 0:\\n            cur += 1\\n        cur -= 1\\n    else:\\n        cur += 1\\nprint(cur)\", \"n=int(input())\\ns=input()\\nans=0\\nfor i in s:\\n    if(i=='+'):\\n        ans+=1\\n    else:\\n        ans-=1\\n    if(ans<0):\\n        ans=0\\nprint(ans)\", \"n = int(input())\\ns = input()\\nans = 10000\\nfor i in range(0, 105):\\n\\tf = True\\n\\tx = i\\n\\tfor c in s:\\n\\t\\tif c == '-':\\n\\t\\t\\tx -= 1\\n\\t\\telse:\\n\\t\\t\\tx += 1\\n\\t\\tif x < 0:\\n\\t\\t\\tf = False\\n\\tif f:\\n\\t\\tans = min(ans, x)\\nprint(ans)\\n\", \"n = int(input())\\ns = input()\\nmaxn = 0\\nnow = 0\\nfor i in s:\\n    if i == '+':\\n        now += 1\\n    else:\\n        now -= 1\\n    maxn = max(maxn, -now)\\nprint(now + maxn)\", \"n = int(input())\\ns = input()\\nt = 0\\nfor i in s:\\n    if i == '+':\\n        t += 1\\n    else:\\n        t = max(t - 1, 0)\\n\\nprint(max(t, 0))\\n\", \"n = int(input())\\ns = input()\\nt = 0\\nmn = 0\\nfor i in s:\\n    if i == '-':\\n        t-=1\\n    else:\\n        t+=1\\n    mn = min(mn, t)\\nprint(-mn+t)\", \"n = int(input())\\nops = input().strip()\\nbegin = 0 \\nfor op in ops:\\n    if op == '-':\\n        begin -= 1\\n    elif op == '+':\\n        begin += 1\\n    \\n    begin = max(begin, 0)\\n\\nprint(begin)\", \"def main():\\n    n = int(input())\\n    s = input()\\n    mi = 0\\n    c = 0\\n    for i in s:\\n        if i == '+':\\n            c += 1\\n        else:\\n            c -= 1\\n        mi = min(mi, c)\\n    print(c - mi)\\n    return 0\\nmain()\", \"n = int(input())\\ns = input()\\nc = 0\\n\\nfor i in s:\\n    if c == 0 and i == '-':\\n        pass\\n    elif i == '+':\\n        c += 1\\n    else:\\n        c -= 1\\nprint(c)\\n\", \"n = int(input())\\n\\nops = input()\\n\\nresp = 0\\n\\nfor op in ops:\\n    if op == \\\"-\\\":\\n        resp = max(0, resp - 1)\\n    else:\\n        resp += 1\\nprint(resp)\\n\", \"n = int(input())\\nl = input()\\ns = 0\\nfor c in l:\\n    if c == '+':\\n        s += 1\\n    else:\\n        s -= 1\\n        if s < 0:\\n            s = 0\\n\\nprint( s )\", \"N = int(input())\\noperations = input()\\n\\nres = 0\\nfor c in operations:\\n    if c == '-':\\n        res = max(0, res-1)\\n    else:\\n        res += 1\\n\\nprint(res)\", \"N = int(input())\\ns = input()\\nans = 0\\nfor i in range(N):\\n    if s[i] == \\\"-\\\":\\n        ans -= 1\\n    else:\\n        ans += 1\\n    if ans < 0:\\n        ans = 0\\nprint(ans)\\n\", \"n = int(input())\\nops = input()\\ncurr = 0\\nans = 0\\nfor op in ops:\\n    curr += -1 if op == '-' else 1\\n    ans = max(ans, -curr)\\nfor op in ops:\\n    ans += -1 if op == '-' else 1\\nprint(ans)\", \"n = int(input())\\ns = input()\\nstart = 0\\nfor x in s:\\n    if x == '-':\\n        start = max(0, start - 1)\\n    else:\\n        start += 1\\nprint(start)\\n\", \"x = 10**9+7\\nN = int(input())\\nS = input()\\nmini = x\\n\\nfor s in S:\\n    if s == '+':\\n        x += 1\\n    else:\\n        x -= 1\\n    mini = min(mini, x)\\nprint(x - mini)\", \"n=int(input())\\ns=input()\\nans=0\\nfor c in s:\\n    if c=='+':\\n        ans+=1\\n    else :\\n        if ans>0:\\n            ans-=1\\nprint(ans)\", \"n = int(input())\\na = input()\\nbalance, min1 = 0, 0\\nfor q in a:\\n    if q == '+':\\n        balance += 1\\n    else:\\n        balance -= 1\\n    min1 = min(min1, balance)\\nprint(balance-min1)\\n\", \"from sys import stdin\\nn=int(stdin.readline().strip())\\n#n,m=map(int,stdin.readline().strip().split())\\ns=stdin.readline().strip()\\nans=101;\\nfor i in range(0,101):\\n    x=i\\n    for j in range(n):\\n        if s[j]==\\\"-\\\":\\n            x-=1\\n        else:\\n            x+=1\\n        if x<0:\\n            x=101\\n            break\\n    ans=min(x,ans)\\nprint(ans)\\n    \\n\", \"def read_nums():\\n    return [int(x) for x in input().split()]\\n\\n\\ndef main():\\n    n, = read_nums()\\n    s = input()\\n    count = 0\\n    for ch in s:\\n        if ch == '+':\\n            count += 1\\n        else:\\n            count = max(count - 1, 0)\\n    print(count)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n = int(input())\\nops = input()\\nc = 0\\nfor o in ops:\\n    if o == '-':\\n        c = c - 1 if c > 0 else 0\\n    else:\\n        c += 1\\nprint(c)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n---\\n\",\n    \"4\\n++++\\n\",\n    \"2\\n-+\\n\",\n    \"5\\n++-++\\n\",\n    \"1\\n+\\n\",\n    \"100\\n++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n----------------------------------------------------------------------------------------------------\\n\",\n    \"100\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+++++++++++++++-++++++++++++++++++++++++++++++++++-++++++++++++++++++++++\\n\",\n    \"100\\n+-+-+-++--++-++-+-+---+--++++++-++++--++-++---+--++++--+++++++-++-+--+-+-+--+-+++++-+--+---+-++-++-+\\n\",\n    \"100\\n++-+-+-+-+++-++++--+++----+-+-+-------+-+-++--++--+-+++++---+-++---++-+-++---+--+-+-++-++-+---++-+--\\n\",\n    \"100\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-\\n\",\n    \"99\\n--+++++++++++++++++++++++++++++++++++++++++++++++++------------------------------------------------\\n\",\n    \"100\\n+-----+-++++----++-+--+-+++-++--+--++---++++----+-+++--+++--+---++--++--++-+--+-+-+-+-+-+-+-++-+--+-\\n\",\n    \"100\\n+++++--+-+++-+-++---+-++-+---++-------++-+--+-++-+--+-+--+-+-+----++-+-----++----++++-+-+---+--+--+-\\n\",\n    \"100\\n-------+-++-------------+-----+--+----++----+-----+----+-----++-------------------+-+-------+-------\\n\",\n    \"100\\n-+--+-++--+-+-+-+-+-+-+-+-++--++--+-+-+-+-+-+-+-+-+-+-+-++--+-+-+-+-+-+-+-++--+-+-+-+-+-+-+-+-+-+-+-\\n\",\n    \"100\\n+-++--+-+-++--++-+++-++++----+--+---+-+-+-+-++--+-+-+-+-+-+-++--+-+-+-+-+-+-+-+++---+++-+-+-+---++--\\n\",\n    \"100\\n-++------+---++++-+---++---+--+-++--+-+-++--+-+-++++-+++-+-----++-+--++-+++++---+-----+++---+-+-+-+-\\n\",\n    \"100\\n------+---+--------+++--+--------------++--+----------+-+---+------+-+-----++---+------+-+---++-+---\\n\",\n    \"100\\n-+--+++-++-+-+--++-++-------+-++--++----+--++-++------++--+++-+-+-+--+++---+----+--+++++-++----+---+\\n\",\n    \"100\\n--+++--+---+-++--++-+--++++++--+-------+-+----+-++-+--+-+-+++---+++--+--+-+-+-+-++--++-++---++--+-++\\n\",\n    \"99\\n-++-+-+++--++--+-+--++-+-++-+-----+---+++-+++++--+-+-+-+--+++-+++++---+-+--+----+---------+-+-+-++-\\n\",\n    \"100\\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++\\n\",\n    \"100\\n---------------------------------------------------------------------------------------------------+\\n\",\n    \"99\\n-+-++--------++--++----------------------------++-------++-+--+---------+-+--------+---+----------+\\n\",\n    \"100\\n++--+-+-+-++--+-+-+-+-+-+-+-+-+-+-+-+-+-+-++-+--+-++--+-+-+-++--++--++--+-++--+-+-+-++--+-++--+-+-++\\n\",\n    \"100\\n--+--++--+--++-+---++-+++-+--++-+-+++--+-----+++-+++-+-+-+--+---++-+-+-++-++---+---+-+-+++--+--+-++-\\n\",\n    \"100\\n-----+-+-++--++++-+++---+-++--++-----+-+-+-+-++--+-+++-+--+-+++--+---+-+-++--+-+-+-++-++--+-+-+--+++\\n\",\n    \"99\\n-+-+-+++--+--+-+-++--+-++--+++-+++-++-+++++-+-+-++----------+--++--++--++--+-++--+-+-+-++--+-+-++-+\\n\",\n    \"100\\n--+---++++-+++-++-++----++-++-+-++--++-+--++++-++--+---+-++-+-+-+---+-+----------+-+--+--+--+++-++-+\\n\",\n    \"100\\n+-+++--++++-+-++--+--+-++-------+---+-+---+++++++---+----+++-+-++--+-+--+-+-+--+-+-++-+---++-+-+++++\\n\",\n    \"100\\n+---+++--+++--+--++--+--+---+-----+++-+++-+-+--+--+-+--++-+--+-+--+++--++---+-+-++-++-+-+++++++-+--+\\n\",\n    \"100\\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-++++-+++++--+++\\n\",\n    \"100\\n----------------------------------------------------------------------++++++++++++++++-++-++++++++++\\n\",\n    \"100\\n--++---+---------+-++--+--++---------------+---------+---+----+-----+--------------+++++--++++-++-+-\\n\",\n    \"100\\n+--+-+-+-+-+++--++---+-+-+-+-+-+-+-+-++--+-+-+-+-+-+-+-+-+-++--+-+-+-+-++--+-++-+-+-+-+-+-+-+-+-+-+-\\n\",\n    \"100\\n+-++++--+-----++--+-++--++-+++-++-+-+++--+--++-----++---+-+-++++++++++++-++-+++-+++-+-+++++-+--+++++\\n\",\n    \"100\\n-+-+---+-+-+-++-+--+-+++-+---+-++-+-+--++-+--+-+-+-+-+-++--+-+-++--+++++-+-++++++++++-++++++++++++++\\n\",\n    \"100\\n-++-+-++----+++--+++++-+--++--++----+---+-++++++--+---+-+--+--+--+++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n++++++++++++++++++++------------------------------++++++++++++++++++++++++++++++++++++++++++++++----\\n\",\n    \"100\\n--------------------------------------------------++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n----------++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n--------------------------------------------------------------------------------------------------++\\n\",\n    \"100\\n++--+-+-+-++++++++++++++--+-+++++++++-++++++++++++++++++++++-+-++++-+++++++++-+-+-+++-+++++++++-+++-\\n\",\n    \"100\\n++++----------------++++-+---+++-++++++++++++++++++++++-++--+++++++-+-++++++++++++++++++++++++++++++\\n\",\n    \"100\\n++++++-+++++++-++++++++++-++++++++++++++++++++++++-++++-++++++--+++-++++++++++++++++++++++++++-+-+++\\n\",\n    \"100\\n--------------------++-+++---+-++--+-++--++--++--+-+-+++---+-+-++--+-+-+-+-+-+-+-+-+-+-+-++--+-+-+-+\\n\",\n    \"100\\n-+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n+-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"100\\n+-+-+-+-+-++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"89\\n+++-++-----+------+-+-++-----+-+------++--+-++++-+-++-+++++-+++-+-+--+++-+-+-++-+---+++-+\\n\",\n    \"78\\n+++++++++-----------------------------------------------+++++++++++++---++++++\\n\",\n    \"100\\n---+-----------+-++---+----------++++++++++++++++++++++++++++++++++++++++++++-----------------------\\n\",\n    \"100\\n-----++--+-++-------+-+---++-+++-++++++++++++++-++-++-+-+++++++-+---++-+-+++++-++++++++++++++-+-++++\\n\",\n    \"100\\n---+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\\n\",\n    \"99\\n-+-++--++++++--++++--+--------+-+--++--+--++-++++-+-+++++++-+-++++--+---+-+++---+--+---+++++-+-+--+\\n\",\n    \"17\\n-++++--+-+----++-\\n\",\n    \"73\\n+++-+-++-+++--+-----+++---+-+-++++-+++--+-+-++--++----+--+--+---+-++-+-+-\\n\",\n    \"51\\n-++---+++++-+-++------+---+-++-+-+-+-++++-++++++-+-\\n\",\n    \"98\\n----+-+--+-+-++-++++---+-++++-+--++-++++++-+++--+++-+-----+-+--+-----+++++--+-++-+++-+-+++-+---++-\\n\",\n    \"100\\n+-+++-+++++-++--+++++++++-+-+-+--+++-+---+-+-+--+++-+-+-+-+-----++++++-+++++----++--+++-++--++---+--\\n\",\n    \"100\\n++-+-+---+-+--+++++-++++++---++-+-----+++++----++++-+--+--+-+-+++-++-++-+---+-++-++-+-+-----+----+++\\n\",\n    \"100\\n++-+++-+---+-++-+-++------+++-----++-++++-+-+-+----+++-++++------++++--+-+-+++--+---------++-+-+-+--\\n\",\n    \"100\\n+-------+-+++-+++-++-+-----+----+----+-+----+-++--+++-+---++-++-+-+++-+----+++-+-----+--+-++----++++\\n\",\n    \"4\\n--++\\n\",\n    \"4\\n-++-\\n\",\n    \"4\\n-+--\\n\",\n    \"4\\n----\\n\",\n    \"3\\n+-+\\n\",\n    \"3\\n+--\\n\",\n    \"3\\n++-\\n\",\n    \"3\\n+++\\n\",\n    \"3\\n-+-\\n\",\n    \"3\\n--+\\n\",\n    \"3\\n-++\\n\",\n    \"2\\n++\\n\",\n    \"2\\n+-\\n\",\n    \"2\\n--\\n\",\n    \"1\\n-\\n\",\n    \"5\\n--+--\\n\",\n    \"4\\n-+--\\n\"\n  ],\n  \"outputs\": [\n    \"0\",\n    \"4\",\n    \"1\",\n    \"3\",\n    \"1\",\n    \"100\",\n    \"0\",\n    \"69\",\n    \"17\",\n    \"0\",\n    \"0\",\n    \"1\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"1\",\n    \"2\",\n    \"1\",\n    \"1\",\n    \"2\",\n    \"1\",\n    \"3\",\n    \"2\",\n    \"4\",\n    \"6\",\n    \"8\",\n    \"9\",\n    \"26\",\n    \"7\",\n    \"1\",\n    \"24\",\n    \"27\",\n    \"35\",\n    \"42\",\n    \"50\",\n    \"90\",\n    \"2\",\n    \"64\",\n    \"60\",\n    \"80\",\n    \"2\",\n    \"99\",\n    \"98\",\n    \"98\",\n    \"90\",\n    \"13\",\n    \"16\",\n    \"21\",\n    \"44\",\n    \"97\",\n    \"11\",\n    \"1\",\n    \"1\",\n    \"9\",\n    \"11\",\n    \"16\",\n    \"6\",\n    \"0\",\n    \"4\",\n    \"2\",\n    \"1\",\n    \"0\",\n    \"0\",\n    \"1\",\n    \"0\",\n    \"1\",\n    \"3\",\n    \"0\",\n    \"1\",\n    \"2\",\n    \"2\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\",\n    \"0\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1159/A",
  "starter_code": ""
}