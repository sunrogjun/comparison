{
  "task_id": "APPS/462",
  "problem_id": 462,
  "prompt": "There are three friend living on the straight line Ox in Lineland. The first friend lives at the point x_1, the second friend lives at the point x_2, and the third friend lives at the point x_3. They plan to celebrate the New Year together, so they need to meet at one point. What is the minimum total distance they have to travel in order to meet at some point and celebrate the New Year?\n\nIt's guaranteed that the optimal answer is always integer.\n\n\n-----Input-----\n\nThe first line of the input contains three distinct integers x_1, x_2 and x_3 (1 \u2264 x_1, x_2, x_3 \u2264 100)\u00a0\u2014 the coordinates of the houses of the first, the second and the third friends respectively. \n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the minimum total distance the friends need to travel in order to meet together.\n\n\n-----Examples-----\nInput\n7 1 4\n\nOutput\n6\n\nInput\n30 20 10\n\nOutput\n20\n\n\n\n-----Note-----\n\nIn the first sample, friends should meet at the point 4. Thus, the first friend has to travel the distance of 3 (from the point 7 to the point 4), the second friend also has to travel the distance of 3 (from the point 1 to the point 4), while the third friend should not go anywhere because he lives at the point 4.",
  "solutions": "[\"l = list(map(int, input().split()))\\n\\nprint(max(l) - min(l))\", \"X = sorted(list(map(int, input().split())))\\nprint(X[-1] - X[0])\", \"a, b, c = map(int, input().split())\\nprint(max(a, b, c) - min(a, b, c))\", \"a, b, c = sorted(map(int, input().split()))\\nprint(c - a)\\n\", \"a, b, c = sorted(list(map(int, input().split())))\\nprint(b - a + c - b)\\n\", \"def main():\\n    x = list(map(int, input().split()))\\n    x.sort()\\n    print(x[-1] - x[0])\\n\\nmain()\\n\", \"import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,random,time\\n\\nsys.setrecursionlimit(10**7)\\ninf = 10**10\\nmod = 10**9 + 7\\n\\ndef f():\\n    a = list(map(int, input().split()))\\n    a.sort()\\n\\n    return a[1] - a[0] + a[2] - a[1]\\n\\nprint(f())\\n\", \"a = sorted(list(map(int, input().split())))\\nprint(a[2] - a[1] + a[1] - a[0])\", \"a = list(map(int, input().split()))\\na.sort()\\nprint(a[2] - a[0])\\n\", \"a,b,c= map(int,input().split())\\nsr = (a+b+c - (min(a,b,c)+max(a,b,c)))\\nprint(max(a,b,c) - sr + (sr - min(a,b,c)))\", \"arr = [int(x) for x in input().split()]\\narr.sort()\\nprint(arr[2]-arr[0])\\n\", \"a,b,c=sorted(list(map(int,input().split())))\\nprint(c-a)\\n\", \"a,b,c = list(map(int, input().split()))\\nans = 305\\nfor i in range(1,101):\\n\\tans = min(ans, abs(i-a)+ abs(i-b)+abs(i-c))\\nprint(ans)\\n\", \"a, b, c = [int(x) for x in input().split()]\\n\\nprint(min(abs(a - b) + abs(a - c), abs(a - c) + abs(b - c), abs(a - b) + abs(c - b)))\\n\", \"a = [int(x) for x in input().split()]\\nprint(max(a) - min(a))\\n\", \"a,b,c = list(map(int,input().split()))\\nmi = min(a,b,c)\\nma = max(a,b,c)\\nsr = a+b+c-mi-ma\\nprint((ma-sr)+(sr-mi))\\n\", \"a, b, c = list(map(int, input().split()))\\nprint(max(a,b,c) - min(a,b,c))\\n\", \"[a,b,c]=sorted(map(int,input().split()))\\nprint(c-a)\", \"def main():\\n\\ta = list(map(int, input().split()))\\n\\ta.sort()\\n\\tans = abs(a[0] - a[1]) + abs(a[1] - a[2])\\n\\tprint(ans)\\n\\ndef __starting_point():\\n\\tmain()\\n__starting_point()\", \"from sys import stdin as fin\\n# fin = open(\\\"cfr375a.in\\\")\\n\\n# n = int(fin.readline())\\na, b, c = sorted(map(int, fin.readline().split()))\\n# line = tuple(fin.readline().strip())\\nprint(c - a)\", \"a, b, c = [int(x) for x in input().split(' ')]\\n\\nd = [a,b,c]\\nd.sort()\\n\\ndist = 0\\nmindis = d[2] + 1\\n\\nfor i in range(d[0], d[2] + 1):\\n    dist = abs(i - d[0]) + abs(i - d[1]) + abs(i - d[2])\\n    if dist < mindis: mindis = dist\\n\\nprint(mindis)\", \"arr = list(map(int, input().split()))\\n\\narr.sort()\\n\\nprint((arr[1] - arr[0]) + (arr[2] - arr[1]))\\n\", \"x1, x2, x3 = sorted(map(int, input().split()))\\n\\n\\nprint(x2 - x1 + x3 - x2)\\n\\n\", \"import sys, math\\nf = list(map(int, input().split()))\\nf.sort()\\nprint(f[1] - f[0] + f[2] - f[1])\", \"A = list(map(int,input().split()))\\nA.sort()\\na = abs(A[0] - A[1])\\nb = abs(A[1] - A[2])\\n\\nprint(a+b)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"7 1 4\\n\",\n    \"30 20 10\\n\",\n    \"1 4 100\\n\",\n    \"100 1 91\\n\",\n    \"1 45 100\\n\",\n    \"1 2 3\\n\",\n    \"71 85 88\\n\",\n    \"30 38 99\\n\",\n    \"23 82 95\\n\",\n    \"22 41 47\\n\",\n    \"9 94 77\\n\",\n    \"1 53 51\\n\",\n    \"25 97 93\\n\",\n    \"42 53 51\\n\",\n    \"81 96 94\\n\",\n    \"21 5 93\\n\",\n    \"50 13 75\\n\",\n    \"41 28 98\\n\",\n    \"69 46 82\\n\",\n    \"87 28 89\\n\",\n    \"44 45 40\\n\",\n    \"86 97 68\\n\",\n    \"43 92 30\\n\",\n    \"16 70 1\\n\",\n    \"40 46 19\\n\",\n    \"71 38 56\\n\",\n    \"82 21 80\\n\",\n    \"75 8 35\\n\",\n    \"75 24 28\\n\",\n    \"78 23 56\\n\",\n    \"85 31 10\\n\",\n    \"76 50 9\\n\",\n    \"95 37 34\\n\",\n    \"84 61 35\\n\",\n    \"87 85 37\\n\",\n    \"1 3 2\\n\",\n    \"4 2 6\\n\",\n    \"6 9 3\\n\",\n    \"12 4 8\\n\",\n    \"15 10 5\\n\",\n    \"1 50 17\\n\",\n    \"10 5 15\\n\",\n    \"8 1 9\\n\",\n    \"3 5 4\\n\",\n    \"2 1 3\\n\",\n    \"1 8 2\\n\",\n    \"1 100 2\\n\",\n    \"1 4 6\\n\"\n  ],\n  \"outputs\": [\n    \"6\\n\",\n    \"20\\n\",\n    \"99\\n\",\n    \"99\\n\",\n    \"99\\n\",\n    \"2\\n\",\n    \"17\\n\",\n    \"69\\n\",\n    \"72\\n\",\n    \"25\\n\",\n    \"85\\n\",\n    \"52\\n\",\n    \"72\\n\",\n    \"11\\n\",\n    \"15\\n\",\n    \"88\\n\",\n    \"62\\n\",\n    \"70\\n\",\n    \"36\\n\",\n    \"61\\n\",\n    \"5\\n\",\n    \"29\\n\",\n    \"62\\n\",\n    \"69\\n\",\n    \"27\\n\",\n    \"33\\n\",\n    \"61\\n\",\n    \"67\\n\",\n    \"51\\n\",\n    \"55\\n\",\n    \"75\\n\",\n    \"67\\n\",\n    \"61\\n\",\n    \"49\\n\",\n    \"50\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"8\\n\",\n    \"10\\n\",\n    \"49\\n\",\n    \"10\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"7\\n\",\n    \"99\\n\",\n    \"5\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/723/A",
  "starter_code": ""
}