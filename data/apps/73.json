{
  "task_id": "APPS/73",
  "problem_id": 73,
  "prompt": "Mister B once received a gift: it was a book about aliens, which he started read immediately. This book had c pages.\n\nAt first day Mister B read v_0 pages, but after that he started to speed up. Every day, starting from the second, he read a pages more than on the previous day (at first day he read v_0 pages, at second\u00a0\u2014 v_0 + a pages, at third\u00a0\u2014 v_0 + 2a pages, and so on). But Mister B is just a human, so he physically wasn't able to read more than v_1 pages per day.\n\nAlso, to refresh his memory, every day, starting from the second, Mister B had to reread last l pages he read on the previous day. Mister B finished the book when he read the last page for the first time.\n\nHelp Mister B to calculate how many days he needed to finish the book.\n\n\n-----Input-----\n\nFirst and only line contains five space-separated integers: c, v_0, v_1, a and l (1 \u2264 c \u2264 1000, 0 \u2264 l < v_0 \u2264 v_1 \u2264 1000, 0 \u2264 a \u2264 1000) \u2014 the length of the book in pages, the initial reading speed, the maximum reading speed, the acceleration in reading speed and the number of pages for rereading.\n\n\n-----Output-----\n\nPrint one integer \u2014 the number of days Mister B needed to finish the book.\n\n\n-----Examples-----\nInput\n5 5 10 5 4\n\nOutput\n1\n\nInput\n12 4 12 4 1\n\nOutput\n3\n\nInput\n15 1 100 0 0\n\nOutput\n15\n\n\n\n-----Note-----\n\nIn the first sample test the book contains 5 pages, so Mister B read it right at the first day.\n\nIn the second sample test at first day Mister B read pages number 1 - 4, at second day\u00a0\u2014 4 - 11, at third day\u00a0\u2014 11 - 12 and finished the book.\n\nIn third sample test every day Mister B read 1 page of the book, so he finished in 15 days.",
  "solutions": "[\"read = lambda: map(int, input().split())\\nc, v0, v1, a, l = read()\\ncur = 0\\ncnt = 0\\nwhile cur < c:\\n    cur = max(0, cur - l)\\n    cur += min(v1, v0 + a * cnt)\\n    cnt += 1\\nprint(cnt)\", \"c,v0,v1,a,l = map(int,input().split())\\ncnt = 0\\nans = 0\\nv = v0\\nwhile(cnt < c):\\n\\tcnt += v\\n\\tif(ans != 0):\\n\\t\\tcnt -= l\\n\\tif(v + a < v1):\\n\\t\\tv += a\\n\\telse:\\n\\t\\tv = v1\\n\\tans += 1\\nprint(ans)\", \"import math\\nc, v0,v1,a,l = list(map(int, input().split()))\\nn = 0\\nans = 0\\nwhile n < c:\\n    ans+=1\\n    if n>0:\\n        n-=l\\n    n+=v0\\n    if v0 < v1:\\n        v0 = min(v0+a, v1)\\nprint(ans)\\n\\n\", \"from sys import stdin, stdout\\n\\nc, v0, v1, a, l = map(int, stdin.readline().split())\\ncnt = 0 \\nans = 0\\n\\nwhile cnt < c:\\n    cnt += v0\\n    v0 = min(v0 + a, v1)\\n    ans += 1\\n    \\n    if cnt >= c:\\n        break\\n    \\n    cnt -= l\\n\\n\\nstdout.write(str(ans))\", \"3\\n\\ndef read_ints():\\n\\treturn [int(i) for i in input().split()]\\n\\nc, v0, v1, a, l = read_ints()\\ns = 0\\nd = 1\\n\\nwhile s < c:\\n\\ts = min(s + v0, c)\\n\\tif s == c:\\n\\t\\tbreak\\n\\tv0 = min(v0 + a, v1)\\n\\ts -= l\\n\\td += 1\\n\\nprint(d)\", \"c,v0,v1,a,l=map(int,input().split())\\nn=0\\nwhile c > 0:\\n    c-=v0\\n    v0=min(v0+a,v1)\\n    if n > 0:\\n        c+=l\\n    n+=1\\nprint(n)\", \"c, v0, v1, a, l = map(int, input().split())\\nans, cur = 1, v0\\nwhile cur < c:\\n    v0 = min(v1, v0 + a)\\n    cur += v0 - l\\n    ans += 1\\n\\nprint(ans)\", \"c, v0, v1, a, l = map(int, input().split())\\n\\nans = 0\\nwhile c > 0:\\n\\tif ans: c += l\\n\\tc -= min(v0, v1)\\n\\tv0 += a\\n\\tans += 1\\nprint(ans)\", \"line = input()\\nnrs = list(map(int, line.split(' ')))\\nc = nrs[0]\\nv0 = nrs[1]\\nv1 = nrs[2]\\na = nrs[3]\\nl = nrs[4]\\npages_read = v0\\ndays = 1\\npages = v0\\nwhile pages_read < nrs[0]:\\n    pages += a\\n    if pages > v1:\\n        pages = v1\\n    pages_read -= l\\n    pages_read += pages\\n    days += 1\\n\\nprint(days)\\n\", \"def list_input():\\n    return list(map(int,input().split()))\\ndef map_input():\\n    return map(int,input().split())\\ndef map_string():\\n    return input().split()\\n    \\nc,v0,v1,a,l = map_input()\\ncur = 0\\ncnt = 0\\nwhile cur < c:\\n    if cnt != 0:\\n        cur += min(v1,v0+cnt*a)-l\\n    else:\\n        cur += min(v1,v0+cnt*a)\\n    cnt += 1\\nprint(cnt)    \", \"c, v1, v2, a, l = map(int, input().split())\\nread = 0\\nres = 0\\nvc = v1\\nwhile read < c:\\n    back = min(read, l)\\n    #read -= back\\n    read += vc - back\\n    vc = min(vc + a, v2)\\n    res += 1\\nprint(res)\", \"def solve(inp):\\n    c, v0, v1, a, l = list(map(int, inp.split(\\\" \\\", 4)))\\n    pages_read = 0\\n    days_passed = 0\\n    while pages_read < c:\\n        pages_read += v0 - min(l, pages_read)\\n        days_passed += 1\\n        v0 = min(v0 + a, v1)\\n    return days_passed\\n\\n\\ndef __starting_point():\\n    print(solve(input()))\\n\\n__starting_point()\", \"\\nc, v0, v1, a, l = list(map(int, input().split()))\\n\\nv = v0\\nt = 1\\nlast = v0\\n\\nif last >= c:\\n    print(1)\\n    return\\n\\nwhile last < c:\\n    v = min(v1, v0 + t * a) - l\\n    last += v\\n    t += 1\\n\\nprint(t)\\n\", \"c, v0, v1, a, l = map(int, input().split())\\nx = 0\\ni = 0\\nwhile x < c:\\n\\tx += min(v0 + a*i, v1) - (l * (i > 0))\\n\\ti+=1\\nprint(i)\", \"c, v0, v1, a, l = map(int, input().split())\\ncur = v0\\nrem = c\\ntmp = 0\\nres = 0\\nwhile rem > 0 :\\n    res += 1\\n    rem = rem - (cur - tmp)\\n    cur = min(cur + a, v1)\\n    tmp = l\\nprint(res)\", \"'''input\\n5 5 10 5 4\\n'''\\nc, v0, v1, a, l = list(map(int, input().split()))\\np = 0\\nd = 0\\nwhile True:\\n\\tp += min(v1, v0 + a*d)\\n\\td += 1\\n\\tif p >= c:\\n\\t\\tprint(d)\\n\\t\\tbreak\\n\\tp -= l\\n\\n\", \"#!/usr/bin/env python3\\nimport sys\\n\\ndef main():\\n    c, v0, v1, a, l = list(map(int, sys.stdin.readline().split()))\\n    day = 0\\n    v = v0\\n    read = 0\\n    while read < c:\\n        day += 1\\n        read = max(read - l, 0) + v\\n        v = min(v + a, v1)\\n    print(day)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"c, v0, v1, a, l = [int(i) for i in input().split()]\\nif v0 >= c:\\n    print(1)\\n    return\\nelse:\\n    d = 1\\n    cnt = c - v0\\n    ca = 0\\n    while cnt > 0:\\n        ca += a\\n        cr = v0 + ca\\n        if cr > v1:\\n            cr = v1\\n        cnt -= (cr - l)\\n        d += 1\\n    print(d\\n          )\\n        \\n\", \"c, v, v1, a, l = map(int, input().split())\\n\\nfor i in range(1, 1000000):\\n    c -= v\\n    \\n    if i > 1:\\n        c += l\\n        \\n    if c <= 0:\\n        print(i)\\n        break\\n    \\n    v += a\\n    v = min(v, v1)\", \"c, v0, v1, a, l = map(int, input().split(\\\" \\\"))\\n\\ndays = 0\\n\\nwhile c > 0:\\n    if days > 0:\\n        c += l\\n    c -= v0\\n    v0 += a\\n    if v1 < v0:\\n        v0 = v1\\n    days += 1\\n\\nprint(days)\", \"c, v0, v1, a, l = list(map(int, input().split()))\\n\\nv = v0;\\n\\nread = v;\\nday = 1;\\nv += a\\nv = min(v, v1)\\n\\n\\nif(read >= c):\\n    print(day)\\n    return;\\n\\n\\nwhile(True):\\n    day +=1;\\n    read += v - l\\n\\n    v+=a\\n    v = min(v, v1)\\n    if(read >= c):\\n        print(day)\\n        return;\\n\\n\", \"c, v0, v1, a, l = list(map(int, input().split()))\\n\\nans = 0\\nv = v0\\np = 0\\nwhile p < c:\\n    p = max(p - l, 0)\\n    p += v\\n    v = min(v + a, v1)\\n    ans += 1\\n\\nprint(ans)\\n\", \"c, v0, v1, a, l = [int(i) for i in input().split()]\\n\\ni, d = 1, 0\\n\\nwhile 1:\\n    if d > 0: i -= l\\n    v = min(v0 + d * a, v1)\\n    d += 1\\n    i += v\\n    if i > c: break\\n\\nprint(d)\\n\", \"I = lambda : list(map(int, input().split()))\\nc, v0, v1, a, l = I()\\nrd = 0\\nday = 0\\nwhile (rd < c):\\n    canread = min(v0 + day*a, v1)\\n    start = max(rd-l, 0)\\n    rd = start + canread\\n    day += 1\\n\\nprint(day)\\n\", \"import sys\\n\\ninput = sys.stdin.readline\\n\\nc, v0, v1, a, l = map(int,input().split())\\n\\nday = 0\\nread = 0\\n\\nwhile True:\\n    if (read >= c):\\n        break\\n    if (v0 + a * day < v1):\\n        read += v0 + a * day\\n    else:\\n        read += v1\\n    if (day > 0):\\n        read -= l\\n    day += 1\\n\\nprint(day)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5 5 10 5 4\\n\",\n    \"12 4 12 4 1\\n\",\n    \"15 1 100 0 0\\n\",\n    \"1 1 1 0 0\\n\",\n    \"1000 999 1000 1000 998\\n\",\n    \"1000 2 2 5 1\\n\",\n    \"1000 1 1 1000 0\\n\",\n    \"737 41 74 12 11\\n\",\n    \"1000 1000 1000 0 999\\n\",\n    \"765 12 105 5 7\\n\",\n    \"15 2 2 1000 0\\n\",\n    \"1000 1 1000 1000 0\\n\",\n    \"20 3 7 1 2\\n\",\n    \"1000 500 500 1000 499\\n\",\n    \"1 1000 1000 1000 0\\n\",\n    \"1000 2 1000 56 0\\n\",\n    \"1000 2 1000 802 0\\n\",\n    \"16 1 8 2 0\\n\",\n    \"20 6 10 2 2\\n\",\n    \"8 2 12 4 1\\n\",\n    \"8 6 13 2 5\\n\",\n    \"70 4 20 87 0\\n\",\n    \"97 8 13 234 5\\n\",\n    \"16 4 23 8 3\\n\",\n    \"65 7 22 7 4\\n\",\n    \"93 10 18 11 7\\n\",\n    \"86 13 19 15 9\\n\",\n    \"333 17 50 10 16\\n\",\n    \"881 16 55 10 12\\n\",\n    \"528 11 84 3 9\\n\",\n    \"896 2 184 8 1\\n\",\n    \"236 10 930 9 8\\n\",\n    \"784 1 550 14 0\\n\",\n    \"506 1 10 4 0\\n\",\n    \"460 1 3 2 0\\n\",\n    \"701 1 3 1 0\\n\",\n    \"100 49 50 1000 2\\n\",\n    \"100 1 100 100 0\\n\",\n    \"12 1 4 2 0\\n\",\n    \"22 10 12 0 0\\n\",\n    \"20 10 15 1 4\\n\",\n    \"1000 5 10 1 4\\n\",\n    \"1000 1 1000 1 0\\n\",\n    \"4 1 2 2 0\\n\",\n    \"1 5 5 1 1\\n\",\n    \"19 10 11 0 2\\n\",\n    \"1 2 3 0 0\\n\",\n    \"10 1 4 10 0\\n\",\n    \"20 3 100 1 1\\n\",\n    \"1000 5 9 5 0\\n\",\n    \"1 11 12 0 10\\n\",\n    \"1 1 1 1 0\\n\",\n    \"1000 1 20 1 0\\n\",\n    \"9 1 4 2 0\\n\",\n    \"129 2 3 4 0\\n\",\n    \"4 2 2 0 1\\n\",\n    \"1000 1 10 100 0\\n\",\n    \"100 1 100 1 0\\n\",\n    \"8 3 4 2 0\\n\",\n    \"20 1 6 4 0\\n\",\n    \"8 2 4 2 0\\n\",\n    \"11 5 6 7 2\\n\",\n    \"100 120 130 120 0\\n\",\n    \"7 1 4 1 0\\n\",\n    \"5 3 10 0 2\\n\",\n    \"5 2 2 0 0\\n\",\n    \"1000 10 1000 10 0\\n\",\n    \"25 3 50 4 2\\n\",\n    \"9 10 10 10 9\\n\",\n    \"17 10 12 6 5\\n\",\n    \"15 5 10 3 0\\n\",\n    \"8 3 5 1 0\\n\",\n    \"19 1 12 5 0\\n\",\n    \"1000 10 1000 1 0\\n\",\n    \"100 1 2 1000 0\\n\",\n    \"20 10 11 1000 9\\n\",\n    \"16 2 100 1 1\\n\",\n    \"18 10 13 2 5\\n\",\n    \"12 3 5 3 1\\n\",\n    \"17 3 11 2 0\\n\",\n    \"4 2 100 1 1\\n\",\n    \"7 4 5 2 3\\n\",\n    \"100 1 2 2 0\\n\",\n    \"50 4 5 5 0\\n\",\n    \"1 2 2 0 1\\n\",\n    \"1000 2 3 10 1\\n\",\n    \"500 10 500 1000 0\\n\",\n    \"1000 4 12 1 0\\n\",\n    \"18 10 13 1 5\\n\",\n    \"7 3 6 2 2\\n\",\n    \"15 5 100 1 2\\n\",\n    \"100 1 10 1 0\\n\",\n    \"8 2 7 5 1\\n\",\n    \"11 2 4 1 1\\n\",\n    \"1000 500 900 100 300\\n\",\n    \"7 1 2 5 0\\n\",\n    \"7 3 5 3 2\\n\",\n    \"7 3 10 2 1\\n\",\n    \"1000 501 510 1 499\\n\",\n    \"1000 1 1000 2 0\\n\",\n    \"1 5 5 0 0\\n\",\n    \"18 10 15 1 5\\n\",\n    \"100 4 1000 1 2\\n\",\n    \"20 2 40 1 1\\n\",\n    \"1 11 1000 100 1\\n\",\n    \"6 4 4 1 2\\n\",\n    \"8 3 5 3 1\\n\",\n    \"10 5 7 1 2\\n\",\n    \"400 100 198 1 99\\n\",\n    \"3 1 2 5 0\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"3\\n\",\n    \"15\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"999\\n\",\n    \"1000\\n\",\n    \"13\\n\",\n    \"1\\n\",\n    \"17\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"501\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"13\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"12\\n\",\n    \"23\\n\",\n    \"19\\n\",\n    \"16\\n\",\n    \"8\\n\",\n    \"12\\n\",\n    \"53\\n\",\n    \"154\\n\",\n    \"235\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"169\\n\",\n    \"45\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"112\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"60\\n\",\n    \"4\\n\",\n    \"44\\n\",\n    \"3\\n\",\n    \"101\\n\",\n    \"14\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"14\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"37\\n\",\n    \"51\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"51\\n\",\n    \"11\\n\",\n    \"1\\n\",\n    \"500\\n\",\n    \"2\\n\",\n    \"87\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"15\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"50\\n\",\n    \"32\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"13\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"25\\n\",\n    \"2\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/820/A",
  "starter_code": ""
}