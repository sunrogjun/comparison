{
  "task_id": "APPS/236",
  "problem_id": 236,
  "prompt": "A necklace can be described as a string of links ('-') and pearls ('o'), with the last link or pearl connected to the first one. $0$ \n\nYou can remove a link or a pearl and insert it between two other existing links or pearls (or between a link and a pearl) on the necklace. This process can be repeated as many times as you like, but you can't throw away any parts.\n\nCan you make the number of links between every two adjacent pearls equal? Two pearls are considered to be adjacent if there is no other pearl between them.\n\nNote that the final necklace should remain as one circular part of the same length as the initial necklace.\n\n\n-----Input-----\n\nThe only line of input contains a string $s$ ($3 \\leq |s| \\leq 100$), representing the necklace, where a dash '-' represents a link and the lowercase English letter 'o' represents a pearl.\n\n\n-----Output-----\n\nPrint \"YES\" if the links and pearls can be rejoined such that the number of links between adjacent pearls is equal. Otherwise print \"NO\".\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n-o-o--\nOutput\nYES\nInput\n-o---\n\nOutput\nYES\nInput\n-o---o-\n\nOutput\nNO\nInput\nooo\n\nOutput\nYES",
  "solutions": "[\"def main():\\n    s = input()\\n    links = s.count('-')\\n    pearls = s.count('o')\\n    if pearls == 0 or links % pearls == 0:\\n        print('YES')\\n    else:\\n        print('NO')\\n\\nmain()\\n\", \"s = input()\\na = s.count('o')\\nb = s.count('-')\\nif (a == 0):\\n    print('YES')\\nelif b % a == 0:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"s = input()\\n\\na = s.count('-')\\nb = s.count('o')\\n\\nif(b == 0 or a % b == 0):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"s=input()\\nb=s.count('o')\\nn=s.count('-')\\nif n==0 or b==0:\\n    print('YES')\\nelse:\\n    if n%b==0:\\n        print('YES')\\n    else:\\n        print('NO')\", \"s = input()\\nx = s.count('o')\\ny = s.count('-')\\nif x == 0 or y == 0:\\n    print('YES')\\nelse:\\n    print('YES' if y % x == 0 else 'NO')\", \"chain = input()\\npearls = chain.count('o')\\nelements = chain.count('-')\\nif pearls == 0:\\n    print ('YES')\\nelif (elements%pearls)==0:\\n    print ('YES')\\nelse:\\n    print ('NO')\\n\", \"s = input()\\nno = s.count('o')\\nif no == 0:\\n    print('YES')\\n    return\\nnt = len(s) - no\\nif nt % no == 0:\\n    print('YES')\\nelse:\\n    print('NO')\", \"s = input()\\nt = s.count('o')\\nc = s.count('-')\\nif (t == 0 or c % t == 0):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"s = input()\\no = s.count('o')\\np = s.count('-')\\nif o == 0:\\n    print('YES')\\n    return\\nif p % o == 0:\\n    print('YES')\\nelse:\\n    print('NO')\", \"from collections import Counter\\n\\ns = input()\\n\\nc = Counter(s)\\n\\nif c['o'] == 0:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"YES\\\" if c['-']%c['o'] == 0 else \\\"NO\\\")\", \"s = input()\\nc1 = s.count('-')\\nc2 = s.count('o')\\nif c2 == 0 or (c2 != 0 and c1 % c2 == 0):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"def go():\\n    s = input()\\n    p = s.count('o')\\n    l = s.count('-')\\n\\n    if p == 0:\\n        return 'YES'\\n    if l % p == 0:\\n        return 'YES'\\n    return 'NO'\\nprint(go())\\n\", \"s = input()\\np = len([char for char in s if char == 'o'])\\nl = len([char for char in s if char == '-'])\\nif p == 0 or l % p == 0:\\n\\tprint('YES')\\nelse:\\n\\tprint('NO')\", \"'''input\\n---\\n'''\\ndef ii():\\n\\treturn int(input())\\ndef ai():\\n\\treturn map(int,input().split())\\ns = input()\\np = s.count('-')\\nf = s.count('o')\\nif f is 0:\\n\\tprint(\\\"YES\\\")\\n\\treturn\\nif p % f == 0 :\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\", \"c1 = c2 = 0\\nfor i in input():\\n    if i == 'o':\\n        c2+=1\\n    else:\\n        c1+=1\\nif c2 == 0:\\n    print(\\\"YES\\\")\\nelif c1%c2:\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\", \"s = input()\\n\\nx = s.count('o')\\ny = len(s) - x\\n\\nif (x <= 1):\\n    print(\\\"YES\\\")\\nelse:\\n    if (y % x == 0):\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\", \"from sys import stdin, stdout\\n\\ndef main():\\n    s = input()\\n    p = sum([x == 'o' for x in s])\\n    l = sum([x == '-' for x in s])\\n\\n    if p == 0 or l % p == 0:\\n        print('YES')\\n    else:\\n        print('NO')\\n\\n\\n\\n\\nmain()\\n\", \"def ii():\\n    return int(input())\\ndef mi():\\n    return map(int, input().split())\\ndef li():\\n    return list(mi())\\n\\ns = input().strip()\\na = s.count('-')\\nb = s.count('o')\\nif b:\\n    print('YES' if a % b == 0 else 'NO')\\nelse:\\n    print('YES')\", \"s = input().strip()\\n\\npearls = s.count(\\\"o\\\")\\nlinks = s.count(\\\"-\\\")\\n\\nif not pearls or links % pearls == 0:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"from collections import Counter\\nnl = Counter(input())\\nprint('YES' if len(nl) == 1 or nl['-'] % nl['o'] == 0 else 'NO')\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"-o-o--\\n\",\n    \"-o---\\n\",\n    \"-o---o-\\n\",\n    \"ooo\\n\",\n    \"---\\n\",\n    \"--o-o-----o----o--oo-o-----ooo-oo---o--\\n\",\n    \"-o--o-oo---o-o-o--o-o----oo------oo-----o----o-o-o--oo-o--o---o--o----------o---o-o-oo---o--o-oo-o--\\n\",\n    \"-ooo--\\n\",\n    \"---o--\\n\",\n    \"oo-ooo\\n\",\n    \"------o-o--o-----o--\\n\",\n    \"--o---o----------o----o----------o--o-o-----o-oo---oo--oo---o-------------oo-----o-------------o---o\\n\",\n    \"----------------------------------------------------------------------------------------------------\\n\",\n    \"-oo-oo------\\n\",\n    \"---------------------------------o----------------------------oo------------------------------------\\n\",\n    \"oo--o--o--------oo----------------o-----------o----o-----o----------o---o---o-----o---------ooo---\\n\",\n    \"--o---oooo--o-o--o-----o----ooooo--o-oo--o------oooo--------------ooo-o-o----\\n\",\n    \"-----------------------------o--o-o-------\\n\",\n    \"o-oo-o--oo----o-o----------o---o--o----o----o---oo-ooo-o--o-\\n\",\n    \"oooooooooo-ooo-oooooo-ooooooooooooooo--o-o-oooooooooooooo-oooooooooooooo\\n\",\n    \"-----------------o-o--oo------o--------o---o--o----------------oooo-------------ooo-----ooo-----o\\n\",\n    \"ooo-ooooooo-oo-ooooooooo-oooooooooooooo-oooo-o-oooooooooo--oooooooooooo-oooooooooo-ooooooo\\n\",\n    \"oo-o-ooooo---oo---o-oo---o--o-ooo-o---o-oo---oo---oooo---o---o-oo-oo-o-ooo----ooo--oo--o--oo-o-oo\\n\",\n    \"-----o-----oo-o-o-o-o----o---------oo---ooo-------------o----o---o-o\\n\",\n    \"oo--o-o-o----o-oooo-ooooo---o-oo--o-o--ooo--o--oooo--oo----o----o-o-oooo---o-oooo--ooo-o-o----oo---\\n\",\n    \"------oo----o----o-oo-o--------o-----oo-----------------------o------------o-o----oo---------\\n\",\n    \"-o--o--------o--o------o---o-o----------o-------o-o-o-------oo----oo------o------oo--o--\\n\",\n    \"------------------o----------------------------------o-o-------------\\n\",\n    \"-------------o----ooo-----o-o-------------ooo-----------ooo------o----oo---\\n\",\n    \"-------o--------------------o--o---------------o---o--o-----\\n\",\n    \"------------------------o------------o-----o----------------\\n\",\n    \"------oo----------o------o-----o---------o------------o----o--o\\n\",\n    \"------------o------------------o-----------------------o-----------o\\n\",\n    \"o---o---------------\\n\",\n    \"----------------------o---o----o---o-----------o-o-----o\\n\",\n    \"----------------------------------------------------------------------o-o---------------------\\n\",\n    \"----o---o-------------------------\\n\",\n    \"o----------------------oo----\\n\",\n    \"-o-o--o-o--o-----o-----o-o--o-o---oooo-o\\n\",\n    \"-o-ooo-o--o----o--o-o-oo-----------o-o-\\n\",\n    \"o-------o-------o-------------\\n\",\n    \"oo----------------------o--------------o--------------o-----\\n\",\n    \"-----------------------------------o---------------------o--------------------------\\n\",\n    \"--o--o----o-o---o--o----o-o--oo-----o-oo--o---o---ooo-o--\\n\",\n    \"---------------o-o----\\n\",\n    \"o------ooo--o-o-oo--o------o----ooo-----o-----o-----o-ooo-o---o----oo\\n\",\n    \"----o----o\\n\",\n    \"o--o--o--o--o--o--o--o--o--o--o--o--\\n\",\n    \"o---o---o---o---o----o----o----o---o---o---o\\n\",\n    \"o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-\\n\",\n    \"-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o-o\\n\",\n    \"o----------o----------o----------o----------o----------o----------o----------o----------o----------o\\n\",\n    \"o---------o---------o---------o---------o---------o---------o---------o---------o\\n\",\n    \"--------o--------o--------o--------o--------o--------o--------o--------o--------\\n\",\n    \"o---o----\\n\",\n    \"---o----o\\n\",\n    \"-o-\\n\",\n    \"------oooo\\n\",\n    \"oo--\\n\",\n    \"---o\\n\",\n    \"ooo-\\n\",\n    \"oooooooo----------\\n\",\n    \"oooo--\\n\",\n    \"o-ooooo\\n\",\n    \"-oo\\n\",\n    \"ooooo-\\n\",\n    \"ooo---------\\n\",\n    \"oo-\\n\",\n    \"---ooo\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/980/A",
  "starter_code": ""
}