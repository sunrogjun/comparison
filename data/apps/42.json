{
  "task_id": "APPS/42",
  "problem_id": 42,
  "prompt": "You are given a binary string $s$.\n\nFind the number of distinct cyclical binary strings of length $n$ which contain $s$ as a substring.\n\nThe cyclical string $t$ contains $s$ as a substring if there is some cyclical shift of string $t$, such that $s$ is a substring of this cyclical shift of $t$.\n\nFor example, the cyclical string \"000111\" contains substrings \"001\", \"01110\" and \"10\", but doesn't contain \"0110\" and \"10110\".\n\nTwo cyclical strings are called different if they differ from each other as strings. For example, two different strings, which differ from each other by a cyclical shift, are still considered different cyclical strings.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 40$)\u00a0\u2014 the length of the target string $t$.\n\nThe next line contains the string $s$ ($1 \\le |s| \\le n$)\u00a0\u2014 the string which must be a substring of cyclical string $t$. String $s$ contains only characters '0' and '1'.\n\n\n-----Output-----\n\nPrint the only integer\u00a0\u2014 the number of distinct cyclical binary strings $t$, which contain $s$ as a substring.\n\n\n-----Examples-----\nInput\n2\n0\n\nOutput\n3\nInput\n4\n1010\n\nOutput\n2\nInput\n20\n10101010101010\n\nOutput\n962\n\n\n-----Note-----\n\nIn the first example, there are three cyclical strings, which contain \"0\"\u00a0\u2014 \"00\", \"01\" and \"10\".\n\nIn the second example, there are only two such strings\u00a0\u2014 \"1010\", \"0101\".",
  "solutions": "[\"n=int(input())\\ns=[c=='1' for c in input()]\\nm=len(s)\\nz=[[0,0]]\\nfor c in s:\\n ind = z[-1][c]\\n z[-1][c] = len(z)\\n z.append(z[ind][:])\\nassert(len(z) == m+1)\\nz[m][0] = z[m][1] = m # make it sticky\\n\\n# how many things match directly\\ndp = [0 for _ in range(m+1)]\\ndp[0] = 1\\nfor i in range(n):\\n ndp = [0 for _ in range(m+1)]\\n for i in range(m+1):\\n  ndp[z[i][0]] += dp[i]\\n  ndp[z[i][1]] += dp[i]\\n dp = ndp\\nres = dp[m]\\n\\nfor k in range(1, m):\\n s0 = 0\\n for c in s[-k:]:\\n  s0 = z[s0][c]\\n dp = [0 for _ in range(m+1)]\\n dp[s0] = 1\\n for i in range(n - k):\\n  ndp = [0 for _ in range(m+1)]\\n  for i in range(m+1):\\n   ndp[z[i][0]] += dp[i]\\n   ndp[z[i][1]] += dp[i]\\n  dp = ndp\\n for s1 in range(m): # skip m\\n  v = dp[s1]\\n  for c in s[-k:]:\\n   if s1 == m: v = 0\\n   s1 = z[s1][c]\\n  if s1 == m: res += v\\nprint(res)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2\\n0\\n\",\n    \"4\\n1010\\n\",\n    \"20\\n10101010101010\\n\",\n    \"2\\n11\\n\",\n    \"5\\n00101\\n\",\n    \"10\\n100101\\n\",\n    \"4\\n0011\\n\",\n    \"7\\n1100\\n\",\n    \"8\\n01010001\\n\",\n    \"6\\n10\\n\",\n    \"17\\n011100101100110\\n\",\n    \"22\\n1110011010100111\\n\",\n    \"17\\n1110110111010101\\n\",\n    \"11\\n10100000100\\n\",\n    \"20\\n10100001011\\n\",\n    \"16\\n101011\\n\",\n    \"33\\n0001100010001100110000\\n\",\n    \"30\\n111001000100\\n\",\n    \"40\\n1001\\n\",\n    \"31\\n101\\n\",\n    \"18\\n001000011010000\\n\",\n    \"36\\n110110010000\\n\",\n    \"40\\n00000111111100110111000010000010101001\\n\",\n    \"39\\n000000000000000000000000000000000000001\\n\",\n    \"37\\n0101010101010101010101010101010101010\\n\",\n    \"31\\n11011101110000011100\\n\",\n    \"34\\n110000100\\n\",\n    \"35\\n111111100100100\\n\",\n    \"20\\n100010000\\n\",\n    \"21\\n01011101001010001\\n\",\n    \"11\\n00010\\n\",\n    \"16\\n10011000100001\\n\",\n    \"39\\n11101001101111001011110111010010111001\\n\",\n    \"32\\n10101100\\n\",\n    \"13\\n111\\n\",\n    \"4\\n01\\n\",\n    \"8\\n100\\n\",\n    \"9\\n1110\\n\",\n    \"1\\n1\\n\",\n    \"20\\n01100111000\\n\",\n    \"5\\n1\\n\",\n    \"38\\n11111010100111100011\\n\",\n    \"24\\n1101110111000111011\\n\",\n    \"6\\n101111\\n\",\n    \"39\\n1010001010100100001\\n\",\n    \"34\\n1111001001101011101101101\\n\",\n    \"35\\n11100110100\\n\",\n    \"7\\n1111\\n\",\n    \"35\\n010100010101011110110101000\\n\",\n    \"18\\n110101110001\\n\",\n    \"10\\n0110101\\n\",\n    \"38\\n0111110111100000000000100\\n\",\n    \"32\\n101011001\\n\",\n    \"39\\n111011011000100\\n\",\n    \"31\\n00101010000\\n\",\n    \"35\\n100011111010001011100001\\n\",\n    \"39\\n1010000110\\n\",\n    \"34\\n1011010111111001100011110111\\n\",\n    \"37\\n100110110011100100100010110000011\\n\",\n    \"40\\n1010100001001010110011000110001\\n\",\n    \"30\\n11110010111010001010111\\n\",\n    \"36\\n100101110110110111100110010011001\\n\",\n    \"40\\n01011011110\\n\",\n    \"36\\n00001010001000010101111010\\n\",\n    \"40\\n111101001000110000111001110111111110111\\n\",\n    \"37\\n1000101000000000011101011111010011\\n\",\n    \"31\\n0111111101001100\\n\",\n    \"35\\n00010000111011\\n\",\n    \"38\\n11111111111111111111111111111111100000\\n\",\n    \"39\\n000000000000000111111111111111111111111\\n\",\n    \"36\\n000000000011111111111111111111111111\\n\",\n    \"37\\n1111110000000000000000000000000000000\\n\",\n    \"37\\n0000000000000000011111111111111111111\\n\",\n    \"39\\n101010101010101010101010101010101010101\\n\",\n    \"38\\n10101010101010101010101010101010101010\\n\",\n    \"37\\n1010101010101010101010101010101010101\\n\",\n    \"40\\n0101010101010101010101010101010101010101\\n\",\n    \"38\\n00000000000000000000000000000000000000\\n\",\n    \"37\\n0011111111111011011111110111011111111\\n\",\n    \"35\\n00001000110100100101101111110101111\\n\",\n    \"40\\n0000000000100000100000000000000000000000\\n\",\n    \"37\\n0000110000100100011101000100000001010\\n\",\n    \"40\\n1111111111111011111111101111111111111111\\n\",\n    \"38\\n10100000011100111001100101000100001000\\n\",\n    \"40\\n1111110111111111111111011111111111111110\\n\",\n    \"40\\n0000010010000000000001000110000001010100\\n\",\n    \"39\\n100110001010001000000001010000000110100\\n\",\n    \"38\\n01011110100111011\\n\",\n    \"37\\n100110111000011010011010110011101\\n\",\n    \"30\\n000000000110001011111011000\\n\",\n    \"33\\n101110110010101\\n\",\n    \"34\\n1101010100001111111\\n\",\n    \"32\\n01100010110111100111110010\\n\",\n    \"40\\n000010101101010011111101011110010011\\n\",\n    \"32\\n0111010100\\n\",\n    \"31\\n0101100101100000111001\\n\",\n    \"39\\n00111\\n\",\n    \"33\\n00111101\\n\",\n    \"37\\n1010001011111100110101110\\n\",\n    \"37\\n111000011\\n\",\n    \"37\\n011111001111100010001011000001100111\\n\",\n    \"40\\n0000\\n\",\n    \"40\\n1000\\n\",\n    \"40\\n0100\\n\",\n    \"40\\n1100\\n\",\n    \"40\\n0010\\n\",\n    \"40\\n1010\\n\",\n    \"40\\n0110\\n\",\n    \"40\\n1110\\n\",\n    \"40\\n0001\\n\",\n    \"40\\n0101\\n\",\n    \"40\\n1101\\n\",\n    \"40\\n0011\\n\",\n    \"40\\n1011\\n\",\n    \"40\\n0111\\n\",\n    \"40\\n1111\\n\",\n    \"40\\n000\\n\",\n    \"40\\n100\\n\",\n    \"40\\n010\\n\",\n    \"40\\n110\\n\",\n    \"40\\n001\\n\",\n    \"40\\n101\\n\",\n    \"40\\n011\\n\",\n    \"40\\n111\\n\",\n    \"40\\n00\\n\",\n    \"40\\n01\\n\",\n    \"40\\n10\\n\",\n    \"40\\n11\\n\",\n    \"40\\n0\\n\",\n    \"40\\n1\\n\",\n    \"1\\n0\\n\"\n  ],\n  \"outputs\": [\n    \"3\",\n    \"2\",\n    \"962\",\n    \"1\",\n    \"5\",\n    \"155\",\n    \"4\",\n    \"56\",\n    \"8\",\n    \"62\",\n    \"68\",\n    \"1408\",\n    \"34\",\n    \"11\",\n    \"10230\",\n    \"15248\",\n    \"67584\",\n    \"7857600\",\n    \"1029761794578\",\n    \"2110188507\",\n    \"144\",\n    \"603021324\",\n    \"160\",\n    \"39\",\n    \"37\",\n    \"63488\",\n    \"1121963008\",\n    \"36696800\",\n    \"40840\",\n    \"336\",\n    \"638\",\n    \"64\",\n    \"78\",\n    \"519167992\",\n    \"5435\",\n    \"14\",\n    \"208\",\n    \"270\",\n    \"1\",\n    \"10230\",\n    \"31\",\n    \"9961415\",\n    \"768\",\n    \"6\",\n    \"40894230\",\n    \"17408\",\n    \"585195800\",\n    \"29\",\n    \"8960\",\n    \"1152\",\n    \"75\",\n    \"311296\",\n    \"263480312\",\n    \"654211584\",\n    \"32331574\",\n    \"71680\",\n    \"20653344998\",\n    \"2176\",\n    \"592\",\n    \"20480\",\n    \"3840\",\n    \"288\",\n    \"21354424310\",\n    \"36864\",\n    \"80\",\n    \"296\",\n    \"1015777\",\n    \"73382400\",\n    \"38\",\n    \"39\",\n    \"36\",\n    \"37\",\n    \"37\",\n    \"39\",\n    \"2\",\n    \"37\",\n    \"2\",\n    \"1\",\n    \"37\",\n    \"35\",\n    \"40\",\n    \"37\",\n    \"40\",\n    \"38\",\n    \"40\",\n    \"40\",\n    \"39\",\n    \"79690256\",\n    \"592\",\n    \"240\",\n    \"8647584\",\n    \"1114095\",\n    \"2048\",\n    \"640\",\n    \"133105408\",\n    \"15872\",\n    \"419341377312\",\n    \"1068677566\",\n    \"151552\",\n    \"9626769261\",\n    \"74\",\n    \"848129718780\",\n    \"1060965767804\",\n    \"1029761794578\",\n    \"1060965767804\",\n    \"1029761794578\",\n    \"1000453489698\",\n    \"1029761794578\",\n    \"1060965767804\",\n    \"1060965767804\",\n    \"1000453489698\",\n    \"1029761794578\",\n    \"1060965767804\",\n    \"1029761794578\",\n    \"1060965767804\",\n    \"848129718780\",\n    \"1060965767805\",\n    \"1099282801648\",\n    \"1093624901051\",\n    \"1099282801648\",\n    \"1099282801648\",\n    \"1093624901051\",\n    \"1099282801648\",\n    \"1060965767805\",\n    \"1099282801649\",\n    \"1099511627774\",\n    \"1099511627774\",\n    \"1099282801649\",\n    \"1099511627775\",\n    \"1099511627775\",\n    \"1\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1038/F",
  "starter_code": ""
}