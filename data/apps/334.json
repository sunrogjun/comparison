{
  "task_id": "APPS/334",
  "problem_id": 334,
  "prompt": "A monster is chasing after Rick and Morty on another planet. They're so frightened that sometimes they scream. More accurately, Rick screams at times b, b + a, b + 2a, b + 3a, ... and Morty screams at times d, d + c, d + 2c, d + 3c, ....  [Image] \n\nThe Monster will catch them if at any point they scream at the same time, so it wants to know when it will catch them (the first time they scream at the same time) or that they will never scream at the same time.\n\n\n-----Input-----\n\nThe first line of input contains two integers a and b (1 \u2264 a, b \u2264 100). \n\nThe second line contains two integers c and d (1 \u2264 c, d \u2264 100).\n\n\n-----Output-----\n\nPrint the first time Rick and Morty will scream at the same time, or  - 1 if they will never scream at the same time.\n\n\n-----Examples-----\nInput\n20 2\n9 19\n\nOutput\n82\n\nInput\n2 1\n16 12\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first sample testcase, Rick's 5th scream and Morty's 8th time are at time 82. \n\nIn the second sample testcase, all Rick's screams will be at odd times and Morty's will be at even times, so they will never scream at the same time.",
  "solutions": "[\"a, b = map(int,input().split())\\nc, d = map(int,input().split())\\nONE = set()\\nTWO = set()\\nfor i in range(b, 50000, a):\\n    ONE.add(i)\\nfor i in range(d, 50000, c):\\n    TWO.add(i)\\n\\nopt = 99999\\nfor i in ONE:\\n    if i in TWO:\\n        opt = min(opt, i)\\nif opt == 99999:\\n    print(-1)\\nelse:\\n    print(opt)\", \"import sys\\n\\na, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\n\\ncur1, cur2 = b, d\\nx = set()\\ny = set()\\n\\nfor i in range(100000):\\n    x.add(cur1)\\n    y.add(cur2)\\n    cur1 += a\\n    cur2 += c\\n\\nfor i in range(100000):\\n    if i in x and i in y:\\n        print(i)\\n        return\\n\\nprint(-1)\\n\\n\", \"a, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\narr = [b + a * i for i in range(1000)]\\nfor i in range(1000):\\n    if d + c * i in arr:\\n        print(d + c * i)\\n        return\\nprint(-1)\\n\", \"def gcd(a, b):\\n    if b == 0:\\n        return a\\n    return  gcd(b, a % b)\\n\\na, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\n\\nmorty = set()\\ncr = b\\nfor i in range(1000):\\n    morty.add(cr)\\n    cr += a\\n\\ncr = d\\nfor i in range(1000):\\n    if cr in morty:\\n        print(cr)\\n        return\\n    cr += c\\nprint(-1)\\n\", \"from sys import stdin, stdout\\n\\n\\na, b = list(map(int, stdin.readline().rstrip().split()))\\nc, d = list(map(int, stdin.readline().rstrip().split()))\\n\\nmatch=-1\\nset1=set()\\nfor i in range(a+b+max([b,d])):\\n    set1.add(b+i*a)\\n\\nfor i in range(a+b+max([b,d])):\\n    if d+i*c in set1:\\n        match=d+i*c\\n        break\\n        \\nprint(match)\\n\", \"import math\\n\\na, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\n\\ng = math.gcd(a, c)\\nif (d-b)%g != 0:\\n    print(-1)\\nelse:\\n    t0, t1=b, d\\n    while t0 != t1:\\n        if t0 < t1: t0 += a\\n        else: t1 += c\\n    print(t0)\\n\", \"a,b=[int(i) for i in input().split()]\\nc,d=[int(i) for i in input().split()]\\n\\nfor i in range(0,10000):\\n    if b+a*i>=d and (b+a*i-d)%c==0:\\n        print(b+a*i)\\n        return\\nprint(-1)\\n\", \"import sys\\na, b =  list(map(int, input().split()))\\nc, d  = list(map(int, input().split()))\\ns = set()\\nfor i in range(1001):\\n    s.add( b + i * a)\\nfor i in range(1000):\\n    num = d + c * i\\n    if num in s:\\n        print(num)\\n        return\\nprint(-1)\\n\", \"a, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\nyes = True\\nfor i in range(1, 100):\\n    if a % i == c % i and c % i == 0:\\n        if d % i != b % i:\\n            yes = False\\nif not yes:\\n    print(-1)\\nelse:\\n    s = set()\\n    for i in range(1000):\\n        s.add(b)\\n        b += a\\n    for i in range(1000):\\n        if d in s:\\n            print(d)\\n            break\\n        d += c\\n\", \"from fractions import gcd\\n\\na,b = list(map(int,input().split()))\\nc,d = list(map(int,input().split()))\\n\\n#ax+b=cy+d\\n\\nval = gcd(a,c)\\n\\nif (d-b)%val != 0:\\n    print(-1)\\nelse:\\n    i=b\\n    while True:\\n        if ((i-d)%c==0) and (i-d)/c>=0:\\n            break\\n        i=i+a\\n    print(i)\\n\\n\\n\\n\", \"import sys\\na, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\ntimes1 = [b + a*i for i in range(100)]\\nfor time2 in [d + c*i for i in range(100)]:\\n        if time2 in times1:\\n                print(time2)\\n                return\\nprint(-1)\\n\", \"a, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\n\\nt1 = b\\nt2 = d\\nsolution_found = False\\n\\nfor i in range(10000):\\n\\tif (t1 == t2):\\n\\t\\tprint(t1)\\n\\t\\tsolution_found = True\\n\\t\\tbreak\\n\\telif (t1 > t2):\\n\\t\\tt2 += c\\n\\telse:\\n\\t\\tt1 += a\\n\\nif (not solution_found):\\n\\tprint(-1)\", \"a,b=list(map(int,input().split()))\\ns=0\\nc,d=list(map(int,input().split()))\\nflag=0\\nwhile(d!=b):\\n    if(s==100000):\\n        print(-1)\\n        b=d\\n        flag=1\\n    if(d<b):\\n        d+=max(c*((b-d)//c),c)\\n    else:\\n        b+=max(a*((d-b)//a),a)\\n    s+=1\\nif(flag==0):\\n    print(b)\\n\", \"from fractions import gcd\\n\\na, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\n\\ng = gcd(a, c)\\n\\nif (d - b) % g == 0:\\n    big_tab = [0 for _ in range(101 * 101)]\\n    for i in range(b, 101 * 101, a):\\n        big_tab[i] = 1\\n\\n    for i in range(d, 101 * 101, c):\\n        if big_tab[i]:\\n            print(i)\\n            break\\n\\nelse:\\n    print(-1)\\n\", \"a,b=map(int,input().split())\\nc,d=map(int,input().split())\\ns={b-d}\\nwhile b!=d:\\n    if b<d: b+=a\\n    else: d+=c\\n    bd=b-d\\n    if bd in s: break\\n    s|={bd}\\nif d==b: print(b)\\nelse: print(-1)\", \"a,b = list(map(int,input().split()))\\nc,d = list(map(int,input().split()))\\n\\nvalid = [0]*(1000001)\\n\\ncnt = b\\n\\nwhile cnt <= 1000000:\\n    valid[cnt] += 1\\n    cnt += a\\n\\ncnt = d\\n\\nwhile cnt <= 1000000:\\n    valid[cnt] += 1\\n    cnt += c\\n\\nfor i in range(1000001):\\n    if valid[i] == 2:\\n        print(i)\\n        break\\nelse:\\n    print(-1)\\n\", \"from time import time as tm\\n\\nb, a = list(map(int, input().split()))\\nd, c = list(map(int, input().split()))\\ncur = ma = mb = 0\\n\\nstm = tm()\\n\\nwhile tm() - stm < 0.9:\\n    isa = (a + b * ma) == cur\\n    isb = (c + d * mb) == cur\\n    if isa:\\n        ma += 1\\n    if isb:\\n        mb += 1\\n    if isa and isb:\\n        print(cur)\\n        break\\n    cur += 1\\nelse:\\n    print(-1)\\n\", \"a,b=[int(c) for c in input().split(' ')]\\nc,d=[int(c) for c in input().split(' ')]\\n\\n\\ni=0\\nmax=pow(10,5)\\nwhile b!=d and i<max:\\n    while d<b:\\n        d+=c\\n    while b<d:\\n        b+=a\\n    i+=1\\n\\nif b!=d:\\n    print(-1)\\nelse:\\n    print(d)\", \"a, b = map(int, input().split())\\nc, d = map(int, input().split())\\nif b > d:\\n    b, d = d, b\\n    a, c = c, a\\nd -= b\\nfor i in range(1000000):\\n    if (c * i + d) % a == 0:\\n        print(i * c + d + b)\\n        break\\nelse:\\n    print(-1)\", \"a, b = list(map(int, input().split()))\\nc, d = list(map(int, input().split()))\\n\\n\\\"\\\"\\\"\\ndef nok(a, b):\\n    r = a\\n    while r % b != 0:\\n        r += a\\n    return r\\n\\ndef get_answer():\\n    if b == d:\\n        return 0\\n\\n    if c == a:\\n        return -1\\n\\n    if (b - d) * (c - a) < 0:\\n        return -1\\n\\n    k = nok(abs(b - d), abs(c - a))\\n    return b + k * a\\n\\\"\\\"\\\"\\n\\ndef get_answer():\\n    for i in range(101 * 2):\\n        for j in range(101 * 2):\\n            if b + a*i == d + c*j:\\n                return b + a*i\\n\\n    return -1\\n\\nprint(get_answer())\\n\\n\\n\", \"a, b = map(int, input().split())\\nc, d = map(int, input().split())\\nr = set()\\nnow = b\\n\\nwhile now < d:\\n\\tnow += a\\n\\t\\nd %= c\\nwhile True:\\n\\tif now % c == d:\\n\\t\\tprint(now)\\n\\t\\treturn\\n\\t\\n\\tif (now % c) in r:\\n\\t\\tprint(-1)\\n\\t\\treturn\\n\\t\\n\\tr.add(now % c)\\n\\t\\n\\tnow += a\", \"rick = [bool(0)] * 100001\\nmorty = [bool(0)] * 100001\\na, b = input().split(' ')\\na = int(a)\\nb = int(b)\\nc, d = input().split(' ')\\nc = int(c)\\nd = int(d)\\ni = int(1)\\nkrick = -1\\nrick_krick = b\\nmorty_krick = d\\nwhile rick_krick <= 10000:\\n    rick[rick_krick] = 1\\n    rick_krick += a\\nwhile morty_krick <= 10000:\\n    morty[morty_krick] = 1\\n    morty_krick += c\\nwhile krick == -1 and i <= 10000:\\n    if morty[i] == 1 and rick[i] == 1:\\n        krick = i\\n    i += 1\\nprint(krick)\\n\", \"import sys\\nimport math\\n\\ndef main():\\n    a, b = map(int, input().split())\\n    c, d = map(int, input().split())\\n    arr = list()\\n    dr = 0\\n    for i in range(0, 202):\\n        arr.append(b + dr*a)\\n        arr.append(d + dr*c)\\n        dr += 1\\n\\n    arr = sorted(arr)\\n    for i in range(0, len(arr)-1):\\n        if (arr[i] == arr[i+1]):\\n            return print(arr[i])\\n    print(-1)\\n\\nmain()\", \"line = input()\\na, b = line.split()\\na, b = int(a), int(b)\\n\\nline = input()\\nc, d = line.split()\\nc, d = int(c), int(d)\\n\\nx = b\\n\\nx_count = 1\\n\\ny = d\\ny_count = 1\\nwhile y != x and y <= 10100 and x <= 10100:\\n    if y > x:\\n        x = b + (x_count * a)\\n        x_count = x_count + 1\\n    else:\\n        y = d + (y_count * c)\\n        y_count = y_count + 1\\n\\nif y == x:\\n    print(y)\\nelse:\\n    print(-1)\\n\", \"from fractions import gcd\\na, b = [int(x) for x in input().split()]\\nc, d = [int(x) for x in input().split()]\\n\\ng = gcd(a, c)\\n\\nif abs(b - d) % g != 0:\\n    print(-1)\\nelse:\\n    s1 = set([b])\\n    s2 = set([d])\\n    while True:\\n        if b in s2:\\n            print(b)\\n            break\\n        if d in s1:\\n            print(d)\\n            break\\n        b += a\\n        d += c\\n        s1.add(b)\\n        s2.add(d)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"20 2\\n9 19\\n\",\n    \"2 1\\n16 12\\n\",\n    \"39 52\\n88 78\\n\",\n    \"59 96\\n34 48\\n\",\n    \"87 37\\n91 29\\n\",\n    \"11 81\\n49 7\\n\",\n    \"39 21\\n95 89\\n\",\n    \"59 70\\n48 54\\n\",\n    \"87 22\\n98 32\\n\",\n    \"15 63\\n51 13\\n\",\n    \"39 7\\n97 91\\n\",\n    \"18 18\\n71 71\\n\",\n    \"46 71\\n16 49\\n\",\n    \"70 11\\n74 27\\n\",\n    \"94 55\\n20 96\\n\",\n    \"18 4\\n77 78\\n\",\n    \"46 44\\n23 55\\n\",\n    \"74 88\\n77 37\\n\",\n    \"94 37\\n34 7\\n\",\n    \"22 81\\n80 88\\n\",\n    \"46 30\\n34 62\\n\",\n    \"40 4\\n81 40\\n\",\n    \"69 48\\n39 9\\n\",\n    \"89 93\\n84 87\\n\",\n    \"17 45\\n42 65\\n\",\n    \"41 85\\n95 46\\n\",\n    \"69 30\\n41 16\\n\",\n    \"93 74\\n99 93\\n\",\n    \"17 19\\n44 75\\n\",\n    \"45 63\\n98 53\\n\",\n    \"69 11\\n48 34\\n\",\n    \"55 94\\n3 96\\n\",\n    \"100 100\\n100 100\\n\",\n    \"1 1\\n1 1\\n\",\n    \"1 1\\n1 100\\n\",\n    \"1 100\\n100 1\\n\",\n    \"98 1\\n99 100\\n\",\n    \"98 1\\n99 2\\n\",\n    \"97 2\\n99 100\\n\",\n    \"3 3\\n3 1\\n\",\n    \"3 2\\n7 2\\n\",\n    \"2 3\\n2 5\\n\",\n    \"2 3\\n2 3\\n\",\n    \"100 3\\n100 5\\n\",\n    \"6 10\\n12 14\\n\",\n    \"4 2\\n4 4\\n\",\n    \"2 3\\n2 2\\n\",\n    \"2 3\\n4 99\\n\",\n    \"1 5\\n1 5\\n\",\n    \"1 100\\n3 1\\n\",\n    \"2 2\\n2 1\\n\",\n    \"2 10\\n6 20\\n\",\n    \"2 2\\n2 10\\n\",\n    \"3 7\\n3 6\\n\",\n    \"1 100\\n1 100\\n\",\n    \"7 25\\n39 85\\n\",\n    \"84 82\\n38 6\\n\",\n    \"7 7\\n7 14\\n\"\n  ],\n  \"outputs\": [\n    \"82\\n\",\n    \"-1\\n\",\n    \"1222\\n\",\n    \"1748\\n\",\n    \"211\\n\",\n    \"301\\n\",\n    \"3414\\n\",\n    \"1014\\n\",\n    \"718\\n\",\n    \"-1\\n\",\n    \"1255\\n\",\n    \"1278\\n\",\n    \"209\\n\",\n    \"2321\\n\",\n    \"-1\\n\",\n    \"1156\\n\",\n    \"-1\\n\",\n    \"1346\\n\",\n    \"789\\n\",\n    \"-1\\n\",\n    \"674\\n\",\n    \"364\\n\",\n    \"48\\n\",\n    \"5967\\n\",\n    \"317\\n\",\n    \"331\\n\",\n    \"1410\\n\",\n    \"-1\\n\",\n    \"427\\n\",\n    \"3483\\n\",\n    \"-1\\n\",\n    \"204\\n\",\n    \"100\\n\",\n    \"1\\n\",\n    \"100\\n\",\n    \"101\\n\",\n    \"9703\\n\",\n    \"9605\\n\",\n    \"4852\\n\",\n    \"-1\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"99\\n\",\n    \"5\\n\",\n    \"100\\n\",\n    \"-1\\n\",\n    \"20\\n\",\n    \"10\\n\",\n    \"-1\\n\",\n    \"100\\n\",\n    \"319\\n\",\n    \"82\\n\",\n    \"14\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/787/A",
  "starter_code": ""
}