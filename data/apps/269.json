{
  "task_id": "APPS/269",
  "problem_id": 269,
  "prompt": "Nothing is eternal in the world, Kostya understood it on the 7-th of January when he saw partially dead four-color garland.\n\nNow he has a goal to replace dead light bulbs, however he doesn't know how many light bulbs for each color are required. It is guaranteed that for each of four colors at least one light is working.\n\nIt is known that the garland contains light bulbs of four colors: red, blue, yellow and green. The garland is made as follows: if you take any four consecutive light bulbs then there will not be light bulbs with the same color among them. For example, the garland can look like \"RYBGRYBGRY\", \"YBGRYBGRYBG\", \"BGRYB\", but can not look like \"BGRYG\", \"YBGRYBYGR\" or \"BGYBGY\". Letters denote colors: 'R'\u00a0\u2014 red, 'B'\u00a0\u2014 blue, 'Y'\u00a0\u2014 yellow, 'G'\u00a0\u2014 green.\n\nUsing the information that for each color at least one light bulb still works count the number of dead light bulbs of each four colors.\n\n\n-----Input-----\n\nThe first and the only line contains the string s (4 \u2264 |s| \u2264 100), which describes the garland, the i-th symbol of which describes the color of the i-th light bulb in the order from the beginning of garland:   'R'\u00a0\u2014 the light bulb is red,  'B'\u00a0\u2014 the light bulb is blue,  'Y'\u00a0\u2014 the light bulb is yellow,  'G'\u00a0\u2014 the light bulb is green,  '!'\u00a0\u2014 the light bulb is dead. \n\nThe string s can not contain other symbols except those five which were described. \n\nIt is guaranteed that in the given string at least once there is each of four letters 'R', 'B', 'Y' and 'G'. \n\nIt is guaranteed that the string s is correct garland with some blown light bulbs, it means that for example the line \"GRBY!!!B\" can not be in the input data. \n\n\n-----Output-----\n\nIn the only line print four integers k_{r}, k_{b}, k_{y}, k_{g}\u00a0\u2014 the number of dead light bulbs of red, blue, yellow and green colors accordingly.\n\n\n-----Examples-----\nInput\nRYBGRYBGR\n\nOutput\n0 0 0 0\nInput\n!RGYB\n\nOutput\n0 1 0 0\nInput\n!!!!YGRB\n\nOutput\n1 1 1 1\nInput\n!GB!RG!Y!\n\nOutput\n2 1 1 0\n\n\n-----Note-----\n\nIn the first example there are no dead light bulbs.\n\nIn the second example it is obvious that one blue bulb is blown, because it could not be light bulbs of other colors on its place according to the statements.",
  "solutions": "[\"s = input()\\nn = len(s)\\nt = 'RBYG'\\nfor i in t:\\n\\tind = s.find(i) % 4\\n\\tans = 0\\n\\twhile ind < n:\\n\\t\\tans += s[ind] == '!'\\n\\t\\tind += 4\\n\\tprint(ans, end=' ')\\n\", \"import sys\\ns = input()\\nn = len(s)\\nans = [0] * 4\\na = s.index('R') % 4\\nfor i in range(a, n, 4):\\n    if (s[i] != 'R'):\\n        ans[0] += 1\\na = s.index('B') % 4\\nfor i in range(a, n, 4):\\n    if (s[i] != 'B'):\\n        ans[1] += 1\\na = s.index('Y') % 4\\nfor i in range(a, n, 4):\\n    if (s[i] != 'Y'):\\n        ans[2] += 1\\na = s.index('G') % 4\\nfor i in range(a, n, 4):\\n    if (s[i] != 'G'):\\n        ans[3] += 1\\nprint(*ans)\\n            \\n\", \"def main():\\n\\ts = list(input())\\n\\n\\tans = []\\n\\tfor c in \\\"RBYG\\\":\\n\\t\\tx = s.index(c)\\n\\t\\tx %= 4\\n\\t\\tcn = 0\\n\\t\\twhile (x < len(s)):\\n\\t\\t\\tif (s[x] == '!'):\\n\\t\\t\\t\\tcn += 1\\n\\t\\t\\tx += 4\\n\\t\\tans.append(cn)\\n\\tprint(*ans)\\n\\n\\nmain()\", \"s = list(input())\\n\\nans = {'R':0,'B':0,'Y':0,'G':0}\\n\\n\\nfor i, ch in enumerate(s):\\n    if ch != '!':\\n        for j in range(i, len(s), 4):\\n            if s[j] == '!':\\n                s[j] = ch\\n                ans[ch] += 1\\n        for j in range(i, -1, -4):\\n            if s[j] == '!':\\n                s[j] = ch\\n                ans[ch] += 1\\n\\nprint(ans['R'], ans['B'], ans['Y'], ans['G'])\\n\", \"s = input()\\nr = s.index('R') % 4\\nb = s.index('B') % 4\\ny = s.index('Y') % 4\\ng = s.index('G') % 4\\nans = [0] * 4\\nfor i in range(0,len(s)):\\n\\tif(s[i] == '!'):\\n\\t\\tans[i%4] += 1\\nprint('%d %d %d %d' % (ans[r],ans[b],ans[y],ans[g]))\", \"s = input()\\na = s.find('R') % 4\\nb = s.find('B') % 4\\nc = s.find('Y') % 4\\nd = s.find('G') % 4\\nres = [0] * 4\\nfor i in range(len(s)):\\n    if s[i] == '!':\\n        res[i % 4] += 1\\nprint(res[a], res[b], res[c], res[d])\", \"s = input()\\ntrr = [0 for i in range(4)]\\nprr = ['a', 'b', 'c', 'd']\\nfor i in range(len(s)):\\n    if(s[i]!='!'):\\n        prr[i%4] = s[i]\\n    else:\\n        trr[i%4] += 1\\n\\nkrr = [0, 0, 0, 0]\\nfor i in range(4):\\n    if(prr[i]=='R'):\\n        krr[0] = trr[i]\\n    if (prr[i] == 'B'):\\n        krr[1] = trr[i]\\n    if (prr[i] == 'Y'):\\n        krr[2] = trr[i]\\n    if (prr[i] == 'G'):\\n        krr[3] = trr[i]\\n\\nprint(krr[0], krr[1], krr[2], krr[3])\", \"a=input()\\nt1=0\\nt2=0\\nt3=0\\nt4=0\\nind1=0\\nind2=0\\nind3=0\\nind4=0\\nfor j in range(len(a)):\\n    if a[j] =='R':\\n        ind1=j%4\\n    if a[j] == 'B':\\n       \\n        ind2=j%4\\n    if a[j] == 'Y':\\n        ind3=j%4\\n    if a[j] == 'G':\\n        ind4=j%4\\nfor j in range(len(a)):\\n    if a[j] == '!':\\n        if j%4==ind1:\\n            t1+=1\\n        elif j%4==ind2:\\n            t2+=1\\n        elif j%4==ind3:\\n            t3+=1\\n        else:\\n            t4+=1\\nprint(t1,t2,t3,t4)\", \"s = input()\\n\\na = ['*'] * 4\\n\\nfor i, c in enumerate(s):\\n    if c != '!':\\n        a[i % 4] = c\\n\\nansw = dict(R=0, G=0, B=0, Y=0)\\nfor i in range(len(s)):\\n    if s[i] == '!':\\n        answ[a[i % 4]] += 1\\n\\nprint(answ['R'], answ['B'], answ['Y'], answ['G'],)\\n\", \"#!/usr/bin/env python3\\n\\ndef main():\\n    from   collections import Counter\\n    import re\\n\\n    try:\\n        while True:\\n            s = input()\\n            d = Counter()\\n            for i in range(4):\\n                t = s[i::4]\\n                d[re.search(r\\\"[^!]\\\", t).group()] = t.count('!')\\n\\n            print(d['R'], d['B'], d['Y'], d['G'])\\n\\n    except EOFError:\\n        pass\\n\\nmain()\\n\", \"S = input()\\nrda = [0]*4\\nfor i, c in enumerate(S):\\n\\tif c != '!':\\n\\t\\trda[i%4] = ord(c)\\ngb = [0]*256\\nfor i, c in enumerate(S):\\n\\tif c == '!':\\n\\t\\tgb[rda[i%4]] += 1\\nans = [gb[ord('R')], gb[ord('B')], gb[ord('Y')], gb[ord('G')]]\\nprint(' '.join(map(str, ans)))\\n\", \"s = input()\\ncnt = [0]*4\\nind = [0]*4\\nfor i, ch in enumerate(s):\\n  if ch == \\\"R\\\": ind[0] = i % 4\\n  elif ch == \\\"B\\\": ind[1] = i % 4\\n  elif ch == \\\"Y\\\": ind[2] = i % 4\\n  elif ch == \\\"G\\\": ind[3] = i % 4\\n  else: cnt[i % 4] += 1\\nprint(*[cnt[ind[i]] for i in range(4)])  \\n\", \"import itertools\\nimport collections\\n\\nx = input()\\n\\nerg = -1\\npos = \\\"R B Y G\\\".split()\\nfor p in itertools.permutations(pos):\\n\\n    t = p * 30\\n    t[:len(x)]\\n\\n    tmp = collections.defaultdict(int)\\n\\n    for i in range(len(x)):\\n        if x[i] == '!':\\n            tmp[t[i]] += 1;\\n            continue\\n\\n        if x[i] == t[i]:\\n            continue\\n        else:\\n            tmp = -1\\n            break\\n\\n    if tmp == -1:\\n        continue\\n    else:\\n        print(\\\"{} {} {} {}\\\".format(tmp['R'], tmp['B'], tmp['Y'], tmp['G']))\\n        break\\n\\n\", \"s=input()\\ncol=['R','B','Y','G']\\np=[0]*4\\nsootv=[0]*4\\nfor i in range(len(s)):\\n    if s[i]=='!':\\n        p[i%4]+=1\\n    elif s[i] in col:\\n        t=col.index(s[i])\\n        sootv[t]=i%4\\nprint(' '.join([str(p[sootv[i]]) for i in range(4)]))\", \"colors = set(\\\"RGBY\\\".split())\\ns = input()\\nr, g, b, y = 0, 0, 0, 0\\nR, G, B, Y = -1, -1, -1, -1\\n\\nfor i in range(len(s)):\\n    if s[i] == \\\"R\\\":\\n        R = i % 4\\n    elif s[i] == \\\"G\\\":\\n        G = i % 4\\n    elif s[i] == \\\"B\\\":\\n        B = i % 4\\n    else:\\n        Y = i % 4\\n\\nfor i in range(len(s)):\\n    if s[i] == \\\"!\\\":\\n        if i % 4 == R:\\n            r += 1\\n        elif i % 4 == G:\\n            g += 1\\n        elif i % 4 == B:\\n            b += 1\\n        else:\\n            y += 1\\nprint(r, b, y, g)\\n\", \"s = input()\\ncols = ['R', 'B', 'Y', 'G']\\nresult = dict([(c, 0) for c in cols])\\nnum_to_cols = dict()\\nfor c in cols:\\n    num_to_cols[s.find(c) % 4] = c\\nfor lnum in range(len(s)):\\n    if s[lnum] == '!':\\n        result[num_to_cols[lnum % 4]] += 1\\nprint(result['R'], result['B'], result['Y'], result['G'])\", \"s = input()\\nl = ['?','?','?','?']\\nd = {c:0 for c in \\\"RGBY\\\"}\\nfor i in range(len(s)):\\n    if s[i] != '!':\\n        l[i%4] = s[i]\\nfor i in range(len(s)):\\n    if s[i] == '!':\\n        d[l[i%4]] += 1\\n\\nprint(d['R'],d['B'],d['Y'],d['G'])\\n\", \"\\n\\ns = input()\\n\\nM_inv = {}\\n\\nA = [0] * 4\\n\\nfor i in range(len(s)):\\n    if s[i] != '!':\\n        M_inv[s[i]] = i % 4\\n\\nfor i in range(len(s)):\\n    if s[i] == '!':\\n        A[i % 4] += 1\\n\\nprint((str(A[M_inv['R']]) + \\\" \\\" + str(A[M_inv['B']]) + \\\" \\\" +\\n      str(A[M_inv['Y']]) + \\\" \\\" + str(A[M_inv['G']])))\\n\\n\", \"import math, sys\\n\\n\\ndef main():\\n\\tl = input()\\n\\trr=0\\n\\tbr =0\\n\\tgr =0\\n\\tyr = 0\\n\\tfor i in range(len(l)):\\n\\t\\tif l[i]=='R':\\n\\t\\t\\trr = i%4\\n\\t\\tif l[i]=='B':\\n\\t\\t\\tbr = i%4\\n\\t\\tif l[i]=='Y':\\n\\t\\t\\tyr = i%4\\n\\t\\tif l[i]=='G':\\n\\t\\t\\tgr = i%4\\n\\trk=0\\n\\tbk =0\\n\\tgk =0\\n\\tyk = 0\\n\\tfor i in range(len(l)):\\n\\t\\tif l[i]==\\\"!\\\":\\n\\t\\t\\tif i%4==rr:\\n\\t\\t\\t\\trk+=1\\n\\t\\t\\tif i%4==br:\\n\\t\\t\\t\\tbk+=1\\n\\t\\t\\tif i%4==yr:\\n\\t\\t\\t\\tyk+=1\\n\\t\\t\\tif i%4==gr:\\n\\t\\t\\t\\tgk+=1\\n\\tprint(rk,bk,yk,gk)\\n\\t\\t\\t\\n\\ndef __starting_point():\\n\\tmain()\\n\\n__starting_point()\", \"a=input()\\nv=['']*4\\ns=[0]*4\\nfor i in range(len(a)):\\n\\tif(i%4==0):\\n\\t\\tif(a[i]!='!'):\\n\\t\\t\\tv[i%4]=a[i]\\n\\tif(i%4==1):\\n\\t\\tif(a[i]!='!'):\\n\\t\\t\\tv[i%4]=a[i]\\n\\tif(i%4==2):\\n\\t\\tif(a[i]!='!'):\\n\\t\\t\\tv[i%4]=a[i]\\n\\tif(i%4==3):\\n\\t\\tif(a[i]!='!'):\\n\\t\\t\\tv[i%4]=a[i]\\nfor i in range(len(a)):\\n\\tif(a[i]=='!'):\\n\\t\\tif(v[i%4]==\\\"R\\\"):\\n\\t\\t\\ts[0]+=1\\n\\t\\tif(v[i%4]==\\\"B\\\"):\\n\\t\\t\\ts[1]+=1\\t\\n\\t\\tif(v[i%4]==\\\"Y\\\"):\\n\\t\\t\\ts[2]+=1\\n\\t\\tif(v[i%4]==\\\"G\\\"):\\n\\t\\t\\ts[3]+=1\\nfor i in range(4):\\n\\tprint(s[i],end=\\\" \\\")\\n\", \"g = input()\\nc1 = g[0::4]\\nc2 = g[1::4]\\nc3 = g[2::4]\\nc4 = g[3::4]\\ncolors = ['R', 'B', 'Y', 'G']\\nbroken1 = 0\\nbroken2 = 0\\nbroken3 = 0\\nbroken4 = 0\\nletters = []\\nfor item in c1:\\n    if item == '!':\\n        broken1 += 1\\n    else:\\n        if item not in letters:\\n            letters.append(item)\\nfor item in c2:\\n    if item == '!':\\n        broken2 += 1\\n    else:\\n        if item not in letters:\\n            letters.append(item)\\nfor item in c3:\\n    if item == '!':\\n        broken3 += 1\\n    else:\\n        if item not in letters:\\n            letters.append(item)\\nfor item in c4:\\n    if item == '!':\\n        broken4 += 1\\n    else:\\n        if item not in letters:\\n            letters.append(item)\\nanswer = {letters[0]: broken1, letters[1]: broken2,letters[2]: broken3,letters[3]: broken4}\\nprint(answer['R'],answer['B'],answer['Y'],answer['G'])\\n\", \"s = input()\\ncol_idx = {}\\ncounts = [0, 0, 0, 0]\\nfor i,c in enumerate(s):\\n    if c == '!':\\n        counts[i%4] += 1\\n    else:\\n        col_idx[c] = i%4\\n\\nprint(\\\"%d %d %d %d\\\" % tuple(counts[col_idx[c]] for c in 'RBYG'))\\n\", \"s=[x for x in input()]\\nn=len(s)\\nneed=4\\np={}\\nfor i in range(n):\\n  if s[i]!='!':\\n    p[i%4]=s[i]\\nc={'R':0, 'B':0, 'Y':0, 'G':0}\\nfor i in range(n):\\n  if s[i]=='!':\\n    c[p[i%4]]+=1\\nprint(c['R'], c['B'], c['Y'], c['G'])\\n    \\n    \\n\\n\", \"s=input()+'   '\\nd,ans,DD={},0,{\\\"R\\\":0,\\\"B\\\":0,\\\"Y\\\":0,\\\"G\\\":0}\\nfor i in range(len(s)):\\n    if s[i] in \\\"RGBY\\\": d[i%4]=s[i]\\nfor i in range(len(s)):\\n    if s[i]==\\\"!\\\": DD[d[i%4]]+=1\\nprint(DD[\\\"R\\\"],DD[\\\"B\\\"],DD[\\\"Y\\\"],DD[\\\"G\\\"])\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"RYBGRYBGR\\n\",\n    \"!RGYB\\n\",\n    \"!!!!YGRB\\n\",\n    \"!GB!RG!Y!\\n\",\n    \"RYBG\\n\",\n    \"!Y!!!Y!!G!!!G!!B!!R!!!!B!!!!!Y!!G!R!!!!!!!!!!!!B!!!!GY!B!!!!!YR!G!!!!!!B!Y!B!!!!!!R!G!!!!!!!G!R!!!!B\\n\",\n    \"!R!GBRYG!RYGB!!G!!YG!!Y!!\\n\",\n    \"RBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGYRBGY\\n\",\n    \"GYRB!\\n\",\n    \"RBYGR\\n\",\n    \"BRYGB\\n\",\n    \"YRGBY\\n\",\n    \"GBYRG\\n\",\n    \"GBYR!!!!\\n\",\n    \"!!!BRYG!!\\n\",\n    \"!!!YBGR!!!\\n\",\n    \"R!!Y!!B!!G!\\n\",\n    \"!!!!BR!!!!GY\\n\",\n    \"!!!!!!!!!!!!!!!!!!Y!!!!!!!!!!!!!!!!!!B!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!G!!R!!!!!!!!!!!!\\n\",\n    \"!!G!!!G!!!G!!!G!!!GB!!G!!!G!!YG!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!!!G!R!G!!!G!\\n\",\n    \"!!Y!!!Y!!!Y!!!Y!!!Y!!!Y!!!YR!!Y!!!Y!B!Y!!!Y!!!Y!!!Y!!!Y!!GY!!!Y!!!Y!!!Y!!!Y!!!Y!!!Y!!!Y!!!Y!!!Y!!!Y!\\n\",\n    \"!B!!!B!!!B!!!B!!!B!!!B!G!B!!!B!!!B!!!B!!!B!!!B!!!BR!!B!!!B!!!B!!!B!!!B!!YB!!!B!!!B!!!B!!!B!!!B!!!B!!\\n\",\n    \"YR!!!R!!!RB!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!!!R!G!R!!!R!!!R!!!R!!\\n\",\n    \"R!YBRGY!R!\\n\",\n    \"B!RGB!!GBYR!B!R\\n\",\n    \"Y!!GYB!G!!!!YB!G!!RG\\n\",\n    \"R!!BRYG!!YG!R!!!R!!!!!G!R!!!!!\\n\",\n    \"R!!!R!!!R!!!R!B!RGB!!G!!R!B!R!B!RG!YR!B!\\n\",\n    \"!Y!R!Y!RB!G!BY!!!!!R!YG!!YGRB!!!!!!!BYGR!!!RBYGRBY\\n\",\n    \"!!G!!!!!Y!!RYBGRY!!R!!!R!!!!!!!R!B!!!!!R!!!R!!!R!!!R!!!R!!!!\\n\",\n    \"!!BG!!B!!RBG!!B!YRB!!!B!YRBG!!BG!!B!!!BG!!BG!RB!Y!!!!!B!Y!B!Y!!!!!B!!!\\n\",\n    \"R!GBRYGBRYGBRYG!RY!BRYGBRYGBRYGBRYGBRYGBRYGBRYGBRYGBR!GBRY!BRY!BRYGBRYGBRYGBRYGB\\n\",\n    \"!!!!B!!!!G!!B!R!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!YB!R!!!!!!G!!!!!!!!\\n\",\n    \"G!!!GY!!GYBRGYB!GY!RG!B!GYBRGY!!GY!!GYBRGYBRGY!RGY!!GYBRGY!!G!BRGYB!GYBRGYB!GY!!G!!RGYB!GYB!G!B!GYB!\\n\",\n    \"R!!!!!!Y!B!!!!!!!!!!!!!!R!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Y!!G!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\\n\",\n    \"!!YR!!YR!!YR!!YR!!YR!BYR!!YR!!YR!!YRG!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR!!YR\\n\",\n    \"!!!YR!B!!!B!R!!!R!!YR!BY!G!YR!B!R!BYRG!!!!BY!!!!!!B!!!B!R!!Y!!B!!GB!R!B!!!!!!G!!RG!!R!BYR!!!!!B!!!!!\\n\",\n    \"B!RG!!R!B!R!B!R!B!R!!!R!B!RG!!RGB!R!!!RGB!!!!YR!B!!!!!RGB!R!B!R!B!!!!!RGBY!!B!RG!Y!GB!!!B!!GB!RGB!R!\\n\",\n    \"!B!YR!!YR!!YRB!Y!B!Y!B!Y!!!YR!GYR!!YRB!YR!!Y!!!YR!!YRB!YR!!Y!B!Y!!!Y!!!YR!!Y!B!YRB!YR!!YR!!Y!B!Y!B!Y\\n\",\n    \"!RBYGRBYGRBY!!!!GRBYGRB!GRBY!R!YGRBYG!BYGRBYG!!Y!!BYGRB!G!B!G!!!G!BY!RBYGRB!!R!!GR!YG!BY!!B!GR!Y!!!!\\n\",\n    \"BRG!!RGYBRGYBRG!B!GY!!GYB!GY!!G!BRGY!RGYB!G!!RGYBRGYB!GY!!GYB!GYBRGY!!GYB!GY!!GYB!GY!!GYBRGY!!GYB!G\\n\",\n    \"!Y!!!!!!!!!!!!!!!!!GB!!!!!!!!!!!!Y!!!!!!!!!!!!!!!!!!!!!!!!!!!!R!!!!!!!!!!!!!!!!!!!!!!!!!!!R!!!!!!!\\n\",\n    \"!R!!Y!G!!!!BYR!!!!G!!!!!!R!!!!!!!!!B!!!B!R!BY!!B!!GB!!G!!!G!!!G!!!!!!R!!!!G!!!!!Y!!BY!!!!!!!Y!!!\\n\",\n    \"!!GYRBGY!BGY!BGY!BGYR!G!RBGYRBGYR!G!RBGY!BGY!!GY!BGY!BGYRBGYR!GYRBGYR!G!!BGY!!GY!!GY!BGY!!GY!BG\\n\",\n    \"!!!!!!!!Y!!!!!!!!!GR!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!B!!!!!!Y!!!!!!R!!!!!!!!!!!!!!!!!!!!!!!!!!\\n\",\n    \"!B!!Y!!GY!RGY!!!!!!!!!!!Y!!!!!!!!!!!!!!!!!RG!BR!!!!!!!!G!!!!!B!!!!R!!B!G!B!!YB!!Y!!!!BRG!!!G\\n\",\n    \"YB!!Y!GR!B!!YB!RYBG!!!!RY!GR!!!R!B!R!B!R!!!R!B!R!B!!!B!!YB!R!!G!YB!!Y!!R!BG!!!!!!B!!!!!R!!!\\n\",\n    \"R!G!R!GBR!!BR!GB!!!B!!!BR!GBRYG!R!!!R!GBRYGBR!GBR!!BR!GBR!GBRY!B!!!!R!!BR!!BR!!!!!!B!!!BR!\\n\",\n    \"YRB!Y!B!YRB!Y!!!Y!B!YR!!YR!!Y!!!YRB!YR!!YRB!Y!B!YRB!YR!!Y!!!YR!!YRB!YR!!Y!B!YRB!Y!!GYR!!Y\\n\",\n    \"!!GBRY!!!YG!R!GBR!G!RY!B!YGB!!G!RYGBRYGB!Y!BR!G!RYGBRYGBRYGBRYGBRYGBRYGB!Y!B!YGBR!!BRYGB\\n\",\n    \"G!!!!Y!!!!R!!!!B\\n\",\n    \"!Y!!!!!!G!!!!!!!!!B!!!!!!!!!!!!R\\n\",\n    \"RGBYRGBYRGBY\\n\",\n    \"!!!!!!!!!GBYRGBY\\n\",\n    \"RBYGRBYGRBYGRB!\\n\",\n    \"R!!!!!!!!!!!!B!!!!!!!!!!!!Y!!!!!!!!!!!!G\\n\",\n    \"GY!!!!R!!Y!B\\n\",\n    \"R!!!!!!!!!!!!!!!!!!!!!!!!Y!!!!!!!!!!!!!!!!!!!!!!!!G!!!!!!!!!!!!!!!!!!!!!!!!B!!!!!!!!!!!!!!!!!!!!!!!!\\n\",\n    \"R!!!!G!!!!B!!!!Y\\n\",\n    \"R!!!!B!!!!Y!!!!G!!!!\\n\",\n    \"!R!B!!!!G!Y\\n\",\n    \"!!!!!R!!!!G!!!!B!!!!Y!!!!!!!!!\\n\",\n    \"R!!!!B!!!!Y!!!!G\\n\",\n    \"!!!!!R!!!!G!!!!B!!!!!!!!Y!!!!!!!!!\\n\",\n    \"!!!!!!!!R!!!!!!!!B!!!!!!!!G!!!!!!!!Y!!!!!!!!\\n\"\n  ],\n  \"outputs\": [\n    \"0 0 0 0\",\n    \"0 1 0 0\",\n    \"1 1 1 1\",\n    \"2 1 1 0\",\n    \"0 0 0 0\",\n    \"20 18 19 18\",\n    \"3 5 2 1\",\n    \"0 0 0 0\",\n    \"0 0 0 1\",\n    \"0 0 0 0\",\n    \"0 0 0 0\",\n    \"0 0 0 0\",\n    \"0 0 0 0\",\n    \"1 1 1 1\",\n    \"2 1 1 1\",\n    \"1 2 1 2\",\n    \"2 2 1 2\",\n    \"2 2 2 2\",\n    \"24 24 24 24\",\n    \"24 24 24 0\",\n    \"24 24 0 24\",\n    \"24 0 24 24\",\n    \"0 24 24 24\",\n    \"0 1 0 2\",\n    \"1 0 3 1\",\n    \"4 3 2 1\",\n    \"3 6 6 4\",\n    \"1 5 9 7\",\n    \"5 7 5 7\",\n    \"5 13 12 13\",\n    \"14 2 13 11\",\n    \"0 1 2 3\",\n    \"20 20 21 21\",\n    \"15 10 5 0\",\n    \"23 24 23 24\",\n    \"0 24 0 24\",\n    \"13 12 17 20\",\n    \"7 8 22 15\",\n    \"11 14 0 24\",\n    \"10 8 9 8\",\n    \"15 10 4 0\",\n    \"22 24 23 23\",\n    \"19 17 18 17\",\n    \"14 9 3 0\",\n    \"21 23 22 22\",\n    \"18 16 17 16\",\n    \"10 10 15 18\",\n    \"5 5 20 12\",\n    \"8 11 0 21\",\n    \"7 5 6 5\",\n    \"3 3 3 3\",\n    \"7 7 7 7\",\n    \"0 0 0 0\",\n    \"3 2 2 2\",\n    \"0 0 1 0\",\n    \"9 9 9 9\",\n    \"2 2 1 2\",\n    \"24 24 24 24\",\n    \"3 3 3 3\",\n    \"4 4 4 4\",\n    \"2 1 2 2\",\n    \"7 6 7 6\",\n    \"3 3 3 3\",\n    \"8 7 8 7\",\n    \"10 10 10 10\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/758/B",
  "starter_code": ""
}