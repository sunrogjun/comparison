{
  "task_id": "APPS/473",
  "problem_id": 473,
  "prompt": "George woke up and saw the current time s on the digital clock. Besides, George knows that he has slept for time t. \n\nHelp George! Write a program that will, given time s and t, determine the time p when George went to bed. Note that George could have gone to bed yesterday relatively to the current time (see the second test sample). \n\n\n-----Input-----\n\nThe first line contains current time s as a string in the format \"hh:mm\". The second line contains time t in the format \"hh:mm\" \u2014 the duration of George's sleep. It is guaranteed that the input contains the correct time in the 24-hour format, that is, 00 \u2264 hh \u2264 23, 00 \u2264 mm \u2264 59.\n\n\n-----Output-----\n\nIn the single line print time p \u2014 the time George went to bed in the format similar to the format of the time in the input.\n\n\n-----Examples-----\nInput\n05:50\n05:44\n\nOutput\n00:06\n\nInput\n00:00\n01:00\n\nOutput\n23:00\n\nInput\n00:01\n00:00\n\nOutput\n00:01\n\n\n\n-----Note-----\n\nIn the first sample George went to bed at \"00:06\". Note that you should print the time only in the format \"00:06\". That's why answers \"0:06\", \"00:6\" and others will be considered incorrect. \n\nIn the second sample, George went to bed yesterday.\n\nIn the third sample, George didn't do to bed at all.",
  "solutions": "[\"s = input()\\nt = input()\\na, b = int(s[:2]), int(s[3:])\\nc, d = int(t[:2]), int(t[3:])\\na -= c\\nb -= d\\nif b < 0:\\n    a -= 1\\n    b = 60 + b\\nif a < 0:\\n    a = 24 + a\\nif a < 10:\\n    print(0, end = '')\\nprint(a, ':', end = '', sep = '')\\nif b < 10:\\n    print(0, end = '')\\nprint(b)\\n\", \"a, b = list(map(int, input().split(':')))\\nc, d = list(map(int, input().split(':')))\\nt = a * 60 + b - c * 60 - d\\n\\nif t < 0:\\n    t += 60 * 24\\na, b = t // 60, t % 60\\n\\nprint(str(a // 10) + str(a % 10) + ':' + str(b // 10) + str(b % 10))\\n\", \"h2, m2 = list(map(int, input().split(':')))\\nh_sleep, m_sleep = list(map(int, input().split(':')))\\n\\nt2 = m2 + h2 * 60\\nt_sleep = m_sleep + h_sleep * 60\\n\\nt2 -= t_sleep\\nif t2 < 0:\\n    t2 += 60 * 24\\n\\nprint('0' * (2 - len(str(t2 // 60))) + str(t2 // 60) + ':' + '0' * (2 - len(str(t2 % 60))) + str(t2 % 60))\\n\", \"def ui(a):\\n    a = str(a)\\n    return '0'*(2-len(a))+a\\na,b = map(int,input().split(':'))\\nc,d = map(int,input().split(':'))\\nt1 = 60*a+b\\nt2 = 60*c+d\\nif t1>=t2:\\n    dt = t1-t2\\nelse:\\n    dt = 1440-t2+t1\\nprint(ui(dt//60),':',ui(dt%60),sep='')\", \"s=input()\\n\\nwh=int(s[0]+s[1])\\nwm=int(s[3]+s[4])\\n\\ns=input()\\n\\nth=int(s[0]+s[1])\\ntm=int(s[3]+s[4])\\n\\ntm+=th*60\\n\\nwm+=wh*60\\n\\nwm-=tm\\nif(wm<0):\\n    wm=1440+wm\\nansh=str(wm//60)\\nansm=str(wm%60)\\nif(len(ansh)<2):\\n    ansh='0'+ansh\\nif(len(ansm)<2):\\n    ansm='0'+ansm\\nprint(ansh+\\\":\\\"+ansm)\\n\", \"def conv(s):\\n\\th = str(s // 60)\\n\\tm = str(s % 60)\\n\\tif len(h) < 2:\\n\\t\\th = '0' + h\\n\\tif len(m) < 2:\\n\\t\\tm = '0' + m\\n\\treturn h + ':' + m\\n\\ns = list(map(int, input().split(':')))\\nt = list(map(int, input().split(':')))\\ns = s[0] * 60 + s[1]\\nt = t[0] * 60 + t[1]\\np = s - t\\nif p < 0:\\n\\tp += 24 * 60\\nprint(conv(p))\\n\", \"h1, m1 = list(map(int, input().split(':')))\\nh2, m2 = list(map(int, input().split(':')))\\nif (m2 > m1):\\n\\tm1 += 60\\n\\th1 -= 1\\nh1 -= h2\\nm1 -= m2\\nif (h1 < 0):\\n\\th1 += 24\\nh = ''\\nm = ''\\nif (h1 < 10):\\n\\th = '0'\\nh += str(h1)\\nif (m1 < 10):\\n\\tm = '0'\\nm += str(m1)\\nprint(h, m, sep = ':', end = '\\\\n')\\n\", \"s = input()\\np = input()\\nt1 = int(s[len(s) - 2:len(s)]) - int(p[len(p) - 2:len(p)])\\nk = 0\\nif t1 < 0:\\n    t1 += 60\\n    k = 1\\nt0 = int(s[:2]) - int(p[:2]) - k\\nwhile t0 < 0:\\n    t0 += 24\\nt0 %= 24\\nres = str(t0) + ':'\\nif len(res) < 3:\\n    res = '0' + res\\nss = '0' + str(t1)\\nss = ss[-2:]\\nres += ss\\nprint(res)\", \"s=input().strip()\\np=input().strip()\\nans=int(s[:2])*60+int(s[3:])-int(p[:2])*60-int(p[3:])\\nans=ans%1440\\nt=('0' if ans//60<10 else '') + str(ans//60) + ':' + ('0' if ans%60<10 else '')+str(ans%60)\\nprint(t)\", \"s = input()\\nt1 = (10 * int(s[0]) + int(s[1])) * 60 + (10 * int(s[3]) + int(s[4]))\\ns = input()\\nt2 = (10 * int(s[0]) + int(s[1])) * 60 + (10 * int(s[3]) + int(s[4]))\\nt1 = (t1 - t2 + 24 * 60) % (24 * 60)\\nx1 = t1 // 60\\nx2 = t1 % 60\\nprint(x1 // 10, end = '')\\nprint(x1 % 10, end = '')\\nprint(':', end = '')\\nprint(x2 // 10, end = '')\\nprint(x2 % 10)\\n\", \"s = input().split(\\\":\\\")\\nt = input().split(\\\":\\\")\\n\\nh = int(s[0]) - int(t[0])\\n\\nm = int(s[1]) - int(t[1])\\nwhile m < 0:\\n    m += 60\\n    h -= 1\\nwhile h < 0:\\n    h += 24\\n\\n\\nmstr = ''\\nif m < 10:\\n    mstr = '0' + str(m)\\nelse:\\n    mstr = str(m)\\n\\nhstr = ''\\nif h < 10:\\n    hstr = '0' + str(h)\\nelse:\\n    hstr = str(h)\\n\\nprint(hstr + ':' + mstr)\\n\\n\", \"s1=input().strip()\\ns2=input().strip()\\nh1=int(s1[:2])\\nh2=int(s2[:2])\\nm1=int(s1[3:])\\nm2=int(s2[3:])\\nh3=h1-h2\\nm3=m1-m2\\nif m3<0:\\n    m3=60+m3\\n    h3-=1\\nif h3<0:\\n    h3=24+h3\\nprint((2-len(str(h3)))*'0'+str(h3)+':'+(2-len(str(m3)))*'0'+str(m3))\\n\", \"s = list(map(int,input().split(':')))\\ns = (24+s[0])*60+s[1]\\nt = list(map(int,input().split(':')))\\nt = t[0]*60+t[1]\\np = (s - t) % (24 * 60)\\np = '{:02}:{:02}'.format(p//60, p % 60)\\nprint(p)\\n\", \"h,m = [int(x) for x in input().split(\\\":\\\")]\\nhdiff, mdiff = [int(x) for x in input().split(\\\":\\\")]\\n\\nm1=m-mdiff\\nh1=h-hdiff\\nif m1<0:\\n  m1=60+m1\\n  h1=h1-1\\nif h1<0:\\n  h1=24+h1\\nh1=str(h1)\\nm1=str(m1)\\nprint(h1.zfill(2)+\\\":\\\"+m1.zfill(2))\", \"from sys import stdin\\nfrom datetime import datetime, timedelta\\n\\ndef main():\\n\\ts = stdin.readline().strip()\\n\\tt = stdin.readline().strip()\\n\\n\\ts = datetime.strptime(s, '%H:%M')\\n\\tt = datetime.strptime(t, '%H:%M')\\n\\n\\tt = timedelta(hours = t.hour, minutes = t.minute)\\n\\n\\tp = s - t\\n\\n\\tprint('{:02}:{:02}'.format(p.hour, p.minute))\\n\\ndef __starting_point(): main()\\n__starting_point()\", \"a = input()\\nq1, q2, q3, q4 = int(a[0]), int(a[1]), int(a[3]), int(a[4])\\nb = input()\\nw1, w2, w3, w4 = int(b[0]), int(b[1]), int(b[3]), int(b[4])\\nww = (q3*10 + q4) + (q1*10 + q2)*60\\nqq = (w3*10 + w4) + (w1*10 + w2)*60\\ns = \\\"\\\"\\nif ww == qq:\\n    print(\\\"00:00\\\")\\nelif (ww - qq) > 0:\\n    if(ww - qq) // 60 > 9:\\n        d = str((ww - qq)//60)\\n        s += d\\n    else:\\n        s += \\\"0\\\"\\n        d = str((ww - qq)//60)\\n        s += d\\n    s += \\\":\\\"\\n    if (ww - qq) % 60 > 9:\\n        d = str((ww - qq)%60)\\n        s += d\\n    else:\\n        s += \\\"0\\\"\\n        d = str((ww - qq)%60)\\n        s += d \\n    print(s)\\nelse:\\n    if(ww - qq + 1440) // 60 > 9:\\n            d = str((ww - qq+ 1440)//60)\\n            s += d\\n    else:\\n        s += \\\"0\\\"\\n        d = str((ww - qq+ 1440)//60)\\n        s += d\\n    s += \\\":\\\"\\n    if (ww - qq + 1440) % 60 > 9:\\n        d = str((ww - qq + 1440)%60)\\n        s += d\\n    else:\\n        s += \\\"0\\\"\\n        d = str((ww - qq + 1440)%60)\\n        s += d   \\n    print(s)\\n\\n\", \"from datetime import *\\na = input().split(\\\":\\\")\\nb = input().split(\\\":\\\")\\nx = datetime(1,1,3,int(a[0]),int(a[1]))\\ny = timedelta(hours=int(b[0]),minutes=int(b[1]))\\nz = str(x - y).split(' ')[1].split(\\\":\\\")\\nprint(\\\"%s:%s\\\"%(z[0],z[1]))\\n\", \"current = input()\\nsleep = input()\\n\\nhour_current = current[:current.index(':')]\\nmin_current = current[current.index(':')+1:]\\n\\nhour_sleep = sleep[:sleep.index(':')]\\nmin_sleep = sleep[sleep.index(':')+1:]\\n\\ncurrent_in_min = int(hour_current)*60 + int(min_current)\\nsleep_in_min = int(hour_sleep)*60 + int(min_sleep)\\n\\nbed_time = current_in_min - sleep_in_min\\nif bed_time < 0 :\\n    bed_time = 24*60 + bed_time\\n    out_hour = bed_time // 60\\n    out_min = bed_time % 60\\nelse:\\n    out_hour = bed_time // 60\\n    out_min = bed_time % 60\\nif out_hour < 10 :\\n    out_hour = \\\"0\\\"+str(out_hour)\\nif out_min < 10 :\\n    out_min = \\\"0\\\" + str(out_min)\\nprint(str(out_hour) + \\\":\\\" + str(out_min))\\n\", \"s1=input()\\ns2=input()\\nh1,m1=s1.split(':')\\nh2,m2=s2.split(':')\\nm=int(m1)-int(m2)\\nh=int(h1)-int(h2)-1*(m<0)\\nprint(str(h%24).zfill(2),str(m%60).zfill(2),sep=':')\\n\\n\\n\", \"import sys\\nimport math\\nimport heapq\\nimport random\\nimport collections\\nimport datetime\\n\\ndef main():\\n    # sys.stdin = open('input.txt', 'r')\\n    # sys.stdout = open('output.txt', 'w')\\n\\n    t1 = list(map(int, input().strip().split(':')))\\n    t2 = list(map(int, input().strip().split(':')))\\n\\n    t1_ = datetime.timedelta(hours=t1[0], minutes=t1[1])\\n    t2_ = datetime.timedelta(hours=t2[0], minutes=t2[1])\\n\\n    t3_ = t1_- t2_\\n    s = str(t3_)\\n\\n    if len(s[-8:-3]) == 4:\\n        print('0'+s[-8:-3])\\n\\n    elif len(s[-8:-3]) == 5 and s[-8] == ' ':\\n        print('0'+s[-7:-3])\\n\\n    else:\\n        print(s[-8:-3])\\n\\n    # sys.stdin.close()\\n    # sys.stdout.close()\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"[e1,e2] = map(int,input().split(':'))\\n[s1,s2] = map(int,input().split(':'))\\n\\ntotal1 = e1*60 + e2;\\ntotal2 = s1*60 + s2;\\nans = 0\\nif total1 >= total2 :\\n    ans = total1 - total2\\nelse:\\n    ans = 1440 - total2 + total1\\nout = ''\\nif int(ans/60) < 10:\\n    out = out + '0' + str(int(ans/60))\\nelse:\\n    out = str(int(ans/60))\\nout = out + ':'\\nif int(ans%60) < 10:\\n    out = out + '0' + str(ans%60)\\nelse:\\n    out = out + str(ans%60)\\nprint(out)\", \"[e1,e2] = map(int,input().split(':'))\\n[s1,s2] = map(int,input().split(':'))\\n\\ntotal1 = e1*60 + e2;\\ntotal2 = s1*60 + s2;\\nans = 0\\nif total1 >= total2 :\\n    ans = total1 - total2\\nelse:\\n    ans = 1440 - total2 + total1\\nprint('{:02}:{:02}'.format(int(ans/60),int(ans%60)))\", \"def ss(a):\\n    if a > 9:\\n        return str(a)\\n    else:\\n        return '0'+str(a)\\na = [int(x) for x in input().split(':')]\\nb = [int(x) for x in input().split(':')]\\nh = a[0] - b[0]\\nm = a[1] - b[1]\\nhh = 0\\nwhile m < 0:\\n    m = 60 - abs(m)\\n    hh += 1\\nh -= hh\\nwhile h < 0:\\n    h = 24 - abs(h)\\nprint(ss(h),':',ss(m),sep = '')\", \"s = list(map(int, input().split(':')))\\nt = list(map(int, input().split(':')))\\n\\np = [0, 0]\\nif s[0] - t[0] < 0:\\n    p[0] = 24 - (t[0] - s[0])\\nelse:\\n    p[0] = s[0] - t[0]\\n\\nif s[1] - t[1] < 0:\\n    p[1] = 60 - (t[1] - s[1])\\n    if p[0] == 0:\\n        p[0] = 23\\n    else:\\n        p[0] -= 1\\nelse:\\n    p[1] = s[1] - t[1]\\n\\nif p[0] < 10:\\n    print('0', p[0], sep = '', end = ':')\\nelse:\\n    print(p[0], end = ':')\\nif p[1] < 10:\\n    print('0', p[1], sep = '')\\nelse:\\n    print(p[1])\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"05:50\\n05:44\\n\",\n    \"00:00\\n01:00\\n\",\n    \"00:01\\n00:00\\n\",\n    \"23:59\\n23:59\\n\",\n    \"23:44\\n23:55\\n\",\n    \"00:00\\n13:12\\n\",\n    \"12:00\\n23:59\\n\",\n    \"12:44\\n12:44\\n\",\n    \"05:55\\n07:12\\n\",\n    \"07:12\\n05:55\\n\",\n    \"22:22\\n22:22\\n\",\n    \"22:22\\n22:23\\n\",\n    \"23:24\\n23:23\\n\",\n    \"00:00\\n00:00\\n\",\n    \"23:30\\n00:00\\n\",\n    \"01:00\\n00:00\\n\",\n    \"05:44\\n06:00\\n\",\n    \"00:00\\n23:59\\n\",\n    \"21:00\\n01:00\\n\",\n    \"21:21\\n12:21\\n\",\n    \"12:21\\n21:12\\n\",\n    \"12:33\\n23:33\\n\",\n    \"07:55\\n05:53\\n\",\n    \"19:30\\n02:00\\n\",\n    \"21:30\\n02:00\\n\",\n    \"19:30\\n09:30\\n\",\n    \"13:08\\n00:42\\n\",\n    \"13:04\\n09:58\\n\",\n    \"21:21\\n23:06\\n\",\n    \"20:53\\n10:23\\n\",\n    \"12:59\\n00:45\\n\",\n    \"12:39\\n22:21\\n\",\n    \"21:10\\n13:50\\n\",\n    \"03:38\\n23:46\\n\",\n    \"03:48\\n00:41\\n\",\n    \"07:43\\n12:27\\n\",\n    \"03:23\\n08:52\\n\",\n    \"16:04\\n10:28\\n\",\n    \"12:53\\n08:37\\n\",\n    \"13:43\\n17:23\\n\",\n    \"00:00\\n00:01\\n\",\n    \"10:10\\n01:01\\n\",\n    \"10:05\\n00:00\\n\",\n    \"09:09\\n00:00\\n\",\n    \"09:10\\n00:01\\n\",\n    \"23:24\\n00:28\\n\",\n    \"10:00\\n01:00\\n\"\n  ],\n  \"outputs\": [\n    \"00:06\\n\",\n    \"23:00\\n\",\n    \"00:01\\n\",\n    \"00:00\\n\",\n    \"23:49\\n\",\n    \"10:48\\n\",\n    \"12:01\\n\",\n    \"00:00\\n\",\n    \"22:43\\n\",\n    \"01:17\\n\",\n    \"00:00\\n\",\n    \"23:59\\n\",\n    \"00:01\\n\",\n    \"00:00\\n\",\n    \"23:30\\n\",\n    \"01:00\\n\",\n    \"23:44\\n\",\n    \"00:01\\n\",\n    \"20:00\\n\",\n    \"09:00\\n\",\n    \"15:09\\n\",\n    \"13:00\\n\",\n    \"02:02\\n\",\n    \"17:30\\n\",\n    \"19:30\\n\",\n    \"10:00\\n\",\n    \"12:26\\n\",\n    \"03:06\\n\",\n    \"22:15\\n\",\n    \"10:30\\n\",\n    \"12:14\\n\",\n    \"14:18\\n\",\n    \"07:20\\n\",\n    \"03:52\\n\",\n    \"03:07\\n\",\n    \"19:16\\n\",\n    \"18:31\\n\",\n    \"05:36\\n\",\n    \"04:16\\n\",\n    \"20:20\\n\",\n    \"23:59\\n\",\n    \"09:09\\n\",\n    \"10:05\\n\",\n    \"09:09\\n\",\n    \"09:09\\n\",\n    \"22:56\\n\",\n    \"09:00\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/387/A",
  "starter_code": ""
}