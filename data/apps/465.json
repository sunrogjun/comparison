{
  "task_id": "APPS/465",
  "problem_id": 465,
  "prompt": "Given three numbers $n, a, b$. You need to find an adjacency matrix of such an undirected graph that the number of components in it is equal to $a$, and the number of components in its complement is $b$. The matrix must be symmetric, and all digits on the main diagonal must be zeroes.\n\nIn an undirected graph loops (edges from a vertex to itself) are not allowed. It can be at most one edge between a pair of vertices.\n\nThe adjacency matrix of an undirected graph is a square matrix of size $n$ consisting only of \"0\" and \"1\", where $n$ is the number of vertices of the graph and the $i$-th row and the $i$-th column correspond to the $i$-th vertex of the graph. The cell $(i,j)$ of the adjacency matrix contains $1$ if and only if the $i$-th and $j$-th vertices in the graph are connected by an edge.\n\nA connected component is a set of vertices $X$ such that for every two vertices from this set there exists at least one path in the graph connecting this pair of vertices, but adding any other vertex to $X$ violates this rule.\n\nThe complement or inverse of a graph $G$ is a graph $H$ on the same vertices such that two distinct vertices of $H$ are adjacent if and only if they are not adjacent in $G$.\n\n\n-----Input-----\n\nIn a single line, three numbers are given $n, a, b \\,(1 \\le n \\le 1000, 1 \\le a, b \\le n)$: is the number of vertexes of the graph, the required number of connectivity components in it, and the required amount of the connectivity component in it's complement. \n\n\n-----Output-----\n\nIf there is no graph that satisfies these constraints on a single line, print \"NO\" (without quotes).\n\nOtherwise, on the first line, print \"YES\"(without quotes). In each of the next $n$ lines, output $n$ digits such that $j$-th digit of $i$-th line must be $1$ if and only if there is an edge between vertices $i$ and $j$ in $G$ (and $0$ otherwise). Note that the matrix must be symmetric, and all digits on the main diagonal must be zeroes. \n\nIf there are several matrices that satisfy the conditions \u2014 output any of them.\n\n\n-----Examples-----\nInput\n3 1 2\n\nOutput\nYES\n001\n001\n110\n\nInput\n3 3 3\n\nOutput\nNO",
  "solutions": "[\"n, a, b = map(int,input().split())\\nif a>1 and b>1: print(\\\"NO\\\"); return\\nif 2<=n<=3 and a == b == 1: print(\\\"NO\\\"); return\\nprint(\\\"YES\\\")\\n\\nif b == 1:\\n    adj = [[0]*n for i in range(n)]\\n    conn = n\\n    for i in range(n):\\n        if conn == a: break\\n        adj[i][i+1] = adj[i+1][i] = 1\\n        conn-= 1\\n        if conn == a: break\\nelif a == 1:\\n    adj = [[1]*n for i in range(n)]\\n    conn = n\\n    for i in range(n): adj[i][i] = 0\\n    for i in range(n):\\n        if conn == b: break\\n        adj[i][i+1] = adj[i+1][i] = 0\\n        conn-= 1\\n        if conn == b: break\\n\\nfor row in adj:\\n    print(*row, sep='')\\n\", \"#     Educational Codeforces Round 45 (Rated for Div. 2)\\nimport collections\\nfrom functools import cmp_to_key\\n#key=cmp_to_key(lambda x,y: 1 if x not in y else -1 )\\n\\nimport sys\\ndef getIntList():\\n    return list(map(int, input().split()))    \\n\\n \\n            \\n    \\nn,a,b = getIntList()\\na0 = a\\nb0 = b\\nif a0>b0:\\n    a0,b0 = b,a\\nif n==2 and (a0,b0) == (1,1):\\n    print('NO')\\n    return\\nif n==3 and (a0,b0) == (1,1):\\n    print('NO')\\n    return    \\nif a>1 and b>1:\\n    print('NO')\\n    return\\n\\nmat = [['0' for y in range(n)]for x in range(n)]\\nmat1 = [['1' for y in range(n)]for x in range(n)]\\nif b==1:\\n    for x in range(n-a):\\n        mat[x][x+1] = '1'\\n        mat[x+1][x] = '1'\\nelse:\\n    mat = mat1\\n    for x in range(n):\\n        mat[x][x] = '0'\\n    for x in range(n-b):\\n        mat[x][x+1] = '0'\\n        mat[x+1][x] = '0'\\n\\nprint('YES')\\nfor x in range(n):\\n    print(''.join(mat[x]))\\n\", \"import math;\\ndef getIntList():\\n    return list(map(int, input().split()));\\ndef getTransIntList(n):\\n    first=getIntList();\\n    m=len(first);\\n    result=[[0]*n for _ in range(m)];\\n    for i in range(m):\\n        result[i][0]=first[i];\\n    for j in range(1, n):\\n        curr=getIntList();\\n        for i in range(m):\\n            result[i][j]=curr[i];\\n    return result;\\nn, a, b = getIntList();\\nif a>1 and b>1:\\n    print('NO');\\nelif a==b==1 and (n==2 or n==3):\\n    print('NO');\\nelse:\\n    c=max(a, b);\\n    m=[[0]*n for _ in range(n)];\\n    for i in range(n-c):\\n        m[i][i+1]=1;\\n        m[i+1][i]=1;\\n    if b>1:\\n        for i in range(n):\\n            for j in range(n):\\n                if i!=j:\\n                    m[i][j]=1-m[i][j];\\n    print('YES');\\n    for i in range(n):\\n        print(''.join(map(str, m[i])));\", \"\\n\\n\\nstr=input().split()\\nn,a,b=[int(str[x]) for x in range(0,3)]\\ninv=0\\nif (b!=1):\\n\\tt=a\\n\\ta=b\\n\\tb=t\\n\\tinv=1\\n\\t\\nif (b!=1 or n>1 and n<4 and a==1 and b==1):\\n\\tprint ('NO')\\n\\treturn\\n\\nprint ('YES')\\n\\t\\nf=[[0]*n for i in range(0,n)]\\n#print (f)\\n\\nfor i in range(0,n-a):\\n\\tf[i][i+1]=f[i+1][i]=1\\n#f[0][1]=1\\n\\n#print (f[0][1],f[1][1],f[2][1])\\n\\nfor i in range(0,n):\\n\\tcur=[chr(((f[i][j]^inv)&(i!=j))+48) for j in range(0,n)]\\n\\tprint (''.join(cur))\", \"n, a, b = map(int, input().split())\\nif a > 1 < b or a * b == 1 and 1 < n < 4:\\n    print('NO')\\nelse:\\n    z, o = ('01', '10')[a < b]\\n    l = [[z] * n for _ in range(n)]\\n    for i in range(n):\\n        l[i][i] = '0'\\n    for i in range(n - a * b):\\n        l[i][i + 1] = l[i + 1][i] = o\\n    print('YES')\\n    print('\\\\n'.join(map(''.join, l)))\", \"n, a, b = map(int, input().split())\\nz, o = ('01', '10')[a < b]\\nn *= not (a > 1 < b or 1 < n * a * b < 4)\\nl = [[z] * n for _ in range(n)]\\nfor i in range(n):\\n    l[i][i] = '0'\\nfor i in range(n - a * b):\\n    l[i][i + 1] = l[i + 1][i] = o\\nprint(('YES', 'NO')[not n])\\nprint('\\\\n'.join(map(''.join, l)))\", \"n,a,b=map(int,input().split())\\nif a>n:\\n    print('NO')\\n    return\\nif b>n:\\n    print(\\\"NO\\\")\\n    return\\nif a==1  and b==1:\\n    if n==2 or n==3:\\n        print('NO')\\n        return\\nif n==1 and a>1 or n==1 and b>1:\\n    print('NO')\\n    return\\nif min(a,b)>1:\\n    print('NO')\\n    return \\n\\ndef check(mat):\\n    vis=[0]*n \\n    cnt=0\\n    for i in range(n):\\n        if vis[i]==0:\\n            q=[i]\\n            cnt+=1 \\n            vis[i]=1  \\n            while q:\\n                t=q.pop(0)\\n                for j in range(n):\\n                    if mat[t][j]==1 and vis[j]==0:\\n                        vis[j]=1 \\n                        q.append(j)\\n        return cnt \\nmat=[[0 for i in range(n)] for j in range(n)]\\nm=max(a,b)\\nj=1 \\nfor i in range(n):\\n    if j<n:\\n        mat[i][j]=1 \\n        mat[j][i]=1 \\n    j+=1 \\nfor i in range(m-1):\\n    curr=n-i-1 \\n    for j in range(n):\\n        if mat[curr][j]==1:\\n            mat[curr][j]=0 \\n            mat[j][curr]=0 \\nif b==1:\\n    print('YES')\\n    for i in range(n): \\n        print(*mat[i],sep='')\\n    \\nelse:\\n    print('YES')\\n    for i in range(n):\\n        for j in range(n):\\n            mat[i][j]=1-mat[i][j]\\n    for i in range(n):\\n        mat[i][i]=0\\n    for i in range(n):\\n        print(*mat[i],sep='')\", \"n, a, b = map(int, input().split())\\nif (n == 3 or n == 2) and (a == 1 and b == 1):\\n    print(\\\"NO\\\")\\n    return\\ng = [[0 for i in range(n)] for j in range(n)]\\nif a > 1 and b == 1:\\n    for i in range(n - a - 1, -1, -1):\\n        g[i][i + 1] = g[i + 1][i] = 1\\nelif b > 1 and a == 1:\\n    a, b = b, a\\n    for i in range(n - a - 1, -1, -1):\\n        g[i][i + 1] = g[i + 1][i] = 1\\n    for i in range(n):\\n        for j in range(n):\\n            if g[i][j] == 0:\\n                g[i][j] = 1\\n            elif g[i][j] == 1:\\n                g[i][j] = 0\\n    for i in range(n):\\n        g[i][i] = 0\\nelif a == 1 and b == 1:\\n    for i in range(n - 1):\\n        g[i][i + 1] = g[i + 1][i] = 1\\nelif a > 1 and b > 1:\\n    print(\\\"NO\\\")\\n    return\\nprint(\\\"YES\\\")\\nfor i in range(n):\\n    for j in range(n):\\n        print(g[i][j], end='')\\n    print()\", \"n, a, b = list(map(int, input().split()))\\nz, o = ('01', '10')[a < b]\\nn *= not (a > 1 < b or 1 < n * a * b < 4)\\nl = [[z] * n for _ in range(n)]\\nfor i in range(n):\\n    l[i][i] = '0'\\nfor i in range(n - a * b):\\n    l[i][i + 1] = l[i + 1][i] = o\\nprint(('YES', 'NO')[not n])\\nprint('\\\\n'.join(map(''.join, l)))\\n\\n\"]",
  "input_output": "{\"inputs\": [\"3 1 2\\n\", \"3 3 3\\n\", \"5 1 1\\n\", \"2 1 1\\n\", \"1 1 1\\n\", \"3 1 1\\n\", \"5 2 2\\n\", \"4 1 1\\n\", \"4 4 1\\n\", \"3 1 3\\n\", \"2 1 2\\n\", \"6 1 1\\n\", \"3 2 1\\n\", \"5 1 2\\n\", \"4 1 2\\n\", \"2 2 1\\n\", \"3 3 1\\n\", \"2 2 2\\n\", \"1 1 1\\n\", \"2 1 1\\n\", \"2 1 2\\n\", \"2 2 1\\n\", \"2 2 2\\n\", \"3 1 1\\n\", \"3 1 2\\n\", \"3 1 3\\n\", \"3 2 1\\n\", \"3 2 2\\n\", \"3 2 3\\n\", \"3 3 1\\n\", \"3 3 2\\n\", \"3 3 3\\n\", \"4 1 1\\n\", \"4 1 2\\n\", \"4 1 3\\n\", \"4 1 4\\n\", \"4 2 1\\n\", \"4 2 2\\n\", \"4 2 3\\n\", \"4 2 4\\n\", \"4 3 1\\n\", \"4 3 2\\n\", \"4 3 3\\n\", \"4 3 4\\n\", \"4 4 1\\n\", \"4 4 2\\n\", \"4 4 3\\n\", \"4 4 4\\n\"], \"outputs\": [\"YES\\n001\\n001\\n110\\n\", \"NO\\n\", \"YES\\n01000\\n10100\\n01010\\n00101\\n00010\\n\", \"NO\\n\", \"YES\\n0\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n0100\\n1010\\n0101\\n0010\\n\", \"YES\\n0000\\n0000\\n0000\\n0000\\n\", \"YES\\n011\\n101\\n110\\n\", \"YES\\n01\\n10\\n\", \"YES\\n010000\\n101000\\n010100\\n001010\\n000101\\n000010\\n\", \"YES\\n010\\n100\\n000\\n\", \"YES\\n00111\\n00011\\n10001\\n11001\\n11110\\n\", \"YES\\n0011\\n0001\\n1001\\n1110\\n\", \"YES\\n00\\n00\\n\", \"YES\\n000\\n000\\n000\\n\", \"NO\\n\", \"YES\\n0\\n\", \"NO\\n\", \"YES\\n01\\n10\\n\", \"YES\\n00\\n00\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n001\\n001\\n110\\n\", \"YES\\n011\\n101\\n110\\n\", \"YES\\n010\\n100\\n000\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n000\\n000\\n000\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n0100\\n1010\\n0101\\n0010\\n\", \"YES\\n0011\\n0001\\n1001\\n1110\\n\", \"YES\\n0011\\n0011\\n1101\\n1110\\n\", \"YES\\n0111\\n1011\\n1101\\n1110\\n\", \"YES\\n0100\\n1010\\n0100\\n0000\\n\", \"NO\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n0100\\n1000\\n0000\\n0000\\n\", \"NO\\n\", \"NO\\n\", \"NO\\n\", \"YES\\n0000\\n0000\\n0000\\n0000\\n\", \"NO\\n\", \"NO\\n\", \"NO\\n\"]}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/990/D",
  "starter_code": ""
}