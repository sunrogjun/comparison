{
  "task_id": "APPS/289",
  "problem_id": 289,
  "prompt": "Tonio has a keyboard with only two letters, \"V\" and \"K\".\n\nOne day, he has typed out a string s with only these two letters. He really likes it when the string \"VK\" appears, so he wishes to change at most one letter in the string (or do no changes) to maximize the number of occurrences of that string. Compute the maximum number of times \"VK\" can appear as a substring (i.\u00a0e. a letter \"K\" right after a letter \"V\") in the resulting string.\n\n\n-----Input-----\n\nThe first line will contain a string s consisting only of uppercase English letters \"V\" and \"K\" with length not less than 1 and not greater than 100.\n\n\n-----Output-----\n\nOutput a single integer, the maximum number of times \"VK\" can appear as a substring of the given string after changing at most one character.\n\n\n-----Examples-----\nInput\nVK\n\nOutput\n1\n\nInput\nVV\n\nOutput\n1\n\nInput\nV\n\nOutput\n0\n\nInput\nVKKKKKKKKKVVVVVVVVVK\n\nOutput\n3\n\nInput\nKVKV\n\nOutput\n1\n\n\n\n-----Note-----\n\nFor the first case, we do not change any letters. \"VK\" appears once, which is the maximum number of times it could appear.\n\nFor the second case, we can change the second character from a \"V\" to a \"K\". This will give us the string \"VK\". This has one occurrence of the string \"VK\" as a substring.\n\nFor the fourth case, we can change the fourth character from a \"K\" to a \"V\". This will give us the string \"VKKVKKKKKKVVVVVVVVVK\". This has three occurrences of the string \"VK\" as a substring. We can check no other moves can give us strictly more occurrences.",
  "solutions": "[\"s = input()\\nd = dict()\\nd['V'] = 'K'\\nd['K'] = 'V'\\nm = s.count('VK')\\ns = list(s)\\nfor i in range(len(s)):\\n    s[i] = d[s[i]]\\n    m = max(m,''.join(s).count('VK'))\\n    s[i] = d[s[i]]\\nprint(m)\", \"def alternate(c):\\n    if c == \\\"V\\\":\\n        return \\\"K\\\"\\n    return \\\"V\\\"\\n\\ns = input()\\nres = s.count(\\\"VK\\\")\\nfor i in range(len(s)):\\n    res = max(res, (s[:i]+alternate(s[i])+s[i+1:]).count(\\\"VK\\\"))\\nprint(res)\", \"import re\\ndef count(s):\\n    return len(re.findall(r'VK', s))\\n\\ns = input().strip()\\nbest = count(s)\\nfor i in range(len(s)):\\n    cur_s = s[:i] + 'V' + s[i + 1:]\\n    best = max(best, count(cur_s))\\n    cur_s = s[:i] + 'K' + s[i + 1:]\\n    best = max(best, count(cur_s))\\nprint(best)\\n\", \"s=str(input())\\nm=s.count('VK')\\nfor i in range(len(s)):\\n    if s[i]=='V':\\n        t='K'\\n    else:\\n        t='V'\\n    temp=s[:i]+t+s[i+1:]\\n    #print(temp)\\n    if temp.count('VK')>m:\\n        m=temp.count('VK')\\nprint(m)\\n\", \"'''input\\nKKKKKKV\\n'''\\ns = input().replace(\\\"VK\\\", \\\".\\\")\\nif \\\"VV\\\" in s or \\\"KK\\\" in s:\\n\\tprint(s.count(\\\".\\\") + 1)\\nelse:\\n\\tprint(s.count(\\\".\\\"))\", \"#!/usr/bin/env python3\\nimport re\\n\\n\\ndef solve():\\n    s = input()\\n    m = 0\\n    for i in range(len(s)):\\n        m = max(m, len(re.findall(\\\"VK\\\", s[:i]+\\\"V\\\"+s[i+1:])))\\n        m = max(m, len(re.findall(\\\"VK\\\", s[:i]+\\\"K\\\"+s[i+1:])))\\n    print(m)\\n\\n\\ndef __starting_point():\\n    solve()\\n\\n__starting_point()\", \"def get(s):\\n    res = 0\\n    for i in range(len(s) - 1):\\n        if s[i] == 'V' and s[i + 1] == 'K':\\n            res += 1\\n            \\n    return res\\n\\n\\ns = input()\\nl = list(s)\\n\\nans = 0\\nfor i in range(len(l)):\\n    st = l[i]\\n    \\n    l[i] = 'V'\\n    ans = max(ans, get(''.join(l)))\\n    \\n    l[i] = 'K'\\n    ans = max(ans, get(''.join(l)))\\n    \\n    l[i] = st\\n    \\nprint(ans)\", \"s = input()\\nmaxx = 0\\nfor i in range(len(s)):\\n    news = s[:i] + 'V' + s[i+1:]\\n    maxx = max(news.count('VK'), maxx)\\n    news = s[:i] + 'K' + s[i + 1:]\\n    maxx = max(news.count('VK'), maxx)\\nprint(maxx)\\n\", \"s=input()\\nif len(s)==1:\\n    print(0)\\nelse:\\n    x=s.count('VK')\\n    for i in range(len(s)):\\n        if s[i]=='K':\\n            if i<len(s)-1 and s[i+1]=='K' and (i==0 or s[i-1]=='K'):\\n                x+=1\\n                break\\n        elif i>0 and s[i-1]=='V' and (i==len(s)-1 or s[i+1]=='V'):\\n            x+=1\\n            break\\n    print(x)\\n\", \"s = input().strip()\\ns = s.replace(\\\"VK\\\", \\\"*\\\")\\ncnt = sum(map(lambda x: x==\\\"*\\\",s))\\nif \\\"VV\\\" in s or \\\"KK\\\" in s:\\n  cnt +=1\\nprint(cnt)  \", \"s=input()\\nm=s.count('VK')\\nfor i in range(len(s)):\\n    s2=s[:i]+'V'+s[i+1:]\\n    s3=s[:i]+'K'+s[i+1:]\\n    m=max(m,s2.count('VK'))\\n    m=max(m,s3.count('VK'))\\n    #print(s2,s3)\\nprint(m)\", \"l=input()\\ns=[]\\nfor i in l:\\n\\tif(i=='V'):\\n\\t\\ts.append(1)\\n\\telse:\\n\\t\\ts.append(0)\\nls=len(s)\\ni=0\\nmaxc = 0\\nc = 0\\nwhile i+1<ls:\\n\\tif(s[i]==1 and s[i+1]==0):\\n\\t\\tc+=1\\n\\ti+=1\\nmaxc = max(maxc,c)\\nj=0\\nwhile j<ls:\\n\\tif(s[j]==1):\\n\\t\\ts[j]=0\\n\\telse:\\n\\t\\ts[j]=1\\n\\ti=0\\n\\tc=0\\n\\twhile i+1<ls:\\n\\t\\tif(s[i]==1 and s[i+1]==0):\\n\\t\\t\\tc+=1\\n\\t\\ti+=1\\n\\tmaxc=max(c,maxc)\\n\\tif(s[j]==1):\\n\\t\\ts[j]=0\\n\\telse:\\n\\t\\ts[j]=1\\n\\tj+=1\\nprint(maxc)\", \"import sys\\n\\ndef solve():\\n    s = [ch for ch in input()]\\n    ans = ''.join(s).count('VK')\\n\\n    for i in range(len(s)):\\n        if s[i] == 'V':\\n            s[i] = 'K'\\n\\n            tmp = ''.join(s).count('VK')\\n            ans = max(ans, tmp)\\n\\n            s[i] = 'V'\\n        else:\\n            s[i] = 'V'\\n\\n            tmp = ''.join(s).count('VK')\\n            ans = max(ans, tmp)\\n\\n            s[i] = 'K'\\n\\n    print(ans)\\n\\ndef debug(x, table):\\n    for name, val in table.items():\\n        if x is val:\\n            print('DEBUG:{} -> {}'.format(name, val), file=sys.stderr)\\n            return None\\n\\ndef __starting_point():\\n    solve()\\n__starting_point()\", \"def main():\\n    s = input()\\n    c = s.count('VK')\\n    if s.find('VVV') >= 0 or s.find('KKK') >= 0 or s[:2] == 'KK' or s[-2:] == 'VV':\\n        c += 1\\n    print(c)\\nmain()\", \"s=input()\\na=s.count(\\\"VK\\\")\\ns=s.replace(\\\"VK\\\",\\\" \\\")\\na+=1 if \\\"VV\\\" in s or \\\"KK\\\" in s else 0\\nprint(a)\\n\", \"x=input()\\nt=x.count(\\\"VK\\\")\\nl=x.replace(\\\"VK\\\",\\\" \\\")\\nif \\\"KK\\\" in l:\\n    t+=1\\n    print(t)\\nelif \\\"VV\\\" in l:\\n    t+=1\\n    print(t)\\nelse:\\n    print(t)\", \"from sys import stdin, stdout\\n\\na = stdin.readline().rstrip()\\na=list(a)\\n\\nvkCount=0\\nchange=False\\nif a[0:2]==list('KK'):\\n    change=True\\n    a[0]='V'\\nelif a[-2:]==list('VV'):\\n    change=True\\n    a[-1]='K'\\n\\ni=0\\nwhile i<len(a)-2 and not change:\\n    if a[i:i+3]==list('VVV'):\\n        a[i+1]='K'\\n        change=True\\n    elif a[i:i+3]==list('KKK'):\\n        a[i+1]='V'\\n        change=True\\n    i+=1\\n        \\nfor i in range(len(a)-1):\\n    if a[i:i+2]==list('VK'):\\n        vkCount+=1\\n\\nprint(vkCount)\\n\", \"import sys\\n\\ndef main():\\n    s=sys.stdin.readline().rstrip()\\n    result=0\\n    \\n    for i in range(len(s)-1):\\n        if s[i:i+2]=='VK': result+=1\\n    \\n    if s.startswith('KK') or s.endswith('VV') or 'VKKK' in s or 'VVV' in s: result+=1\\n    \\n    sys.stdout.write(str(result)+'\\\\n')\\n    \\nmain()\\n\\n\", \"s = input()\\nk = 0\\nfor i in range(len(s) - 1):\\n    if s[i] == 'V' and s[i + 1] == 'K':\\n        k += 1\\nfor i in range(len(s)):\\n    if i < len(s) - 1:\\n        if s[i] == 'V' and s[i + 1] == 'V' and i + 2 == len(s):\\n            k += 1\\n            break\\n        if s[i] == 'V' and s[i + 1] == 'V' and s[i + 2] == 'V':\\n            k += 1\\n            break\\n    if i >= 1:\\n        if i == 1 and s[1] == 'K' and s[0] == 'K':\\n            k += 1\\n            break\\n        if s[i] == 'K' and s[i- 1] == 'K' and s[i - 2] == 'K':\\n            k += 1\\n            break\\nprint(k)\", \"s=list(input())\\nans=0\\nn=len(s)\\nfor i in range(n-1):\\n    if s[i]=='V' and s[i+1]=='K': ans+=1\\nfor t in range(len(s)):\\n    anst=0\\n    ss=s[:]\\n    if ss[t]=='V': ss[t]='K'\\n    else: ss[t]='V'\\n    for i in range(n-1):\\n        if ss[i]=='V' and ss[i+1]=='K': anst+=1\\n    if anst>ans: ans=anst\\nprint(ans)\", \"import sys\\nimport math\\ns = input()\\ncnt = s.count(\\\"VK\\\");\\nif s[:2] == \\\"KK\\\":\\n    cnt += 1\\nelif s[-2:] == 'VV':\\n    cnt += 1\\nelif s.find(\\\"VVV\\\") >= 0:\\n    cnt += 1\\nelif s.find(\\\"KKK\\\") >= 0:\\n    cnt += 1\\nprint(cnt)\", \"#l=[int(i)for i in input().split()]\\ns=input()\\ni=0\\na=s.find(\\\"VK\\\")\\nans=0\\nwhile a!=-1:\\n\\tans+=1\\n\\ts=s[:a]+\\\".\\\"+s[a+2:]\\n\\ta=s.find(\\\"VK\\\")\\nif s.count(\\\"VV\\\")>0 or s.count(\\\"KK\\\")>0:ans+=1\\nprint(ans) \", \"def f(S):\\n    ans = 0\\n    for i in range(1, len(S)):\\n        if S[i - 1] == \\\"V\\\" and S[i] == \\\"K\\\":\\n            ans += 1\\n    return ans\\n\\nS = list(input())\\nans = f(S)\\nD = {\\\"V\\\" : \\\"K\\\", \\\"K\\\" : \\\"V\\\"}\\nfor i in range(len(S)):\\n    S[i] = D[S[i]]\\n    ans = max(ans, f(S))\\n    S[i] = D[S[i]]\\nprint(ans)\", \"#!/usr/bin/env python3\\nfrom sys import stdin,stdout\\n\\n\\ndef ri():\\n    return list(map(int, input().split()))\\n\\n\\ns = input()\\nl = len(s)\\nv = [0 for i in range(l)]\\n\\nif l == 1:\\n    print(0)\\n    return\\n\\n\\ncount = 0\\nfor i in range(l-1):\\n    if v[i]:\\n        continue\\n    if s[i:i+2] == \\\"VK\\\":\\n        v[i] = 1\\n        v[i+1] = 1\\n        count += 1\\n\\nfor i in range(l-1):\\n    if v[i] or v[i+1]:\\n        continue\\n\\n    if s[i:i+2] == \\\"VV\\\" or s[i:i+2] == \\\"KK\\\":\\n        count += 1\\n        break\\n\\nprint(count)\\n\\n\", \"s=list(' '+input())\\nm=0\\nfor i in range(len(s)):\\n    ss=[]\\n    for i0 in range(len(s)):\\n        ss.append(s[i0])\\n    if ss[i]=='V':\\n        ss[i]='K'\\n    elif ss[i]=='K':\\n        ss[i]='V'\\n    mm=0\\n    for i0 in range(len(s)-1):\\n        if ss[i0]=='V'and ss[i0+1]=='K':\\n            mm=mm+1\\n    if mm>m:\\n        m=mm\\nprint(m)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"VK\\n\",\n    \"VV\\n\",\n    \"V\\n\",\n    \"VKKKKKKKKKVVVVVVVVVK\\n\",\n    \"KVKV\\n\",\n    \"VKKVVVKVKVK\\n\",\n    \"VKVVKVKVVKVKKKKVVVVVVVVKVKVVVVVVKKVKKVKVVKVKKVVVVKV\\n\",\n    \"VVKKVKKVVKKVKKVKVVKKVKKVVKKVKVVKKVKKVKVVKKVVKKVKVVKKVKVVKKVVKVVKKVKKVKKVKKVKKVKVVKKVKKVKKVKKVKKVVKVK\\n\",\n    \"KVVKKVKVKVKVKVKKVKVKVVKVKVVKVVKVKKVKVKVKVKVKVKVKVKVKVKVKVKVKVKVVKVKVVKKVKVKK\\n\",\n    \"KVVVVVKKVKVVKVVVKVVVKKKVKKKVVKVKKKVKKKKVKVVVVVKKKVVVVKKVVVVKKKVKVVVVVVVKKVKVKKKVVKVVVKVVKK\\n\",\n    \"VVVVVKKVKVKVKVVKVVKKVVKVKKKKKKKVKKKVVVVVVKKVVVKVKVVKVKKVVKVVVKKKKKVVVVVKVVVVKVVVKKVKKVKKKVKKVKKVVKKV\\n\",\n    \"KKVVKVVKVVKKVVKKVKVVKKV\\n\",\n    \"KKVVKKVVVKKVKKVKKVVVKVVVKKVKKVVVKKVVVKVVVKVVVKKVVVKKVVVKVVVKKVVVKVVKKVVVKKVVVKKVVKVVVKKVVKKVKKVVVKKV\\n\",\n    \"KVKVKVKVKVKVKVKVKVKVVKVKVKVKVKVKVKVVKVKVKKVKVKVKVKVVKVKVKVKVKVKVKVKVKKVKVKVV\\n\",\n    \"VKVVVKKKVKVVKVKVKVKVKVV\\n\",\n    \"KKKKVKKVKVKVKKKVVVVKK\\n\",\n    \"KVKVKKVVVVVVKKKVKKKKVVVVKVKKVKVVK\\n\",\n    \"KKVKKVKKKVKKKVKKKVKVVVKKVVVVKKKVKKVVKVKKVKVKVKVVVKKKVKKKKKVVKVVKVVVKKVVKVVKKKKKVK\\n\",\n    \"VVVKVKVKVVVVVKVVVKKVVVKVVVVVKKVVKVVVKVVVKVKKKVVKVVVVVKVVVVKKVVKVKKVVKKKVKVVKVKKKKVVKVVVKKKVKVKKKKKK\\n\",\n    \"VKVVKVVKKKVVKVKKKVVKKKVVKVVKVVKKVKKKVKVKKKVVKVKKKVVKVVKKKVVKKKVKKKVVKKVVKKKVKVKKKVKKKVKKKVKVKKKVVKVK\\n\",\n    \"KKVKVVVKKVV\\n\",\n    \"VKVKVKVKVKVKVKVKVKVKVVKVKVKVKVKVK\\n\",\n    \"VVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVVKKKVV\\n\",\n    \"VVKKVKVKKKVVVKVVVKVKKVKKKVVVKVVKVKKVKKVKVKVVKKVVKKVKVVKKKVVKKVVVKVKVVVKVKVVKVKKVKKV\\n\",\n    \"VVKVKKVVKKVVKKVVKKVVKKVKKVVKVKKVVKKVVKKVVKKVVKKVVKVVKKVVKVVKKVVKVVKKVVKKVKKVVKVVKKVVKVVKKVV\\n\",\n    \"K\\n\",\n    \"VKVK\\n\",\n    \"VKVV\\n\",\n    \"KV\\n\",\n    \"KK\\n\",\n    \"KKVK\\n\",\n    \"KKKK\\n\",\n    \"KKV\\n\",\n    \"KKVKVK\\n\",\n    \"VKKVK\\n\",\n    \"VKKK\\n\",\n    \"KKK\\n\",\n    \"KVV\\n\",\n    \"KKVKV\\n\",\n    \"VVK\\n\",\n    \"VVVKVKVKVKVKVKVK\\n\",\n    \"KVVVK\\n\",\n    \"VVVKK\\n\",\n    \"KKVV\\n\",\n    \"KKKKKKK\\n\",\n    \"VKKKVK\\n\",\n    \"KKVVV\\n\",\n    \"VVVVVV\\n\",\n    \"KKKV\\n\",\n    \"VVKVV\\n\",\n    \"VKVKKK\\n\",\n    \"VKKV\\n\",\n    \"VKKVV\\n\",\n    \"VVKKVV\\n\",\n    \"KKVVKKV\\n\",\n    \"KKKKK\\n\",\n    \"VKVVKKVKKVVKVKKVKKKVKKVKVKK\\n\",\n    \"VKVKVV\\n\",\n    \"VKVVKVV\\n\",\n    \"VVV\\n\",\n    \"VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV\\n\",\n    \"VVKKKKKKVKK\\n\",\n    \"KVKVKVV\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"14\\n\",\n    \"32\\n\",\n    \"32\\n\",\n    \"21\\n\",\n    \"25\\n\",\n    \"7\\n\",\n    \"24\\n\",\n    \"35\\n\",\n    \"9\\n\",\n    \"6\\n\",\n    \"9\\n\",\n    \"22\\n\",\n    \"25\\n\",\n    \"29\\n\",\n    \"3\\n\",\n    \"16\\n\",\n    \"13\\n\",\n    \"26\\n\",\n    \"26\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"10\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"3\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/801/A",
  "starter_code": ""
}