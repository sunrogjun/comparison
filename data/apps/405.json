{
  "task_id": "APPS/405",
  "problem_id": 405,
  "prompt": "In a new version of the famous Pinball game, one of the most important parts of the game field is a sequence of n bumpers. The bumpers are numbered with integers from 1 to n from left to right. There are two types of bumpers. They are denoted by the characters '<' and '>'. When the ball hits the bumper at position i it goes one position to the right (to the position i + 1) if the type of this bumper is '>', or one position to the left (to i - 1) if the type of the bumper at position i is '<'. If there is no such position, in other words if i - 1 < 1 or i + 1 > n, the ball falls from the game field.\n\nDepending on the ball's starting position, the ball may eventually fall from the game field or it may stay there forever. You are given a string representing the bumpers' types. Calculate the number of positions such that the ball will eventually fall from the game field if it starts at that position.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 200 000)\u00a0\u2014 the length of the sequence of bumpers. The second line contains the string, which consists of the characters '<' and '>'. The character at the i-th position of this string corresponds to the type of the i-th bumper.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the number of positions in the sequence such that the ball will eventually fall from the game field if it starts at that position.\n\n\n-----Examples-----\nInput\n4\n<<><\n\nOutput\n2\nInput\n5\n>>>>>\n\nOutput\n5\nInput\n4\n>><<\n\nOutput\n0\n\n\n-----Note-----\n\nIn the first sample, the ball will fall from the field if starts at position 1 or position 2.\n\nIn the second sample, any starting position will result in the ball falling from the field.",
  "solutions": "[\"n = int(input())\\ns = input()\\nl = 0\\nans = 0\\nwhile l < len(s) and s[l] == '<':\\n    ans += 1\\n    l += 1\\n\\nr = n - 1\\nwhile r >= 0 and s[r] == '>':\\n    ans += 1\\n    r -= 1\\n\\nprint(ans)\\n\", \"# You lost the game.\\nn = int(input())\\ns = str(input())\\n\\ni = 0\\nwhile i < n and s[i] ==\\\"<\\\":\\n    i += 1\\n\\nif i == n:\\n    print(n)\\nelse:\\n    j = n-1\\n    while j >= 0 and s[j] == \\\">\\\":\\n        j -= 1\\n    print(i+(n-j-1))\\n\", \"n = int(input())\\ns = input()\\nans = 0\\nfor i in range(0, n):\\n    if s[i] == '<':\\n        ans += 1\\n    else:\\n        break\\nfor i in range(n - 1, -1, -1):\\n    if s[i] == '>':\\n        ans += 1\\n    else:\\n        break\\nprint(ans)\\n\", \"n = int(input())\\ns = input()\\ncnt = 0\\nfor i in s:\\n    if i != '<': break\\n    cnt += 1\\nfor i in s[::-1]:\\n    if i != '>': break\\n    cnt += 1\\nprint(cnt)\\n\", \"n = int(input())\\ns = input()\\nans = 0\\n\\nfor i in s:\\n    if i == \\\">\\\":\\n        break\\n    ans+=1\\nfor i in s[::-1]:\\n    if i == \\\"<\\\":\\n        break\\n    ans+=1\\nprint(ans)\", \"n = int(input())\\ns = input()\\n\\nresult = 0\\nfor ch in s:\\n    if ch == '<':\\n        result += 1\\n    else:\\n        break\\n\\nfor ch in s[::-1]:\\n    if ch == '>':\\n        result += 1\\n    else:\\n        break\\n\\nprint(result)\\n\", \"n = int(input())\\ns = input()\\nans = 0\\ni = n - 1\\nwhile i != -1 and s[i] == \\\">\\\":\\n    ans += 1\\n    i -= 1\\ni = 0\\nwhile i != n and s[i] == \\\"<\\\":\\n    ans += 1\\n    i += 1\\nprint(ans)\", \"n = int(input() )\\ns = input()\\n\\npos = s.find(\\\"><\\\")\\nif pos == -1 :\\n    print(n)\\nelse :\\n    ans = 0\\n    for i in s :\\n        if i == '>' :\\n            break;\\n        else :\\n            ans += 1;\\n    for i in range(n-1,-1,-1) :\\n        t = s[i]\\n        if t==\\\"<\\\" :\\n            break;\\n        else :\\n            ans += 1;\\n    print(ans)\", \"n,st = int(input()),input()\\n\\ni = 0\\nans = 0\\nwhile i<n and st[i] == '<':\\n    ans += 1\\n    i += 1\\n\\ni = n-1\\nwhile i>=0 and st[i] == '>':\\n    ans += 1\\n    i -= 1\\n\\nprint(ans)\\n\", \"n = int(input())\\n\\ns = input()\\n\\nans = 0\\n\\nfor c in s:\\n    if c == '<':\\n        ans += 1\\n    else:\\n        break\\n\\nfor c in reversed(s):\\n    if c == '>':\\n        ans += 1\\n    else:\\n        break\\n\\nprint(ans)\\n\", \"n = int(input())\\nl = input()\\nans = 0\\nfor i in range(n):\\n    if l[i] == '<':\\n        ans += 1\\n    else:\\n        break\\nfor i in range(n - 1, -1, -1):\\n    if l[i] == '>':\\n        ans += 1\\n    else:\\n        break\\nprint(ans)\\n\", \"n = int(input())\\ns = input()\\ncount = 0\\ni = 0\\nwhile i < n and s[i] == '<':\\n    count += 1\\n    i += 1\\ni = n - 1\\nwhile i >= 0 and s[i] == '>':\\n    count += 1\\n    i -= 1\\nprint(count)\", \"__author__ = 'Think'\\nn=int(input())\\nbumpers=input()\\ntotal=0\\nfor i in bumpers:\\n\\tif i==\\\"<\\\":\\n\\t\\ttotal+=1\\n\\telse:\\n\\t\\tbreak\\nfor i in reversed(bumpers):\\n\\tif i==\\\">\\\":\\n\\t\\ttotal+=1\\n\\telse:\\n\\t\\tbreak\\nprint(total)\", \"#!/usr/bin/env python3\\n\\nfrom sys import stdin\\n\\n\\ndef main():\\n    n, = stdin_get_ints_from_line()\\n    s = stdin_get_string_from_line()\\n\\n    res = 0\\n\\n    for x in s:\\n        if x == '<':\\n            res += 1\\n        else:\\n            break\\n\\n    for x in reversed(s):\\n        if x == '>':\\n            res += 1\\n        else:\\n            break\\n\\n    print(res)\\n    return\\n\\n\\ndef stdin_get_ints_from_line():\\n    return (int(x) for x in stdin.readline().strip().split(' '))\\n\\n\\ndef stdin_get_ints_list_from_line():\\n    return list(int(x) for x in stdin.readline().strip().split(' '))\\n\\n\\ndef stdin_get_string_from_line():\\n    return stdin.readline().strip()\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"N = int(input())\\nlisty = input()\\ncount = 0\\nfor x in listy:\\n\\tif x == '<':\\n\\t\\tcount += 1\\n\\telse:\\n\\t\\tbreak\\nfor x in listy[::-1]:\\n\\tif x == '>':\\n\\t\\tcount += 1\\n\\telse:\\n\\t\\tbreak\\n\\nprint(count)\", \"n = int(input())\\np = 0;\\ns = input()\\nfor i in range(len(s)):\\n    if s[i] == '<':\\n        p += 1;\\n    else:\\n        break;\\nfor i in range(len(s)-1, -1, -1):\\n    if s[i] == '>':\\n        p += 1;\\n    else:\\n        break;\\nprint(p);\", \"\\nn=int(input())\\nplateau=input()\\n\\ni=0\\nwhile n>i and plateau[i]==\\\"<\\\":\\n    i+=1\\n\\nj=n-1\\nwhile j>=0 and plateau[j]==\\\">\\\":\\n    j-=1\\n\\nif i>j:\\n    print(n)\\nelse:\\n    print(i+(n-1-j))\\n\", \"n = int(input());\\ns = input();\\n\\ni = 0;\\nans = 0;\\nwhile i < n and s[i] == \\\"<\\\":\\n    ans += 1;\\n    i += 1;\\n\\ni = n - 1;\\nwhile i >= 0 and s[i] == \\\">\\\":\\n    ans += 1;\\n    i -= 1;\\n\\nprint(ans);\\n\", \"input()\\n\\ns = input()\\nfirst = s[0]\\nlast = s[-1]\\nansw = 0\\nif first == '<':\\n    for i in range(len(s)):\\n        if s[i] == first:\\n            answ += 1\\n        else:\\n            break\\nif last == '>':\\n    for i in range(len(s)-1, -1, -1):\\n        if s[i] == last:\\n            answ += 1\\n        else:\\n            break\\n\\nprint(answ)\\n\", \"n = int(input())\\nbumps = input()\\n\\nans = 0\\n\\nfor i in range(n):\\n  if bumps[i] == \\\">\\\":\\n    ans += i\\n    break\\nelse:\\n  ans += n\\n\\nfor i in range(n):\\n  if bumps[n - 1 - i] == \\\"<\\\":\\n    ans += i\\n    break\\nelse:\\n  ans += n\\n\\nprint(ans)\", \"input()\\nn = input()\\ni = 0\\nk = 0\\nfor i in range(len(n)):\\n    if n[i] == \\\"<\\\":\\n        k+=1\\n    else:\\n        break\\nfor i in range(len(n) - 1, -1, -1):\\n    if n[i] == \\\">\\\":\\n        k+=1\\n    else:\\n        break\\nprint(k)\", \"def main():\\n\\tn = int(input())\\n\\ts = input()\\n\\tcount = 0\\n\\ti = 0\\n\\n\\twhile i < n and s[i] == '<' :\\n\\t\\tcount += 1\\n\\t\\ti += 1\\n\\n\\ti = n - 1\\n\\twhile i > -1 and s[i] == '>':\\n\\t\\tcount += 1\\n\\t\\ti -= 1\\n\\n\\tprint(count)\\n\\n\\ndef __starting_point():\\n\\tmain()\\n__starting_point()\", \"import math\\nimport sys\\n\\nn = input()\\nn = int(n)\\na = input()\\n\\ncount = 0\\nmcount = 0\\nfor i in range(n):\\n    if (a[i] == '<'):\\n        count += 1\\n    else :\\n        break        \\n\\nfor i in range(n-1,-1,-1):\\n    if (a[i] == '>'):\\n        count += 1\\n    else :\\n        break\\n\\n\\nprint (count)\", \"import sys\\n\\nn = int(input())\\na = input()\\nif len(set(a)) == 1:\\n    print(n)\\n    return\\nres = 0\\ni = 0\\nwhile i < n and a[i] == '<':\\n    res += 1\\n    i += 1\\ni = n - 1\\nwhile i >= 0 and a[i] == '>':\\n    res += 1\\n    i -= 1\\nprint(res)\\n\", \"n = int(input())\\ns = input()\\nif s[0] != '<' and s[-1] != '>':\\n    print(0)\\nelif s[0] != '<':\\n    if '<' in s:\\n        print(len(s) - s.rindex('<') - 1)\\n    else:\\n        print(len(s))\\nelif s[-1] != '>':\\n    if '>' in s:\\n        print(s.index('>'))\\n    else:\\n        print(len(s))\\nelse:\\n    print(s.index('>') + len(s) - s.rindex('<') - 1)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4\\n<<><\\n\",\n    \"5\\n>>>>>\\n\",\n    \"4\\n>><<\\n\",\n    \"3\\n<<>\\n\",\n    \"3\\n<<<\\n\",\n    \"3\\n><<\\n\",\n    \"1\\n<\\n\",\n    \"2\\n<>\\n\",\n    \"3\\n<>>\\n\",\n    \"3\\n><>\\n\",\n    \"2\\n><\\n\",\n    \"2\\n>>\\n\",\n    \"2\\n<<\\n\",\n    \"1\\n>\\n\",\n    \"3\\n>><\\n\",\n    \"3\\n>>>\\n\",\n    \"3\\n<><\\n\",\n    \"10\\n<<<><<<>>>\\n\",\n    \"20\\n><><<><<<>>>>>>>>>>>\\n\",\n    \"20\\n<<<<<<<<<<><<<<>>>>>\\n\",\n    \"50\\n<<<<<<<<<<<<<<<<<<<<<<<<<>>>>>>>>>>>>>>>>>>>>>>>>>\\n\",\n    \"100\\n<<<<<<<<<<<<<<<<<<<<<<<<>><<>><<<<<>><>><<<>><><<>>><<>>><<<<><><><<><<<<><>>>>>>>>>>>>>>>>>>>>>>>>>\\n\",\n    \"100\\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<>>>><<>><>><>><<><><><><>>>><><<<>>>><<<>>>>>>><><\\n\",\n    \"100\\n<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n\",\n    \"100\\n>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n\",\n    \"12\\n<<>><<>><<>>\\n\",\n    \"6\\n<<><>>\\n\",\n    \"6\\n><>>>>\\n\",\n    \"8\\n>>>><<<>\\n\",\n    \"4\\n<><>\\n\",\n    \"4\\n><><\\n\",\n    \"7\\n<<>>><>\\n\",\n    \"10\\n><><>>>>>>\\n\",\n    \"5\\n<><>>\\n\",\n    \"12\\n<><<<<>>>>>>\\n\",\n    \"6\\n<>><<>\\n\",\n    \"6\\n>>><>>\\n\",\n    \"10\\n><><>>>><>\\n\",\n    \"5\\n><>>>\\n\",\n    \"5\\n<<><>\\n\",\n    \"5\\n<><<<\\n\",\n    \"4\\n<><<\\n\",\n    \"8\\n<<>><<>>\\n\",\n    \"7\\n<<><>>>\\n\",\n    \"5\\n><<>>\\n\",\n    \"10\\n<<<<<>>>>>\\n\",\n    \"6\\n><<<<<\\n\",\n    \"8\\n<<><><>>\\n\",\n    \"10\\n<<<<><<<><\\n\",\n    \"12\\n<<<>>>><<>>>\\n\",\n    \"4\\n><>>\\n\",\n    \"11\\n<<><<>><<>>\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"6\\n\",\n    \"11\\n\",\n    \"15\\n\",\n    \"50\\n\",\n    \"49\\n\",\n    \"50\\n\",\n    \"100\\n\",\n    \"100\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"10\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"2\\n\",\n    \"4\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/725/A",
  "starter_code": ""
}