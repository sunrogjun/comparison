{
  "task_id": "APPS/501",
  "problem_id": 501,
  "prompt": "Nazar, a student of the scientific lyceum of the Kingdom of Kremland, is known for his outstanding mathematical abilities. Today a math teacher gave him a very difficult task.\n\nConsider two infinite sets of numbers. The first set consists of odd positive numbers ($1, 3, 5, 7, \\ldots$), and the second set consists of even positive numbers ($2, 4, 6, 8, \\ldots$). At the first stage, the teacher writes the first number on the endless blackboard from the first set, in the second stage\u00a0\u2014 the first two numbers from the second set, on the third stage\u00a0\u2014 the next four numbers from the first set, on the fourth\u00a0\u2014 the next eight numbers from the second set and so on. In other words, at each stage, starting from the second, he writes out two times more numbers than at the previous one, and also changes the set from which these numbers are written out to another. \n\nThe ten first written numbers: $1, 2, 4, 3, 5, 7, 9, 6, 8, 10$. Let's number the numbers written, starting with one.\n\nThe task is to find the sum of numbers with numbers from $l$ to $r$ for given integers $l$ and $r$. The answer may be big, so you need to find the remainder of the division by $1000000007$ ($10^9+7$).\n\nNazar thought about this problem for a long time, but didn't come up with a solution. Help him solve this problem.\n\n\n-----Input-----\n\nThe first line contains two integers $l$ and $r$ ($1 \\leq l \\leq r \\leq 10^{18}$)\u00a0\u2014 the range in which you need to find the sum.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the answer modulo $1000000007$ ($10^9+7$).\n\n\n-----Examples-----\nInput\n1 3\n\nOutput\n7\nInput\n5 14\n\nOutput\n105\nInput\n88005553535 99999999999\n\nOutput\n761141116\n\n\n-----Note-----\n\nIn the first example, the answer is the sum of the first three numbers written out ($1 + 2 + 4 = 7$).\n\nIn the second example, the numbers with numbers from $5$ to $14$: $5, 7, 9, 6, 8, 10, 12, 14, 16, 18$. Their sum is $105$.",
  "solutions": "[\"def f(n, mod):\\n    res = 0\\n    n1 = 1\\n    n2 = 2\\n    k = 1\\n    now = 0\\n    while n >= k:\\n        if now == 0:\\n            now = 1\\n            res = (res + n1 * k + (k * (k - 1))) % mod\\n            n -= k\\n            k *= 2\\n            n1 = n1 + k\\n        else:\\n            now = 0\\n            res = (res + n2 * k + (k * (k - 1))) % mod\\n            n -= k\\n            k *= 2\\n            n2 = n2 + k\\n    if n == 0:\\n        return res\\n    if now == 0:\\n        return (res + n1 * n + (n * (n - 1))) % mod\\n    return (res + n2 * n + (n * (n - 1))) % mod\\n\\nl, r = list(map(int, input().split()))\\nmod = 10 ** 9 + 7\\nprint((f(r, mod) - f(l - 1, mod)) % mod)\\n\", \"mod = 10**9 + 7\\n\\nl, r = [int(i) for i in input().split()]\\n\\ndef calc(x):\\n    cur = 1\\n    a = []\\n    b = []\\n    move = 0\\n    su = 0\\n    while su <= x:\\n        if su+cur>x:\\n            break\\n        if move==0:\\n            a.append(cur)\\n        else:\\n            b.append(cur)\\n        su += cur\\n        cur*=2\\n        move^=1\\n    if su+cur>x:\\n        if move==0:\\n            a.append(x-su)\\n        else:\\n            b.append(x-su)\\n        \\n    return sum(a), sum(b)\\n\\ndef tot(x): # total sum of nums till x nums in list\\n    odds, evens = calc(x)\\n    ans = 0\\n    ans += ((odds%mod)*(odds%mod))%mod\\n    ans += (((evens%mod)*(evens%mod))%mod + evens)%mod\\n    return ans%mod\\n\\nprint((tot(r) - tot(l-1))%mod)\\n    \\n\", \"def helper(n):\\n    R = 0\\n    tmp = n + 1\\n    while tmp != 1:\\n        tmp >>= 1\\n        R += 1\\n    bottom = R >> 1\\n    top = R - bottom\\n    flag = (top > bottom)\\n    tcnt = 0\\n    tmp = 1\\n    while top:\\n        tcnt += tmp\\n        tmp <<= 2\\n        top -= 1\\n    bcnt = 0\\n    tmp = 2\\n    while bottom:\\n        bcnt += tmp\\n        tmp <<= 2\\n        bottom -= 1\\n    n -= tcnt + bcnt\\n    if flag:\\n        bcnt += n\\n    else:\\n        tcnt += n\\n    ans = (pow(tcnt, 2, 1000000007) + (bcnt * (bcnt + 1))) % 1000000007\\n    return ans\\n        \\n\\ndef main():\\n    l, r = map(int, input().split())\\n    ans = helper(r)\\n    if l != 1:\\n        ans -= helper(l - 1)\\n    print(ans % 1000000007)\\n    return 0\\nmain()\", \"l, r = [int(e) for e in input().split()]\\n\\nMOD = 1_000_000_007\\ndef sum_range(start, num):\\n    end = start+(num-1)*2\\n    return (start+end)*num//2\\n\\ndef sum(n):\\n    ans = 0\\n    s = [1, 2]\\n    cnt = 1\\n    which = 0\\n    # print(f\\\"n = {n}\\\", end=\\\"\\\")\\n    while n > 0:\\n        diff = min(n, cnt)\\n        ans += sum_range(s[which], diff)\\n        ans %= MOD\\n        s[which] += 2*diff\\n        n -= diff\\n        cnt *= 2\\n        which = 1-which\\n    # print(ans)\\n    return ans\\n\\n\\nprint(((sum(r)-sum(l-1))%MOD+MOD)%MOD)\\n\", \"def calc(n):\\n    if n == 0:\\n        return 0\\n    k = n.bit_length()\\n    a = k // 2\\n    b = k - 1 - a\\n    c = n - 2**(k-1) + 1\\n    \\n    aa = (4**a-1)//3\\n    bb = 2*(4**b-1)//3\\n    if k % 2 == 0:\\n        bb += c\\n    else:\\n        aa += c\\n    \\n    aaa = aa**2\\n    bbb = bb * (bb+1)\\n    return aaa + bbb\\n\\nl, r = list(map(int, input().split()))\\nprint((calc(r)-calc(l-1))%(10**9+7))\\n\\n\", \"mod = 10 ** 9 + 7\\ndef f(n):\\n    v = [1, 2]\\n    cnt = 1\\n    all = 0\\n    ans = 0\\n    while (all < n):\\n        cnt = min(cnt, n - all)\\n        all += cnt\\n        ans += (2 * v[0] + (cnt - 1) * 2) * cnt // 2\\n        ans %= mod\\n        v[0] += cnt * 2\\n        cnt *= 2\\n        v[0], v[1] = v[1], v[0]\\n    return ans\\nl, r = list(map(int, input().split()))\\nprint((f(r) - f(l - 1) + mod * mod) % mod)\\n\", \"MOD = 1000000007\\ndef evensum(n):\\n    n //= 2\\n    return (n*(n+1))%MOD\\ndef oddsum(n):\\n    a = (n*(n+1))//2\\n    a %= MOD\\n    a -= evensum(n-1)\\n    a %= MOD\\n    return a\\ndef cs(n):\\n    i = 0\\n    cn = 1\\n    tot = 0\\n    so = -1\\n    se = 0\\n    while tot < n:\\n        cur = min(cn, n-tot)\\n        if i % 2 == 0:\\n            so += 2*cur\\n        else:\\n            se += 2*cur\\n        cn *= 2\\n        tot += cur\\n        i += 1\\n    ans = 0\\n    if se > 0: ans += evensum(se)\\n    if so > -1: ans += oddsum(so)\\n    ans %= MOD\\n    return ans\\nL, R = list(map(int, input().split()))\\nans = cs(R)\\nif L>1: ans -= cs(L-1)\\nans %= MOD\\nprint(ans)\\n\", \"l, r = input().split()\\n\\nl = int(l)\\nr = int(r)\\n\\nMOD = 10**9+7\\n\\ndef f(v) :\\n    nonlocal MOD\\n    ret = 0\\n    r = 0\\n    \\n    p1, p2 = 0, 0\\n\\n    while (v>>r) > 0:\\n        if r&1 == 0:\\n            p1 += min(v+1, 1<<r+1)-(1<<r)\\n        else :\\n            p2 += min(v+1, 1<<r+1)-(1<<r)\\n        r += 1\\n    \\n    return (p1*p1+p2*(p2+1))%MOD\\nprint((f(r)-f(l-1)+MOD)%MOD)\", \"l, r = list(map(int, input().split()))\\nl -= 1\\nif l == 0:\\n    ar1 = []\\nelse:\\n    ar1 = [1]\\nsum1 = 1\\nwhile sum1 < l:\\n    if sum1 + ar1[-1] * 2 <= l:\\n        sum1 += ar1[-1] * 2\\n        ar1.append(ar1[-1] * 2)\\n    else:\\n        ar1.append(l - sum1)\\n        sum1 = l\\n\\nar2 = [1]\\nsum2 = 1\\nwhile sum2 < r:\\n    if sum2 + ar2[-1] * 2 <= r:\\n        sum2 += ar2[-1] * 2\\n        ar2.append(ar2[-1] * 2)\\n    else:\\n        ar2.append(r - sum2)\\n        sum2 = r\\n\\nsum1_odd = sum(ar1[::2])\\nsum1_even = sum(ar1[1::2])\\nsum2_odd = sum(ar2[::2])\\nsum2_even = sum(ar2[1::2])\\np = 10 ** 9 + 7\\nprint((sum2_odd ** 2 + sum2_even ** 2 + sum2_even - sum1_odd ** 2 - sum1_even ** 2 - sum1_even) % p)\\n\", \"from math import log\\n\\ndef howManyOdds(n):\\n    l = int(log(n+1, 2))\\n    if l%2 == 1:\\n        return (4**((l+1)//2) - 1) // 3\\n    else:\\n        return n - howManyEvens(n)\\n\\ndef howManyEvens(n):\\n    l = int(log(n+1, 2))\\n    if l%2 == 1:\\n        return n - howManyOdds(n)\\n    else:\\n        return (4**((l+1)//2) - 1) // 3 * 2\\n\\ndef firstEvens(n):\\n    return n * (n+1)\\n\\ndef firstOdds(n):\\n    return firstEvens(n) - n\\n\\ndef f(n):\\n    return firstEvens(howManyEvens(n)) + firstOdds(howManyOdds(n))\\n\\na, b = [int(i) for i in input().split()]\\nprint((f(b) - f(a-1)) % (10**9 + 7))\\n\", \"import getpass\\nimport sys\\n\\nif getpass.getuser() != 'frohenk':\\n    filename = 'half'\\n    # sys.stdin = open('input.txt')\\n    # sys.stdout = open('output.txt', 'w')\\nelse:\\n    sys.stdin = open('input.txt')\\n    # sys.stdin.close()\\n\\nimport math\\nimport string\\nimport re\\nimport math\\nimport random\\nfrom decimal import Decimal, getcontext\\n\\nmod = 10 ** 9 + 7\\n\\n\\ndef ria():\\n    return [int(i) for i in input().split()]\\n\\n\\ndef alg_s(b, s, n):\\n    # print(b, b + s * (n - 1))\\n\\n    return ((b + s * (n - 1) + b) * n // 2) % mod\\n\\n\\nL, R = ria()\\ncr1 = 1\\ncr2 = 2\\nlk = 1\\ncr = 1\\nis1 = True\\nans = 0\\nfor j in range(300):\\n    l = cr\\n    r = cr + lk - 1\\n\\n    if is1:\\n        if l >= L and r <= R:\\n            ans += alg_s(cr1, 2, r - l + 1)\\n        elif L >= l and R <= r:\\n            ans += alg_s(cr1 + (L - l) * 2, 2, R - L + 1)\\n        elif r >= L >= l:\\n            ans += alg_s(cr1 + (L - l) * 2, 2, r - L + 1)\\n            # print('A')\\n        elif l <= R <= r:\\n            ans += alg_s(cr1, 2, R - l + 1)\\n            # print('B')\\n        cr1 += (r - l + 1) * 2\\n    else:\\n        if l >= L and r <= R:\\n            ans += alg_s(cr2, 2, r - l + 1)\\n        elif L >= l and R <= r:\\n            ans += alg_s(cr2 + (L - l) * 2, 2, R - L + 1)\\n        elif r >= L >= l:\\n            ans += alg_s(cr2 + (L - l) * 2, 2, r - L + 1)\\n            # print('C')\\n        elif l <= R <= r:\\n            ans += alg_s(cr2, 2, R - l + 1)\\n            # print('D')\\n\\n        cr2 += (r - l + 1) * 2\\n\\n    is1 = not is1\\n    cr += cr\\n    lk *= 2\\n    ans %= mod\\nprint(ans)\\n\", \"from math import log\\n\\ndef f(n):\\n\\tl = int(log(n + 1, 2)) - 1\\n\\tn0 = n - 2**(l + 1) + 1\\n\\tx = 0\\n\\ty = 0\\n\\tfor i in range(l + 1):\\n\\t\\tif i % 2 == 0:\\n\\t\\t\\tx += 2**(i)\\n\\t\\telse:\\n\\t\\t\\ty += 2**(i)\\n\\tif l % 2 != 0:\\n\\t\\tx += n0\\n\\telse:\\n\\t\\ty += n0\\n\\treturn (x, y)\\n\\nMOD = 10**9 + 7\\nl, r = map(int, input().split())\\nL = f(l - 1)\\nR = f(r)\\nx1, y1 = L\\nx2, y2 = R\\nans = 0\\nans += x2**2 % MOD\\nans -= x1**2 % MOD\\nans += y2*(y2 + 1) % MOD\\nans -= y1*(y1 + 1) % MOD\\nprint(ans % MOD)\", \"\\np = 10 ** 9 + 7\\n\\n\\ndef sum_even(n):\\n    return n * (n + 1) % p if n > 0 else 0\\n\\n\\ndef sum_odd(n):\\n    return (n + sum_even(n - 1)) % p if n > 0 else 0\\n\\n\\ndef sum_special(n):\\n    if n < 1:\\n        return 0\\n    d = 1\\n    i = 0\\n    s = [0, 0]\\n    k = 0\\n    while i < n:\\n        s[k] += min(d, n - i)\\n        k = (k + 1) % 2\\n        i += d\\n        d *= 2\\n    return (sum_odd(s[0]) + sum_even(s[1])) % p\\n\\n\\nl, r = list(map(int, input().split()))\\n\\nprint((p + sum_special(r) - sum_special(l - 1)) % p)\\n\", \"l , r = list(map(int,input().split()))\\n\\nmod = 10**9+7\\n\\ndef f(l):\\n    left = 0\\n    c = 0\\n    while left < l:\\n        left += pow(2,c)\\n        c+=1\\n\\n\\n    extra = left - l\\n    #print(extra)\\n    ls = 0\\n    odd  = 0\\n    eve = 0\\n\\n    for i in range(c):\\n        if i%2 == 0:\\n            odd += pow(2,i)\\n        else:\\n            eve += pow(2,i)\\n    temp = 0\\n    if c%2 == 1:\\n        temp = (odd-extra)*(odd-extra) + eve*(eve+1)\\n    else:\\n        temp = odd*odd + (eve-extra)*(eve+1-extra)\\n\\n    return temp\\n\\n\\nprint( (f(r) - f(l-1) + mod)%mod )\\n\", \"mod = 1000000007\\n\\ndef f(n):\\n    f = 1\\n    s = 2\\n    t = 1\\n    ret = 0\\n    cnt = 0\\n    p = 1\\n    while cnt + p <= n:\\n        cnt += p\\n        if t == 1:\\n            ret = (ret + (2 * f + (p - 1) * 2) * p // 2) % mod\\n            f += 2 * p\\n        else :\\n            ret = (ret + (2 * s + (p - 1) * 2) * p // 2) % mod\\n            s += 2 * p\\n        p *= 2\\n        t += 1\\n        if t > 2:\\n            t = 1\\n    if t == 1:\\n        ret = (ret + (2 * f + (n - cnt - 1) * 2) * (n - cnt) // 2) % mod\\n    else:\\n        ret = (ret + (2 * s + (n - cnt - 1) * 2) * (n - cnt) // 2) % mod\\n    return ret\\n\\nl, r = list(map(int, input().split()))\\nprint((f(r) - f(l - 1) + mod) % mod)\\n\", \"import sys\\ninput = sys.stdin.readline\\n\\nl,r=list(map(int,input().split()))\\n\\nmod=10**9+7\\ndef calc(n):\\n    NOW=0\\n    NOWO=0\\n    NOWE=0\\n\\n    OE=1\\n    i=0\\n\\n    while True:\\n        if NOW+(1<<i)<=n:\\n            NOW+=(1<<i)\\n            if OE==1:\\n                NOWO+=(1<<i)\\n            else:\\n                NOWE+=(1<<i)\\n\\n            OE=1-OE            \\n            i+=1\\n\\n        else:\\n            if OE==1:\\n                NOWO+=n-NOW\\n            else:\\n                NOWE+=n-NOW\\n\\n            break\\n\\n    return (NOWO,NOWE)\\n\\nO,E=calc(l-1)\\nSUM0=O**2+(E+1)*E\\n\\nO,E=calc(r)\\nSUM1=O**2+(E+1)*E\\n\\nprint((SUM1-SUM0)%mod)\\n\\n\\n            \\n        \\n\", \"def sumto(l):\\n    n = 1\\n    o = 1\\n    e = 2\\n    S = 0\\n    i = 0\\n    par = 0\\n    t = 0\\n    while 1:\\n        par = 1 - par\\n        t += n\\n        if t >= l:\\n            t -= n\\n            n = l - t\\n            if par:\\n                S += n*o + n*(n-1)\\n                o += 2*n\\n                n *= 2\\n            else:\\n                S += n*e + n*(n-1)\\n                e += 2*n\\n                n *= 2\\n            break\\n        if par:\\n            S += n*o + n*(n-1)\\n            o += 2*n\\n            n *= 2\\n        else:\\n            S += n*e + n*(n-1)\\n            e += 2*n\\n            n *= 2\\n        i += 1\\n    return S\\n\\nl,r = list(map(int,input().split()))\\nmod = 10**9 + 7\\nprint((sumto(r) - sumto(l-1))%mod)\\n\", \"def calc_even(n):\\n    if n<=1:\\n        return 0\\n    i=1\\n    while 2**i <= n:\\n        i+=2\\n    i-=2\\n    cnt=2*(2**i-2**(i-1)-1)//3\\n    if 2**i+2**i-1<n:\\n        cnt+=2**i\\n    else:\\n        cnt+=n-2**i+1\\n    return cnt*(cnt+1)\\n\\ndef calc_odd(n):\\n    if n<1:\\n        return 0\\n    i=0\\n    while 2**i <= n:\\n        i+=2\\n    i-=2\\n    cnt=(2**i-1)//3\\n    if 2**i+2**i-1<n:\\n        cnt+=2**i\\n    else:\\n        cnt+=n-2**i+1\\n    return cnt*cnt\\n\\nl, r = [int(x) for x in input().split()]\\nans = calc_odd(r)-calc_odd(l-1) + calc_even(r)-calc_even(l-1)\\nprint(ans % 1000000007)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 3\\n\",\n    \"5 14\\n\",\n    \"88005553535 99999999999\\n\",\n    \"1 1000000000000000000\\n\",\n    \"1 1\\n\",\n    \"1000000000000000000 1000000000000000000\\n\",\n    \"707992299833239702 823650821768525121\\n\",\n    \"4 938109031727472839\\n\",\n    \"1 15\\n\",\n    \"31 32\\n\",\n    \"83 402908796418729484\\n\",\n    \"7 515369014347518317\\n\",\n    \"89 573300466228828028\\n\",\n    \"77 35400606000902437\\n\",\n    \"89 401221084162832590\\n\",\n    \"110132820763723554 347999721032847655\\n\",\n    \"344719938937955218 881301645881541177\\n\",\n    \"635978584340918932 834420611888682362\\n\",\n    \"368832015800862643 959710835602923836\\n\",\n    \"5395748081576952 729478239858216626\\n\",\n    \"721835 480390263313130557\\n\",\n    \"181925 50919323688216219\\n\",\n    \"326567 37935433686691901\\n\",\n    \"527941 442152825894997769\\n\",\n    \"530374 187390675797908550\\n\",\n    \"576700324 851922153058604707\\n\",\n    \"618006176 999508457373565393\\n\",\n    \"695663532 895293500915617175\\n\",\n    \"388880291 600967254143436109\\n\",\n    \"266032540 775808641238027030\\n\",\n    \"26485417666693938 897520336114069539\\n\",\n    \"96271473323594764 177985918874532496\\n\",\n    \"646642585834105117 769289603843435752\\n\",\n    \"153492417505670053 969968962188753713\\n\",\n    \"100879890062904086 919413561635743169\\n\",\n    \"33 37\\n\",\n    \"41 49\\n\",\n    \"25 31\\n\",\n    \"40 40\\n\",\n    \"32 32\\n\",\n    \"10 10005\\n\",\n    \"100 101\\n\",\n    \"1001 10000\\n\",\n    \"23 24\\n\",\n    \"15 19\\n\",\n    \"101 102\\n\"\n  ],\n  \"outputs\": [\n    \"7\",\n    \"105\",\n    \"761141116\",\n    \"724824772\",\n    \"1\",\n    \"975735772\",\n    \"69962460\",\n    \"220366485\",\n    \"135\",\n    \"63\",\n    \"94558013\",\n    \"207784181\",\n    \"136047880\",\n    \"144605114\",\n    \"240772492\",\n    \"416849587\",\n    \"901594724\",\n    \"481130628\",\n    \"380949759\",\n    \"604591615\",\n    \"319808831\",\n    \"792029406\",\n    \"886000420\",\n    \"805109416\",\n    \"537179299\",\n    \"615581490\",\n    \"358521726\",\n    \"523981139\",\n    \"344155484\",\n    \"34396457\",\n    \"684062123\",\n    \"357444025\",\n    \"930095792\",\n    \"867480243\",\n    \"824441806\",\n    \"140\",\n    \"432\",\n    \"245\",\n    \"38\",\n    \"22\",\n    \"50474956\",\n    \"232\",\n    \"49878360\",\n    \"52\",\n    \"76\",\n    \"236\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1151/C",
  "starter_code": ""
}