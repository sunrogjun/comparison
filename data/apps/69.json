{
  "task_id": "APPS/69",
  "problem_id": 69,
  "prompt": "You are given string $s$ of length $n$ consisting of 0-s and 1-s. You build an infinite string $t$ as a concatenation of an infinite number of strings $s$, or $t = ssss \\dots$ For example, if $s =$ 10010, then $t =$ 100101001010010...\n\nCalculate the number of prefixes of $t$ with balance equal to $x$. The balance of some string $q$ is equal to $cnt_{0, q} - cnt_{1, q}$, where $cnt_{0, q}$ is the number of occurrences of 0 in $q$, and $cnt_{1, q}$ is the number of occurrences of 1 in $q$. The number of such prefixes can be infinite; if it is so, you must say that.\n\nA prefix is a string consisting of several first letters of a given string, without any reorders. An empty prefix is also a valid prefix. For example, the string \"abcd\" has 5 prefixes: empty string, \"a\", \"ab\", \"abc\" and \"abcd\".\n\n\n-----Input-----\n\nThe first line contains the single integer $T$ ($1 \\le T \\le 100$) \u2014 the number of test cases.\n\nNext $2T$ lines contain descriptions of test cases \u2014 two lines per test case. The first line contains two integers $n$ and $x$ ($1 \\le n \\le 10^5$, $-10^9 \\le x \\le 10^9$) \u2014 the length of string $s$ and the desired balance, respectively.\n\nThe second line contains the binary string $s$ ($|s| = n$, $s_i \\in \\{\\text{0}, \\text{1}\\}$).\n\nIt's guaranteed that the total sum of $n$ doesn't exceed $10^5$.\n\n\n-----Output-----\n\nPrint $T$ integers \u2014 one per test case. For each test case print the number of prefixes or $-1$ if there is an infinite number of such prefixes.\n\n\n-----Example-----\nInput\n4\n6 10\n010010\n5 3\n10101\n1 0\n0\n2 0\n01\n\nOutput\n3\n0\n1\n-1\n\n\n\n-----Note-----\n\nIn the first test case, there are 3 good prefixes of $t$: with length $28$, $30$ and $32$.",
  "solutions": "[\"t=int(input())\\nfor i in ' '*t:\\n    n,x=map(int,input().split())\\n    s=input()\\n    L=[0]\\n    for i in s:\\n        if i=='0':L.append(L[-1]+1)\\n        else:L.append(L[-1]-1)\\n    L.pop(0)\\n    k=L[-1]\\n    c=0\\n    if x==0:c+=1\\n    if k>0:\\n        for i in L:\\n            if i%k==x%k and i<=x:c+=1\\n        print(c)\\n    elif k<0:\\n        for i in L:\\n            if i%k==x%k and i>=x:c+=1\\n        print(c)\\n    else:\\n        for i in L:\\n            if i==x:c=-1\\n        print(c)\", \"import sys\\ninput=sys.stdin.readline\\nt=int(input())\\nfor _ in range(t):\\n    n,x=list(map(int,input().split()))\\n    s=input()\\n    pre=[1]\\n    if s[0]==\\\"1\\\":\\n        pre[0]=-1\\n    for i in range(1,2*n):\\n        pre.append(pre[i-1]+1)\\n        if i>=n:\\n            i-=n\\n        if s[i]==\\\"1\\\":\\n            pre[-1]-=2\\n    if pre[:n]==pre[n:]:\\n        if x in pre:\\n            print(-1)\\n        else:\\n            print(0)\\n    else:\\n        tot=0\\n        if x==0:\\n            tot+=1\\n        for i in range(n):\\n            if (x-pre[i])%(pre[i+n]-pre[i])==0:\\n                if(pre[i]<pre[i+n] and x<pre[i]):\\n                    continue\\n                if(pre[i]>pre[i+n] and x>pre[i]):\\n                    continue\\n                tot+=1\\n        print(tot)   \\n\\n    \\n\", \"from collections import Counter\\n\\nfor _ in range(int(input())):\\n    n, x = list(map(int, input().split()))\\n    cnt = Counter()\\n    bal = 0\\n    for c in input():\\n        cnt[bal] += 1\\n        bal += (c == '0') - (c == '1')\\n    if bal == 0:\\n        if cnt[x]:\\n            print(-1)\\n        else:\\n            print(0)\\n    else:\\n        ans = 0\\n        for k in list(cnt.keys()):\\n            xmk = x - k\\n            if not xmk % bal and xmk * bal >= 0:\\n                ans += cnt[k]\\n        print(ans)\\n\", \"for _ in range(int(input())):\\n\\tn, x = map(int, input().split())\\n\\n\\ts = input()\\n\\n\\tpref = [0]\\n\\n\\tfor i in range(n):\\n\\t\\tpref.append(pref[-1] + 2 * (s[i] == '0') - 1)\\n\\n\\tjump = pref.pop()\\n\\n#\\tprint(pref, jump)\\n\\n\\tif jump == 0:\\n\\t\\tprint(-1 * (min(pref) <= x <= max(pref)))\\n\\telse:\\n\\n\\t\\ttot = 0\\n\\n\\t\\tfor delta in pref:\\n\\t\\t\\tif (x - delta) % jump == 0 and (x - delta) // jump >= 0:\\n\\t\\t\\t\\ttot += 1\\n\\n\\t\\tprint(tot)\", \"sd = []\\nfor _ in range(int(input())):\\n    n, x = map(int, input().split())\\n    s = input()\\n    bal = []\\n    b = 0\\n    for c in s:\\n        if c == '0':\\n            b += 1\\n        else:\\n            b -= 1\\n        bal.append(b)\\n    ans = 0\\n    for d in bal:\\n        if x == d and b == 0:\\n            ans = -1\\n            break\\n        elif b != 0:\\n            if (x - d) % b == 0 and ((x - d) // b) >= 0:\\n                ans += 1\\n    if x == 0 and ans != -1:\\n        ans += 1\\n    sd.append(str(ans))\\nprint('\\\\n'.join(sd))\", \"t = int(input())\\nfor i in ' ' * t:\\n    n, x = map(int, input().split())\\n    s = input()\\n    L = [0]\\n    for i in s:\\n        if i == '0':\\n            L.append(L[-1] + 1)\\n        else:\\n            L.append(L[-1] - 1)\\n    k = L.pop()\\n    c = 0\\n    if k > 0:\\n        for i in L:\\n            if i % k == x % k and i <= x: c += 1\\n        print(c)\\n    elif k < 0:\\n        for i in L:\\n            if i % k == x % k and i >= x: c += 1\\n        print(c)\\n    else:\\n        for i in L:\\n            if i == x: c = -1\\n        print(c)\", \"for _ in range(int(input())):\\n    n,x=map(int,input().split())\\n    s=input()\\n    y=s.count('0')-s.count('1')\\n    z=0\\n    inf=False\\n    ans=0\\n    if x==0: ans=1\\n    for i in s:\\n        z+=(i=='0')-(i=='1')\\n        if y==0 and z==x:\\n            inf=True\\n            print(-1)\\n            break\\n        if x-z==0 or ((x-z)*y>0 and (x-z)%y==0):ans+=1\\n    if not inf:\\n        print(ans)\", \"t = int(input())\\n\\nwhile t:\\n    t -= 1\\n    n, x = map(int, input().split())\\n    a = list((-1 if int(i) else 1) for i in input())\\n    s = [0] * n\\n    s[0] = a[0]\\n    for i in range(1, n):\\n        s[i] = s[i - 1] + a[i]\\n    \\n    \\n    if s[-1] == 0:\\n        if x in s:\\n            print(-1)\\n        else:\\n            print(0)\\n    else:\\n        res = 1 if (x == 0) else 0\\n        for i in range(n):\\n            gap = x - s[i]\\n            if gap % s[-1] == 0 and gap // s[-1] >= 0:\\n                res += 1\\n        print(res)        \", \"T = int(input())\\nfor _ in range(T):\\n    n, x = map(int, input().split())\\n    S = input()\\n    A = [0] * n\\n    for i, s in enumerate(S):\\n        A[i] = A[i-1] + (1 if s == \\\"0\\\" else -1)\\n    t = A[-1]\\n    A[-1] = 0\\n    if t > 0:\\n        print(len([a for a in A if (x-a) % t == 0 and a <= x]))\\n    elif t < 0:\\n        print(len([a for a in A if (x-a) % (-t) == 0 and a >= x]))\\n    else:\\n        print(-1 if A.count(x) else 0)\", \"import sys\\nt = int(input())\\nfor e in range(t):\\n\\t\\n\\tn, x = list(map(int, input().split()))\\n\\tdp = [0 for i in range(n + 1)]\\n\\ts = input()\\n\\tcur = 0\\n\\tfor i in range(n):\\n\\t\\tif(s[i] == '0'):\\n\\t\\t\\tcur += 1\\t\\n\\t\\telse:\\n\\t\\t\\tcur -= 1\\n\\t\\tdp[i + 1] = cur\\n\\t# print(dp)\\n\\n\\tif(dp[-1] == 0):\\n\\t\\tif(min(dp) <= x <= max(dp)):\\n\\t\\t\\tprint(-1)\\n\\t\\telse:\\n\\t\\t\\tprint(0)\\n\\t\\tcontinue\\n\\tcnt = 0\\n\\tfor i in range(n):\\n\\t\\tdiff = x-dp[i]\\n\\t\\t# print(i, diff)\\n\\t\\tif((diff)*dp[-1] >= 0 and diff%dp[-1] == 0):\\n\\t\\t\\tcnt += 1\\n\\tprint(cnt)\\n\\n\", \"import sys\\ninput=sys.stdin.readline\\nt=int(input())\\nfor _ in range(t):\\n    n,x=list(map(int,input().split()))\\n    s=input()\\n    pre=[1]\\n    if s[0]==\\\"1\\\":\\n        pre[0]=-1\\n    for i in range(1,2*n):\\n        pre.append(pre[i-1]+1)\\n        if i>=n:\\n            i-=n\\n        if s[i]==\\\"1\\\":\\n            pre[-1]-=2\\n    if pre[0]==pre[n]:\\n        if x in pre:\\n            print(-1)\\n        else:\\n            print(0)\\n    else:\\n        tot=0\\n        if x==0:\\n            tot+=1\\n        for i in range(n):\\n            \\n            if (x-pre[i])%(pre[i+n]-pre[i])==0:\\n                y=(x-pre[i])//(pre[i+n]-pre[i])\\n                if y<0:\\n                    continue\\n                tot+=1\\n        print(tot)   \\n\\n    \\n\", \"for _ in range(int(input())):\\n    n,x=map(int,input().split())\\n    s=input()\\n    y=s.count('0')-s.count('1')\\n    z=0\\n    inf=False\\n    ans=0\\n    if x==0: ans=1\\n    for i in s:\\n        z+=(i=='0')-(i=='1')\\n        if y==0 and z==x:\\n            inf=True\\n            print(-1)\\n            break\\n        if x-z==0 or ((x-z)*y>0 and abs((x-z))%abs(y)==0):ans+=1\\n    if not inf:\\n        print(ans)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4\\n6 10\\n010010\\n5 3\\n10101\\n1 0\\n0\\n2 0\\n01\\n\",\n    \"2\\n1 -548706795\\n0\\n1 -735838406\\n1\\n\",\n    \"1\\n5 5\\n00000\\n\",\n    \"19\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n1 1\\n1\\n\",\n    \"1\\n3 0\\n011\\n\",\n    \"1\\n20 6\\n00000000000111111111\\n\",\n    \"1\\n11 3\\n00000111111\\n\",\n    \"1\\n3 0\\n101\\n\",\n    \"1\\n7 -2\\n1110000\\n\",\n    \"1\\n5 0\\n10010\\n\",\n    \"1\\n6 -2\\n111100\\n\",\n    \"1\\n9 0\\n000111010\\n\",\n    \"4\\n5 1\\n01010\\n5 3\\n00010\\n15 0\\n010101010010101\\n10 0\\n0000011111\\n\",\n    \"1\\n5 1\\n00011\\n\",\n    \"1\\n6 0\\n111111\\n\",\n    \"1\\n1 -1\\n1\\n\",\n    \"1\\n5 1\\n10010\\n\",\n    \"1\\n9 -1\\n011110001\\n\",\n    \"1\\n3 1\\n011\\n\",\n    \"1\\n5 0\\n01010\\n\",\n    \"1\\n9 5\\n000001111\\n\",\n    \"2\\n5 0\\n01010\\n3 1\\n101\\n\",\n    \"1\\n5 -2\\n11000\\n\",\n    \"1\\n201 1\\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n\",\n    \"2\\n8 -3\\n11100000\\n2 2\\n00\\n\",\n    \"1\\n7 0\\n1010110\\n\",\n    \"1\\n3 -1\\n100\\n\",\n    \"1\\n6 0\\n001111\\n\",\n    \"1\\n2 2\\n00\\n\",\n    \"1\\n3 0\\n010\\n\",\n    \"1\\n1 1\\n0\\n\",\n    \"1\\n7 0\\n0001111\\n\",\n    \"4\\n6 10\\n010010\\n5 3\\n10101\\n5 0\\n11000\\n2 0\\n01\\n\",\n    \"1\\n2 -1\\n11\\n\",\n    \"1\\n5 2\\n00101\\n\",\n    \"1\\n6 4\\n000001\\n\",\n    \"1\\n10 2\\n1010101000\\n\",\n    \"1\\n5 0\\n00111\\n\",\n    \"1\\n5 1\\n00111\\n\",\n    \"1\\n3 1\\n010\\n\",\n    \"1\\n8 0\\n00011100\\n\",\n    \"1\\n5 0\\n10101\\n\",\n    \"1\\n6 -3\\n111001\\n\",\n    \"4\\n9 0\\n000111010\\n15 5\\n011010101100000\\n11 0\\n01010000010\\n11 -5\\n00010100010\\n\",\n    \"1\\n5 0\\n11000\\n\",\n    \"1\\n4 0\\n1110\\n\",\n    \"1\\n6 -1\\n111111\\n\",\n    \"2\\n5 0\\n01010\\n2 1\\n11\\n\",\n    \"6\\n9 0\\n000111010\\n15 5\\n011010101100000\\n11 0\\n01010000010\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n\",\n    \"1\\n7 2\\n0110101\\n\",\n    \"1\\n3 0\\n100\\n\",\n    \"1\\n6 1\\n100001\\n\",\n    \"1\\n5 -1\\n11010\\n\",\n    \"1\\n9 0\\n010101011\\n\",\n    \"2\\n5 -1\\n10101\\n9 -1\\n011110001\\n\",\n    \"4\\n4 2\\n0011\\n3 -1\\n101\\n2 0\\n01\\n5 5\\n00000\\n\",\n    \"1\\n3 -2\\n101\\n\",\n    \"7\\n9 0\\n000111010\\n15 5\\n011010101100000\\n11 0\\n01010000010\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n17 -3\\n01011111110100000\\n\",\n    \"1\\n6 2\\n001001\\n\",\n    \"1\\n8 0\\n01010111\\n\",\n    \"8\\n9 0\\n000111010\\n15 5\\n011010101100000\\n11 0\\n01010000010\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n17 -3\\n01011111110100000\\n17 -17\\n01011111110100000\\n\",\n    \"1\\n2 -2\\n11\\n\",\n    \"1\\n5 -1\\n10011\\n\",\n    \"1\\n5 -1\\n10101\\n\",\n    \"1\\n6 2\\n110000\\n\",\n    \"1\\n5 -3\\n11111\\n\",\n    \"1\\n5 -2\\n11110\\n\",\n    \"3\\n3 1\\n011\\n6 1\\n100001\\n6 3\\n100001\\n\",\n    \"1\\n1 0\\n1\\n\",\n    \"8\\n9 0\\n000111010\\n15 5\\n111010101100001\\n11 0\\n01010000010\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n17 -4\\n01011101110100000\\n17 -1\\n00010101010101001\\n\",\n    \"8\\n9 0\\n000111010\\n17 0\\n10100010100000000\\n11 0\\n01010000010\\n15 5\\n111010101100001\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n17 0\\n01011101110100000\\n\",\n    \"1\\n3 1\\n000\\n\",\n    \"1\\n3 0\\n111\\n\",\n    \"1\\n3 2\\n001\\n\",\n    \"1\\n6 2\\n001111\\n\",\n    \"2\\n9 -1\\n011110001\\n5 5\\n00000\\n\",\n    \"1\\n9 6\\n000000000\\n\",\n    \"8\\n9 0\\n000111010\\n17 0\\n10100010100000000\\n11 0\\n01010000010\\n15 5\\n111010101100001\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n17 0\\n10000010010010100\\n\",\n    \"1\\n6 0\\n001100\\n\",\n    \"2\\n5 0\\n00111\\n5 0\\n11000\\n\",\n    \"1\\n8 0\\n00011111\\n\",\n    \"8\\n9 0\\n000111010\\n17 0\\n10100010100000000\\n11 0\\n01010000010\\n15 5\\n111010101100001\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 4\\n01010000010\\n18 0\\n010110101001010101\\n\",\n    \"6\\n10 0\\n0101111000\\n10 -2\\n0101111000\\n1 2\\n0\\n1 -1\\n1\\n3 1000000000\\n000\\n1 -1\\n0\\n\",\n    \"2\\n6 2\\n001001\\n3 0\\n011\\n\",\n    \"8\\n10 30\\n0000011110\\n10 0\\n0101111000\\n10 -2\\n0101111000\\n10 0\\n0000011110\\n1 2\\n0\\n1 -1\\n1\\n3 1000000000\\n000\\n1 -1\\n0\\n\",\n    \"1\\n5 0\\n10011\\n\",\n    \"7\\n9 0\\n000111010\\n17 0\\n10100010100000000\\n11 0\\n01010000010\\n15 5\\n111010101100001\\n11 -5\\n00010100010\\n11 5\\n00101000100\\n11 -1234567\\n00000111111\\n\",\n    \"2\\n3 0\\n011\\n6 2\\n001001\\n\",\n    \"7\\n9 0\\n000111010\\n17 0\\n10100010100000000\\n11 0\\n01010000010\\n15 0\\n111010101100001\\n11 0\\n11111001010\\n11 0\\n00110011010\\n20 0\\n00010010010110111010\\n\",\n    \"1\\n63 -3\\n001111111001000101001011110101111010100001011010101100111001010\\n\",\n    \"1\\n5 -2\\n11100\\n\",\n    \"7\\n9 0\\n000111010\\n17 0\\n10100010100000000\\n11 0\\n01010000010\\n15 0\\n111010101100001\\n11 0\\n11111001010\\n11 0\\n00110011010\\n20 0\\n00011110010110111010\\n\",\n    \"6\\n3 0\\n100\\n3 1\\n100\\n3 1\\n101\\n3 -1\\n101\\n3 0\\n101\\n3 -1\\n100\\n\",\n    \"1\\n10 4\\n0000111111\\n\",\n    \"3\\n6 2\\n001001\\n3 0\\n011\\n1 1\\n0\\n\",\n    \"3\\n6 2\\n001001\\n3 0\\n011\\n2 1\\n00\\n\",\n    \"3\\n6 2\\n001001\\n3 0\\n011\\n2 0\\n00\\n\",\n    \"3\\n6 2\\n001001\\n3 0\\n011\\n4 0\\n0011\\n\",\n    \"1\\n4 0\\n0111\\n\",\n    \"4\\n6 2\\n001001\\n3 0\\n011\\n2 0\\n00\\n1 1\\n1\\n\",\n    \"1\\n6 0\\n010010\\n\",\n    \"6\\n6 0\\n000111\\n7 0\\n0001111\\n7 0\\n0001110\\n20 0\\n00000000001111111111\\n21 0\\n000000000011111111111\\n21 0\\n000000000011111111110\\n\",\n    \"1\\n30 1\\n001011010110111011110010111111\\n\",\n    \"3\\n1 1\\n0\\n6 2\\n001001\\n3 0\\n011\\n\",\n    \"1\\n32 -4\\n10000111101011111111000001100011\\n\",\n    \"1\\n5 0\\n11001\\n\",\n    \"1\\n6 -2\\n110010\\n\",\n    \"1\\n439 -6100238\\n1000111101010011110001001010010011000101000101010010111000001100000000100110111111000100111001000000100110001101001110101001001001011011011001111000010100000101100001110111000000011101111001111100111100010010011000101101011001010111110101100101101011110010110001110100001011101000110101011011101111011100010000010010011111001111110000110110011000001110010010101100011010011111011100010011001011011110111010011101000011111011110000011100101\\n\",\n    \"1\\n2 -1\\n10\\n\",\n    \"1\\n7 3\\n0000111\\n\",\n    \"2\\n3 0\\n011\\n7 3\\n0000111\\n\",\n    \"1\\n86 -11\\n01011111011111001001000111010010100111100011110001110111100100000010011100001001010001\\n\",\n    \"2\\n11 3\\n00000111111\\n4 2\\n1100\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n0\\n1\\n-1\\n\",\n    \"0\\n1\\n\",\n    \"1\\n\",\n    \"0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"5\\n2\\n5\\n-1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"9\\n\",\n    \"3\\n0\\n\",\n    \"1\\n\",\n    \"199\\n\",\n    \"1\\n1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"3\\n0\\n5\\n-1\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n6\\n3\\n0\\n\",\n    \"5\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n0\\n\",\n    \"3\\n6\\n3\\n0\\n1\\n2\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"9\\n\",\n    \"5\\n6\\n\",\n    \"-1\\n3\\n-1\\n1\\n\",\n    \"3\\n\",\n    \"3\\n6\\n3\\n0\\n1\\n2\\n10\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n6\\n3\\n0\\n1\\n2\\n10\\n17\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n2\\n3\\n\",\n    \"1\\n\",\n    \"3\\n0\\n3\\n0\\n1\\n2\\n2\\n0\\n\",\n    \"3\\n3\\n3\\n0\\n0\\n1\\n2\\n15\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"6\\n1\\n\",\n    \"1\\n\",\n    \"3\\n3\\n3\\n0\\n0\\n1\\n2\\n2\\n\",\n    \"2\\n\",\n    \"5\\n5\\n\",\n    \"4\\n\",\n    \"3\\n3\\n3\\n0\\n0\\n1\\n2\\n-1\\n\",\n    \"-1\\n-1\\n1\\n1\\n1\\n0\\n\",\n    \"3\\n3\\n\",\n    \"5\\n-1\\n-1\\n1\\n1\\n1\\n1\\n0\\n\",\n    \"4\\n\",\n    \"3\\n3\\n3\\n0\\n0\\n1\\n11\\n\",\n    \"3\\n3\\n\",\n    \"3\\n3\\n3\\n2\\n1\\n4\\n1\\n\",\n    \"9\\n\",\n    \"4\\n\",\n    \"3\\n3\\n3\\n2\\n1\\n4\\n8\\n\",\n    \"3\\n3\\n0\\n3\\n2\\n1\\n\",\n    \"1\\n\",\n    \"3\\n3\\n1\\n\",\n    \"3\\n3\\n1\\n\",\n    \"3\\n3\\n1\\n\",\n    \"3\\n3\\n-1\\n\",\n    \"2\\n\",\n    \"3\\n3\\n1\\n0\\n\",\n    \"2\\n\",\n    \"-1\\n7\\n2\\n-1\\n21\\n2\\n\",\n    \"5\\n\",\n    \"1\\n3\\n3\\n\",\n    \"9\\n\",\n    \"2\\n\",\n    \"-1\\n\",\n    \"439\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"3\\n6\\n\",\n    \"-1\\n\",\n    \"5\\n0\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1295/B",
  "starter_code": ""
}