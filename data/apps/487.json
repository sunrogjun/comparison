{
  "task_id": "APPS/487",
  "problem_id": 487,
  "prompt": "Awruk is taking part in elections in his school. It is the final round. He has only one opponent\u00a0\u2014 Elodreip. The are $n$ students in the school. Each student has exactly $k$ votes and is obligated to use all of them. So Awruk knows that if a person gives $a_i$ votes for Elodreip, than he will get exactly $k - a_i$ votes from this person. Of course $0 \\le k - a_i$ holds.\n\nAwruk knows that if he loses his life is over. He has been speaking a lot with his friends and now he knows $a_1, a_2, \\dots, a_n$ \u2014 how many votes for Elodreip each student wants to give. Now he wants to change the number $k$ to win the elections. Of course he knows that bigger $k$ means bigger chance that somebody may notice that he has changed something and then he will be disqualified.\n\nSo, Awruk knows $a_1, a_2, \\dots, a_n$ \u2014 how many votes each student will give to his opponent. Help him select the smallest winning number $k$. In order to win, Awruk needs to get strictly more votes than Elodreip.\n\n\n-----Input-----\n\nThe first line contains integer $n$ ($1 \\le n \\le 100$)\u00a0\u2014 the number of students in the school.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 100$)\u00a0\u2014 the number of votes each student gives to Elodreip.\n\n\n-----Output-----\n\nOutput the smallest integer $k$ ($k \\ge \\max a_i$) which gives Awruk the victory. In order to win, Awruk needs to get strictly more votes than Elodreip.\n\n\n-----Examples-----\nInput\n5\n1 1 1 5 1\n\nOutput\n5\nInput\n5\n2 2 3 2 2\n\nOutput\n5\n\n\n-----Note-----\n\nIn the first example, Elodreip gets $1 + 1 + 1 + 5 + 1 = 9$ votes. The smallest possible $k$ is $5$ (it surely can't be less due to the fourth person), and it leads to $4 + 4 + 4 + 0 + 4 = 16$ votes for Awruk, which is enough to win.\n\nIn the second example, Elodreip gets $11$ votes. If $k = 4$, Awruk gets $9$ votes and loses to Elodreip.",
  "solutions": "[\"n = int(input())\\na = list(map(int,input().split()))\\ns = sum(a)\\nfor k in range(max(a), 999999):\\n    vote = sum(k-x for x in a)\\n    if vote > s: print(k); break\", \"n=int(input())\\nar=list(map(int,input().split()))\\nk=max(ar)\\nwhile True:\\n    s1,s2=0,0\\n    for e in ar:\\n        s1+=e\\n        s2+=k-e\\n    if(s2>s1):\\n        break\\n    k+=1\\nprint(k)\", \"n = int(input())\\ns = list(map(int, input().split()))\\nsm = sum(s)\\nmx = max(s)\\nfor i in range(mx, 1000000):\\n    if i * n - sm > sm:\\n        print(i)\\n        break\", \"n = int(input())\\na = list(map(int, input().split()))\\ns = sum(a)\\nmx = max(a)\\nwhile(n*mx-s <= s):\\n    mx+=1\\nprint(mx)\", \"def scand():\\n    return int(input())\\ndef scana():\\n    return [int(x) for x in input().split()]\\nn=scand()\\na=scana()\\nsumm=sum(a)\\nfor i in range(max(a),10000):\\n    if(i*n-summ>summ):\\n        print(i)\\n        break\\n\", \"from sys import stdin, stdout\\nfrom math import sin, tan, cos\\n\\nn = int(stdin.readline())\\nvl = list(map(int, stdin.readline().split()))\\n\\nfor i in range(max(vl), 300):\\n    if i * n - sum(vl) > sum(vl):\\n        stdout.write(str(i))\\n        break\", \"n = int(input())\\na = list(map(int, input().split()))\\nk = max(a)\\ns = sum(a)\\nwhile s >= k * n - s:\\n\\tk += 1\\nprint(k)\", \"n = int(input())\\na = [int(i) for i in input().split()]\\nc = max(a)\\nwhile True:\\n    x = 0\\n    y = 0\\n    for el in a:\\n        x += el\\n        y += c - el\\n    if x < y:\\n        break\\n    c += 1\\nprint(c)\\n\", \"n = int(input())\\narr = list(map(int,input().split()))\\nk = max(arr)\\n\\na = sum(arr)\\nb = 0\\nwhile b <= a:\\n    b = sum(k - x for x in arr)\\n    k += 1\\nprint(k - 1)\\n\\n\", \"n = int(input())\\nnum = list(map(int, input().split()))\\nx = max(num)\\ns = sum(num)\\nfor i in range(x, 250):\\n    if i * n - s > s:\\n        print(i)\\n        break\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nk = max(a)\\ns = sum(a)\\n\\nwhile s >= k * n - s:\\n    k += 1\\n\\nprint(k)\\n\", \"n = int( input() )\\na = list( map( int, input().split() ) )\\ns = sum( a )\\n\\nk = max( a )\\nwhile True:\\n    if n * k - s > s:\\n        print( k )\\n        break\\n    k += 1\\n\\n\", \"n = int(input())\\n\\nA = [int(x) for x in input().split()]\\n\\ns = sum(A)\\nM = max(A)\\n\\n# Look for num M, M+1...\\n\\nfor K in range(M, M+300):\\n    votes = K*n - s\\n    if votes > s:\\n        print(K)\\n        break\\n\", \"def go():\\n    n = int(input())\\n    a = [int(i) for i in input().split(' ')]\\n    x = max(a)\\n    s1 = 0\\n    s2 = 0\\n    for i in range(n):\\n        s1 += a[i]\\n        s2 += x - a[i]\\n    if s2 > s1:\\n        return x\\n    while s1 >= s2:\\n        x += 1\\n        s2 += n\\n    return x\\n\\nprint(go())\\n\", \"n = int(input())\\narr = list(map(int, input().split()))\\no = sum(arr)\\nfor i in range(max(arr), 10 ** 5):\\n    if i * n - o > o:\\n        print(i)\\n        break\", \"# -*- coding: utf-8 -*-\\n\\nimport math\\nimport collections\\nimport bisect\\nimport heapq\\nimport time\\nimport random\\nimport itertools\\nimport sys\\n\\n\\\"\\\"\\\"\\ncreated by shhuan at 2018/10/20 22:37\\n\\n\\\"\\\"\\\"\\n\\n\\\"\\\"\\\"\\n# Definition for a Node.\\n\\\"\\\"\\\"\\n\\n\\nN = int(input())\\nA = [int(x) for x in input().split()]\\n\\ne = 2 * sum(A)\\n\\nans = max(e // N + 1, max(A))\\nprint(ans)\", \"def ii():\\n    return int(input())\\ndef mi():\\n    return map(int, input().split())\\ndef li():\\n    return list(mi())\\n\\nn = ii()\\na = li()\\ns = sum(a)\\nk = max(a)\\nwhile 1:\\n    if n * k - s > s:\\n        print(k)\\n        break\\n    k += 1\", \"gcd = lambda a, b: gcd(b, a % b) if b else a\\n\\n\\ndef main():\\n    n = int(input())\\n    arr = list(map(int, input().split()))\\n\\n    d = max(arr)\\n\\n    while True:\\n        res = 0\\n        for i in arr:\\n            res += d - i\\n        if res > sum(arr):\\n            print(d)\\n            return\\n        d += 1\\n\\n\\nmain()\", \"n=int(input())\\narr=list(map(int,input().split()))\\nmaxval=max(arr)\\nsumx=sum(arr)\\nflag=0\\nwhile((maxval)*n-sumx<=sumx):\\n    maxval+=1\\nprint(maxval)\\n\\n\", \"from math import ceil\\n\\nn = int(input())\\nvotes = list(map(int, input().strip().split()))\\n\\nsumv = sum(votes)\\nprint(max(1+(2*sumv//n), max(votes)))\", \"n = int(input())\\nxs = list(map(int, input().split()))\\nmax_x = max(xs)\\nbad = sum(xs)\\ngood = sum(max_x - x for x in xs)\\nans = 0\\nwhile True:\\n    if ans * n + good > bad:\\n        print(ans + max_x)\\n        break\\n    ans += 1\\n\", \"x = int(input())\\na = [int(x) for x in input().split()]\\ns = 0\\nmx = 0\\nfor x in a:\\n\\tif x > mx:\\n\\t\\tmx = x\\n\\ts += x\\nk = mx\\nwhile (True):\\n\\ts1 = 0\\n\\tfor x in a:\\n\\t\\ts1 += k - x\\n\\tif s1 > s:\\n\\t\\tprint(k)\\n\\t\\treturn\\n\\tk += 1\\n\", \"n = int(input())\\na = input().split()\\ne = 0\\nfor i in range(n):\\n    e += int(a[i])\\nmini = ((2*e)//n)+1\\nfor i in range(n):\\n    mini = max(int(a[i]),mini)\\nprint(mini)\\n\", \"\\n\\ndef __starting_point():\\n\\n    n = int(input())\\n\\n    A = [int(num) for num in input().split(' ')]\\n\\n    opponent_votes = sum(A)\\n    min_k = max(A)\\n\\n    while sum([min_k - a for a in A]) <= opponent_votes:\\n        min_k += 1\\n\\n    print(min_k)\\n__starting_point()\", \"n=int(input())\\na=list(map(int,input().split()))\\ns=sum(a)\\nm=max(a)\\nwhile True:\\n    if n*m-s>s:\\n        print(m)\\n        break\\n    else:\\n        m+=1\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5\\n1 1 1 5 1\\n\",\n    \"5\\n2 2 3 2 2\\n\",\n    \"1\\n100\\n\",\n    \"2\\n15 5\\n\",\n    \"50\\n12 5 4 3 4 4 9 2 14 13 1 6 6 6 6 3 1 14 1 10 4 9 12 3 1 6 5 6 9 14 4 1 10 5 15 8 5 11 13 2 10 11 8 12 8 15 2 8 6 3\\n\",\n    \"100\\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50\\n\",\n    \"100\\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\n\",\n    \"50\\n2 2 2 2 2 1 1 1 2 2 1 1 2 2 1 1 2 2 2 1 2 2 2 2 2 2 2 1 1 5 1 2 1 2 1 1 1 2 1 1 1 2 2 1 1 2 1 1 1 1\\n\",\n    \"100\\n26 32 47 42 13 36 42 9 16 37 9 49 42 46 47 49 26 20 37 29 38 2 3 1 22 37 13 10 9 45 28 2 41 21 36 3 4 41 13 14 39 41 7 22 21 15 21 17 17 21 34 35 4 12 49 5 12 31 37 28 37 3 24 14 42 22 50 20 27 32 10 12 19 27 8 16 29 8 40 15 42 23 49 46 31 14 9 30 100 8 48 9 44 39 25 43 50 47 31 3\\n\",\n    \"1\\n1\\n\",\n    \"2\\n1 1\\n\",\n    \"2\\n100 100\\n\",\n    \"10\\n1 2 2 2 2 2 1 2 2 1\\n\",\n    \"10\\n2 2 4 4 3 1 1 2 3 2\\n\",\n    \"20\\n10 20 26 13 8 23 47 47 20 49 22 6 43 7 34 1 18 48 38 7\\n\",\n    \"25\\n2 2 3 3 2 3 1 2 1 3 3 2 3 3 2 1 1 3 1 2 3 3 1 1 3\\n\",\n    \"25\\n3 3 5 9 9 3 2 9 10 2 3 2 3 6 5 9 10 10 6 6 2 3 9 9 9\\n\",\n    \"100\\n82 51 81 14 37 17 78 92 64 15 8 86 89 8 87 77 66 10 15 12 100 25 92 47 21 78 20 63 13 49 41 36 41 79 16 87 87 69 3 76 80 60 100 49 70 59 72 8 38 71 45 97 71 14 76 54 81 4 59 46 39 29 92 3 49 22 53 99 59 52 74 31 92 43 42 23 44 9 82 47 7 40 12 9 3 55 37 85 46 22 84 52 98 41 21 77 63 17 62 91\\n\",\n    \"10\\n2 2 2 2 2 2 2 2 2 2\\n\",\n    \"10\\n5 5 5 5 5 5 5 5 5 5\\n\",\n    \"10\\n7 7 7 7 7 7 7 7 7 7\\n\",\n    \"100\\n25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25\\n\",\n    \"100\\n75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75 75\\n\",\n    \"20\\n2 2 2 2 4 2 2 2 2 2 1 1 2 2 2 1 1 2 1 1\\n\",\n    \"20\\n3 3 5 2 10 1 2 1 2 2 2 3 2 1 2 1 3 5 2 4\\n\",\n    \"20\\n10 7 1 9 9 3 10 9 9 2 9 8 5 10 9 20 4 9 9 9\\n\",\n    \"100\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 3 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\",\n    \"3\\n1 1 4\\n\",\n    \"2\\n1 4\\n\",\n    \"75\\n13 13 5 6 20 20 6 1 18 18 13 15 20 3 9 11 3 11 3 8 12 15 2 4 16 17 8 11 15 6 6 5 3 12 19 15 17 8 5 20 12 6 9 7 20 15 8 7 5 17 9 12 12 17 12 16 2 6 16 16 17 18 6 7 19 13 6 3 8 16 13 7 1 14 11\\n\",\n    \"4\\n1 2 3 4\\n\",\n    \"76\\n13 13 5 6 20 20 6 1 18 18 13 15 20 3 9 11 3 11 3 8 12 15 2 4 16 17 8 11 15 6 6 5 3 12 19 15 17 8 5 20 12 6 9 7 20 15 8 7 5 17 9 12 12 17 12 16 2 6 16 16 17 18 6 7 19 13 6 3 8 16 13 7 1 14 11 9\\n\",\n    \"3\\n1 4 1\\n\",\n    \"77\\n1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 7 7 7 7 7 7 7\\n\",\n    \"6\\n4 5 5 5 5 5\\n\",\n    \"5\\n2 2 2 3 3\\n\",\n    \"6\\n4 4 4 4 4 9\\n\",\n    \"4\\n1 1 1 3\\n\",\n    \"4\\n1 2 2 1\\n\",\n    \"5\\n1 1 1 3 4\\n\",\n    \"3\\n2 2 1\\n\",\n    \"3\\n1 1 2\\n\",\n    \"4\\n6 6 5 5\\n\",\n    \"3\\n1 2 6\\n\",\n    \"5\\n1 1 1 1 3\\n\",\n    \"5\\n4 4 4 4 3\\n\",\n    \"7\\n1 1 1 7 1 1 2\\n\"\n  ],\n  \"outputs\": [\n    \"5\",\n    \"5\",\n    \"201\",\n    \"21\",\n    \"15\",\n    \"101\",\n    \"201\",\n    \"5\",\n    \"100\",\n    \"3\",\n    \"3\",\n    \"201\",\n    \"4\",\n    \"5\",\n    \"49\",\n    \"5\",\n    \"12\",\n    \"102\",\n    \"5\",\n    \"11\",\n    \"15\",\n    \"51\",\n    \"151\",\n    \"4\",\n    \"10\",\n    \"20\",\n    \"3\",\n    \"5\",\n    \"6\",\n    \"22\",\n    \"6\",\n    \"22\",\n    \"5\",\n    \"12\",\n    \"10\",\n    \"5\",\n    \"10\",\n    \"4\",\n    \"4\",\n    \"5\",\n    \"4\",\n    \"3\",\n    \"12\",\n    \"7\",\n    \"3\",\n    \"8\",\n    \"7\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1043/A",
  "starter_code": ""
}