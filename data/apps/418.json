{
  "task_id": "APPS/418",
  "problem_id": 418,
  "prompt": "Codeforces user' handle color depends on his rating\u00a0\u2014 it is red if his rating is greater or equal to 2400; it is orange if his rating is less than 2400 but greater or equal to 2200, etc. Each time participant takes part in a rated contest, his rating is changed depending on his performance.\n\nAnton wants the color of his handle to become red. He considers his performance in the rated contest to be good if he outscored some participant, whose handle was colored red before the contest and his rating has increased after it.\n\nAnton has written a program that analyses contest results and determines whether he performed good or not. Are you able to do the same?\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 100)\u00a0\u2014 the number of participants Anton has outscored in this contest .\n\nThe next n lines describe participants results: the i-th of them consists of a participant handle name_{i} and two integers before_{i} and after_{i} ( - 4000 \u2264 before_{i}, after_{i} \u2264 4000)\u00a0\u2014 participant's rating before and after the contest, respectively. Each handle is a non-empty string, consisting of no more than 10 characters, which might be lowercase and uppercase English letters, digits, characters \u00ab_\u00bb and \u00ab-\u00bb characters.\n\nIt is guaranteed that all handles are distinct.\n\n\n-----Output-----\n\nPrint \u00abYES\u00bb (quotes for clarity), if Anton has performed good in the contest and \u00abNO\u00bb (quotes for clarity) otherwise.\n\n\n-----Examples-----\nInput\n3\nBurunduk1 2526 2537\nBudAlNik 2084 2214\nsubscriber 2833 2749\n\nOutput\nYES\nInput\n3\nApplejack 2400 2400\nFluttershy 2390 2431\nPinkie_Pie -2500 -2450\n\nOutput\nNO\n\n\n-----Note-----\n\nIn the first sample, Anton has outscored user with handle Burunduk1, whose handle was colored red before the contest and his rating has increased after the contest.\n\nIn the second sample, Applejack's rating has not increased after the contest, while both Fluttershy's and Pinkie_Pie's handles were not colored red before the contest.",
  "solutions": "[\"read = lambda: map(int, input().split())\\nn = int(input())\\nfor i in range(n):\\n    name, x, y = input().split()\\n    x, y = int(x), int(y)\\n    if x >= 2400 and y > x:\\n        print('YES')\\n        return\\nprint('NO')\", \"n = int(input())\\nfor i in range(n):\\n    inp = input().split()\\n    if 2400 <= int(inp[1]) < int(inp[2]):\\n        print(\\\"YES\\\")\\n        break\\nelse:\\n    print(\\\"NO\\\")\", \"import sys\\nfrom math import *\\nn=int(input())\\nfor i in range(n):\\n    a,b,c=map(str,input().split())\\n    if int(b)>=2400:\\n        if int(c)-int(b)>0:\\n            print('YES')\\n            return\\nprint('NO')\", \"n = int(input())\\nf = False\\nfor i in range(n):\\n    q, w, e = input().split()\\n    if (int(w) >= 2400 and int(e) > int(w)):\\n        f = True\\nif f:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n = int(input())\\nanswer = \\\"NO\\\"\\nfor _ in range(n):\\n    s = str(input())\\n    arr = s.split()\\n    a = int(arr[1])\\n    b = int(arr[2])\\n\\n    if a >= 2400 and b > a:\\n        answer = \\\"YES\\\"\\n\\nprint(answer)\", \"n = int(input())\\nfor i in range(n):\\n    s = input().split()\\n    b = int(s[1])\\n    e = int(s[2])\\n    if b >= 2400 and e > b:\\n        print(\\\"YES\\\")\\n        return\\nprint('NO')\\n\", \"n = int(input())\\na = [input().split() for i in range(n)]\\nif sum([int(a[i][1]) >= 2400 and int(a[i][2]) > int(a[i][1]) for i in range(n)]) >= 1:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\", \"3\\n# Copyright (C) 2016 Sayutin Dmitry.\\n#\\n# This program is free software; you can redistribute it and/or\\n# modify it under the terms of the GNU General Public License as\\n# published by the Free Software Foundation; version 3\\n#\\n# This program is distributed in the hope that it will be useful,\\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\\n# GNU General Public License for more details.\\n#\\n# You should have received a copy of the GNU General Public License\\n# along with this program; If not, see <http://www.gnu.org/licenses/>.\\n\\ndef main():\\n    n = int(input())\\n    ans = False\\n    for i in range(n):\\n        name, old, new = input().split()\\n        old = int(old)\\n        new = int(new)\\n        if new > old and old >= 2400:\\n            ans = True\\n    print(\\\"YES\\\" if ans else \\\"NO\\\")\\n        \\nmain()\\n\", \"from collections import defaultdict, deque, Counter, OrderedDict\\nfrom bisect import insort, bisect_right, bisect_left\\nimport threading, sys\\n\\ndef main():\\n    n = int(input())\\n    check = False\\n    for i in range(n):\\n        a,b,c = input().split()\\n        b,c = int(b),int(c)\\n        if b >= 2400 and c > b:\\n            check = True\\n    print(\\\"YES\\\" if check else \\\"NO\\\")\\n\\ndef __starting_point():\\n    \\\"\\\"\\\"sys.setrecursionlimit(400000)\\n    threading.stack_size(40960000)\\\"\\\"\\\"\\n    thread = threading.Thread(target=main)\\n    thread.start()\\n__starting_point()\", \"n = int(input())\\n\\nans = \\\"NO\\\"\\n\\nfor i in range(n):\\n    L = list(input().split())\\n    if (int(L[1]) >= 2400 and int(L[2]) > int(L[1])):\\n        ans = \\\"YES\\\"\\nprint(ans)\\n\", \"n = int(input())\\nworks = False\\nfor _ in range(n):\\n    name, start, end = input().split()\\n    start = int(start)\\n    end = int(end)\\n    works = works or (start >= 2400 and end > start)\\n\\nprint(\\\"YES\\\" if works else \\\"NO\\\")\\n\", \"n = int(input())\\n\\nfor i in range(n):\\n\\tname, before, after = input().split()\\n\\tbefore = int(before)\\n\\tafter = int(after)\\n\\tif before < after:\\n\\t\\tif after >= 2400 and before >= 2400:\\n\\t\\t\\tprint('YES')\\n\\t\\t\\treturn\\nprint('NO')\\n\", \"def is_red(x):\\n    return x >= 2400\\n\\nn = int(input())\\nfor i in range(n):\\n    s = input().split()\\n    a, b = int(s[1]), int(s[2])\\n    s = s[0]\\n    if is_red(a) and b > a:\\n        print(\\\"YES\\\")\\n        return\\nprint(\\\"NO\\\")\", \"n = int(input())\\ns = []\\nfor i in range(n):\\n    s.append([i for i in input().split()])\\nfor i in s:\\n    if int(i[1])>=2400 and int(i[2])>int(i[1]):\\n        print(\\\"YES\\\")\\n        break\\nelse:\\n    print(\\\"NO\\\")\\n\", \"won = False\\nfor i in range(int(input())):\\n    n, f, s = input().split()\\n    f = int(f)\\n    s = int(s)\\n    if s > f and f >= 2400:\\n        won = True\\nif won:\\n    print('YES')\\nelse:\\n    print('NO')\", \"n = int(input())\\n\\nfor _ in range(n):\\n    l = input().split()\\n    before = int(l[1])\\n    after = int(l[2])\\n    if 2400 <= before < after:\\n        print('YES')\\n        break\\nelse:\\n    print('NO')\\n\", \"N=int(input())\\nok=False\\nfor _ in range(N):\\n    a,b,c=input().split()\\n    b=int(b)\\n    c=int(c)\\n    ok |= b >= 2400 and c > b\\nprint(\\\"YES\\\" if ok else \\\"NO\\\")\", \"N = int(input())\\nfor i in range(N):\\n    S, b, a = input().split()\\n    b, a = (int(n) for n in (b, a))\\n    if b >= 2400 and a > b:\\n        print('YES')\\n        break\\nelse:\\n    print('NO')\\n\", \"n=int(input())\\nfor _ in range(n):\\n    _,x,y=input().split()\\n    x=int(x)\\n    y=int(y)\\n    if x<y and x>=2400: print('YES'); break\\nelse: print('NO')\", \"n = int(input())\\nbad = True\\nfor i in range(n):\\n    line = input().split()\\n    name, start, finish = line[0], int(line[1]), int(line[2])\\n    if start >= 2400 and finish > start:\\n        bad = False\\nif not bad:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"N = int(input())\\n\\nans = \\\"NO\\\"\\nfor _ in range(N):\\n    handle, before, after = input().split()\\n    before, after = int(before), int(after)\\n\\n    if before >= 2400 and after > before:\\n        ans = \\\"YES\\\"\\n\\nprint(ans)\", \"n=int(input())\\nfor i in range(n):\\n  a,b,c=input().split()\\n  if int(b)>2399 and int(c)>int(b): print(\\\"YES\\\"); break\\nelse: print(\\\"NO\\\")\", \"\\\"\\\"\\\"a,b,n,x = map(int,input().split())\\nlist(map(int,input().split()))\\n[list(map(int,input().split())) for i in range(n)]\\\"\\\"\\\"\\nn = int(input())\\nnbai = [list(map(str,input().split())) for i in range(n)]\\nans = 0\\nfor i in range(n):\\n    if int(nbai[i][2]) > int(nbai[i][1]) and int(nbai[i][1]) > 2399:\\n        ans = 1\\n        break\\nif ans == 1:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\\n        \\n\", \"for _ in range(int(input())):\\n    name, before, after = input().split()\\n    before = int(before)\\n    after = int(after)\\n    if 2400 <= before < after:\\n        print(\\\"YES\\\")\\n        return\\n\\nprint(\\\"NO\\\")\", \"n = int(input())\\n\\nBASE = 2400\\n\\nanswer = False\\n\\nfor i in range(n):\\n    before, after = list(map(int, input().split()[1:3]))\\n\\n    if before >= BASE and after - before > 0:\\n        answer = True\\n        break\\n\\nprint(\\\"YES\\\" if answer else \\\"NO\\\")\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\nBurunduk1 2526 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n\",\n    \"3\\nApplejack 2400 2400\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\\n\",\n    \"1\\nDb -3373 3591\\n\",\n    \"5\\nQ2bz 960 2342\\nhmX 2710 -1348\\ngbAe -1969 -963\\nE -160 196\\npsi 2665 -3155\\n\",\n    \"9\\nmwAz9lQ 1786 -1631\\nnYgYFXZQfY -1849 -1775\\nKU4jF -1773 -3376\\nopR 3752 2931\\nGl -1481 -1002\\nR -1111 3778\\n0i9B21DC 3650 289\\nQ8L2dS0 358 -3305\\ng -2662 3968\\n\",\n    \"5\\nzMSBcOUf -2883 -2238\\nYN -3314 -1480\\nfHpuccQn06 -1433 -589\\naM1NVEPQi 399 3462\\n_L 2516 -3290\\n\",\n    \"1\\na 2400 2401\\n\",\n    \"1\\nfucker 4000 4000\\n\",\n    \"1\\nJora 2400 2401\\n\",\n    \"1\\nACA 2400 2420\\n\",\n    \"1\\nAca 2400 2420\\n\",\n    \"1\\nSub_d 2401 2402\\n\",\n    \"2\\nHack 2400 2401\\nDum 1243 555\\n\",\n    \"1\\nXXX 2400 2500\\n\",\n    \"1\\nfucker 2400 2401\\n\",\n    \"1\\nX 2400 2500\\n\",\n    \"1\\nvineet 2400 2401\\n\",\n    \"1\\nabc 2400 2500\\n\",\n    \"1\\naaaaa 2400 2401\\n\",\n    \"1\\nhoge 2400 2401\\n\",\n    \"1\\nInfinity 2400 2468\\n\",\n    \"1\\nBurunduk1 2400 2401\\n\",\n    \"1\\nFuck 2400 2401\\n\",\n    \"1\\nfuck 2400 2401\\n\",\n    \"3\\nApplejack 2400 2401\\nFluttershy 2390 2431\\nPinkie_Pie -2500 -2450\\n\",\n    \"1\\nalex 2400 2401\\n\",\n    \"1\\nA 2400 2401\\n\",\n    \"1\\na 2400 2455\\n\",\n    \"1\\nlol 2400 2401\\n\",\n    \"2\\nBurunduk1 2400 2537\\nBudAlNik 2084 2214\\n\",\n    \"1\\naaaaaa 2400 2401\\n\",\n    \"1\\nBurunduk1 2400 2500\\n\",\n    \"1\\nds 2400 2410\\n\",\n    \"1\\nas 2400 2401\\n\",\n    \"1\\nabc 2400 2401\\n\",\n    \"3\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\nBurunduk1 2526 2537\\n\",\n    \"1\\ncaonima 2400 2401\\n\",\n    \"1\\narr 2400 2500\\n\",\n    \"1\\nx 2400 2401\\n\",\n    \"1\\narrr 2400 2500\\n\",\n    \"1\\nabc 2400 2405\\n\",\n    \"3\\nBurunduk1 2400 2420\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n\",\n    \"1\\nBurunduk1 2400 2537\\n\",\n    \"1\\nHELLO 2400 2401\\n\",\n    \"1\\neatmore 2400 2500\\n\",\n    \"1\\nb 2400 2401\\n\",\n    \"3\\nBurunduk1 2400 2537\\nBudAlNik 2084 2214\\nsubscriber 2833 2749\\n\",\n    \"1\\nApplejack 2400 2410\\n\",\n    \"1\\nabacaba 2400 2451\\n\",\n    \"1\\nrekt_n00b 2500 2600\\n\"\n  ],\n  \"outputs\": [\n    \"YES\",\n    \"NO\",\n    \"NO\",\n    \"NO\",\n    \"NO\",\n    \"NO\",\n    \"YES\",\n    \"NO\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\",\n    \"YES\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/681/A",
  "starter_code": ""
}