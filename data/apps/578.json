{
  "task_id": "APPS/578",
  "problem_id": 578,
  "prompt": "Barney is standing in a bar and starring at a pretty girl. He wants to shoot her with his heart arrow but he needs to know the distance between him and the girl to make his shot accurate. [Image] \n\nBarney asked the bar tender Carl about this distance value, but Carl was so busy talking to the customers so he wrote the distance value (it's a real number) on a napkin. The problem is that he wrote it in scientific notation. The scientific notation of some real number x is the notation of form AeB, where A is a real number and B is an integer and x = A \u00d7 10^{B} is true. In our case A is between 0 and 9 and B is non-negative.\n\nBarney doesn't know anything about scientific notation (as well as anything scientific at all). So he asked you to tell him the distance value in usual decimal representation with minimal number of digits after the decimal point (and no decimal point if it is an integer). See the output format for better understanding.\n\n\n-----Input-----\n\nThe first and only line of input contains a single string of form a.deb where a, d and b are integers and e is usual character 'e' (0 \u2264 a \u2264 9, 0 \u2264 d < 10^100, 0 \u2264 b \u2264 100)\u00a0\u2014 the scientific notation of the desired distance value.\n\na and b contain no leading zeros and d contains no trailing zeros (but may be equal to 0). Also, b can not be non-zero if a is zero.\n\n\n-----Output-----\n\nPrint the only real number x (the desired distance value) in the only line in its decimal notation. \n\nThus if x is an integer, print it's integer value without decimal part and decimal point and without leading zeroes. \n\nOtherwise print x in a form of p.q such that p is an integer that have no leading zeroes (but may be equal to zero), and q is an integer that have no trailing zeroes (and may not be equal to zero).\n\n\n-----Examples-----\nInput\n8.549e2\n\nOutput\n854.9\n\nInput\n8.549e3\n\nOutput\n8549\n\nInput\n0.33e0\n\nOutput\n0.33",
  "solutions": "[\"s = input()\\na = str()\\nb = str()\\nf = False\\nfor i in range(len(s)):\\n    if s[i] == 'e':\\n        f = True\\n    elif f:\\n        b = b + s[i]\\n    else:\\n        a = a + s[i]\\npos = a.index('.')\\nn = int(b)\\na = list(a)\\nfor i in range(n):\\n    if pos == len(a) - 1:\\n        a.append('0')\\n    a[pos], a[pos + 1] = a[pos + 1], a[pos]\\n    pos += 1\\nif a[-1] == '.':\\n    a.pop()\\nif '.' in a:\\n    while a[-1] == '0':\\n        a.pop()\\nif a[-1] == '.':\\n    a.pop()\\nif '.' not in a:\\n    while len(a) > 1 and a[0] == '0':\\n        a.pop(0)\\nfor i in range(len(a)):\\n    print(a[i], end = '')\\n\", \"a, b = input().split(\\\"e\\\")\\nb = int(b)\\nc, d = a.split(\\\".\\\")\\nd += \\\"0\\\" * 500\\nans = c + d[:int(b)] + \\\".\\\" + d[int(b):]\\nwhile ans[len(ans) - 1:] == \\\"0\\\":\\n    ans = ans[:len(ans) - 1]\\nif ans[len(ans) - 1:] == \\\".\\\":\\n    ans = ans[:len(ans) - 1]\\nprint(ans)\\n\", \"s = input()\\nb = int(s.split('e')[1])\\ns = s.split('e')[0]\\na = s.split('.')[0]\\nd = s.split('.')[1]+'0'*101\\na += d[:b]\\nd = d[b:]\\ni = 0\\nwhile i < len(a)-1 and a[i]=='0':\\n    i += 1\\na = a[i:]\\ni = len(d)-1\\nwhile i>0 and d[i]=='0':\\n    i -= 1\\nd = d[:i+1]\\nif d == '0':\\n    print(a)\\nelse:\\n    print(a+'.'+d)\\n\\n\\n\", \"from decimal import Decimal, getcontext\\n\\ngetcontext().prec = 250\\ns = \\\"{:.250f}\\\".format(Decimal(input()))\\n\\nif '.' in s:\\n    while s[-1] == '0':\\n        s = s[:-1]\\n    if s[-1] == '.':\\n        s = s[:-1]\\n\\nprint(s)\\n\", \"p, q = input().split('e')\\na, b = p.split('.')\\nb += '0' * 150\\nd = int(q)\\na = (a + b[:d]).lstrip('0')\\nb = b[d:].rstrip('0')\\nif not a:\\n    a = '0'\\nprint(a, end='')\\nif b:\\n    print('.' + b)\\nelse:\\n    print()\\n\", \"from decimal import *\\n\\ngetcontext().prec = 128\\n\\nxs = input()\\nxs = [x for x in xs.split(\\\"e\\\")]\\na = Decimal(xs[0])\\nb = 10 ** int(xs[1])\\ns = str(a * b)\\ni = len(s) - 1\\nwhile i > 0 and s[i] == '0':\\n    i = i - 1\\nif s[i] == '.':\\n    i = i -1\\nprint(s[:i+1])\\n\", \"s = input()\\nfst = s[:s.index('e')]\\nto_move = int(s[s.index('e') + 1:])\\ncurr = 0\\nwhile curr != to_move:\\n    if fst[-1] == '.':\\n        fst = fst[:-1] + '0.'\\n    else:\\n        prt = fst.split('.')\\n        fst = prt[0] + prt[1][0] + '.' + prt[1][1:]\\n    curr += 1\\nif fst[-1] == '.':\\n    fst = fst[:-1]\\ntest = fst.split('.')\\nif len(test) != 1 and set(test[-1]) == {'0'}:\\n    fst = test[0]\\nprint(fst)\", \"#!/usr/bin/env python3\\ns = input()\\na, s = s.split('.')\\nd, b = s.split('e')\\nfor i in range(int(b)):\\n    d += '0'\\n    a += d[0]\\n    d = d[1:]\\ns = a + '.' + d\\nwhile s[0] == '0':\\n    s = s[1:]\\nwhile s[-1] == '0':\\n    s = s[:-1]\\nif s[-1] == '.':\\n    s = s[:-1]\\nif s == '' or s[0] == '.':\\n    s = '0' + s\\nprint(s)\\n\", \"s = input();\\nl1 = s.find(\\\".\\\")\\nl2 = s.find(\\\"e\\\")\\n\\na = s[0:l1]+s[l1+1:l2]\\nb = int(s[l2+1:len(s)])\\n\\nfor i in range(100):\\n    a += \\\"0\\\"\\n\\na = a[0:l1+b]+\\\".\\\"+a[l1+b:len(a)]\\n\\nwhile a[-1] == \\\"0\\\":\\n    a = a[0:-1]\\n    \\nif(a[-1] == \\\".\\\"):\\n    a = a[0:-1]\\n\\nprint(a)\", \"import sys\\n\\nline = sys.stdin.readline()\\na, deb = line.split(\\\".\\\")\\nd,b = deb.split(\\\"e\\\")\\n\\nif d==\\\"0\\\": d=\\\"\\\"\\n\\nb=int(b)\\n\\n#if (a==\\\"0\\\"):\\n#\\ta=d[0]\\n#\\td=d[1:]\\n#\\tb=b-1\\n\\n\\np1 = d[0:b]\\nif len(p1) < b:\\n\\tp1 = p1 + \\\"0\\\"*(b-len(p1))\\n\\np2 = d[b:]\\n\\nprint(a+p1+(\\\".\\\"+p2 if p2!=\\\"\\\" else \\\"\\\"))\\n\", \"s = input()\\na = s[0]\\ns = s[2:]\\nb = s[:s.find('e')]\\nd = int(s[s.find('e') + 1:])\\n\\ns = ''\\n\\nif d < 0:\\n    s = '0.' + a\\n    d -= 1\\n    s += '0' * -d\\n    d = 0\\n    s += b\\n\\nelse:\\n    s = a\\n    while d > 0:\\n        s += b[0]\\n        b = b[1:] + '0'\\n        d -= 1\\n    s += '.' + b\\n\\nwhile len(s) and s[0] == '0':\\n    s = s[1:]\\ns = s[::-1]\\nwhile len(s) and s[0] == '0':\\n    s = s[1:]\\ns = s[::-1]\\n\\nif s[0] == '.':\\n    s = '0' + s\\n\\nif s[-1] == '.':\\n    s = s[:-1]\\n\\nprint(s)\\n\", \"def main():\\n    A, B = input().split('e')\\n    B = int(B)\\n    s1, s2 = A.split('.')\\n    if B == 0:\\n        if s2 == '0':\\n            print(s1)\\n        else:\\n            print(A)\\n        return\\n    print(s1, end='')\\n    for i in range(B):\\n        if i < len(s2):\\n            print(s2[i], end='')\\n        else:\\n            print(0, end='')\\n    s2 = s2[i+1:]\\n    if s2:\\n        print('.' + s2)\\n\\nmain()\\n    \\n\", \"line = input()\\ns = ''\\nk = len(line)\\nwhile line[k-1]!='e':\\n\\ts = line[k-1]+s\\n\\tk = k-1\\nline1 = list(line[:k-1])\\nb = int(s)\\nfor i in range(0, len(line1)):\\n\\tif line1[i]=='.':\\n\\t\\tline1.pop(i)\\n\\t\\tj = i+b\\n\\t\\tif j<=len(line1):\\n\\t\\t\\tline1.insert(j, '.')\\n\\t\\t\\tu = len(line1)-1\\n\\t\\t\\tdif = 0\\n\\t\\t\\twhile u>j and line[u]=='0':\\n\\t\\t\\t\\tline1.pop()\\n\\t\\t\\t\\tu -= 1\\n\\t\\telse:\\n\\t\\t\\tdif = j-len(line1)\\n\\t\\t\\tline1 = line1 + ['0']*dif\\n\\t\\tbreak\\nif line1[-1]=='.':\\n\\tline1.pop()\\nprint (''.join(y for y in line1))\", \"S = input()\\n\\nA, B = S.split('e')\\n\\na1, a2 = A.split('.')\\ns1, s2 = a1[:]+a2[:int(B)], a2[int(B):]\\n\\nwhile len(s1+s2) < int(B)+1:\\n    s1 = s1+'0'\\n\\nif len(s2) == 0 or int(s2) == 0:\\n    print(s1)\\nelse:\\n    print(s1+'.'+s2)\\n\", \"a, deb = input().split('.')\\nd, b = deb.split('e')\\nb = int(b)\\nif b < len(d):\\n    number = \\\"{}{}.{}\\\".format(a, d[:b], d[b:])\\n    number = number.strip('0')\\n    if number[0] == '.':\\n        number = \\\"0{}\\\".format(number)\\n    if number[-1] == '.':\\n        number = number[:-1]\\nelse:\\n    number = \\\"{}{}{}\\\".format(a, d, '0' * (b - len(d)))\\n    number = number.lstrip('0')\\n    if not number:\\n        number = '0'\\nprint(number)\\n\", \"inp = input()\\na, inp = inp.split('.')\\nd, b = inp.split('e')\\nb = int(b)\\n\\nwhole = a + d\\n\\nans = ''\\nif b >= len(d):\\n\\tans = d + '0' * (b - len(d))\\n\\n\\tif a != '0':\\n\\t\\tans = a + ans\\nelse:\\n\\t#ans = a + d[:b] + '.' + d[b:]\\n\\t\\n\\tans = a + d[:b]\\n\\tif (len(ans) > 1) and (ans[0] == '0'):\\n\\t\\tans = d[:b]\\n\\n\\tif d[b:] != '0':\\n\\t\\tans += '.' + d[b:]\\n\\n\\n\\nprint(ans)\\n\", \"\\n\\ncalcul=input()\\nn=len(calcul)\\ne=None\\nfor i in range(n):\\n        if calcul[i]==\\\"e\\\":\\n                e=i\\na=calcul[0]\\nd=calcul[2:e]\\nb=int(calcul[e+1:])\\n\\nif d==\\\"0\\\":\\n        d=\\\"\\\"\\n\\nif len(d)==b:\\n        resultat=a+d\\nelif b>len(d):\\n        nombreZero=b-len(d)\\n        resultat=a+d+\\\"0\\\"*nombreZero\\nelse:\\n        add=a+d\\n        virgule=b-len(d)\\n        resultat=add[:virgule]+\\\".\\\"+add[virgule:]\\n\\n        inf=0\\n        sup=len(resultat)-1\\n        while resultat[inf]==\\\"0\\\" and sup>inf:\\n                inf+=1\\n        while resultat[sup]==\\\"0\\\" and sup>inf:\\n                sup-=1\\n        if resultat[inf]==\\\".\\\":\\n                resultat=\\\"0\\\"+resultat[inf:sup+1]\\n        else:\\n                resultat=resultat[inf:sup+1]\\n        \\nprint(resultat)\\n\\n\\n\\n\\n\\n        \\n\", \"s=input()\\na,temp=s.split('.')\\nd,b=temp.split('e')\\nbb=int(b)\\nif(a=='0'):\\n    if(d!='0'):\\n        print(a,end='.')\\n        print(d)\\n    else:\\n        print(0)\\nelif(bb==0):\\n    if(d!='0'):\\n        print(a,end='.')\\n        print(d)\\n    else:\\n        print(a)\\nelse:\\n    if(d=='0'):\\n        print(a,end='')\\n        for i in range(bb):\\n            print('0',end='')\\n    else:\\n        l=len(d)\\n        if(l<=bb):\\n            print(a,end='')\\n            print(d,end='')\\n            temp2=bb-l\\n            for i in range(temp2):\\n                print('0',end='')\\n        else:\\n            print(a,end='')\\n            for k in range(bb):\\n                print(d[k],end='')\\n            k+=1\\n            print('.',end='')\\n            print(d[k::])\\n\", \"split_by_dot = input().split('.')\\nsplit_by_e = split_by_dot[1].split('e')\\n\\na = split_by_dot[0]\\nd = split_by_e[0]\\nb = int(split_by_e[1])\\n\\n# decimals = len(d)\\n\\n# if a == '0' and d == '0':\\n# \\tprint('0')\\n# elif d == '0':\\n# \\tprint(a, '0'*b, sep='')\\n# elif b < decimals:\\n# \\tprint(a, d[:b], '.', d[b:], sep='')\\n# else:\\n# \\tprint(a, d, '0'*(b-decimals), sep='')\\n\\n\\n# 0.0eX => 0\\n# 0.012e1 => 0.12\\n# 0.012e3 => 1.2\\n# 0.012e4 => 12\\n# 4.0e0 => 4\\n\\nD = d.lstrip('0')\\ndecimals = len(d)\\n\\nif a == '0':\\n\\tif d == '0':\\n\\t\\tprint('0')\\n\\telif b < decimals:\\n\\t\\tinteger_part = '0' if b == 0 else d[:b-1].lstrip('0') + d[b-1]\\n\\t\\tdecimal_part = d[b:]\\n\\t\\tprint(integer_part, '.', decimal_part, sep='')\\n\\telse:\\n\\t\\tprint(d.lstrip('0'), '0'*(b-decimals), sep='')\\nelse: # a > 0\\n\\tif d == '0':\\n\\t\\tprint(a, '0'*b, sep='')\\n\\telif b < decimals:\\n\\t\\tprint(a, d[:b], '.', d[b:], sep='')\\n\\telse:\\n\\t\\tprint(a, d, '0'*(b-decimals), sep='')\", \"s = input()\\nl = len(s)\\n(a,b,d) = (-1,-1,-1)\\nae = 0\\n\\nfor i in range(l):\\n\\tif s[i] == '.':\\n\\t\\ta = s[:i]\\n\\t\\tae = i\\n\\telif s[i] == 'e':\\n\\t\\tb = s[ae+1:i]\\n\\t\\td = int(s[i+1:])\\n\\nif len(b) <= d:\\n\\tans = int(a + b + \\\"0\\\"*(d-len(b)))\\n\\tprint(ans)\\nelse:\\n\\tans = a + b[:d]\\n\\tflag = True\\n\\tfor c in b[d:]:\\n\\t\\tif c != '0':\\n\\t\\t\\tflag = False\\n\\tif not flag:\\n\\t\\tans += \\\".\\\" + b[d:]\\n\\t\\t\\n\\t\\t\\n\\tprint(ans)\\n\", \"from math import modf\\ns = input()\\ni = 0\\nwhile s[i] != 'e':\\n    i += 1\\na = s[0:i]\\nb = int(s[i+1:])\\ni = 0\\nwhile s[i] != '.':\\n    i += 1\\na2 = a[i+1:]\\na = a[0:i]\\n\\ni = 0\\nwhile b > 0 and i < len(a2):\\n    a += a2[i]\\n    i += 1\\n    b -= 1\\nif b > 0:\\n    while b > 0:\\n        a += '0'\\n        b -= 1\\nelif i < len(a2):\\n    a2 = a2[i:]\\n    a3 = ''\\n    i = len(a2)-1\\n    k = 0\\n    while i > -1:\\n        if a2[i] != '0' and k == 0:\\n            k = 1\\n            a3 = a2[i] + a3\\n        elif k!= 0:\\n            a3 = a2[i] + a3\\n        i -= 1\\n    if len(a3) != 0:\\n        a += '.'\\n        for i in range(len(a3)):\\n            a += a3[i]\\n\\nprint(a)\\n\", \"from sys import stdin, stdout\\nvalue, power = stdin.readline().split('e')\\nans = value[:value.index('.')] + value[value.index('.') + 1: min(len(value), value.index('.') + int(power) + 1)]\\nif len(value) <= value.index('.') + int(power) + 1:\\n    ans += '0' * (int(power) - len(value[value.index('.') + 1:]))\\nelse:\\n    ans += '.' + value[value.index('.') + int(power) + 1:]\\n\\nif ans.count('.'):\\n    u, r = ans.split('.')\\n    if r.count('0') != len(r):\\n        ans = str(int(u)) + '.' + r\\n    else:\\n        ans = str(int(u))\\nelse:\\n    ans = str(int(ans))\\nstdout.write(ans)\", \"#CodeforcesB.py\\nleer = input()\\nleer = leer.split(\\\"e\\\")\\nlisto = 0\\n# Despues de la e\\nnumero = int(leer[1])\\n\\n# Antes del punto \\nvalor = leer[0]\\nvalor = valor.split(\\\".\\\")\\n\\nif len(valor[1]) < numero:\\n\\ttamIni = len(valor[1])\\n\\tfor i in range(0,numero-tamIni):\\n\\t\\tvalor[1]+=\\\"0\\\"\\n\\naux = valor[1][0:numero]\\naux2 = valor[1][numero:len(valor[1])]\\n\\nfor i in range(0,len(aux2)):\\n\\tif aux2[i] == \\\"0\\\":\\n\\t\\tCero = True\\n\\telse:\\n\\t\\tCero = False\\n\\t\\tbreak  \\n\\nif aux2:\\n\\tif Cero == False:\\n\\t\\tresultado = str(valor[0])+str(aux)+\\\".\\\"+str(aux2)\\n\\telse:\\n\\t\\tresultado = str(valor[0])+str(aux)\\nelse:\\n\\tresultado = str(valor[0])+str(aux)\\n\\nfor i in range(0,len(resultado)):\\n\\tif resultado[i] == \\\"0\\\":\\n\\t\\tCero = True\\n\\telse:\\n\\t\\tCero = False\\n\\t\\tbreak  \\n\\nif Cero == True:\\n\\tprint(\\\"0\\\")\\nelse:\\n\\tprint(resultado)\\n\", \"s=input()\\nind=s.find('e')\\nd=int(s[ind+1:])\\nz=s.find('.')\\na=s[:z]\\nb=s[z+1:ind]\\nans=a\\nfor k in range(d):\\n    if len(b)<=k:\\n        ans+='0'\\n    else:\\n        ans+=b[k]\\n\\n\\nif d<len(b):\\n    ans+='.'\\n    ans+=b[d:]\\n\\ni1=ans.find('.')\\nbo=True\\nif i1==-1:\\n    bo=False\\n    ans1=ans\\nelse:\\n    ans1=ans[:i1]\\n    ans2=ans[i1+1:]\\n\\n\\ndef cl1(ans1):\\n\\n    k=0\\n    while k<len(ans1)-1:\\n        \\n        if ans1[k]!='0':\\n       \\n            break\\n        else:\\n            ans1=ans1[k+1:]\\n            \\n        \\n    if ans1==None:\\n        ans1=0\\n    return ans1\\n\\n\\ndef cl2(ans2):\\n    for i in range(len(ans2)):\\n        k=ans2[i:]\\n        if k.count('0')==len(k):\\n            ans2=ans2[:i]\\n            break\\n    return ans2\\nif bo:\\n    \\n    ans1=cl1(ans1)\\n    ans2=cl2(ans2)\\n    total=ans1+'.'+ans2\\n    if total.endswith('.'):\\n        print(total[:-1])\\n    else:\\n        print(total)\\nelse:\\n    \\n    print(cl1(ans1))\\n\", \"__author__ = 'Utena'\\nb1,c=input().split('e')\\na,b=b1.split('.')\\nc=int(c)\\nif a=='0'and b=='0':\\n    print(0)\\n    return\\nif b=='0':\\n    b=''\\nif len(b)<=c:\\n    print(a+b+'0'*(c-len(b)))\\nelse:\\n    print(a+b[:c]+'.'+b[c:])\"]",
  "input_output": "{\n  \"inputs\": [\n    \"8.549e2\\n\",\n    \"8.549e3\\n\",\n    \"0.33e0\\n\",\n    \"1.31e1\\n\",\n    \"1.038e0\\n\",\n    \"8.25983e5\\n\",\n    \"8.77056e6\\n\",\n    \"4.28522890224373996236468418851564462623381500262405e30\\n\",\n    \"4.09336275522154223604344399571355118601483591618747e85\\n\",\n    \"2.0629094807595491132306264747042243928486303384791951220362096240931158821630792563855724946791054152e85\\n\",\n    \"0.7e0\\n\",\n    \"0.75e0\\n\",\n    \"0.3299209894804593859495773277850971828150469972132991597085582244596065712639531451e0\\n\",\n    \"0.1438410315232821898580886049593487999249997483354329425897344341660326482795266134253882860655873197e0\\n\",\n    \"1.7282220592677586155528202123627915992640276211396528871e0\\n\",\n    \"1.91641639840522198229453882518758458881136053577016034847369545687354908120008812644841021662133251e89\\n\",\n    \"7.0e100\\n\",\n    \"1.7390193766535948887334396973270576641602486903095355363287177932797263236084900516267835886881779051e100\\n\",\n    \"4.6329496401734172195e50\\n\",\n    \"2.806303180541991592302230754797823269634e39\\n\",\n    \"5.8743505652112692964508303637002e64\\n\",\n    \"6.8778661934058405217475274375560252344373481358834598914724956711e31\\n\",\n    \"9.4e100\\n\",\n    \"3.2371070627618799335840070613481911588919091676203766004638236894609230433739617153911544972468224113e50\\n\",\n    \"4.8133196117786711780806656271869913331127534865038175322117213586960112955982462632332925275690064929e0\\n\",\n    \"7.7060200967648284035308242369118752594772564843152902469146249303976625961451358536989314351204406625e1\\n\",\n    \"8.1089882894234341219420177467603732503076124872188628349726911362800974096687340341040683238197289136e31\\n\",\n    \"9.6576660076120385279859051742522204516365367878315639937449558670629833997839913220859648564428655877e99\\n\",\n    \"0.0e0\\n\",\n    \"1.0e0\\n\",\n    \"8.0e0\\n\",\n    \"3.0e0\\n\",\n    \"4.0e0\\n\",\n    \"2.0e0\\n\",\n    \"9.0e0\\n\",\n    \"0.888888e0\\n\",\n    \"9.99999999999999999999999999999999999999999999999999999999999999999999999999999999e100\\n\",\n    \"5.0e0\\n\",\n    \"1.0e10\\n\",\n    \"1.0e5\\n\",\n    \"6.0e0\\n\",\n    \"1.1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111e1\\n\"\n  ],\n  \"outputs\": [\n    \"854.9\\n\",\n    \"8549\\n\",\n    \"0.33\\n\",\n    \"13.1\\n\",\n    \"1.038\\n\",\n    \"825983\\n\",\n    \"8770560\\n\",\n    \"4285228902243739962364684188515.64462623381500262405\\n\",\n    \"40933627552215422360434439957135511860148359161874700000000000000000000000000000000000\\n\",\n    \"20629094807595491132306264747042243928486303384791951220362096240931158821630792563855.724946791054152\\n\",\n    \"0.7\\n\",\n    \"0.75\\n\",\n    \"0.3299209894804593859495773277850971828150469972132991597085582244596065712639531451\\n\",\n    \"0.1438410315232821898580886049593487999249997483354329425897344341660326482795266134253882860655873197\\n\",\n    \"1.7282220592677586155528202123627915992640276211396528871\\n\",\n    \"191641639840522198229453882518758458881136053577016034847369545687354908120008812644841021.662133251\\n\",\n    \"70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n\",\n    \"17390193766535948887334396973270576641602486903095355363287177932797263236084900516267835886881779051\\n\",\n    \"463294964017341721950000000000000000000000000000000\\n\",\n    \"2806303180541991592302230754797823269634\\n\",\n    \"58743505652112692964508303637002000000000000000000000000000000000\\n\",\n    \"68778661934058405217475274375560.252344373481358834598914724956711\\n\",\n    \"94000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n\",\n    \"323710706276187993358400706134819115889190916762037.66004638236894609230433739617153911544972468224113\\n\",\n    \"4.8133196117786711780806656271869913331127534865038175322117213586960112955982462632332925275690064929\\n\",\n    \"77.060200967648284035308242369118752594772564843152902469146249303976625961451358536989314351204406625\\n\",\n    \"81089882894234341219420177467603.732503076124872188628349726911362800974096687340341040683238197289136\\n\",\n    \"9657666007612038527985905174252220451636536787831563993744955867062983399783991322085964856442865587.7\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"8\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"9\\n\",\n    \"0.888888\\n\",\n    \"99999999999999999999999999999999999999999999999999999999999999999999999999999999900000000000000000000\\n\",\n    \"5\\n\",\n    \"10000000000\\n\",\n    \"100000\\n\",\n    \"6\\n\",\n    \"11.111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/697/B",
  "starter_code": ""
}