{
  "task_id": "APPS/225",
  "problem_id": 225,
  "prompt": "Dawid has four bags of candies. The $i$-th of them contains $a_i$ candies. Also, Dawid has two friends. He wants to give each bag to one of his two friends. Is it possible to distribute the bags in such a way that each friend receives the same amount of candies in total?\n\nNote, that you can't keep bags for yourself or throw them away, each bag should be given to one of the friends.\n\n\n-----Input-----\n\nThe only line contains four integers $a_1$, $a_2$, $a_3$ and $a_4$ ($1 \\leq a_i \\leq 100$) \u2014 the numbers of candies in each bag.\n\n\n-----Output-----\n\nOutput YES if it's possible to give the bags to Dawid's friends so that both friends receive the same amount of candies, or NO otherwise. Each character can be printed in any case (either uppercase or lowercase).\n\n\n-----Examples-----\nInput\n1 7 11 5\n\nOutput\nYES\n\nInput\n7 3 2 5\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample test, Dawid can give the first and the third bag to the first friend, and the second and the fourth bag to the second friend. This way, each friend will receive $12$ candies.\n\nIn the second sample test, it's impossible to distribute the bags.",
  "solutions": "[\"l=list(map(int,input().split()))\\nfor i in range(16):\\n    cur1,cur2=0,0\\n    for j in range(4):\\n        if (i&(1<<j))==0:\\n            cur1+=l[j]\\n        else:\\n            cur2+=l[j]\\n    if cur1==cur2:\\n        print(\\\"YES\\\")\\n        quit()\\nprint(\\\"NO\\\")\", \"arr=list(map(int,input().split()))\\narr.sort()\\nif(arr[0]+arr[1]+arr[2]==arr[3]):\\n\\tprint(\\\"YES\\\")\\nelif(arr[0]+arr[3]==arr[1]+arr[2]):\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\\n\", \"import sys\\nfrom collections import defaultdict\\nfrom itertools import combinations\\nfrom itertools import permutations\\ninput = lambda : sys.stdin.readline().rstrip()\\ndef write(*args, sep=\\\" \\\"):\\n  for i in args:\\n    sys.stdout.write(\\\"{}\\\".format(i) + sep)\\nINF = float('inf')\\nMOD = int(1e9 + 7)\\n\\narr = list(map(int, input().split()))\\ns = sum(arr)\\nfor i in range(1, 5):\\n  for j in combinations(arr, i):\\n    #print(j)\\n    if sum(j) == s - sum(j):\\n      print(\\\"YES\\\")\\n      return\\n\\nprint(\\\"NO\\\")\\n\", \"a, b, c, d = list(map(int, input().split()))\\nif a+b == c+d or a+c == b+d or a+d == b+c:\\n    print('YES')\\nelif a == b+c+d or b == a+c+d or c == a+b+d or d == a+b+c:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"a,b,c,d = map(int, input().split())\\n\\ntot = a+b+c+d\\n\\nif tot % 2 == 1:\\n    print(\\\"NO\\\")\\n    return\\n\\ntot //= 2\\n\\nif tot == a+b or tot == a+c or tot == a+d or tot == a or tot == b or tot == c or tot == d:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"a, b, c, d = list(map(int, input().split()))\\narr = [a, b, c, d]\\nfor i in range(2):\\n    for j in range(2):\\n        for z in range(2):\\n            for k in range(2):\\n                cnt = 0\\n                for l in range(4):\\n                    q = [i, j, z, k][l]\\n                    if q:\\n                        cnt += arr[l]\\n                    else:\\n                        cnt -= arr[l]\\n                if cnt == 0:\\n                    print('YES')\\n                    return\\nprint('NO')\\n\", \"# -*- coding: utf-8 -*-\\nimport sys\\nfrom operator import itemgetter\\nfrom fractions import gcd\\nfrom math import ceil, floor, sqrt\\nfrom copy import deepcopy\\nfrom collections import Counter, deque\\nimport heapq\\nfrom functools import reduce\\nsys.setrecursionlimit(200000)\\ninput = sys.stdin.readline\\ndef ii(): return int(input())\\ndef mi(): return map(int, input().rstrip().split())\\ndef lmi(): return list(map(int, input().rstrip().split()))\\ndef fi(): return float(input())\\ndef mfi(): return map(float, input().rstrip().split())\\ndef lmfi(): return list(map(float, input().rstrip().split()))\\ndef li(): return list(input().rstrip())\\ndef debug(*args, sep=\\\" \\\", end=\\\"\\\\n\\\"): print(\\\"debug:\\\", *args, file=sys.stderr, sep=sep, end=end) if not __debug__ else None\\ndef exit(*arg): print(*arg); return\\n# template\\n\\n\\ndef main():\\n    a = lmi()\\n    a.sort()\\n    if a[0] + a[3] == a[1] + a[2] or a[3] == a[0] + a[1] + a[2]:\\n        print('YES')\\n    else:\\n        print('NO')\\n\\n\\ndef __starting_point():\\n    if not __debug__:\\n        import doctest\\n        doctest.testmod()\\n    main()\\n\\n__starting_point()\", \"*l, = sorted(list(map(int, input().split())))\\nif l[0] + l[-1] == l[1] + l[2] or sum(l[:3]) == l[3]:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\", \"a = list(map(int, input().split()))\\na.sort()\\nif a[0] + a[3] == a[1] + a[2] or sum(a[:3]) == a[3]:\\n\\tprint('YES')\\nelse:\\n\\tprint('NO')\\n\", \"a, b, c, d = sorted(list(map(int, input().split())))\\nif a + d == b + c or a + b + c == d:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"a = list( map( int, input().split() ) )\\na.sort()\\nif a[ 0 ] + a[ 2 ] == a[ 1 ] + a[ 3 ] or a[ 0 ] + a[ 3 ] == a[ 1 ] + a[ 2 ] or a[ 0 ] + a[ 1 ] + a[ 2 ] == a[ 3 ]:\\n    print( \\\"YES\\\" )\\nelse:\\n    print( \\\"NO\\\" )\\n\", \"l = [int(x) for x in input().split()]\\nl.sort()\\n\\nif l[0] + l[3] == l[1] + l[2] or l[0] + l[1] + l[2] == l[3] or l[0] + l[1] == l[2] + l[3] or l[0] == l[1] + l[2] + l[3] or l[0] + l[2] == l[1] + l[3]:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"__author__ = 'Esfandiar'\\n'''\\nimport sys\\ninput=sys.stdin.readline\\nn = int(input())\\nmap(int,input().split())\\nlist(map(int,input().split()))\\n'''\\na=sorted(list(map(int,input().split())))\\nif a[0]+a[-1] == a[1]+a[-2] or a[0]+a[1]+a[2]==a[3]:\\n    print(\\\"YES\\\")\\nelse:\\n    print('NO')\", \"a,b,c,d=list(map(int,input().split()))\\nk=max(a,b,c,d)\\nz=min(a,b,c,d)\\nif k+z==a+b+c+d-k-z:\\n    print('YES')\\nelif k==a+b+c+d-k:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"#JMD\\n#Nagendra Jha-4096\\n\\n \\nimport sys\\nimport math\\n\\n#import fractions\\n#import numpy\\n \\n###File Operations###\\nfileoperation=0\\nif(fileoperation):\\n    orig_stdout = sys.stdout\\n    orig_stdin = sys.stdin\\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\\n    sys.stdin = inputfile\\n    sys.stdout = outputfile\\n\\n###Defines...###\\nmod=1000000007\\n \\n###FUF's...###\\ndef nospace(l):\\n    ans=''.join(str(i) for i in l)\\n    return ans\\n \\n \\n \\n##### Main ####\\nt=1\\nfor tt in range(t):\\n    #n=int(input())\\n    a,b,c,d= map(int, sys.stdin.readline().split(' '))\\n\\n    s=(a+b+c+d)\\n\\n    if (s%2)==0 :\\n        v=s//2\\n\\n        if a==v or b==v or c==v or d==v:\\n            print(\\\"YES\\\")\\n        elif (a+b)==v or (a+c) == v or (a+d) == v:\\n            print(\\\"YES\\\")\\n        else:\\n            print(\\\"NO\\\")\\n    else:\\n        print(\\\"NO\\\")\\n\\n\\n    #a=list(map(int,sys.stdin.readline().split(' ')))\\n    \\n    \\n#####File Operations#####\\nif(fileoperation):\\n    sys.stdout = orig_stdout\\n    sys.stdin = orig_stdin\\n    inputfile.close()\\n    outputfile.close()\", \"L = list(map(int, input().split()))\\nL.sort()\\nif (L[0] + L[-1] == L[1] + L[2] or L[0] + L[1] + L[2] == L[3]):\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\", \"arr=[int(x) for x in input().split()]\\narr.sort()\\nif(arr[3]==(arr[0]+arr[1]+arr[2]) or arr[3]+arr[0]==arr[1]+arr[2] or arr[3]+arr[1]==arr[0]+arr[2]):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"\\n\\na,b,c,d = map(lambda x:int(x),input().split())\\n\\nstep1 = [0]\\nstep2 = []\\nstep3 = []\\nstep4 = []\\nstep5 = []\\n\\nfor x in step1:\\n    step2.append(x+a)\\n    step2.append(x-a)\\nfor x in step2:\\n    step3.append(x+b)\\n    step3.append(x-b)\\nfor x in step3:\\n    step4.append(x+c)\\n    step4.append(x-c)\\nfor x in step4:\\n    step5.append(x+d)\\n    step5.append(x-d)\\nprint(\\\"YES\\\" if 0 in step5 else \\\"NO\\\")\", \"a=[int(x) for x in input().split()]\\na.sort()\\nif sum(a)%2==0:\\n    counter=sum(a)//2\\n    if a[0]+a[1]==counter or a[1]+a[2]==counter or a[0]+a[2]==counter or a[0]==counter or a[1]==counter or a[2]==counter or a[3]==counter:\\n        print('YES')\\n    else:\\n        print('NO')\\nelse:\\n    print('NO')\\n\", \"\\n\\na=list(map(int,input().split()))\\na=sorted(a)\\n\\ns=sum(a)\\n\\nfor i in range(1<<4):\\n\\ts1=0\\n\\n\\tfor j in range(4):\\n\\t\\tif(i&(1<<j)):\\n\\t\\t\\ts1+=a[j]\\n\\n\\tif(s1==(s-s1)):\\n\\t\\tprint('YES')\\n\\t\\treturn\\n\\nprint('NO')\", \"a,b,c,d=list(map(int,input().split()))\\nif((a== b+c+d)or(b== a+c+d)or(c== a+b+d)or(d== a+b+c)or(a+b== c+d)or(a+c == b+d)or(a+d == b+c)):\\n      print(\\\"YES\\\")\\nelse:\\n      print(\\\"NO\\\")\\n\", \"a1, a2, a3, a4 = map(int, input().split())\\n\\nres = False\\n\\nfor i1 in range(2):\\n    for i2 in range(2):\\n        for i3 in range(2):\\n            for i4 in range(2):\\n                if (i1*a1 + i2*a2 + i3*a3 + i4*a4)*2 == a1 + a2 + a3 + a4:\\n                    res = True\\n\\nif res:\\n    print('YES')\\nelse:\\n    print('NO')\", \"'''input\\n10 3 3 4\\n'''\\n\\nimport sys\\nimport heapq\\nimport math\\nfrom collections import defaultdict as dd\\n\\nl = [int(i) for i in input().split()]\\nl.sort()\\nif ((l[0] + l[-1] == l[1] + l[2]) or(l[0] + l[1] + l[2] == l[3])):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 7 11 5\\n\",\n    \"7 3 2 5\\n\",\n    \"3 14 36 53\\n\",\n    \"30 74 41 63\\n\",\n    \"92 69 83 97\\n\",\n    \"26 52 7 19\\n\",\n    \"72 52 62 62\\n\",\n    \"1 1 1 1\\n\",\n    \"70 100 10 86\\n\",\n    \"14 10 18 24\\n\",\n    \"20 14 37 71\\n\",\n    \"1 1 2 1\\n\",\n    \"2 4 1 1\\n\",\n    \"34 11 84 39\\n\",\n    \"76 97 99 74\\n\",\n    \"44 58 90 53\\n\",\n    \"18 88 18 18\\n\",\n    \"48 14 3 31\\n\",\n    \"72 96 2 26\\n\",\n    \"69 7 44 30\\n\",\n    \"66 68 16 82\\n\",\n    \"100 100 100 100\\n\",\n    \"100 98 99 97\\n\",\n    \"1 100 100 1\\n\",\n    \"100 100 99 100\\n\",\n    \"99 100 3 98\\n\",\n    \"4 4 4 5\\n\",\n    \"2 6 3 2\\n\",\n    \"7 3 6 3\\n\",\n    \"14 9 10 6\\n\",\n    \"2 4 6 6\\n\",\n    \"4 2 4 2\\n\",\n    \"4 4 4 8\\n\",\n    \"6 4 8 6\\n\",\n    \"97 95 91 27\\n\",\n    \"1 2 3 2\\n\",\n    \"1 2 8 9\\n\",\n    \"5 10 1 6\\n\",\n    \"1 2 3 5\\n\",\n    \"3 5 1 3\\n\",\n    \"1 2 3 3\\n\",\n    \"1 1 14 12\\n\",\n    \"1 1 1 2\\n\",\n    \"6 3 6 6\\n\",\n    \"10 2 3 5\\n\",\n    \"1 2 10 7\\n\",\n    \"3 1 1 1\\n\",\n    \"1 2 5 5\\n\",\n    \"2 3 10 10\\n\",\n    \"2 2 4 6\\n\",\n    \"1 1 10 20\\n\",\n    \"1 1 3 1\\n\",\n    \"1 2 1 3\\n\",\n    \"18 17 17 20\\n\",\n    \"3 2 1 1\\n\",\n    \"1 1 4 5\\n\",\n    \"90 30 30 30\\n\",\n    \"1 2 6 3\\n\",\n    \"2 3 3 4\\n\",\n    \"1 1 4 2\\n\",\n    \"1 1 2 3\\n\",\n    \"1 1 3 4\\n\",\n    \"2 1 28 9\\n\",\n    \"1 2 3 4\\n\",\n    \"1 2 4 5\\n\",\n    \"2 2 6 2\\n\",\n    \"2 3 2 5\\n\",\n    \"5 7 1 3\\n\",\n    \"4 4 12 4\\n\",\n    \"1 2 2 7\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1230/A",
  "starter_code": ""
}