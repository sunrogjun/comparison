{
  "task_id": "APPS/104",
  "problem_id": 104,
  "prompt": "Polycarp has created his own training plan to prepare for the programming contests. He will train for $n$ days, all days are numbered from $1$ to $n$, beginning from the first.\n\nOn the $i$-th day Polycarp will necessarily solve $a_i$ problems. One evening Polycarp plans to celebrate the equator. He will celebrate it on the first evening of such a day that from the beginning of the training and to this day inclusive he will solve half or more of all the problems.\n\nDetermine the index of day when Polycarp will celebrate the equator.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 200\\,000$) \u2014 the number of days to prepare for the programming contests.\n\nThe second line contains a sequence $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10\\,000$), where $a_i$ equals to the number of problems, which Polycarp will solve on the $i$-th day.\n\n\n-----Output-----\n\nPrint the index of the day when Polycarp will celebrate the equator.\n\n\n-----Examples-----\nInput\n4\n1 3 2 1\n\nOutput\n2\n\nInput\n6\n2 2 2 2 2 2\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first example Polycarp will celebrate the equator on the evening of the second day, because up to this day (inclusive) he will solve $4$ out of $7$ scheduled problems on four days of the training.\n\nIn the second example Polycarp will celebrate the equator on the evening of the third day, because up to this day (inclusive) he will solve $6$ out of $12$ scheduled problems on six days of the training.",
  "solutions": "[\"def main():\\n    n = int(input())\\n    a = list(int(x) for x in input().split())\\n    s = sum(a)\\n    t = 0\\n    for i in range(n):\\n        t += a[i]\\n        if 2 * t >= s:\\n            print(i + 1)\\n            return\\n\\nmain()\\n\", \"#!/bin/python\\n\\nn = int(input())\\nl = list(map(int, input().split()))\\ns = sum(l)\\n\\ns2 = 0\\nfor i in range(len(l)):\\n    s2 += l[i]\\n    if s2 >= s / 2:\\n        print(i+1)\\n        break\\n\", \"def inpmap():\\n    return list(map(int, input().split()))\\nn = int(input())\\narr = list(inpmap())\\ns = sum(arr)\\na = 0\\nfor i in range(n):\\n    a += arr[i]\\n    if a >= s / 2:\\n        print(i + 1)\\n        break\\n\", \"n = int(input())\\n\\nxs = [int(x) for x in input().split()]\\n\\nss = sum(xs)\\n\\ns = 0\\nfor i in range(n):\\n    s += xs[i]\\n    if s * 2 >= ss:\\n        print(i+1)\\n        break\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\ns = sum(a)\\ns1 = 0\\ni = 0\\nwhile s1 * 2 < s:\\n    s1 += a[i]\\n    i += 1\\nprint(i)\\n\", \"\\ninput()\\nl=[int(i)for i in input().split()]\\nd = sum(l)\\nx = 0\\nfor i in range(len(l)):\\n\\tx += l[i]\\n\\tif 2*x >= d:\\n\\t\\tprint(i + 1)\\n\\t\\treturn\", \"import atexit\\nimport io\\nimport sys\\nimport math\\n\\n# Buffering IO\\n_INPUT_LINES = sys.stdin.read().splitlines()\\ninput = iter(_INPUT_LINES).__next__\\n_OUTPUT_BUFFER = io.StringIO()\\nsys.stdout = _OUTPUT_BUFFER\\n\\n@atexit.register\\ndef write():\\n    sys.__stdout__.write(_OUTPUT_BUFFER.getvalue())\\n    \\n\\ndef main():\\n    n = int(input())\\n    a = [int(x) for x in input().split()]\\n    aa = sum(a)\\n    cc = 0\\n    for i in range(n):\\n        cc += a[i]\\n        if cc >= math.ceil(aa / 2):\\n            print(i+1)\\n            break\\n        \\n        \\n    #graph = [{} for _ in range(n)]\\n    #print(mat([n, n]))\\n\\n    \\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n = int(input())\\nl = list(map(int, input().split()))\\ns = (sum(l)+1)//2\\nx = 0\\nfor i in range(len(l)):\\n    x += l[i]\\n    if x>=s:\\n        print(i+1)\\n        return\", \"n = int(input())\\na=list(map(int,input().split()))\\ns = sum(a)\\ns2 = 0\\nfor i in range(n):\\n    s2+=a[i]\\n    if s2 >= s/2:\\n        print(i+1)\\n        break\\n\", \"n=int(input())\\na=list(map(int,input().split()))\\nsum1=sum(a)\\nso=0\\nfor i in range(n):\\n     so+=a[i]\\n     if(so>=sum1/2):\\n         ans=i\\n         break\\nprint(ans+1)\\n\\n\", \"n = int(input())\\nmas = list(map(int, input().split()))\\ns = sum(mas)\\nsc = 0\\nfor i in range(len(mas)):\\n    sc += mas[i]\\n    if sc >= s/2:\\n        print(i+1)\\n        break\\n\", \"# A\\n# A = list(map(int, input().split()))\\n\\nN = int(input())\\nA = list(map(int, input().split()))\\nSUM = 0\\nSUM_A = sum(A)\\nfor i in range(len(A)):\\n    SUM += A[i]\\n    if SUM >= SUM_A / 2:\\n        print(i+1)\\n        quit()\\n\", \"n = int(input())\\na = [int(i) for i in input().split()]\\ns = sum(a)\\nss = 0\\nfor i in range(n):\\n    ss += a[i]\\n    if (ss * 2 >= s):\\n        print(i + 1)\\n        break\\n\", \"from math import ceil\\nn = int(input())\\nA = list(map(int, input().split()))\\ne = ceil(sum(A) / 2)\\ns = 0\\ni = 0\\nwhile s < e:\\n  s += A[i]\\n  i += 1\\nprint(i)\", \"input()\\nn = [int(x) for x in input().split()]\\ns = sum(n)\\ntrgt = s // 2 + s % 2\\n\\nfor i, x in enumerate(n):\\n    trgt -= x\\n    if trgt <= 0:\\n        print(i+1)\\n        break\", \"while True:\\n    n = int(input())\\n\\n    A=input().split()\\n\\n    for index in range(0, n):\\n        A[index] = int(A[index])\\n\\n    S = sum(A)\\n    x = 0\\n\\n    for index in range(0, n):\\n        x += A[index]\\n\\n        if x*2 >= S:\\n            print(index+1)\\n            break\\n\\n    break\\n\", \"n = int(input())\\narr = list(map(int, input().split()))\\ns = sum(arr)\\ns /= 2\\ns1 = 0\\nfor i in range(n):\\n    s1 += arr[i]\\n    if s1 >= s:\\n        print(i+1)\\n        break\\n\", \"N = int(input())\\narr = list(map(int, input().split()))\\nS = sum(arr)\\ncur = 0\\nidx = 0\\n\\nfor item in arr:\\n    cur += item\\n    idx += 1\\n    if (cur >= S/2):\\n        print(idx)\\n        break\\n\\n\", \"n=int(input())\\nL=list(map(int,input().split()))\\ns=sum(L)\\nx=0\\nfor i in range(n):\\n    x+=L[i]\\n    if x>=s/2:\\n        print(i+1)\\n        break\\n\", \"import math\\nn=int(input())\\na=list(map(int,input().split()))\\nsu=sum(a)\\nsu=math.ceil(su/2)\\n\\nc=0\\nfor i in range(len(a)):\\n    c+=a[i]\\n    if c>=su:\\n        print(i+1)\\n        break\\n\", \"R = lambda: list(map(int, input().split()))\\n\\nn = R()\\na = tuple(R())\\ns0 = sum(a) / 2\\ns = 0\\nfor i in range(len(a)):\\n    s += a[i]\\n    if s >= s0:\\n        print(i+1)\\n        break\\n\", \"import sys\\n\\nn = int(sys.stdin.readline())\\nnums = list(map(int, sys.stdin.readline().split()))\\nnsum = sum(nums) / 2\\ncsum = 0\\nfor i in range(n):\\n    csum += nums[i]\\n    if csum >= nsum:\\n        print(i + 1)\\n        break\\n\", \"n = int(input())\\n\\nl = list(map(int, input().split()))\\n\\ns = sum(l)\\n\\ncs = 0\\nfor i in range(len(l)):\\n\\tcs += l[i]\\n\\tif cs * 2 >= s:\\n\\t\\tprint(i + 1)\\n\\t\\tbreak\", \"n = int(input())\\na = list(map(int, input().split()))\\ns = sum(a) / 2\\n\\nfor i in range(n):\\n    s -= a[i]\\n    if s <= 0:\\n        print(i+1)\\n        break\\n\", \"n = int(input())\\nai = list(map(int, input().split()))\\nsumm = sum(ai)\\nsumm = summ % 2 + summ // 2\\nsumm2 = 0\\nans = 0\\nfor i in range(n):\\n    summ2 += ai[i]\\n    if summ2 >= summ:\\n        ans = i+1\\n        break\\nprint(ans)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4\\n1 3 2 1\\n\",\n    \"6\\n2 2 2 2 2 2\\n\",\n    \"1\\n10000\\n\",\n    \"3\\n2 1 1\\n\",\n    \"2\\n1 3\\n\",\n    \"4\\n2 1 1 3\\n\",\n    \"3\\n1 1 3\\n\",\n    \"3\\n1 1 1\\n\",\n    \"2\\n1 2\\n\",\n    \"3\\n2 1 2\\n\",\n    \"5\\n1 2 4 3 5\\n\",\n    \"5\\n2 2 2 4 3\\n\",\n    \"4\\n1 2 3 1\\n\",\n    \"6\\n7 3 10 7 3 11\\n\",\n    \"2\\n3 4\\n\",\n    \"5\\n1 1 1 1 1\\n\",\n    \"4\\n1 3 2 3\\n\",\n    \"2\\n2 3\\n\",\n    \"3\\n32 10 23\\n\",\n    \"7\\n1 1 1 1 1 1 1\\n\",\n    \"3\\n1 2 4\\n\",\n    \"6\\n3 3 3 2 4 4\\n\",\n    \"9\\n1 1 1 1 1 1 1 1 1\\n\",\n    \"5\\n1 3 3 1 1\\n\",\n    \"4\\n1 1 1 2\\n\",\n    \"4\\n1 2 1 3\\n\",\n    \"3\\n2 2 1\\n\",\n    \"4\\n2 3 3 3\\n\",\n    \"4\\n3 2 3 3\\n\",\n    \"4\\n2 1 1 1\\n\",\n    \"3\\n2 1 4\\n\",\n    \"2\\n6 7\\n\",\n    \"4\\n3 3 4 3\\n\",\n    \"4\\n1 1 2 5\\n\",\n    \"4\\n1 8 7 3\\n\",\n    \"6\\n2 2 2 2 2 3\\n\",\n    \"3\\n2 2 5\\n\",\n    \"4\\n1 1 2 1\\n\",\n    \"5\\n1 1 2 2 3\\n\",\n    \"5\\n9 5 3 4 8\\n\",\n    \"3\\n3 3 1\\n\",\n    \"4\\n1 2 2 2\\n\",\n    \"3\\n1 3 5\\n\",\n    \"4\\n1 1 3 6\\n\",\n    \"6\\n1 2 1 1 1 1\\n\",\n    \"3\\n3 1 3\\n\",\n    \"5\\n3 4 5 1 2\\n\",\n    \"11\\n1 1 1 1 1 1 1 1 1 1 1\\n\",\n    \"5\\n3 1 2 5 2\\n\",\n    \"4\\n1 1 1 4\\n\",\n    \"4\\n2 6 1 10\\n\",\n    \"4\\n2 2 3 2\\n\",\n    \"4\\n4 2 2 1\\n\",\n    \"6\\n1 1 1 1 1 4\\n\",\n    \"3\\n3 2 2\\n\",\n    \"6\\n1 3 5 1 7 4\\n\",\n    \"5\\n1 2 4 8 16\\n\",\n    \"5\\n1 2 4 4 4\\n\",\n    \"6\\n4 2 1 2 3 1\\n\",\n    \"4\\n3 2 1 5\\n\",\n    \"1\\n1\\n\",\n    \"3\\n2 4 7\\n\",\n    \"5\\n1 1 1 1 3\\n\",\n    \"3\\n3 1 5\\n\",\n    \"4\\n1 2 3 7\\n\",\n    \"3\\n1 4 6\\n\",\n    \"4\\n2 1 2 2\\n\",\n    \"2\\n4 5\\n\",\n    \"5\\n1 2 1 2 1\\n\",\n    \"3\\n2 3 6\\n\",\n    \"6\\n1 1 4 1 1 5\\n\",\n    \"5\\n2 2 2 2 1\\n\",\n    \"2\\n5 6\\n\",\n    \"4\\n2 2 1 4\\n\",\n    \"5\\n2 2 3 4 4\\n\",\n    \"4\\n3 1 1 2\\n\",\n    \"5\\n3 4 1 4 5\\n\",\n    \"4\\n1 3 1 6\\n\",\n    \"5\\n1 1 1 2 2\\n\",\n    \"4\\n1 4 2 4\\n\",\n    \"10\\n1 1 1 1 1 1 1 1 1 8\\n\",\n    \"4\\n1 4 5 1\\n\",\n    \"5\\n1 1 1 1 5\\n\",\n    \"4\\n1 3 4 1\\n\",\n    \"4\\n2 2 2 3\\n\",\n    \"4\\n2 3 2 4\\n\",\n    \"5\\n2 2 1 2 2\\n\",\n    \"3\\n4 3 2\\n\",\n    \"3\\n6 5 2\\n\",\n    \"69\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\",\n    \"6\\n1 1 1 1 1 2\\n\",\n    \"5\\n1 2 5 4 5\\n\",\n    \"2\\n9 10\\n\",\n    \"3\\n1 1 5\\n\",\n    \"4\\n3 4 3 5\\n\",\n    \"4\\n1 4 3 3\\n\",\n    \"4\\n7 1 3 4\\n\",\n    \"3\\n100 100 1\\n\",\n    \"4\\n5 2 2 2\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"9\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"35\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/962/A",
  "starter_code": ""
}