{
  "task_id": "APPS/443",
  "problem_id": 443,
  "prompt": "There are quite a lot of ways to have fun with inflatable balloons. For example, you can fill them with water and see what happens.\n\nGrigory and Andrew have the same opinion. So, once upon a time, they went to the shop and bought $n$ packets with inflatable balloons, where $i$-th of them has exactly $a_i$ balloons inside.\n\nThey want to divide the balloons among themselves. In addition, there are several conditions to hold:\n\n  Do not rip the packets (both Grigory and Andrew should get unbroken packets);  Distribute all packets (every packet should be given to someone);  Give both Grigory and Andrew at least one packet;  To provide more fun, the total number of balloons in Grigory's packets should not be equal to the total number of balloons in Andrew's packets. \n\nHelp them to divide the balloons or determine that it's impossible under these conditions.\n\n\n-----Input-----\n\nThe first line of input contains a single integer $n$ ($1 \\le n \\le 10$)\u00a0\u2014 the number of packets with balloons.\n\nThe second line contains $n$ integers: $a_1$, $a_2$, $\\ldots$, $a_n$ ($1 \\le a_i \\le 1000$)\u00a0\u2014 the number of balloons inside the corresponding packet.\n\n\n-----Output-----\n\nIf it's impossible to divide the balloons satisfying the conditions above, print $-1$.\n\nOtherwise, print an integer $k$\u00a0\u2014 the number of packets to give to Grigory followed by $k$ distinct integers from $1$ to $n$\u00a0\u2014 the indices of those. The order of packets doesn't matter.\n\nIf there are multiple ways to divide balloons, output any of them.\n\n\n-----Examples-----\nInput\n3\n1 2 1\n\nOutput\n2\n1 2\n\nInput\n2\n5 5\n\nOutput\n-1\n\nInput\n1\n10\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first test Grigory gets $3$ balloons in total while Andrey gets $1$.\n\nIn the second test there's only one way to divide the packets which leads to equal numbers of balloons.\n\nIn the third test one of the boys won't get a packet at all.",
  "solutions": "[\"\\n\\nn = int(input())\\n\\ntab = [int(x) for x in input().split()]\\n\\nif n < 2 or (n == 2 and tab[0] == tab[1]):\\n    print(-1)\\nelse:\\n    print(1)\\n    print(tab.index(min(tab)) + 1)\\n\\n\", \"n = int(input())\\na = [int(v) for v in input().split()]\\n\\nif n == 1:\\n    print(-1)\\nelif n == 2:\\n    if a[0] == a[1]:\\n        print(-1)\\n    else:\\n        print(1)\\n        print(1)\\nelse:\\n    print(1)\\n\\n    mini = None\\n    minv = 10000000\\n    for i, v in enumerate(a):\\n        if v < minv:\\n            minv = v\\n            mini = i\\n\\n    print(mini + 1)\\n\", \"t=int(input())\\nl=list(map(int,input().split()))\\nif len(l)==1:\\n    print(\\\"-1\\\")\\nelif len(l)==2 and len(set(l))==1:\\n    print(\\\"-1\\\")\\nelse:\\n    print(1)\\n    print(l.index(min(l))+1)\\n\", \"#!/usr/bin/env python3\\n\\nn = int(input().strip())\\nais = list(map(int, input().strip().split()))\\n\\nif n < 2 or (n == 2 and ais[0] == ais[1]):\\n\\tprint(-1)\\nelse:\\n\\tprint(1)\\n\\tprint(ais.index(min(ais)) + 1)\\n\", \"n = int(input())\\nv = list(map(int,input().split()))\\nfor i in range(1,(1<<n)-1):\\n    s1, s2 = 0, 0\\n    b = 0\\n    for j in range(n):\\n        if i & 1<<j:\\n            s1 += v[j]\\n            b += 1\\n        else:\\n            s2 += v[j]\\n    if s1 != s2:\\n        print(b)\\n        for j in range(n):\\n            if i & 1<<j:\\n                print(j+1,end=' ')\\n        break\\nelse:\\n    print(-1)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nif n == 1:\\n    print(-1)\\n    return\\n\\nx = min(a)\\nt =  a.index(x)\\nd = []\\nc = []\\nfor i in range(n):\\n    if i != t:\\n        d.append(i)\\n        c.append(a[i])\\nif sum(c) == x:\\n    print(-1)\\nelse:\\n    print(1)\\n    print(t + 1)\", \"n = int(input())\\ncl = list(map(int, input().split()))\\nif n<2:\\n    print(-1)\\nelif n==2:\\n    if cl[0]!=cl[1]:\\n        print('1')\\n        print('1')\\n    else:\\n        print(-1)\\nelse:\\n    print(1)\\n    print(cl.index(min(cl))+1)\", \"n = int(input())\\n\\nA = input().split()\\n\\nfor i in range(0, n):\\n    A[i] = int(A[i])\\n\\nif n==1 or (n==2 and A[0]==A[1]):\\n    print(-1)\\n\\nelse:\\n    minimum = min(A)\\n\\n    for i in range(0, n):\\n        if A[i]==minimum:\\n            print(1)\\n            print(i+1)\\n            break\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nif n == 1:\\n\\tprint(-1)\\nelse:\\n\\tx = min(a)\\n\\ty = sum(a) - x\\n\\tif x == y:\\n\\t\\tprint(-1)\\n\\telse:\\n\\t\\tprint(1)\\n\\t\\tprint(a.index(x) + 1)\", \"# python3\\n\\ndef readline(): return list(map(int, input().split()))\\n\\n\\ndef main():\\n    n, = readline()\\n    a = tuple(readline())\\n\\n    if n == 1 or n == 2 and a[0] == a[1]:\\n        print(-1)\\n    else:\\n        print(1)\\n        print(a.index(min(a)) + 1)\\n\\n\\nmain()\\n\", \"n=int(input())\\narr=list(map(int,input().strip().split(' ')))\\nm=min(arr)\\nind=arr.index(m)\\nif(n==1):\\n    print(-1)\\nelif(n==2 and arr[0]==arr[1]):\\n    print(-1)\\nelse:\\n    print(1)\\n    print(ind+1)\\n\\n\", \"def solve():\\n    n = int(input())\\n    a = [int(c) for c in input().split(\\\" \\\")]\\n    total = sum(a)\\n\\n    if n < 2: return None\\n    elif n == 2:\\n        if a[0] == a[1]: return None\\n        else: return (0,)\\n    else:\\n        for i in range(n):\\n            if a[i] != total - a[i]:\\n                return (i,)\\n\\nresult = solve()\\nif not result:\\n    print(-1)\\nelse:\\n    print(len(result))\\n    for num in result:\\n        print(num+1, end = \\\" \\\")\\n\", \"n = int(input())\\nb = []\\ns = input().split()\\nfor i in range(n):\\n    b.append((int(s[i]), i + 1))\\nif n == 1:\\n    print(-1)\\nelif n == 2:\\n    if b[0][0] == b[1][0]:\\n        print(-1)\\n    else:\\n        print(1)\\n        print(1)\\nelse:\\n    b.sort()\\n    print(1)\\n    print(b[0][1])\", \"n=int(input())\\nl=list(map(int,input().strip().split()))\\nmin1=1000000000000\\nindex=11\\nfor i in range(n):\\n\\tif l[i]<min1:\\n\\t\\tmin1=l[i]\\n\\t\\tindex=i\\nif n==1:\\n\\tprint(-1)\\nelif n==2:\\n\\tif l[0]==l[1]:\\n\\t\\tprint(-1)\\n\\telse:\\n\\t\\tprint(1)\\n\\t\\tprint(index+1)\\nelse:\\n\\tprint(1)\\n\\tprint(index+1)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nif len(a) == 1:\\n\\tprint(-1)\\nelif len(a) == 2 and a[0] == a[1]:\\n\\tprint(-1)\\nelse:\\n\\tmina = min(a)\\n\\tfor i, x in enumerate(a):\\n\\t\\tif x == mina:\\n\\t\\t\\tprint(1)\\n\\t\\t\\tprint(i + 1)\\n\\t\\t\\tbreak\", \"def f():\\n    n = int(input())\\n    a = list(map(int, input().split()))\\n    # print(n, a)\\n    s = sum(a)\\n    if n < 2:\\n        print(-1)\\n        return\\n    \\n    for i in range(n):\\n        if a[i] * 2 != s:\\n            print(1)\\n            print(i + 1)\\n            return\\n    print(-1)\\n    \\n\\nf()\", \"def main():\\n    input()\\n    numbers = list(map(int, input().split()))\\n\\n\\n    if len(numbers) < 2 or (len(numbers) == 2 and numbers[0] == numbers[1]):\\n        print(-1)\\n        return\\n\\n    print(1)\\n    print(numbers.index(min(numbers)) + 1)\\n    \\nmain()\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n1 2 1\\n\",\n    \"2\\n5 5\\n\",\n    \"1\\n10\\n\",\n    \"1\\n1\\n\",\n    \"10\\n1 1 1 1 1 1 1 1 1 1\\n\",\n    \"10\\n1 1 1 1 1 1 1 1 1 9\\n\",\n    \"10\\n26 723 970 13 422 968 875 329 234 983\\n\",\n    \"3\\n3 2 1\\n\",\n    \"10\\n1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\\n\",\n    \"10\\n1 9 7 6 2 4 7 8 1 3\\n\",\n    \"2\\n9 6\\n\",\n    \"2\\n89 7\\n\",\n    \"2\\n101 807\\n\",\n    \"5\\n8 7 4 8 3\\n\",\n    \"5\\n55 62 70 100 90\\n\",\n    \"5\\n850 840 521 42 169\\n\",\n    \"6\\n7 1 4 1 6 1\\n\",\n    \"6\\n36 80 38 88 79 69\\n\",\n    \"6\\n108 318 583 10 344 396\\n\",\n    \"9\\n10 9 10 10 8 3 5 10 2\\n\",\n    \"9\\n90 31 28 63 57 57 27 62 42\\n\",\n    \"9\\n665 646 152 829 190 64 555 536 321\\n\",\n    \"10\\n99 62 10 47 53 9 83 33 15 24\\n\",\n    \"4\\n600 200 100 300\\n\",\n    \"2\\n4 5\\n\",\n    \"2\\n5 12\\n\",\n    \"2\\n1 2\\n\",\n    \"3\\n1 1 2\\n\",\n    \"2\\n3 2\\n\",\n    \"3\\n1 4 5\\n\",\n    \"4\\n5 5 5 5\\n\",\n    \"1\\n5\\n\",\n    \"3\\n5 5 5\\n\",\n    \"5\\n5 5 5 5 5\\n\",\n    \"4\\n2 7 10 1\\n\",\n    \"3\\n1 1 1\\n\",\n    \"4\\n8 4 2 2\\n\",\n    \"2\\n3 4\\n\",\n    \"4\\n1 1 3 1\\n\",\n    \"7\\n1 2 3 4 5 6 7\\n\",\n    \"2\\n18 19\\n\",\n    \"2\\n17 18\\n\",\n    \"2\\n1 3\\n\",\n    \"4\\n5 5 4 4\\n\",\n    \"2\\n10 11\\n\",\n    \"2\\n10 20\\n\",\n    \"2\\n2 1\\n\",\n    \"4\\n2 3 2 3\\n\",\n    \"2\\n5 6\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n4\\n\",\n    \"1\\n3\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n2\\n\",\n    \"1\\n2\\n\",\n    \"1\\n1\\n\",\n    \"1\\n5\\n\",\n    \"1\\n1\\n\",\n    \"1\\n4\\n\",\n    \"1\\n2\\n\",\n    \"1\\n1\\n\",\n    \"1\\n4\\n\",\n    \"1\\n9\\n\",\n    \"1\\n7\\n\",\n    \"1\\n6\\n\",\n    \"1\\n6\\n\",\n    \"1\\n3\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n2\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"-1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n4\\n\",\n    \"1\\n1\\n\",\n    \"1\\n3\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n3\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n2\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/998/A",
  "starter_code": ""
}