{
  "task_id": "APPS/116",
  "problem_id": 116,
  "prompt": "Today an outstanding event is going to happen in the forest\u00a0\u2014 hedgehog Filya will come to his old fried Sonya!\n\nSonya is an owl and she sleeps during the day and stay awake from minute l_1 to minute r_1 inclusive. Also, during the minute k she prinks and is unavailable for Filya.\n\nFilya works a lot and he plans to visit Sonya from minute l_2 to minute r_2 inclusive.\n\nCalculate the number of minutes they will be able to spend together.\n\n\n-----Input-----\n\nThe only line of the input contains integers l_1, r_1, l_2, r_2 and k (1 \u2264 l_1, r_1, l_2, r_2, k \u2264 10^18, l_1 \u2264 r_1, l_2 \u2264 r_2), providing the segments of time for Sonya and Filya and the moment of time when Sonya prinks.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the number of minutes Sonya and Filya will be able to spend together.\n\n\n-----Examples-----\nInput\n1 10 9 20 1\n\nOutput\n2\n\nInput\n1 100 50 200 75\n\nOutput\n50\n\n\n\n-----Note-----\n\nIn the first sample, they will be together during minutes 9 and 10.\n\nIn the second sample, they will be together from minute 50 to minute 74 and from minute 76 to minute 100.",
  "solutions": "[\"read = lambda: list(map(int, input().split()))\\nl1, r1, l2, r2, k = read()\\nR = min(r1, r2)\\nL = max(l1, l2)\\nans = max(R - L + 1, 0)\\nif L <= k <= R: ans = max(ans - 1, 0)\\nprint(ans)\\n\", \"l1,r1,l2,r2,k = (int(i) for i in input().split())\\nl = max(l1,l2)\\nr = min(r1,r2)\\nif r < l:\\n    print(0)\\nelse:\\n    ans = r-l\\n    if k >= l and k <= r:\\n        print(ans)\\n    else:\\n        print(ans+1)\", \"from math import *\\na, b, c, d, k = map(int, input().split())\\nper1 = max(a, c)\\nper2 = min(b, d)\\nif per2 >= per1:\\n    if per1<=k<=per2:\\n        print(per2 - per1)\\n    else:\\n        print(per2 - per1 + 1)\\nelse:\\n    print(0)\", \"import sys, math\\nl1, r1, l2, r2, k = map(int,input().split())\\na = max(l1, l2)\\nb = min(r1, r2)\\nans = b - a + 1\\nif a <= k <= b:\\n    ans -= 1\\nprint(max(0, ans))\", \"l1,r1,l2,r2,k = list(map(int, input().split()))\\n\\nif r1 < l2:\\n    print(0)\\nelif r2 < l1:\\n    print(0)\\nelse:\\n    l = max(l1, l2)\\n    r = min(r1, r2)\\n    if k < l or k > r:\\n        print(r - l + 1)\\n    else:\\n        print(r - l + 1 - 1)\\n\", \"l1, r1, l2, r2, k = map(int, input().split())\\nl = l1\\nif l2 > l:\\n\\tl = l2\\nr = r1\\nif r2 < r:\\n\\tr = r2\\nif r < l:\\n\\tprint(0)\\nelif l <= k <= r:\\n\\tprint(r - l)\\nelse:\\n\\tprint(r - l + 1)\", \"l1, r1, l2, r2, k = map(int, input().split())\\nlmax = max(l1, l2)\\nrmin = min(r1, r2)\\n\\nif lmax > rmin:\\n    print(0)\\nelse:\\n    ans = rmin - lmax + 1\\n    if k >= lmax and k <= rmin:\\n        ans -= 1\\n    print(ans)\", \"l_1, r_1, l_2, r_2, k = map(int, input().split())\\nleft = max(l_1, l_2)\\nright = min(r_1, r_2)\\nif left > right:\\n    print(0)\\nelse:\\n    if left <= k <= right:\\n        print(right - left)\\n    else:\\n        print(right - left + 1)\", \"from sys import stdout\\na,b,c,d,e = [int(i) for i in input().split()]\\nt = max(a,c)\\nt1= min(b,d)\\nif t <= t1:\\n\\tif t<=e and e<=t1:\\n\\t\\tprint(t1-t)\\n\\telse:\\n\\t\\tprint(t1-t+1)\\nelse:\\n\\tprint(0)\\n\", \"l1, r1, l2, r2, k = map(int, input().split())\\nans = max(0, min(r1, r2) - max(l1, l2) + 1)\\nif max(l1, l2) <= k <= min(r1, r2):\\n    ans = max(ans - 1, 0)\\nprint(ans)\", \"i = input().split()\\nstart = max(int(i[0]), int(i[2]))\\nend = min(int(i[1]), int(i[3]))\\nres = end - start + 1\\nif start <= int(i[4]) <= end:\\n    res -= 1\\nif res < 0:\\n    res = 0\\nprint(res)\\n\", \"3\\n\\nleft1, right1, left2, right2, k = list(map(int, input().split()))\\n\\nintersection_left = max(left1, left2)\\nintersection_right = min(right1, right2)\\n\\nanswer = 0\\nif intersection_right >= k >= intersection_left:\\n    answer -= 1\\n\\nif intersection_right >= intersection_left:\\n    answer += intersection_right - intersection_left + 1\\n\\nprint(answer)\\n\", \"l_1, r_1, l_2, r_2, k = list(map(int, input().split()))\\nans = min(r_1, r_2) - max(l_1, l_2) + 1\\nif max(l_1, l_2) <= k <= min(r_1, r_2):\\n    ans -= 1\\nif ans < 0:\\n    ans = 0\\nprint(ans)\\n\", \"l1, r1, l2, r2, k = list(map(int, input().split()))\\nl = max(l1, l2)\\nr = min(r1, r2)\\nans = max(r - l + 1, 0)\\nif k >= l and k <= r:\\n\\tans -= 1\\nprint(ans)\\n\\n\", \"l1, r1, l2, r2, k = list(map(int, input().split()))\\n\\na = b = -1\\nif l1 <= l2 and r2 <= r1:\\n    a, b = l2, r2\\nelif l2 <= l1 and r1 <= r2:\\n    a, b = l1, r1\\nelif l1 <= l2 <= r1:\\n    a, b = l2, r1\\nelif l1 <= r2 <= r1:\\n    a, b = l1, r2\\n\\nif a == -1 or b == -1:\\n    print(0)\\nelse:\\n    res = b - a + 1\\n    if a <= k <= b:\\n        res -= 1\\n    print(res)\\n\", \"l1,r1,l2,r2,k = list(map(int,input().split()))\\nif l1 > r2 or r1 < l2:\\n    print(0)\\n    return\\nml = max(l1,l2)\\nmr = min(r1,r2)\\ndelta = 1 if ml<=k<=mr else 0\\nprint(abs(mr-ml)+1-delta)\\n\", \"temp=input().split()\\nl1=int(temp[0])\\nr1=int(temp[1])\\nl2=int(temp[2])\\nr2=int(temp[3])\\nk=int(temp[4])\\n\\nt=0\\n\\nl = max(l1,l2)\\nr = min(r1,r2)\\n\\nif r>=l:\\n\\tt+=(r-l+1)\\n\\nif l<=k and k<=r:\\n\\tt-=1\\n\\nprint(t)\\n\", \"def solve():\\n    l1, r1, l2, r2, k = list(map(int, input().split(' ')))\\n\\n    start = max(l1, l2)\\n    end = min(r1, r2)\\n\\n    ans = max(0, end - start + 1)\\n\\n    if start <= k <= end:\\n        ans -= 1\\n\\n    print(ans)\\n\\n\\ndef main():\\n    solve()\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"l1, r1, l2, r2, k = list(map(int, input().split()))\\nif l1 >= l2 and r1 <= r2:\\n    if l1 <= k and r1 >= k:\\n        print(r1 - l1)\\n    else:\\n        print(r1 - l1 + 1)\\nelif l2 >= l1 and r2 <= r1:\\n    if l2 <= k and r2 >= k:\\n        print(r2 - l2)\\n    else:\\n        print(r2 - l2 + 1)\\nelif l1 <= l2 and l2 <= r1 and r1 <= r2:\\n    if l2 <= k and r1 >= k:\\n        print(r1 - l2)\\n    else:\\n        print(r1 - l2 + 1)\\nelif l2 <= l1 and l1 <= r2 and r2 <= r1:\\n    if l1 <= k and r2 >= k:\\n        print(r2 - l1)\\n    else:\\n        print(r2 - l1 + 1)\\nelse:\\n    print(0)\\n\", \"import sys\\n\\ndef main():\\n    l1, r1, l2, r2, k = [int(i) for i in sys.stdin.readline().strip().split()]\\n    l = max(l1, l2)\\n    r = min(r1, r2)\\n    if l <= r:\\n        print(r - l + 1 - (1 if l <= k <= r else 0))\\n    else:\\n        print(0)\\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"#!/usr/local/env python3\\n# -*- encoding: utf-8 -*-\\nimport sys\\n\\n\\ndef readnlines(f_in):\\n    n = int(f_in.readline().strip())\\n    m = []\\n    for i in range(n):\\n        line = f_in.readline().strip()\\n        if line.isdigit():\\n            m.append(int(line))\\n        else:\\n            m.append(line)\\n    return m\\n\\n\\ndef print_args():\\n    print(\\\"Recieved {} arguments = {}.\\\".format(len(sys.argv), sys.argv))\\n\\n\\ndef intersect(l1, r1, l2, r2):\\n    left = max(l1, l2)\\n    right = min(r1, r2)\\n    return left, right, max(0, right - left + 1)\\n\\n\\ndef solve():\\n#    print_args()\\n    # m = readnlines(sys.stdin)\\n    line = sys.stdin.readline().strip()\\n    l1, r1, l2, r2, k = [int(i) for i in line.split()]\\n    left, right, inters = intersect(l1, r1, l2, r2)\\n    #print(\\\"left={}, right={}, intesec={}\\\".format(left, right, inters))\\n    if inters < 1:\\n        return 0\\n    else:\\n        if (k >= left) and (k <= right):\\n            return inters - 1\\n        else:\\n            return inters\\n\\n\\ndef __starting_point():\\n   ans = solve()\\n   print(ans)\\n\\n__starting_point()\", \"l1, r1, l2, r2, k = map(int, input().split())\\n\\nanswer = min(r1, r2) - max(l1, l2) + 1\\n\\nif min(r1, r2) >= k >= max(l1, l2):\\n    answer -= 1\\n\\nprint(max(0, answer))\", \"l1, r1, l2, r2 , k = map(int, input().split())\\n\\nl = max(l1,l2)\\nr = min(r1,r2)\\ncount = max(r - l + 1, 0)\\n\\nif l <= k <= r:\\n    count -= 1\\nprint(count)\", \"# You lost the game.\\n\\nl1,r1,l2,r2,k = list(map(int, input().split()))\\n\\n\\\"\\\"\\\"if l1 > l2:\\n    r = min(r1,r2)-l1+1\\n    if k >= l1 and k <= min(r1,r2):\\n        r -= 1\\nelif l2 > l1:\\n    r = min(r1,r2)-l2+1\\n    if k >= l2 and k <= min(r1,r2):\\n        r -= 1\\nelse:\\n    r = min(r1,r2)-l1\\n    if k >= l1 and k <= min(r1,r2):\\n        r -= 1\\\"\\\"\\\"\\nl = max(l1,l2)\\nr = min(r1,r2)\\nres = r-l+1\\nif k >= l and k <= r:\\n    res -= 1\\nprint(max(0,res))\\n\", \"l1, r1, l2, r2, k  = map(int, input().split())\\nstart = max(l1, l2)\\nend = min(r1, r2)\\nif start <= k <= end:\\n\\tprint(end - start)\\nelif start <= end:\\n\\tprint(end - start + 1)\\nelse:\\n\\tprint(0)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 10 9 20 1\\n\",\n    \"1 100 50 200 75\\n\",\n    \"6 6 5 8 9\\n\",\n    \"1 1000000000 1 1000000000 1\\n\",\n    \"5 100 8 8 8\\n\",\n    \"1 1000000000000000000 2 99999999999999999 1000000000\\n\",\n    \"1 1 1 1 1\\n\",\n    \"1 2 3 4 5\\n\",\n    \"1 1000000000 2 999999999 3141592\\n\",\n    \"24648817341102 41165114064236 88046848035 13602161452932 10000831349205\\n\",\n    \"1080184299348 34666828555290 6878390132365 39891656267344 15395310291636\\n\",\n    \"11814 27385 22309 28354 23595\\n\",\n    \"4722316546398 36672578279675 796716437180 33840047334985 13411035401708\\n\",\n    \"14300093617438 14381698008501 6957847034861 32510754974307 66056597033082\\n\",\n    \"700062402405871919 762322967106512617 297732773882447821 747309903322652819 805776739998108178\\n\",\n    \"59861796371397621 194872039092923459 668110259718450585 841148673332698972 928360292123223779\\n\",\n    \"298248781360904821 346420922793050061 237084570581741798 726877079564549183 389611850470532358\\n\",\n    \"420745791717606818 864206437350900994 764928840030524015 966634105370748487 793326512080703489\\n\",\n    \"519325240668210886 776112702001665034 360568516809443669 875594219634943179 994594983925273138\\n\",\n    \"170331212821058551 891149660635282032 125964175621755330 208256491683509799 526532153531983174\\n\",\n    \"1 3 3 5 3\\n\",\n    \"1 5 8 10 9\\n\",\n    \"1 2 4 5 10\\n\",\n    \"1 2 2 3 5\\n\",\n    \"2 4 3 7 3\\n\",\n    \"1 2 9 10 1\\n\",\n    \"5 15 1 10 5\\n\",\n    \"1 4 9 20 25\\n\",\n    \"2 4 1 2 5\\n\",\n    \"10 1000 1 100 2\\n\",\n    \"1 3 3 8 10\\n\",\n    \"4 6 6 8 9\\n\",\n    \"2 3 1 4 3\\n\",\n    \"1 2 2 3 100\\n\",\n    \"1 2 100 120 2\\n\",\n    \"1 3 5 7 4\\n\",\n    \"1 3 5 7 5\\n\",\n    \"1 4 8 10 6\\n\",\n    \"1 2 5 6 100\\n\",\n    \"1 2 5 10 20\\n\",\n    \"1 2 5 6 7\\n\",\n    \"2 5 7 12 6\\n\",\n    \"10 20 50 100 80\\n\",\n    \"1 2 5 10 2\\n\",\n    \"1 2 5 6 4\\n\",\n    \"5 9 1 2 3\\n\",\n    \"50 100 1 20 3\\n\",\n    \"10 20 3 7 30\\n\",\n    \"1 5 10 10 100\\n\",\n    \"100 101 1 2 3\\n\",\n    \"1 5 10 20 6\\n\",\n    \"1 10 15 25 5\\n\",\n    \"1 2 5 10 3\\n\",\n    \"2 3 5 6 100\\n\",\n    \"1 2 4 5 6\\n\",\n    \"6 10 1 2 40\\n\",\n    \"20 30 1 5 1\\n\",\n    \"20 40 50 100 50\\n\",\n    \"1 1 4 9 2\\n\",\n    \"1 2 5 6 1\\n\",\n    \"1 100 400 500 450\\n\",\n    \"5 6 1 2 5\\n\",\n    \"1 10 21 30 50\\n\",\n    \"100 200 300 400 101\\n\",\n    \"2 8 12 16 9\\n\",\n    \"1 5 7 9 6\\n\",\n    \"300 400 100 200 101\\n\",\n    \"1 2 2 3 10\\n\",\n    \"1 10 100 200 5\\n\",\n    \"1 3 3 4 4\\n\",\n    \"10 20 30 40 25\\n\",\n    \"1 2 5 10 1\\n\",\n    \"2 4 8 10 1\\n\",\n    \"2 5 10 15 7\\n\",\n    \"100 200 5 10 1\\n\",\n    \"1 2 100 200 300\\n\",\n    \"30 100 10 20 25\\n\",\n    \"10 20 1 5 6\\n\",\n    \"4 5 1 2 4\\n\",\n    \"11 100 1 9 1000\\n\",\n    \"1 1 10 10 228\\n\",\n    \"5 7 10 20 15\\n\",\n    \"1 3 8 9 7\\n\",\n    \"1 10 2 8 8\\n\",\n    \"1 5 9 15 1\\n\",\n    \"1 3 5 6 12\\n\",\n    \"1 100 500 1000 3\\n\",\n    \"1 1 1 1 2\\n\",\n    \"1 1000 100 1000 200\\n\",\n    \"4 5 1 4 1\\n\",\n    \"1 5 5 7 3\\n\",\n    \"1 4 4 10 11\\n\",\n    \"1 1 3 4 100\\n\",\n    \"1 4 3 5 6\\n\",\n    \"10 100 20 30 40\\n\",\n    \"5 9 1 11 7\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"50\\n\",\n    \"1\\n\",\n    \"999999999\\n\",\n    \"0\\n\",\n    \"99999999999999997\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"999999997\\n\",\n    \"0\\n\",\n    \"27788438422925\\n\",\n    \"5076\\n\",\n    \"29117730788587\\n\",\n    \"81604391064\\n\",\n    \"47247500916780901\\n\",\n    \"0\\n\",\n    \"48172141432145241\\n\",\n    \"99277597320376979\\n\",\n    \"256787461333454149\\n\",\n    \"37925278862451249\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"91\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"6\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"900\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"11\\n\",\n    \"4\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/714/A",
  "starter_code": ""
}