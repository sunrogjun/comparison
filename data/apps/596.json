{
  "task_id": "APPS/596",
  "problem_id": 596,
  "prompt": "Calendars in widespread use today include the Gregorian calendar, which is the de facto international standard, and is used almost everywhere in the world for civil purposes. The Gregorian reform modified the Julian calendar's scheme of leap years as follows:\n\n Every year that is exactly divisible by four is a leap year, except for years that are exactly divisible by 100; the centurial years that are exactly divisible by 400 are still leap years. For example, the year 1900 is not a leap year; the year 2000 is a leap year.  [Image] \n\nIn this problem, you have been given two dates and your task is to calculate how many days are between them. Note, that leap years have unusual number of days in February.\n\nLook at the sample to understand what borders are included in the aswer.\n\n\n-----Input-----\n\nThe first two lines contain two dates, each date is in the format yyyy:mm:dd (1900 \u2264 yyyy \u2264 2038 and yyyy:mm:dd is a legal date).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n1900:01:01\n2038:12:31\n\nOutput\n50768\n\nInput\n1996:03:09\n1991:11:12\n\nOutput\n1579",
  "solutions": "[\"import datetime\\nfrom pprint import pprint\\nyear, month, day = (int(i) for i in input().split(':'))\\nx = datetime.date(year, month, day)\\nyear, month, day = (int(i) for i in input().split(':'))\\ny = datetime.date(year, month, day)\\npprint(abs(int((x - y).days)))\\n\", \"from datetime import date\\n\\ns1=list(map(int,input().split(':')))\\ns2=list(map(int,input().split(':')))\\na = date(s1[0],s1[1],s1[2])\\nb = date(s2[0],s2[1],s2[2])\\nx=abs((a-b).days)\\nprint(x)\\n\", \"import sys\\nimport datetime\\n\\ny1, m1, d1 = list(map(int, input().split(':')))\\ny2, m2, d2 = list(map(int, input().split(':')))\\n\\nprint(abs((datetime.date(y1, m1, d1) - datetime.date(y2, m2, d2)).days))\\n\", \"import datetime\\na, b, c = list(map(int, input().split(':')))\\nd1 = datetime.date(a, b, c)\\na, b, c = list(map(int, input().split(':')))\\nd2 = datetime.date(a, b, c)\\nd3 = abs(d2 - d1)\\nprint(d3.days)\\n\", \"#!/usr/local/bin/python3.3 -tt\\n\\nimport datetime\\nimport sys\\n\\n\\ndef __starting_point():\\n    for l in sys.stdin:\\n        a = tuple(int(i) for i in l.strip().split(':'))\\n        s = datetime.date(*a)\\n        break\\n\\n    for l in sys.stdin:\\n        a = tuple(int(i) for i in l.strip().split(':'))\\n        e = datetime.date(*a)\\n        break\\n\\n    print(abs((e - s).days))\\n\\n__starting_point()\", \"start = input().split(\\\":\\\")\\nend = input().split(\\\":\\\")\\n\\nstart[0],start[1],start[2]=int(start[0]),int(start[1]),int(start[2])\\n\\nend[0],end[1],end[2]=int(end[0]),int(end[1]),int(end[2])\\n\\n\\nif((start[0]>end[0]) or (start[0]==end[0] and start[1]>end[1]) or (start[0]==end[0] and start[1]==end[1] and start[2]>end[2])):\\n    e=list(start)\\n    s=list(end)\\nelse:\\n    e=list(end)\\n    s=list(start)\\ndays=0\\nfor i in range(s[0]+1,e[0]):\\n    if(i%400==0):\\n        days+=366\\n    elif(i%100==0):\\n        days+=365\\n    elif(i%4==0):\\n        days+=366\\n    else:\\n        days+=365\\n\\nmonth=[31,28,31,30,31,30,31,31,30,31,30,31]\\nif(s[0]%400==0):\\n    month[1]+=1\\nelif(s[0]%100==0):\\n    month[1]=28\\nelif(s[0]%4==0):\\n    month[1]+=1\\n\\nfor i in range(s[1]+1,13):\\n    days+=month[i-1]\\n\\nmonth[1]=28\\n\\nif(e[0]%400==0):\\n    month[1]+=1\\nelif(e[0]%100==0):\\n    month[1]=28\\nelif(e[0]%4==0):\\n    month[1]+=1\\n\\nfor i in range(0,e[1]-1):\\n    days+=month[i]\\nmonth[1]=28\\nif(s[0]%400==0):\\n    month[1]+=1\\nelif(s[0]%100==0):\\n    month[1]=28\\nelif(s[0]%4==0):\\n    month[1]+=1\\ndays+=e[2]\\ndays+=month[s[1]-1]-s[2]\\n\\nif(s[0]==e[0]):\\n    days=0\\n    for i in range(s[1]+1,e[1]):\\n        days+=month[i-1]\\n    days+=e[2]\\n    days+=month[s[1]-1]-s[2]\\nif(s[0]==e[0] and s[2]==e[2]):\\n\\n    days=0\\n    for i in range(s[1],e[1]):\\n        days+=month[i-1]\\nif(s[0]==e[0] and s[1]==e[1]):\\n    days=e[2]-s[2]\\nif(s[0]==e[0] and s[1]==e[1] and s[2]==e[2]):\\n    days=0\\n\\nprint(days)\\n\", \"from datetime import date\\n\\na1 = [int(i) for i in input().split(':')]\\na2 = [int(i) for i in input().split(':')]\\n\\nprint(abs((date(a1[0], a1[1], a1[2]) - date(a2[0], a2[1], a2[2])).days))\\n\", \"from datetime import date,timedelta\\nimport sys\\n\\ndef get_input ():\\n  return list(map (int,input().split(':')))\\n\\nsy,sm,sd = get_input()\\ney,em,ed = get_input()\\n\\n#start = date (sy,sm,sd)\\n#end = date (ey,em,ed)\\n\\nend = date (sy,sm,sd)\\nstart = date (ey,em,ed)\\n\\nprint(abs((end-start).days))\\n\", \"3\\n\\nmonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\ndef isn(yyyy):\\n    if yyyy == 1900:\\n        return False\\n    return yyyy % 4 == 0\\n\\ndef toint(date):\\n    yyyy, mm, dd = date\\n    res = 0\\n    for y in range(1900, yyyy):\\n        res += 365 + isn(y)\\n    for m in range(1, mm):\\n        res += month[m] + (m == 2 and isn(yyyy))\\n    return res + dd\\n\\nfirst = tuple(map(int, input().strip().split(':')))\\nlast = tuple(map(int, input().strip().split(':')))\\nif last < first:\\n    last, first = first, last\\nprint(toint(last) - toint(first))\\n\", \"from datetime import date\\n\\nd = [0] * 2\\n\\nfor i in range(0, 2):\\n    a = list(map(int, input().split(':')))\\n    d[i] = date(a[0], a[1], a[2])\\n    \\nr = (d[0] - d[1]).days\\n\\nprint(r if r >= 0 else -r)\", \"from datetime import date\\nd1 = date(*map(int, input().split(':')))\\nd2 = date(*map(int, input().split(':')))\\nprint(abs(d2 - d1).days)\", \"from datetime import date\\na = date(*list(map(int,input().split(':'))))\\nb = date(*list(map(int,input().split(':'))))\\nprint(abs(a-b).days) \\n\", \"def isLeep(year):\\n    if year % 400 == 0:\\n        return 1;\\n    else:\\n        if year % 4 == 0 and year % 100 != 0:\\n            return 1;\\n        return 0;\\n    \\ndef cmp(y1, m1, d1, y2, m2, d2):\\n    if y1 > y2:\\n        return 0;\\n    else:\\n        if y1 == y2 and m1 > m2:\\n            return 0;\\n        else:\\n            if y1 == y2 and m1 == m2 and d1 > d2:\\n                return 0;\\n            return 1;\\n\\ny1, m1, d1 = list(map(int, input().split(':')))\\ny2, m2, d2 = list(map(int, input().split(':')))\\n\\ndays = [31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\\n\\nif cmp(y1, m1, d1, y2, m2, d2) == 0:\\n    t = y1; y1 = y2; y2 = t;\\n    t = m1; m1 = m2; m2 = t;\\n    t = d1; d1 = d2; d2 = t;\\n\\nres = 0;\\nwhile True:\\n    res = res + 1;\\n    if y1 == y2 and m1 == m2 and d1 == d2:\\n        break;\\n    d1 = d1 + 1;\\n    if d1 <= days[m1]:\\n        continue;\\n    else:\\n        if d1 == 29:\\n            if isLeep(y1):\\n                continue;\\n            else:\\n                m1 = 3;\\n                d1 = 1;\\n        else:\\n            if d1 == 30:\\n                m1 = 3;\\n                d1 = 1;\\n            else:\\n                if d1 == 31:\\n                    m1 = m1 + 1;\\n                    d1 = 1;\\n                else:\\n                    if d1 == 32:\\n                        if m1 == 12:\\n                            y1 = y1 + 1;\\n                            m1 = 1;\\n                            d1 = 1;\\n                        else:\\n                            m1 = m1 + 1;\\n                            d1 = 1;\\n\\nprint(res - 1)\\n            \\n\\n\", \"from datetime import *\\nR = lambda: datetime(*map(int, input().split(':')))\\ndate1 = R()\\ndate2 = R()\\nprint(abs(date2 - date1).days)\", \"#-------------------------------------------------------------------------------\\n# Name:        Codeforces\\n# Author:      Gogol2\\n\\n#-------------------------------------------------------------------------------\\n\\nm = [31,28,31,30,31,30,31,31,30,31,30,31]\\ndef leap (yy):\\n    if ((yy % 400 == 0 or (yy % 4 == 0 and yy % 100) )):\\n        return 366\\n    else:\\n        return 365\\n\\ndef main():\\n\\n    y1,m1,d1 = list(map(int,input().split(':')))\\n    y2,m2,d2 = list(map(int,input().split(':')))\\n    a = d1\\n    b = d2\\n    for i in range (0,y1):\\n        a = a + leap(i)\\n    for i in range (0,y2):\\n        b = b + leap(i)\\n    for i in range (m1 - 1):\\n        a = a + m[i]\\n        if (leap (y1) == 366 and i == 1):\\n            a = a + 1\\n    for i in range (m2 - 1):\\n        b = b + m[i]\\n        if (leap (y2) == 366 and i == 1):\\n            b = b + 1\\n    print(abs(a - b))\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"def f(y, m, d):    \\n    return 365 * y + 31 * m  + d + ((y - 1) // 4 - (y - 1) // 100 + (y - 1) // 400) - ((2 + int(y % 4 != 0 or (y % 100 == 0 and y % 400 != 0))) * (m > 2) + (m > 4) + (m > 6) + (m > 9) + (m > 11))\\nprint(abs(f(*map(int, input().split(':'))) - f(*map(int, input().split(':')))))\", \"t = [0, 0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]\\ndef g(y, m):\\n    return int(m > 2 and y % 4 == 0 and (y % 100 != 0 or y % 400 == 0))\\ndef h(y):\\n    return y // 4 - y // 100 + y // 400\\ndef f(y, m, d):    \\n    nonlocal t\\n    return 365 * y + t[m] + d + h(y - 1) + g(y, m)\\nprint(abs(f(*map(int, input().split(':'))) - f(*map(int, input().split(':')))))\", \"import datetime\\n\\ndef solve(date1,date2):\\n    d1 = datetime.datetime(int(date1[0]),int(date1[1]),int(date1[2]))\\n    d2 = datetime.datetime(int(date2[0]),int(date2[1]),int(date2[2]))\\n    print(abs((d2-d1).days))\\n\\ndate1 = input()\\ndate2 = input()\\n\\nsolve(date1.split(':'),date2.split(':'))\\n\", \"import datetime\\na, b, c = map(int, input().split(':'))\\nd1 = datetime.date(a, b, c)\\na, b, c = map(int, input().split(':'))\\nd2 = datetime.date(a, b, c)\\nd3 = abs(d2 - d1)\\nprint(d3.days)\", \"dm = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\ndef leap(y):\\n    return y % 4 == 0 and y != 1900\\ndef dn(y, m, d):\\n    return d + sum(dm[i] + (i == 2 and leap(y)) for i in range(m))\\nd = sorted(list(map(int, input().split(':'))) for i in range(2))\\nif d[0][0] == d[1][0]:\\n    print(dn(*d[1]) - dn(*d[0]))\\nelse:\\n    print(365 + leap(d[0][0]) - dn(*d[0]) + sum(365 + leap(i) for i in range(d[0][0] + 1, d[1][0])) + dn(*d[1]))\", \"from datetime import date\\nfrom datetime import timedelta\\n\\na = input()\\na = [int(x) for x in a.split(\\\":\\\")]\\nb = input()\\nb = [int(x) for x in b.split(\\\":\\\")]\\n\\nx = date(a[0],a[1],a[2])\\ny = date(b[0],b[1],b[2])\\n\\nif x > y:\\n  x,y = y,x\\n\\nans = 0\\nwhile x != y:\\n  x = x + timedelta(days=1)\\n  ans+=1\\nprint(ans)\\n\\n\", \"def s():\\n    import datetime\\n    dt = datetime.datetime\\n    print(abs((dt(*list(map(int,input().split(':'))))-dt(*list(map(int,input().split(':'))))).days))\\ns()\\n\", \"from datetime import date\\ny1,m1,d1=list(map(int,input().split(':')))\\ny2,m2,d2=list(map(int,input().split(':')))\\n\\na=date(y1,m1,d1)\\nb=date(y2,m2,d2)\\nprint(abs((b-a).days))\\n\\n\", \"from datetime import date\\ny1,m1,d1 = list(map(int,input().split(':')))\\ny2,m2,d2 = list(map(int,input().split(':')))\\ndate1 = date(y1,m1,d1)\\ndate2 = date(y2,m2,d2)\\nprint(abs((date2-date1).days))\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1900:01:01\\n2038:12:31\\n\",\n    \"1996:03:09\\n1991:11:12\\n\",\n    \"1999:12:31\\n2000:02:29\\n\",\n    \"1903:09:27\\n1988:06:15\\n\",\n    \"1913:11:14\\n1901:05:11\\n\",\n    \"1915:01:01\\n2007:07:01\\n\",\n    \"1925:07:15\\n2010:06:22\\n\",\n    \"1935:10:08\\n1923:01:07\\n\",\n    \"1986:08:24\\n1926:04:13\\n\",\n    \"1932:11:18\\n2028:09:25\\n\",\n    \"1942:06:04\\n1982:12:29\\n\",\n    \"1993:08:25\\n1985:02:16\\n\",\n    \"1954:06:30\\n1911:05:04\\n\",\n    \"2005:08:01\\n1963:08:23\\n\",\n    \"2015:10:17\\n1966:07:12\\n\",\n    \"2025:08:10\\n2018:09:03\\n\",\n    \"2027:07:31\\n1945:04:06\\n\",\n    \"2037:05:16\\n1996:03:11\\n\",\n    \"1949:07:09\\n1901:10:24\\n\",\n    \"2028:04:11\\n1931:09:01\\n\",\n    \"1900:02:06\\n1997:12:07\\n\",\n    \"1902:09:06\\n1951:03:31\\n\",\n    \"1912:03:09\\n1954:06:17\\n\",\n    \"1963:05:02\\n2005:08:02\\n\",\n    \"1973:03:18\\n1932:11:07\\n\",\n    \"1934:01:09\\n1935:02:22\\n\",\n    \"1985:08:24\\n1987:05:01\\n\",\n    \"1995:06:03\\n1990:07:22\\n\",\n    \"1907:04:04\\n1902:10:01\\n\",\n    \"1910:01:11\\n1987:02:08\\n\",\n    \"1996:03:09\\n1996:03:09\\n\",\n    \"1900:03:02\\n2038:03:01\\n\",\n    \"2000:01:02\\n2000:02:02\\n\",\n    \"1999:04:08\\n1999:02:04\\n\",\n    \"1999:01:01\\n1999:01:10\\n\",\n    \"2012:05:29\\n2012:02:29\\n\",\n    \"1900:01:01\\n1900:01:01\\n\",\n    \"1996:02:01\\n1996:01:27\\n\",\n    \"1901:12:31\\n1901:12:31\\n\",\n    \"2000:02:28\\n2000:02:28\\n\"\n  ],\n  \"outputs\": [\n    \"50768\\n\",\n    \"1579\\n\",\n    \"60\\n\",\n    \"30943\\n\",\n    \"4570\\n\",\n    \"33784\\n\",\n    \"31023\\n\",\n    \"4657\\n\",\n    \"22048\\n\",\n    \"35010\\n\",\n    \"14818\\n\",\n    \"3112\\n\",\n    \"15763\\n\",\n    \"15319\\n\",\n    \"17994\\n\",\n    \"2533\\n\",\n    \"30066\\n\",\n    \"15041\\n\",\n    \"17425\\n\",\n    \"35287\\n\",\n    \"35733\\n\",\n    \"17738\\n\",\n    \"15440\\n\",\n    \"15433\\n\",\n    \"14741\\n\",\n    \"409\\n\",\n    \"615\\n\",\n    \"1777\\n\",\n    \"1646\\n\",\n    \"28152\\n\",\n    \"0\\n\",\n    \"50403\\n\",\n    \"31\\n\",\n    \"63\\n\",\n    \"9\\n\",\n    \"90\\n\",\n    \"0\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/304/B",
  "starter_code": ""
}