{
  "task_id": "APPS/123",
  "problem_id": 123,
  "prompt": "A few years ago, Hitagi encountered a giant crab, who stole the whole of her body weight. Ever since, she tried to avoid contact with others, for fear that this secret might be noticed.\n\nTo get rid of the oddity and recover her weight, a special integer sequence is needed. Hitagi's sequence has been broken for a long time, but now Kaiki provides an opportunity.\n\nHitagi's sequence a has a length of n. Lost elements in it are denoted by zeros. Kaiki provides another sequence b, whose length k equals the number of lost elements in a (i.e. the number of zeros). Hitagi is to replace each zero in a with an element from b so that each element in b should be used exactly once. Hitagi knows, however, that, apart from 0, no integer occurs in a and b more than once in total.\n\nIf the resulting sequence is not an increasing sequence, then it has the power to recover Hitagi from the oddity. You are to determine whether this is possible, or Kaiki's sequence is just another fake. In other words, you should detect whether it is possible to replace each zero in a with an integer from b so that each integer from b is used exactly once, and the resulting sequence is not increasing.\n\n\n-----Input-----\n\nThe first line of input contains two space-separated positive integers n (2 \u2264 n \u2264 100) and k (1 \u2264 k \u2264 n) \u2014 the lengths of sequence a and b respectively.\n\nThe second line contains n space-separated integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 200) \u2014 Hitagi's broken sequence with exactly k zero elements.\n\nThe third line contains k space-separated integers b_1, b_2, ..., b_{k} (1 \u2264 b_{i} \u2264 200) \u2014 the elements to fill into Hitagi's sequence.\n\nInput guarantees that apart from 0, no integer occurs in a and b more than once in total.\n\n\n-----Output-----\n\nOutput \"Yes\" if it's possible to replace zeros in a with elements in b and make the resulting sequence not increasing, and \"No\" otherwise.\n\n\n-----Examples-----\nInput\n4 2\n11 0 0 14\n5 4\n\nOutput\nYes\n\nInput\n6 1\n2 3 0 8 9 10\n5\n\nOutput\nNo\n\nInput\n4 1\n8 94 0 4\n89\n\nOutput\nYes\n\nInput\n7 7\n0 0 0 0 0 0 0\n1 2 3 4 5 6 7\n\nOutput\nYes\n\n\n\n-----Note-----\n\nIn the first sample:   Sequence a is 11, 0, 0, 14.  Two of the elements are lost, and the candidates in b are 5 and 4.  There are two possible resulting sequences: 11, 5, 4, 14 and 11, 4, 5, 14, both of which fulfill the requirements. Thus the answer is \"Yes\". \n\nIn the second sample, the only possible resulting sequence is 2, 3, 5, 8, 9, 10, which is an increasing sequence and therefore invalid.",
  "solutions": "[\"import sys\\n\\nn, k = list(map(int, input().split()))\\na = [int(x) for x in input().split()]\\nb = [int(x) for x in input().split()]\\n\\nb.sort(reverse=True)\\n\\nres = []\\ncur_b = 0\\nfor a_i in a:\\n    if a_i != 0:\\n        res.append(a_i)\\n    else:\\n        res.append(b[cur_b])\\n        cur_b += 1\\n\\nif res != list(sorted(res)):\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\", \"R=lambda:list(map(int,input().split()))\\ninput()\\na=R()\\nb=sorted(list(R()),reverse=True)\\np=0\\nfor i in range(len(a)):\\n  if a[i]==0:\\n    a[i]=b[p]\\n    p+=1\\nprint('Yes'if any(a[i]<=a[i-1] for i in range(1,len(a)))else'No')\\n\", \"# int(input())\\n# map(int,input().split())\\n# list(map(int,input().split()))\\n# for _ in range(int(input())):\\n\\nn,m = list(map(int,input().split()))\\na = list(map(int,input().split()))\\nb = list(map(int,input().split()))\\nb.sort(reverse = True)\\n\\nc1 = 0\\nfor i in range(n):\\n    if a[i] == 0:\\n        a[i] = b[c1]\\n        c1 += 1\\n\\nfor i in range(1,n):\\n    if a[i] <= a[i-1]:\\n        print(\\\"Yes\\\")\\n        break\\nelse:\\n    print(\\\"No\\\")\\n\", \"import sys\\nn, m = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nneed = a.count(0)\\nb.sort(reverse = True)\\nptr = 0\\nfor i in range(n):\\n    if (a[i] == 0):\\n        a[i] = b[ptr]\\n        ptr += 1\\nz = a[:]\\nz.sort()\\nif (z == a):\\n    print('No')\\nelse:\\n    print('Yes')\\n\", \"a, b = map(int, input().split())\\ns1 = list(map(int, input().split()))\\ns2 = list(map(int, input().split()))\\ns2.sort()\\nfor i in range(a):\\n    if s1[i] == 0:\\n        s1[i] = s2.pop()\\nif s1 == sorted(s1):\\n    print(\\\"No\\\")\\nelse:\\n    print(\\\"Yes\\\")\", \"n, k = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nif k == 1:\\n    ind = a.index(0)\\n    a[ind] = b[0]\\n    st = False\\n    for i in range(n - 1):\\n        if a[i] >= a[i + 1]:\\n            st = True\\n            break\\n    if st:\\n        print('Yes')\\n    else:\\n        print('No')\\nelse:\\n    print('Yes')\\n\", \"n, k = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nb = list(reversed(sorted(b)))\\nj = 0\\nfor i in range(n):\\n    if a[i] == 0:\\n        a[i] = b[j]\\n        j += 1\\nans = 'No'\\nfor i in range(n - 1):\\n    if a[i] >= a[i + 1]:\\n        ans = 'Yes'\\n        break\\nprint(ans)\\n\", \"n, k = map(int, input().split())\\n\\na = [-10 ** 9] + list(map(int, input().split())) + [10 ** 9]\\nif k > 1:\\n    print('Yes')\\nelse:\\n    i = a.index(0)\\n    b = int(input())\\n    \\n    f = True\\n    for j in range(1, n):\\n        if a[j] <= a[j - 1] and a[j] != 0:\\n            f = False\\n            \\n    if f and a[i - 1] < b and a[i + 1] > b:\\n        print('No')\\n    else:\\n        print('Yes')\", \"n,k = list(map(int,input().split()))\\nai = list(map(int,input().split()))\\nbi = list(map(int,input().split()))\\nbi.sort()\\nj = k-1\\nfor i in range(n):\\n    if ai[i] == 0:\\n        ai[i] = bi[j]\\n        j -= 1\\n\\nans = 0\\nfor i in range(1,n):\\n    if ai[i-1] >= ai[i]:\\n        ans = 1\\nif ans  == 1:\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\", \"n, k=[int(i) for i in input().split()]\\na=[int(i) for i in input().split()]\\nb=[int(i) for i in input().split()]\\nif len(b) != 1:\\n    print('Yes')\\nelse:\\n    a[a.index(0)] = b[0]\\n    for i in range(len(a)-1):\\n        if a[i]>a[i+1]:\\n            print('Yes')\\n            break\\n    else:\\n        print('No')\", \"input()\\nseq = [int(num) for num in input().split()]\\nnums = reversed(sorted(map(int, input().split())))\\n\\nind = 0\\nfor num in nums:\\n    while seq[ind] > 0:\\n        ind += 1\\n    seq[ind] = num\\n\\nfor prev, nxt in zip(seq, seq[1:]):\\n    if prev >= nxt:\\n        print('Yes')\\n        return\\nprint('No')\\n\", \"from sys import stdin, stdout\\n\\n\\nn,k = list(map(int,stdin.readline().rstrip().split()))\\na = [int(x) for x in stdin.readline().rstrip().split()]\\nb = [int(x) for x in stdin.readline().rstrip().split()]\\n\\nif k>1:\\n    print('Yes')\\nelse:\\n    zeroInd = a.index(0)\\n    a[zeroInd] = b[0]\\n    aSort = sorted(a)\\n    identical = True\\n    for i in range(n):\\n        if aSort[i]!=a[i]:\\n            identical=False\\n    if identical:\\n        print('No')\\n    else:\\n        print('Yes')\\n\", \"n, k = map(int, input().split())\\na = [int(i) for i in input().split()]\\nb = [int(i) for i in input().split()]\\nif k > 1:\\n    print(\\\"Yes\\\")\\nelse:\\n    a[a.index(0)] = b[0]\\n    for i in range(1, n):\\n        if a[i] <= a[i - 1]:\\n            print(\\\"Yes\\\")\\n            break\\n    else:\\n        print(\\\"No\\\")\", \"n1,n2 = list(map(int,input().split()))\\nn = list(map(int,input().split()))\\nk = sorted(list(map(int,input().split())))[::-1]\\nt = 0\\nfor i in range(n1):\\n    if n[i] ==0:\\n        n[i] = k[t]\\n        t += 1\\nif sorted(n) == n:\\n    print(\\\"No\\\")\\nelse:\\n    print(\\\"Yes\\\")\\n\", \"n, k = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nb.sort(reverse=True)\\nj = -1\\nfor i in range(len(a)):\\n    if a[i] == 0:\\n        j += 1\\n        a[i] = b[j]\\n        if j == len(b):\\n            break\\nflag = 0\\nfor i in range(len(a) - 1):\\n    if a[i] >= a[i + 1]:\\n        flag = 1\\n        break\\nif flag == 1:\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\", \"import sys\\n\\n\\ndef main():\\n    n,k = map(int,sys.stdin.readline().split())\\n    \\n    a = list(map(int, sys.stdin.readline().split()))\\n    b = list(map(int, sys.stdin.readline().split()))\\n    b.sort(reverse=True)\\n    j = 0 \\n    for i in range(n):\\n        if a[i] ==0:\\n            a[i] = b[j]\\n            j+=1\\n\\n    p = a[0]\\n    for i in range(1,n):\\n        if a[i] <= p:\\n            print(\\\"Yes\\\")\\n            return \\n        p = a[i]\\n    \\n    print(\\\"No\\\")\\n       \\n\\n\\nmain()\", \"I = lambda: list(map(int, input().split()))\\nn, k = I()\\na, b = list(I()), list(I())\\nif k == 1:\\n    c = list(a)\\n    c[c.index(0)] = b[0]\\n    if sorted(c) == c:\\n        print('No')\\n        return\\nprint('Yes')\\n\", \"n,k = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nif k > 1:\\n    print('Yes')\\n    return\\nelse:\\n    for i in range(len(a)):\\n        if a[i] == 0:\\n            a[i] = b[0]\\n            break\\n    for i in range(len(a) - 1):\\n        if a[i] > a[i + 1]:\\n            print('Yes')\\n            return\\nprint('No')\\n\", \"n,k = [int(i) for i in input().split()]\\na = [int(i) for i in input().split()]\\nb = [int(i) for i in input().split()]\\n\\nc = [i for i in a if i!=0]\\n\\nif (c != sorted(c)):\\n    print(\\\"Yes\\\")\\nelse:\\n    if k == 1:\\n        for i in range(len(a)):\\n            if a[i] == 0:\\n                a[i] = b[0]\\n        if a == sorted(a):\\n            print(\\\"No\\\")\\n        else:\\n            print(\\\"Yes\\\")\\n    else:\\n        print(\\\"Yes\\\")\\n        \\n    \\n\", \"n, k = map(int, input().split())\\na, b = list(map(int, input().split())), list(map(int, input().split()))\\nif k > 1:\\n  print(\\\"Yes\\\")\\nelse:\\n  a[a.index(0)] = b[0]\\n  if a == sorted(a):\\n    print(\\\"No\\\")\\n  else:\\n    print(\\\"Yes\\\")\", \"input()\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nn =len(a)\\nk =len(b)\\n\\nb.sort()\\n\\ni = k-1\\nc = []\\nfor e in a:\\n    if e==0:\\n        c.append(b[i])\\n        i-=1\\n    else:\\n        c.append(e)\\n\\nyes = False\\n\\nfor i in range(1,n):\\n    if c[i] < c[i-1]:\\n        yes = True\\n\\nif yes:\\n    print(\\\"Yes\\\")\\nelse:\\n    print(\\\"No\\\")\\n\\n\", \"n, k = map(int, input().split())\\n\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\n\\nif a.count(0) > 1:\\n    print(\\\"Yes\\\")\\nelse:\\n    a[a.index(0)] = b[0]\\n    if a == sorted(a):\\n        print(\\\"No\\\")\\n    else:\\n        print(\\\"Yes\\\")\", \"n,k = map(int,input().split())\\nl1 = list(map(int,input().split()))\\nl2 = list(map(int,input().split()))\\nif(k!=1):\\n\\tprint('Yes')\\n\\treturn\\nfor i in range(n):\\n\\tif(l1[i]==0):\\n\\t\\tl1[i]=l2[0]\\n\\t\\tbreak\\nok = True\\nfor i in range(n-1):\\n\\tif(l1[i+1]<l1[i]):\\n\\t\\tok = False\\n\\t\\tbreak\\nif(ok==True):\\n\\tprint('No')\\nelse:\\n\\tprint('Yes')\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4 2\\n11 0 0 14\\n5 4\\n\",\n    \"6 1\\n2 3 0 8 9 10\\n5\\n\",\n    \"4 1\\n8 94 0 4\\n89\\n\",\n    \"7 7\\n0 0 0 0 0 0 0\\n1 2 3 4 5 6 7\\n\",\n    \"40 1\\n23 26 27 28 31 35 38 40 43 50 52 53 56 57 59 61 65 73 75 76 79 0 82 84 85 86 88 93 99 101 103 104 105 106 110 111 112 117 119 120\\n80\\n\",\n    \"100 1\\n99 95 22 110 47 20 37 34 23 0 16 69 64 49 111 42 112 96 13 40 18 77 44 46 74 55 15 54 56 75 78 100 82 101 31 83 53 80 52 63 30 57 104 36 67 65 103 51 48 26 68 59 35 92 85 38 107 98 73 90 62 43 32 89 19 106 17 88 41 72 113 86 66 102 81 27 29 50 71 79 109 91 70 39 61 76 93 84 108 97 24 25 45 105 94 60 33 87 14 21\\n58\\n\",\n    \"4 1\\n2 1 0 4\\n3\\n\",\n    \"2 1\\n199 0\\n200\\n\",\n    \"3 2\\n115 0 0\\n145 191\\n\",\n    \"5 1\\n196 197 198 0 200\\n199\\n\",\n    \"5 1\\n92 0 97 99 100\\n93\\n\",\n    \"3 1\\n3 87 0\\n81\\n\",\n    \"3 1\\n0 92 192\\n118\\n\",\n    \"10 1\\n1 3 0 7 35 46 66 72 83 90\\n22\\n\",\n    \"100 1\\n14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 0 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113\\n67\\n\",\n    \"100 5\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 0 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 0 53 54 0 56 57 58 59 60 61 62 63 0 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 0 99 100\\n98 64 55 52 29\\n\",\n    \"100 5\\n175 30 124 0 12 111 6 0 119 108 0 38 127 3 151 114 95 54 4 128 91 11 168 120 80 107 18 21 149 169 0 141 195 20 78 157 33 118 17 69 105 130 197 57 74 110 138 84 71 172 132 93 191 44 152 156 24 101 146 26 2 36 143 122 104 42 103 97 39 116 115 0 155 87 53 85 7 43 65 196 136 154 16 79 45 129 67 150 35 73 55 76 37 147 112 82 162 58 40 75\\n121 199 62 193 27\\n\",\n    \"100 1\\n1 2 3 4 5 6 7 8 9 0 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n11\\n\",\n    \"100 1\\n0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n1\\n\",\n    \"100 1\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 0\\n100\\n\",\n    \"100 1\\n9 79 7 98 10 50 28 99 43 74 89 20 32 66 23 45 87 78 81 41 86 71 75 85 5 39 14 53 42 48 40 52 3 51 11 34 35 76 77 61 47 19 55 91 62 56 8 72 88 4 33 0 97 92 31 83 18 49 54 21 17 16 63 44 84 22 2 96 70 36 68 60 80 82 13 73 26 94 27 58 1 30 100 38 12 15 93 90 57 59 67 6 64 46 25 29 37 95 69 24\\n65\\n\",\n    \"100 2\\n0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 0 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\\n48 1\\n\",\n    \"100 1\\n2 7 11 17 20 22 23 24 25 27 29 30 31 33 34 35 36 38 39 40 42 44 46 47 50 52 53 58 59 60 61 62 63 66 0 67 71 72 75 79 80 81 86 91 93 94 99 100 101 102 103 104 105 108 109 110 111 113 114 118 119 120 122 123 127 129 130 131 132 133 134 135 136 138 139 140 141 142 147 154 155 156 160 168 170 171 172 176 179 180 181 182 185 186 187 188 189 190 194 198\\n69\\n\",\n    \"100 1\\n3 5 7 9 11 12 13 18 20 21 22 23 24 27 28 29 31 34 36 38 39 43 46 48 49 50 52 53 55 59 60 61 62 63 66 68 70 72 73 74 75 77 78 79 80 81 83 85 86 88 89 91 92 94 97 98 102 109 110 115 116 117 118 120 122 126 127 128 0 133 134 136 137 141 142 144 145 147 151 152 157 159 160 163 164 171 172 175 176 178 179 180 181 184 186 188 190 192 193 200\\n129\\n\",\n    \"5 2\\n0 2 7 0 10\\n1 8\\n\",\n    \"3 1\\n5 4 0\\n1\\n\",\n    \"3 1\\n1 0 3\\n4\\n\",\n    \"2 1\\n0 2\\n1\\n\",\n    \"2 1\\n0 5\\n7\\n\",\n    \"5 1\\n10 11 0 12 13\\n1\\n\",\n    \"5 1\\n0 2 3 4 5\\n6\\n\",\n    \"6 2\\n1 0 3 4 0 6\\n2 5\\n\",\n    \"7 2\\n1 2 3 0 0 6 7\\n4 5\\n\",\n    \"4 1\\n1 2 3 0\\n4\\n\",\n    \"2 2\\n0 0\\n1 2\\n\",\n    \"3 2\\n1 0 0\\n2 3\\n\",\n    \"4 2\\n1 0 4 0\\n5 2\\n\",\n    \"2 1\\n0 1\\n2\\n\",\n    \"5 2\\n1 0 4 0 6\\n2 5\\n\",\n    \"5 1\\n2 3 0 4 5\\n1\\n\",\n    \"3 1\\n0 2 3\\n5\\n\",\n    \"6 1\\n1 2 3 4 5 0\\n6\\n\",\n    \"5 1\\n1 2 0 4 5\\n6\\n\",\n    \"3 1\\n5 0 2\\n7\\n\",\n    \"4 1\\n4 5 0 8\\n3\\n\",\n    \"5 1\\n10 11 12 0 14\\n13\\n\",\n    \"4 1\\n1 2 0 4\\n5\\n\",\n    \"3 1\\n0 11 14\\n12\\n\",\n    \"4 1\\n1 3 0 4\\n2\\n\",\n    \"2 1\\n0 5\\n1\\n\",\n    \"5 1\\n1 2 0 4 7\\n5\\n\",\n    \"3 1\\n2 3 0\\n1\\n\",\n    \"6 1\\n1 2 3 0 5 4\\n6\\n\",\n    \"4 2\\n11 0 0 14\\n13 12\\n\",\n    \"2 1\\n1 0\\n2\\n\",\n    \"3 1\\n1 2 0\\n3\\n\",\n    \"4 1\\n1 0 3 2\\n4\\n\",\n    \"3 1\\n0 1 2\\n5\\n\",\n    \"3 1\\n0 1 2\\n3\\n\",\n    \"4 1\\n0 2 3 4\\n5\\n\",\n    \"6 1\\n1 2 3 0 4 5\\n6\\n\",\n    \"3 1\\n1 2 0\\n5\\n\",\n    \"4 2\\n1 0 0 4\\n3 2\\n\",\n    \"5 1\\n2 3 0 5 7\\n6\\n\",\n    \"3 1\\n2 3 0\\n4\\n\",\n    \"3 1\\n1 0 11\\n5\\n\",\n    \"4 1\\n7 9 5 0\\n8\\n\",\n    \"6 2\\n1 2 3 0 5 0\\n6 4\\n\",\n    \"3 2\\n0 1 0\\n3 2\\n\",\n    \"4 1\\n6 9 5 0\\n8\\n\",\n    \"2 1\\n0 3\\n6\\n\",\n    \"5 2\\n1 2 0 0 5\\n4 3\\n\",\n    \"4 2\\n2 0 0 8\\n3 4\\n\",\n    \"2 1\\n0 2\\n3\\n\",\n    \"3 1\\n0 4 5\\n6\\n\",\n    \"6 1\\n1 2 3 4 0 5\\n6\\n\",\n    \"2 1\\n2 0\\n3\\n\",\n    \"4 2\\n11 0 0 200\\n100 199\\n\",\n    \"2 1\\n5 0\\n4\\n\",\n    \"3 1\\n1 0 5\\n10\\n\",\n    \"6 2\\n1 2 0 0 5 6\\n3 4\\n\",\n    \"5 2\\n1 0 3 0 5\\n2 4\\n\",\n    \"4 1\\n1 4 0 8\\n3\\n\",\n    \"4 1\\n5 9 4 0\\n8\\n\",\n    \"4 2\\n1 0 0 7\\n3 2\\n\",\n    \"3 3\\n0 0 0\\n1 4 3\\n\",\n    \"5 5\\n0 0 0 0 0\\n5 4 3 2 1\\n\",\n    \"4 1\\n3 9 4 0\\n8\\n\",\n    \"4 2\\n1 0 0 4\\n2 3\\n\",\n    \"6 1\\n2 4 0 8 9 10\\n3\\n\",\n    \"4 1\\n0 3 5 6\\n9\\n\",\n    \"4 2\\n1 2 0 0\\n3 4\\n\",\n    \"5 1\\n2 3 4 5 0\\n1\\n\",\n    \"3 1\\n2 0 4\\n5\\n\"\n  ],\n  \"outputs\": [\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/814/A",
  "starter_code": ""
}