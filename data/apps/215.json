{
  "task_id": "APPS/215",
  "problem_id": 215,
  "prompt": "Polycarp loves lowercase letters and dislikes uppercase ones. Once he got a string s consisting only of lowercase and uppercase Latin letters.\n\nLet A be a set of positions in the string. Let's call it pretty if following conditions are met:  letters on positions from A in the string are all distinct and lowercase;  there are no uppercase letters in the string which are situated between positions from A (i.e. there is no such j that s[j] is an uppercase letter, and a_1 < j < a_2 for some a_1 and a_2 from A). \n\nWrite a program that will determine the maximum number of elements in a pretty set of positions.\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 200) \u2014 length of string s.\n\nThe second line contains a string s consisting of lowercase and uppercase Latin letters.\n\n\n-----Output-----\n\nPrint maximum number of elements in pretty set of positions for string s.\n\n\n-----Examples-----\nInput\n11\naaaaBaabAbA\n\nOutput\n2\n\nInput\n12\nzACaAbbaazzC\n\nOutput\n3\n\nInput\n3\nABC\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example the desired positions might be 6 and 8 or 7 and 8. Positions 6 and 7 contain letters 'a', position 8 contains letter 'b'. The pair of positions 1 and 8 is not suitable because there is an uppercase letter 'B' between these position.\n\nIn the second example desired positions can be 7, 8 and 11. There are other ways to choose pretty set consisting of three elements.\n\nIn the third example the given string s does not contain any lowercase letters, so the answer is 0.",
  "solutions": "[\"def list_input():\\n    return list(map(int,input().split()))\\ndef map_input():\\n    return map(int,input().split())\\ndef map_string():\\n    return input().split()\\n    \\nn = int(input())    \\na = list(input())\\nans = 0\\nfor i in range(n):\\n\\tfor j in range(i,n):\\n\\t\\tb = a[i:j+1]\\n\\t\\tfor k in b:\\n\\t\\t\\tif k.lower() != k:\\n\\t\\t\\t\\tbreak\\n\\t\\telse:\\n\\t\\t\\tb = set(b)\\n\\t\\t\\tans = max(ans,len(b))\\nprint(ans)\\t\\t\\t\\t\\t\", \"n = int(input())\\n\\ns = input()\\n\\nans = 0\\nss = set()\\n\\nfor c in s:\\n\\tif c.isupper():\\n\\t\\tans = max(ans, len(ss))\\n\\t\\tss = set()\\n\\telse:\\n\\t\\tss.add(c)\\nans = max(ans, len(ss))\\nprint(ans)\", \"n = int(input())\\nb = input()\\na = ['']\\nfor i in b:\\n    if ord('A') <= ord(i) <= ord('Z'):\\n        a.append('')\\n    else:\\n        a[-1] = a[-1] + i\\na = [len(set(list(i))) for i in a]\\nprint(max(a))\", \"n = int(input())\\n\\nans = 0\\nl = []\\n\\nfor c in input():\\n    if c.islower():\\n        l.append(c)\\n    else:\\n        ans = max(ans, len(set(l)))\\n        l = []\\n\\nans = max(ans, len(set(l)))\\nprint(ans)\\n\", \"n = int(input())\\ns= input()\\nimport string\\nsm = string.ascii_lowercase\\nb = string.ascii_uppercase\\nans = 0\\nh = set()\\nfor i in range(len(s)):\\n    if s[i] in sm:\\n        h.add(s[i])\\n        ans = max(ans, len(h))\\n    else:\\n        h = set()\\nprint(ans)\", \"n=input()\\ns=input()\\nz=''\\nfor c in s:\\n\\tif ord(c)>=ord('a') and ord(c)<=ord('z'):\\n\\t\\tz+=c\\n\\telse:\\n\\t\\tz+=' '\\nz=z.split(' ')\\nalp=range(26)\\nres=0\\nfor w in z:\\n\\tkek=26\\n\\tfor x in alp:\\n\\t\\tif w.find(chr(ord('a')+x))==-1:\\n\\t\\t\\tkek-=1\\n\\tres=max(res,kek)\\nprint(res)\", \"from sys import stdin, stdout\\nimport string\\n\\nn = int(stdin.readline().rstrip())\\ns = list(stdin.readline().rstrip())\\n\\nlset = str(string.ascii_lowercase)\\nuset = str(string.ascii_uppercase)\\n\\ncurrentSet = set()\\nmaxSize = 0\\nfor letter in s:\\n    if letter in uset:\\n        currentSet = set()\\n    else:\\n        currentSet.add(letter)\\n        maxSize = max(maxSize,len(currentSet))\\n        \\nprint(maxSize)\\n\", \"import re\\nn=int(input())\\ns=input()\\nans=0\\nfor c in re.split('[A-Z]',s):\\n\\tif len(c)>0:\\n\\t\\tans=max(ans,len(set(c)))\\n\\nprint(ans)\\n\", \"def bitLenCount(x):\\n        length = 0\\n        count = 0\\n        while (x):\\n            count += (x & 1)\\n            length += 1\\n            x >>= 1\\n        return count\\n\\nn = input()\\ns = input()\\nmsk = 0\\nans = 0\\nfor i in s:\\n\\tx = ord(i) - ord('a')\\n\\t\\n\\tif x >= 0 and x <= 25:\\n\\t\\tmsk |= (1 << x)\\n\\telse:\\n\\t\\tmsk = 0\\n\\tans = max(ans, bitLenCount(msk))\\n\\t\\nprint(ans)\", \"import re\\nn = int(input())\\nS = input().strip()\\ns = re.split(r'[A-Z]+', S)\\nm = 0\\nfor ss in s:\\n    x = set(ss)\\n    m = max(m, len(x))\\nprint(m)\", \"n = int(input())\\ns = input()\\n\\nans = 0\\nnow_ans = 0\\nlower = []\\n\\nfor el in s:\\n    if el.islower():\\n        if el not in lower:\\n            lower.append(el)\\n            now_ans += 1\\n    else:\\n        if now_ans > ans:\\n            ans = now_ans\\n        lower = []\\n        now_ans = 0\\n\\nif now_ans > ans:\\n    ans = now_ans\\n\\nprint(ans)\", \"input()\\n\\nll = list(input())\\n\\ndd = {}\\n\\n\\ndef is_up(s):\\n    return s.lower() != s\\n\\n\\ndef is_lo(s):\\n    return s.lower() == s\\n\\n\\nma = 0\\n\\n\\nfor i in range(len(ll)):\\n    if is_up(ll[i]):\\n        dd = {}\\n    else:\\n        c = ll[i]\\n        if c not in dd:\\n            dd[c] = 1\\n        ma = max(len(dd), ma)\\n\\nma = max(len(dd), ma)\\n\\nprint(ma)\\n\", \"import re\\nn=int(input())\\ns=input()\\na=re.split('[A-Z]+',s)\\nans=0\\nfor i in a:\\n\\tans=max(ans,len(set(i)))\\nprint(ans)\", \"n = int(input())\\ns = input()\\na = [set()]\\nk = 0\\nfor i in range(len(s)):\\n    if s[i].upper() == s[i] and a[-1] != set():\\n        k += 1\\n        a.append(set())\\n    else:\\n        if s[i].lower() == s[i] and s[i] not in a[-1]:\\n            a[-1].add(s[i])\\nprint(max([len(x) for x in a]))\\n\", \"input()\\ns = input()\\narr = []\\ntemp = ''\\nfor x in s:\\n\\tif(ord(x) <= ord('Z')):\\n\\t\\tif(temp != ''):\\n\\t\\t\\tarr.append(temp)\\n\\t\\t\\ttemp = ''\\n\\telse:\\n\\t\\ttemp += x\\nif(temp != ''):\\n\\tarr.append(temp)\\n\\nans = 0\\nfor y in arr:\\n\\tans = max(ans, len(set(list(y))))\\nprint(ans)\", \"n = int(input())\\ns = str(input())\\n\\nres = [[]]\\n\\nfor i in s:\\n\\tif ord(i) >= ord('A') and (ord(i)) <= ord('Z'):\\n\\t\\tres.append([])\\n\\telse:\\n\\t\\tres[-1].append(i)\\n\\nmx = 0\\n\\nfor i in res:\\n\\tmx = max(mx, len(set(i)))\\n\\nprint(mx)\", \"import re\\n\\nn = int(input())\\ns = input()\\nprint(max([len(set(x)) for x in re.split('[A-Z]', s)]))\\n\", \"def solve():\\n\\n    n = int(input())\\n    sentence = input()\\n\\n    alpha = \\\"abcdefghijklmnopqrstuvwxyz\\\"\\n    alp = [[]]\\n    \\n    for st in sentence:\\n        if st in alpha:\\n            if st not in alp[-1]:\\n                alp[-1].append(st)\\n        else:\\n            alp.append([])\\n\\n    #print(alp)\\n    return max([len(e) for e in alp])\\n\\nprint(solve())\\n\", \"import re\\nn = int(input())\\ns = input()\\nans = 0\\nss = re.split(r'[A-Z]+', s)\\nprint(max(list(map(len, list(map(set, ss))))))\\n\\n\\\"\\\"\\\"\\n11\\naaaaBAAAVDAaabAbA\\n\\\"\\\"\\\"\\n\", \"size = int(input())\\nn = input()\\n\\nrez = []\\nans = 0\\nyet = 0\\n\\nfor i in n:\\n    if ord(i) > 96 and i not in rez:\\n        rez.append(i)\\n        yet += 1\\n    elif ord(i) < 96:\\n        rez = []\\n        yet = 0\\n    ans = max(ans,yet)\\n\\nprint(ans)\\n\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n\\n\\\"\\\"\\\"\\n\\\"\\\"\\\"\\n\\n# import {{{\\nfrom collections import ChainMap\\nfrom collections import Counter\\nfrom collections import defaultdict\\nfrom collections import deque\\nfrom collections import namedtuple\\nimport bisect\\nimport copy\\nimport decimal\\nimport fractions\\nimport functools\\nimport heapq\\nimport itertools\\nimport math\\nimport operator\\nimport pprint\\nimport random\\nimport re\\nimport sys\\nimport time\\n\\ntry:\\n    import numpy as np\\n    import scipy as sp\\nexcept:\\n    pass\\n# }}}\\n\\n# util {{{\\ndef is_odd(x):\\n    return x % 2 == 1\\n\\ndef is_even(x):\\n    return x % 2 == 0\\n\\ndef cmp(x, y):\\n    return (x > y) - (x < y)\\n\\ndef sgn(x):\\n    return cmp(x, 0)\\n\\ndef clamp(x, lo, hi):\\n    assert lo <= hi\\n    if x < lo:\\n        return lo\\n    elif x > hi:\\n        return hi\\n    else:\\n        return x\\n\\ndef chmax(xmax, x):\\n    if x > xmax:\\n        return x, True\\n    else:\\n        return xmax, False\\n\\ndef chmin(xmin, x):\\n    if x < xmin:\\n        return x, True\\n    else:\\n        return xmin, False\\n\\nsys.setrecursionlimit(100000)\\n# }}}\\n\\n# \\u9069\\u5b9c\\u8abf\\u6574\\nPINF = float(\\\"inf\\\")\\nNINF = float(\\\"-inf\\\")\\nEPS  = 1e-9\\n\\n\\n\\ndef main():\\n    N = int(input())\\n    S = input()\\n\\n    sets = []\\n\\n    s = set()\\n    for c in S:\\n        if c.isupper():\\n            if s:\\n                sets.append(s)\\n            s = set()\\n        else:\\n            s.add(c)\\n    if s:\\n        sets.append(s)\\n\\n    ans = len(max(sets, key=len)) if sets else 0\\n    print(ans)\\n\\ndef __starting_point(): main()\\n\\n__starting_point()\", \"n=int(input())\\ns=str(input())\\nl=[0]\\nfor i in range(len(s)):\\n    if ord(s[i])>=65 and ord(s[i])<=90:\\n        l.append(i)\\nans=0\\nl.append(n)\\nfor i in range(len(l)-1):\\n    ls=[]\\n    for j in range(l[i],l[i+1]):\\n        if s[j] not in ls and (ord(s[j])>=97 and ord(s[j])<=122):\\n            ls.append(s[j])\\n    ans=max(ans,len(ls))\\n    #print(ls)\\nprint(ans)\", \"# O(nlogn)\\ndef main():\\n  n = int(input())\\n  s = input()\\n  \\n  low_chars = set()\\n  max_power = 0\\n  for c in s:\\n    if c.isupper():\\n      max_power = max(max_power, len(low_chars))\\n      low_chars = set()\\n    else:\\n      low_chars.add(c)\\n      \\n  if len(low_chars) > 0:\\n    max_power = max(max_power, len(low_chars))\\n    \\n  print(max_power)\\n  \\nmain()\\n\", \"_ = int(input())\\ns = input()\\nchars = set()\\nmaxval = 0\\nfor c in s:\\n  if c.isupper():\\n    maxval = max(maxval, len(chars))\\n    chars = set()\\n  else:\\n    chars.add(c)\\nmaxval = max(maxval, len(chars))\\n\\nprint(maxval)\", \"input()\\ns=input()\\nx=set()\\na=0\\nl=len(s)\\nfor i in range(0,l):\\n  for j in range(i,l):\\n    ss=s[i:j+1]\\n    if any(chr(i) in ss for i in range(65, 91)):\\n      continue\\n    a=max(a,len(set(ss)))\\nprint(a)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"11\\naaaaBaabAbA\\n\",\n    \"12\\nzACaAbbaazzC\\n\",\n    \"3\\nABC\\n\",\n    \"1\\na\\n\",\n    \"2\\naz\\n\",\n    \"200\\nXbTJZqcbpYuZQEoUrbxlPXAPCtVLrRExpQzxzqzcqsqzsiisswqitswzCtJQxOavicSdBIodideVRKHPojCNHmbnrLgwJlwOpyrJJIhrUePszxSjJGeUgTtOfewPQnPVWhZAtogRPrJLwyShNQaeNsvrJwjuuBOMPCeSckBMISQzGngfOmeyfDObncyeNsihYVtQbSEh\\n\",\n    \"2\\nAZ\\n\",\n    \"28\\nAabcBabcCBNMaaaaabbbbbcccccc\\n\",\n    \"200\\nrsgraosldglhdoorwhkrsehjpuxrjuwgeanjgezhekprzarelduuaxdnspzjuooguuwnzkowkuhzduakdrzpnslauejhrrkalwpurpuuswdgeadlhjwzjgegwpknepazwwleulppwrlgrgedlwdzuodzropsrrkxusjnuzshdkjrxxpgzanzdrpnggdwxarpwohxdepJ\\n\",\n    \"1\\nk\\n\",\n    \"1\\nH\\n\",\n    \"2\\nzG\\n\",\n    \"2\\ngg\\n\",\n    \"2\\nai\\n\",\n    \"20\\npEjVrKWLIFCZjIHgggVU\\n\",\n    \"20\\niFSiiigiYFSKmDnMGcgM\\n\",\n    \"20\\nedxedxxxCQiIVmYEUtLi\\n\",\n    \"20\\nprnchweyabjvzkoqiltm\\n\",\n    \"35\\nQLDZNKFXKVSVLUVHRTDPQYMSTDXBELXBOTS\\n\",\n    \"35\\nbvZWiitgxodztelnYUyljYGnCoWluXTvBLp\\n\",\n    \"35\\nBTexnaeplecllxwlanarpcollawHLVMHIIF\\n\",\n    \"35\\nhhwxqysolegsthsvfcqiryenbujbrrScobu\\n\",\n    \"26\\npbgfqosklxjuzmdheyvawrictn\\n\",\n    \"100\\nchMRWwymTDuZDZuSTvUmmuxvSscnTasyjlwwodhzcoifeahnbmcifyeobbydwparebduoLDCgHlOsPtVRbYGGQXfnkdvrWKIwCRl\\n\",\n    \"100\\nhXYLXKUMBrGkjqQJTGbGWAfmztqqapdbjbhcualhypgnaieKXmhzGMnqXVlcPesskfaEVgvWQTTShRRnEtFahWDyuBzySMpugxCM\\n\",\n    \"100\\nucOgELrgjMrFOgtHzqgvUgtHngKJxdMFKBjfcCppciqmGZXXoiSZibgpadshyljqrwxbomzeutvnhTLGVckZUmyiFPLlwuLBFito\\n\",\n    \"200\\nWTCKAKLVGXSYFVMVJDUYERXNMVNTGWXUGRFCGMYXJQGLODYZTUIDENHYEGFKXFIEUILAMESAXAWZXVCZPJPEYUXBITHMTZOTMKWITGRSFHODKVJHPAHVVWTCTHIVAWAREQXWMPUWQSTPPJFHKGKELBTPUYDAVIUMGASPUEDIODRYXIWCORHOSLIBLOZUNJPHHMXEXOAY\\n\",\n    \"200\\neLCCuYMPPwQoNlCpPOtKWJaQJmWfHeZCKiMSpILHSKjFOYGpRMzMCfMXdDuQdBGNsCNrHIVJzEFfBZcNMwNcFjOFVJvEtUQmLbFNKVHgNDyFkFVQhUTUQDgXhMjJZgFSSiHhMKuTgZQYJqAqKBpHoHddddddddddddddddXSSYNKNnRrKuOjAVKZlRLzCjExPdHaDHBT\\n\",\n    \"200\\nitSYxgOLlwOoAkkkkkzzzzzzzzkzkzkzkkkkkzkzzkzUDJSKybRPBvaIDsNuWImPJvrHkKiMeYukWmtHtgZSyQsgYanZvXNbKXBlFLSUcqRnGWSriAvKxsTkDJfROqaKdzXhvJsPEDATueCraWOGEvRDWjPwXuiNpWsEnCuhDcKWOQxjBkdBqmFatWFkgKsbZuLtRGtY\\n\",\n    \"200\\noggqoqqogoqoggggoggqgooqggogogooogqqgggoqgggqoqogogggogggqgooqgqggqqqoqgqgoooqgqogqoggoqqgqoqgoooqoogooqoogqoqoqqgoqgoqgggogqqqoqoggoqoqqoqggqoggooqqqoqggoggqqqqqqqqqgogqgggggooogogqgggqogqgoqoqogoooq\\n\",\n    \"200\\nCtclUtUnmqFniaLqGRmMoUMeLyFfAgWxIZxdrBarcRQprSOGcdUYsmDbooSuOvBLgrYlgaIjJtFgcxJKHGkCXpYfVKmUbouuIqGstFrrwJzYQqjjqqppqqqqqpqqqjpjjpjqjXRYkfPhGAatOigFuItkKxkjCBLdiNMVGjmdWNMgOOvmaJEdGsWNoaERrINNKqKeQajv\\n\",\n    \"200\\nmeZNrhqtSTSmktGQnnNOTcnyAMTKSixxKQKiagrMqRYBqgbRlsbJhvtNeHVUuMCyZLCnsIixRYrYEAkfQOxSVqXkrPqeCZQksInzRsRKBgvIqlGVPxPQnypknSXjgMjsjElcqGsaJRbegJVAKtWcHoOnzHqzhoKReqBBsOhZYLaYJhmqOMQsizdCsQfjUDHcTtHoeYwu\\n\",\n    \"200\\neTtezDHXMMBtFUaohwuYdRVloYwZLiaboJTMWLImSCrDTDFpAYJsQBzdwkEvcoYfWmKZfqZwfGHigaEpwAVoVPDSkDJsRzjjdyAcqfVIUcwiJuHyTisFCCNHIFyfDWOyMMRtTWmQFCRNtmwMTzQSZdOFfojwvAtxTrSgaDLzzBwDkxPoCYuSxpwRbnhfsERywPyUlJBC\\n\",\n    \"200\\nvFAYTHJLZaivWzSYmiuDBDUFACDSVbkImnVaXBpCgrbgmTfXKJfoglIkZxWPSeVSFPnHZDNUAqLyhjLXSuAqGLskBlDxjxGPJyGdwzlPfIekwsblIrkxzfhJeNoHywdfAGlJzqXOfQaKceSqViVFTRJEGfACnsFeSFpOYisIHJciqTMNAmgeXeublTvfWoPnddtvKIyF\\n\",\n    \"200\\ngnDdkqJjYvduVYDSsswZDvoCouyaYZTfhmpSakERWLhufZtthWsfbQdTGwhKYjEcrqWBOyxBbiFhdLlIjChLOPiOpYmcrJgDtXsJfmHtLrabyGKOfHQRukEtTzwoqBHfmyVXPebfcpGQacLkGWFwerszjdHpTBXGssYXmGHlcCBgBXyGJqxbVhvDffLyCrZnxonABEXV\\n\",\n    \"200\\nBmggKNRZBXPtJqlJaXLdKKQLDJvXpDuQGupiRQfDwCJCJvAlDDGpPZNOvXkrdKOFOEFBVfrsZjWyHPoKGzXmTAyPJGEmxCyCXpeAdTwbrMtWLmlmGNqxvuxmqpmtpuhrmxxtrquSLFYVlnSYgRJDYHWgHBbziBLZRwCIJNvbtsEdLLxmTbnjkoqSPAuzEeTYLlmejOUH\\n\",\n    \"200\\nMkuxcDWdcnqsrlTsejehQKrTwoOBRCUAywqSnZkDLRmVBDVoOqdZHbrInQQyeRFAjiYYmHGrBbWgWstCPfLPRdNVDXBdqFJsGQfSXbufsiogybEhKDlWfPazIuhpONwGzZWaQNwVnmhTqWdewaklgjwaumXYDGwjSeEcYXjkVtLiYSWULEnTFukIlWQGWsXwWRMJGTcI\\n\",\n    \"200\\nOgMBgYeuMJdjPtLybvwmGDrQEOhliaabEtwulzNEjsfnaznXUMoBbbxkLEwSQzcLrlJdjJCLGVNBxorghPxTYCoqniySJMcilpsqpBAbqdzqRUDVaYOgqGhGrxlIJkyYgkOdTUgRZwpgIkeZFXojLXpDilzirHVVadiHaMrxhzodzpdvhvrzdzxbhmhdpxqqpoDegfFQ\\n\",\n    \"200\\nOLaJOtwultZLiZPSYAVGIbYvbIuZkqFZXwfsqpsavCDmBMStAuUFLBVknWDXNzmiuUYIsUMGxtoadWlPYPqvqSvpYdOiJRxFzGGnnmstniltvitnrmyrblnqyruylummmlsqtqitlbulvtuitiqimuintbimqyurviuntqnnvslynlNYMpYVKYwKVTbIUVdlNGrcFZON\\n\",\n    \"200\\nzdqzfjWCocqbUbVYaLrBFEwoQiMdlVssRjIctSenAIqPgPJhjPyvvgRFlplFXKTctqFUPlVyMxEfZDfFbUjOMCYFkrFeoZegnSzuKrbWQqcJWfeFauSqYeSCdiPiWroksbkdskrasekytdvnygetyabnteaybdZAoBntIxZJTTsTblLAosqwHQEXTSqjEQqzNGRgdaVG\\n\",\n    \"200\\nGqxrcpJdPhHQUhCwJAOhrKsIttEjqYjygzoyvslFXvybQiWHjViWlOrHvMlDzWaiurjYKsmlrwqAhjZPHZaFMWFlgFJYntZLgPzuksawCmWOHFyANczsdkkusKLQOOHiJsJDvzsVRaUNWLKMRTbmoLwFOJxakhxsenjkzzucpothHNpNtMMfLdmiFyblVUmeIBdpFYIQ\\n\",\n    \"200\\nGAcmlaqfjSAQLvXlkhxujXgSbxdFAwnoxDuldDvYmpUhTWJdcEQSdARLrozJzIgFVCkzPUztWIpaGfiKeqzoXinEjVuoKqyBHmtFjBWcRdBmyjviNlGAIkpikjAimmBgayfphrstfbjexjbttzfzfzaysxfyrjazfhtpghnbbeffjhxrjxpttesgzrnrfbgzzsRsCgmz\\n\",\n    \"200\\neybfkeyfccebifebaukyeraeuxaeprnibicxknepxurnlrbuyuykexbiycpnbbafxnpbrkctpkteetrfptiyaceoylnclytirfkcxboeyufplnbtbikireyulxfaknppuicnabixrnpoicexcaelttlllttfboniebinulkoxuilpnnkrpectutnctoykpPJsflVwmDo\\n\",\n    \"200\\nfEyHTWhrGQezPcvGDrqJEnPVQRxiaGPbWoPVYGMlGIWuAAWdFzIiRTEjsyivewudtzuiuhulqywpzmdopjykvtkjzlyhhzspmovwHtiMtZYkYBozzkGfGmrizjuQYVaewYqglzMAkQSZERgWPYVxfoGLzNbWAJZutTuGxeBzRIdKAKVPbqlTJVqiKnpFbTWawutdSjux\\n\",\n    \"200\\nutxfRatSRtHcDvHfsBBCwsUFcAmrFxHfbMjWhAjfdoQkNfQWfgQEeBVZJavMlpmptFHJGxBFaHfxLAGcZJsUukXLBMfwWlqnnQxKtgnQDqtiJBnoAnxxFBlPJJnuWkdOzYGBRMwSSrjDAVZqYhtopxDVrBAJsIODCUadfEDDzeyroijgwqhaucmnstclNRVxoTYzMSlK\\n\",\n    \"200\\nYRvIopNqSTYDhViTqCLMwEbTTIdHkoeuBmAJWhgtOgVxlcHSsavDNzMfpwTghkBvYEtCYQxicLUxdgAcaCzOOgbQYsfnaTXFlFxbeEiGwdNvxwHzkTdKtWlqzalwniDDBDipkxfflpaqkfkgfezbkxdvzemlfohwtgytzzywmwhvzUgPlPdeAVqTPAUZbogQheRXetvT\\n\",\n    \"200\\nPUVgmHVAXlBaxUIthvGXCVOuIcukqODzMYigUBAZNJcJoayfRXVFfLgKmHdtevsEjoexdSwqvtAeoiyqjnBKoyKduwPCBNEDdkTpjlOOdOlJIEWovEGoDzwhtITNpVamnXVSxPmZTbuhnEbtebgqYEXFbyagmztkxmcgshnxqrowthegiepvLLUIbBalXAJAbGplWMbt\\n\",\n    \"200\\nPQNfMSHpPaOhjCpYPkOgzCpgOhgsmyaTHrlxgogmhdficyeszcbujjrxeihgrzszsjehsupezxlpcpsemesxcwwwllhisjpnepdoefpdzfptdrmETROYtOUjiUsPwrNkUfmeTFgSIJMjTuCFBgfkTQEYJijBaPnaVltQJhKufDKrdMAFnBflaekZErAuKkGhGMLLOEzZ\\n\",\n    \"200\\nBmrFQLXLcKnPBEdQVHVplsEIsrxSlfEbbYXjMrouIwHSyfqjxoerueuanalzliouwllrhzfytmgtfoxeuhjfaaabwjdlimcluabajcoxwgqjotcjdftwqbxhwjnbwoeillzbftzynhfyyqiuszjreujwyhdrdhyyxsglgdjbtghlqutjstmsaowcqchzbdzoeqIqbQUY\\n\",\n    \"200\\nZlJwrzzglgkjqtmoseaapqtqxbrorjptpejjmchztutkglqjxxqgnuxeadxksnclizglywqmtxdhrbbmooxijiymikyIOlSBShUOGUghPJtSxmToNUHDdQIMoFzPOVYAtLRtXyuOErmpYQFAeKMJKlqZCEVEuhSCCtBnQnOncTqYpaLbhutwhplyJGxtuXQiEfuvOzWr\\n\",\n    \"200\\nNcYVomemswLCUqVRSDKHCknlBmqeSWhVyRzQrnZaOANnTGqsRFMjpczllcEVebqpxdavzppvztxsnfmtcharzqlginndyjkawzurqkxJLXiXKNZTIIxhSQghDpjwzatEqnLMTLxwoEKpHytvWkKFDUcZjLShCiVdocxRvvJtbXHCDGpJvMwRKWLhcTFtswdLUHkbhfau\\n\",\n    \"200\\nDxNZuvkTkQEqdWIkLzcKAwfqvZQiptnTazydSCTIfGjDhLMrlPZiKEsqIdDhgKPAlEvXyzNwWtYorotgkcwydpabjqnzubaksdchucxtkmjzfretdmvlxgklyvicrtftvztsbiUaQorfNIYUOdwQDRsKpxLUiLknbLbinilpPXPTTwLAnXVpMHBaAcKWgDBeOFabPtXU\\n\",\n    \"4\\nabbc\\n\",\n    \"3\\naaa\\n\",\n    \"3\\naba\\n\",\n    \"3\\nabb\\n\",\n    \"3\\nbba\\n\",\n    \"3\\nAaa\\n\",\n    \"3\\nAba\\n\",\n    \"3\\naBa\\n\",\n    \"3\\naAa\\n\",\n    \"3\\naAb\\n\",\n    \"3\\naaA\\n\",\n    \"3\\naaB\\n\",\n    \"3\\nabA\\n\",\n    \"3\\nbbA\\n\",\n    \"3\\nAaA\\n\",\n    \"3\\nBaB\\n\",\n    \"3\\nAAB\\n\",\n    \"3\\nZZZ\\n\",\n    \"5\\naBacd\\n\",\n    \"5\\naAabc\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"17\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"20\\n\",\n    \"0\\n\",\n    \"10\\n\",\n    \"10\\n\",\n    \"20\\n\",\n    \"26\\n\",\n    \"20\\n\",\n    \"19\\n\",\n    \"23\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"10\\n\",\n    \"11\\n\",\n    \"12\\n\",\n    \"13\\n\",\n    \"14\\n\",\n    \"15\\n\",\n    \"16\\n\",\n    \"18\\n\",\n    \"19\\n\",\n    \"20\\n\",\n    \"21\\n\",\n    \"22\\n\",\n    \"23\\n\",\n    \"24\\n\",\n    \"25\\n\",\n    \"26\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"3\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/864/B",
  "starter_code": ""
}