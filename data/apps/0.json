{
  "task_id": "APPS/0",
  "problem_id": 0,
  "prompt": "An accordion is a string (yes, in the real world accordions are musical instruments, but let's forget about it for a while) which can be represented as a concatenation of: an opening bracket (ASCII code $091$), a colon (ASCII code $058$), some (possibly zero) vertical line characters (ASCII code $124$), another colon, and a closing bracket (ASCII code $093$). The length of the accordion is the number of characters in it.\n\nFor example, [::], [:||:] and [:|||:] are accordions having length $4$, $6$ and $7$. (:|:), {:||:}, [:], ]:||:[ are not accordions. \n\nYou are given a string $s$. You want to transform it into an accordion by removing some (possibly zero) characters from it. Note that you may not insert new characters or reorder existing ones. Is it possible to obtain an accordion by removing characters from $s$, and if so, what is the maximum possible length of the result?\n\n\n-----Input-----\n\nThe only line contains one string $s$ ($1 \\le |s| \\le 500000$). It consists of lowercase Latin letters and characters [, ], : and |.\n\n\n-----Output-----\n\nIf it is not possible to obtain an accordion by removing some characters from $s$, print $-1$. Otherwise print maximum possible length of the resulting accordion.\n\n\n-----Examples-----\nInput\n|[a:b:|]\n\nOutput\n4\n\nInput\n|]:[|:]\n\nOutput\n-1",
  "solutions": "[\"s = input()\\nn = len(s)\\nind = -1\\nf = False\\nfor i in range(n):\\n    if s[i] == '[':\\n        f = True\\n    elif s[i] == ':':\\n        if f:\\n            ind = i\\n            break\\nbind = -1\\nf = False\\nfor i in range(n-1,-1,-1):\\n    if s[i] == ']':\\n        f = True\\n    elif s[i] == ':':\\n        if f:\\n            bind = i\\n            break\\n# print(ind,bind)\\nif ind == -1 or bind == -1:\\n    print(-1)\\nelif ind >= bind:\\n    print(-1)\\nelse:\\n    ans = 4\\n    for i in range(ind+1,bind):\\n        if s[i] == '|':\\n            ans += 1\\n    print(ans)\\n\", \"def main():\\n    s = input()\\n    \\n    if s.count('[') == 0 or s.count(']') == 0:\\n        print(-1)\\n        return\\n    \\n    t = s[s.find('['):s.rfind(']')+1]\\n    \\n    if t.count(':') < 2:\\n        print(-1)\\n        return\\n    \\n    t = t[t.find(':'):t.rfind(':')+1]\\n    print(4 + t.count('|'))\\n\\nmain()\", \"s = input()\\nif '[' in s:\\n    s = s[s.find('[') + 1:]\\n    if ']' in s:\\n        s = s[:s.rfind(']')]\\n        if s.count(':') >= 2:\\n            s = s[s.find(':') + 1 : s.rfind(':')]\\n            print(s.count('|') + 4)\\n\\n        else:\\n            print(-1)\\n    else:\\n        print(-1)\\nelse:\\n    print(-1)\", \"import sys\\ns = input()\\nst = s.find('[')\\nif st==-1: print((-1)); return\\ns = s[st+1:]\\n#print(s)\\nst = s.find(':')\\nif st==-1: print((-1)); return\\ns = s[st+1:]\\n#print(s)\\ns = s[::-1]\\nst = s.find(']')\\nif st==-1: print((-1)); return\\ns = s[st+1:]\\n#print(s)\\nst = s.find(':')\\nif st==-1: print((-1)); return\\ns = s[st+1:]\\n#print(s)\\nx = s.count('|')\\nprint(x+4 if x>=0 else -1)\\n\", \"s = input()\\n\\nsb,eb,sc,ec = -1, -1, -1, -1\\n\\nfor i in range(len(s)):\\n\\tif s[i] == '[' and sb == -1:\\n\\t\\tsb = i\\n\\telif s[i] == ']':\\n\\t\\teb = i\\n\\telif s[i] == ':' and sc == -1 and sb!=-1:\\n\\t\\tsc = i\\n\\nif eb <= sb or sc>eb:\\n\\tprint(-1)\\nelif sb ==-1 or eb==-1 or sc==-1:\\n\\tprint(-1)\\nelse:\\n\\tfor i in range(sc+1, eb):\\n\\t\\tif s[i] == ':':\\n\\t\\t\\tec = i\\n\\tif ec == -1:\\n\\t\\tprint(-1)\\n\\telse:\\n\\t\\tcnt = 0\\n\\t\\tfor i in range(sc,ec):\\n\\t\\t\\tif (s[i] == '|'):\\n\\t\\t\\t\\tcnt += 1\\n\\t\\tprint(cnt+4)\", \"s = input()\\nt_d = 0\\ntry:\\n    left = -1\\n    was_b = False\\n    for i in range(len(s)):\\n        if s[i] == '[' and not was_b:\\n            was_b = True\\n            continue\\n        if s[i] == ':' and was_b:\\n            left = i\\n            break\\n        t_d += 1\\n    if left == -1:\\n        raise ArithmeticError()\\n    right = -1\\n    was_b = False\\n    for i in range(len(s) - 1, -1, -1):\\n        if s[i] == ']' and not was_b:\\n            was_b = True\\n            continue\\n        if s[i] == ':' and was_b:\\n            right = i\\n            break\\n        t_d += 1\\n    if right == -1 or right <= left:\\n        raise ArithmeticError()\\n    for i in range(left + 1, right):\\n        if s[i] != '|':\\n            t_d += 1\\n    print(len(s) - t_d)\\nexcept:\\n    print(-1)\\n        \\n\", \"s = input()\\n\\nmode = 0\\nl = len(s)\\nr = -1\\nfor i in range(len(s)):\\n    if mode == 0:\\n        if s[i] == \\\"[\\\":\\n            mode = 1\\n    if mode == 1:\\n        if s[i] == \\\":\\\":\\n            l = i\\n            break\\n\\nmode = 0\\nfor i in range(len(s)-1, -1, -1):\\n    if mode == 0:\\n        if s[i] == \\\"]\\\":\\n            mode = 1\\n    if mode == 1:\\n        if s[i] == \\\":\\\":\\n            r = i\\n            break\\n    \\nif l >= r:\\n    print(-1)\\nelse:\\n    c = 0\\n    for i in range(l+1, r):\\n        if s[i] == \\\"|\\\":\\n            c += 1\\n    print(c+4)\\n\", \"s = input()\\n\\nf1 = False\\nf2 = False\\nl1 = -1\\nfor l in range(len(s)):\\n    if f1 == False and s[l] == '[':\\n        f1 = True\\n    elif f1 == True and s[l] == ':':\\n        f2 = True\\n        l1 = l\\n        break\\ng1 = False\\ng2 = False\\nr1 = -1\\nfor r in range(len(s) - 1, -1, -1):\\n    if g1 == False and s[r] == ']':\\n        g1 = True\\n    elif g1 == True and s[r] == ':':\\n        g2 = True\\n        r1 = r\\n        break\\nif (l1 == -1 or r1 == -1) or (r1 <= l1):\\n    print(-1)\\n    \\nelse:\\n    ans = 4\\n    for i in range(l1 + 1, r1):\\n        if s[i] == '|': ans += 1\\n    print(ans)\", \"s=input()\\npos1=-1\\npos2=-1\\npos3=-1\\npos4=-1\\nfor i in range(0,len(s)):\\n    if(s[i]=='['):\\n        pos1=i\\n        break\\nfor i in range(len(s)-1,pos1,-1):\\n    if(s[i]==']'):\\n        pos2=i\\n        break\\nfor i in range(pos1,pos2+1):\\n    if(s[i]==':'):\\n        pos3=i\\n        break\\nfor i in range(pos2,pos3,-1):\\n    if(s[i]==':'):\\n        pos4=i\\n        break\\n    \\nif(pos1==-1 or pos2==-1 or pos3==-1 or pos4==-1 or len(s)<4):\\n    print('-1')\\nelse:\\n    c=0\\n    for j in range(pos3,pos4):\\n        if(s[j]=='|'):\\n            c=c+1\\n    print(c+4)\\n\", \"def ii():\\n    return int(input())\\ndef mi():\\n    return list(map(int, input().split()))\\ndef li():\\n    return list(mi())\\n\\ns = input().strip()\\nn = len(s)\\nans = -1\\nfb = s.find('[')\\nif fb >= 0:\\n    fc = s.find(':', fb)\\n    if fc >= 0:\\n        lb = s.rfind(']')\\n        if lb > fc:\\n             lc = s.rfind(':', 0, lb)\\n             if lc > fc:\\n                ans = 4 + s[fc:lc].count('|')\\nprint(ans)\\n\", \"s = input()\\n\\ndef sovle(s):\\n\\n    i1 = s.find('[')\\n    if i1 == -1:\\n        return -1\\n    s = s[i1+1:]\\n    i2 = s.find(':')\\n    if i2 == -1:\\n        return -1\\n\\n    s = s[i2+1 :]\\n    i1 = s.rfind(']')\\n    if i1 == -1:\\n        return -1\\n    s = s[:i1]\\n    i2 = s.rfind(':')\\n    if i2 == -1:\\n        return -1\\n    s = s[:i2]\\n    x = s.count('|')\\n    return x+4\\n\\nprint(sovle(s))\", \"def solve(s):\\n    if s.find('[') == -1:\\n        return -1\\n    s = s[s.find('['):]\\n    #print(s)\\n    if s.find(':') == -1:\\n        return -1\\n    s = s[s.find(':') + 1:]\\n    #print(s)\\n    if s.find(']') == -1:\\n        return -1\\n    s = s[:s.rfind(']')]\\n    #print(s)\\n    if s.find(':') == -1:\\n        return -1\\n    s = s[:s.rfind(':')]\\n    #print(s)\\n    return s.count('|') + 4\\n\\ns = input()\\nprint(solve(s))\", \"s=input()\\ni=s.find('[')\\nif i==-1:\\n    print(-1)\\n    return\\ns=s[i:]\\ni=s.rfind(']')\\n\\nif i==-1:\\n    print(-1)\\n    return\\ns=s[:i+1]\\nl,h=0,0\\nfor i,d in enumerate(s):\\n    if d==':':\\n        l=i\\n        break\\nfor i,d in enumerate(s):\\n    if d==':':\\n        h=i\\nif l==h:\\n    print(-1)\\n    return\\nc=0\\nfor i in range(l+1,h):\\n    if s[i]=='|':\\n        c+=1\\nprint(c+4)\\n\", \"from sys import stdin\\ns=stdin.readline().strip()\\nx=-1\\nfor i in range(len(s)):\\n    if s[i]==\\\"[\\\":\\n        x=i\\n        break\\ny=-1\\nfor i in range(len(s)-1,-1,-1):\\n    if s[i]==\\\"]\\\":\\n        y=i\\n        break\\nif x==-1 or y==-1 or y<x:\\n    print(-1)\\n    return\\nx1=-1\\nfor i in range(x,y):\\n    if s[i]==\\\":\\\":\\n        x1=i\\n        break\\ny1=-1\\nfor i in range(y-1,x,-1):\\n    if s[i]==\\\":\\\":\\n        y1=i\\n        break\\nif x1==-1 or y1==-1 or y1<=x1:\\n    print(-1)\\n    return\\nans=4\\nfor i in range(x1,y1):\\n    if s[i]==\\\"|\\\":\\n        ans+=1\\nprint(ans)\\n\", \"s = str(input().strip())\\ni = 0\\nn = len(s)\\nwhile i < n and s[i] != '[':\\n    i+=1\\nif(i == n):\\n    print(-1)\\n    return\\nj = n-1\\nwhile j > i and s[j] != ']':\\n    j-=1\\nif(j <= i):\\n    print(-1)\\n    return\\nwhile i < j and s[i] != ':':\\n    i+=1\\nif(i == j):\\n    print(-1)\\n    return\\nwhile j > i and s[j] != ':':\\n    j-=1\\nif(j == i):\\n    print(-1)\\n    return\\nk = i+1\\nc = 0\\nwhile k < j:\\n    if(s[k] == '|'):\\n        c+=1\\n    k+=1\\nprint(c+4)\\n\", \"import sys\\ns = input()\\nl = len(s)\\ns_list = [x for x in s]\\n\\ncounter = 0\\ntry:\\n\\ta = s_list.index('[')\\n\\tcounter += a\\n\\ts_list = s_list[a + 1:]\\nexcept:\\n\\tprint(-1)\\n\\treturn\\n\\ntry:\\n\\ta = s_list.index(':')\\n\\tcounter += a\\n\\ts_list = s_list[a + 1:]\\nexcept:\\n\\tprint(-1)\\n\\treturn\\n\\ns_list_rev = s_list.copy()\\ns_list_rev.reverse()\\n\\ntry:\\n\\tb = s_list_rev.index(']')\\n\\tcounter += b\\n\\ts_list_rev = s_list_rev[b+1:]\\nexcept:\\n\\tprint(-1)\\n\\treturn\\n\\ntry:\\n\\tb = s_list_rev.index(':')\\n\\tcounter += b\\n\\ts_list_rev = s_list_rev[b+1:]\\nexcept:\\n\\tprint(-1)\\n\\treturn\\ns_list_rev = [x for x in s_list_rev if x != '|']\\ncounter += len(s_list_rev)\\nprint(l - counter)\", \"MOD = 10**9 + 7\\nI = lambda:list(map(int,input().split()))\\n\\ns = input()\\nres = 0\\nn = len(s)\\nst = -1\\ne = -1\\nfor i in range(n):\\n    if s[i] == '[':\\n        st = i\\n        break\\nfor i in range(n-1, -1, -1):\\n    if s[i] == ']':\\n        e = i\\n        break\\n# print(st , e)\\nif st > e or st == -1 or e == -1:\\n    print(-1)\\n    return\\na = -1\\nb = -1\\nfor i in range(st, e):\\n    if s[i] == ':':\\n        a = i\\n        break\\nfor i in range(e, st, -1):\\n    if s[i] == ':':\\n        b = i\\n        break\\nif a == b or a == -1 or b == -1:\\n    print(-1)\\n    return\\ncount = 0\\nfor i in range(a, b):\\n    if s[i] == '|':\\n        count += 1\\nprint(4 + count)\", \"s=input()\\nst=\\\"\\\"\\nidx=-1\\nfor i in range(len(s)):\\n    if s[i]=='[':\\n        idx=i\\n        break\\nif idx==-1:\\n    print(-1)\\n    return\\nidxl=-1\\nfor i in range(len(s)-1,-1,-1):\\n    if s[i]==']' and i>idx:\\n        idxl=i\\n        break\\nif idxl==-1:\\n    print(-1)\\n    return\\ncol=col2=-1\\nfor i in range(len(s)):\\n    if s[i]==':' and i>idx and i<idxl:\\n        col=i\\n        break\\nif col==-1:\\n    print(-1)\\n    return\\nfor i in range(len(s)-1,-1,-1):\\n    if s[i]==':' and i>col and i<idxl:\\n        col2=i\\n        break\\nif col2==-1:\\n    print(-1)\\n    return\\nans=0\\nfor i in range(col+1,col2):\\n    if s[i]=='|':\\n        ans+=1\\nprint(4+ans)\\n    \\n\\n\\n\", \"s = input()\\nrev = s[::-1]\\n\\nleft = s.find(\\\"[\\\")\\nif left != -1:\\n    left = s.find(\\\":\\\", left)\\n\\nright = rev.find(\\\"]\\\")\\nif right != -1:\\n    right = rev.find(\\\":\\\", right)\\n\\nif left == -1 or right == -1:\\n    print(-1)\\n    return\\nright = len(s)-right-1\\nif left >= right:\\n    print(-1)\\n    return\\n\\nprint(4 + s[left:right].count(\\\"|\\\"))\\n\", \"def ba(s):\\n    c1 = s.find('[')\\n    c2 = s.find(':', c1+1)\\n    c3 = s.rfind(']', c2+1)\\n    c4 = s.rfind(':', c2+1, c3)\\n    if -1 in [c1, c2, c3, c4]:\\n        return -1\\n    return s.count('|', c2, c4)+4\\n\\n\\nprint(ba(input()))\\n\\n\", \"s = input()\\nif '[' in s and ']' in s:\\n    a = s.index('[') + 1\\n    b = len(s)-s[::-1].index(']') - 1\\nelse:\\n    print(-1)\\n    return\\ns = s[a:b]\\nif s.count(':') >= 2:\\n    a = s.index(':')+1\\n    b = len(s)-s[::-1].index(':')-1\\nelse:\\n    print(-1)\\n    return\\nc = 0\\nfor el in s[a:b]:\\n    if el =='|':\\n        c += 1\\nprint(4 + c)\", \"s = input()\\n\\nb = [0]*len(s)\\n\\nob = 0\\ncc = 0\\np = -1\\nq = -1\\n\\ncount = 0\\n\\nfor ind,c in enumerate(s):\\n    if c == '[':\\n        ob = 1\\n    elif c == ':' and p >= 0:\\n        q = ind\\n    elif c == ':' and ob == 1 and p < 0:\\n        p = ind\\n    elif c == ']' and q >= 0:\\n        cc = q\\n    elif c == '|':\\n        count += 1\\n    b[ind] = count\\n\\nif cc > 0:\\n    print( 4 + b[cc]-b[p])\\nelse:\\n    print(-1)\\n\", \"s = input()\\nif '[' in s and ']' in s and ':' in s:\\n  e = s.count(':')\\n  if e<2:\\n    print(-1)\\n  else:\\n    a = s.index('[')\\n    b = len(s)-1-s[::-1].index(']')\\n    if b<a:\\n      print(-1)\\n    else:\\n      if s[a+1:b].count(':')<2:\\n        print(-1)\\n      else:\\n        st1 = True\\n        count = 0\\n        for i in range(a+1, b):\\n          if st1 and s[i]==':':\\n            pos1 = i\\n            st1 = False\\n          if s[i]==':':\\n            pos2 = i\\n      \\n        for i in range(pos1+1, pos2):\\n          if s[i]=='|':\\n            count+=1\\n      \\n        print(count+4)\\nelse:\\n  print(-1) \", \"s=input()\\ni1=-1\\ni2=-1\\nk1=-1\\nk2=-1\\nc=0\\nfor i in range(len(s)):\\n  if(s[i]=='['):\\n    i1=i\\n    break\\nfor i in range(len(s)-1,-1,-1):\\n  if(s[i]==']'):\\n    i2=i\\n    break\\nfor i in range(i1,i2+1):\\n  if(s[i]==':'):\\n    k1=i\\n    break\\nfor i in range(i2,i1-1,-1):\\n  if(s[i]==':'):\\n    k2=i\\n    break\\nfor i in range(k1,k2+1):\\n  if(s[i]=='|'):\\n    c+=1\\n\\nif(i1==-1 or i2==-1 or i1>=i2 or k1==-1 or k2==-1 or k1==k2):\\n  print(-1)\\nelse:\\n  print(4+c)\", \"s = input()\\nl = 0\\nend = 0\\ni = 1\\n\\nwhile i <= len(s):\\n    if l == 0 and s[-i] == ']':\\n        l += 1\\n    elif l == 1 and s[-i] == ':':\\n        l += 1\\n        end = len(s) - i\\n        break\\n    i += 1\\n\\nif l < 2:\\n    print(-1)\\n    return\\n\\nfor i in range(0, end):\\n    if l >= 4 and s[i] == '|':\\n        l += 1\\n    elif l == 2 and s[i] == '[':\\n        l += 1\\n    elif l == 3 and s[i] == ':':\\n        l += 1\\n\\nif l >= 4:\\n    print(l)\\nelse:\\n    print(-1)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"|[a:b:|]\\n\",\n    \"|]:[|:]\\n\",\n    \":][:\\n\",\n    \":[]:\\n\",\n    \"[[:]]\\n\",\n    \"[::]\\n\",\n    \"]:|:[\\n\",\n    \":::::]\\n\",\n    \"::::]\\n\",\n    \"::[]\\n\",\n    \"[]\\n\",\n    \"[a|[::]\\n\",\n    \"dsfdsfds\\n\",\n    \":[||]:\\n\",\n    \"::]\\n\",\n    \":::]\\n\",\n    \"[||]\\n\",\n    \":[[[:]]]:\\n\",\n    \"::]::[:]::[::\\n\",\n    \"[:|:]\\n\",\n    \"[::]aaaaaaaa\\n\",\n    \"[[::]|]\\n\",\n    \"[::::\\n\",\n    \"][\\n\",\n    \"[||]][[]\\n\",\n    \"][k:\\n\",\n    \"::|[]\\n\",\n    \"[:\\n\",\n    \"||||\\n\",\n    \"||]ekq\\n\",\n    \"]:|||:]\\n\",\n    \"|||[|||:[m[[n[[[xuy|:[[[:|:[:k[qlihm:ty[\\n\",\n    \"aaaaa[[[[[:[[[[a]]\\n\",\n    \"[hellocodeforces::]\\n\",\n    \"[::]lolxd\\n\",\n    \"sasixyu:[[:||ld[:[dxoe\\n\",\n    \"[:|||:\\n\",\n    \"topkek[::]\\n\",\n    \"[[||]]\\n\",\n    \"[\\n\",\n    \"|[::||::]]a\\n\",\n    \":]\\n\",\n    \"]::]\\n\",\n    \"r|x\\n\",\n    \"|\\n\",\n    \":][:|||\\n\",\n    \"]]::[[]]::\\n\",\n    \"]f:|efw][jz[|[[z][[g]i|[\\n\",\n    \"]::[\\n\",\n    \"|:[[][:cv|\\n\",\n    \":y]j]tz:e[p[\\n\",\n    \"::::\\n\",\n    \"||\\n\",\n    \"]|[hhf[\\n\",\n    \"abide\\n\",\n    \"|c[]][zx]|[[[[j[::nx[|[:ou[u]\\n\",\n    \"|:]\\n\",\n    \"]:|:][:||:]\\n\",\n    \"]:]\\n\",\n    \"d[\\n\",\n    \":|:]\\n\",\n    \"k::]k|iv|]|g[|r[q:|[:[r[cj]||mjm|[|[|[|:[\\n\",\n    \":|f[|e]e:|\\n\",\n    \"][:|:\\n\",\n    \"|rh]|[|:[v|||||i\\n\",\n    \"y:[|[]b[][ug|e[\\n\",\n    \"[:::]\\n\",\n    \"[:]:[:]\\n\",\n    \"::]]:::\\n\",\n    \"[:||:|]\\n\",\n    \"d]k[[::[||[:tpoc[||[:\\n\",\n    \":]||haha||[:\\n\",\n    \":]||ahaha||[:\\n\",\n    \"[][]\\n\",\n    \":|]:::]]|:|||||]]]:|\\n\",\n    \"||:][:||\\n\",\n    \"|:][:\\n\",\n    \"]\\n\",\n    \"[:::\\n\",\n    \"ss:]]n:w:kzxiwpdoce|d:]][:nmw|b:hs\\n\",\n    \"::][::\\n\",\n    \"[:tk]v|hd:h:c[s\\n\",\n    \"md:o:|r:[uuzcov]wy]|[:[imwc\\n\",\n    \":::]w\\n\",\n    \"wd[]jcq[[]f|:\\n\",\n    \":aj::pxblo]]]:o|x|:|]y:wn]:[:v:m\\n\",\n    \"oeq]pp|i:[tan|][:ncsp::\\n\",\n    \"m][js]x]a:l\\n\",\n    \"[:]\\n\",\n    \"[asfd:khj]\\n\",\n    \":i:]f|cau\\n\",\n    \"ljjjsv:h|]o:]k\\n\",\n    \"aaaa\\n\",\n    \"qj|]gd:i:::[|ur[e[e:]ay::k:\\n\",\n    \"qod:|nw]sfr:g|::[]ajs:\\n\",\n    \"]zpgjpy:]:sz|[miz\\n\",\n    \"]ty:|:cjk::c:[[]tm\\n\",\n    \"umfqrr::m]w]g::a|]|::]duhhxmzqs:gbo]br|xz|[g][ou:v[e[u|:y[||k:|[zqd:p:wf:a:gb\\n\",\n    \":j:]xp:pnyh\\n\",\n    \":]|[:\\n\",\n    \"]h:y[u:bg\\n\",\n    \":am:trjm|]e[[[vm[:|pv\\n\",\n    \":[||||||]:\\n\",\n    \":|[:qw[|:yr]c:p][]|n:qql[ulp:ph:|||adcg\\n\",\n    \":a::[vd|vwq|r:][]:|::\\n\",\n    \"|v]efoi::b|ov]:]|||:vk[q]is|[]|ku|]||wk[[|[q::]g|\\n\",\n    \"[w:||j:iiasd]gz||o:yw[::b::[[[m[oe[|oh]jh]:yjwa\\n\",\n    \"||::k[is|m|]|::i\\n\",\n    \"t]g]ney::]hca]:|]|\\n\",\n    \"]g[:]|u[d]\\n\",\n    \"[:[|][\\n\",\n    \":]g|||yoj[:[h]]yys]u:iz:|rn|[:oc:|:[a|gns:||:hkr[idkx|\\n\",\n    \":n:[mb|cb|\\n\",\n    \"[e[]|s:ml:|q[gh[[:anpd[|::[\\n\",\n    \":\\n\",\n    \"|f||]:ng[]j:]::gc\\n\",\n    \"[x|[:l::hc[\\n\",\n    \"em]]|:tu:cw::d:ralw|[]l:f::c\\n\",\n    \"|]\\n\",\n    \"|kjw:j:]y\\n\",\n    \"|[[fu:j\\n\",\n    \":b]l]byp]avhswotk:f[r]:k:::\\n\",\n    \"]c|z||]cya:|yny]]q|g]q::h:|ff]q|jx::]:|]c]:||::rfr]o|hbgtb\\n\",\n    \"|]j:k[su:b|\\n\",\n    \"]]s:|f:ho::s]p:|]]]sd\\n\",\n    \"okje|:e:ti]yl|[r[x]|gt]zgzz[:[]:u:i]:ctml[]w[u:f]]:ltc[n:[k:[g:wdh\\n\",\n    \"a|xg]:mv]:[:::p\\n\",\n    \"y|:]:j[|\\n\",\n    \":rr]a[m]g:[m[e::[f:my:[[::h:]:]q:h[tf[o]nj[j[c:\\n\",\n    \"][:[:[\\n\",\n    \"aaa:|||:]\\n\",\n    \"cyzha::al:zc:o]s\\n\",\n    \"::h]go]\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa[\\n\",\n    \"sa:|cas|[::oq[sn]m:::h]e]dbjh:lllafnt|xly[j]:r::euta|fs[hw[h[[[i\\n\",\n    \"|:[]\\n\",\n    \"][reerf][ybn[g]|i:q:]:[|:]b:xt[\\n\",\n    \"k[h]|a|t|m]mwba[\\n\",\n    \"[||::]\\n\",\n    \"b\\n\",\n    \":|xm:f:b[[|:w]t[[[ht\\n\",\n    \"qyx::ti]o]|\\n\",\n    \"vl::r]i|y:]pi:yicacsqm|:sy|pd:nwu::r|iib]goq\\n\",\n    \"af:r:gett|]t:x:f|iqdo]bm]:[w::x|]:pe:[[\\n\",\n    \"v[t:[q:tmrwta\\n\",\n    \"]:v[|\\n\",\n    \"cl|dyisv::|hn|:fgdm][z[e\\n\",\n    \"w]]::|zc\\n\",\n    \"|trrxb|]|z:t]s|]v|ds]u:|c:z|f|m[]bowp\\n\",\n    \":z]gr[|uvm|ngodriz]f[c]|lfxqg|p]bcoxrfv:k:r::[m|\\n\",\n    \":]o[|]]|t::::]w]:[:|:ro|a::ged[slr:kug:::rww:ei:|m::ah|cwk[v\\n\",\n    \"yx:tx::dqpl|:::]l|]j[y[t|d[:elr:m\\n\",\n    \"d]sp]|d]::|\\n\",\n    \"q|dlfohjzs]:[jnuxy|[]||::]u[[j:\\n\",\n    \"]s]:[co|]m:y:njby\\n\",\n    \"fmnu|n:ynz:|::hk::|::]|]l::|\\n\",\n    \"aaaaaaaaaaaaaa[\\n\",\n    \"f|gzg::cl]\\n\",\n    \"]x\\n\",\n    \"tc|:]ekb:tu\\n\",\n    \"]ujn|]|]j|o|:q:|r:a:u:::sv:]ffrzo\\n\",\n    \"tuyut]j:[u]|ft||:]houmvj[yh:[::f\\n\",\n    \"n:]:][|gpxex|qw[\\n\",\n    \"]gy]]fd|bd::ph::j[]]jc|eqn]|lj]:s|ew:c||:[gksv\\n\",\n    \"::p:oqv:|:\\n\",\n    \"os::a]un:k||ri:n:d]:who|]urx:yat::]|lm:m]q]iua|:s[g::]|:\\n\",\n    \"uy|dzq]dkobuo:c|]]c]j:|]wtssv:|:lkn][sb[dw::|m|z:\\n\",\n    \"euj|eip:[bgqn[bjmivsxd][j][[[]dsk:y\\n\",\n    \"]:||k:]sf::[::|yn]:xv]pg[|q[]:[wpv:|y\\n\",\n    \"clpy::||:fs||[w]]::||\\n\",\n    \"u:ft:]|c]:q\\n\",\n    \"rr::m[]|:j:uq[:t|[:trxbtq:|hj[rf\\n\",\n    \"[h[|k|[hb|\\n\",\n    \":|e|o:]g:[:w\\n\",\n    \"::]:asl:\\n\",\n    \"z:::e|r]j|n]|:f]]\\n\",\n    \":ml|r:qm|:n]b::|:]]trak:ku]:::k]\\n\",\n    \"]zp\\n\",\n    \"|wu[ehma]]ced]d[f[m][]b]:|:|::|fbz\\n\",\n    \"uyme:|oew||mvo[[|e]\\n\",\n    \"|zh]|]dmg|]:rtj:r|]:\\n\",\n    \"kj:t[|[|oph]qt:h[rq[[bu[|]m|:||[hvh[\\n\",\n    \":[p|vg:[|:nu[:olj::p[o[qr[ltui\\n\",\n    \"]|pv:|[|d]][:|ddhn::n|:\\n\",\n    \"fud:e:zmci:uh]\\n\",\n    \"d:x|]:::\\n\",\n    \"lovs:iq:[][[k\\n\",\n    \"xf::osgw:kmft:gvy:::]m\\n\",\n    \"|hb:qtxa:nx::wnhg]p\\n\",\n    \"]:]:fcl|]a::::[z|q[|jw\\n\",\n    \"np|:]q:xlct[|]hw:tfd|ci:d\\n\",\n    \"nl]nz:][tpm:ps[jfx|:tfzekk\\n\",\n    \"e:n|al]:i|hss:c:|v|b[u]efg[]k][u||vv:ma:ytgw:fjv|ve\\n\",\n    \"pw:m|qu:|[gb[:]liv:an:oj:cavwjk[dxr:|po:ny|hu:mawqxv::[::\\n\",\n    \"|]:i:|[:[q|x|lmetc[|:[|c:\\n\",\n    \":z::vy[lcyjoq\\n\",\n    \"::]v]\\n\",\n    \":wr|ze]d:wt:]]|q:c[::sk:\\n\",\n    \"]::|]:[|dob|]ke:ghk[::uxycp|:fh:pxewxaet[\\n\",\n    \"jf:]e:i:q]|w:nrk:hvpj|m]:\\n\",\n    \"vhbato:s|:]vhm:o|n[hfj]pgp|bs]d|:cxv\\n\",\n    \"::b|zltkdkulzx[]ocfqcmu::r[::s\\n\",\n    \"]fq|m::|[zk][:|::hxy[u::zw|::n|a\\n\",\n    \"b:|xjehu]ywpi:|][ye]:[:[:\\n\",\n    \"q:wdd::i:]\\n\",\n    \"v::mp:l::[x]:w[[ehu\\n\",\n    \"g]:kobbxo:[dy]:daz[[|eqe::|\\n\",\n    \"vz:naw[:d[][f[[wgzdki]|ct[::[yh|w|bgxd[x:q[[zm][i:r[r|[:a[][|yx][r|:\\n\",\n    \"s::dul::i[mwln:it::[|g:eh:xs|ew[bp|g]ak|ems:|:gydoq:[dg:]]:qr|[:[p[:q:[i[:]:k\\n\",\n    \":][]||[|:|\\n\",\n    \":n[]ncg\\n\",\n    \"j:m::|:||]u:[v|z]]:\\n\",\n    \"]:svzta[|ey|s|oi[[gmy::ayi]\\n\",\n    \":[|]did:]p:[|::|olz[:albp[[k:|||\\n\",\n    \"|::|]:|]|:\\n\",\n    \":|q|x]zt:]:kw:cs|fn]]jadp|cq\\n\",\n    \"ka:|u:|omvu:scrjwzt|]e|[[|k:h:we]::ou:]bxq|][dv:\\n\",\n    \"mas:]c]a::a:[g:tiejt[rvh:zz::qwufm[\\n\",\n    \":k:::g|y]b|c]qwva|::v\\n\",\n    \"sn::zeno:[ft]l|y|m|[||bz\\n\",\n    \"t:nwkx:wg:x|:vr]|uk[[|]x|:gz:\\n\",\n    \"ym:dvmmajd:t]|[hqx]d:l[\\n\",\n    \"::[da][ik]]v:i\\n\",\n    \":|yyu]:[lj|aa[]vfenav[:ji|\\n\",\n    \"gt:|]|k]:|[hikmw|hz|a[\\n\",\n    \"z:::]oqatxzhf:gdpr]:]:ls]art[zq\\n\",\n    \":o:]]u:evfw::]:c::gdu[lus:ej:[|:ruam:\\n\",\n    \":]::k]d|:hx[]pop][:::u[s:o[\\n\",\n    \"::sry]\\n\",\n    \"y:]:[[i]iy:\\n\",\n    \"||j:]::x|:f:l\\n\",\n    \":]]:d\\n\",\n    \"l]b:][::]]z|ysyifc[:s|ag[hngo|:x:rhqn|ru\\n\",\n    \"::q:ghi]:y:gtl:o:|:\\n\",\n    \"|j::lq:ot[]]c[|]|y[bxxqgl[]]]l[g:[|dg::hl:c\\n\",\n    \"yk:t:ez|b:i:ze:[mt[[[]ochz:\\n\",\n    \"[iy]u|bdr\\n\",\n    \":|stnr|t:x:oa]|ov[v]::jv[]to:[\\n\",\n    \"[a|u\\n\",\n    \"::|]]\\n\",\n    \"sv:sxjxf]|::]bij:]:okugd:]qlg::s:c[|:dk\\n\",\n    \"pfk[w:ow[|zz:|e::|ovvy:|y:vndh:::i:d]|[[qyn:::[||::]i:|:|]abb:ut]dxva:]ppkymtk|wyg:divb:[[l:c[jy|\\n\",\n    \":rv::::lybr:|e:e:|iqtzgd::xhw]l]]:[aqa]d]:my[]]uo:d::s[a[:[[\\n\",\n    \"]|rhs:p]:z::t[|vfr]]iu[ktw]j||a[d::ttz|ez[[:::k\\n\",\n    \"rw|oe]gq]mv:]]:]:cb:s:z|:]]:g:eri\\n\",\n    \":|][|]jknnx]f[w|n|\\n\",\n    \"::]t:np]:n]|jkn]:jy:|:c:]]]t||k|sm::c\\n\",\n    \":|[u]]ncc::[e:|][]l[][]p:un[w:cr:fa]dnud[tx:gz||so|||]j[wpr]b:ik:ulm[nab::u:yoo\\n\",\n    \"vu:]|ar|q|mwyl|]tr:qm:k:[|::jc]zzf\\n\",\n    \"lvyn]zm:q:vcg[:]n]jzhmdi\\n\",\n    \"]:l:|]mm\\n\",\n    \"z:qqh|]k\\n\",\n    \"]wsjx:p:hwk:ckjnb]js:w::|:|r:e]r|j]x\\n\",\n    \":]k:vkb:]]]|]ciljah:bc\\n\",\n    \"[qf:d]nvex|i|n|z[z]]gsw:pnnc:lw:bofpt\\n\",\n    \":]y:qc||tg|::y[::[[l]xceg:|j[edpf[j|:bmy:\\n\",\n    \"rszfx:pf|h]:e:wi[\\n\",\n    \"r:::xez:y]nrt:\\n\",\n    \"d::fftr::u:kug][ea:tu:ari][\\n\",\n    \"|bvff||:m]:|i|::p|[\\n\",\n    \"a:]a[:\\n\",\n    \"]|]|]:::[]\\n\",\n    \":::[||]|[]\\n\",\n    \":|:][::|\\n\",\n    \"[||::||]\\n\",\n    \"]||:::]]\\n\",\n    \"::i|hack|myself::[]\\n\",\n    \"m|:::|:z:n:]cepp\\n\",\n    \"::n::itzc:]:abfjlmlhubk[|::[hm:x[fg|b|:axss:r[c\\n\",\n    \"c:m:xbw]m|[hm:oofub\\n\",\n    \"]wvihpdy::vn:]]:|hqiaigj[\\n\",\n    \"omi]cb:s]kxzrjhi]:o\\n\",\n    \"o|utkq|:j:]w:\\n\",\n    \"abc\\n\",\n    \"xil]x]:hhtlz|:k:t:[pdv|ne]jyy|:sbd::jt:::|jgau:|\\n\",\n    \":]:|:]|]:]\\n\",\n    \":]]|[fxy\\n\",\n    \"q:t:|\\n\",\n    \":cu:lrcc[a|mij][o]]:x:ej\\n\",\n    \"sn:c:d]]|s]::e\\n\",\n    \"[gp[]\\n\",\n    \"||]tzs:|:]ta|jhvpdk\\n\",\n    \":os|:hj:\\n\",\n    \"[|h::]]]qqw:dpp::jrq:v:[:z:[b:\\n\",\n    \":c]:k:ugqzk:z::[]\\n\",\n    \"gn]wmt]lck]::|yk]lbwbxw]:az:|:ln::|b\\n\",\n    \":lmn:gs|muauf[[p]:xjoo:|x:lsdps:go[d|l|\\n\",\n    \"sw|]:|::x]ff\\n\",\n    \"t:b:[d:vzei[||e|uo]]\\n\",\n    \":l:::ha]]:g||t:]:ky||dbl]:]:q:m||g:]ta\\n\",\n    \"::::[|:|::\\n\",\n    \"]]|[k:f]||t]wg:b]]:[o[|e]hroomwxdph]|u]::[j[h:b|[mr:dn[|n[[yxoh:tf:[a[||[:::|dz\\n\",\n    \"[p||yi::u:::r|m:[\\n\",\n    \":kew:u]blgozxp:::]a]tp|g\\n\",\n    \"wsn]:ig::||:fc]v|t:yn:uaurphuj|]r|uut]:::]n]:e:pg]]]wb:]]:o||:d:p[::|:]g:k:wxcg|c[:k|w|||]mcy\\n\",\n    \"]up::]dcte]|ldnz|t:|]|iao:r:|v]\\n\",\n    \":[nt]|::q:ant|xijg\\n\",\n    \"r]:kxu[][qe[:y:x\\n\",\n    \":z]|[[w]:\\n\",\n    \"og|:]vxfpmq]]ax]zvx:::hm:htnicv|:hs:]ptpc[j|t]d\\n\",\n    \"]g]sl:pqsqy:b::]rj:jl]]|n:y]:\\n\",\n    \"ejwmbu:fqkp]eb:]\\n\",\n    \"xq]|mnn:\\n\",\n    \"gsl:]o:|f[e][wxmg[nlbn[\\n\",\n    \"dt:]y:jta:zu]dwxq|ki\\n\",\n    \"zr:s]ocaf:|ruqd:::|lbek[:y[gb::k|y:\\n\",\n    \"n:]m]e|]:wr:iny:s]or]o:o]|:]]w|g]pp|ff\\n\",\n    \"::y:qjf:am]]]n]xrghkm|::|\\n\",\n    \":||l]::||:son|::]pq|]]w|:y|]n:\\n\",\n    \":]j]pons\\n\",\n    \"qks]b]wtqjih:d]]jjz:|]:|i:[]b::\\n\",\n    \"l:vw|v|s|:ei[]jc\\n\",\n    \"jyflberp:et]q:x]:n|ww:f:d||c||:aq|:\\n\",\n    \":s]::]p|\\n\",\n    \":w:\\n\",\n    \"|i|:]:p\\n\",\n    \"t]c:[[qt]t::v:x:|[::vaiejt|h\\n\",\n    \":eiiup]tldk\\n\",\n    \"v:j]pajb\\n\",\n    \":x|b:i[d]\\n\",\n    \"[d:eest:t|w|cy\\n\",\n    \":ff[::[|lsfp|k]a[x:f\\n\",\n    \"bk[kl:|tybma:vb::k:\\n\",\n    \"[:pu::[dgl[z[g||e:t:e:o|:mhxn\\n\",\n    \":jg|ift[mp|[:\\n\",\n    \"x::vv|d|knrx::[h:]hi[]co:ukn[[|[|:ezb\\n\",\n    \":c:ojn[[|[p]lr\\n\",\n    \"|fu]s:]:uvra:x:wu|:\\n\",\n    \"]u]gam|y:hdql]x][ap[hae[lb[bi[czzd:fmdho\\n\",\n    \"hdc:ytu|b]]:t:qms|gkwc:zf|:[kf\\n\",\n    \":]pmz[x:\\n\",\n    \"ty||gbbe:fnga::]|m]z:][c:a[:|ijl:orl::b[t\\n\",\n    \"f]mbz]mvz[[sb:j:qi[hhp:\\n\",\n    \"|ryv:[c:::[t:\\n\",\n    \"yi|ycel:]]]iybr|spac[]:k\\n\",\n    \"j::]\\n\",\n    \"gugw|:q\\n\",\n    \":uve:jp|n|:]]:g::]:ciygwdj::\\n\",\n    \"khr:vri]n]m|]vn:rn\\n\",\n    \"m::\\n\",\n    \"::[[l|[nv]q\\n\",\n    \"ezz]:||sdv]:ucb[:[|oh|bm::::cgzl\\n\",\n    \"ek|\\n\",\n    \":p|:rpv::r:h|]:\\n\",\n    \"kfcw::]]::f]mx]ecmc|:o:]||k:]jghys|\\n\",\n    \"c[:mke:::\\n\",\n    \"gofpok]]]w|[][v:h[ya|:ocm|q:\\n\",\n    \"az:]:d]|:|:|o|:::::|j[q]]tid|pb]nxi:c|\\n\",\n    \"|:a:ypw|v:jovg[u:hb\\n\",\n    \"]|m|:|:w:|k|bi:ex]o]][mtz|ciy[]u[|[|][]o]lmy::|sde]sl|:|:dufv:le\\n\",\n    \"]fv:w::mfi:::q]::[|d]dao::|i]|cnt[u]:\\n\",\n    \"g|t:]l]w]]]x|q]jf[[[div::it:t\\n\",\n    \"cbk]i::bk|mo:][[|]]x\\n\",\n    \"fpxbk::se|fz:z:t:|]p]:\\n\",\n    \"[v:vv[ds|pz|:|\\n\",\n    \"am|::s|q|]x\\n\",\n    \":fiv|qz|xl::mjbt][i\\n\",\n    \"::|o::r[x|o][lmt[wo\\n\",\n    \"t:]iu:fo:e:w:]okrh][[vu|de]:::\\n\",\n    \"d:s||||z:sp|:oq[iq[rx|uj[n]:\\n\",\n    \":|]ezv:szl]pg|:||ao\\n\",\n    \"|jq]mf\\n\",\n    \"z::[:rm|t:l::yotu]a|se[]:::y::[t\\n\",\n    \"|]bg]]::vwre::fgz:dnf:cemye|tw|]:p]\\n\",\n    \"g:]c:[]f|yuz|r|:if:lf:\\n\",\n    \"kl:\\n\",\n    \"|qe]|p|tcjp::m\\n\",\n    \"||b]h::x|]p\\n\",\n    \"j::r:my|qml\\n\",\n    \"z::]|vy:||:hs::]vm\\n\",\n    \"nf:ve:ri:riubcmfx]ib]j:qqa\\n\",\n    \"ne|s:jsa:pvl|sj[::]u]xbtr:|u:\\n\",\n    \"|o]:s||:y::g:rans::d]]|p\\n\",\n    \"krm|l::|]asp]r:b:::[]qbq::p|:mi[:yrrwoa[zt\\n\",\n    \"]mz|::|sxnk:::z|:bp]ajueqi|ogkql]z:]\\n\",\n    \"[:r:::bpz\\n\",\n    \"[fkvy|f:zd::k:\\n\",\n    \":]u::t:b:sp|zlq]:h::|::ad|:q]f::]::n]m:::::[el|]kb][|dcdtfqs|]o:[:af::l:\\n\",\n    \"::]nd[[|][zac|x[|::l\\n\",\n    \"]|agd:[|]dds|\\n\",\n    \"]::m:::::b:q[]tz\\n\",\n    \"lsvs]qe]|ao]nzqojo::r]nl:w:gu\\n\",\n    \"a[|]z|ec[e:l[i:yf[[:se:yy|i[toc|:[\\n\",\n    \"|][x]:rl::rl[f::l:::\\n\",\n    \"w:c:foghy:n:|]:b::ud|rs[][ua:\\n\",\n    \"kr|z:bd:h:]oa:y:|t]:vsx|]uo:|||\\n\",\n    \":o:r\\n\",\n    \"bx]y:xwo:::|]i:lz:]:pyp|sm:|]s\\n\",\n    \"v][][f[f]y[kvlewloh|tdg:a|:\\n\",\n    \"da:z::::f:|:oj]|t:p]:]yxnlnyk:[\\n\",\n    \":goep]s:]nwm]:qt::r|::x\\n\",\n    \"[cm|nu:k]f]:qkjz|[k|b:\\n\",\n    \"]]:o::|:hj||:k]g:pgtq:eooo:]\\n\",\n    \"tx::k]:f]pf|x:a:n:w:h]:youw:fajc:vcmi|dx\\n\",\n    \"kmfk:teu[|dh]nvwx|]:mg::[d::uco:l[nqp\\n\",\n    \"oh[i]fz[][:np:ea[y\\n\",\n    \"jie::q]\\n\",\n    \"w|exua:x:mgr[::zt\\n\",\n    \"|a:xqjra|]tyl:wpk|nav[:u:[nq\\n\",\n    \":l::f:u]wmt:[rqjb|m::][[:[opi\\n\",\n    \":|\\n\",\n    \"|p\\n\",\n    \"sqsmoyj:l:|nze|:|r]qb::\\n\",\n    \":z]:|znp::as:n:bk|:qsu:wm|[wm[hkh:ju[:y|::|||je|wyu[hi\\n\",\n    \":rd\\n\",\n    \"w:s:yg]::\\n\",\n    \"w:]ca|i|ot\\n\",\n    \"jb[n]:g[::s[\\n\",\n    \"|]aw[id:s]k:y|b\\n\",\n    \"[njo::|\\n\",\n    \"]]:u|::m::huhe:s::[ubrq::wa]ttp][]hwik\\n\",\n    \"]amqhe::r:xvu:i]|:o]j|gkf:hgf]wah\\n\",\n    \":|[m:::[u::r[c\\n\",\n    \"ri]qag:luidt:w]:g|j|hjua:\\n\",\n    \"c\\n\",\n    \"]m::i:::n|ga]m|ai|kc||]:|x|tjjmr:f\\n\",\n    \"s|:[|j|[oouk:::h:|[x[:w|l:[\\n\",\n    \"::\\n\",\n    \"vv:::[|f:y:|ke::vz:[:y[an|[b:::r:mdzl|:j:h]|s|ldmex\\n\",\n    \"v:bkn:dwa[]::cv\\n\",\n    \"o:y|:b|:|::]f:yyqg:oy]ezc:ggv::j:iyj:bqa]:|]r:k[\\n\",\n    \"u:g:gt]\\n\",\n    \"qgb:ym:]z|og]|:hu\\n\",\n    \":[[|j]|yqdc[[f|]yv:thdmaw\\n\",\n    \"n:yq:[|w|t[st:fg]d:uv[[bw:wgpy[:gnri:\\n\",\n    \"kisy:s:vg:yc]\\n\",\n    \"w:l[|:|tggqs\\n\",\n    \":o:y||f[[no]:a:ge|[v|:gw|f:u[[\\n\",\n    \"g|]uj\\n\",\n    \"pm]e:h:|j]dts]][sl[ekt]xt|zmx:k::x:d[\\n\",\n    \"]twgo[mu:xf:[||e|:l|a|:\\n\",\n    \"h:q::|zyh:b:]hpv[yf]pp|v]:y:j\\n\",\n    \"]::[u:[w|v|:qu[[[n:\\n\",\n    \"p]j:]n:\\n\",\n    \"wa\\n\",\n    \"lu|v|fs:gow]:ct[ppm]pii::[z|:\\n\",\n    \":e]h:]]::|]::]j|[s]]:[my::\\n\",\n    \"[x:[r:b[|\\n\",\n    \":[sy[b|[|]]|]n|a[]tpa:::\\n\",\n    \"ntp]y|w:]v]|\\n\",\n    \"z]w:dc[dq][[]l[|||p]]ealr[m[evn:o\\n\",\n    \"hxl:|c|]omqt:jeey|kjyz:nphi::[v[c[::dunu]lf\\n\",\n    \"]pbs|::g:tvu]|:\\n\",\n    \"r::t:|:oezsfj:|]sjn]k|][][]t\\n\",\n    \"t:::c:oyh:]:\\n\",\n    \"|d]|v\\n\",\n    \"p|:[w|[t]||]|[y|x|as:q|o|zbn|zkyr|q:|eu[ll::mq:[j\\n\",\n    \"d]w|g:bt:k:]tzzija[]:t\\n\",\n    \":::drl:|fv::rn:q[]nq\\n\",\n    \"y|::f:]]:p\\n\",\n    \"u:ypnp:a::h:yqtome|kjsa:]|:rsotcg:]xcq[vvx|]]e\\n\",\n    \"::l:g\\n\",\n    \"wl\\n\",\n    \":r:]z:\\n\",\n    \"e|v|gh:::d]|d|]d:fs]\\n\",\n    \":l|kj|:sli::r:]g:yt|]:h[:::tl|hb:r\\n\",\n    \"n:::[::[gwy\\n\",\n    \"::qa|v]|m|::|[nu]:||:fy::[p:af:e:qj|\\n\",\n    \"f|c\\n\",\n    \"qq:|:f|o:g:ra[||]q\\n\",\n    \"l[b:|[toa[g]qn\\n\",\n    \"p:]dr]kt]t:]f:f|::s]ic]mzz:\\n\",\n    \"jp::l:[pyv]t:a][]::j[k:dmdc|:e]bjzp|pl[:[[::f|jo:nzu:pu|ndvpte:||\\n\",\n    \":wt:nt|la:p|]:k[acxydv[][]|]e::|v|i:\\n\",\n    \"]|[|zja::|g|]d:t::gawk|j|rfcada|qfkg:hi\\n\",\n    \"][mm:mqraj:\\n\",\n    \":]|l:dgb::::]:]wrt\\n\",\n    \"::k:c:tjg|h]:\\n\",\n    \"vpl:::]owzt[:\\n\",\n    \"djt:::bfkl:q:ls::[]kfgpgit[k[|c:\\n\",\n    \"r::uh]][j]bfqsn[:[|s|:kqz:|p[bl::x|\\n\",\n    \"y:::\\n\",\n    \"]lx:rjzff\\n\",\n    \"ptbb|]d\\n\",\n    \"b|::b:g]]||:]nm[yrpf:t][]tzjy|:xm:q:\\n\",\n    \"]::::uk:l:l:cl|]|:mbmqn\\n\",\n    \":x::]\\n\",\n    \"]uwfhq[uz[y::fi[:[egg:p\\n\",\n    \"aa|:]w:lzf:zgw]:]|:ek|bq||d]h:]aq:n:o:]s]m]\\n\",\n    \"|::]\\n\",\n    \"pky::t]zyx:||stu]tjt|:|v:[axhm[:ny|\\n\",\n    \"ld]]ngmi:c|tqo:v:]|]h:l\\n\",\n    \"[|::[aqj]]cz:l[||::\\n\",\n    \"]d]ph:pm]||ytyw:[t[|wgx:tbagh:v[l:kpsuo|pcp\\n\",\n    \"do]|]c[]ad|[adzbqjz]\\n\",\n    \"]qrt:]no]|::][]d:p]:iwl::[ud[|s:r\\n\",\n    \"mg|[]:[kla[[a|[z\\n\",\n    \"|:g[jv]ep]ln:|xnbaf\\n\",\n    \"eeps]|rizigx:]\\n\",\n    \"::j]]]t|s:j]:bdzikd|zi|[kx]][:[lw:||mdnlw\\n\",\n    \"zuf::z::w]pkf]fu]vz\\n\",\n    \"icpw::k:x:wu|t:kq:ln]:|bdhiwu\\n\",\n    \":[zie]|avb[qvl\\n\",\n    \"fur|z][[][w:\\n\",\n    \"::cy::::iry]|m:coi[]o|[bi:z[:s:p[:gcwh::::\\n\",\n    \":]jpb::]|[ifu|yb]::l:|kt\\n\",\n    \"b][[[hk[\\n\",\n    \"|x:]::ultgj|e:t:]z\\n\",\n    \"fh]]||:medq:]:|\\n\",\n    \"|:zwi|i:\\n\",\n    \"::dd:qj[g|s[:::]yemb]lo::\\n\",\n    \"]:p]b|s]e\\n\",\n    \"fa:]|:qzhby:l]wazenq]de|x::::td[]|:s\\n\",\n    \"m:wpuz:\\n\",\n    \"dwx::::g:pi|r|bf[fxtvwk|z]|x|\\n\",\n    \"pcn|]t|]|y:rl]]:|u|y]y:h:g|x\\n\",\n    \"hfdm]]w:ldlrp|t:|:wje::]fw|k:|[snyj\\n\",\n    \"e|:b]][]u|cv[rpypk:g[:gb:\\n\",\n    \"|zb|nd:|v\\n\",\n    \"fuip:pvl:c[]::t::[x::f|f:urz\\n\",\n    \"lr]b:]:]:|]|x|yiac\\n\",\n    \"]:]ty]l|c]]rkk\\n\",\n    \"g]:c]etg\\n\",\n    \"icx:q:]:|k|a]\\n\",\n    \":]:|j|ehb]d|kqro|gdc:f:jbc|||v:gocskgf:|a::kmhv:ffwu:|qo:]v:y:igkm]:i|v|i|on\\n\",\n    \"xx:|o[vu]yp[]ew[l|::::x[t::\\n\",\n    \"[[[[[:|\\n\",\n    \"rmcq]w[wu\\n\",\n    \"k|\\n\",\n    \"c:hn:|:|qiyse:o::[pp]fn:b\\n\",\n    \"|]l|gj]:p:u[]hv:\\n\",\n    \"r:xa::::fc:|]v|n|:axl\\n\",\n    \"[]|ccgd:mn|:\\n\",\n    \":[::]\\n\",\n    \"]lj]vz:::y:::t]\\n\",\n    \":]:un]v]]]cuy:w[|vms]hbnh]z[y:eru|el[[::iw[f[[:r:[w[][fezx\\n\",\n    \":e:vvq:]u]]\\n\",\n    \"s\\n\",\n    \":e||:|::[|:[|l\\n\",\n    \"f]|g:lxm]:|[[:[:whcklc|cdan|[|oi[me[\\n\",\n    \"::ew:]]::d[][::c:[:ox:jv::b:b:\\n\",\n    \":]|tue][rs]|x::u|]t:t:|vo|[ax[:|yomhn::bne\\n\",\n    \"z\\n\",\n    \"i::fd\\n\",\n    \":sv:iro|]:zfvpwa:|ug]||v:\\n\",\n    \":]:]\\n\",\n    \"n|]:w:bl|:j]:\\n\",\n    \"z]]]r]goiqy|x]h:|s]:tof|tm|rdd::x:]l:hg:gt::]|mru]tn|:h|\\n\",\n    \"oenfnemfddbhhmig]gcd:]:mnnbj::f|ichec:|dkfnjbfjkdgoge]lfihgd[hooegj||g|gc]omkbggn:in::[dim[oie:nbkk]lfkddm:]cmjkf\\n\",\n    \"[lqd]v::|e\\n\",\n    \"][i::[][gq:::|:g|n:gt:\\n\",\n    \"::]z]:|:x|:b:|[][w||]j[|oxjf[oo::urc]\\n\",\n    \"]w:q]a]n:p:hb:rt:|pqe|]ze:]z:::b]::c[::jj[r::dw|kbe\\n\",\n    \"bb:]ranrc:s:qmrcw:atzl:]im|eg:du::j::::b|]]\\n\",\n    \":[:]::\\n\",\n    \"u|::kepn]pr]a\\n\",\n    \"n|:f||f:|xabqx]zj:nd|]vl\\n\",\n    \"pwnseq[::[ajk]y:e:\\n\",\n    \"aeo:wg|t:]s|:][[f]iczvk:boe||plg:::::::\\n\",\n    \"a]::]:nk]:cppyut]wb[g]\\n\",\n    \"|g|jwpdzh:s:]::qp|r\\n\",\n    \"yj|:du|mg:c]jn\\n\",\n    \":||:]\\n\",\n    \"]a]:pt]]iid:g:]:rfl\\n\",\n    \"t::u]|]::]:]d:]|wf|r:|:[\\n\",\n    \"|a|:r:]]:m]:|a\\n\",\n    \"w::||[\\n\",\n    \"o|:]]|d:y:x|jmvonbz:|:|]icol\\n\",\n    \":[]f:\\n\",\n    \"|:[]a\\n\",\n    \":::]|||[:::\\n\",\n    \"aa::]\\n\",\n    \"||::]\\n\",\n    \"||:]\\n\",\n    \":||||||:]\\n\"\n  ],\n  \"outputs\": [\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"8\\n\",\n    \"10\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"13\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"6\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"7\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1101/B",
  "starter_code": ""
}