{
  "task_id": "APPS/27",
  "problem_id": 27,
  "prompt": "You are given a string s consisting of n lowercase Latin letters. You have to type this string using your keyboard.\n\nInitially, you have an empty string. Until you type the whole string, you may perform the following operation:  add a character to the end of the string. \n\nBesides, at most once you may perform one additional operation: copy the string and append it to itself.\n\nFor example, if you have to type string abcabca, you can type it in 7 operations if you type all the characters one by one. However, you can type it in 5 operations if you type the string abc first and then copy it and type the last character.\n\nIf you have to type string aaaaaaaaa, the best option is to type 4 characters one by one, then copy the string, and then type the remaining character.\n\nPrint the minimum number of operations you need to type the given string.\n\n\n-----Input-----\n\nThe first line of the input containing only one integer number n (1 \u2264 n \u2264 100)\u00a0\u2014 the length of the string you have to type. The second line containing the string s consisting of n lowercase Latin letters.\n\n\n-----Output-----\n\nPrint one integer number\u00a0\u2014 the minimum number of operations you need to type the given string.\n\n\n-----Examples-----\nInput\n7\nabcabca\n\nOutput\n5\n\nInput\n8\nabcdefgh\n\nOutput\n8\n\n\n\n-----Note-----\n\nThe first test described in the problem statement.\n\nIn the second test you can only type all the characters one by one.",
  "solutions": "[\"n = int(input())\\nst = input()\\nans = n\\nnow = ''\\nma = 0\\nfor i in range(n // 2):\\n    now += st[i]\\n    t = ''\\n    for j in range(i + 1, 2 * i + 2):\\n        t += st[j]\\n    if t == now:\\n        ma = i\\nprint(ans - ma)\\n\", \"n = int(input())\\nstrng = input().strip()\\nres = len(strng)\\nst = len(strng)//2\\nwhile st>0:\\n    if strng[:st] == strng[st:st*2]:\\n        print(res - st +1)\\n        return\\n    st -= 1\\n\\nprint(res)\\n\\n\\n\\n\", \"import getpass\\nimport sys\\nimport math\\nimport random\\nimport itertools\\nimport bisect\\nimport time\\n\\nfiles = True\\ndebug = False\\n\\nif getpass.getuser() == 'frohenk' and files:\\n    debug = True\\n    sys.stdin = open(\\\"test.in\\\")\\n    # sys.stdout = open('test.out', 'w')\\nelif files:\\n    # fname = \\\"gift\\\"\\n    # sys.stdin = open(\\\"%s.in\\\" % fname)\\n    # sys.stdout = open('%s.out' % fname, 'w')\\n    pass\\n\\n\\ndef lcm(a, b):\\n    return a * b // math.gcd(a, b)\\n\\n\\ndef ria():\\n    return [int(i) for i in input().split()]\\n\\n\\ndef range_sum(a, b):\\n    ass = (((b - a + 1) // 2) * (a + b))\\n    if (a - b) % 2 == 0:\\n        ass += (b - a + 2) // 2\\n    return ass\\n\\n\\ndef comba(n, x):\\n    return (math.factorial(n) // math.factorial(n - x)) // math.factorial(x)\\n\\n\\nn = ria()[0]\\nsuma = n\\nst = input()\\nmx = 0\\nfor i in range(1, n + 1):\\n    if i + i <= n:\\n        if st[:i] == st[i:i + i]:\\n            mx = max(mx, len(st[:i]) - 1)\\nprint(n - mx)\\n\", \"input()\\ns=input()\\nans=len(s)\\nfor i in range(len(s)//2,0,-1):\\n\\tif s[:i]==s[i:2*i]:\\n\\t\\tans=len(s)-i+1\\n\\t\\tbreak\\nprint(ans)\", \"n = int(input())\\ns = input()\\n\\nanw = n\\n\\ndef calc(pos):\\n  x = s[:pos] + s[:pos]\\n  if x == s[:pos*2]:\\n    return 1+n-pos\\n  return 1e9\\n\\nfor i in range(n):\\n  anw = min(anw, calc(i))\\n  \\nprint(anw)\", \"n = int(input())\\ns = input()\\nans = n\\nfor i in range(n):\\n    ss = s[:i]\\n    if 2*i <= n and s[:i] == s[i:2*i]:\\n        ans = min(ans, n - i +1)\\nprint(ans)\", \"n = int(input())\\ns = input()\\n\\nans = n\\nfor i in range(n // 2 + 1):\\n    if s[:i] == s[i:2 * i]:\\n        # print (s[:i])\\n        ans = min(ans, i + 1 + n - 2 * i)\\nprint(ans)\\n\", \"R = lambda : list(map(int, input().split()))\\nn = int(input())\\ns = input()\\n\\nfor i in reversed(list(range(n//2))):\\n    if s[0:i+1]==s[i+1:2*i+2]:\\n        print((n-i)); return;\\n\\nprint(n)\\n\", \"def test(k):\\n    if len(s) >= 2 * k:\\n        return s[:k] == s[k: 2 * k]\\n    return False\\n\\n\\nn = int(input())\\ns = input()\\nd = 0\\nfor i in range(len(s) + 1):\\n    if test(i):\\n        d = i\\nprint(min(len(s), len(s) - 2 * d + d + 1))\\n\", \"n=int(input())\\ns=input()\\nimp=0\\nfor i in range(n//2,0,-1):\\n    if(s[:i]==s[i:2*i]):\\n        imp=i\\n        break\\nprint(min(n,n-imp+1))\", \"n = int(input())\\ns = input()\\ncurrents = s\\nans = 0\\nwhile (len(currents)>0):\\n    if (len(currents)%2==0) and (currents[0:len(currents)//2]==currents[len(currents)//2:len(s)]):\\n            ans = ans+len(currents)//2\\n            ans+=1\\n            break\\n    else:\\n        currents = currents[0:len(currents)-1]\\n        ans = ans+1\\nprint(ans)            \\n    \\n        \\n    \\n\\n    \\n\", \"n = int(input())\\na = input()\\no = ''\\nm = 0\\nfor i in range(n//2):\\n    #print(a[:i+1],a[i+1:i+i+2])\\n    if a[:i+1] == a[i+1:i+i+2]:\\n     #   print(a[:i+1])\\n        m = i\\nprint(n-m)\\n\", \"N = int(input())\\nS = input()\\ncopied = 1\\nfor i in range(1,N//2+1):\\n    # print(i, \\\"\\\\\\\"{}\\\\\\\"\\\".format(S[:i]), \\\"\\\\\\\"{}\\\\\\\"\\\".format(S[i:2*i]))\\n    if S[:i] == S[i:2*i]:\\n        copied = i\\nprint(N-copied+1)\\n\", \"n = int(input())\\ns = input()\\nans = 1e18\\nfor c in range(n // 2 + 1):\\n    curr = c + 1 + (n - 2 * c)\\n    if c == 0:\\n        curr -= 1\\n    s1 = s[:c] * 2\\n    b = True\\n    for i in range(len(s1)):\\n        if s1[i] != s[i]:\\n            b = False\\n            break\\n    #print(c, b, curr, s1)\\n    if b:\\n        ans = min(ans, curr)\\nprint(ans)\", \"n = int(input())\\ns = input()\\nres = n\\nfor i in range(1, n//2+1):\\n\\tif s[:i] == s[i:i * 2]:\\n\\t\\tres = n-i+1\\nprint(res)\\n\", \"n = int(input())\\n\\ns = input()\\n\\nss = \\\"\\\"\\n\\ni = 0\\nlongest  = 0\\n\\nfor i in range(int(n/2)):\\n\\t#print(s[0:i+1])\\n\\t#print(s[i+1:i+i+1+1])\\n\\tif s[0:i+1] == s[i+1:i+i+1+1]:\\n\\t\\tlongest = i\\n\\nans = n-longest\\n\\nprint(ans)\\n\", \"l = int(input())\\nk = input()\\nans = 0\\nfor i in range(1, (l//2) + 1):\\n    flag = 1\\n    for j in range(0, i):\\n        if k[j] != k[i + j]:\\n            flag = 0\\n            break\\n    if flag == 1:\\n        ans = max(ans, i)\\nsu = l - (ans)\\nif ans > 0:\\n    su += 1\\nprint(su)\\n\", \"n = int(input())\\ns = str(input())\\nans = len(s)\\nfor i in range(1, n+1):\\n    if s[:i] + s[:i] == s[:2*i] and 2*i <= n:\\n        ans = min(ans, n-i+1)\\nprint(ans)\\n\", \"n = int(input())\\ns = input()\\n\\ncnt = 0\\nfor i in range(2,n//2+1):\\n\\tif s[:i] == s[i:i+i]:\\n\\t\\tcnt = i\\n\\nif cnt == 0:\\n\\tprint(n)\\nelse:\\n\\tprint(n - (cnt - 1))\\n\\n\", \"n = int(input())\\ns = input()\\nc = 0\\n\\nfor i in range(1, 1 + len(s) // 2):\\n    if s[:i] == s[i:2 * i]:\\n        c = i\\n\\nif c != 0:\\n    print(n - c + 1)\\n\\nelse:\\n    print(n)\\n\", \"n = int(input())\\nseq = input()\\ncount = n\\nfor i in range(1,n//2+1):\\n    if seq[0:i] == seq[i:min(2*i,n)]:\\n        count = n + 1 - i\\nprint(count)\", \"n=input()\\ns=input()\\nbest = 0\\nfor i in range(len(s)//2+1):\\n\\tt = s[:i]*2\\n\\t# print(t)\\n\\ttry:\\n\\t\\tif s.index(t) == 0:\\n\\t\\t\\tbest = i\\n\\texcept:\\n\\t\\tpass\\nif best > 0:\\n\\tprint(len(s) - best + 1)\\nelse:\\n\\tprint(len(s))\\t \", \"n=int(input())\\ns=input()\\ni=0\\nd=\\\"\\\"\\nls=[]\\nmx=-1\\nwhile i<n:\\n    temp=s[0:i+1]\\n    for j in range(i+1,n+1):\\n        if temp==s[i+1:j]:\\n            mx=max(mx,len(temp))\\n    i+=1\\nif mx>0:\\n    print(len(temp)-mx+1)\\nelse:\\n    print(len(temp))\", \"n = int(input())\\ns = input()\\nx = 1\\nfor i in range(1, (n >> 1) + 1):\\n    if s[:i] == s[i:2 * i]:\\n        x = i\\nprint(n - x + 1)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"7\\nabcabca\\n\",\n    \"8\\nabcdefgh\\n\",\n    \"100\\nmhnzadklojbuumkrxjayikjhwuxihgkinllackcavhjpxlydxcmhnzadklojbuumkrxjayikjhwuxihgkinllackcavhjpxlydxc\\n\",\n    \"99\\ntrolnjmzxxrfxuexcqpjvefndwuxwsukxwmjhhkqmlzuhrplrtrolnjmzxxrfxuexcqpjvefndwuxwsukxwmjhhkqmlzuhrplrm\\n\",\n    \"100\\nyeywsnxcwslfyiqbbeoaawtmioksfdndptxxcwzfmrpcixjbzvicijofjrbcvzaedglifuoczgjlqylddnsvsjfmfsccxbdveqgu\\n\",\n    \"8\\naaaaaaaa\\n\",\n    \"4\\nabab\\n\",\n    \"7\\nababbcc\\n\",\n    \"7\\nabcaabc\\n\",\n    \"10\\naaaaaaaaaa\\n\",\n    \"6\\naabbbb\\n\",\n    \"6\\nabbbba\\n\",\n    \"9\\nabcdeabcd\\n\",\n    \"10\\nabcdabcefg\\n\",\n    \"9\\naaaaaaaaa\\n\",\n    \"10\\nababababab\\n\",\n    \"9\\nzabcdabcd\\n\",\n    \"5\\naaaaa\\n\",\n    \"10\\nadcbeadcfg\\n\",\n    \"12\\nabcabcabcabc\\n\",\n    \"16\\naaaaaaaaaaaaaaaa\\n\",\n    \"4\\naaaa\\n\",\n    \"17\\nababababzabababab\\n\",\n    \"10\\nabcabcabca\\n\",\n    \"7\\ndabcabc\\n\",\n    \"6\\naaaaaa\\n\",\n    \"5\\nabcbc\\n\",\n    \"7\\naabaaaa\\n\",\n    \"100\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"6\\nablfab\\n\",\n    \"8\\nabcdefef\\n\",\n    \"5\\naavaa\\n\",\n    \"1\\na\\n\",\n    \"10\\nabcabcdddd\\n\",\n    \"16\\naaaaaabbaaaaaabb\\n\",\n    \"17\\nabcdefggggglelsoe\\n\",\n    \"17\\nabcdefgggggabcdef\\n\",\n    \"27\\naaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"8\\nabbbbbbb\\n\",\n    \"2\\naa\\n\",\n    \"5\\nbaaaa\\n\",\n    \"10\\nabcdeeeeee\\n\",\n    \"12\\naaaaaaaaaaaa\\n\",\n    \"6\\nabcabd\\n\",\n    \"10\\nababcababc\\n\",\n    \"16\\nbbbbbbaaaaaaaaaa\\n\",\n    \"10\\nbbbbbbbbbc\\n\",\n    \"9\\nasdfpasdf\\n\",\n    \"9\\nbaaaabaaa\\n\",\n    \"11\\nabcabcabcab\\n\",\n    \"10\\nabccaaaaba\\n\",\n    \"8\\nabbbbbba\\n\",\n    \"8\\naaaaaass\\n\",\n    \"20\\nhhhhhhhhhhhhhhhhhhhh\\n\",\n    \"8\\naabcabca\\n\",\n    \"6\\nababab\\n\",\n    \"8\\nababcdef\\n\",\n    \"8\\nabababab\\n\",\n    \"14\\nabcdefgabcdepq\\n\",\n    \"6\\nabcaca\\n\",\n    \"11\\nababababccc\\n\",\n    \"8\\nababcabc\\n\",\n    \"20\\naabaabaabaabaabaabaa\\n\",\n    \"20\\nabcdabcdeeeeeeeeabcd\\n\",\n    \"9\\nasdfgasdf\\n\",\n    \"10\\navavavavbc\\n\",\n    \"63\\njhkjhadlhhsfkadalssaaggdagggfahsakkdllkhldfdskkjssghklkkgsfhsks\\n\",\n    \"3\\naaa\\n\",\n    \"13\\naabbbkaakbbbb\\n\",\n    \"7\\nabababa\\n\",\n    \"6\\najkoaj\\n\",\n    \"7\\nabcdbcd\\n\",\n    \"46\\nkgadjahfdhjajagdkffsdfjjlsksklgkshfjkjdajkddlj\\n\",\n    \"5\\naabab\\n\",\n    \"16\\nabcdabcdabcdabcd\\n\",\n    \"7\\nzabcabc\\n\",\n    \"8\\nabcdeabc\\n\",\n    \"11\\nababcabcabc\\n\",\n    \"8\\nffffffff\\n\",\n    \"8\\nabbababa\\n\",\n    \"13\\naabaabaabaabx\\n\",\n    \"9\\nabcabcabc\\n\",\n    \"99\\nlhgjlskfgldjgadhdjjgskgakslflalhjfgfaaalkfdfgdkdffdjkjddfgdhalklhsgslskfdhsfjlhgajlgdfllhlsdhlhadaa\\n\",\n    \"1\\ns\\n\",\n    \"87\\nfhjgjjagajllljffggjjhgfffhfkkaskksaalhksfllgdjsldagshhlhhgslhjaaffkahlskdagsfasfkgdfjka\\n\",\n    \"8\\nasafaass\\n\",\n    \"14\\nabcabcabcabcjj\\n\",\n    \"5\\nababa\\n\",\n    \"8\\nbaaaaaaa\\n\",\n    \"10\\nadadadadad\\n\",\n    \"12\\naabaabaabaab\\n\",\n    \"6\\nabcbcd\\n\",\n    \"7\\nabacbac\\n\",\n    \"8\\npppppppp\\n\",\n    \"11\\nabcdeabcdfg\\n\",\n    \"5\\nabcab\\n\",\n    \"5\\nabbbb\\n\",\n    \"7\\naabcdaa\\n\",\n    \"6\\nababbb\\n\",\n    \"8\\naaabcabc\\n\",\n    \"81\\naaaaaababaabaaaabaaaaaaaabbabbbbbabaabaabbaaaababaabaababbbabbaababababbbbbabbaaa\\n\",\n    \"10\\naaaacaaaac\\n\",\n    \"12\\nabaabaabaaba\\n\",\n    \"92\\nbbbbbabbbaaaabaaababbbaabbaabaaabbaabababaabbaabaabbbaabbaaabaabbbbaabbbabaaabbbabaaaaabaaaa\\n\",\n    \"9\\nazxcvzxcv\\n\",\n    \"8\\nabcabcde\\n\",\n    \"70\\nbabababbabababbbabaababbababaabaabbaaabbbbaababaabaabbbbbbaaabaabbbabb\\n\",\n    \"7\\nabcdabc\\n\",\n    \"36\\nbbabbaabbbabbbbbabaaabbabbbabaabbbab\\n\",\n    \"12\\nababababbbbb\\n\",\n    \"8\\nacacacac\\n\",\n    \"66\\nldldgjllllsdjgllkfljsgfgjkflakgfsklhdhhallggagdkgdgjggfshagjgkdfld\\n\",\n    \"74\\nghhhfaddfslafhhshjflkjdgksfashhllkggllllsljlfjsjhfggkgjfalgajaldgjfghlhdsh\\n\",\n    \"29\\nabbabbaabbbbaababbababbaabbaa\\n\",\n    \"5\\nxabab\\n\",\n    \"10\\nbbbbbbbaaa\\n\",\n    \"3\\nlsl\\n\",\n    \"32\\nbbbbaaabbaabbaabbabaaabaabaabaab\\n\",\n    \"16\\nuuuuuuuuuuuuuuuu\\n\",\n    \"37\\nlglfddsjhhaagkakadffkllkaagdaagdfdahg\\n\",\n    \"45\\nbbbbbbbabababbbaabbbbbbbbbbbbabbbabbaabbbabab\\n\",\n    \"12\\nwwvwwvwwvwwv\\n\",\n    \"14\\naaabcabcabcabc\\n\",\n    \"95\\nbbaaaabaababbbabaaaabababaaaaaabbababbaabbaaabbbaaaabaaaaaaababababbabbbaaaabaabaababbbbbababaa\\n\",\n    \"4\\nttob\\n\",\n    \"5\\ncabab\\n\",\n    \"79\\nlsfgfhhhkhklfdffssgffaghjjfkjsssjakglkajdhfkasfdhjhlkhsgsjfgsjghglkdkalaajsfdka\\n\",\n    \"11\\njjlkalfhdhh\\n\",\n    \"39\\njflfashaglkahldafjasagasjghjkkjgkgffgkk\\n\",\n    \"54\\ndgafkhlgdhjflkdafgjldjhgkjllfallhsggaaahkaggkhgjgflsdg\\n\",\n    \"41\\nabbababbbbbabbbabaaaababaaabaabaaabbbbbbb\\n\",\n    \"8\\nbaaaaaab\\n\",\n    \"36\\nbabbbbababaaabbabbbaabaabbbbbbbbbbba\\n\",\n    \"10\\nwvwlwvwwvw\\n\",\n    \"38\\nasdsssdssjajghslfhjdfdhhdggdsdfsfajfas\\n\",\n    \"77\\nbabbaababaabbaaaabbaababbbabaaaabbabaaaaaaaabbbaaabbabbbabaababbabaabbbbaaabb\\n\",\n    \"7\\nmabcabc\\n\",\n    \"86\\nssjskldajkkskhljfsfkjhskaffgjjkskgddfslgjadjjgdjsjfsdgdgfdaldffjkakhhdaggalglakhjghssg\\n\",\n    \"20\\nccbbcbaabcccbabcbcaa\\n\",\n    \"8\\nabababaa\\n\",\n    \"5\\naabaa\\n\",\n    \"13\\neabcdefabcdef\\n\",\n    \"28\\naaaaaaaaaaaaaaibfprdokxvipsq\\n\",\n    \"10\\nasdasdasda\\n\",\n    \"8\\naaaabcde\\n\",\n    \"9\\nabbbbabbb\\n\",\n    \"12\\nababababvvvv\\n\",\n    \"7\\naabcabc\\n\"\n  ],\n  \"outputs\": [\n    \"5\\n\",\n    \"8\\n\",\n    \"51\\n\",\n    \"51\\n\",\n    \"100\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"9\\n\",\n    \"10\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"4\\n\",\n    \"10\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"3\\n\",\n    \"14\\n\",\n    \"8\\n\",\n    \"7\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"51\\n\",\n    \"6\\n\",\n    \"8\\n\",\n    \"5\\n\",\n    \"1\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"17\\n\",\n    \"17\\n\",\n    \"15\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"10\\n\",\n    \"7\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"14\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"10\\n\",\n    \"8\\n\",\n    \"6\\n\",\n    \"11\\n\",\n    \"8\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"5\\n\",\n    \"14\\n\",\n    \"6\\n\",\n    \"8\\n\",\n    \"7\\n\",\n    \"12\\n\",\n    \"17\\n\",\n    \"9\\n\",\n    \"7\\n\",\n    \"63\\n\",\n    \"3\\n\",\n    \"13\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"46\\n\",\n    \"5\\n\",\n    \"9\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"10\\n\",\n    \"5\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"7\\n\",\n    \"99\\n\",\n    \"1\\n\",\n    \"87\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"5\\n\",\n    \"11\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"5\\n\",\n    \"8\\n\",\n    \"79\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"91\\n\",\n    \"9\\n\",\n    \"6\\n\",\n    \"64\\n\",\n    \"7\\n\",\n    \"34\\n\",\n    \"9\\n\",\n    \"5\\n\",\n    \"65\\n\",\n    \"74\\n\",\n    \"27\\n\",\n    \"5\\n\",\n    \"8\\n\",\n    \"3\\n\",\n    \"31\\n\",\n    \"9\\n\",\n    \"37\\n\",\n    \"43\\n\",\n    \"7\\n\",\n    \"14\\n\",\n    \"95\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"79\\n\",\n    \"11\\n\",\n    \"39\\n\",\n    \"54\\n\",\n    \"41\\n\",\n    \"8\\n\",\n    \"36\\n\",\n    \"10\\n\",\n    \"38\\n\",\n    \"77\\n\",\n    \"7\\n\",\n    \"86\\n\",\n    \"20\\n\",\n    \"7\\n\",\n    \"5\\n\",\n    \"13\\n\",\n    \"22\\n\",\n    \"8\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"7\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/954/B",
  "starter_code": ""
}