{
  "task_id": "APPS/195",
  "problem_id": 195,
  "prompt": "Each student eagerly awaits the day he would pass the exams successfully. Thus, Vasya was ready to celebrate, but, alas, he didn't pass it. However, many of Vasya's fellow students from the same group were more successful and celebrated after the exam.\n\nSome of them celebrated in the BugDonalds restaurant, some of them\u00a0\u2014 in the BeaverKing restaurant, the most successful ones were fast enough to celebrate in both of restaurants. Students which didn't pass the exam didn't celebrate in any of those restaurants and elected to stay home to prepare for their reexamination. However, this quickly bored Vasya and he started checking celebration photos on the Kilogramm. He found out that, in total, BugDonalds was visited by $A$ students, BeaverKing\u00a0\u2014 by $B$ students and $C$ students visited both restaurants. Vasya also knows that there are $N$ students in his group.\n\nBased on this info, Vasya wants to determine either if his data contradicts itself or, if it doesn't, how many students in his group didn't pass the exam. Can you help him so he won't waste his valuable preparation time?\n\n\n-----Input-----\n\nThe first line contains four integers\u00a0\u2014 $A$, $B$, $C$ and $N$ ($0 \\leq A, B, C, N \\leq 100$).\n\n\n-----Output-----\n\nIf a distribution of $N$ students exists in which $A$ students visited BugDonalds, $B$ \u2014 BeaverKing, $C$ \u2014 both of the restaurants and at least one student is left home (it is known that Vasya didn't pass the exam and stayed at home), output one integer\u00a0\u2014 amount of students (including Vasya) who did not pass the exam. \n\nIf such a distribution does not exist and Vasya made a mistake while determining the numbers $A$, $B$, $C$ or $N$ (as in samples 2 and 3), output $-1$.\n\n\n-----Examples-----\nInput\n10 10 5 20\n\nOutput\n5\nInput\n2 2 0 4\n\nOutput\n-1\nInput\n2 2 2 1\n\nOutput\n-1\n\n\n-----Note-----\n\nThe first sample describes following situation: $5$ only visited BugDonalds, $5$ students only visited BeaverKing, $5$ visited both of them and $5$ students (including Vasya) didn't pass the exam.\n\nIn the second sample $2$ students only visited BugDonalds and $2$ only visited BeaverKing, but that means all $4$ students in group passed the exam which contradicts the fact that Vasya didn't pass meaning that this situation is impossible.\n\nThe third sample describes a situation where $2$ students visited BugDonalds but the group has only $1$ which makes it clearly impossible.",
  "solutions": "[\"a,b,c,n=list(map(int,input().split()))\\nx=a+b-c\\nprint(n-x if c<=a and c<=b and x<n else -1)\\n\", \"a,b,c,n = list(map(int, input().split()))\\nif c > a or c > b or n- (a+b-c) < 1:\\n    print(-1)\\nelse:\\n    print(n- (a+b-c))\\n\", \"a, b, c, n = list(map(int, input().split()))\\nrem = n - (a + b - c)\\nif (rem < 1 or c > a or c > b):\\n\\tprint(-1)\\nelse:\\n\\tprint(rem)\\n\", \"a,b,c,n=list(map(int,input().split()))\\nif (c > a or c > b or a + b - c > n - 1):\\n  print(-1)\\nelse:\\n  print(n-a-b+c)\\n\", \"a, b, c, n = map(int, input().split())\\nans = n - a - b + c\\nif (ans < 1) or (min(a, b) < c):\\n    print(-1)\\nelse:\\n    print(ans)\", \"from sys import stdin, stdout\\n\\na, b, c, d = map(int, stdin.readline().split())\\nq = d - a - b + c\\n\\nif c > min(a, b) or q <= 0:\\n    stdout.write('-1')\\nelse:\\n    stdout.write(str(q))\", \"def read_input():\\n\\treturn map(int, input().split())\\n\\na, b, c, n = read_input()\\nonly_a, only_b = a - c, b - c\\nif only_a < 0 or only_b < 0:\\n\\tprint(-1)\\n\\treturn\\ntotal = only_b + only_a + c\\nif total >= n:\\n\\tprint(-1)\\n\\treturn\\nprint(n - only_a - only_b - c)\", \"a, b, c, n = list(map(int, input().split()))\\nx = n - (a + b - c)\\na -= c\\nb -= c\\n\\nif x <= 0 or a < 0 or b < 0:\\n    print(-1)\\nelse:\\n    print(x)\\n\", \"a,b,c,n=(map(int,input().strip().split(' ')))\\nif(a+b-c>=n or a>=n or b>=n or c>=n):\\n  print(-1)\\nelif(c>min(a,b)):\\n  print(-1)\\nelse:\\n  print(n-a-b+c)\", \"a, b, c, n = list(map(int, input().strip().split()))\\n\\na -= c\\nb -= c\\n\\nif a < 0 or b < 0 or a + b + c > n - 1:\\n    print('-1')\\nelse:\\n    print(n - a - b - c)\\n\", \"a,b,c,n=list(map(int,input().split()))\\nresult=n-(a+b-c)\\nif result<=0 or c>a or c>b or a>n or b>n:\\n    print(-1)\\nelse:\\n    print(result)\\n\", \"\\na, b, c, n = list(map(int, input().split()))\\n\\npassed = a + b - c\\n\\nif c > a or c > b or passed > n - 1:\\n    print(-1)\\nelse:\\n    print(n - passed)\\n\\n\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n\\nimport time\\n\\n\\n(A, B, C, N) = (int(i) for i in input().split())\\n\\nstart = time.time()\\n\\nans = N+C-A-B\\nif (ans <= 0) or (C>A) or (C>B):\\n    ans = -1\\n\\nprint(ans)\\nfinish = time.time()\\n#print(finish - start)\\n\", \"a, b, c, n = map(int, input().split())\\nif a + b - c >= n:\\n\\tprint(-1)\\nelif a < c or b < c:\\n\\tprint(-1)\\nelse:\\n\\tprint( n - (a + b - c))\", \"#!/usr/bin/env python3\\nA, B, C , N = [int(i) for i in input().split()]\\ncount = A + B - C\\nif C > A or C > B:\\n    print(-1)\\nelif count < 0:\\n    print(-1)\\nelif count >= N:\\n    print(-1)\\nelse:\\n    print(N - count)\\n\", \"# \\n#      ___           ___                       ___       ___           ___       ___     \\n#     /\\\\__\\\\         /\\\\  \\\\          ___        /\\\\__\\\\     /\\\\  \\\\         /\\\\__\\\\     /\\\\  \\\\    \\n#    /:/  /        /::\\\\  \\\\        /\\\\  \\\\      /:/  /    /::\\\\  \\\\       /:/  /    /::\\\\  \\\\   \\n#   /:/__/        /:/\\\\:\\\\  \\\\       \\\\:\\\\  \\\\    /:/  /    /:/\\\\:\\\\  \\\\     /:/  /    /:/\\\\ \\\\  \\\\  \\n#  /::\\\\__\\\\____   /::\\\\\\u02c9\\\\:\\\\  \\\\      /::\\\\__\\\\  /:/  /    /:/  \\\\:\\\\__\\\\   /:/  /    _\\\\:\\\\\\u02c9\\\\ \\\\  \\\\ \\n# /:/\\\\:::::\\\\__\\\\ /:/\\\\:\\\\ \\\\:\\\\__\\\\  __/:/\\\\/__/ /:/__/    /:/__/ \\\\:|__| /:/__/    /\\\\ \\\\:\\\\ \\\\ \\\\__\\\\\\n# \\\\/_|:|\\u02c9\\u02c9|\\u02c9    \\\\/__\\\\:\\\\/:/  / /\\\\/:/  /    \\\\:\\\\  \\\\    \\\\:\\\\  \\\\ /:/  / \\\\:\\\\  \\\\    \\\\:\\\\ \\\\:\\\\ \\\\/__/\\n#    |:|  |          \\\\::/  /  \\\\::/__/      \\\\:\\\\  \\\\    \\\\:\\\\  /:/  /   \\\\:\\\\  \\\\    \\\\:\\\\ \\\\:\\\\__\\\\  \\n#    |:|  |          /:/  /    \\\\:\\\\__\\\\       \\\\:\\\\  \\\\    \\\\:\\\\/:/  /     \\\\:\\\\  \\\\    \\\\:\\\\/:/  /  \\n#    |:|  |         /:/  /      \\\\/__/        \\\\:\\\\__\\\\    \\\\::/__/       \\\\:\\\\__\\\\    \\\\::/  /   \\n#     \\\\|__|         \\\\/__/                     \\\\/__/     \\u02c9\\u02c9            \\\\/__/     \\\\/__/    \\n#\\n\\na, b, c, n = list(map(int, input().split()))\\nif c > a or c > b:\\n    print(-1)\\n    return\\nans = n-(a+b-c)\\nif ans > 0:\\n    print(ans)\\nelse:\\n    print(-1)\\n\", \"a, b, c, n = [int(item) for item in input().split()]\\n\\nif a + b - c > n - 1 or c > min(a, b):\\n    print(-1)\\nelse:\\n    print(n - a - b + c)\\n\", \"a,b,c,n=list(map(int,input().split()))\\nif c <= min(a,b) and max(a,b) < n and n-a-b+c >=1:\\n    print(n-a-b+c)\\nelse:\\n    print(-1)\\n\", \"query = list(map(int,input().split()))\\n\\ntotal = query[3]\\n\\nsdali = query[0]+query[1]-query[2]\\nif query[2]>query[1] or query[2]>query[0]:\\n    print(-1)\\nelif sdali>total:\\n    print(-1)\\nelse:\\n    nesdali = total-sdali\\n    if nesdali<1:\\n        print(-1)\\n    else:\\n        print(nesdali)\", \"3\\n\\ndef solve(A, B, C, N):\\n    if C > A or C > B:\\n        return -1\\n\\n    if A + B - C > N:\\n        return -1\\n\\n    rest = N - (A + B - C)\\n    if rest == 0:\\n        return -1\\n\\n    return rest\\n\\n\\ndef main():\\n    A, B, C, N = [int(e) for e in input().split(' ')]\\n\\n    print(solve(A, B, C, N))\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"A, B, C, N = [int(i) for i in input().split()]\\nsumm = A - C + B\\nif summ >= N or (C > min(A, B)):\\n\\tprint(-1)\\nelse:\\n\\tprint(N - summ)\", \"#JMD\\n#Nagendra Jha-4096\\n \\n#a=list(map(int,sys.stdin.readline().split(' ')))\\n#n,k,s= map(int, sys.stdin.readline().split(' '))\\n \\nimport sys\\nimport math\\n\\n#import fractions\\n#import numpy\\n \\n###File Operations###\\nfileoperation=0\\nif(fileoperation):\\n    orig_stdout = sys.stdout\\n    orig_stdin = sys.stdin\\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\\n    sys.stdin = inputfile\\n    sys.stdout = outputfile\\n\\n###Defines...###\\nmod=1000000007\\n \\n###FUF's...###\\ndef nospace(l):\\n    ans=''.join(str(i) for i in l)\\n    return ans\\n \\n \\n \\n##### Main ####\\na,b,c,n= map(int, sys.stdin.readline().split(' '))\\nif(a<=n and  b<=n and c<=a and c<=b and (a+b-c)<n):\\n    print(n-a-b+c)\\nelse:\\n    print(-1)\\n    \\n#####File Operations#####\\nif(fileoperation):\\n    sys.stdout = orig_stdout\\n    sys.stdin = orig_stdin\\n    inputfile.close()\\n    outputfile.close()\", \"a, b, c, n = list(map(int, input().split()))\\n\\nans = n - (a + b - c)\\nif ans < 1 or c > a or c > b or a > n or b > n or c > n:\\n    print(-1)\\nelse:\\n    print(ans)\\n\", \"a, b, c, n = [int(i) for i in input().split()]\\nk = n - a - b + c\\nif k < 1 or c > min(a, b) or c > n:\\n    print(-1)\\nelse:\\n    print(k)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"10 10 5 20\\n\",\n    \"2 2 0 4\\n\",\n    \"2 2 2 1\\n\",\n    \"98 98 97 100\\n\",\n    \"1 5 2 10\\n\",\n    \"5 1 2 10\\n\",\n    \"6 7 5 8\\n\",\n    \"6 7 5 9\\n\",\n    \"6 7 5 7\\n\",\n    \"50 50 1 100\\n\",\n    \"8 3 2 12\\n\",\n    \"10 19 6 25\\n\",\n    \"1 0 0 99\\n\",\n    \"0 1 0 98\\n\",\n    \"1 1 0 97\\n\",\n    \"1 1 1 96\\n\",\n    \"0 0 0 0\\n\",\n    \"100 0 0 0\\n\",\n    \"0 100 0 0\\n\",\n    \"100 100 0 0\\n\",\n    \"0 0 100 0\\n\",\n    \"100 0 100 0\\n\",\n    \"0 100 100 0\\n\",\n    \"100 100 100 0\\n\",\n    \"0 0 0 100\\n\",\n    \"100 0 0 100\\n\",\n    \"0 100 0 100\\n\",\n    \"100 100 0 100\\n\",\n    \"0 0 100 100\\n\",\n    \"100 0 100 100\\n\",\n    \"0 100 100 100\\n\",\n    \"100 100 100 100\\n\",\n    \"10 45 7 52\\n\",\n    \"38 1 1 68\\n\",\n    \"8 45 2 67\\n\",\n    \"36 36 18 65\\n\",\n    \"10 30 8 59\\n\",\n    \"38 20 12 49\\n\",\n    \"8 19 4 38\\n\",\n    \"36 21 17 72\\n\",\n    \"14 12 12 89\\n\",\n    \"38 6 1 44\\n\",\n    \"13 4 6 82\\n\",\n    \"5 3 17 56\\n\",\n    \"38 5 29 90\\n\",\n    \"22 36 18 55\\n\",\n    \"13 0 19 75\\n\",\n    \"62 65 10 89\\n\",\n    \"2 29 31 72\\n\",\n    \"1 31 19 55\\n\",\n    \"1 25 28 88\\n\",\n    \"34 32 28 33\\n\",\n    \"43 36 1 100\\n\",\n    \"16 39 55 70\\n\",\n    \"2 3 0 91\\n\",\n    \"55 29 12 48\\n\",\n    \"7 33 20 88\\n\",\n    \"40 38 27 99\\n\",\n    \"18 28 14 84\\n\",\n    \"34 25 25 92\\n\",\n    \"4 24 5 76\\n\",\n    \"5 22 16 96\\n\",\n    \"1 1 0 4\\n\",\n    \"5 5 3 1\\n\",\n    \"0 0 0 1\\n\",\n    \"2 3 0 8\\n\",\n    \"5 5 2 5\\n\",\n    \"1 2 1 3\\n\",\n    \"3 0 0 4\\n\",\n    \"0 0 0 5\\n\",\n    \"5 5 0 3\\n\",\n    \"5 6 1 7\\n\",\n    \"10 10 10 11\\n\",\n    \"0 0 0 10\\n\",\n    \"5 15 5 30\\n\",\n    \"3 2 0 7\\n\"\n  ],\n  \"outputs\": [\n    \"5\",\n    \"-1\",\n    \"-1\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"1\",\n    \"-1\",\n    \"1\",\n    \"3\",\n    \"2\",\n    \"98\",\n    \"97\",\n    \"95\",\n    \"95\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"100\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"4\",\n    \"30\",\n    \"16\",\n    \"11\",\n    \"27\",\n    \"3\",\n    \"15\",\n    \"32\",\n    \"75\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"15\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"22\",\n    \"-1\",\n    \"86\",\n    \"-1\",\n    \"-1\",\n    \"48\",\n    \"52\",\n    \"58\",\n    \"-1\",\n    \"-1\",\n    \"2\",\n    \"-1\",\n    \"1\",\n    \"3\",\n    \"-1\",\n    \"1\",\n    \"1\",\n    \"5\",\n    \"-1\",\n    \"-1\",\n    \"1\",\n    \"10\",\n    \"15\",\n    \"2\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/991/A",
  "starter_code": ""
}