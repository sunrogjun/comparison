{
  "task_id": "APPS/466",
  "problem_id": 466,
  "prompt": "The finalists of the \"Russian Code Cup\" competition in 2214 will be the participants who win in one of the elimination rounds.\n\nThe elimination rounds are divided into main and additional. Each of the main elimination rounds consists of c problems, the winners of the round are the first n people in the rating list. Each of the additional elimination rounds consists of d problems. The winner of the additional round is one person. Besides, k winners of the past finals are invited to the finals without elimination.\n\nAs a result of all elimination rounds at least n\u00b7m people should go to the finals. You need to organize elimination rounds in such a way, that at least n\u00b7m people go to the finals, and the total amount of used problems in all rounds is as small as possible.\n\n\n-----Input-----\n\nThe first line contains two integers c and d (1 \u2264 c, d \u2264 100)\u00a0\u2014 the number of problems in the main and additional rounds, correspondingly. The second line contains two integers n and m (1 \u2264 n, m \u2264 100). Finally, the third line contains an integer k (1 \u2264 k \u2264 100)\u00a0\u2014 the number of the pre-chosen winners. \n\n\n-----Output-----\n\nIn the first line, print a single integer \u2014 the minimum number of problems the jury needs to prepare.\n\n\n-----Examples-----\nInput\n1 10\n7 2\n1\n\nOutput\n2\n\nInput\n2 2\n2 1\n2\n\nOutput\n0",
  "solutions": "[\"c,d=list(map(int,input().split()))\\n\\nn,m=list(map(int,input().split()))\\n\\nk=int(input())\\n\\nz=0\\nbest=10**10\\nwhile(1):\\n    x=n*m-k\\n    x-=z*n\\n    best=min(best,z*c+(max(x,0)*d))\\n    if(x<0):\\n        break\\n    z+=1\\nprint(best)\\n    \\n\", \"[c, d], [n, m], k = list(map(int, input().split())), list(map(int, input().split())), int(input())\\nleft = n * m - k\\nif left <= 0:\\n    print(0)\\nelse:\\n    print(min(left // n * c + left % n * d, (left + n - 1) // n * c, left * d))\\n\", \"#import sys\\n#sys.stdin = open('input.txt','r')\\nc, d = map(int, input().split())\\nn, m = map(int, input().split())\\nk = int(input())\\nL = 10001\\nfor f in range(m + 1):\\n\\tfor g in range(n * m + 1):\\n\\t\\tif f * n + g + k >= n * m:\\n\\t\\t\\tL = min(L, f * c + g * d)\\nprint(L)\", \"c, d = map(int, input().split())\\nn, m = map(int, input().split())\\np = 0\\nk = int(input())\\nif m*n <= k:\\n    print(0)\\nelse:\\n    a = [0]*(m*n+1)\\n    #a[k+1] = min(c,d)\\n    for i in range(k+1,m*n+1):\\n        a[i] = min(a[i-n]+c, a[i-1]+d)\\n    print(a[m*n])\", \"c, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nf = n * m\\nk = int(input())\\nresult = 0\\nuch = k\\n\\nuseosn = usedop = 0\\n\\nwhile uch < f:\\n    if f-uch >= n:\\n        if c/n < d:\\n            result += c\\n            uch += n\\n        else:\\n            result += d\\n            uch += 1\\n    else:\\n        if c > (d*(f-uch)):\\n            while uch < f:\\n                result += d\\n                uch += 1\\n        else:\\n            result += c\\n            uch += n\\n\\nprint(max(0, result))\\n\\n\\n\\n\", \"c, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nk = int(input())\\n\\ns = max(n * m - k, 0)\\nres = 0\\nwhile s:\\n    if c > min(s, n) * d:\\n        res += min(s,n) * d\\n    else:\\n        res += c\\n    s -= min(s,n)\\nprint(res)\\n\", \"def readln(): return tuple(map(int, input().split()))\\n\\nc, d = readln()\\nn, m = readln()\\nk, = readln()\\n\\nans = 1 << 30\\nfor x in range(10001):\\n    y = max(0, n * m - k - n * x)\\n    if y >= 0 and ans > c * x + d * y:\\n        ans = c * x + d * y\\nprint(ans)\", \"def f(x, y): return x * c + y * d\\nc, d = map(int, input().split())\\nn, m = map(int, input().split())\\nk = n * m - int(input())\\nx, s = 0, max(0, k * d)\\nwhile k > x * n:\\n    t = f(x, k - x * n)\\n    if t < s: s = t\\n    x += 1\\nprint(min(s, f(x, 0)))\", \"import math\\nc,d=list(map(int,input('').split()))\\nn,m=list(map(int,input('').split()))\\nk=int(input(''))\\nif n*m-k<0:\\n    print('0')\\n    return\\nif 1/d>n/c:    print((n*m-k)*d)\\nelse:\\n    if (math.ceil((n*m-k)/n)*c)<((n*m-k)//n)*c+((n*m-k)%n)*d: print(math.ceil((n*m-k)/n)*c)\\n    else: print(((n*m-k)//n)*c+((n*m-k)%n)*d)\\n\\n\\n\\n\\n\\n\\n\\n            \\n            \\n        \\n        \\n    \\n\\n\\n                \\n\\n\", \"problems = input().split()\\nc = int(problems[0])\\nd = int(problems[1])\\nn_m = input().split()\\nn = int(n_m[0])\\nm = int(n_m[1])\\nk = int(input())\\n\\nt = n * m - k # \\u043d\\u0443\\u0436\\u043d\\u043e\\u0435 \\u0432\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u043b\\u044e\\u0434\\u0435\\u0439, \\u043a\\u0440\\u043e\\u043c\\u0435 \\u0443\\u0436\\u0435 \\u043f\\u0440\\u043e\\u0448\\u0435\\u0434\\u0448\\u0438\\u0445\\nans = 100000000  # \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0437\\u0430\\u0434\\u0430\\u0447\\ni = 0\\nwhile i*n <= t: # \\u0435\\u0441\\u043b\\u0438 \\u0447\\u0438\\u0441\\u043b\\u043e \\u043f\\u0440\\u043e\\u0445\\u043e\\u0434\\u044f\\u0449\\u0438\\u0445 \\u043f\\u043e \\u043e\\u0441\\u043d\\u043e\\u0432\\u043d\\u044b\\u043c \\u0440\\u0430\\u0443\\u043d\\u0434\\u0430\\u043c \\u043d\\u0435 \\u0431\\u043e\\u043b\\u044c\\u0448\\u0435, \\u0447\\u0435\\u043c \\u043d\\u0430\\u0434\\u043e\\n    ans = min(ans, (t - i*n) * d + i*c)\\n    i += 1\\nans = min(ans, i*c)\\nprint(ans)\\n\\n\", \"\\n\\n#c,d,n,m,k=map(int,input().split())\\nc, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nk = int(input())\\n\\n# c \\u0438 d (1\\u2009\\u2264\\u2009c,\\u2009d\\u2009\\u2264\\u2009100)  \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0437\\u0430\\u0434\\u0430\\u0447 \\u0432 \\u043e\\u0441\\u043d\\u043e\\u0432\\u043d\\u043e\\u043c \\u0438 \\u0434\\u043e\\u043f\\u043e\\u043b\\u043d\\u0438\\u0442\\u0435\\u043b\\u044c\\u043d\\u043e\\u043c \\u0440\\u0430\\u0443\\u043d\\u0434\\u0430\\u0445 \\n# n \\u0438 m (1\\u2009\\u2264\\u2009n,\\u2009m\\u2009\\u2264\\u2009100) n \\u043f\\u043e\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\\n# k (1\\u2009\\u2264\\u2009k\\u2009\\u2264\\u2009100) \\u2014 \\u0447\\u0438\\u0441\\u043b\\u043e \\u0437\\u0430\\u0440\\u0430\\u043d\\u0435\\u0435 \\u043e\\u0442\\u043e\\u0431\\u0440\\u0430\\u043d\\u043d\\u044b\\u0445 \\u043f\\u043e\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043b\\u0435\\u0439\\n\\nS = 0\\nif n*m>k :   \\n    nub = n*m-k\\n    S = 100000000000\\n    S0 = S\\n    i=0\\n    while S0<=S and i<=int(nub/n+2):\\n        S = S0  \\n        S0 = i*c + d*max(0, nub-n*i)\\n        #print(i,S,S0)\\n        i += 1\\n\\nprint(S)\\n\\n\\n\", \"import sys\\n\\nc, d = map(int, sys.stdin.readline().split())\\nn, m = map(int, sys.stdin.readline().split())\\nk = int(sys.stdin.readline())\\n\\ntotal = n * m - k\\nif total <= 0:\\n  print(0)\\n  return\\n\\na = [d*i for i in range(0, total+1)]\\n\\nfor i in range(1, total+1):\\n  if i <= n:\\n    if a[i] > c:\\n      a[i] = c\\n  else:\\n    if a[i-n] + c < a[i]:\\n      a[i] = a[i-n] + c\\n\\nprint( a[total] )\", \"c, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nk = int(input())\\nkolvo = m * n - k\\nif kolvo < 0:\\n\\tprint(0)\\n\\treturn\\nprint(min(c * (kolvo // n), d * n * (kolvo // n)) + min(c, d * (kolvo % n)))\\n\\n\", \"c, d = list(map(int, input().split(' ')))\\nn, m = list(map(int, input().split(' ')))\\nk = int(input())\\ndp = [0] * 100000\\nneed = n*m - k\\n\\nif need <= 0:\\n    print(0)\\n    quit()\\n\\n\\nfor i in range(1, 100000):\\n    dp[i] = min(dp[i-n]+c, dp[i-1]+d)\\n\\nprint(dp[need])\\n\", \"c, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nk = int(input())\\ntotal = n * m - k\\nif k >= n * m:\\n  print(0)\\nelif c < d:\\n  if total % n == 0:\\n    print(((total // n)) * c)\\n  else:\\n    print(((total // n) + 1) * c)\\nelse:\\n  nr = 0\\n  nn = (c / n)\\n  nm = d\\n  if nn < nm:\\n    #while (nr * n) + n < total:\\n    #  nr += 1\\n    nr = total // n\\n    npn = nr * c\\n    if nr * n < total:\\n      npn = (nr + 1) * c\\n    npm = nr * c + d * (total - nr * n)\\n    print(min(npn, npm))\\n  else:\\n    print(d * total)\\n\", \"c,d = [int(x) for x in input().strip().split()]\\nn,m = [int(x) for x in input().strip().split()]\\nk = int(input().strip())\\n\\nt = n*m-k\\nif t<=0:\\n    print(0)\\nelse:\\n    dp = [0]*(t+1)\\n    for i in range(1,t+1):\\n        dp[i]=min(dp[i-1]+d, c+dp[max(0,i-n)])\\n    print(dp[t])\", \"Pm,Pa = map(int, input().split())\\nN,M = map(int, input().split())\\nk = int(input())\\nRm = Pm / N\\nRa = Pa\\n\\nlo,hi = 0,100000\\n\\n\\ndef count(mid):\\n\\tnonlocal Pm,Pa,Rm,Ra,N\\n\\tans = 0\\n\\twhile True:\\n\\t\\tif mid < min(Pm, Pa):\\n\\t\\t\\tbreak\\n\\t\\tif Ra <= Rm:\\n\\t\\t\\tif mid >= Pa:\\n\\t\\t\\t\\tans += 1\\n\\t\\t\\t\\tmid -= Pa\\n\\t\\t\\telse:\\n\\t\\t\\t\\tans += N\\n\\t\\t\\t\\tmid -= Pm\\n\\t\\telse:\\n\\t\\t\\tif mid >= Pm:\\n\\t\\t\\t\\tans += N\\n\\t\\t\\t\\tmid -= Pm\\n\\t\\t\\telse:\\n\\t\\t\\t\\tans += 1\\n\\t\\t\\t\\tmid -= Pa\\n\\treturn ans\\nwhile lo < hi:\\n\\tmid = (lo + hi) >> 1\\n\\tif count(mid) >= N * M - k:\\n\\t\\thi = mid\\n\\telse:\\n\\t\\tlo = mid + 1\\nprint(lo)\", \"# Made By Mostafa_Khaled \\nbot = True \\nc, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nk = int(input())\\nkolvo = m * n - k\\nif kolvo < 0:\\n\\tprint(0)\\n\\treturn\\nprint(min(c * (kolvo // n), d * n * (kolvo // n)) + min(c, d * (kolvo % n)))\\n\\n\\n\\n# Made By Mostafa_Khaled\\n\", \"c,d = list(map(int, input().split(\\\" \\\")))\\nn, m = list(map(int, input().split(\\\" \\\")))\\nk = int(input())\\nmini = n*m-k\\nif mini < 1:\\n\\tprint(0)\\nelif d * n <= c: # easier one at a time\\n\\tprint(d*mini)\\nelse:\\n\\ttotal = (mini // n) * c\\n\\tmini = mini % n\\n\\ttotal += min(c, d*mini)\\n\\tprint(total)\", \"c,d=map(int,input().split())\\nn,m=map(int,input().split())\\nk=int(input())\\ntot=n*m\\nif(k>=tot):\\n\\tprint(\\\"0\\\")\\nelse:\\n\\trem=tot-k\\n\\tx=n/c\\n\\ty=1/d\\n\\tans=0\\n\\tif(x>=y):\\n\\t\\ttemp=rem//n\\n\\t\\tbacha=rem%n\\n\\t\\tif(bacha*d<=c):\\n\\t\\t\\tans=temp*c+bacha*d\\n\\t\\telse:\\n\\t\\t\\tans=(temp+1)*c\\n\\telse:\\n\\t\\tans=rem*d\\n\\tprint(ans)\", \"c,d = map(int,input().split())\\nn,m = map(int,input().split())\\nk = int(input())\\nx = n*m\\nif k>=x:print(0);return\\nif c<=d:\\n    div,mod=(x-k)//n,(x-k)%n\\n    if mod>0:div+=1\\n    print(div*c)\\nelse:\\n    if d*n<=c:print((x-k)*d)\\n    else:\\n        res=(x-k)//n*c\\n        mod=(x-k)%n\\n        if c<mod*d:res+=c\\n        else:res+=mod*d\\n        print(res)\", \"c,d = map(int,input().split())\\nn,m = map(int,input().split())\\nk = int(input())\\nf = [float('+inf') for i in range(n*m+n+k+2)]\\nf[0] = f[k] =  0\\nfor i in range(n*m):\\n    f[i+1] = min(f[i+1],f[i]+d)\\n    f[i+n] = min(f[i+n],f[i]+c)\\nprint(min(f[n*m:]))\", \"c, d = list(map(int, input().split()))\\nn, m = list(map(int, input().split()))\\nk = int(input())\\nneed = n*m - k\\nif need <= 0:\\n    print(0)\\nelse:\\n    r1 = c / n\\n    if r1 < d:\\n        div, rest = divmod(need, n)\\n        cont = div * c\\n        cont += min(c, d*rest)\\n        print(max(0,cont))\\n    else:\\n        print(need*d)\\n\", \"#Codeforces problem 417A: Elimination\\n\\ndef roof(n,p):\\n\\tr = p // n\\n\\tif p%n > 0:\\n\\t\\tr = r + 1\\n\\treturn r\\n\\nc,d = (int(element) for element in input().split())\\n\\nn,m = (int(element) for element in input().split())\\n\\nk = int(input())\\n\\nneeded_number_of_problems = 0\\n\\n#people still needed for the 2214 Russian Code Cup\\\"\\np = m*n - k\\n\\nwhile p > 0:\\n\\tx = roof(n,p)\\n\\tif d*p < c*x:\\n\\t\\t#get people from the additional rounds\\n\\t\\tneeded_number_of_problems += d\\n\\t\\tp = p - 1\\n\\telse:\\n\\t\\t#get people from main round\\n\\t\\tneeded_number_of_problems += c\\n\\t\\tp = p - n\\n\\nprint(needed_number_of_problems)\", \"c, d = map(int, input().split())\\nn, m = map(int, input().split())\\nk = int(input())\\ndp = [0] * ((n + 1) * m + k)\\nfor i in range(1, n * m - k + 1):\\n    dp[i] = min(dp[i - 1] + d, dp[i - n] + c)\\nprint(dp[n * m - k])\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 10\\n7 2\\n1\\n\",\n    \"2 2\\n2 1\\n2\\n\",\n    \"8 9\\n2 2\\n3\\n\",\n    \"5 5\\n8 8\\n7\\n\",\n    \"1 8\\n8 10\\n8\\n\",\n    \"5 7\\n9 1\\n8\\n\",\n    \"35 28\\n35 60\\n44\\n\",\n    \"19 76\\n91 91\\n87\\n\",\n    \"20 38\\n38 70\\n58\\n\",\n    \"2 81\\n3 39\\n45\\n\",\n    \"7 63\\n18 69\\n30\\n\",\n    \"89 69\\n57 38\\n15\\n\",\n    \"3 30\\n10 83\\n57\\n\",\n    \"100 3\\n93 23\\n98\\n\",\n    \"2 78\\n21 24\\n88\\n\",\n    \"40 80\\n4 31\\n63\\n\",\n    \"1 48\\n89 76\\n24\\n\",\n    \"5 25\\n13 76\\n86\\n\",\n    \"23 86\\n83 88\\n62\\n\",\n    \"1 93\\n76 40\\n39\\n\",\n    \"53 93\\n10 70\\n9\\n\",\n    \"100 100\\n100 100\\n100\\n\",\n    \"10 100\\n100 100\\n99\\n\",\n    \"1 100\\n99 100\\n1\\n\",\n    \"10 2\\n7 2\\n3\\n\",\n    \"4 1\\n5 3\\n8\\n\",\n    \"2 2\\n2 1\\n20\\n\",\n    \"7 5\\n1 1\\n10\\n\",\n    \"4 5\\n9 10\\n100\\n\",\n    \"10 1\\n1 2\\n1\\n\",\n    \"16 6\\n3 12\\n7\\n\",\n    \"10 1\\n1 100\\n1\\n\",\n    \"2 1\\n3 4\\n2\\n\",\n    \"2 1\\n1 1\\n10\\n\",\n    \"100 1\\n2 3\\n1\\n\",\n    \"10 2\\n1 11\\n1\\n\",\n    \"10 10\\n1 1\\n100\\n\",\n    \"100 1\\n50 100\\n1\\n\",\n    \"10 1\\n2 2\\n3\\n\",\n    \"3 1\\n9 10\\n80\\n\",\n    \"100 1\\n1 100\\n1\\n\",\n    \"10 9\\n10 10\\n9\\n\",\n    \"1 1\\n1 1\\n99\\n\",\n    \"10 9\\n1 1\\n100\\n\",\n    \"4 1\\n5 1\\n10\\n\",\n    \"5 1\\n6 3\\n5\\n\",\n    \"10 1\\n1 1\\n10\\n\",\n    \"1 1\\n1 1\\n10\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"0\\n\",\n    \"8\\n\",\n    \"40\\n\",\n    \"9\\n\",\n    \"5\\n\",\n    \"2065\\n\",\n    \"1729\\n\",\n    \"1380\\n\",\n    \"48\\n\",\n    \"476\\n\",\n    \"3382\\n\",\n    \"234\\n\",\n    \"2200\\n\",\n    \"40\\n\",\n    \"640\\n\",\n    \"76\\n\",\n    \"350\\n\",\n    \"2024\\n\",\n    \"40\\n\",\n    \"3710\\n\",\n    \"9900\\n\",\n    \"1000\\n\",\n    \"100\\n\",\n    \"18\\n\",\n    \"6\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"156\\n\",\n    \"99\\n\",\n    \"7\\n\",\n    \"0\\n\",\n    \"5\\n\",\n    \"20\\n\",\n    \"0\\n\",\n    \"4999\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"99\\n\",\n    \"99\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"11\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/417/A",
  "starter_code": ""
}