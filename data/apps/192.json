{
  "task_id": "APPS/192",
  "problem_id": 192,
  "prompt": "Memory is now interested in the de-evolution of objects, specifically triangles. He starts with an equilateral triangle of side length x, and he wishes to perform operations to obtain an equilateral triangle of side length y.\n\nIn a single second, he can modify the length of a single side of the current triangle such that it remains a non-degenerate triangle (triangle of positive area). At any moment of time, the length of each side should be integer.\n\nWhat is the minimum number of seconds required for Memory to obtain the equilateral triangle of side length y?\n\n\n-----Input-----\n\nThe first and only line contains two integers x and y (3 \u2264 y < x \u2264 100 000)\u00a0\u2014 the starting and ending equilateral triangle side lengths respectively.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds required for Memory to obtain the equilateral triangle of side length y if he starts with the equilateral triangle of side length x.\n\n\n-----Examples-----\nInput\n6 3\n\nOutput\n4\n\nInput\n8 5\n\nOutput\n3\n\nInput\n22 4\n\nOutput\n6\n\n\n\n-----Note-----\n\nIn the first sample test, Memory starts with an equilateral triangle of side length 6 and wants one of side length 3. Denote a triangle with sides a, b, and c as (a, b, c). Then, Memory can do $(6,6,6) \\rightarrow(6,6,3) \\rightarrow(6,4,3) \\rightarrow(3,4,3) \\rightarrow(3,3,3)$.\n\nIn the second sample test, Memory can do $(8,8,8) \\rightarrow(8,8,5) \\rightarrow(8,5,5) \\rightarrow(5,5,5)$.\n\nIn the third sample test, Memory can do: $(22,22,22) \\rightarrow(7,22,22) \\rightarrow(7,22,16) \\rightarrow(7,10,16) \\rightarrow(7,10,4) \\rightarrow$\n\n$(7,4,4) \\rightarrow(4,4,4)$.",
  "solutions": "[\"x, y = list(map(int, input().split()))\\nx, y = y, x\\nA = x\\nB = x\\ncurr = x\\ncount = 0\\nwhile curr < y:\\n\\tcurr = B + A - 1\\n\\tA, B = B, curr\\n\\tcount += 1\\ncount += 2\\nprint(count)\\n\", \"t, f = list(map(int, input().split()))\\ns = [f] * 3\\ncount = 0\\nwhile sum(s) < 3*t:\\n\\ts.sort()\\n\\ts[0] = min(t, s[1]+s[2] - 1)\\n\\tcount += 1\\nprint(count)\\n\", \"x, y = list(map(int, input().split()))\\nif (x > y):\\n   x, y = y, x\\na = x\\nb = x\\nc = x\\nans = 0\\nwhile not (a == b == c == y):\\n    if (a <= b and a <= c):\\n        a = min(b + c - 1, y)\\n    elif (b <= a and b <= c):\\n        b = min(a + c - 1, y)\\n    elif (c <= a and c <= b):\\n        c = min(a + b - 1, y)\\n    ans += 1\\nprint(ans)\\n\", \"x,y = map(int,input().split())\\n\\narr = [y,y,y]\\nc = 0\\nt = 0\\nwhile True:\\n    if(arr.count(x)==3):\\n        break\\n    if(t==0):\\n        arr[0] = arr[1]+arr[2]-1\\n        if(arr[0]>x):\\n            arr[0] = x\\n        t = 1\\n    elif(t==1):\\n        arr[1] = arr[0]+arr[2]-1\\n        if(arr[1]>x):\\n            arr[1] = x\\n        t = 2\\n    elif(t==2):\\n        arr[2] = arr[0]+arr[1]-1\\n        if(arr[2]>x):\\n            arr[2] = x\\n        t = 0\\n    c += 1\\nprint(c)\", \"x, y = list(map(int, input().split()))\\nassert y < x\\n\\nit = 0\\n\\na, b, c = y, y, y\\nwhile True:\\n    assert a >= c >= b\\n    assert a + b > c\\n    assert a + c > b\\n    assert b + c > a\\n\\n    b = a + c - 1\\n\\n    assert a + b > c\\n    assert a + c > b\\n    assert b + c > a\\n\\n    it += 1\\n    if b >= x:\\n        b = x\\n        break\\n    a, b, c = b, c, a\\n\\nb = x\\nit += 1\\nassert a + b > c\\nassert a + c > b\\nassert b + c > a\\n\\nc = x\\nit += 1\\nassert a + b > c\\nassert a + c > b\\nassert b + c > a\\n\\nprint(it)\\n\", \"x, y = [int(x) for x in input().split(' ')]\\n\\ntriset = [y] * 3\\nc = 0\\n\\nwhile sum(triset) < x*3:\\n    triset.sort()\\n    triset[0] = triset[2] + triset[1] - 1\\n    if triset[0] > x: triset[0] = x\\n    c += 1\\n\\nprint(c)\\n\", \"s = input()\\nx = int(s.split()[0])\\ny = int(s.split()[1])\\na = [0] * 25\\na[0] = y\\na[1] = 2 * y - 1\\nans = 0\\nfor i in range(2, 25):\\n    if x <= a[i - 1]:\\n        ans = i + 1\\n        break\\n    a[i] = a[i - 1] + a[i - 2] - 1\\nprint(ans)\\n\", \"3\\n\\ndef transform(a, b, c, y):\\n    ans = 0\\n    while True:\\n        if a == b == c == y:\\n            return ans\\n        a, b, c = sorted([a, b, c], reverse=True)\\n        #print(a, b, c)\\n        c = min(a + b - 1, y)\\n        ans += 1\\n    \\nx, y = list(map(int, input().split()))\\nprint(transform(y, y, y, x))\\n\", \"x, y = list(map(int, input().split()))\\nl = [y, y, y]\\n\\n\\ndef arg():\\n    argmax = 0\\n    argmin = 0\\n    for i in range(1, 3):\\n        if l[i] > l[argmax]:\\n            argmax = i\\n        if l[i] < l[argmin]:\\n            argmin = i\\n    if argmax == argmin:\\n        argmax = 0\\n        argmin = 1\\n    tmp = [0, 1, 2]\\n    tmp.remove(argmax)\\n    tmp.remove(argmin)\\n    return (argmin, tmp[0], argmax)\\n\\ncnt = 0\\nwhile l[0] != x or l[1] != x or l[2] != x:\\n    args = arg()\\n    l[args[0]] = min(x, l[args[2]] + l[args[1]] - 1)\\n    cnt += 1\\nprint(cnt)\\n\", \"x, y = list(map(int, input().split()))\\nx, y = min(x, y), max(x, y)\\na, b, c = x, x, x\\nans = 0\\nwhile (not a == b == c == y):\\n    a = min(b + c - 1, y)\\n    ans += 1\\n    if (not a == b == c == y):\\n        b = min(a + c - 1, y)\\n        ans += 1\\n        if (not a == b == c == y):\\n            c = min(a + b - 1, y)\\n            ans += 1\\n        else:\\n            break\\n    else:\\n        break\\n    \\nprint(ans)\", \"g,a=[int(x) for x in input().split()]\\nb=c=a\\ns=0\\nwhile min(min(a,b),c)<g:\\n    s+=1\\n    l=[a,b,c]\\n    l.sort()\\n    a,b,c=l\\n    a=min(g,c+b-1)\\nprint(s)\", \"def get_next(T):\\n    [a,b,c] = sorted(T)\\n    return [b,c,b+c-1]\\n\\ndef main():\\n    y,x = [int(s) for s in input().split()]\\n    T = [x,x,x]\\n    i = 0\\n    while max(T) < y:\\n        T = get_next(T)\\n        i += 1\\n    print(2+i)\\n\\nmain()\\n\", \"y, x = list(map(int, input(). split()))\\na = x; b = x; c = x; k = 0\\nwhile a < y or b < y or c < y:\\n    if a < c+b-1:\\n        a = c+b-1\\n        k += 1\\n        if a >= y and b >= y and c >= y:\\n            break\\n    if b < a+c-1:\\n        b = a+c-1\\n        k += 1\\n        if a >= y and b >= y and c >= y:\\n            break\\n    if c < a+b-1:\\n        c = a+b-1\\n        k += 1\\n        if a >= y and b >= y and c >= y:\\n            break\\nprint(k)\\n\", \"x,y = list(map(int,input().split()))\\ns = [y,y,y]\\nk = 0\\nwhile sum(s)!=x*3:\\n    mi = min(s)\\n    ma = max(s)\\n    sr = sum(s)-ma-mi\\n    a = sum([sr,ma])-1\\n    if a>x:\\n        a = x\\n    s[s.index(mi)] = a\\n    k+=1\\nprint(k)\\n\", \"x,y = list(map(int,input().split()))\\ns = [y,y,y]\\nk = 0\\nwhile sum(s)!=x*3:\\n    minn = min(s)\\n    maxx = max(s)\\n    sr = sum(s)-maxx-minn\\n    a = sum([sr,maxx])-1\\n    if a>x:\\n        a = x\\n    s[s.index(minn)] = a\\n    k+=1\\nprint(k)\\n\", \"def exists(a, b, c):\\n    return a < b + c and b < a + c and c < a + b\\n\\nx, y = [int(i) for i in input().split()]\\na, b, c = y, y, y\\ncount = 0\\nwhile a != x or b != x or c != x:\\n    a, b, c = sorted([a, b, c])\\n    a = x if exists(x, b, c) else b + c - 1\\n    count += 1\\n    \\nprint(count)\", \"x, y = map(int, input().split())\\ncounter = 0\\n\\nx, y = min(x,y), max(x,y)\\nx1 = x\\nx2 = x\\nx3 = x\\n\\nwhile y > x1 or y > x2 or y > x3:\\n    if x1 != y:\\n        x1 = min(x3 + x2 - 1, y)\\n        counter += 1\\n    if x2 != y:\\n        x2 = min(x1 + x3 - 1, y)\\n        counter += 1\\n    if x3 != y:\\n        x3 = min(x1 + x2 - 1, y)\\n        counter += 1\\n\\n#    print(x1,x2,x3)\\n\\nprint(counter)\", \"\\n          \\nline1=input().split()\\nx=int(line1[0])\\ny=int(line1[1])\\n\\n\\na,b,c=y,y,y\\nsteps=0\\nwhile (a<x or b<x or c<x):\\n    a=b+c-1\\n    steps+=1\\n    a,b,c=min(a,b,c), a+b+c-max(a,b,c)-min(a,b,c), max(a,b,c)\\n    \\nprint (steps)\\n\", \"import math\\n\\nx, y = list(map(int, input().split()))\\nres = 0\\nnow = [y, y, y]\\nwhile min(now) < x:\\n    res += 1\\n    ind = now.index(min(now))\\n    o1, o2 = (ind + 1) % 3, (ind + 2) % 3\\n    now[ind] = now[o1] + now[o2] - 1\\nprint(res)\\n\\n\", \"c=0\\nd=0\\n\\n\\nt=input().split()\\nx=int(t[0])\\ny=int(t[1])\\n\\nxx=[y,y,y]\\nyy=[x,x,x]\\nwhile(yy!=xx):\\n    xx.sort()\\n    z=sum(xx[1:3])-1\\n    c=c+1\\n    if(z>=x):\\n        xx[0]=x\\n\\n    else:\\n        xx[0]=z\\n\\nprint(c)\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\", \"#!/usr/bin/env python3.5\\nimport sys\\n\\ndef read_data():\\n    return list(map(int, next(sys.stdin).split()))\\n\\n\\ndef solve(f, t):\\n    if f > t:\\n        f, t = t, f\\n    if f == t:\\n        return 0\\n    a, b, c = f, f, f \\n    count = 0\\n    while a < t:\\n        c = min(a + b - 1, t)\\n        c, b, a = sorted((a, b, c))\\n        count += 1\\n        #print(a, b, c)\\n    if b < t:\\n        #print(t, t, c)\\n        count += 1\\n        if c < t:\\n            #print(t, t, t)\\n            count += 1\\n    return count\\n        \\n\\n\\ndef __starting_point():\\n    f, t = read_data()\\n    print(solve(f, t))\\n\\n__starting_point()\", \"n,m = list(map(int,input().split()))\\ns = [m,m,m]\\nans = 0\\nwhile s[0] < n:\\n    val = min(n,s[1]+s[2]-1)\\n    s[0] = s[1]\\n    s[1] = s[2]\\n    s[2] = val\\n    ans+=1\\nprint(ans)\\n\\n\", \"def get_next(T):\\n    [a,b,c] = sorted(T)\\n    return [b,c,b+c-1]\\n\\ndef __starting_point():\\n    y,x = [int(a) for a in input().split()]\\n    T = [x,x,x]\\n    # print(T)\\n    i = 0\\n    while max(T) < y:\\n        T = get_next(T)\\n        # print(T)\\n        i+=1\\n\\n    print(2+i)\\n__starting_point()\", \"x, y = map(int,input().split())\\na = [y,y,y]\\ncnt = 0\\nwhile True:\\n    if a[0] == a[1] == a[2] == x:\\n        break\\n    if a[1] + a[2] > x:\\n        a[0] = x\\n    else:\\n        a[0] = a[1] + a[2] - 1\\n    cnt+=1\\n    a.sort()\\nprint(cnt)\", \"t, f = map(int, input().split())\\ns = [f] * 3\\ncount = 0\\nwhile sum(s) < 3*t:\\n\\ts.sort()\\n\\ts[0] = min(t, s[1]+s[2] - 1)\\n\\tcount += 1\\nprint(count)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"6 3\\n\",\n    \"8 5\\n\",\n    \"22 4\\n\",\n    \"4 3\\n\",\n    \"57 27\\n\",\n    \"61 3\\n\",\n    \"5 4\\n\",\n    \"10 6\\n\",\n    \"20 10\\n\",\n    \"30 5\\n\",\n    \"25 24\\n\",\n    \"25 3\\n\",\n    \"12 7\\n\",\n    \"18 6\\n\",\n    \"100000 3\\n\",\n    \"100000 9999\\n\",\n    \"9999 3\\n\",\n    \"5323 32\\n\",\n    \"6666 66\\n\",\n    \"38578 32201\\n\",\n    \"49449 5291\\n\",\n    \"65310 32879\\n\",\n    \"41183 4453\\n\",\n    \"49127 9714\\n\",\n    \"19684 12784\\n\",\n    \"15332 5489\\n\",\n    \"33904 32701\\n\",\n    \"9258 2966\\n\",\n    \"21648 11231\\n\",\n    \"90952 47239\\n\",\n    \"49298 23199\\n\",\n    \"33643 24915\\n\",\n    \"40651 5137\\n\",\n    \"52991 15644\\n\",\n    \"97075 62157\\n\",\n    \"82767 53725\\n\",\n    \"58915 26212\\n\",\n    \"86516 16353\\n\",\n    \"14746 7504\\n\",\n    \"20404 7529\\n\",\n    \"52614 8572\\n\",\n    \"50561 50123\\n\",\n    \"37509 7908\\n\",\n    \"36575 23933\\n\",\n    \"75842 8002\\n\",\n    \"47357 2692\\n\",\n    \"23214 4255\\n\",\n    \"9474 46\\n\",\n    \"79874 76143\\n\",\n    \"63784 31333\\n\",\n    \"70689 29493\\n\",\n    \"43575 4086\\n\",\n    \"87099 7410\\n\",\n    \"75749 55910\\n\",\n    \"87827 20996\\n\",\n    \"31162 4580\\n\",\n    \"63175 33696\\n\",\n    \"15108 10033\\n\",\n    \"82991 29195\\n\",\n    \"48258 12837\\n\",\n    \"59859 33779\\n\",\n    \"93698 23890\\n\",\n    \"42724 379\\n\",\n    \"70434 39286\\n\",\n    \"69826 18300\\n\",\n    \"57825 17636\\n\",\n    \"64898 2076\\n\",\n    \"76375 67152\\n\",\n    \"30698 3778\\n\",\n    \"100 3\\n\",\n    \"41 3\\n\",\n    \"28 4\\n\",\n    \"2487 19\\n\",\n    \"100000 25000\\n\",\n    \"10000 3\\n\",\n    \"16 3\\n\"\n  ],\n  \"outputs\": [\n    \"4\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"25\\n\",\n    \"7\\n\",\n    \"20\\n\",\n    \"13\\n\",\n    \"12\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"6\\n\",\n    \"13\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"12\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"9\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"10\\n\",\n    \"8\\n\",\n    \"7\\n\",\n    \"12\\n\",\n    \"5\\n\",\n    \"20\\n\",\n    \"6\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/712/C",
  "starter_code": ""
}