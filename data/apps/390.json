{
  "task_id": "APPS/390",
  "problem_id": 390,
  "prompt": "A group of $n$ dancers rehearses a performance for the closing ceremony. The dancers are arranged in a row, they've studied their dancing moves and can't change positions. For some of them, a white dancing suit is already bought, for some of them \u2014 a black one, and for the rest the suit will be bought in the future.\n\nOn the day when the suits were to be bought, the director was told that the participants of the olympiad will be happy if the colors of the suits on the scene will form a palindrome. A palindrome is a sequence that is the same when read from left to right and when read from right to left. The director liked the idea, and she wants to buy suits so that the color of the leftmost dancer's suit is the same as the color of the rightmost dancer's suit, the 2nd left is the same as 2nd right, and so on.\n\nThe director knows how many burls it costs to buy a white suit, and how many burls to buy a black suit. You need to find out whether it is possible to buy suits to form a palindrome, and if it's possible, what's the minimal cost of doing so. Remember that dancers can not change positions, and due to bureaucratic reasons it is not allowed to buy new suits for the dancers who already have suits, even if it reduces the overall spending.\n\n\n-----Input-----\n\nThe first line contains three integers $n$, $a$, and $b$ ($1 \\leq n \\leq 20$, $1 \\leq a, b \\leq 100$)\u00a0\u2014 the number of dancers, the cost of a white suit, and the cost of a black suit.\n\nThe next line contains $n$ numbers $c_i$, $i$-th of which denotes the color of the suit of the $i$-th dancer. Number $0$ denotes the white color, $1$\u00a0\u2014 the black color, and $2$ denotes that a suit for this dancer is still to be bought.\n\n\n-----Output-----\n\nIf it is not possible to form a palindrome without swapping dancers and buying new suits for those who have one, then output -1. Otherwise, output the minimal price to get the desired visual effect.\n\n\n-----Examples-----\nInput\n5 100 1\n0 1 2 1 2\n\nOutput\n101\n\nInput\n3 10 12\n1 2 0\n\nOutput\n-1\n\nInput\n3 12 1\n0 1 0\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample, the cheapest way to obtain palindromic colors is to buy a black suit for the third from left dancer and a white suit for the rightmost dancer.\n\nIn the second sample, the leftmost dancer's suit already differs from the rightmost dancer's suit so there is no way to obtain the desired coloring.\n\nIn the third sample, all suits are already bought and their colors form a palindrome.",
  "solutions": "[\"# import sys\\n# sys.stdin = open(\\\"F:\\\\\\\\Scripts\\\\\\\\input\\\",\\\"r\\\")\\n# sys.stdout = open(\\\"F:\\\\\\\\Scripts\\\\\\\\output\\\",\\\"w\\\")\\n\\n\\nMOD = 10**9 + 7\\nI = lambda:list(map(int,input().split()))\\n\\nn , a , b = I()\\nl = I()\\ncost = 0\\nm = min(a,b)\\nfor i in range(n//2):\\n\\tif l[i] + l[n-i-1] == 1:\\n\\t\\tprint(-1)\\n\\t\\treturn\\n\\tif l[i] == 2 and l[n - i - 1] == 2:\\n\\t\\tcost += 2*m\\n\\telif l[i] == 2 or l[n - i - 1] == 2:\\n\\t\\tif l[i] == 1 or l[n - i - 1] == 1:\\n\\t\\t\\tcost += b\\n\\t\\telse:\\n\\t\\t\\tcost += a\\nif n%2 and l[n//2] == 2:\\n\\tcost += m\\nprint(cost)\", \"def __starting_point():\\n    n, a, b = list(map(int, input().split()))\\n    prices = [a, b]\\n    colors = list(map(int, input().split()))\\n    result = 0\\n    for i in range(n // 2):\\n        j = n - 1 - i\\n        if colors[i] != colors[j] and colors[i] != 2 and colors[j] != 2:\\n            print(-1)\\n            return\\n        if colors[i] == colors[j] == 2:\\n            result += 2 * min(prices)\\n        elif colors[i] == 2:\\n            result += prices[colors[j]]\\n        elif colors[j] == 2:\\n            result += prices[colors[i]]\\n    if n & 1 and colors[n // 2] == 2:\\n        result += min(prices)\\n    print(result)\\n\\n__starting_point()\", \"n, a, b = map(int, input().split())\\nA = list(map(int, input().split()))\\nB = A[::-1]\\ncheapest = min(a, b)\\ncost = 0\\nbad = False\\nfor i in range(n):\\n    if A[i] != B[i]:\\n        if A[i] != 2 and B[i] != 2:\\n            bad = True\\n        elif A[i] == 2:\\n            if B[i] == 0:\\n                cost += a\\n            else:\\n                cost += b\\n    else:\\n        if A[i] == 2:\\n            cost += cheapest\\nif bad:\\n    print(-1)\\nelse:\\n    print(cost)\", \"n,a,b=map(int,input().strip().split())\\nl=list(map(int,input().strip().split()))\\nc=min(a,b)\\nans=0\\nfor i in range(n//2):\\n    if l[i]!=2 and l[n-1-i]!=2 and l[i]!=l[n-1-i]:\\n        print (-1)\\n        return\\n    if l[i]==2 and l[n-1-i]==0:\\n        ans=ans+a\\n        continue\\n    if l[i]==2 and l[n-1-i]==1:\\n        ans=ans+b\\n        continue\\n    if l[i]==0 and l[n-1-i]==2:\\n        ans=ans+a\\n        continue\\n    if l[i]==1 and l[n-1-i]==2:\\n        ans=ans+b\\n        continue\\n    if l[i]==2 and l[n-1-i]==2:\\n        ans=ans+2*c\\n        continue\\nif (n%2==1 and l[n//2]==2):\\n    ans=ans+c\\nprint (ans)\", \"n, w, b = map(int, input().split())\\na = list(map(int, input().split()))\\nans = 0\\nfor i in range(n//2):\\n    if a[i] == 1:\\n        if a[n-1-i] == 2:\\n            ans += b\\n        elif a[n-1-i] == 0:\\n            print(-1)\\n            return\\n    elif a[i] == 0:\\n        if a[n-1-i] == 2:\\n            ans += w\\n        elif a[n-1-i] == 1:\\n            print(-1)\\n            return\\n    else:\\n        if a[n-1-i] == 1:\\n            ans += b\\n        elif a[n-1-i] == 0:\\n            ans += w\\n        else:\\n            ans += 2*(min(w, b))\\nif n%2 and a[n//2] == 2:\\n    ans += min(w, b)\\nprint(ans)\", \"n, a, b = map(int, input().split())\\ndancers = list(map(int, input().split()))\\nans = 0\\nreal = True\\nfor i in range(n):\\n    if dancers[i] == 2:\\n        if dancers[n - i - 1] == 2:\\n            ans += min(a, b)\\n        elif dancers[n - i - 1] == 0:\\n            ans += a\\n        else:\\n            ans += b\\n    elif dancers[i] != dancers[n - i - 1] and dancers[n - i - 1] != 2:\\n        real = False\\n        break\\nif real:\\n    print(ans)\\nelse:\\n    print(-1)\", \"n,a,b=list(map(int,input().split()))\\narr=list(map(int,input().split()))\\nflag=0\\nans=0\\ni=0\\nj=n-1\\nwhile(i<j):\\n    if(arr[i]==2):\\n        if(arr[j]==2):\\n            ans+=2*min(a,b)\\n        else:\\n            if(arr[j]==0):\\n                ans+=a\\n            else:\\n                ans+=b\\n    else:\\n        if(arr[j]==2):\\n            if(arr[i]==0):\\n                ans+=a\\n            else:\\n                ans+=b\\n        else:\\n            if(arr[j]!=arr[i]):\\n                flag=1\\n                break\\n    i+=1\\n    j-=1\\nif(n%2!=0):\\n    if(arr[n//2]==2):\\n        ans+=min(a,b)\\nif(flag==1):\\n    print(-1)\\nelse:\\n    print(ans)\\n\\n\", \"def __starting_point():\\n    n, a, b = [int(__) for __ in input().strip().split()]\\n    arr = [int(__) for __ in input().strip().split()]\\n    rev = arr[::-1]\\n    for i in range(n):\\n        if (arr[i] == 1 and rev[i] == 0) or (arr[i] == 0 and rev[i] == 1):\\n            print(-1)\\n            return\\n    ans = 0\\n    for i in range(n):\\n        if arr[i] == 2:\\n            if rev[i] == 0:\\n                ans += a\\n            elif rev[i] == 1:\\n                ans += b\\n            else:\\n                ans += min(a, b)\\n    print(ans)\\n\\n__starting_point()\", \"n,a,b=list(map(int,input().split()))\\nd=list(map(int,input().split()))\\n\\nlow=min(a,b)\\n\\nANS=0\\ncheck=1\\nfor i in range(n):\\n    if d[i]==2:\\n        if d[n-i-1]==0:\\n            ANS+=a\\n        elif d[n-i-1]==1:\\n            ANS+=b\\n        else:\\n            ANS+=low\\n\\nfor i in range(n):\\n    if d[i]==0 and d[n-i-1]==1:\\n        check=0\\n\\nif check==0:\\n    print(-1)\\nelse:\\n    print(ANS)\\n\", \"\\nn, a, b = map(int, input().split())\\n\\ncl = list(map(int, input().split()))\\nll = [a, b]\\n\\nans = 0\\nl = 0\\nr = len(cl) - 1\\nwhile l < r:\\n\\tif cl[l] == 2 and cl[r] == 2:\\n\\t\\tans += 2 * min(a, b)\\n\\telif cl[l] == 2:\\n\\t\\tans += ll[cl[r]]\\n\\telif cl[r] == 2:\\n\\t\\tans += ll[cl[l]]\\n\\telif cl[l] != cl[r]:\\n\\t\\tprint(-1)\\n\\t\\treturn\\n\\tl += 1\\n\\tr -= 1\\n\\nif l == r:\\n\\tif cl[l] == 2:\\n\\t\\tans += min(a, b)\\n\\nprint(ans)\", \"\\ndef mi():\\n\\treturn map(int, input().split())\\n\\nn,w,b = mi()\\na = list(mi())\\n\\n\\nif w<b:\\n\\tmc = 0\\nelse:\\n\\tmc = 1\\nans = 0\\nc = [w,b]\\nfor i in range(n//2):\\n\\tif a[i]==a[n-1-i]:\\n\\t\\tif a[i]==2:\\n\\t\\t\\tans+=2*min(w,b)\\n\\tif a[i]!=a[n-1-i]:\\n\\t\\tif max(a[i],a[n-1-i])!=2:\\n\\t\\t\\tprint (-1)\\n\\t\\t\\treturn\\n\\t\\tans+=c[min(a[i],a[n-1-i])]\\nif a[n//2]==2 and n%2:\\n\\tans+=min(w,b)\\nprint (ans)\", \"import sys\\nn,a,b = map(int,sys.stdin.readline().strip().split())\\nl = list(map(int,input().split()))\\nfor i in range(n//2):\\n    if((l[i]==0 and l[n-i-1]==1) or (l[i]==1 and l[n-i-1]==0)):\\n        print(-1)\\n        return\\nans = 0\\nfor i in range(n//2):\\n    if(l[i]==1):\\n        if(l[n-i-1]==2):\\n            ans+=b\\n            l[n-i-1] = 1\\n    elif(l[i]==0):\\n        if(l[n-i-1]==2):\\n            ans+=a\\n            l[n-i-1] = 0\\n    else:\\n        if(l[n-i-1]==1):\\n            ans+=b\\n            l[i] = 1\\n        elif(l[n-i-1]==0):\\n            ans+=a\\n            l[i] = 0\\n        else:\\n            if(a<b):\\n                l[i] = 0\\n                l[n-i-1] = 0\\n            else:\\n                l[i] = 0\\n                l[n-i-1] = 0\\n            ans+=2*min(a,b)\\nfor i in l:\\n    if(not(i==0 or i==1)):\\n        ans+=min(a,b)\\nprint(ans)\", \"def main():\\n    n, c1, c2 = list(map(int, input().split()))\\n    a = [int(i) for i in input().split()]\\n    ans = 0\\n    if n % 2 and a[n // 2] == 2:\\n        ans = min(c1, c2)\\n    for i in range(n // 2):\\n        if a[i] == 0 and a[n - 1 - i] == 1 or a[i] == 1 and a[n - 1 - i] == 0:\\n            print(-1)\\n            return\\n        if a[i] == 2 and a[n - 1 - i] == 2:\\n            ans += 2 * min(c1, c2)\\n        elif a[i] != 2 and a[n - 1 - i] != 2:\\n            continue\\n        elif a[i] == 0 or a[n - 1 - i] == 0:\\n            ans += c1\\n        else:\\n            ans += c2\\n    print(ans)\\n\\n\\nmain()\\n\", \"n,a,b=map(int,input().split())\\nc=list(map(int,input().split()))\\nans=0\\nif n%2!=0 and c[n//2]==2:\\n    ans+=min(a,b)\\nfor i in range(n//2):\\n    if c[i]==c[n-i-1]:\\n        if c[i]==2:\\n            ans+=2*(min(a,b))\\n    else:\\n        if c[i]==1 and c[n-i-1]==2 or c[i]==2 and c[n-i-1]==1:\\n            ans+=b\\n        elif c[i]==0 and c[n-i-1]==2 or c[i]==2 and c[n-i-1]==0:\\n            ans+=a\\n        else:\\n            print(-1);return()\\nprint(ans)\", \"import sys\\nf=sys.stdin\\nout=sys.stdout\\n\\nn,a,b=map(int,f.readline().rstrip('\\\\r\\\\n').split())\\nc=list(map(int,f.readline().rstrip('\\\\r\\\\n').split()))\\nj=n-1\\ncost,flag=0,0\\nfor i in range(n//2):\\n\\tif c[i]==c[j] and c[i]==2:\\n\\t\\tcost+=(2*min(a,b))\\n\\telif c[i]!=c[j] and c[i]==2:\\n\\t\\tif c[j]==0:\\n\\t\\t\\tcost+=a\\n\\t\\telse:\\n\\t\\t\\tcost+=b\\n\\telif c[i]!=c[j] and c[j]==2:\\n\\t\\tif c[i]==0:\\n\\t\\t\\tcost+=a\\n\\t\\telse:\\n\\t\\t\\tcost+=b\\n\\telif c[i]!=c[j]:\\n\\t\\tflag=1\\n\\t\\tbreak\\n\\tj-=1\\nif (n&1==1):\\n\\tif c[(n//2)]==2:\\n\\t\\tcost+=min(a,b)\\nif(flag==1):\\n\\tout.write(str(-1)+\\\"\\\\n\\\")\\nelse:\\n\\tout.write(str(cost)+\\\"\\\\n\\\")\", \"n, a, b = list(map(int, input().split()))\\narr = list(map(int, input().split()))\\n\\nsum = 0\\nfor i in range(n // 2):\\n    nums = sorted((arr[i], arr[-1 - i]))\\n    if nums[0] == 0 and nums[1] == 1:\\n        print(-1)\\n        return\\n    elif nums[0] == 2 and nums[1] == 2:\\n        sum += 2 * min(a, b)\\n    elif nums[0] == 0 and nums[1] == 2:\\n        sum += a\\n    elif nums[0] == 1 and nums[1] == 2:\\n        sum += b\\n\\nif n % 2 == 1:\\n    if arr[n // 2] == 2:\\n        sum += min(a, b)\\n\\nprint(sum)\\n\", \"n, a, b = input().split()\\nn = int(n)\\n\\ncost = {}\\n\\ncost[\\\"0\\\"] = int(a)\\ncost[\\\"1\\\"] = int(b) \\n\\naux = min(cost[\\\"0\\\"], cost[\\\"1\\\"])\\n\\nnuns = input().split()\\n\\nresp = 0\\n\\nfor i in range(n):\\n\\tif nuns[i]==\\\"2\\\":\\n\\t\\tif nuns[-(i+1)]==\\\"2\\\":\\n\\t\\t\\tresp += aux\\n\\t\\telse:\\n\\t\\t\\tresp += cost[nuns[-(i+1)]]\\n\\telif nuns[i]!=nuns[-(i+1)] and  nuns[-(i+1)]!=\\\"2\\\":\\n\\t\\tresp = -1\\n\\t\\tbreak\\n\\t\\t\\nprint(resp)\\n\", \"n, a, b = map(int, input().split())\\nl = [int(x) for x in input().split()]\\nres = 0\\nfor i in range(n//2):\\n    x, y = l[i], l[-1-i]\\n    if 2 in [x, y]:\\n        if x == y:\\n            res += 2 * min(a, b)\\n        else:\\n            res += a if min(x, y) == 0 else b\\n    elif x != y:\\n        res = -1\\n        break\\nif (n % 2 == 1) and (res != -1) and (l[n//2] == 2):\\n    res += min(a, b)\\nprint(res)\", \"n, a, b = map(int, input().split())\\nc = list(map(int, input().split()))\\nm = min(a, b)\\ncnt = 0\\n\\nif n % 2 == 1:\\n    if c[n//2] == 2:\\n        cnt += m\\n\\nfor i in range(n//2):\\n    left = c[i]\\n    right = c[-i-1]\\n    if ((left == 0) and (right == 1)) or ((left == 1) and (right == 0)):\\n        cnt = -1\\n        break\\n    else:\\n        if left != right:\\n            if left == 2:\\n                if right == 0:\\n                    cnt += a\\n                else:\\n                    cnt += b\\n            else:\\n                if left == 0:\\n                    cnt += a\\n                else:\\n                    cnt += b            \\n        if left == right:\\n            if left == 2:\\n                cnt += 2*m\\n\\nprint(cnt)\", \"n, a, b = map(int, input().split())\\nmas = list(map(int, input().split()))\\ncount = 0\\nfor i in range(n // 2):\\n    r, l = mas[i], mas[n - i - 1]\\n    if (mas[i] != mas[n-i-1]) or mas[i] == 2:\\n        if r != 2 and l != 2:\\n            print(-1)\\n            return\\n        else:\\n            if r == 2 and l == 2:\\n                count += min(a, b) * 2\\n            else:\\n                if r == 0 or l == 0:\\n                    count += a\\n                else:\\n                    count += b\\n\\nif n % 2 == 1:\\n    if mas[n // 2] == 2:\\n        count += min(a, b)\\nprint(count)\", \"n, a, b = map(int, input().split())\\nc = list(map(int, input().split()))\\nans = 0\\nfor i in range(n // 2):\\n    if c[i] == 2 and c[n - i - 1] == 2:\\n        ans += min(a, b) * 2\\n    elif c[i] == 2:\\n        if c[n - i - 1] == 0:\\n            ans += a\\n        else:\\n            ans += b\\n    elif c[n - i - 1] == 2:\\n        if c[i] == 0:\\n            ans += a\\n        else:\\n            ans += b\\n    elif c[i] != c[n - i - 1]:\\n        print(-1)\\n        break\\nelse:\\n    if n % 2:\\n        ans += (c[n // 2] == 2) * min(a, b)\\n    print(ans)\", \"#!/usr/bin/env python3\\nn, a, b = list(map(int, input().split()))\\np = [a,b,min(a, b)]\\nc = [int(x) for x in input().split()]\\ns = 0\\nd = n // 2\\nif n % 2:\\n    s += p[c[d]] if c[d] == 2 else 0\\n    j = d + 1\\nelse:\\n    j = d\\ni = d - 1\\nwhile i >= 0:\\n    if c[i] == c[j]:\\n        if c[i] == 2: s += 2*p[c[i]]\\n    elif c[j] == 2: s += p[c[i]]\\n    elif c[i] == 2: s += p[c[j]]\\n    else:\\n        s = -1\\n        break\\n    i-=1\\n    j+=1\\nprint(s)\\n    \\n\", \"n, a, b = map(int, input().split())\\nc = list(map(int, input().split()))\\ni, j = 0, n-1\\ns = 0\\nt = True\\nwhile i < j:\\n    if c[i] != c[j] and c[i] != 2 and c[j] != 2:\\n        t = False\\n        break\\n    elif c[i] == 2 and c[j] == 1:\\n        s += b\\n        i += 1\\n        j -= 1\\n    elif c[i] == 1 and c[j] == 2:\\n        s += b\\n        i += 1\\n        j -= 1        \\n    elif c[i] == 0 and c[j] == 2:\\n        s += a\\n        i += 1\\n        j -= 1        \\n    elif c[i] == 2 and c[j] == 0:\\n        s += a\\n        i += 1\\n        j -= 1        \\n    elif c[i] == 2 and c[j] == 2:\\n        s += 2*min(a, b)\\n        i += 1\\n        j -= 1\\n    else:\\n        i += 1\\n        j -= 1        \\nif n % 2 == 1:\\n    if c[n//2] == 2:\\n        s += min(a, b)\\nif t:\\n    print(s)\\nelse:\\n    print(-1)\", \"n, a, b = map(int, input().split())\\nc = list(map(int, input().split()))\\ncount = 0\\nans = \\\"YES\\\"\\nfor i in range(n // 2):\\n    if c[i] == 2:\\n        if c[-(i + 1)] == 2:\\n            count += min(a, b) * 2\\n        elif c[-(i + 1)] == 0:\\n            count += a\\n        elif c[-(i + 1)] == 1:\\n            count += b\\n    elif c[i] == 0:\\n        if c[-(i + 1)] == 2:\\n            count += a\\n        elif c[-(i + 1)] == 0:\\n            count += 0\\n        elif c[-(i + 1)] == 1:\\n            ans = \\\"NO\\\"\\n            break\\n    elif c[i] == 1:\\n        if c[-(i + 1)] == 2:\\n            count += b\\n        elif c[-(i + 1)] == 1:\\n            count += 0\\n        elif c[-(i + 1)] == 0:\\n            ans = \\\"NO\\\"\\n            break\\nif n % 2 == 1 and c[n // 2] == 2:\\n    count += min(a, b)\\nif ans == \\\"NO\\\":\\n    print(-1)\\nelse:\\n    print(count)\", \"from sys import stdin, stdout \\nfrom bisect import bisect_left, bisect_right\\nfrom collections import defaultdict\\nimport math\\nfrom fractions import Fraction as frac\\nfrom random import random\\ncin = stdin.readline\\ndef cout(x):\\n\\tstdout.write(str(x)+'\\\\n')\\ndef var(type = int):\\n    return type(stdin.readline())\\ndef readline(type = int):\\n    return list(map(type,stdin.readline().split()))\\ndef readlist(type = int):\\n    return list(map(type,stdin.readline().split()))\\ndef sorted_indexes(arr):\\n    return sorted(list(range(len(arr))),key=arr.__getitem__)\\ndef printr(arr):\\n    [stdout.write(str(x)+' ')   for x in arr]\\n    cout('')\\ndef find_lt(a, x):#'Find rightmost value less than x'\\n    i = bisect_left(a, x)\\n    if i:\\n        return a[i-1]\\n    raise ValueError\\ndef find_gt(a, x):#'Find leftmost value greater than x'\\n    i = bisect_right(a, x)\\n    if i != len(a):\\n        return a[i]\\n    raise ValueError\\ndef dist(x,y):\\n    return math.sqrt(x*x + y*y)\\ndef binary_search(arr, x):\\n    i = bisect_left(arr, x)\\n    if i == len(arr) or arr[i] != x:\\n        return -1\\n    return i\\n\\n# ---------------------Template ends-------------sdpt,sdpt131[Sudipta Banik]---------------------\\n\\n# mp = [0]*201\\n# ops = [0]*201\\n# def go(arr,i,j ,dp):\\n#     if i==j and ops[i] is None:\\n#         return [mp[i],mp[i]]\\n#     if i>j:\\n#         return [0,0]\\n#     if dp[i][j]:\\n#         return dp[i][j]\\n#     mx = -1000000000\\n#     mn = 1000000000\\n#     for k in range(i+1,j,2):\\n#         if ops[k]:\\n#             left = go(arr,i,k-1,dp)\\n#             right = go(arr,k+1,j,dp)\\n#             mx = max(mx,left[0] + right[0])\\n#             mn = min(mn,left[1] + right[1])\\n#         else:\\n#             left = go(arr,i,k-1,dp)\\n#             right = go(arr,k+1,j,dp)\\n#             mx = max(mx,left[0] - right[1])\\n#             mn = min(mn,left[1] - right[0])\\n#     dp[i][j] = [mx,mn]\\n#     return [mx,mn]\\n\\n    \\nn , a , b = readline(int)\\nprice = [a,b]\\narr = readlist(int)\\nhalf = n//2\\ncost = 0\\nflg = True\\nfor i in range(half):\\n    if arr[i] == arr[n-1-i] == 2:\\n        cost += 2*min(a,b)\\n    elif arr[i] ==2 and arr[n-1-i] <= 1:\\n        cost += price[arr[n-1-i]]\\n    elif arr[i] <= 1 and arr[n-1-i] == 2:\\n        cost += price[arr[i]]\\n    elif arr[i] != arr[n-1-i]:\\n        flg = False\\n        break\\nif n%2 == 1:\\n    if arr[half] == 2:\\n        cost += min(a,b)\\nif not flg:\\n    print(-1)\\nelse:\\n    print(cost)\\n\\n\\n\\n    \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n# # def tobit(s):\\n# #     x = []\\n# #     for _ in range(3):\\n# #         x.append(s%2)\\n# #         s//=2\\n# #     return x\\n\\n# def power(x, y, p) :\\n#     res = 1\\n#     x = x % p \\n#     while (y > 0) :\\n#         if ((y & 1) == 1) :\\n#             res = (res * x) % p\\n#         y = y >> 1\\n#         x = (x * x) % p\\n#     return res\\n\\n\\n\\n\\n# def setCount(x):\\n#     return bin(x).count('1')\\n\\n# for _ in range(var()):\\n    \\n#     a,b,n = readline()\\n#     p = 1000000007  \\n#     diff = abs(a-b)\\n#     mod  = power(a,n,p)\\n#     mod += power(b,n,p)\\n#     print(math.gcd(mod,diff)%p)\\n    \\n    \\n#     # n = var()\\n#     # # print(bin(n))\\n#     # if setCount(n)==2:\\n#     #     print(0)\\n#     # elif setCount(n)==1:\\n#     #     if n == 1:\\n#     #         print(2)\\n#     #     else:\\n#     #         print(1)\\n#     # elif setCount(n)==0:\\n#     #     print(3)\\n#     # else:\\n#     #     lo = n-1\\n#     #     hi = n+1\\n#     #     while(lo >= 3):\\n#     #         if(setCount(lo)==2):\\n#     #             break\\n#     #         lo -=1\\n#     #     while(hi <= 1000):\\n#     #         if(setCount(hi)==2):\\n#     #             break\\n#     #         hi +=1\\n        \\n#     #     if (hi - n) < (n - lo):\\n#     #         print(hi-n)\\n#     #     else:\\n#     #         print(n-lo)\\n        \\n    \\n\\n\\n\\n\\n\\n# #     s = cin()\\n# #     t = cin()\\n# #     flg = False\\n# #     for el in range(8):\\n# #         bits = tobit(el)\\n# #         ch = []\\n# #         # printr(bits)\\n# #         for i in range(3):\\n# #             if bits[i]==0:\\n# #                 ch.append(s[i])\\n# #             else:\\n# #                 ch.append(t[i])\\n# #         ch.sort()\\n# #         if (''.join(ch) == 'bbo'):\\n# #             flg = True\\n# #             break\\n# #     if flg:\\n# #         print(\\\"yes\\\")\\n# #     else:\\n# #         print(\\\"no\\\")\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5 100 1\\n0 1 2 1 2\\n\",\n    \"3 10 12\\n1 2 0\\n\",\n    \"3 12 1\\n0 1 0\\n\",\n    \"10 1 9\\n1 2 1 0 1 0 1 0 0 1\\n\",\n    \"7 16 16\\n1 1 2 2 0 2 1\\n\",\n    \"13 61 9\\n0 0 2 0 1 0 2 1 0 0 2 2 2\\n\",\n    \"20 53 67\\n1 2 1 2 0 0 0 2 2 2 1 0 0 2 0 0 0 1 1 2\\n\",\n    \"1 100 1\\n0\\n\",\n    \"1 1 100\\n2\\n\",\n    \"1 100 1\\n2\\n\",\n    \"2 9 6\\n2 2\\n\",\n    \"2 89 7\\n0 0\\n\",\n    \"3 79 30\\n0 2 2\\n\",\n    \"4 65 44\\n1 2 0 1\\n\",\n    \"5 55 62\\n0 1 1 0 1\\n\",\n    \"6 36 80\\n0 2 1 0 1 1\\n\",\n    \"7 14 98\\n1 0 1 2 2 0 1\\n\",\n    \"8 4 13\\n2 2 1 2 1 2 2 2\\n\",\n    \"9 90 31\\n1 0 0 0 0 2 0 0 2\\n\",\n    \"10 99 62\\n1 2 1 0 2 0 0 2 2 0\\n\",\n    \"11 89 72\\n0 2 2 1 0 0 0 1 0 2 1\\n\",\n    \"12 75 91\\n0 1 2 2 1 0 1 2 0 0 0 1\\n\",\n    \"13 89 65\\n2 2 0 1 2 1 1 0 2 1 0 0 0\\n\",\n    \"14 46 23\\n2 0 2 0 2 1 0 2 1 1 1 1 1 2\\n\",\n    \"15 24 41\\n0 2 1 1 0 0 1 0 0 0 0 0 0 1 0\\n\",\n    \"16 14 64\\n2 1 1 0 1 0 2 1 2 2 0 2 2 2 2 1\\n\",\n    \"17 100 82\\n0 2 1 2 0 2 0 0 2 2 2 1 0 0 2 0 1\\n\",\n    \"18 89 92\\n2 0 2 1 2 2 0 2 0 0 0 0 2 0 1 1 0 0\\n\",\n    \"19 75 14\\n2 2 2 2 0 2 1 0 0 0 0 1 1 1 2 0 2 0 1\\n\",\n    \"20 53 32\\n0 0 1 1 1 2 2 2 2 2 2 1 1 1 2 0 2 2 0 0\\n\",\n    \"1 1 100\\n1\\n\",\n    \"1 100 1\\n1\\n\",\n    \"1 1 100\\n0\\n\",\n    \"2 1 1\\n2 2\\n\",\n    \"2 100 1\\n2 2\\n\",\n    \"3 100 100\\n2 2 2\\n\",\n    \"2 2 2\\n2 2\\n\",\n    \"5 100 1\\n0 2 2 2 2\\n\",\n    \"3 10 10\\n2 2 2\\n\",\n    \"5 2 22\\n2 2 2 2 2\\n\",\n    \"3 3 3\\n2 2 2\\n\",\n    \"2 100 1\\n0 1\\n\",\n    \"2 2 3\\n2 2\\n\",\n    \"3 2 2\\n2 2 2\\n\",\n    \"3 1 1\\n0 0 0\\n\",\n    \"3 1 4\\n2 2 2\\n\",\n    \"3 10 1\\n2 0 2\\n\",\n    \"9 1 2\\n1 0 2 2 2 2 2 0 1\\n\",\n    \"3 4 8\\n2 1 2\\n\",\n    \"3 2 4\\n2 2 2\\n\",\n    \"5 2 3\\n2 2 2 2 2\\n\",\n    \"3 4 5\\n2 1 2\\n\",\n    \"3 1 1\\n1 2 0\\n\"\n  ],\n  \"outputs\": [\n    \"101\\n\",\n    \"-1\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"48\\n\",\n    \"-1\\n\",\n    \"413\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"12\\n\",\n    \"0\\n\",\n    \"109\\n\",\n    \"65\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"112\\n\",\n    \"42\\n\",\n    \"121\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"362\\n\",\n    \"-1\\n\",\n    \"537\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"300\\n\",\n    \"4\\n\",\n    \"103\\n\",\n    \"30\\n\",\n    \"10\\n\",\n    \"9\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"8\\n\",\n    \"6\\n\",\n    \"10\\n\",\n    \"8\\n\",\n    \"-1\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1040/A",
  "starter_code": ""
}