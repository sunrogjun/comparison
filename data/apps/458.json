{
  "task_id": "APPS/458",
  "problem_id": 458,
  "prompt": "Little Dima misbehaved during a math lesson a lot and the nasty teacher Mr. Pickles gave him the following problem as a punishment. \n\nFind all integer solutions x (0 < x < 10^9) of the equation:x = b\u00b7s(x)^{a} + c,  \n\nwhere a, b, c are some predetermined constant values and function s(x) determines the sum of all digits in the decimal representation of number x.\n\nThe teacher gives this problem to Dima for each lesson. He changes only the parameters of the equation: a, b, c. Dima got sick of getting bad marks and he asks you to help him solve this challenging problem.\n\n\n-----Input-----\n\nThe first line contains three space-separated integers: a, b, c (1 \u2264 a \u2264 5;\u00a01 \u2264 b \u2264 10000;\u00a0 - 10000 \u2264 c \u2264 10000).\n\n\n-----Output-----\n\nPrint integer n \u2014 the number of the solutions that you've found. Next print n integers in the increasing order \u2014 the solutions of the given equation. Print only integer solutions that are larger than zero and strictly less than 10^9.\n\n\n-----Examples-----\nInput\n3 2 8\n\nOutput\n3\n10 2008 13726 \nInput\n1 2 -18\n\nOutput\n0\n\nInput\n2 2 -1\n\nOutput\n4\n1 31 337 967",
  "solutions": "[\"a, b, c = list(map(int, input().split()))\\nans = []\\nfor sum in range(1, 200):\\n    x = b * sum ** a + c\\n    if x <= 0 or x >= 10 ** 9:\\n        continue\\n    summ = 0\\n    for aa in str(x):\\n        summ += int(aa)\\n    if sum == summ:\\n        ans.append(x)\\nprint(len(ans))\\nprint(*ans)\\n\", \"ID = input().split()\\na = int(ID[0])\\nb = int(ID[1])\\nc = int(ID[2])\\nans = []\\n\\nfor i in range(1, 82, 1):\\n    x = b * (i ** a) + c\\n    if (x > 0 and x < 1000000000):\\n        y = x\\n        z = 0\\n        while (y > 0):\\n            z += y % 10\\n            y //= 10\\n        if (z == i):\\n            ans.append(x)\\n\\nprint(len(ans))\\nfor x in ans:\\n    print(x, end = ' ')\\n    \\n\", \"a,b,c = [int(i) for i in input().split()]\\n\\nsol = []\\n\\nfor i in range(81):\\n\\td = b*(i**a)+c\\n\\tif d <= 0 or d >= 1000000000:\\n\\t\\tcontinue\\n\\tif sum([int(j) for j in str(d)]) == i:\\n\\t\\tsol.append(d)\\nprint(len(sol))\\nsol.sort()\\nfor i in sol:\\n\\tprint(i,end=' ')\", \"def s(x):\\n    res = 0\\n    while x > 0:\\n        res += x % 10\\n        x //= 10\\n    return res\\n\\na, b, c = list(map(int, input().split()))\\nans = []\\nfor i in range(100):\\n    x = b * (i**a) + c\\n    if x < 0:\\n        continue\\n    if s(x) == i and 0 < x < 10**9:\\n        ans.append(x);\\n\\nans.sort()\\nprint(len(ans))\\nif len(ans) != 0:\\n    print(*ans)\\n\", \"3\\n\\nimport sys\\n\\n\\ndef sstevk(n):\\n    ret = 0\\n    while n > 0:\\n        ret += n % 10\\n        n //= 10\\n    return ret\\n\\n\\ndef __starting_point():\\n    a, b, c = list(map(int, sys.stdin.readline().split()))\\n    sols = []\\n    for s in range(0, 9*9+1):\\n        x = b * s**a + c\\n        if x <= 0 or x >= 10**9:\\n            continue\\n        if sstevk(x) == s:\\n            sols.append(x)\\n    sols.sort()\\n\\n    print(len(sols))\\n    print(' '.join(str(x) for x in sols))\\n\\n__starting_point()\", \"a, b, c = map(int, input().split())\\n\\ndef sum(x):\\n    s = 0\\n    while x > 0:\\n        s += x % 10\\n        x = x // 10\\n    return s\\nres = []\\nfor i in range(1, 100):\\n    x = b * i ** a + c\\n    if x > 0 and x < 10 ** 9  and sum(x) == i:\\n        res.append(x)\\nres.sort()\\nprint(len(res))\\nprint(*res)\", \"def main():\\n    a, b, c = [int(i) for i in input().split()]\\n    \\n    result = []\\n    for S in range(1, 82):\\n        f = b * S ** a + c\\n        if 0 < f < 10 ** 9 and sum(int(i) for i in str(f)) == S:\\n            result.append(str(f))\\n    \\n    print(len(result))\\n    print(' '.join(result))\\n\\n\\nmain()\\n\", \"def sd(n):\\n    val = 0\\n    while n > 0:\\n        val += n % 10\\n        n //= 10\\n    return val\\n\\na, b, c = (int(x) for x in input().split())\\nl = []\\nfor s in range(1, 82):\\n    cur = b * s ** a + c\\n    if cur > 0 and cur < 10 ** 9 and sd(cur) == s:\\n        l.append(cur)\\n\\nl.sort()\\nprint(len(l))\\nprint(' '.join(str(x) for x in l))\", \"def f(y):\\n    m=0\\n    while y>0:\\n        m+=y%10\\n        y=y//10\\n    return m\\n\\n\\na,b,c=map(int,input().split())\\nans=[]\\nx=1\\nwhile x<82:\\n    k=b*(x**a)+c\\n    if k<10**9 and f(k)==x: ans.append(k)\\n    x+=1\\nprint(len(ans))\\nif len(ans): print(*ans)\", \"import math\\na, b, c = map(int, input().split())\\nans = []\\nfor i in range(1, 82):\\n    x = b * (i ** a) + c\\n    if i == sum(list(map(int, str(abs(x))))) and x < 10 ** 9 and x > 0:\\n        ans.append(x)\\nprint(len(ans))\\nif (len(ans)):\\n    print(*ans)\", \"ans = []\\na, b, c = list(map(int, input().split()))\\n\\ndef sumDig(x):\\n    ret = 0\\n    if x <= 0:\\n        return 100500\\n    while x:\\n        ret += x % 10\\n        x //= 10\\n    return ret \\n\\nfor s in range(1, 90):\\n    val = b * pow(s, a) + c\\n    if 0 < val < 10 ** 9 and sumDig(val) == s:\\n        ans.append(val)\\n\\nprint(len(ans))\\nprint(' '.join(map(str, sorted(ans))))\\n\", \"\\\"\\\"\\\"\\nCodeforces Contest 262 Div 2 Problem B\\n\\nAuthor  : chaotic_iak\\nLanguage: Python 3.3.4\\n\\\"\\\"\\\"\\n\\ndef main():\\n    a,b,c = read()\\n    res = []\\n    for i in range(1, 82): # max is 999999999\\n        x = b * (i**a) + c\\n        if x <= 0 or x >= 10**9: continue\\n        if sum(map(int, list(str(x)))) == i: res.append(x)\\n    res.sort()\\n    print(len(res))\\n    print(\\\" \\\".join(map(str, res)))\\n\\n################################### NON-SOLUTION STUFF BELOW\\n\\ndef read(mode=2):\\n    # 0: String\\n    # 1: List of strings\\n    # 2: List of integers\\n    inputs = input().strip()\\n    if mode == 0: return inputs\\n    if mode == 1: return inputs.split()\\n    if mode == 2: return list(map(int, inputs.split()))\\n\\ndef write(s=\\\"\\\\n\\\"):\\n    if s is None: s = \\\"\\\"\\n    if isinstance(s, list): s = \\\" \\\".join(map(str, s))\\n    s = str(s)\\n    print(s, end=\\\"\\\")\\n\\nwrite(main())\", \"def s(x):\\n    tmp = x\\n    ans = 0\\n    while tmp > 0:\\n        ans += tmp % 10\\n        tmp //= 10\\n    return ans\\n\\ndef main(a, b, c):\\n    ans = []\\n    for i in range(82):\\n        x = b * (i ** a) + c\\n        if 0 < x < 10 ** 9 and s(x) == i:\\n            ans.append(x)\\n    print(len(ans))\\n    for i in ans:\\n        print(i, end = ' ')\\n\\na, b, c = map(int, input().split()) \\nmain(a, b, c)\\n\", \"\\nsolutions = []\\na,b,c = list(map(int,input().split(\\\" \\\")))\\nfor s in range(1,82):\\n    x = b*(s**a)+c;\\n    if (0<x<10**9):\\n        if (sum(map(int,list(str(x)))) == s):\\n            solutions.append(x)\\nprint(len(solutions))\\nprint(\\\" \\\".join(map(str,solutions)))\\n\\n\", \"x = input()\\narr = x.split(' ')\\na = (int)(arr[0])\\nb = (int)(arr[1])\\nc = (int)(arr[2])\\n\\nans = set()\\n\\nfor i in range (1, 82):\\n    temp = b*(i**a) + c\\n    temp1 = 0\\n    temp2 = temp\\n    while temp>0:\\n        temp1 = temp1 + (int)(temp%10)\\n        temp = (int)(temp/10)\\n        \\n    #print(temp2)\\n    #print(temp1)\\n    if temp2>0 and temp2<1000000000 and temp1 == i:\\n            ans.add(temp2)\\n        \\nprint(len(ans));\\nanswer = sorted(ans)\\n\\nif len(ans)!=0:\\n    for i in answer:\\n        print(i , '', end='')\", \"def sum_n(x):\\n    return sum(map(int, list(str(x))))\\n\\na, b, c = list(map(int, input().split()))\\nresult = []\\nfor s in range(1, 82):\\n    x = b * s ** a + c\\n    if 0 < x < 10 ** 9 and s == sum_n(x):\\n        result.append(str(x))\\nprint(len(result))\\nif len(result):\\n    print(\\\" \\\".join(result))\\n\", \"def s(i):\\n    return sum([int(x) for x in str(i)])\\n\\nx=[int(i) for i in input().split()]\\na=x[0]\\nb=x[1]\\nc=x[2]\\nl=[]\\nfor k in range(1,82):\\n    n=b*(k**a) +c\\n    if(n>0 and n<1000000000 and s(n)==k):\\n        l.append(n)\\nprint(len(l))\\nfor j in l:\\n    print(j,end=' ')\", \"a, b, c = map(int, input().split())\\n\\ndef sumd(x):\\n\\ts = 0\\n\\twhile x > 0:\\n\\t\\ts += x % 10\\n\\t\\tx = x // 10\\n\\treturn s\\nsol = []\\nfor s in range(1, 82):\\n\\tx = b*pow(s, a) + c\\n\\tif x > 0 and x < 1000000000 and sumd(x) == s:\\n\\t\\tsol.append(x)\\nprint(len(sol))\\nfor el in sorted(sol):\\n\\tprint(el, end=' ')\\n\", \"a, b, c = map(int, input().split())\\n\\ndef s(x):\\n    xStr = str(x)\\n    sum = 0\\n    for c in xStr:\\n        sum += int(c)\\n    return sum\\n\\n\\nrightSide = []\\nM = 9*9+1\\nfor k in range(1,M):\\n    rightSide.append(b*k**a + c)\\n\\nmyList = []\\nsol = 0\\nfor x in rightSide:\\n    if(x>0 and x<int(1e9) and x==b*s(x)**a + c):\\n        sol += 1\\n        myList.append(x)\\n\\nmyList.sort()\\nprint(sol, end='\\\\n')\\nfor num in myList:\\n    print(num, sep=' ', end=' ')\\n\", \"import math\\ndef s(x):\\n    sum = 0\\n    while x > 0:\\n        sum += x % 10\\n        x //= 10\\n    return sum\\na, b, c = map(int,input().split())\\nans = []\\nfor i in range(82):\\n    x = b * i ** a + c\\n    if x > 0 and x < 10**9 and s(x) == i:\\n        ans.append(x)\\nprint(len(ans))\\nif len(ans)>0:\\n    for x in ans:\\n        print(x, end=\\\" \\\")\\n        \", \"a,b,c= list(map(int,input().split()))\\n\\ncount = 0\\narr=[]\\ndef s(x):\\n    m = str(x)\\n    k = 0\\n    for i in m:\\n        k+=int(i)\\n    return k\\nfor y in range(1,82):\\n    p = (b*pow(y,a)+c)\\n    if p>0 and p<(10**9):\\n        if s(p)==y:\\n\\n            count+=1\\n            arr.append(p)\\n            #print(p)\\nprint(count)\\nfor x in arr:\\n    print(x,end=\\\" \\\")\\n\\n\\n\", \"a, b, c = (int(i) for i in input().split(\\\" \\\"))\\nimport sys\\n# print(a, b, c)\\n\\ndef calculate(a, b, c, s):\\n    # print(\\\"in calc\\\", a,b,c,s)\\n    return b * (s ** a) + c\\n    \\ndef dig_sum(x):\\n    # print(x)\\n    line = str(x).strip(\\\"-\\\")\\n    sum = 0\\n    for i in list(line):\\n        sum += int(i)\\n    return sum\\n    \\nres = []\\nfor i in range(1, 82):\\n    x = calculate(a, b, c, i)\\n    # print(x, dig_sum(x))\\n    if dig_sum(x) == i:\\n        res.append(x)\\n\\nres.sort()\\nres = [str(i) for i in res if i >= 0 and i < 1000000000]\\nprint(len(res))\\nprint(\\\" \\\".join(res))\\nreturn\\n\", \"m=list(input().split())\\na=int(m[0])\\nb=int(m[1])\\nc=int(m[2])\\nfrom math import floor\\nsl=\\\"\\\"\\nslc=0\\n\\nfor i in range (1, 81):\\n    t=b*(i**a)+c\\n    k=0\\n    if (t<1)or(t>999999999):\\n        continue\\n    kk=str(t)\\n    for j in range(len(kk)):\\n        k+=int(kk[j])\\n    if i==k:\\n        sl=sl+' '+str(t)\\n        slc+=1\\nprint(slc)\\nprint(sl[1:])\\n\", \"def sumofdigits(n):\\n    ans=0\\n    while n>0:\\n        ans+=n%10\\n        n//=10\\n    return ans\\na,b,c=map(int,input().split())\\nans=[]\\nfor s in range(1,82):\\n    d=b*s**a+c\\n    if sumofdigits(d)==s and 0<d<1000000000:\\n        ans.append(d)\\nprint(len(ans),'\\\\n',' '.join(map(str,ans)),sep='')\", \"a,b,c = map(int, input().split())\\nMAXNUM = 10**9 + 1\\nans = ''\\nansCount = 0\\n\\ndef s(x):\\n    result = 0\\n    while (x>0):\\n        result += x % 10\\n        x = x // 10\\n    return result\\n\\nfor i in range (1,82):\\n    num = b * (i ** a) + c\\n    if (num > 0 and num < MAXNUM and s(num) == i):\\n        ans = ans + str(num) + ' '\\n        ansCount += 1\\n\\nprint(ansCount)\\nif (ansCount>0):\\n    print(ans)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3 2 8\\n\",\n    \"1 2 -18\\n\",\n    \"2 2 -1\\n\",\n    \"1 1 0\\n\",\n    \"1 37 963\\n\",\n    \"1 298 -1665\\n\",\n    \"1 3034 -9234\\n\",\n    \"5 9998 9998\\n\",\n    \"5 10000 10000\\n\",\n    \"5 65 352\\n\",\n    \"5 9999 9999\\n\",\n    \"4 2099 -38\\n\",\n    \"1 1 -6708\\n\",\n    \"5 36 -46\\n\",\n    \"5 8975 -4\\n\",\n    \"3 2794 -3354\\n\",\n    \"5 1 4473\\n\",\n    \"5 1 -9999\\n\",\n    \"4 4 6\\n\",\n    \"5 19 -666\\n\",\n    \"5 5 -865\\n\",\n    \"2 8468 -3666\\n\",\n    \"4 9359 -3039\\n\",\n    \"5 5706 -1856\\n\",\n    \"2 6828 -39\\n\",\n    \"5 3903 -9847\\n\",\n    \"3 1727 4771\\n\",\n    \"4 1870 9912\\n\",\n    \"3 6300 7035\\n\",\n    \"5 8704 -6190\\n\",\n    \"2 68 3\\n\",\n    \"5 6 -95\\n\",\n    \"2 28 12\\n\",\n    \"3 37 -70\\n\",\n    \"5 3 53\\n\",\n    \"3 2570 4109\\n\",\n    \"3 1139 6335\\n\",\n    \"3 2278 -1329\\n\",\n    \"4 30 719\\n\",\n    \"4 9023 312\\n\",\n    \"5 10000 9\\n\",\n    \"5 7698 5337\\n\",\n    \"5 1 0\\n\",\n    \"5 12 3\\n\",\n    \"5 3903 153\\n\",\n    \"5 10000 0\\n\",\n    \"3 2570 -6691\\n\",\n    \"5 5 13\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n10 2008 13726 \",\n    \"0\\n\",\n    \"4\\n1 31 337 967 \",\n    \"9\\n1 2 3 4 5 6 7 8 9 \",\n    \"16\\n1000 1111 1222 1333 1370 1407 1444 1481 1518 1555 1592 1629 1666 1777 1888 1999 \",\n    \"17\\n123 421 1017 1315 1613 1911 2209 2507 2805 4295 4593 4891 5189 5487 5785 6679 6977 \",\n    \"23\\n12004 21106 24140 30208 33242 39310 42344 48412 51446 54480 57514 60548 63582 66616 69650 72684 75718 78752 81786 87854 90888 96956 99990 \",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n208000352 \",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"5\\n165733932 308990694 392855398 415958984 999999980 \",\n    \"11\\n1424330 14353380 17214841 52526348 60470649 69348430 164920697 184532598 205967449 418199966 459169497 \",\n    \"6\\n90001 2466100 17200369 52511876 60456177 205952977 \",\n    \"13\\n10 1030 40006 114250 202506 262150 521290 937030 1562506 2458630 3694090 4743690 7496650 \",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n7117922 14933886 \",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n7435653 17759589 \",\n    \"0\\n\",\n    \"1\\n42124574 \",\n    \"0\\n\",\n    \"1\\n466761435 \",\n    \"0\\n\",\n    \"1\\n45971 \",\n    \"1\\n416063647 \",\n    \"2\\n4044 7180 \",\n    \"0\\n\",\n    \"1\\n100663349 \",\n    \"2\\n427587859 999777799 \",\n    \"2\\n12134407 499999999 \",\n    \"3\\n61504671 145790671 999985999 \",\n    \"2\\n21219149 899597999 \",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"5\\n1 17210368 52521875 60466176 205962976 \",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n10000 \",\n    \"1\\n999766999 \",\n    \"1\\n579281018 \"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/460/B",
  "starter_code": ""
}