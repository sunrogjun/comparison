{
  "task_id": "APPS/151",
  "problem_id": 151,
  "prompt": "Beroffice text editor has a wide range of features that help working with text. One of the features is an automatic search for typos and suggestions of how to fix them.\n\nBeroffice works only with small English letters (i.e. with 26 letters from a to z). Beroffice thinks that a word is typed with a typo if there are three or more consonants in a row in the word. The only exception is that if the block of consonants has all letters the same, then this block (even if its length is greater than three) is not considered a typo. Formally, a word is typed with a typo if there is a block of not less that three consonants in a row, and there are at least two different letters in this block.\n\nFor example:\n\n  the following words have typos: \"hellno\", \"hackcerrs\" and \"backtothefutttture\";  the following words don't have typos: \"helllllooooo\", \"tobeornottobe\" and \"oooooo\". \n\nWhen Beroffice editor finds a word with a typo, it inserts as little as possible number of spaces in this word (dividing it into several words) in such a way that each of the resulting words is typed without any typos.\n\nImplement this feature of Beroffice editor. Consider the following letters as the only vowels: 'a', 'e', 'i', 'o' and 'u'. All the other letters are consonants in this problem.\n\n\n-----Input-----\n\nThe only line contains a non-empty word consisting of small English letters. The length of the word is between 1 and 3000 letters.\n\n\n-----Output-----\n\nPrint the given word without any changes if there are no typos.\n\nIf there is at least one typo in the word, insert the minimum number of spaces into the word so that each of the resulting words doesn't have any typos. If there are multiple solutions, print any of them.\n\n\n-----Examples-----\nInput\nhellno\n\nOutput\nhell no \n\nInput\nabacaba\n\nOutput\nabacaba \n\nInput\nasdfasdf\n\nOutput\nasd fasd f",
  "solutions": "[\"s = input()\\nst = {'a', 'e', 'i', 'o', 'u', ' '}\\nres = \\\"\\\"\\n\\ndef check(s):\\n\\tif (len(s) < 3):\\n\\t\\treturn True\\n\\tif (s[-1] not in st and s[-2] not in st and s[-3] not in st) and (s[-1] != s[-2] or s[-2] != s[-3] or s[-1] != s[-3]):\\n\\t\\treturn False\\n\\treturn True\\n\\nfor item in s:\\n\\tif not check(res + item):\\n\\t\\tres += \\\" \\\"\\n\\tres += item\\nprint(res)\", \"string = input()\\ndef sogl(ch):\\n    if ch!='a' and ch!='e' and ch!='i' and ch!='o' and ch!='u':\\n        return True\\n    return False\\nfast = 0\\nfor i in range(len(string)):\\n    if(fast>0):\\n        fast-=1\\n        continue\\n    if i<len(string)-2 and( not (string[i]==string[i+1] and string[i]==string[i+2])) and sogl(string[i]) and sogl(string[i+1]) and sogl(string[i+2]):\\n        print(string[i]+string[i+1]+' ',end='')\\n        fast = 1\\n        continue\\n    print(string[i],end='')\\n\", \"s = input()\\nn = len(s)\\nsogl = ['a', 'e', 'i', 'o', 'u']\\ni = 0\\nans = []\\nwhile i < n - 2:\\n    if not(s[i] in sogl) and not(s[i + 1] in sogl) and not(s[i + 2] in sogl) and not(s[i] == s[i + 1] == s[i + 2]):\\n        ans.append(i + 2)\\n        i += 1\\n    i += 1\\nj = 0\\nfor i in ans:\\n    print(s[j:i], end = \\\" \\\")\\n    j = i\\nprint(s[j:])\\n\", \"st = input()\\nk = 0\\ni = 0\\nwhile i < len(st):\\n    if not (st[i] in ['a', 'e', 'i', 'o', 'u']):\\n        if k < 3:\\n            k += 1\\n    else:\\n        k = 0\\n    if k == 3:\\n        if not(st[i] == st[i-1] == st[i-2]):\\n            st = st[:i] + ' ' + st[i::]\\n            k = 1\\n            i += 1\\n    i += 1\\nprint(st)\\n    \\n\", \"a=input()\\nn=len(a)\\nb=''\\ni=0\\n\\n\\ndef f(s):\\n    n=len(s)\\n    if len(set(s))>1:\\n        s1=''\\n        s1+=s[0]\\n        k=1\\n        m=1\\n        for i in range(1,n):\\n            if k==1 and s1[-1]==s[i]:\\n                s1+=s[i]\\n                m+=1\\n            elif k==1 and m==1:\\n                s1+=s[i]\\n                k+=1\\n                m+=1\\n            else:\\n                s1+=' '\\n                s1+=s[i]\\n                k=1\\n                m=1\\n        return s1\\n    return s\\n\\n\\nwhile i<n:\\n    s=''\\n    s+=a[i]\\n    i+=1\\n    while s[0] not in 'aeiou' and i<n and a[i] not in 'aeiou':\\n        s+=a[i]\\n        i+=1\\n    s=f(s)\\n    b+=s\\nprint(b)\", \"def findO(s):\\n    glas = {'a', 'e', 'i', 'o', 'u'}\\n    i = 0\\n    while i < len(s) - 2:\\n        newSet = {s[i], s[i + 1], s[i + 2]}\\n        if len(newSet & glas) == 0 and not (s[i] == s[i + 1] == s[i + 2]):\\n            s1 = s[:i + 2]\\n            s2 = s[i + 2:]\\n            s = s1 + ' ' + s2\\n            i += 3\\n        else:\\n            i += 1\\n    return s\\n\\ns = input()\\ns = findO(s)\\nprint(s)\", \"s=input()\\nd=s[0]\\na=[ 'a', 'e', 'i', 'o' , 'u']\\ni=1\\nwhile i<len(s)-1:\\n    d+=s[i]\\n    if (not(s[i] in a))&(not(s[i+1] in a))&(not(s[i-1] in a))&(not(s[i]==s[i+1]==s[i-1])):\\n        d+=' '+s[i+1]\\n        i+=1\\n    i+=1\\nif i<len(s):\\n    d+=s[i]\\nprint(d)\\n\", \"a = input()\\ngl = set(['a', 'e', 'i', 'o', 'u'])\\ncn = [0] * (200 + 1)\\nans = []\\nfor i in range(len(a)):\\n    if a[i] in gl:\\n        for i1 in range(ord('a'), ord('z') + 1):\\n            cn[i1] = 0\\n        continue\\n    cn[ord(a[i])] += 1\\n    st = set()\\n    cnt = 0\\n    for j in range(ord('a'), ord('z') + 1):\\n        if (chr(j) in gl) or cn[j] == 0:\\n            continue\\n        cnt += cn[j]\\n        st.add(j)\\n        if len(st) > 1 and cnt >= 3:\\n            ans.append(i)\\n            for i1 in range(ord('a'), ord('z') + 1):\\n                cn[i1] = 0\\n            cn[ord(a[i])] += 1\\n            break\\nfor i in range(len(a)):\\n    if i in ans:\\n        print(' ', end='')\\n    print(a[i], end='')\\n\", \"a = input()\\nb = []\\nl = 0\\nfor i in range(len(a)):\\n    if a[i] != 'a' and a[i] != 'e' and a[i] != 'i' and a[i] != 'o' and a[i] != 'u':\\n        if l < 2:\\n            l += 1\\n        else:\\n            if a[i] != a[i - 1] or a[i] != a[i - 2]:\\n                l = 1\\n                b.append(' ')\\n    else:\\n        l = 0\\n    b.append(a[i])\\nprint(''.join(map(str, b)))\", \"s=input()\\nk=0\\ns1=''\\ns2=['','','']\\nfor a in s:\\n    if a=='a' or a=='e' or a=='i' or a=='o' or a=='u':\\n        s1+=a\\n        k=0\\n    else:\\n        if k+1==3:\\n            s2[2]=a\\n            if (s2[0]!=s2[1] or s2[0]!=s2[2]):\\n                s1=s1+' '+a\\n                k=1\\n                s2[0]=a\\n            else:\\n                k=2\\n                s1+=a\\n        else:\\n            s2[k] = a\\n            k+=1\\n            s1+=a\\nprint(s1)\", \"s = input()\\nj = 0\\na = ['a', 'e', 'i', 'o', 'u']\\nfor i in range(len(s)):\\n    if (j > 1):\\n        if not(s[i] in a):\\n            if (not(s[i-1] in a) and not(s[i-2] in a) and not(s[i] == s[i-1] == s[i-2])):\\n                print(\\\" \\\", end = '')\\n                j = 0 \\n    j += 1\\n    print(s[i], end = '')\", \"vowel = ['a', 'e', 'i', 'o', 'u']\\nst = input()\\nnum = 0\\nsame_let = 0\\nlast_let = \\\"\\\"\\nfor ch in st:\\n    if ch in vowel:\\n        num = 0\\n        same_let = 0\\n        let = \\\"\\\"\\n        print(ch, end=\\\"\\\")\\n    else:\\n        num += 1\\n        if ch == last_let or last_let == \\\"\\\": #same not vowel\\n            last_let = ch\\n            same_let += 1\\n        else:\\n            last_let = ch\\n            same_let = 1\\n        if num >= 3 and same_let < 3:\\n            print(\\\" \\\", end=\\\"\\\")\\n            num = 1\\n            same_let = 1\\n            last_let = ch\\n        print(ch, end=\\\"\\\")\\n            \", \"gl = [\\\"a\\\", \\\"e\\\", \\\"i\\\", \\\"o\\\", \\\"u\\\"]\\ndef mist(a, b, c):\\n    if a in gl or b in gl or c in gl:\\n        return False\\n    if a == b and b == c:\\n        return False\\n    return True\\ns = input()\\nn = len(s)\\nif n == 1:\\n    print(s[0])\\nelse:\\n    print(s[0] + s[1], end='')\\n    last1 = s[0]\\n    last2 = s[1]\\n    for i in range(2, n):\\n        now = s[i]\\n        if now in gl:\\n            print(now, end='')\\n            last1, last2 = last2, now\\n            continue\\n        if mist(last1, last2, now):\\n            print(\\\" \\\" + now, end='')\\n            last1 = \\\"a\\\"\\n            last2 = now\\n        else:\\n            print(now, end='')\\n            last1, last2 = last2, now\\n            \", \"s = input()\\nd = ['a', 'e', 'i', 'o', 'u']\\nst = []\\nfor i in range(len(s)):\\n    if s[i] in d:\\n        st = []\\n        print(s[i], end=\\\"\\\")\\n        continue\\n    st.append(s[i])\\n    if st == [s[i], s[i], s[i]]:\\n        st = st[1:]\\n        print(s[i], end='')\\n    elif len(st) == 3:\\n        st = [s[i]]\\n        print(\\\" \\\" + s[i], end=\\\"\\\")\\n    else:\\n        print(s[i], end='')\\n\", \"s = input()\\nfl = False\\nl1 = ''\\nl2 = ''\\nl = 0\\ngl = {'a', 'e', 'i', 'o', 'u'}\\nfor i in range(len(s)):\\n    if s[i] in gl:\\n        l1 = ''\\n        l2 = ''\\n    else:\\n        if l2 == '': \\n            l2 = s[i]\\n            continue\\n        elif l1 == '':\\n            l1 = s[i]\\n            continue\\n        elif s[i] == l2 and s[i] == l1:\\n            continue\\n        else:\\n            print(s[l:i] + ' ', end = '')\\n            l1 = ''\\n            l2 = s[i]\\n            l = i\\nprint(s[l:])\", \"good = ['a', 'e', 'i', 'o', 'u']\\ns = input().strip()\\nans = []\\nnw = ''\\ni = 0\\nwhile i < len(s) - 2:\\n    nw += s[i]\\n    if not (s[i] == s[i + 1] == s[i + 2]):\\n        if not (s[i] in good or s[i + 1] in good or s[i + 2] in good):\\n            nw += s[i + 1]\\n            ans.append(nw)\\n            i += 1\\n            nw = ''\\n    i += 1\\nans.append(nw + s[i:])\\nprint(' '.join(ans))\\n\", \"a = input()\\nx =2\\nwhile x<len(a):\\n    if a[x]!= 'a' and a[x]!= 'e' and a[x]!= 'i' and a[x]!= 'o' and a[x]!= 'u' and a[x]!= ' ':\\n        if a[x-1]!= 'a' and a[x-1]!= 'e' and a[x-1]!= 'i' and a[x-1]!= 'o' and a[x-1]!= 'u' and a[x-1]!= ' ' and a[x-2]!= 'a' and a[x-2]!= 'e' and a[x-2]!= 'i' and a[x-2]!= 'o' and a[x-2]!= 'u' and a[x-2]!= ' ':\\n            if a[x-2]!=a[x] or a[x]!=a[x-1]:\\n                a = a[0:x]+' '+a[x:]\\n                x+=1\\n    x+=1\\nprint(a)\\n\", \"i = input()\\nalphabet= [\\n  #  \\\"A\\\",\\n    \\\"B\\\",\\n    \\\"C\\\",\\n    \\\"D\\\",\\n #   \\\"E\\\",\\n    \\\"F\\\",\\n    \\\"G\\\",\\n    \\\"H\\\",\\n  #  \\\"I\\\",\\n    \\\"J\\\",\\n    \\\"K\\\",\\n    \\\"L\\\",\\n    \\\"M\\\",\\n    \\\"N\\\",\\n  #  \\\"O\\\",\\n    \\\"P\\\",\\n    \\\"Q\\\",\\n    \\\"R\\\",\\n    \\\"S\\\",\\n    \\\"T\\\",\\n #   \\\"U\\\",\\n    \\\"V\\\",\\n    \\\"W\\\",\\n    \\\"X\\\",\\n    \\\"Y\\\",\\n    \\\"Z\\\"\\n]\\nres=''\\nflag=0\\nfor j in range(len(i))  :\\n    if flag>0:\\n        flag-=1\\n        res+=i[j]  \\n        continue\\n    if j!=0 and j!=len(i)-1:\\n        if (i[j].upper() in alphabet and i[j-1].upper() in alphabet and i[j+1].upper() in alphabet) and not (i[j-1]==i[j] and i[j]==i[j+1]):\\n            res+=(i[j]+' ')\\n            flag=1\\n            continue\\n        else:\\n            res+=i[j]\\n    else: res+=i[j]\\nprint(res)\", \"s=input()\\nk=0\\ns1=''\\ns2=['','','']\\nfor a in s:\\n    if a=='a' or a=='e' or a=='i' or a=='o' or a=='u':\\n        s1+=a\\n        k=0\\n    else:\\n        if k+1==3:\\n            s2[2]=a\\n            if (s2[0]!=s2[1] or s2[0]!=s2[2]):\\n                s1=s1+' '+a\\n                k=1\\n                s2[0]=a\\n            else:\\n                k=2\\n                s1+=a\\n        else:\\n            s2[k] = a\\n            k+=1\\n            s1+=a\\nprint(s1)\", \"s = input()\\nop = []\\ndl = len(s)\\ni = 2\\ngl = {'a','e','i','o','u'}\\nl = -1\\nwhile i<dl:\\n    if s[i-2] not in gl and s[i-1] not in gl and s[i] not in gl and s[i-2:i+1]!=s[i-2]*3:\\n        if l==-1:\\n            l = i-2\\n    elif l!=-1:\\n        op.append(str(l)+'-'+str(i-1))\\n        l = -1\\n    i+=1\\nelse:\\n    if l!=-1:\\n        op.append(str(l)+'-'+str(i-1))\\ndlo = len(op)\\nfor i in range(dlo-1,-1,-1):\\n    l = int(op[i][:op[i].find('-')])\\n    r = int(op[i][op[i].find('-')+1:])\\n    st = s[l:r+1]\\n    dl = len(st)\\n    st1 = ''\\n    for j in range(0,dl,2):\\n        st1+=st[j]\\n        if j<dl-1:\\n            st1+=st[j+1]\\n        if j<dl-2:\\n            st1+=' '\\n    s = s[:l]+st1+s[r+1:]\\nprint(s)\\n\", \"orph= ['a', 'e', 'i', 'o', 'u']\\nstring = input()\\nctr = 0\\nout = ''\\nfor i, c in enumerate(string):\\n    if c in orph:\\n        ctr = 0\\n    else:\\n        ctr+=1\\n        if ctr > 2:\\n            if not (c == string[i-1] and c == string[i-2]):\\n                out=out+' '\\n                ctr=1\\n    out=out+c\\nprint(out)\\n\", \"i = input()\\nalp= [\\\"B\\\",\\\"C\\\",\\\"D\\\",\\\"F\\\",\\\"G\\\",\\\"H\\\",\\\"J\\\",\\\"K\\\",\\\"L\\\",\\\"M\\\",\\\"N\\\",\\\"P\\\",\\\"Q\\\",\\\"R\\\",\\\"S\\\",\\\"T\\\",\\\"V\\\",\\\"W\\\",\\\"X\\\",\\\"Y\\\",\\\"Z\\\"]\\nres=''\\nr=0\\nfor j in range(len(i))  :\\n    if r>0:\\n        r-=1\\n        res+=i[j]\\n        continue\\n    if j!=0 and j!=len(i)-1:\\n        if (i[j].upper() in alp and i[j-1].upper() in alp and i[j+1].upper() in alp) and not (i[j-1]==i[j] and i[j]==i[j+1]):\\n            res+=(i[j]+' ')\\n            r=1\\n            continue\\n        else:\\n            res+=i[j]\\n    else: res+=i[j]\\nprint(res)\", \"s = input()\\na = []\\nvolumes = ['a', 'e', 'i', 'o', 'u']\\ni = 0\\nf = 0\\nwhile i + 2 < len(s):\\n    if s[i] not in volumes and s[i + 1] not in volumes and s[i + 2] not in volumes and (s[i] != s[i + 1] or s[i] != s[i + 2] or s[i + 1] != s[i + 2]):\\n        a.append(s[f:i + 2])\\n        f = i + 2\\n        i += 2\\n        continue\\n    i += 1\\nif len(a) == 0:\\n    print(s)\\nelse:\\n    a.append(s[f:len(s)])\\n    print(\\\" \\\".join(a))\", \"word = input()\\n\\nl = ['a', 'e', 'i', 'o', 'u']\\n\\ncurr_s = []\\n\\ni = 0\\n\\nfor j in range(len(word)):\\n    if word[j] not in l:\\n        if curr_s.count(word[j]) > 1:\\n            continue\\n        curr_s.append(word[j])\\n        if len(curr_s) > 2:\\n            print(word[i:j], end=' ')\\n            curr_s = [word[j]]\\n            i = j      \\n    else:\\n        curr_s = []\\nprint(word[i:])\\n\", \"s = input()\\ns2 = s1 = ''\\nl1 = {'a', 'e', 'i', 'o', 'u'}\\nk = 0\\nfor i in range(len(s)):\\n  if s[i] not in l1:\\n    if k == 2:\\n      if s[i] != s[i-1] or s[i-1] != s[i-2]:\\n        print(s1 + ' ', end = '', sep = '')\\n        s1 = s[i]\\n        k = 1\\n      else:\\n        s1 += s[i]  \\n    else:\\n      k += 1\\n      s1 += s[i]\\n  else:\\n    k = 0\\n    s1 += s[i]\\nprint(s1)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"hellno\\n\",\n    \"abacaba\\n\",\n    \"asdfasdf\\n\",\n    \"ooo\\n\",\n    \"moyaoborona\\n\",\n    \"jxegxxx\\n\",\n    \"orfyaenanabckumulsboloyhljhacdgcmnooxvxrtuhcslxgslfpnfnyejbxqisxjyoyvcvuddboxkqgbogkfz\\n\",\n    \"zxdgmhsjotvajkwshjpvzcuwehpeyfhakhtlvuoftkgdmvpafmxcliqvrztloocziqdkexhzcbdgxaoyvte\\n\",\n    \"niblehmwtycadhbfuginpyafszjbucaszihijndzjtuyuaxkrovotshtsajmdcflnfdmahzbvpymiczqqleedpofcnvhieknlz\\n\",\n    \"pqvtgtctpkgjgxnposjqedofficoyznxlerxyqypyzpoehejtjvyafjxjppywwgeakf\\n\",\n    \"mvjajoyeg\\n\",\n    \"dipxocwjosvdaillxolmthjhzhsxskzqslebpixpuhpgeesrkedhohisdsjsrkiktbjzlhectrfcathvewzficirqbdvzq\\n\",\n    \"ibbtvelwjirxqermucqrgmoauonisgmarjxxybllktccdykvef\\n\",\n    \"jxevkmrwlomaaahaubvjzqtyfqhqbhpqhomxqpiuersltohinvfyeykmlooujymldjqhgqjkvqknlyj\\n\",\n    \"hzxkuwqxonsulnndlhygvmallghjerwp\\n\",\n    \"jbvcsjdyzlzmxwcvmixunfzxidzvwzaqqdhguvelwbdosbd\\n\",\n    \"uyrsxaqmtibbxpfabprvnvbinjoxubupvfyjlqnfrfdeptipketwghr\\n\",\n    \"xfcftysljytybkkzkpqdzralahgvbkxdtheqrhfxpecdjqofnyiahggnkiuusalu\\n\",\n    \"a\\n\",\n    \"b\\n\",\n    \"aa\\n\",\n    \"ab\\n\",\n    \"ba\\n\",\n    \"bb\\n\",\n    \"aaa\\n\",\n    \"aab\\n\",\n    \"aba\\n\",\n    \"abb\\n\",\n    \"baa\\n\",\n    \"bab\\n\",\n    \"bba\\n\",\n    \"bbb\\n\",\n    \"bbc\\n\",\n    \"bcb\\n\",\n    \"cbb\\n\",\n    \"bababcdfabbcabcdfacbbabcdfacacabcdfacbcabcdfaccbabcdfacaaabcdfabacabcdfabcbabcdfacbaabcdfabaaabcdfabbaabcdfacababcdfabbbabcdfabcaabcdfaaababcdfabccabcdfacccabcdfaacbabcdfaabaabcdfaabcabcdfaaacabcdfaccaabcdfaabbabcdfaaaaabcdfaacaabcdfaacc\\n\",\n    \"bddabcdfaccdabcdfadddabcdfabbdabcdfacddabcdfacdbabcdfacbbabcdfacbcabcdfacbdabcdfadbbabcdfabdbabcdfabdcabcdfabbcabcdfabccabcdfabbbabcdfaddcabcdfaccbabcdfadbdabcdfacccabcdfadcdabcdfadcbabcdfabcbabcdfadbcabcdfacdcabcdfabcdabcdfadccabcdfaddb\\n\",\n    \"helllllooooo\\n\",\n    \"bbbzxxx\\n\",\n    \"ffff\\n\",\n    \"cdddddddddddddddddd\\n\",\n    \"bbbc\\n\",\n    \"lll\\n\",\n    \"bbbbb\\n\",\n    \"llll\\n\",\n    \"bbbbbbccc\\n\",\n    \"lllllb\\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\n\",\n    \"lllll\\n\",\n    \"bbbbbbbbbc\\n\",\n    \"helllllno\\n\",\n    \"nnnnnnnnnnnn\\n\",\n    \"bbbbbccc\\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\n\",\n    \"nnnnnnnnnnnnnnnnnn\\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzz\\n\",\n    \"hhhh\\n\",\n    \"nnnnnnnnnnnnnnnnnnnnnnnnn\\n\",\n    \"zzzzzzzzzz\\n\",\n    \"dddd\\n\",\n    \"heffffffgggggghhhhhh\\n\",\n    \"bcddd\\n\",\n    \"x\\n\",\n    \"nnn\\n\",\n    \"xxxxxxxx\\n\",\n    \"cclcc\\n\",\n    \"tttttttttttttt\\n\",\n    \"xxxxxxx\\n\",\n    \"ccccb\\n\",\n    \"bcecccc\\n\",\n    \"jjja\\n\",\n    \"zzz\\n\",\n    \"xxxxxxxxxzzzzzzzzzzzz\\n\",\n    \"alllewww\\n\",\n    \"bbbbbbbbb\\n\",\n    \"jjj\\n\",\n    \"bbbbbbbbbbbbbbbbbbbbbbbbb\\n\",\n    \"kkkkkkkkkklllllllllllllll\\n\",\n    \"helllllllllllo\\n\",\n    \"ttttsttttt\\n\",\n    \"tttttttsssssss\\n\",\n    \"assstttttatsfatsfdjfdhtsjdsaatttssssststsss\\n\",\n    \"xxxxx\\n\",\n    \"bbbhbbb\\n\",\n    \"bbbbbbbb\\n\"\n  ],\n  \"outputs\": [\n    \"hell no \\n\",\n    \"abacaba \\n\",\n    \"asd fasd f \\n\",\n    \"ooo \\n\",\n    \"moyaoborona \\n\",\n    \"jxegx xx \\n\",\n    \"orf yaenanabc kumuls boloyh lj hacd gc mnooxv xr tuhc sl xg sl fp nf nyejb xqisx jyoyv cvudd boxk qg bogk fz \\n\",\n    \"zx dg mh sjotvajk ws hj pv zcuwehpeyf hakh tl vuoft kg dm vpafm xc liqv rz tloocziqd kexh zc bd gxaoyv te \\n\",\n    \"niblehm wt ycadh bfuginp yafs zj bucaszihijn dz jtuyuaxk rovots ht sajm dc fl nf dmahz bv py micz qq leedpofc nv hiekn lz \\n\",\n    \"pq vt gt ct pk gj gx nposj qedofficoyz nx lerx yq yp yz poehejt jv yafj xj pp yw wgeakf \\n\",\n    \"mv jajoyeg \\n\",\n    \"dipxocw josv daill xolm th jh zh sx sk zq slebpixpuhp geesr kedhohisd sj sr kikt bj zl hect rf cath vewz ficirq bd vz q \\n\",\n    \"ibb tvelw jirx qermucq rg moauonisg marj xx yb ll kt cc dy kvef \\n\",\n    \"jxevk mr wlomaaahaubv jz qt yf qh qb hp qhomx qpiuers ltohinv fyeyk mlooujy ml dj qh gq jk vq kn ly j \\n\",\n    \"hz xkuwq xonsuln nd lh yg vmall gh jerw p \\n\",\n    \"jb vc sj dy zl zm xw cv mixunf zxidz vw zaqq dh guvelw bdosb d \\n\",\n    \"uyr sxaqm tibb xp fabp rv nv binjoxubupv fy jl qn fr fdeptipketw gh r \\n\",\n    \"xf cf ty sl jy ty bk kz kp qd zralahg vb kx dt heqr hf xpecd jqofn yiahg gn kiuusalu \\n\",\n    \"a \\n\",\n    \"b \\n\",\n    \"aa \\n\",\n    \"ab \\n\",\n    \"ba \\n\",\n    \"bb \\n\",\n    \"aaa \\n\",\n    \"aab \\n\",\n    \"aba \\n\",\n    \"abb \\n\",\n    \"baa \\n\",\n    \"bab \\n\",\n    \"bba \\n\",\n    \"bbb \\n\",\n    \"bb c \\n\",\n    \"bc b \\n\",\n    \"cb b \\n\",\n    \"bababc dfabb cabc dfacb babc dfacacabc dfacb cabc dfacc babc dfacaaabc dfabacabc dfabc babc dfacbaabc dfabaaabc dfabbaabc dfacababc dfabbbabc dfabcaabc dfaaababc dfabc cabc dfacccabc dfaacbabc dfaabaabc dfaabcabc dfaaacabc dfaccaabc dfaabbabc dfaaaaabc dfaacaabc dfaacc \\n\",\n    \"bd dabc dfacc dabc dfadddabc dfabb dabc dfacd dabc dfacd babc dfacb babc dfacb cabc dfacb dabc dfadb babc dfabd babc dfabd cabc dfabb cabc dfabc cabc dfabbbabc dfadd cabc dfacc babc dfadb dabc dfacccabc dfadc dabc dfadc babc dfabc babc dfadb cabc dfacd cabc dfabc dabc dfadc cabc dfadd b \\n\",\n    \"helllllooooo \\n\",\n    \"bbb zx xx \\n\",\n    \"ffff \\n\",\n    \"cd ddddddddddddddddd \\n\",\n    \"bbb c \\n\",\n    \"lll \\n\",\n    \"bbbbb \\n\",\n    \"llll \\n\",\n    \"bbbbbb ccc \\n\",\n    \"lllll b \\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz \\n\",\n    \"lllll \\n\",\n    \"bbbbbbbbb c \\n\",\n    \"helllll no \\n\",\n    \"nnnnnnnnnnnn \\n\",\n    \"bbbbb ccc \\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzz \\n\",\n    \"nnnnnnnnnnnnnnnnnn \\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzz \\n\",\n    \"hhhh \\n\",\n    \"nnnnnnnnnnnnnnnnnnnnnnnnn \\n\",\n    \"zzzzzzzzzz \\n\",\n    \"dddd \\n\",\n    \"heffffff gggggg hhhhhh \\n\",\n    \"bc ddd \\n\",\n    \"x \\n\",\n    \"nnn \\n\",\n    \"xxxxxxxx \\n\",\n    \"cc lc c \\n\",\n    \"tttttttttttttt \\n\",\n    \"xxxxxxx \\n\",\n    \"cccc b \\n\",\n    \"bcecccc \\n\",\n    \"jjja \\n\",\n    \"zzz \\n\",\n    \"xxxxxxxxx zzzzzzzzzzzz \\n\",\n    \"alllewww \\n\",\n    \"bbbbbbbbb \\n\",\n    \"jjj \\n\",\n    \"bbbbbbbbbbbbbbbbbbbbbbbbb \\n\",\n    \"kkkkkkkkkk lllllllllllllll \\n\",\n    \"helllllllllllo \\n\",\n    \"tttt st tttt \\n\",\n    \"ttttttt sssssss \\n\",\n    \"asss tttttats fats fd jf dh ts jd saattt sssss ts ts ss \\n\",\n    \"xxxxx \\n\",\n    \"bbb hb bb \\n\",\n    \"bbbbbbbb \\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/858/C",
  "starter_code": ""
}