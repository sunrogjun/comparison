{
  "task_id": "APPS/207",
  "problem_id": 207,
  "prompt": "Where do odds begin, and where do they end? Where does hope emerge, and will they ever break?\n\nGiven an integer sequence a_1, a_2, ..., a_{n} of length n. Decide whether it is possible to divide it into an odd number of non-empty subsegments, the each of which has an odd length and begins and ends with odd numbers.\n\nA subsegment is a contiguous slice of the whole sequence. For example, {3, 4, 5} and {1} are subsegments of sequence {1, 2, 3, 4, 5, 6}, while {1, 2, 4} and {7} are not.\n\n\n-----Input-----\n\nThe first line of input contains a non-negative integer n (1 \u2264 n \u2264 100) \u2014 the length of the sequence.\n\nThe second line contains n space-separated non-negative integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 100) \u2014 the elements of the sequence.\n\n\n-----Output-----\n\nOutput \"Yes\" if it's possible to fulfill the requirements, and \"No\" otherwise.\n\nYou can output each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n3\n1 3 5\n\nOutput\nYes\n\nInput\n5\n1 0 1 5 1\n\nOutput\nYes\n\nInput\n3\n4 3 1\n\nOutput\nNo\n\nInput\n4\n3 9 9 3\n\nOutput\nNo\n\n\n\n-----Note-----\n\nIn the first example, divide the sequence into 1 subsegment: {1, 3, 5} and the requirements will be met.\n\nIn the second example, divide the sequence into 3 subsegments: {1, 0, 1}, {5}, {1}.\n\nIn the third example, one of the subsegments must start with 4 which is an even number, thus the requirements cannot be met.\n\nIn the fourth example, the sequence can be divided into 2 subsegments: {3, 9, 9}, {3}, but this is not a valid solution because 2 is an even number.",
  "solutions": "[\"def read_ints():\\n\\treturn [int(i) for i in input().split()]\\n\\nn = read_ints()\\na = read_ints()\\nif len(a) % 2 and a[0] % 2 and a[-1] % 2:\\n\\tprint('Yes')\\nelse:\\n\\tprint('No')\", \"n = int(input())\\narr = list(map(int,input().split()))\\nif(n%2 == 0):\\n\\tprint('No')\\nelse:\\n\\tif(arr[0] % 2 == 1 and arr[-1] % 2 == 1):\\n\\t\\tprint('Yes')\\n\\telse:\\n\\t\\tprint('No')\", \"n = int(input())\\na = list(map(int, input().split()))\\nif a[0] % 2 == 1 and a[n - 1] % 2 == 1 and n % 2 == 1:\\n    print('Yes')\\nelse:\\n    print('No')\\n\", \"def list_input():\\n    return list(map(int,input().split()))\\ndef map_input():\\n    return map(int,input().split())\\ndef map_string():\\n    return input().split()\\n    \\nn = int(input())    \\na = list_input()\\nif a[0]%2 and a[-1]%2 and n%2:\\n  print(\\\"Yes\\\")\\nelse: print(\\\"No\\\")  \", \"n = int(input())\\na = list(map(int, input().split()))\\nif len(a) % 2 == 1:\\n    if a[0] % 2  == 1 and a[n - 1] % 2 == 1:\\n        print('Yes')\\n    else:\\n        print('No')\\nelse:\\n    print('No')\\n\", \"values_nr = int(input())\\nidx___value = [int(x) for x in input().split()]\\n\\nif (len(idx___value) % 2 != 0) and (idx___value[0] % 2 != 0) and (idx___value[-1] % 2 != 0):\\n    print('Yes')\\nelse:\\n    print('No')\", \"n = int(input())\\na = list(map(int, input().split()))\\nif n % 2 == 0:\\n    print(\\\"No\\\")\\n    return\\nif a[0]* a[-1] % 2 == 0:\\n    print(\\\"No\\\")\\n    return\\n\\nprint(\\\"Yes\\\")\", \"n=int(input())\\nif (n % 2 == 0):\\n    print(\\\"No\\\")\\nelse:\\n    a=list(map(int,input().split()))\\n    if (a[0]%2 == 0):\\n        print(\\\"No\\\")\\n    else:\\n        if a[n-1] % 2 == 0:\\n            print(\\\"No\\\")\\n        else:\\n            print(\\\"Yes\\\")\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nif n % 2 == 0:\\n    print('No')\\nelif a[0] % 2 == 0 or a[-1] % 2 == 0:\\n    print('No')\\nelse:\\n    print('Yes')\", \"n = int(input())\\na = list(map(int, input().split()))\\nif n % 2:\\n\\tif a[0] % 2 and a[-1] % 2:\\n\\t\\tprint('Yes')\\n\\telse:\\n\\t\\tprint('No')\\nelse:\\n\\tprint('No')\", \"n = int(input())\\nls = list(map(int, input().split()))\\n\\nif ls[0] % 2 == 1 and ls[-1] % 2 == 1 and len(ls) % 2 == 1:\\n    print('Yes')\\nelse:\\n    print('No')\\n\", \"import sys\\n\\n\\ndef main():\\n    n = int(input())\\n    s = list(map(int, sys.stdin.readline().split()))\\n\\n    if n % 2 == 1 and s[0] % 2 == 1 and s[-1] % 2 == 1:\\n        print(\\\"Yes\\\")\\n    else:\\n        print(\\\"No\\\")\\n\\n\\nmain()\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nif n%2==1:\\n    if (a[0]%2==1) and (a[n-1]%2==1):\\n        print(\\\"Yes\\\")\\n    else:\\n        print(\\\"No\\\")\\nelse:\\n    print(\\\"No\\\")\\n\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nif n % 2 == 1 and a[0] % 2 == 1 and a[-1] % 2 == 1:\\n    print('Yes')\\nelse:\\n    print('No')\\n\", \"from math import *\\nimport itertools as it\\nfrom collections import *\\n\\nEPS = 1e-9\\ndef get_int()   : return int(input().strip())\\ndef get_string(): return input().strip()\\ndef get_array() : return list(map(int, input().strip().split(' ')))\\n\\ndef print_array(a, glue = ' '):\\n    print(glue.join(map(str, a)))\\n\\ndef print_grid(grid, glue = ' '):\\n    for row in grid:\\n        print_array(row, glue)\\n\\n#====================================#\\n\\ndef solve():\\n    n = get_int()\\n    a = get_array()\\n    if a[0] % 2 == 0 or a[-1] % 2 == 0: return \\\"No\\\"\\n    if n % 2 == 1: return \\\"Yes\\\"\\n    return \\\"No\\\"\\n    \\n\\nntest = 1\\n# ntest = get_int()\\nfor _ in range(ntest):\\n    print(solve())\\n\", \"n = int(input())\\nA = list(map(int, input().split()))\\n\\nif A[0] % 2 == 0 or A[-1] % 2 == 0 or len(A) % 2 == 0:\\n  print('No')\\nelse:\\n  print('Yes')\\n\\n\", \"n=int(input())\\na=[int(i) for i in input().split()]\\nif(len(a)%2 and a[0]%2 and a[-1]%2):print('Yes')\\nelse:print('No')\", \"n = int(input())\\na = list(map(int, input().split(' ')))\\n\\nif (n & 1) and (a[0] & 1) and (a[-1] & 1):\\n\\tprint(\\\"Yes\\\")\\nelse:\\n\\tprint(\\\"No\\\")\\n\", \"3\\n\\n\\ndef main():\\n    i = int(input())\\n    data = [int(d) for d in input().split()]\\n\\n    if(data[0]%2 + data[-1]%2 + i%2 < 3):\\n        print(\\\"No\\\");\\n    else:\\n        print(\\\"Yes\\\");\\n\\n\\ndef __starting_point(): main()\\n\\n__starting_point()\", \"# coding: utf-8\\n\\ndef main():\\n    n = int(input())\\n    a = list(map(int, input().split()))\\n\\n    if n % 2 == 1 and a[0] % 2 == 1 and a[-1] % 2 == 1:\\n        return \\\"Yes\\\"\\n    return \\\"No\\\"\\n\\nprint(main())\\n\", \"N = int(input())\\nA = [int(x) for x in input().split()]\\ndp = [[False] * (N + 1) for _ in range(N + 1)]\\ndp[0][0] = True\\nfor i in range(N):\\n    if A[i] % 2 == 1:\\n        for j in range(N):\\n            for k in range(i + 1):\\n                if (k - i + 1) % 2 == 1 and A[k] % 2 == 1 and dp[k][j]:\\n                    dp[i + 1][j + 1] = True\\nprint(\\\"Yes\\\" if any(dp[-1][i] for i in range(1, N + 1, 2)) else \\\"No\\\")\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n1 3 5\\n\",\n    \"5\\n1 0 1 5 1\\n\",\n    \"3\\n4 3 1\\n\",\n    \"4\\n3 9 9 3\\n\",\n    \"1\\n1\\n\",\n    \"5\\n100 99 100 99 99\\n\",\n    \"100\\n100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100 100\\n\",\n    \"1\\n0\\n\",\n    \"2\\n1 1\\n\",\n    \"2\\n10 10\\n\",\n    \"2\\n54 21\\n\",\n    \"5\\n0 0 0 0 0\\n\",\n    \"5\\n67 92 0 26 43\\n\",\n    \"15\\n45 52 35 80 68 80 93 57 47 32 69 23 63 90 43\\n\",\n    \"15\\n81 28 0 82 71 64 63 89 87 92 38 30 76 72 36\\n\",\n    \"50\\n49 32 17 59 77 98 65 50 85 10 40 84 65 34 52 25 1 31 61 45 48 24 41 14 76 12 33 76 44 86 53 33 92 58 63 93 50 24 31 79 67 50 72 93 2 38 32 14 87 99\\n\",\n    \"55\\n65 69 53 66 11 100 68 44 43 17 6 66 24 2 6 6 61 72 91 53 93 61 52 96 56 42 6 8 79 49 76 36 83 58 8 43 2 90 71 49 80 21 75 13 76 54 95 61 58 82 40 33 73 61 46\\n\",\n    \"99\\n73 89 51 85 42 67 22 80 75 3 90 0 52 100 90 48 7 15 41 1 54 2 23 62 86 68 2 87 57 12 45 34 68 54 36 49 27 46 22 70 95 90 57 91 90 79 48 89 67 92 28 27 25 37 73 66 13 89 7 99 62 53 48 24 73 82 62 88 26 39 21 86 50 95 26 27 60 6 56 14 27 90 55 80 97 18 37 36 70 2 28 53 36 77 39 79 82 42 69\\n\",\n    \"99\\n99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99 99\\n\",\n    \"100\\n61 63 34 45 20 91 31 28 40 27 94 1 73 5 69 10 56 94 80 23 79 99 59 58 13 56 91 59 77 78 88 72 80 72 70 71 63 60 41 41 41 27 83 10 43 14 35 48 0 78 69 29 63 33 42 67 1 74 51 46 79 41 37 61 16 29 82 28 22 14 64 49 86 92 82 55 54 24 75 58 95 31 3 34 26 23 78 91 49 6 30 57 27 69 29 54 42 0 61 83\\n\",\n    \"6\\n1 2 2 2 2 1\\n\",\n    \"3\\n1 2 1\\n\",\n    \"4\\n1 3 2 3\\n\",\n    \"6\\n1 1 1 1 1 1\\n\",\n    \"6\\n1 1 0 0 1 1\\n\",\n    \"4\\n1 4 9 3\\n\",\n    \"4\\n1 0 1 1\\n\",\n    \"10\\n1 0 0 1 1 1 1 1 1 1\\n\",\n    \"10\\n9 2 5 7 8 3 1 9 4 9\\n\",\n    \"99\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2\\n\",\n    \"6\\n1 2 1 2 2 1\\n\",\n    \"6\\n1 0 1 0 0 1\\n\",\n    \"4\\n1 3 4 7\\n\",\n    \"8\\n1 1 1 2 1 1 1 1\\n\",\n    \"3\\n1 1 2\\n\",\n    \"5\\n1 2 1 2 1\\n\",\n    \"5\\n5 4 4 2 1\\n\",\n    \"6\\n1 3 3 3 3 1\\n\",\n    \"7\\n1 2 1 2 2 2 1\\n\",\n    \"4\\n1 2 2 1\\n\",\n    \"6\\n1 2 3 4 6 5\\n\",\n    \"5\\n1 1 2 2 2\\n\",\n    \"5\\n1 0 0 1 1\\n\",\n    \"3\\n1 2 4\\n\",\n    \"3\\n1 0 2\\n\",\n    \"5\\n1 1 1 0 1\\n\",\n    \"4\\n3 9 2 3\\n\",\n    \"6\\n1 1 1 4 4 1\\n\",\n    \"6\\n1 2 3 5 6 7\\n\",\n    \"6\\n1 1 1 2 2 1\\n\",\n    \"6\\n1 1 1 0 0 1\\n\",\n    \"5\\n1 2 2 5 5\\n\",\n    \"5\\n1 3 2 4 5\\n\",\n    \"8\\n1 2 3 5 7 8 8 5\\n\",\n    \"10\\n1 1 1 2 1 1 1 1 1 1\\n\",\n    \"4\\n1 0 0 1\\n\",\n    \"7\\n1 0 1 1 0 0 1\\n\",\n    \"7\\n1 4 5 7 6 6 3\\n\",\n    \"4\\n2 2 2 2\\n\",\n    \"5\\n2 3 4 5 6\\n\",\n    \"4\\n1 1 2 1\\n\",\n    \"3\\n1 2 3\\n\",\n    \"6\\n1 3 3 2 2 3\\n\",\n    \"4\\n1 1 2 3\\n\",\n    \"4\\n1 2 3 5\\n\",\n    \"5\\n3 4 4 3 3\\n\",\n    \"4\\n3 2 2 3\\n\",\n    \"6\\n1 1 1 1 2 1\\n\",\n    \"6\\n1 1 2 2 1 1\\n\",\n    \"10\\n3 4 2 4 3 2 2 4 4 3\\n\",\n    \"7\\n1 2 4 3 2 4 5\\n\",\n    \"28\\n75 51 25 52 13 7 34 29 5 59 68 56 13 2 9 37 59 83 18 32 36 30 20 43 92 76 78 67\\n\",\n    \"79\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 18\\n\",\n    \"100\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n  ],\n  \"outputs\": [\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"Yes\\n\",\n    \"No\\n\",\n    \"No\\n\",\n    \"No\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/849/A",
  "starter_code": ""
}