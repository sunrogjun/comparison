{
  "task_id": "APPS/290",
  "problem_id": 290,
  "prompt": "Little Sofia is in fourth grade. Today in the geometry lesson she learned about segments and squares. On the way home, she decided to draw $n$ squares in the snow with a side length of $1$. For simplicity, we assume that Sofia lives on a plane and can draw only segments of length $1$, parallel to the coordinate axes, with vertices at integer points.\n\nIn order to draw a segment, Sofia proceeds as follows. If she wants to draw a vertical segment with the coordinates of the ends $(x, y)$ and $(x, y+1)$. Then Sofia looks if there is already a drawn segment with the coordinates of the ends $(x', y)$ and $(x', y+1)$ for some $x'$. If such a segment exists, then Sofia quickly draws a new segment, using the old one as a guideline. If there is no such segment, then Sofia has to take a ruler and measure a new segment for a long time. Same thing happens when Sofia wants to draw a horizontal segment, but only now she checks for the existence of a segment with the same coordinates $x$, $x+1$ and the differing coordinate $y$.\n\nFor example, if Sofia needs to draw one square, she will have to draw two segments using a ruler:  [Image] \n\nAfter that, she can draw the remaining two segments, using the first two as a guide:  [Image] \n\nIf Sofia needs to draw two squares, she will have to draw three segments using a ruler:  [Image] \n\nAfter that, she can draw the remaining four segments, using the first three as a guide:  [Image] \n\nSofia is in a hurry, so she wants to minimize the number of segments that she will have to draw with a ruler without a guide. Help her find this minimum number.\n\n\n-----Input-----\n\nThe only line of input contains a single integer $n$ ($1 \\le n \\le 10^{9}$), the number of squares that Sofia wants to draw.\n\n\n-----Output-----\n\nPrint single integer, the minimum number of segments that Sofia will have to draw with a ruler without a guide in order to draw $n$ squares in the manner described above.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n2\n\nInput\n2\n\nOutput\n3\n\nInput\n4\n\nOutput\n4",
  "solutions": "[\"n = int(input())\\n\\na = b = 1\\n\\nwhile a * b < n:\\n    if a < b:\\n        a += 1\\n    else:\\n        b += 1\\n\\nprint(a+b)\\n\", \"n = int(input())\\nl = 0\\nr = n\\nwhile r - l > 1:\\n    m = (l + r) // 2\\n    if m * m >= n:\\n        r = m\\n    else:\\n        l = m\\nif (r - 1) * r >= n:\\n    print(2 * r - 1)\\nelse:\\n    print(2 * r)\\n\", \"n = int(input())\\nw, h = 0, 0\\nwidth = True\\nwhile w * h < n:\\n    if width:\\n        w += 1\\n    else:\\n        h += 1\\n    width = not width\\nprint(w + h)\\n\", \"n = int(input())\\ni = 0\\nwhile (i + 1) * (i + 1) <= n:\\n\\ti += 1\\nprint(2 * i + (n - i * i + i - 1) // i)\\n\", \"from math import ceil\\nn = int(input())\\nc = ceil(n ** 0.5)\\nprint(c + (n + c - 1)//c)\", \"import math\\nn = int(input())\\nans = 10 ** 9 + 7\\nfor i in range(1, int(math.sqrt(n)) + 1):\\n    if n % i == 0:\\n        ans = min(ans, i + n // i)\\n    else:\\n        ans = min(ans, i + n // i + 1)\\nprint(ans)\\n\", \"n = int(input())\\nans = []\\nfor i in range(1, 100000):\\n    ans.append(i + (n - 1) // i + 1)\\nprint(min(ans))\", \"n = int( input() )\\n\\na = 0\\nb = 0\\n\\nwhile a * b < n:\\n    if a == b:\\n        a += 1\\n    else:\\n        b += 1\\n\\nprint( a + b )\\n\", \"from math import sqrt\\nn = int(input())\\nx = int(sqrt(n))\\nx = max(0,x-5)\\nans = n+1\\nfor i in range(x,x+11):\\n    for j in range(x,x+11):\\n        if i*j >= n:\\n            ans = min(ans,i+j)\\nprint(ans)            \\n\", \"def ii():\\n    return int(input())\\ndef mi():\\n    return list(map(int, input().split()))\\ndef li():\\n    return list(mi())\\n\\nn = ii()\\nfor i in range(1, n + 1):\\n    if i * i > n:\\n        break\\ni -= 1\\nans = 2 * i\\nif n - i * i == 0:\\n    pass\\nelif n - i * i <= i:\\n    ans += 1\\nelse:\\n    ans += 2\\nprint(ans)\\n\", \"from math import ceil\\nn = int(input())\\na = ceil(n**0.5)\\nprint(a + ceil(n/a))\", \"from math import *\\nfrom itertools import *\\nfrom collections import *\\nfrom functools import reduce\\n\\n\\ndef input_ints():\\n    return list(map(int, input().split()))\\n\\n\\ndef input_floats():\\n    return list(map(float, input().split()))\\n\\n\\ndef input_strings():\\n    return input().split()\\n\\n\\n# Solution written by john21\\n\\nn = int(input())\\n\\na = ceil(sqrt(n))\\nb = ceil(n/a)\\n\\nprint(a+b)\\n\", \"from math import sqrt\\n\\nn = int(input())\\nsq = int(sqrt(n))\\ns = sq * sq\\nif n == s:\\n    print(2 * sq)\\nelif n <= s + sq:\\n    print(2 * sq + 1)\\nelse:\\n    print(2 * sq + 2)\", \"n = int(input())\\nt = 0\\nwhile 1:\\n    t += 1\\n    if (t//2)*(t-t//2) >= n:\\n        print(t)\\n        break\", \"import math\\n\\nn = int(input())\\nsq = int(math.sqrt(n))\\ndif = n - sq * sq\\nadd = 0\\nif dif > sq:\\n    add = 2\\nelif dif != 0:\\n    add = 1\\nprint(2 * sq + add)\\n\", \"n = int(input())\\ns = 0\\nwhile s*s <= n:\\n    s += 1\\ns -= 1\\nif n == s*s:\\n    print(2*s)\\n    return\\n\\nd = n-s*s\\nfrom math import ceil\\nprint(2*s + ceil(d*1./s))\\n\", \"n = int(input())\\n\\na = b = 1\\nwhile a * b < n:\\n    if a == b:\\n        a += 1\\n    else:\\n        b += 1\\n\\nprint(a+b)\\n\", \"n = int(input())\\nj = int(n ** 0.5)\\n\\nif n == j ** 2:\\n    print(2 * j)\\nelif n <= j * (j + 1):\\n    print(2 * j + 1)\\nelse:\\n    print(2 * j + 2)\", \"def sq(x):\\n    s = int(x**0.5)\\n    for i in range(1, -2, -1):\\n        ts = s + i\\n        if ts**2 <= x:\\n            return ts\\n\\nn = int(input())\\ns = sq(n)\\n\\nif s**2 == n:\\n    print(s * 2)\\nelif (s + 1) * s >= n:\\n    print(s * 2 + 1)\\nelse:\\n    print(s * 2 + 2)\\n\\n\", \"def getS(n):\\n    return int(n ** (1/2)) \\n\\nsquares = int(input())\\n\\n\\nans = 0\\n\\n    \\nside = getS(squares)\\nans += side * 2\\n\\nremains = squares - (side ** 2)\\n\\nif remains % side == 0:\\n    ans += remains // side\\nelse:\\n    ans += remains // side + 1\\n\\nprint(ans)\", \"n=int(input())\\ni=1\\nwhile i**2<n:\\n    i+=1\\nif n%i==0:\\n    print(i+n//i)\\nelse:\\n    print(i+n//i+1)\\n\", \"n = int(input())\\ni = 1\\nj = 1\\nk = 0\\nwhile (i * j < n):\\n    if k % 2 == 0:\\n        i += 1\\n    else:\\n        j += 1\\n    k = 1 - k\\nprint(i+j)\", \"while True:\\n    n = int(input())\\n\\n    sqrt_n = int(n**0.5)\\n\\n    minn = 100000000\\n\\n    if(sqrt_n*sqrt_n >= n):\\n\\n        minn = min(minn, sqrt_n + sqrt_n)\\n\\n    if(sqrt_n*(sqrt_n+1) >= n):\\n\\n        minn = min(minn, sqrt_n + (sqrt_n+1))\\n\\n    if((1+sqrt_n)*(1+sqrt_n) >= n):\\n\\n        minn = min(minn, (1+sqrt_n) + (1+sqrt_n))\\n\\n    print(minn)\\n\\n    break\\n\", \"import math\\nn=int(input())\\na=int(math.sqrt(n))\\nif a*a<n:\\n    a+=1\\nb=math.ceil(n/a)\\nprint(a+b)\\n    \\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"14\\n\",\n    \"41\\n\",\n    \"51\\n\",\n    \"776\\n\",\n    \"116\\n\",\n    \"972\\n\",\n    \"3517\\n\",\n    \"3776\\n\",\n    \"4035\\n\",\n    \"35997\\n\",\n    \"61669\\n\",\n    \"87341\\n\",\n    \"398223\\n\",\n    \"772168\\n\",\n    \"423353776\\n\",\n    \"999950884\\n\",\n    \"1000000000\\n\",\n    \"408636\\n\",\n    \"4205340\\n\",\n    \"5517158\\n\",\n    \"8795795\\n\",\n    \"54155304\\n\",\n    \"48091000\\n\",\n    \"16993944\\n\",\n    \"605551861\\n\",\n    \"377684528\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"10\\n\",\n    \"11\\n\",\n    \"12\\n\",\n    \"13\\n\",\n    \"14\\n\",\n    \"15\\n\",\n    \"16\\n\",\n    \"17\\n\",\n    \"18\\n\",\n    \"999950885\\n\",\n    \"49\\n\",\n    \"898081025\\n\",\n    \"157502501\\n\",\n    \"100320256\\n\",\n    \"401641681\\n\",\n    \"306495050\\n\",\n    \"403608101\\n\",\n    \"308213136\\n\",\n    \"225660486\\n\",\n    \"627352211\\n\",\n    \"204575811\\n\",\n    \"420\\n\",\n    \"141\\n\",\n    \"21\\n\",\n    \"32\\n\",\n    \"999919262\\n\",\n    \"864918\\n\",\n    \"100000001\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"13\\n\",\n    \"15\\n\",\n    \"56\\n\",\n    \"22\\n\",\n    \"63\\n\",\n    \"119\\n\",\n    \"123\\n\",\n    \"128\\n\",\n    \"380\\n\",\n    \"497\\n\",\n    \"592\\n\",\n    \"1263\\n\",\n    \"1758\\n\",\n    \"41152\\n\",\n    \"63244\\n\",\n    \"63246\\n\",\n    \"1279\\n\",\n    \"4102\\n\",\n    \"4698\\n\",\n    \"5932\\n\",\n    \"14719\\n\",\n    \"13870\\n\",\n    \"8245\\n\",\n    \"49216\\n\",\n    \"38869\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"63245\\n\",\n    \"14\\n\",\n    \"59937\\n\",\n    \"25101\\n\",\n    \"20032\\n\",\n    \"40082\\n\",\n    \"35015\\n\",\n    \"40181\\n\",\n    \"35112\\n\",\n    \"30045\\n\",\n    \"50095\\n\",\n    \"28607\\n\",\n    \"41\\n\",\n    \"24\\n\",\n    \"10\\n\",\n    \"12\\n\",\n    \"63243\\n\",\n    \"1861\\n\",\n    \"20001\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1099/B",
  "starter_code": ""
}