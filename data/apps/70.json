{
  "task_id": "APPS/70",
  "problem_id": 70,
  "prompt": "Polycarp is crazy about round numbers. He especially likes the numbers divisible by 10^{k}.\n\nIn the given number of n Polycarp wants to remove the least number of digits to get a number that is divisible by 10^{k}. For example, if k = 3, in the number 30020 it is enough to delete a single digit (2). In this case, the result is 3000 that is divisible by 10^3 = 1000.\n\nWrite a program that prints the minimum number of digits to be deleted from the given integer number n, so that the result is divisible by 10^{k}. The result should not start with the unnecessary leading zero (i.e., zero can start only the number 0, which is required to be written as exactly one digit).\n\nIt is guaranteed that the answer exists.\n\n\n-----Input-----\n\nThe only line of the input contains two integer numbers n and k (0 \u2264 n \u2264 2 000 000 000, 1 \u2264 k \u2264 9).\n\nIt is guaranteed that the answer exists. All numbers in the input are written in traditional notation of integers, that is, without any extra leading zeros.\n\n\n-----Output-----\n\nPrint w \u2014 the required minimal number of digits to erase. After removing the appropriate w digits from the number n, the result should have a value that is divisible by 10^{k}. The result can start with digit 0 in the single case (the result is zero and written by exactly the only digit 0).\n\n\n-----Examples-----\nInput\n30020 3\n\nOutput\n1\n\nInput\n100 9\n\nOutput\n2\n\nInput\n10203049 2\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the example 2 you can remove two digits: 1 and any 0. The result is number 0 which is divisible by any number.",
  "solutions": "[\"s = input().split()\\nk = int(s[1])\\ns = s[0]\\nif s.count('0') < k:\\n    if s.count('0') > 0:\\n        print(len(s) - 1)\\n    else:\\n        print(len(s))\\n    return\\nhave = 0\\nits = 0\\nfor i in range(len(s) - 1, -1, -1):\\n    its += 1\\n    if s[i] == '0':\\n        have += 1\\n    if have == k:\\n        print(its - have)\\n        return\", \"n, k = map(int, input().split())\\n\\nA = list(str(n))\\nA = A[::-1]\\n\\n_k = k\\n\\ni = 0\\nans = 0\\n\\nwhile k and i < len(A):\\n\\tif(A[i] != '0'):\\n\\t\\tans += 1\\n\\telse:\\n\\t\\tk -= 1\\n\\ti += 1\\n\\nif(k):\\n\\tif(k != _k):\\n\\t\\tprint(len(A) - 1)\\n\\telse:\\n\\t\\tprint(len(A))\\nelse:\\n\\tprint(ans)\", \"a,k = input().split()\\nk = int(k)\\nstart = -1\\nfor j in range(len(a)):\\n    if a[j] != '0':\\n        start = j\\n        break\\nans = 0\\nfor j in range(len(a)-1,j,-1):\\n    if k != 0:\\n        if a[j] == '0':\\n            k-=1\\n        else:\\n            ans+=1\\n    else:\\n        break\\n\\nif k == 0:\\n    print(ans)\\nelse:\\n    print(len(a)-1)\", \"s = input().split()\\nk = int(s[1])\\nn = s[0]\\nptr = len(s[0]) - 1\\nzerocount = 0\\nans = 0\\nwhile ptr >= 0 and zerocount < k:\\n    if n[ptr] == '0':\\n        zerocount += 1\\n    else:\\n        ans += 1\\n    ptr -= 1\\nif ptr == -1:\\n    print(len(n) - 1)\\nelse:\\n    \\n    print(ans)\\n\", \"def main():\\n    n, k = list(map(int, input().split()))\\n    if n == 0 or k == 0:\\n        print(0)\\n    else:\\n        s = str(n)\\n        res = 0\\n        for i in range(len(s)-1, -1, -1):\\n            if s[i] == '0':\\n                k -= 1\\n            else:\\n                res += 1\\n            if k == 0:\\n                break\\n        if k == 0:\\n            print(res)\\n        else:\\n            print(len(s)-1)\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n, k = input().split()\\nk = int(k)\\ns = sum([x==\\\"0\\\" for x in n])\\nif s < k:\\n  print(len(n) - 1)\\nelse:\\n  res = 0\\n  for ch in reversed(n):\\n    if ch == \\\"0\\\":\\n      k -=1\\n      if not k: break\\n    else:\\n      res += 1\\n  print(res)      \\n\", \"n,k=input().split()\\nk=10**int(k)\\na=len(n)-1\\ns=0\\nwhile int(n)%k!=0:\\n    for i in range(len(n)-1,-1,-1):\\n        if n[i]!='0':n=n[:i]+n[i+1:];s+=1;break\\nprint(a if set(list(n))=={'0'} else s)\\n\", \"s = input().split()\\nn = s[0]\\nk = int(s[1])\\n\\nans = 0\\ncur = 0\\nfor i in n[::-1]:\\n    if i == '0':\\n        cur += 1\\n    elif cur < k:\\n        ans += 1\\nif n.count('0') < k:\\n    if n.count('0') > 0:\\n        print(len(n) - 1)\\n    else:\\n        print(len(n))\\nelse:\\n    print(ans)\\n\\n\", \"import sys\\nn,k = list(map(int, input().split()))\\nnum = list(reversed(str(n)))\\nans = 0\\nzeros = 0\\nif num.count('0') < k:\\n    print(len(num) -1)\\n    return\\nfor ch in  num:\\n    if ch == '0':\\n        zeros += 1\\n        if zeros == k:\\n            break;\\n        continue\\n    ans += 1\\n\\nprint(ans)\", \"n, k = list(map(int, input().split()))\\n\\nzeroes = 0\\ndeletes = 0\\n\\ngood = False\\n\\nfor c in str(n)[::-1]:\\n    if c == \\\"0\\\":\\n        zeroes += 1\\n        if zeroes == k:\\n            good = True\\n            break\\n    else:\\n        deletes += 1\\n\\nif good:\\n    print(deletes)\\nelif zeroes >= 1:\\n    print(len(str(n)) - 1)\\n\", \"n,k=input().split()\\nk=int(k)\\nl=len(n)\\ns=list(reversed(list(map(int,n))))\\nc=0\\nn=0\\nwhile c<k:\\n    try:\\n        if s[c]==0:\\n            c+=1\\n        else:\\n            s.pop(c)\\n            n+=1\\n    except IndexError:break\\nif s[-1]==0:\\n    print(l-1)\\nelse:\\n    print(n)\\n\", \"n, k = input().split()\\nk = int(k)\\n\\nans = 0\\nnz = 0\\nfor c in reversed(n):\\n    if nz == k:\\n        break\\n    if c == '0':\\n        nz += 1\\n    else:\\n        ans += 1\\nelse:\\n    ans = len(n) - 1\\n\\nprint(ans)\\n\", \"a = list(input().split())\\nn = a[0]\\nk = int(a[1])\\n\\nc = 0\\nf = 0\\nfor x in range(-1, -len(n)-1, -1):\\n\\tif n[x] == \\\"0\\\":\\n\\t\\tc = c + 1\\n\\t\\tif c == k:\\n\\t\\t\\tprint(  -x-k  )\\n\\t\\t\\tf = 1\\n\\t\\t\\tbreak\\n\\nif f == 0:\\n\\tprint(len(n) - 1)\\n\", \"n, k = [int(x) for x in input().split()]\\ns = str(n)\\nans = 0\\nnulls = 0\\nf = False\\nfor i in range(len(s) - 1, -1, -1):\\n    if s[i] != '0':\\n        ans += 1\\n    else:\\n        nulls += 1\\n    if k == nulls:\\n        f = True\\n        ans = len(s) - i - nulls\\n        break\\nif f:\\n    print(ans)\\nelse:\\n    print(len(s) - 1)\\n\\n\\n\", \"s,k=input().split()\\nk=int(k)\\ni=-1\\ncount=0\\nwhile k>0:\\n    try:\\n        if s[i]=='0':\\n            k-=1\\n            i-=1\\n        else:\\n            i-=1\\n            count+=1\\n    except:\\n        if '0' in s:\\n            count=len(s)-1\\n        else:\\n            count=len(s)\\n        break\\nprint(count)\\n\", \"# your code goes here\\nn, k = input().strip().split()\\nk = int(k)\\nn_ = \\\"\\\"\\ncount = 0\\ncount_rem = 0\\npossible = False\\nfor i in reversed(n):\\n\\t# print(count, count_rem)\\n\\tif count >= k:\\n\\t\\tpossible = True\\n\\t\\tbreak\\n\\telif i is \\\"0\\\":\\n\\t\\tcount+=1\\n\\telse:\\n\\t\\tcount_rem += 1\\n\\t\\t\\nif possible:\\n\\tprint(count_rem)\\nelif count is 0: \\n\\tprint(len(n))\\nelse:\\n\\tprint(len(n) - 1)\", \"from sys import stdin, stdout\\n\\n\\ns, k = stdin.readline().split()\\nk = int(k)\\n\\nans = 0\\ncnt = 0\\nfor i in range(len(s) - 1, -1, -1):\\n    if s[i] != '0':\\n        ans += 1\\n    elif s[:i + 1].count('0') != len(s[:i + 1]):\\n        cnt += 1\\n    \\n    if cnt == k:\\n        stdout.write(str(ans))\\n        break\\nelse:\\n    stdout.write(str(len(s) - 1))\", \"from sys import stdin, stdout\\n\\nnum,k = list(map(int, stdin.readline().rstrip().split()))\\n\\nnumStr=str(num)\\nif num==0:\\n    print(0)\\nelif numStr.count('0')==0:\\n    print(len(numStr))\\nelif numStr.count('0')<k:\\n    print(len(numStr)-1)\\nelse:\\n    numReverse=numStr[::-1]\\n    zeroCount=0\\n    deleted=0\\n    i=0\\n    while zeroCount<k:\\n        if numReverse[i]=='0':\\n            zeroCount+=1\\n        else:\\n            deleted+=1\\n        i+=1\\n    print(deleted)\\n\", \"import math, sys\\ndef main():\\n\\ts = input().split()\\n\\tk = int(s[1])\\n\\tn = s[0]\\n\\tl = len(n)\\n\\tans=0\\n\\tfor i in range(l):\\n\\t\\tif (i-ans == k):\\n\\t\\t\\tprint(ans)\\n\\t\\t\\treturn\\n\\t\\tif n[l-i-1]!='0':\\n\\t\\t\\tans+=1\\n\\tif (l-ans>0):\\n\\t\\tprint(l-1)\\n\\ndef __starting_point():\\n\\tmain()\\n\\n__starting_point()\", \"n,k = [int(i) for i in input().split()]\\n\\nif n % 10 ** k == 0:\\n    print(0)\\n    return\\n\\nif str(n).count('0') < k:\\n    print(len(str(n)) - 1)\\n    return\\n\\nans = 0\\n\\nst = str(n)\\nj = len(st)-1\\n\\nwhile int(st) % 10 ** k != 0:\\n    while int(st) % 10 ** k != 0 and st[j] != '0':\\n        st = st[:j] + st[j+1:]\\n        j -= 1\\n        ans += 1\\n\\n    while int(st) % 10 ** k != 0 and st[j] == '0':\\n        j-=1\\n\\nprint(ans)\\n\", \"n, k = list(map(str, input().split()))\\nk = int(k)\\n\\nn = n[::-1]\\n\\ncc = 0\\ncz = 0\\nc = len(n)\\nfor i in range(c):\\n    if int(n[i]) == 0:\\n        cz += 1\\n    else:\\n        if cz >= k:\\n            break\\n        else:\\n            cc += 1\\nif cz < k:\\n    print(c - 1)\\nelse:\\n    print(min(c - 1, cc))\\n\", \"def LI(): return list(map(int, input().split()))\\ndef II(): return int(input())\\ndef LS(): return input().split()\\ndef S(): return input()\\n\\ndef n(lil):\\n    for i in range(len(lil),-1, -1):\\n        if lil[i-1] != '0':\\n            return lil[:i-1]+lil[i:]\\n\\n\\nli = input().split()\\nk = 0\\nwhile True:\\n    if int(li[0])%(10**int(li[1])) != 0:\\n        li[0] = n(li[0])\\n        k+=1\\n        continue\\n    else:\\n        if li[0] == '0' * len(li[0]):\\n            k += (len(li[0]) -1) \\n        break\\n    \\nprint(int(k))\", \"l = input().split()\\nk = int(l[1]) ; n = l[0]\\nn = n[::-1]\\ndef compute() :\\n\\tj = 0 ; i = 0 ; ans  = 0\\n\\tif len(n) <= k  :\\n\\t\\treturn len(n)-1\\n\\twhile j < k and i < len(n) :\\n\\t\\tif  n[i] != '0' : \\n\\t\\t\\tans += 1\\n\\t\\telse: j+= 1\\n\\t\\ti += 1\\n\\tif i == len(n) and j < k :\\n\\t\\treturn len(n)-1\\n\\telse:\\n\\t\\treturn ans\\nprint(compute())\", \"import sys\\n\\n\\ndef make_gen(str):\\n    arr = str.split(\\\" \\\")\\n    for item in arr:\\n        yield item\\n\\n\\ns = input()\\ns = make_gen(s)\\n\\nn = next(s)\\nk = int(next(s))\\n\\ncount = 0\\ndeleted = 0\\nfor i in range(0, len(n)):\\n    if (n[-i-1] == \\\"0\\\"):\\n        count += 1\\n        if count == k:\\n            break\\n    else:\\n        deleted += 1\\n\\nif (count < k):\\n    if (count > 0):\\n        print(len(n) - 1)\\n    else:\\n        print(len(n))\\nelse:\\n    print(deleted)\\n\", \"n, k = input().split()\\nk = int(k)\\ncnt = 0\\nfor i in n:\\n    if i == \\\"0\\\":\\n        cnt += 1\\nif cnt < k:\\n    print(len(n) - 1)\\nelse:\\n    p = 0\\n    ans = 0\\n    i = len(n) - 1\\n    while ans < k:\\n        if n[i] == \\\"0\\\":\\n            ans += 1\\n        else:\\n            p += 1\\n        i -= 1\\n    print(p)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"30020 3\\n\",\n    \"100 9\\n\",\n    \"10203049 2\\n\",\n    \"0 1\\n\",\n    \"0 9\\n\",\n    \"100 2\\n\",\n    \"102030404 2\\n\",\n    \"1000999999 3\\n\",\n    \"12000000 4\\n\",\n    \"1090090090 5\\n\",\n    \"10 1\\n\",\n    \"10 2\\n\",\n    \"10 9\\n\",\n    \"100 1\\n\",\n    \"100 3\\n\",\n    \"101010110 3\\n\",\n    \"101010110 1\\n\",\n    \"101010110 2\\n\",\n    \"101010110 4\\n\",\n    \"101010110 5\\n\",\n    \"101010110 9\\n\",\n    \"1234567890 1\\n\",\n    \"1234567890 2\\n\",\n    \"1234567890 9\\n\",\n    \"2000000000 1\\n\",\n    \"2000000000 2\\n\",\n    \"2000000000 3\\n\",\n    \"2000000000 9\\n\",\n    \"1010101010 1\\n\",\n    \"1010101010 2\\n\",\n    \"1010101010 3\\n\",\n    \"1010101010 4\\n\",\n    \"1010101010 5\\n\",\n    \"1010101010 6\\n\",\n    \"1010101010 7\\n\",\n    \"1010101010 8\\n\",\n    \"1010101010 9\\n\",\n    \"10001000 1\\n\",\n    \"10001000 2\\n\",\n    \"10001000 3\\n\",\n    \"10001000 4\\n\",\n    \"10001000 5\\n\",\n    \"10001000 6\\n\",\n    \"10001000 7\\n\",\n    \"10001000 8\\n\",\n    \"10001000 9\\n\",\n    \"1000000001 1\\n\",\n    \"1000000001 2\\n\",\n    \"1000000001 3\\n\",\n    \"1000000001 6\\n\",\n    \"1000000001 7\\n\",\n    \"1000000001 8\\n\",\n    \"1000000001 9\\n\",\n    \"1000 1\\n\",\n    \"100001100 3\\n\",\n    \"7057 6\\n\",\n    \"30000000 5\\n\",\n    \"470 1\\n\",\n    \"500500000 4\\n\",\n    \"2103 8\\n\",\n    \"600000000 2\\n\",\n    \"708404442 1\\n\",\n    \"5000140 6\\n\",\n    \"1100047 3\\n\",\n    \"309500 5\\n\",\n    \"70053160 4\\n\",\n    \"44000 1\\n\",\n    \"400370000 3\\n\",\n    \"5800 6\\n\",\n    \"20700050 1\\n\",\n    \"650 1\\n\",\n    \"320005070 6\\n\",\n    \"370000 4\\n\",\n    \"1011 2\\n\",\n    \"1000111 5\\n\",\n    \"1001111 5\\n\",\n    \"99990 3\\n\",\n    \"10100200 6\\n\",\n    \"200 3\\n\",\n    \"103055 3\\n\",\n    \"1030555 3\\n\",\n    \"100111 4\\n\",\n    \"101 2\\n\",\n    \"1001 3\\n\",\n    \"100000 6\\n\",\n    \"1100000 6\\n\",\n    \"123450 2\\n\",\n    \"1003 3\\n\",\n    \"1111100 4\\n\",\n    \"532415007 8\\n\",\n    \"801 2\\n\",\n    \"1230 2\\n\",\n    \"9900 3\\n\",\n    \"14540444 2\\n\",\n    \"11111100 4\\n\",\n    \"11001 3\\n\",\n    \"1011110 3\\n\",\n    \"15450112 2\\n\",\n    \"2220 3\\n\",\n    \"90099 3\\n\",\n    \"10005 4\\n\",\n    \"1010 3\\n\",\n    \"444444400 3\\n\",\n    \"10020 4\\n\",\n    \"10303 3\\n\",\n    \"123000 4\\n\",\n    \"12300 3\\n\",\n    \"101 1\\n\",\n    \"500001 8\\n\",\n    \"121002 3\\n\",\n    \"10011 3\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"8\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/779/B",
  "starter_code": ""
}