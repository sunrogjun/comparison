{
  "task_id": "APPS/253",
  "problem_id": 253,
  "prompt": "Mishka is decorating the Christmas tree. He has got three garlands, and all of them will be put on the tree. After that Mishka will switch these garlands on.\n\nWhen a garland is switched on, it periodically changes its state \u2014 sometimes it is lit, sometimes not. Formally, if i-th garland is switched on during x-th second, then it is lit only during seconds x, x + k_{i}, x + 2k_{i}, x + 3k_{i} and so on.\n\nMishka wants to switch on the garlands in such a way that during each second after switching the garlands on there would be at least one lit garland. Formally, Mishka wants to choose three integers x_1, x_2 and x_3 (not necessarily distinct) so that he will switch on the first garland during x_1-th second, the second one \u2014 during x_2-th second, and the third one \u2014 during x_3-th second, respectively, and during each second starting from max(x_1, x_2, x_3) at least one garland will be lit.\n\nHelp Mishka by telling him if it is possible to do this!\n\n\n-----Input-----\n\nThe first line contains three integers k_1, k_2 and k_3 (1 \u2264 k_{i} \u2264 1500) \u2014 time intervals of the garlands.\n\n\n-----Output-----\n\nIf Mishka can choose moments of time to switch on the garlands in such a way that each second after switching the garlands on at least one garland will be lit, print YES.\n\nOtherwise, print NO.\n\n\n-----Examples-----\nInput\n2 2 3\n\nOutput\nYES\n\nInput\n4 2 3\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example Mishka can choose x_1 = 1, x_2 = 2, x_3 = 1. The first garland will be lit during seconds 1, 3, 5, 7, ..., the second \u2014 2, 4, 6, 8, ..., which already cover all the seconds after the 2-nd one. It doesn't even matter what x_3 is chosen. Our choice will lead third to be lit during seconds 1, 4, 7, 10, ..., though.\n\nIn the second example there is no way to choose such moments of time, there always be some seconds when no garland is lit.",
  "solutions": "[\"a, b, c = sorted(map(int, input().split()))\\nif a > 3:\\n\\tprint('NO')\\nelif a == 3:\\n\\tif b > 3:\\n\\t\\tprint('NO')\\n\\telif b == 3:\\n\\t\\tif c > 3:\\n\\t\\t\\tprint('NO')\\n\\t\\telse:\\n\\t\\t\\tprint(\\\"YES\\\")\\nelif a == 1:\\n\\tprint('YES')\\nelse:\\n\\tif b == 2:\\n\\t\\tprint('YES')\\n\\telif b > 4:\\n\\t\\tprint('NO')\\n\\telif b == 4:\\n\\t\\tif c == 4:\\n\\t\\t\\tprint('YES')\\n\\t\\telse:\\n\\t\\t\\tprint('NO')\\n\\telse:\\n\\t\\tprint('NO')\", \"a = sorted([int(i) for i in input().split()])\\nif a[0] * a[1] + a[1] * a[2] + a[2] * a[0] < a[0] * a[1] * a[2] or a[0] == 2 and a[1] == 3:\\n\\tprint('NO')\\nelse:\\n\\tprint('YES')\\n\", \"import sys\\nk1,k2,k3 = [int(x) for x in input().split()]\\ndef is_div(a,b):\\n    return a==((a//b)*b)\\n\\ndef always_lit(x1,x2,k1,k2,k3):\\n    for i in range(200):\\n        if not is_div(i-x1,k1) and not is_div(i-x2,k2) and not is_div(i,k3):\\n            return False\\n    return True\\n\\nfor x1 in range(-200,1):\\n    for x2 in range(x1,1):\\n        if always_lit(x1,x2,k1,k2,k3):\\n            print('YES')\\n            return\\n\\nprint('NO')\\n\", \"k,m,n = list(map(int,input().split()))\\nmn = min(k,min(m,n))\\nma = max(k,max(m,n))\\nme = k+m+n-mn-ma\\nif mn == 1 or (mn == me == 2) or (mn == 2 and me == ma == 4) or mn == ma == me == 3:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"q=list(map(int,input().split()))\\nq.sort()\\nif (1 in q)|(q.count(2)>=2)|(q.count(3)==3)|(q==[2,4,4]):\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"# input\\nK = list(map(int, input().split()))\\nK.sort()\\n\\ndef solve():\\n    m = min(K)\\n\\n    if m == 1:\\n        print('YES')\\n        return\\n    elif m >= 3:\\n        if K == [3,3,3]:\\n            print('YES')\\n            return\\n        else:\\n            print('NO')\\n            return\\n    else: # m=2\\n        if K[1] == 2:\\n            print('YES')\\n            return\\n        elif K == [2,4,4]:\\n            print('YES')\\n            return\\n        else:\\n            print('NO')\\n            return\\n\\ndef __starting_point():\\n    solve()\\n\\n\\n__starting_point()\", \"from math import gcd\\nimport sys\\n\\ndef f():\\n    a,b,c = sorted(map(int,input().split()))\\n\\n    x1 = 0\\n    for x2 in range(100):\\n        for x3 in range(100):\\n            ok = True\\n            for t in range(x3,x3+5000):\\n                if (t-x1)%a == 0 or (t-x2)%b == 0 or (t-x3)%c == 0:\\n                   continue\\n                else:\\n                    ok = False\\n                    break\\n            if ok:\\n                print('YES')\\n                return\\n    print('NO')\\nf()\\n\", \"def ans(k1,k2,k3):\\n    if k1 == 1:\\n        return(\\\"YES\\\")\\n\\n    if k1 == 2 and k2 == 2:\\n        return(\\\"YES\\\")\\n\\n    if k1 == 3 and k2 == 3 and k3 == 3:\\n        return(\\\"YES\\\")\\n\\n    if k1 == 2 and k2 == 4 and k3 == 4:\\n        return(\\\"YES\\\")\\n\\n    return(\\\"NO\\\")\\n\\n\\na,b,c = [int(i) for i in input().split()]\\n\\nk1 = min(a,b,c)\\nk3 = max(a,b,c)\\nk2 = a + b+ c - k1 -k3\\n\\n# k1 <= k2 <= k3\\n\\nprint(ans(k1,k2,k3))\\n\", \"v = list(map(int, input().split()))\\nv.sort()\\nif (v[0] == 1):\\n    print(\\\"YES\\\")\\n    return\\nif (v[0] == 2 and v[1] == 2):\\n    print(\\\"YES\\\")\\n    return\\nif (v.count(3) == 3):\\n    print(\\\"YES\\\")\\n    return\\nif (v[0] == 2 and v.count(4) == 2):\\n    print(\\\"YES\\\")\\n    return\\nprint(\\\"NO\\\")\", \"a,b,c = list(map(int,input().split()))\\n\\nif a==1 or b==1 or c==1:\\n\\tprint(\\\"YES\\\")\\nelif a==3 and b==3 and c==3:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tl={} \\n\\t\\n\\tl[2] = 0\\n\\tl[4]=0\\n\\tl[a]=0\\n\\tl[b]=0\\n\\tl[c]=0\\n\\n\\tl[a]+=1\\n\\tl[b]+=1\\n\\tl[c]+=1\\n\\tif l[2]>=2:\\n\\t\\tprint(\\\"YES\\\")\\n\\telif l[2]==1 and l[4]==2:\\n\\t\\tprint(\\\"YES\\\")\\n\\telse:\\n\\t\\tprint(\\\"NO\\\");\\t\\n\", \"k1,k2,k3 = map(int, input().split())\\nif 1 in [k1, k2,k3]:\\n    print('YES')\\nelif sum([1 for i in [k1,k2,k3] if i == 2]) >= 2:\\n    print('YES')\\nelif sum([1 for i in [k1,k2,k3] if i == 3]) == 3:\\n    print('YES')\\nelif sum([1 for i in [k1,k2,k3] if i == 2]) == 1 and sum([1 for i in [k1,k2,k3] if i == 4]) == 2:\\n    print('YES')\\nelse:\\n    print('NO')            \", \"import math\\nx1,x2,x3 = list(map(int,input().split()))\\nkmm = math.gcd(x1,math.gcd(x2,x3))\\na =[x1,x2,x3]\\na.sort()\\nif min(a) >= 4 :print('NO')\\nelif min(a) == 3:\\n    if max(a) == 3:print('YES')\\n    else:print(\\\"NO\\\")\\nelif min(a) == 1:print(\\\"YES\\\")\\nelif min(a) == 2:\\n    if a.count(2) >= 2:print(\\\"YES\\\")\\n    elif a == [2,4,4]:print(\\\"YES\\\")\\n    else: print(\\\"NO\\\")\\n\", \"import sys\\nk1,k2,k3=list(map(int,input().split()))\\nL=[k1,k2,k3]\\nx=L.count(1)\\nif x!=0:\\n    print(\\\"YES\\\")\\n    return\\nx=L.count(2)\\nif x>=2:\\n    print('YES')\\n    return\\nx=L.count(3)\\nif x==3:\\n    print(\\\"YES\\\")\\n    return\\nif L.count(4)==2 and L.count(2)==1:\\n    print(\\\"YES\\\")\\n    return\\nprint(\\\"NO\\\")\\n\\n\", \"k1,k2,k3=list(map(int,input().split()))\\nL=[k1,k2,k3]\\n\\n\\nif L.count(1) != 0:\\n    print(\\\"YES\\\")\\nelif L.count(2) >= 2:\\n    print('YES')\\n\\nelif L.count(3) == 3:\\n    print(\\\"YES\\\")\\n\\nelif L.count(4)==2 and L.count(2)==1:\\n    print(\\\"YES\\\")\\nelse: print(\\\"NO\\\")\\n\\n\", \"data = input().split(\\\" \\\")\\nk = [int(data[0]), int(data[1]), int(data[2])]\\nk.sort()\\n[k1, k2, k3] = k\\nhas_solution = False\\nif k1 == 1:\\n    has_solution = True\\nelif k1 == 2 and k2 == 2:\\n    has_solution = True\\nelif k1 == 2 and k2 == 4 and k3 == 4:\\n    has_solution = True\\nelif k1 == 3 and k2 == 3 and k3 == 3:\\n    has_solution = True\\nif has_solution:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"a=list(sorted(list(map(int,input().split()))))\\nif a[0]==1 or a[0]==2 and a[1]==2 or a==[2,4,4] or a==[3,3,3]:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"def solve(k):\\n\\tif min(k) > 3:\\n\\t\\tprint(\\\"NO\\\")\\n\\t\\treturn\\n\\n\\tx = [0, 0, 0]\\n\\tfor x[0] in range(3):\\n\\t\\tfor x[1] in range(3):\\n\\t\\t\\tfor x[2] in range(3):\\n\\t\\t\\t\\ta = [False] * 15\\n\\t\\t\\t\\tfor i in range(3):\\n\\t\\t\\t\\t\\tj = 0\\n\\t\\t\\t\\t\\twhile x[i] + j * k[i] < 15:\\n\\t\\t\\t\\t\\t\\ta[x[i] + j * k[i]] = True\\n\\t\\t\\t\\t\\t\\tj += 1\\n\\t\\t\\t\\tis_possible = True\\n\\t\\t\\t\\tfor i in range(3, 15):\\n\\t\\t\\t\\t\\tis_possible = is_possible and a[i]\\n\\t\\t\\t\\tif is_possible:\\n\\t\\t\\t\\t\\tprint(\\\"YES\\\")\\n\\t\\t\\t\\t\\t# print(\\\" \\\".join(map(str, x)))\\n\\t\\t\\t\\t\\treturn\\n\\tprint(\\\"NO\\\")\\n\\nk = list(map(int, input().split()))\\nsolve(k)\\n\\n\\n\", \"ks = [int(v) for v in input().split()]\\nks.sort()\\n\\ndef solve(ks):\\n    k1, k2, k3 = ks\\n\\n    if k1 == 1:\\n        return True\\n    elif k1 == 2:\\n        if k2 == 2:\\n            return True\\n        elif k2 == 4 and k3 == 4:\\n            return True\\n        else:\\n            return False\\n    elif k1 == 3:\\n        if k2 == 3 and k3 == 3:\\n            return True\\n        else:\\n            return False\\n    else:\\n        return False\\n\\nprint([\\\"NO\\\", \\\"YES\\\"][solve(ks)])\\n\", \"k = list(map(int, input().strip().split()))\\nk = sorted(k)\\n\\nif k[0] == 1:\\n    print(\\\"YES\\\")\\nelif k[0] == 2 and k[1] == 2:\\n    print(\\\"YES\\\")\\nelif k[0] == 2 and k[1] == 4 and k[2] == 4:\\n    print(\\\"YES\\\")\\nelif k[0] == 3 and k[1] == 3 and k[2] == 3:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\\n\\n\", \"f=list(map(int,input().split()))\\nf.sort()\\na = f[0]\\nb = f[1]\\nc = f[2]\\nif a == 1:\\n    print('YES')\\nelse:\\n    if a == 3 and b == 3 and c == 3:\\n        print('YES')\\n    else:\\n        if a != 2:\\n            print('NO')\\n        else:\\n            if b == 2 or b == 4 and c == 4:\\n                print('YES')\\n            else:\\n                print('NO')\", \"k = list(map(int, input().split()))\\n\\ncnt1 = k.count(1)\\ncnt2 = k.count(2)\\ncnt3 = k.count(3)\\ncnt4 = k.count(4)\\n\\nif cnt1 >= 1 or cnt2 >= 2 or cnt3 == 3 or (cnt4 == 2 and cnt2 == 1):\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"a = [int(i) for i in input().split()]\\na.sort()\\nif a[0] == 1:\\n    print('YES')\\nelif a[0] == 2 and a[1] == 2:\\n    print('YES')\\nelif a[0] == 2 and a[1] == 4 and a[2] == 4:\\n    print('YES')\\nelif a[0] == 3 and a[1] == 3 and a[2] == 3:\\n    print('YES')\\nelse:\\n    print('NO')\", \"R=lambda:map(int,input().split())\\n\\na = list( R() ) \\n\\nans = 0\\n\\no = a.count(1)\\nt = a.count(2)\\nth = a.count(3)\\nf = a.count(4)\\n\\nif o > 0 or t > 1 or th > 2 or (t == 1 and f == 2):\\n    print(\\\"YES\\\")\\n    \\nelse:\\n    print(\\\"NO\\\")\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2 2 3\\n\",\n    \"4 2 3\\n\",\n    \"1499 1498 1500\\n\",\n    \"1500 1500 1500\\n\",\n    \"100 4 1\\n\",\n    \"4 2 4\\n\",\n    \"3 3 3\\n\",\n    \"2 3 6\\n\",\n    \"2 3 3\\n\",\n    \"4 4 2\\n\",\n    \"1 1 1\\n\",\n    \"2 11 2\\n\",\n    \"4 4 4\\n\",\n    \"4 4 5\\n\",\n    \"3 3 2\\n\",\n    \"3 6 6\\n\",\n    \"2 3 2\\n\",\n    \"1 1 3\\n\",\n    \"3 3 4\\n\",\n    \"2 4 4\\n\",\n    \"2 2 2\\n\",\n    \"2 10 10\\n\",\n    \"3 4 4\\n\",\n    \"2 5 5\\n\",\n    \"2 4 5\\n\",\n    \"228 2 2\\n\",\n    \"2 998 1000\\n\",\n    \"2 6 6\\n\",\n    \"6 4 7\\n\",\n    \"2 5 2\\n\",\n    \"2 100 100\\n\",\n    \"7 7 2\\n\",\n    \"3 3 6\\n\",\n    \"82 3 82\\n\",\n    \"2 3 5\\n\",\n    \"1 218 924\\n\",\n    \"4 4 123\\n\",\n    \"4 4 3\\n\",\n    \"3 4 2\\n\",\n    \"2 2 5\\n\",\n    \"2 10 2\\n\",\n    \"5 2 2\\n\",\n    \"3 3 9\\n\",\n    \"1 5 5\\n\",\n    \"2 4 6\\n\",\n    \"15 3 3\\n\",\n    \"1 5 10\\n\",\n    \"2 3 14\\n\",\n    \"1265 2 593\\n\",\n    \"2 2 567\\n\",\n    \"1 6 5\\n\",\n    \"2 2 7\\n\",\n    \"2 2 1500\\n\",\n    \"3 6 9\\n\",\n    \"1 46 79\\n\",\n    \"4 3 3\\n\",\n    \"2 4 8\\n\",\n    \"1493 1489 1487\\n\",\n    \"1 2 3\\n\",\n    \"1 2 5\\n\",\n    \"1 2 8\\n\",\n    \"3 4 5\\n\",\n    \"2 2 4\\n\",\n    \"3 2 3\\n\",\n    \"7 2 2\\n\",\n    \"3 2 2\\n\",\n    \"6 7 4\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/911/C",
  "starter_code": ""
}