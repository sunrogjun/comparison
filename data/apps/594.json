{
  "task_id": "APPS/594",
  "problem_id": 594,
  "prompt": "Valera wanted to prepare a Codesecrof round. He's already got one problem and he wants to set a time limit (TL) on it.\n\nValera has written n correct solutions. For each correct solution, he knows its running time (in seconds). Valera has also wrote m wrong solutions and for each wrong solution he knows its running time (in seconds).\n\nLet's suppose that Valera will set v seconds TL in the problem. Then we can say that a solution passes the system testing if its running time is at most v seconds. We can also say that a solution passes the system testing with some \"extra\" time if for its running time, a seconds, an inequality 2a \u2264 v holds.\n\nAs a result, Valera decided to set v seconds TL, that the following conditions are met:  v is a positive integer;  all correct solutions pass the system testing;  at least one correct solution passes the system testing with some \"extra\" time;  all wrong solutions do not pass the system testing;  value v is minimum among all TLs, for which points 1, 2, 3, 4 hold. \n\nHelp Valera and find the most suitable TL or else state that such TL doesn't exist.\n\n\n-----Input-----\n\nThe first line contains two integers n, m (1 \u2264 n, m \u2264 100). The second line contains n space-separated positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 100) \u2014 the running time of each of the n correct solutions in seconds. The third line contains m space-separated positive integers b_1, b_2, ..., b_{m} (1 \u2264 b_{i} \u2264 100) \u2014 the running time of each of m wrong solutions in seconds. \n\n\n-----Output-----\n\nIf there is a valid TL value, print it. Otherwise, print -1.\n\n\n-----Examples-----\nInput\n3 6\n4 5 2\n8 9 6 10 7 11\n\nOutput\n5\nInput\n3 1\n3 4 5\n6\n\nOutput\n-1",
  "solutions": "[\"n, m = map(int, input().split())\\nA = list(map(int, input().split()))\\nB = list(map(int, input().split()))\\n\\nans = max(max(A), min(A) * 2)\\nif min(B) <= ans:\\n\\tprint(-1)\\nelse:\\n\\tprint(ans)\", \"import sys\\n\\n\\nn, m = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\na.sort()\\nb.sort()\\nans = a[0] * 2\\nif ans < a[-1]:\\n    ans = a[-1]\\nif ans >= b[0]:\\n    print(-1)\\n    return\\nprint(ans)\", \"input()\\na = list(map(int, input().split()))\\ntl = max(2 * min(a), max(a))\\nif tl < min(list(map(int, input().split()))):\\n    print(tl)\\nelse:\\n    print(-1)\\n\", \"n, m = map(int, input().split())\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nmi = min(a)\\nma = max(a)\\nk = min(b)\\nif (2 * mi <= ma):\\n    v = ma\\nelse:\\n    v = 2 * mi\\nif v >= k:\\n    print(-1)\\nelse:\\n    print(v)\", \"n, m = list(map(int, input().split()))\\nright = sorted(list(map(int, input().split())))\\nwrong = sorted(list(map(int, input().split())))\\nans = max(right[0] * 2, right[-1])\\nif ans < wrong[0]:\\n    print(ans)\\nelse:\\n    print(-1)\\n\", \"n,m = map(int,input().split())\\na = list(map(int,input().split()))\\nb = list(map(int,input().split()))\\nfor i in range(244):\\n    c1 = 0\\n    c2 = 0\\n    c3 = 0\\n    for aa in a:\\n        if aa <= i: c1+=1\\n        if 2*aa <=i: c2=1\\n    for bb in b:\\n        if bb > i:\\n            c3 +=1\\n    if(c1==n and c2 >0 and c3 == m):\\n        print(i)\\n        break\\nelse:\\n    print(-1)\", \"n, m = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\nmaxa = 0\\nmina = 101\\nfor i in a:\\n    if i > maxa:\\n        maxa = i\\n    if i < mina:\\n        mina = i\\nminb = 101\\nfor i in b:\\n    if i < minb:\\n        minb = i\\nif max(mina * 2, maxa) >= minb:\\n    print(-1)\\nelse:\\n    print(max(mina * 2, maxa))\\n\", \"a, b = map(int, input().split())\\nP = list(map(int, input().split()))\\nflag = 0\\nM = P[0]\\nm = P[0]\\nfor i in range(a):\\n    M = max(M, P[i])\\n    m = min(m, P[i])\\ns = max(M, 2 * m)\\nA = list(map(int, input().split()))\\nfor i in range(b):\\n    if A[i] <= s:\\n        flag = 1\\nif flag == 1:\\n    print(-1)\\nelse:\\n    print(s)\", \"n, m = [int(x) for x in input().split()]\\na = [int(x) for x in input().split()]\\nb = [int(x) for x in input().split()]\\n\\nmax_a = max(max(a), 2 * min(a))\\n\\nwrong_pass = True\\nfor c in b:\\n    if c <= max_a:\\n        wrong_pass = False\\n        break\\n\\nif wrong_pass:\\n    print(\\\"%d\\\" % max_a)\\nelse:\\n    print(\\\"-1\\\")\", \"m, n = map(int, input().split())\\ntrues, falses = list(map(int, input().split())), list(map(int, input().split()))\\nv = max(2 * min(trues), max(trues))\\nif v < min(falses):\\n    print(v)\\nelse:\\n    print(-1)\", \"n, m = map(int, input().split())\\na = list(map(int, input().split()))\\nb = list(map(int, input().split()))\\na.sort()\\nb.sort()\\nam = a[0]\\nbm = min(b)\\ni = b[0] - 1\\nwhile i >= 2*am and a[-1] <= i and i > 0:\\n    i -= 1\\ni+=1\\nif i == 0 or not(i >= 2*am and a[-1] <= i and i > 0) or bm <= i:\\n    print(-1)\\nelse:\\n    print(i)\", \"#TL\\n\\ndata = input().split(\\\" \\\")\\nn = int(data[0])\\nm = int(data[1])\\ncorrect = input().split(\\\" \\\")\\ncorrect = [int(x) for x in correct]\\nwrong = input().split(\\\" \\\")\\nwrong = [int(x) for x in wrong]\\nlimit = max(max(correct), min(correct) * 2)\\nfor i in range(len(wrong)):\\n\\tif wrong[i] <= limit:\\n\\t\\tprint(\\\"-1\\\")\\n\\t\\treturn\\nfor i in range(len(correct)):\\n\\tif correct[i] > limit:\\n\\t\\tprint(\\\"-1\\\")\\n\\t\\treturn\\nprint(limit)\", \"\\nnums = input()\\ncorrect = input()\\nincorrect = input()\\n\\ncorrect_times = [ int(i) for i in correct.split(' ') ]\\nincorrect_times = [ int(i) for i in incorrect.split(' ') ]\\n\\ncorrect_times = sorted(correct_times)\\nincorrect_times = sorted(incorrect_times)\\n\\nv = max([ 2 * correct_times[0], correct_times[-1] ])\\n\\nif v >= incorrect_times[0]:\\n    print(-1)\\nelse:\\n    print(v)\\n\", \"R = lambda: list(map(int, input().split()))\\nn, m = R()\\na = R()\\nb = R()\\nv = max(2 * min(a), max(a))\\nprint(v if v < min(b) else -1)\", \"n, m = [int(i) for i in input().split()]\\na = [int(i) for i in input().split()]\\nb = [int(i) for i in input().split()]\\nflag = False\\nfor i in range(100):\\n    if (i < min(b)) and (i >= max(a)) and (i >= min(a) * 2):\\n        if not(flag): \\n            print(i)\\n            flag = True\\nif not(flag):\\n     print(-1)\", \"# your code goes here\\n\\nstr = input()\\nL = str.split()\\nn = int(L[0])\\nm = int(L[1])\\n\\nstr = input()\\nL = str.split()\\nmax1 = int(L[0])\\nmin1 = int(L[0])\\n\\ni = 0\\n\\nwhile i<n:\\n    if max1 < int (L[i]):\\n        max1 = int (L[i])\\n    if min1 > int (L[i]):\\n        min1 = int (L[i])\\n    i+=1\\n\\nstr = input()\\nL = str.split()\\n\\nmin = int(L[0])\\n\\ni = 0\\n\\nwhile i<m:\\n    if min > int (L[i]):\\n        min = int (L[i])\\n    i+=1\\n\\ni=0\\n\\nflag = False\\nif max1 < min :\\n    i = max1\\n    while i<min:\\n        if 2*min1<=i:\\n            print (i)\\n            flag = True\\n            i=min+1\\n        i+=1\\n\\nif flag == False:\\n    print (\\\"-1\\\")\\n\\n\\n\", \"n, m = list(map(int, input().split()))\\nA = list(map(int, input().split()))\\nB = list(map(int, input().split()))\\nres = max(max(A), min(A) * 2)\\n\\nif min(B) > res:\\n    print(res)\\nelse:\\n    print(-1)\\n\", \"a,b = input().strip().split(' ')\\na = int(a)\\nb = int(b)\\nright = [int(x) for x in input().strip().split(' ')]\\nwrong = [int(x) for x in input().strip().split(' ')]\\n\\nmaxR = max(right)\\nminR = min(right)\\n\\nv = 2*minR if (2*minR > maxR) else maxR\\n\\nminW = min(wrong)\\nprint(-1 if minW <= v else v)\\n\", \"def __starting_point():\\n    arr = input().split(' ')\\n    n = int(arr[0])\\n    m = int(arr[1])\\n    arr = input().split(' ')\\n    Lc = []\\n    Li = []\\n    for a in arr:\\n        Lc.append(int(a))\\n    arr = input().split(' ')\\n    for a in arr:\\n        Li.append(int(a))\\n    Lc.sort()\\n    Li.sort()\\n    ans = -1\\n    if Lc[-1]>=Li[0] or Li[0]<=2*Lc[0]:\\n        ans = -1\\n    else:\\n        ans=max(2*Lc[0],Lc[-1])\\n    print(ans)\\n\\n__starting_point()\", \"n,m=list(map(int,input().split()))\\nN=list(map(int,input().split()))\\nM=list(map(int,input().split()))\\n\\nN.sort()\\nM.sort()\\n\\na=N[-1]\\nans=-1\\nfor i in range(a,M[0]):\\n    if(i>=2*N[0]):\\n        ans=i\\n        break\\nprint(ans)\\n\", \"num = input().rstrip('\\\\n').split(' ')\\ncorrect_solution = input().rstrip('\\\\n').split(' ')\\nwrong_solution = input().rstrip('\\\\n').split(' ')\\n\\nn = int(num[0])\\nm = int(num[1])\\n\\n\\ndef toIntList(list):\\n    newlist = []\\n    for k in list:\\n        newlist.append(int(k))\\n    return newlist\\n\\n\\ncorrect_time = toIntList(correct_solution)\\ncorrect_time.sort()\\nwrong_time = toIntList(wrong_solution)\\nwrong_time.sort()\\n\\nif correct_time[-1] >= wrong_time[0]:\\n    print(-1)\\nelif correct_time[0] * 2 >= wrong_time[0]:\\n    print(-1)\\nelse:\\n    print(max(correct_time[-1], correct_time[0] * 2))\\n\", \"s = input()\\nar = s.split()\\nn = int(ar[0])\\nm = int(ar[1])\\na = []\\nb = []\\ns = input()\\nfor i in s.split():\\n    a += [int(i)]\\ns = input()\\nfor i in s.split():\\n    b += [int(i)]\\n\\nif max(min(a) * 2, max(a)) < min(b):\\n    print(max(min(a) * 2, max(a)))\\nelse:\\n    print(-1)\\n\\n\\n\", \"3\\n\\ndef readln(): return tuple(map(int, input().split()))\\n\\nn, m = readln()\\na = readln()\\nb = readln()\\nans = -1\\nfor v in range(max(a), min(b)):\\n    if [_ for _ in a if 2 * _ <= v]:\\n        ans = v\\n        break\\nprint(ans)\\n\", \"def getVar(): \\n    return tuple(map(int, input().split()))\\nn, m = getVar()\\na = getVar()\\nb = getVar()\\n#print(a,b)\\nc = max(min(a) * 2, max(a))\\n#c = -1\\nd = min(b) - 1\\nif c > d:\\n    c = -1\\nprint(c)\\n\", \"def main():\\n    n, m = [int(item) for item in input().split()]\\n    A = [int(item) for item in input().split()]\\n    B = [int(item) for item in input().split()]\\n\\n    x = max(2*min(A), max(A))\\n    y = min(B)\\n    if x<y:\\n        print(x)\\n    else:\\n        print('-1')\\n\\nmain()\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3 6\\n4 5 2\\n8 9 6 10 7 11\\n\",\n    \"3 1\\n3 4 5\\n6\\n\",\n    \"2 5\\n45 99\\n49 41 77 83 45\\n\",\n    \"50 50\\n18 13 5 34 10 36 36 12 15 11 16 17 14 36 23 45 32 24 31 18 24 32 7 1 31 3 49 8 16 23 3 39 47 43 42 38 40 22 41 1 49 47 9 8 19 15 29 30 16 18\\n91 58 86 51 94 94 73 84 98 69 74 56 52 80 88 61 53 99 88 50 55 95 65 84 87 79 51 52 69 60 74 73 93 61 73 59 64 56 95 78 86 72 79 70 93 78 54 61 71 50\\n\",\n    \"55 44\\n93 17 74 15 34 16 41 80 26 54 94 94 86 93 20 44 63 72 39 43 67 4 37 49 76 94 5 51 64 74 11 47 77 97 57 30 42 72 71 26 8 14 67 64 49 57 30 23 40 4 76 78 87 78 79\\n38 55 17 65 26 7 36 65 48 28 49 93 18 98 31 90 26 57 1 26 88 56 48 56 23 13 8 67 80 2 51 3 21 33 20 54 2 45 21 36 3 98 62 2\\n\",\n    \"32 100\\n30 8 4 35 18 41 18 12 33 39 39 18 39 19 33 46 45 33 34 27 14 39 40 21 38 9 42 35 27 10 14 14\\n65 49 89 64 47 78 59 52 73 51 84 82 88 63 91 99 67 87 53 99 75 47 85 82 58 47 80 50 65 91 83 90 77 52 100 88 97 74 98 99 50 93 65 61 65 65 65 96 61 51 84 67 79 90 92 83 100 100 100 95 80 54 77 51 98 64 74 62 60 96 73 74 94 55 89 60 92 65 74 79 66 81 53 47 71 51 54 85 74 97 68 72 88 94 100 85 65 63 65 90\\n\",\n    \"1 50\\n7\\n65 52 99 78 71 19 96 72 80 15 50 94 20 35 79 95 44 41 45 53 77 50 74 66 59 96 26 84 27 48 56 84 36 78 89 81 67 34 79 74 99 47 93 92 90 96 72 28 78 66\\n\",\n    \"1 1\\n4\\n9\\n\",\n    \"1 1\\n2\\n4\\n\",\n    \"22 56\\n49 20 42 68 15 46 98 78 82 8 7 33 50 30 75 96 36 88 35 99 19 87\\n15 18 81 24 35 89 25 32 23 3 48 24 52 69 18 32 23 61 48 98 50 38 5 17 70 20 38 32 49 54 68 11 51 81 46 22 19 59 29 38 45 83 18 13 91 17 84 62 25 60 97 32 23 13 83 58\\n\",\n    \"1 1\\n50\\n100\\n\",\n    \"1 1\\n49\\n100\\n\",\n    \"1 1\\n100\\n100\\n\",\n    \"1 1\\n99\\n100\\n\",\n    \"8 4\\n1 2 49 99 99 95 78 98\\n100 100 100 100\\n\",\n    \"68 85\\n43 55 2 4 72 45 19 56 53 81 18 90 11 87 47 8 94 88 24 4 67 9 21 70 25 66 65 27 46 13 8 51 65 99 37 43 71 59 71 79 32 56 49 43 57 85 95 81 40 28 60 36 72 81 60 40 16 78 61 37 29 26 15 95 70 27 50 97\\n6 6 48 72 54 31 1 50 29 64 93 9 29 93 66 63 25 90 52 1 66 13 70 30 24 87 32 90 84 72 44 13 25 45 31 16 92 60 87 40 62 7 20 63 86 78 73 88 5 36 74 100 64 34 9 5 62 29 58 48 81 46 84 56 27 1 60 14 54 88 31 93 62 7 9 69 27 48 10 5 33 10 53 66 2\\n\",\n    \"5 100\\n1 1 1 1 1\\n77 53 38 29 97 33 64 17 78 100 27 12 42 44 20 24 44 68 58 57 65 90 8 24 4 6 74 68 61 43 25 69 8 62 36 85 67 48 69 30 35 41 42 12 87 66 50 92 53 76 38 67 85 7 80 78 53 76 94 8 37 50 4 100 4 71 10 48 34 47 83 42 25 81 64 72 25 51 53 75 43 98 53 77 94 38 81 15 89 91 72 76 7 36 27 41 88 18 19 75\\n\",\n    \"3 3\\n2 3 4\\n8 9 10\\n\",\n    \"2 1\\n2 3\\n15\\n\",\n    \"2 1\\n2 4\\n4\\n\",\n    \"2 3\\n4 5\\n10 11 12\\n\",\n    \"3 1\\n2 3 3\\n5\\n\",\n    \"2 1\\n9 10\\n100\\n\",\n    \"3 3\\n3 12 15\\n7 8 9\\n\",\n    \"2 2\\n3 5\\n7 8\\n\",\n    \"3 3\\n4 5 6\\n10 11 12\\n\",\n    \"3 5\\n2 3 3\\n6 6 6 6 2\\n\",\n    \"3 6\\n4 5 3\\n8 9 7 10 7 11\\n\",\n    \"3 6\\n4 5 2\\n8 9 6 10 7 4\\n\",\n    \"2 1\\n4 6\\n10\\n\",\n    \"1 2\\n1\\n3 1\\n\",\n    \"2 1\\n5 6\\n20\\n\",\n    \"2 1\\n1 5\\n5\\n\",\n    \"3 2\\n10 20 30\\n30 40\\n\",\n    \"2 2\\n5 6\\n7 100\\n\",\n    \"2 1\\n2 5\\n7\\n\",\n    \"1 1\\n5\\n20\\n\",\n    \"2 1\\n10 11\\n100\\n\",\n    \"1 1\\n1\\n10\\n\",\n    \"1 1\\n10\\n100\\n\"\n  ],\n  \"outputs\": [\n    \"5\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"49\",\n    \"-1\\n\",\n    \"46\",\n    \"14\",\n    \"8\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"98\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"99\",\n    \"-1\\n\",\n    \"2\",\n    \"4\",\n    \"4\",\n    \"-1\\n\",\n    \"8\",\n    \"4\",\n    \"18\",\n    \"-1\\n\",\n    \"6\",\n    \"8\",\n    \"-1\\n\",\n    \"6\",\n    \"-1\\n\",\n    \"8\",\n    \"-1\\n\",\n    \"10\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\",\n    \"10\",\n    \"20\",\n    \"2\",\n    \"20\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/350/A",
  "starter_code": ""
}