{
  "task_id": "APPS/514",
  "problem_id": 514,
  "prompt": "Adilbek was assigned to a special project. For Adilbek it means that he has $n$ days to run a special program and provide its results. But there is a problem: the program needs to run for $d$ days to calculate the results.\n\nFortunately, Adilbek can optimize the program. If he spends $x$ ($x$ is a non-negative integer) days optimizing the program, he will make the program run in $\\left\\lceil \\frac{d}{x + 1} \\right\\rceil$ days ($\\left\\lceil a \\right\\rceil$ is the ceiling function: $\\left\\lceil 2.4 \\right\\rceil = 3$, $\\left\\lceil 2 \\right\\rceil = 2$). The program cannot be run and optimized simultaneously, so the total number of days he will spend is equal to $x + \\left\\lceil \\frac{d}{x + 1} \\right\\rceil$.\n\nWill Adilbek be able to provide the generated results in no more than $n$ days?\n\n\n-----Input-----\n\nThe first line contains a single integer $T$ ($1 \\le T \\le 50$) \u2014 the number of test cases.\n\nThe next $T$ lines contain test cases \u2013 one per line. Each line contains two integers $n$ and $d$ ($1 \\le n \\le 10^9$, $1 \\le d \\le 10^9$) \u2014 the number of days before the deadline and the number of days the program runs.\n\n\n-----Output-----\n\nPrint $T$ answers \u2014 one per test case. For each test case print YES (case insensitive) if Adilbek can fit in $n$ days or NO (case insensitive) otherwise.\n\n\n-----Example-----\nInput\n3\n1 1\n4 5\n5 11\n\nOutput\nYES\nYES\nNO\n\n\n\n-----Note-----\n\nIn the first test case, Adilbek decides not to optimize the program at all, since $d \\le n$.\n\nIn the second test case, Adilbek can spend $1$ day optimizing the program and it will run $\\left\\lceil \\frac{5}{2} \\right\\rceil = 3$ days. In total, he will spend $4$ days and will fit in the limit.\n\nIn the third test case, it's impossible to fit in the limit. For example, if Adilbek will optimize the program $2$ days, it'll still work $\\left\\lceil \\frac{11}{2+1} \\right\\rceil = 4$ days.",
  "solutions": "[\"t = int(input())\\nfor _ in range(t):\\n    n, d = list(map(int, input().split()))\\n    if (1 - n) ** 2 - 4 * (d - n) >= 0:\\n        print('YES')\\n    else:\\n        print('NO')\\n\", \"import sys\\nfor _ in range(int(input())):\\n    n, d = map(int, input().split())\\n    res = d\\n    for a in range(int(d**0.5) - 10, int(d**0.5) + 10):\\n        if a < 0:\\n            continue\\n        res = min(res, a + (d + a) // (a + 1))\\n    if res <= n:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\", \"from math import ceil\\nT = int(input())\\nfor _ in range(T):\\n    N,D = list(map(int,input().split()))\\n    def calc(D,x):\\n        return x + ceil(D/(x+1))\\n    for i in range(N):\\n        if calc(D,i) <= N:\\n            print(\\\"YES\\\")\\n            break\\n    else:\\n        print(\\\"NO\\\")        \\n\", \"from math import ceil\\n\\n\\ntest = int(input())\\nfor z in range(test):\\n    day, work = list(map(int, input().split()))\\n    l = -1\\n    r = day\\n    while r - l > 1:\\n        m = (l + r) // 2\\n        new_work = ceil(work / (m + 1))\\n        if (new_work + m <= day):\\n            r = m\\n        else:\\n            l = m\\n\\n    if (r + ceil(work / (r + 1)) <= day):\\n        print('YES')\\n    else:\\n        print('NO')\\n\", \"import math\\n\\nfor i in range(int(input())):\\n    res = 'NO'\\n    n,d = list(map(int, input().split()))\\n\\n    for x in range(0,100000):\\n        nd = x+math.ceil(d/(x+1))\\n        if nd <= n:\\n            res='YES'\\n    print(res)\\n\", \"from math import sqrt\\n\\nT = int(input())\\nfor _ in range(T):\\n    n, d = list(map(int, input().split()))\\n    x = max(int(sqrt(d)) - 1, 0)\\n    if x + (d+x) // (x+1) <= n:\\n        print('YES')\\n    else:\\n        print('NO')\\n\", \"t = int(input())\\n\\nfor _ in range(t):\\n    n, d = map(int, input().split())\\n    u, v = max(0, int(d ** 0.5 - 1000)), min(n, int(d ** 0.5 + 1000))\\n    for i in range(u, v + 1):\\n        if i + d // (i + 1) + int(bool(d % (i + 1))) <= n:\\n            print('YES')\\n            break\\n    else:\\n        print('NO')\", \"import math\\nt=int(input())\\nfor _ in range(t):\\n    n,d=(map(int,input().split()))\\n    if d<=n:\\n        print(\\\"YES\\\")\\n    else:\\n        flag=0\\n        for i in range(1,min(d,n)):\\n            if (i+math.ceil(d/(i+1)))<=n:\\n                print(\\\"YES\\\")\\n                flag=1\\n                break\\n        if flag==0:                    \\n            print(\\\"NO\\\")\", \"import math\\nimport sys\\ndef listinput(): return list(map(int,input().split(' ')))\\n\\ndef main():\\n    answer = \\\"\\\"\\n    for test in range(int(input())):\\n        n,d = listinput()\\n        x = 0\\n        broken = False\\n        while x*x <= d:\\n            if x+(d+x)//(x+1) <= n:\\n                answer += \\\"YES \\\\n\\\"\\n                broken = True\\n                break\\n            x+=1\\n        if not broken:\\n            answer += \\\"NO \\\\n\\\"\\n    print(answer)\\n\\nmain()\\n    \\n\", \"from math import ceil\\nt=int(input())\\nfor _ in range(t):\\n    n,d=map(int,input().split())\\n    x=int(ceil(d**0.5))\\n    if d<=n:\\n        print(\\\"YES\\\")\\n        continue\\n    flag=0\\n    for i in range(1,x+1):\\n        if i+int(ceil(d/(i+1)))<=n:\\n            print(\\\"YES\\\")\\n            flag=1\\n            break\\n    if flag==0:\\n        print(\\\"NO\\\")\", \"# -*- coding: utf-8 -*-\\n\\nimport math\\nimport collections\\nimport bisect\\nimport heapq\\nimport time\\nimport random\\nimport itertools\\nimport sys\\nfrom typing import List\\n\\n\\\"\\\"\\\"\\ncreated by shhuan at 2020/1/14 22:37\\n\\n\\\"\\\"\\\"\\n\\n\\ndef solve(N, D):\\n    X = int(math.sqrt(D))\\n\\n    for x in range(max(0, X-10), min(N, X+10) + 1):\\n        if x + int(math.ceil(D / (x + 1))) <= N:\\n            return True\\n    return False\\n\\n\\nT = int(input())\\nans = []\\nfor ti in range(T):\\n    N, D = map(int, input().split())\\n    ans.append(solve(N, D))\\n\\nprint('\\\\n'.join(['YES' if v else 'NO' for v in ans]))\", \"import math\\nfor _ in range(int(input())):\\n    n,d=list(map(int,input().split()))\\n    flag=False\\n    for i in range(n):\\n        if i+int(math.ceil(d/(i+1)))<=n:\\n            flag=True\\n            break\\n    if flag:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\n        \\n\", \"q = int(input())\\nfor ew in range(q):\\n\\tn,d = map(int,input().split())\\n\\t#x + d/(x+1) <= n\\n\\tx = 0\\n\\twhile (x+10)**2 <= d:\\n\\t\\tx += 1\\n\\tdup = 1\\n\\tfor i in range(100):\\n\\t\\tif (x+i) + (d+x+i)//(x+1+i) <= n:\\n\\t\\t\\tprint(\\\"YES\\\")\\n\\t\\t\\tdup = 0\\n\\t\\t\\tbreak\\n\\tif dup:\\n\\t\\tprint(\\\"NO\\\")\", \"import math\\nt=int(input())\\nfor i in range(t):\\n  n,d=map(int,input().split())\\n  flag=0\\n  for j in range(int(d**(0.5))+1):\\n    if math.ceil(d/(j+1)+j)<=n:print(\\\"YES\\\");flag=1;break\\n  if not flag:print(\\\"NO\\\")\", \"from math import *\\nfrom collections import *\\nimport sys\\nsys.setrecursionlimit(10**9)\\nt = int(input())\\nfor y in range(t):\\n\\td,n = list(map(int,input().split()))\\n\\tx = int(sqrt(n))\\n\\tans = x-1 + ceil(n/x)\\n\\t#print(ans)\\n\\tif(ans > d): print(\\\"NO\\\")\\n\\telse: print(\\\"YES\\\")\\n\", \"from math import ceil\\nt = int(input())\\nfor i in range(t):\\n    n, d = map(int, input().split())\\n    for x in range (0, n):\\n        if x + ceil(d/(x+1)) <= n:\\n            print(\\\"YES\\\")\\n            break\\n    else:\\n        print(\\\"NO\\\")\", \"from math import *\\nT = int(input())\\nfor kase in range(T):\\n    n, d = [int(x) for x in input().split()]\\n    m = ceil(sqrt(d))\\n    l, r = m-10, m+10\\n    l = max(0,l)\\n    ans = 1e100\\n    for x in range(l,r):\\n        ans = min(ans , x + ceil(d/(x+1)) )\\n    if ans<=n:\\n        print('YES')\\n    else:\\n        print('NO')\", \"#!usr/bin/env python3\\nfrom collections import defaultdict,deque\\nfrom heapq import heappush, heappop\\nfrom itertools import permutations\\nimport sys\\nimport math\\nimport bisect\\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\\ndef I(): return int(sys.stdin.readline())\\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\\ndef S():\\n    res = list(sys.stdin.readline())\\n    if res[-1] == \\\"\\\\n\\\":\\n        return res[:-1]\\n    return res\\ndef IR(n):\\n    return [I() for i in range(n)]\\ndef LIR(n):\\n    return [LI() for i in range(n)]\\ndef SR(n):\\n    return [S() for i in range(n)]\\ndef LSR(n):\\n    return [LS() for i in range(n)]\\n\\nsys.setrecursionlimit(1000000)\\nmod = 1000000007\\n\\ndef solve():\\n    t = I()\\n    for i in range(t):\\n        n,d = LI()\\n        for x in range(40000):\\n            if x+math.ceil(d/(x+1)) <= n:\\n                print(\\\"YES\\\")\\n                break\\n        else:\\n            print(\\\"NO\\\")\\n    return\\n\\n#Solve\\ndef __starting_point():\\n    solve()\\n\\n__starting_point()\", \"import math\\nt=int(input())\\nfor _ in range(t):\\n    n,d=map(int,input().split())\\n    tf=True\\n    for x in range(n+1):\\n        if x+math.ceil(d/(x+1))<=n:\\n            print(\\\"YES\\\")\\n            tf=False\\n            break\\n    if tf:\\n        print(\\\"NO\\\")\", \"import math\\n\\n\\ndef inp(dtype=str, strip=True):\\n    s = input()\\n    res = [dtype(p) for p in s.split()]\\n    res = res[0] if len(res) == 1 and strip else res\\n    return res\\n\\n\\ndef problem1():\\n    t = inp(int)\\n    for _ in range(t):\\n        n, d = inp(int)\\n        res = False\\n        sq = math.floor(math.sqrt(d))\\n        for x in range(max(sq - 1000, 0), min(sq + 1000, n)):\\n            if x + math.ceil(d / (x + 1)) <= n:\\n                res = True\\n                break\\n        if res:\\n            print('YES')\\n        else:\\n            print('NO')\\n\\n\\ndef problem2():\\n    pass\\n\\n\\ndef problem3():\\n    pass\\n\\n\\ndef problem4():\\n    pass\\n\\n\\ndef problem5():\\n    pass\\n\\n\\ndef problem6():\\n    pass\\n\\n\\ndef __starting_point():\\n    # problem6()\\n    # problem5()\\n    # problem4()\\n    # problem3()\\n    # problem2()\\n    problem1()\\n\\n__starting_point()\", \"from math import ceil\\n\\nimport sys\\nreader = (s.rstrip() for s in sys.stdin)\\ninput = reader.__next__\\n\\n\\ndef solve():\\n    n,d = list(map(int, input().split()))\\n    ans = False\\n    if d <= n:\\n        ans = True\\n    for i in range(-20, 21):\\n        x = (n-1)//2+i\\n        if x>0:\\n            if x + ceil(d/(x+1)) <= n:\\n                ans = True\\n    if ans:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\n\\nt = int(input())\\nfor i in range(t):\\n    solve()\\n\", \"import math\\nfor _ in range(int(input())):\\n    n,d=map(int,input().split())\\n    if n>=d:\\n        print(\\\"YES\\\")\\n    else:\\n        flag=0\\n        for i in range(1,int(d**0.5)+2,1):\\n            if i+math.ceil(d/(i+1))<=n:\\n                flag=1\\n                break\\n        if flag==1:\\n            print(\\\"YES\\\")\\n        else:\\n            print(\\\"NO\\\")\", \"from math import *\\n\\ndef bsearch(d, n):\\n    low = 0\\n    high = n\\n    while low <= high:\\n        mid = low + (high - low) // 2\\n        val = mid + int(ceil(d / (mid + 1)))\\n        if val > n:\\n            high = mid - 1\\n        else:\\n            return True\\n    return False\\n\\ndef __starting_point():\\n    for _ in range(int(input())):\\n        n, d = list(map(int, input().split()))\\n        if bsearch(d, n):\\n            print(\\\"YES\\\")\\n        else:\\n            print(\\\"NO\\\")\\n__starting_point()\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n1 1\\n4 5\\n5 11\\n\",\n    \"50\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 1\\n3 2\\n3 3\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 1\\n4 2\\n4 3\\n4 4\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n\",\n    \"3\\n99999999 1000000000\\n99999999 1000000000\\n99999999 1000000000\\n\",\n    \"50\\n17 81\\n19 100\\n23 144\\n25 169\\n29 225\\n31 256\\n32 271\\n32 272\\n33 289\\n35 324\\n37 361\\n39 400\\n41 441\\n43 484\\n46 551\\n47 576\\n49 625\\n50 649\\n50 650\\n51 676\\n53 729\\n55 784\\n57 841\\n59 900\\n65 1089\\n67 1156\\n68 1189\\n68 1190\\n69 1225\\n70 1259\\n70 1260\\n71 1296\\n73 1369\\n77 1521\\n79 1600\\n83 1764\\n85 1849\\n86 1891\\n86 1892\\n87 1936\\n89 2025\\n91 2116\\n95 2304\\n97 2401\\n98 2449\\n98 2450\\n99 2500\\n100 2549\\n100 2550\\n101 2601\\n\",\n    \"1\\n1000000000 99000000\\n\",\n    \"1\\n99999999 1000000000\\n\",\n    \"1\\n1000000000 1000000\\n\",\n    \"1\\n1000000000 1000000000\\n\",\n    \"17\\n3 4\\n1 1\\n2 2\\n3 3\\n9 3\\n1 4\\n2 3\\n4 6\\n1 4\\n2 7\\n100 10123\\n9999 99999\\n9998 100000\\n9992 91239129\\n12938192 19238999\\n12313 9283198\\n999999 9999999\\n\",\n    \"5\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000\\n\",\n    \"1\\n545454545 555555555\\n\",\n    \"1\\n50115 50111\\n\",\n    \"1\\n801979795 315634015\\n\",\n    \"3\\n43 483\\n43 484\\n43 485\\n\",\n    \"1\\n999999999 1000000000\\n\",\n    \"1\\n100000000 100000000\\n\",\n    \"1\\n1000000000 1\\n\",\n    \"1\\n653333972 862934075\\n\",\n    \"1\\n1907 910084\\n\",\n    \"1\\n7 16\\n\",\n    \"1\\n100000000 1000000000\\n\",\n    \"1\\n250000 19000\\n\",\n    \"1\\n47662 567940046\\n\",\n    \"1\\n56340 56342\\n\",\n    \"1\\n1234567 7654321\\n\",\n    \"1\\n63243 999950885\\n\",\n    \"1\\n982472549 982472587\\n\",\n    \"1\\n999999 1000000000\\n\",\n    \"1\\n999999998 999999999\\n\",\n    \"3\\n56340 56342\\n96340 96342\\n96340 96343\\n\",\n    \"2\\n63242 999919263\\n63242 999919264\\n\",\n    \"1\\n300000 35345646\\n\",\n    \"1\\n1000000000 983454334\\n\",\n    \"1\\n23 144\\n\",\n    \"1\\n17 81\\n\",\n    \"1\\n1000001 1000000\\n\",\n    \"1\\n999999 1000000\\n\",\n    \"10\\n1000000000 10000000\\n1000000000 19999\\n1000000000 29999\\n1000000000 28384\\n1000000000 37\\n1000000000 1000000000\\n1000000000 183774\\n1000000000 3883742\\n1000000000 38481\\n1000000000 2388\\n\",\n    \"1\\n1000000 1000000\\n\",\n    \"1\\n1000000 1000000000\\n\",\n    \"4\\n28226572 19809567\\n56620995 52937411\\n60365616 79073464\\n7998903 73021643\\n\",\n    \"50\\n1000000000 1000000000\\n999999999 1000000000\\n999999998 1000000000\\n999999997 1000000000\\n999999996 1000000000\\n999999995 1000000000\\n999999994 1000000000\\n999999900 1000000000\\n1 11\\n2 11\\n3 11\\n4 11\\n5 11\\n6 11\\n7 11\\n8 11\\n9 11\\n10 11\\n11 11\\n4 18\\n4 20\\n3 19\\n3 18\\n3 167\\n3 15\\n3 14\\n3 13\\n3 12\\n3 11\\n3 11\\n40 10\\n4 2123\\n41 30\\n14 8\\n400 500\\n40 60\\n40 70\\n10 40\\n10 30\\n10 20\\n120 366\\n120 361\\n120 360\\n120 241\\n120 240\\n5 6\\n1 7\\n11 8\\n50 20\\n5 100\\n\",\n    \"1\\n63243 999950886\\n\",\n    \"1\\n998244353 999999998\\n\",\n    \"5\\n998244353 999999998\\n998244353 999999999\\n998244353 999999978\\n998244353 999999798\\n998244353 999999979\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\nYES\\nNO\\n\",\n    \"YES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\n\",\n    \"YES\\nYES\\nYES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\nYES\\nNO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\nYES\\nYES\\n\",\n    \"NO\\nNO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nNO\\nYES\\nYES\\nNO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1288/A",
  "starter_code": ""
}