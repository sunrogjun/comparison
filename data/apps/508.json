{
  "task_id": "APPS/508",
  "problem_id": 508,
  "prompt": "On one quiet day all of sudden Mister B decided to draw angle a on his field. Aliens have already visited his field and left many different geometric figures on it. One of the figures is regular convex n-gon (regular convex polygon with n sides).\n\nThat's why Mister B decided to use this polygon. Now Mister B must find three distinct vertices v_1, v_2, v_3 such that the angle $\\angle v_{1} v_{2} v_{3}$ (where v_2 is the vertex of the angle, and v_1 and v_3 lie on its sides) is as close as possible to a. In other words, the value $|\\angle v_{1} v_{2} v_{3} - a|$ should be minimum possible.\n\nIf there are many optimal solutions, Mister B should be satisfied with any of them.\n\n\n-----Input-----\n\nFirst and only line contains two space-separated integers n and a (3 \u2264 n \u2264 10^5, 1 \u2264 a \u2264 180)\u00a0\u2014 the number of vertices in the polygon and the needed angle, in degrees.\n\n\n-----Output-----\n\nPrint three space-separated integers: the vertices v_1, v_2, v_3, which form $\\angle v_{1} v_{2} v_{3}$. If there are multiple optimal solutions, print any of them. The vertices are numbered from 1 to n in clockwise order.\n\n\n-----Examples-----\nInput\n3 15\n\nOutput\n1 2 3\n\nInput\n4 67\n\nOutput\n2 1 3\n\nInput\n4 68\n\nOutput\n4 1 2\n\n\n\n-----Note-----\n\nIn first sample test vertices of regular triangle can create only angle of 60 degrees, that's why every possible angle is correct.\n\nVertices of square can create 45 or 90 degrees angles only. That's why in second sample test the angle of 45 degrees was chosen, since |45 - 67| < |90 - 67|. Other correct answers are: \"3 1 2\", \"3 2 4\", \"4 2 3\", \"4 3 1\", \"1 3 4\", \"1 4 2\", \"2 4 1\", \"4 1 3\", \"3 1 4\", \"3 4 2\", \"2 4 3\", \"2 3 1\", \"1 3 2\", \"1 2 4\", \"4 2 1\".\n\nIn third sample test, on the contrary, the angle of 90 degrees was chosen, since |90 - 68| < |45 - 68|. Other correct answers are: \"2 1 4\", \"3 2 1\", \"1 2 3\", \"4 3 2\", \"2 3 4\", \"1 4 3\", \"3 4 1\".",
  "solutions": "[\"3\\n\\ndef read_ints():\\n\\treturn [int(i) for i in input().split()]\\n\\nn, a = read_ints()\\n\\nres = 1\\n\\nfor i in range(2, n - 1):\\n\\tif abs(a - res * 180 / n) > abs(a - i * 180 / n):\\n\\t\\tres = i\\n\\nprint(2, 1, res + 2)\", \"def ri(): return int(input())\\ndef rli(): return list(map(int, input().split()))\\ndef rls(): return list(input())\\ndef pli(a): return \\\"\\\".join(list(map(str, a)))\\n\\n\\nn, a = rli()\\nminang = 180/n\\nv1 = 2\\nv2 = 1\\nminerr = 114514810\\nv3 = 0\\nfor i in range(3, n+1):\\n    if(minerr > abs(a-minang*(i-2))):\\n        v3 = i\\n        minerr = abs(a-minang*(i-2))\\n\\nprint(v1, v2, v3)\", \"I = lambda : map(int, input().split())\\nn, a = I()\\n\\nexp = 999999999999\\nans = 0\\n\\nfor i in range(1, n-1):\\n    newexp = abs((i*180.0)/(n*1.0) - a)\\n    if newexp < exp:\\n        ans = i\\n        exp = newexp\\n\\nprint(2, 1, 2+ans)\", \"n, a = list(map(int,input().split()))\\nS = (n-2)*180\\nv1=2\\nv2=1\\nv3=0\\nk=2\\nu=0\\nmi=180\\nfor i in range(2, n):\\n    k+=1\\n    u=((k-2)*(180-(n-2)*180/n))/2\\n    if abs(a-u)<mi:\\n        mi=abs(a-u)\\n        v3=i+1\\nprint(v1,v2,v3)\\n\", \"string = input()\\nnumbers = string.split(\\\" \\\")\\nn = int(numbers[0])\\na = int(numbers[1])\\nangle = (n - 2) * 180 / n\\nangles = []\\nfor x in range(1, n - 1):\\n    y = angle / (n - 2) * x\\n    angles.append(abs(y - a))\\nx = angles.index(min(angles)) + 3\\nprint(\\\"%d 1 2\\\" % (x))\", \"import math\\nfrom decimal import *\\nn,a = map(int, input().split())\\nd = Decimal(180 / n)\\nres = Decimal(181)\\nfor i in range(1, n-1):\\n    min = abs(Decimal(a - d*i))\\n    if min < res:\\n        res = min\\n        k = i + 2\\nprint(\\\"2 1 \\\", k, sep = '')\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3 15\\n\",\n    \"4 67\\n\",\n    \"4 68\\n\",\n    \"3 1\\n\",\n    \"3 180\\n\",\n    \"100000 1\\n\",\n    \"100000 180\\n\",\n    \"100000 42\\n\",\n    \"100000 123\\n\",\n    \"5 1\\n\",\n    \"5 36\\n\",\n    \"5 54\\n\",\n    \"5 55\\n\",\n    \"5 70\\n\",\n    \"5 89\\n\",\n    \"5 90\\n\",\n    \"5 91\\n\",\n    \"5 111\\n\",\n    \"5 126\\n\",\n    \"5 127\\n\",\n    \"5 141\\n\",\n    \"5 162\\n\",\n    \"5 180\\n\",\n    \"6 46\\n\",\n    \"6 33\\n\",\n    \"13 4\\n\",\n    \"23 11\\n\",\n    \"11 119\\n\",\n    \"13 117\\n\",\n    \"18 174\\n\",\n    \"8509 139\\n\",\n    \"29770 76\\n\",\n    \"59115 40\\n\",\n    \"68459 88\\n\",\n    \"85100 129\\n\",\n    \"100000 13\\n\",\n    \"100000 35\\n\",\n    \"100000 49\\n\",\n    \"100000 71\\n\",\n    \"100000 79\\n\",\n    \"100000 101\\n\",\n    \"100000 109\\n\",\n    \"100000 143\\n\",\n    \"100000 148\\n\",\n    \"100000 176\\n\",\n    \"4 16\\n\"\n  ],\n  \"outputs\": [\n    \"2 1 3\\n\",\n    \"2 1 3\\n\",\n    \"2 1 4\\n\",\n    \"2 1 3\\n\",\n    \"2 1 3\\n\",\n    \"2 1 558\\n\",\n    \"2 1 100000\\n\",\n    \"2 1 23335\\n\",\n    \"2 1 68335\\n\",\n    \"2 1 3\\n\",\n    \"2 1 3\\n\",\n    \"2 1 3\\n\",\n    \"2 1 4\\n\",\n    \"2 1 4\\n\",\n    \"2 1 4\\n\",\n    \"2 1 4\\n\",\n    \"2 1 5\\n\",\n    \"2 1 5\\n\",\n    \"2 1 5\\n\",\n    \"2 1 5\\n\",\n    \"2 1 5\\n\",\n    \"2 1 5\\n\",\n    \"2 1 5\\n\",\n    \"2 1 4\\n\",\n    \"2 1 3\\n\",\n    \"2 1 3\\n\",\n    \"2 1 3\\n\",\n    \"2 1 9\\n\",\n    \"2 1 10\\n\",\n    \"2 1 18\\n\",\n    \"2 1 6573\\n\",\n    \"2 1 12572\\n\",\n    \"2 1 13139\\n\",\n    \"2 1 33471\\n\",\n    \"2 1 60990\\n\",\n    \"2 1 7224\\n\",\n    \"2 1 19446\\n\",\n    \"2 1 27224\\n\",\n    \"2 1 39446\\n\",\n    \"2 1 43891\\n\",\n    \"2 1 56113\\n\",\n    \"2 1 60558\\n\",\n    \"2 1 79446\\n\",\n    \"2 1 82224\\n\",\n    \"2 1 97780\\n\",\n    \"2 1 3\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/820/B",
  "starter_code": ""
}