{
  "task_id": "APPS/526",
  "problem_id": 526,
  "prompt": "Student Dima from Kremland has a matrix $a$ of size $n \\times m$ filled with non-negative integers.\n\nHe wants to select exactly one integer from each row of the matrix so that the bitwise exclusive OR of the selected integers is strictly greater than zero. Help him!\n\nFormally, he wants to choose an integers sequence $c_1, c_2, \\ldots, c_n$ ($1 \\leq c_j \\leq m$) so that the inequality $a_{1, c_1} \\oplus a_{2, c_2} \\oplus \\ldots \\oplus a_{n, c_n} > 0$ holds, where $a_{i, j}$ is the matrix element from the $i$-th row and the $j$-th column.\n\nHere $x \\oplus y$ denotes the bitwise XOR operation of integers $x$ and $y$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\leq n, m \\leq 500$)\u00a0\u2014 the number of rows and the number of columns in the matrix $a$.\n\nEach of the next $n$ lines contains $m$ integers: the $j$-th integer in the $i$-th line is the $j$-th element of the $i$-th row of the matrix $a$, i.e. $a_{i, j}$ ($0 \\leq a_{i, j} \\leq 1023$). \n\n\n-----Output-----\n\nIf there is no way to choose one integer from each row so that their bitwise exclusive OR is strictly greater than zero, print \"NIE\".\n\nOtherwise print \"TAK\" in the first line, in the next line print $n$ integers $c_1, c_2, \\ldots c_n$ ($1 \\leq c_j \\leq m$), so that the inequality $a_{1, c_1} \\oplus a_{2, c_2} \\oplus \\ldots \\oplus a_{n, c_n} > 0$ holds. \n\nIf there is more than one possible answer, you may output any.\n\n\n-----Examples-----\nInput\n3 2\n0 0\n0 0\n0 0\n\nOutput\nNIE\n\nInput\n2 3\n7 7 7\n7 7 10\n\nOutput\nTAK\n1 3 \n\n\n\n-----Note-----\n\nIn the first example, all the numbers in the matrix are $0$, so it is impossible to select one number in each row of the table so that their bitwise exclusive OR is strictly greater than zero.\n\nIn the second example, the selected numbers are $7$ (the first number in the first line) and $10$ (the third number in the second line), $7 \\oplus 10 = 13$, $13$ is more than $0$, so the answer is found.",
  "solutions": "[\"n, m = [int(i) for i in input().split()]\\nA = []\\nC = []\\nfor i in range(n):\\n    B = [int(j) for j in input().split()]\\n    A.append(B)\\n    C.append(sorted(list(set(B))))\\n\\nxor = 0\\nans = []\\n\\nfor i in range(n):\\n    xor ^= A[i][0]\\n    ans.append(1)\\n\\nif xor==0:\\n    found = 0\\n    for trial in range(n-1, -1, -1):\\n        newxor = xor^A[trial][0]\\n        if found==1:\\n            break\\n        for j in range(m):\\n            if A[trial][j]^newxor!=0:\\n                ans[trial] = j+1\\n                found = 1\\n                break\\n        if found==1:\\n            break\\n    if found:\\n        print('TAK')\\n        print(*ans)\\n    else:\\n        print('NIE')\\nelse:\\n    print('TAK')\\n    print(*ans)\\n\", \"N, M = list(map(int, input().split()))\\nX = [[int(a) for a in input().split()] for i in range(N)]\\ni0, j0 = -1, -1\\nfor i in range(N):\\n    for j in range(M-1):\\n        if X[i][j] != X[i][j+1]:\\n            i0, j0 = i, j+1\\n            break\\n    if i0 >= 0:\\n        break\\n\\ns = 0\\nfor i in range(N):\\n    s ^= X[i][0]\\nif s > 0:\\n    print(\\\"TAK\\\")\\n    print(*([1]*N))\\nelif i0 >= 0:\\n    print(\\\"TAK\\\")\\n    print(*([1]*i0+[j0+1]+[1]*(N-i0-1)))\\nelse:\\n    print(\\\"NIE\\\")\\n\", \"import sys\\nn,m = list(map(int,input().split()))\\n\\ndef xor(A):\\n    x = 0\\n    for a in A: x ^= a\\n    return x\\n\\nA = [[int(x) for x in input().split()] for _ in range(n)]\\n\\nI = [0]*n\\n\\nref = A[0][0]\\nif xor(A[i][0] for i in range(n)):\\n    print('TAK')\\n    print(*[i+1 for i in I])\\n    return\\nelse:\\n    for i in range(n):\\n        for j in range(m):\\n            if A[i][0] != A[i][j]:\\n                I[i] = j\\n                print('TAK')\\n                print(*[i+1 for i in I])\\n                return\\nprint('NIE')\\n    \\n\", \"def groupxor(l):\\n\\tresult = 0\\n\\tfor item in l:\\n\\t\\tresult = result ^ item\\n\\treturn result\\n\\nr,c = [int(x) for x in input().split()]\\nrows = []\\nfor _ in range(r):\\n\\trows.append([int(x) for x in input().split()])\\nstarts = [rows[j][0] for j in range(r)]\\nresult = [1] * r\\nif groupxor(starts) == 0:\\n\\tnotfixed = True\\n\\tfor j in range(r):\\n\\t\\tfor k in range(1,c):\\n\\t\\t\\tif notfixed:\\n\\t\\t\\t\\tif rows[j][0] != rows[j][k]:\\n\\t\\t\\t\\t\\tnotfixed = False\\n\\t\\t\\t\\t\\tresult[j] = k+1\\n\\tif notfixed == True:\\n\\t\\tprint('NIE')\\n\\telse:\\n\\t\\tprint('TAK')\\n\\t\\tprint(' '.join([str(x) for x in result]))\\nelse:\\n\\tprint('TAK')\\n\\tprint(' '.join([str(x) for x in result]))\", \"import sys\\n\\nn, m = map(int, input().split())\\n\\nM = []\\n\\nfor i in range(n):\\n\\tM.append(list(map(int, input().split())))\\n\\nresult = 0\\nfor i in range(n):\\n\\tresult = result ^ M[i][0]\\n\\nif result > 0:\\n\\tprint('TAK')\\n\\tprint(*[1 for _ in range(n)])\\n\\treturn\\n\\nis_solution_exist = False\\nrow = None\\ncol = None\\n\\nfor i in range(n):\\n\\n\\tfor j in range(m):\\n\\n\\t\\tif M[i][j] != M[i][0]:\\n\\t\\t\\tis_solution_exist = True\\n\\t\\t\\trow = i\\n\\t\\t\\tcol = j\\n\\t\\t\\tbreak\\n\\n\\tif is_solution_exist:\\n\\t\\tbreak\\n\\nif is_solution_exist:\\n\\tprint('TAK')\\n\\tresult = [1 for _ in range(n)]\\n\\tresult[row] = col + 1\\n\\tprint(*result)\\nelse:\\n\\tprint('NIE')\", \"from collections import defaultdict as dd\\nimport math\\ndef nn():\\n\\treturn int(input())\\n\\ndef li():\\n\\treturn list(input())\\n\\ndef mi():\\n\\treturn list(map(int, input().split()))\\n\\ndef lm():\\n\\treturn list(map(int, input().split()))\\n\\n\\nn,m=mi()\\n\\nmatrix=[]\\n\\nfor i in range(n):\\n\\tmatrix.append(lm())\\ndone=0\\ngood=-1\\nfor i in range(n):\\n\\tval=matrix[i][0]\\n\\tfor j in range(m):\\n\\t\\tif not matrix[i][j]==val:\\n\\t\\t\\tgood=(i,j)\\n\\t\\t\\tdone=1\\n\\t\\t\\tbreak\\n\\tif done==1:\\n\\t\\tbreak\\nstart=0\\nif good==-1:\\n\\tfor i in range(n):\\n\\t\\tstart=start^matrix[i][0]\\n\\n\\tif start==0:\\n\\t\\tprint('NIE')\\n\\n\\telse:\\n\\t\\tprint(\\\"TAK\\\")\\n\\t\\tout=['1']*n\\n\\t\\tprint(*out)\\n\\n\\nelse:\\n\\tanswers=[]\\n\\tfor i in range(n):\\n\\t\\tstart=start^matrix[i][0]\\n\\n\\t\\n\\tif not start==0:\\n\\t\\tprint(\\\"TAK\\\")\\n\\t\\tout=['1']*n\\n\\t\\tprint(*out)\\n\\n\\n\\telse:\\n\\n\\t\\t\\n\\t\\textra=0\\n\\n\\t\\tfor i in range(n):\\n\\t\\t\\tif not i==good[0]:\\n\\t\\t\\t\\textra=extra^matrix[i][0]\\n\\t\\t\\t\\tanswers.append('1')\\n\\t\\t\\telse:\\n\\t\\t\\t\\textra=extra^matrix[i][good[1]]\\n\\t\\t\\t\\tanswers.append(str(good[1]+1))\\n\\n\\n\\n\\t\\tprint('TAK')\\n\\t\\tprint(*answers)\\n\\t\\n\\t\\t\\t\\t\\n\", \"def in_int():\\n    return int(input())\\ndef in_list():\\n    return [int(x) for x in input().split()]\\n\\nn,m=in_list()\\nmat=[]\\nfirst=-1\\nfor i in range(n):\\n    mat.append(in_list())\\n    if first==-1:\\n        for j in range(m-1):\\n            if mat[-1][j]!=mat[-1][j+1]:\\n                first=(i,j)\\n                break\\nif first==-1:\\n    ans=0\\n    for i in range(n):\\n        ans=ans^mat[i][0]\\n    if ans>0:\\n        print('TAK')\\n        print(' '.join(['1']*n))\\n    else:\\n        print('NIE')\\nelse:\\n    r,c=first\\n    print('TAK')\\n    ans=0\\n    for i in range(n):\\n        if i !=r:\\n            ans=ans^mat[i][0]\\n        else:\\n            ans=ans^mat[i][c]\\n    if ans>0:\\n        for i in range(n):\\n            if i !=r:\\n                print(0+1,end=' ')\\n            else:\\n                print(c+1,end=' ')\\n    else:\\n        for i in range(n):\\n            if i !=r:\\n                print(0+1,end=' ')\\n            else:\\n                print(c+2,end=' ')\\n\\n\\n\\n\", \"import sys\\nsys.setrecursionlimit(20000000)\\ninput = sys.stdin.readline\\nn,m = map(int,input().split())\\na = [list(map(int,input().split())) for i in range(n)]\\nans = [1]*n\\nres = 0\\nfor i in range(n):\\n    res ^= a[i][0]\\nif res != 0:\\n    print(\\\"TAK\\\")\\n    print(*ans)\\n    return\\n\\nfor i in range(n):\\n    res ^=a[i][0]\\n    for j in range(m):\\n        res ^=a[i][j]\\n        if res != 0:\\n            ans[i] = j+1\\n            print(\\\"TAK\\\")\\n            print(*ans)\\n            return\\n        res ^=a[i][j]\\n    res ^= a[i][0]\\nprint(\\\"NIE\\\")\", \"n, m = [int(i) for i in input().split()]\\na = [[int(i) for i in input().split()] for _ in range(n)]\\n\\n\\ndef test(a, n ,m):\\n    for i in range(n):\\n        _or, _and = a[i][0], a[i][0]\\n        for j in range(m):\\n            _or |= a[i][j]\\n            _and &= a[i][j]\\n        if _or != _and:\\n            return i\\n    return -1\\n\\nt = test(a, n, m)\\nif t == -1:\\n    _xor = 0\\n    for i in range(n):\\n        _xor ^= a[i][0]\\n    if _xor > 0:\\n        print('TAK')\\n        print(' '.join('1' for _ in range(n)))\\n        return\\nelse:\\n    _xor = 0\\n    for i in range(n):\\n        if i == t:\\n            continue\\n        _xor ^= a[i][0]\\n    for j in range(m):\\n        if _xor ^ a[t][j] > 0:\\n            print('TAK')\\n            print(' '.join(['1' if k != t else str(j + 1) for k in range(n)]))\\n            return\\nprint('NIE')\\n\", \"import sys\\ninput = sys.stdin.readline\\n\\nn,m=list(map(int,input().split()))\\nA=[list(map(int,input().split())) for i in range(n)]\\n\\nfor b in range(10):\\n    RB=[0]*n\\n    for j in range(n):\\n        SCORE=[]\\n        for k in range(m):\\n            if A[j][k] & (1<<b)==0:\\n                SCORE.append(0)\\n            else:\\n                SCORE.append(1)\\n\\n        SCORE=sorted(set(SCORE))\\n\\n        if len(SCORE)==2:\\n            print(\\\"TAK\\\")\\n            ANS=[1]*n\\n            XOR=0\\n            for k in range(n):\\n                if j==k:\\n                    continue\\n                XOR^=(A[k][0] & (1<<b))\\n\\n            if XOR==0:\\n                for k in range(m):\\n                    if A[j][k] & (1<<b)!=0:\\n                        ANS[j]=k+1\\n                        print(*ANS)\\n                        return\\n\\n            else:\\n                for k in range(m):\\n                    if A[j][k] & (1<<b)==0:\\n                        ANS[j]=k+1\\n                        print(*ANS)\\n                        return\\n\\n        elif len(SCORE)==1:\\n            RB[j]=SCORE[0]\\n\\n    XOR=0\\n    for i in range(n):\\n        XOR^=RB[i]\\n\\n    if XOR==0:\\n        continue\\n    else:\\n        print(\\\"TAK\\\")\\n        print(*[1]*n)\\n        return\\n\\nelse:\\n    print(\\\"NIE\\\")\\n                \\n            \\n            \\n\", \"n,m = list(map(int,input().split()))\\nmat = [list(map(int,input().split())) for _ in range(n)]\\n\\n# xr = 0\\n# for l in mat:\\n#     for i in l:\\n#         xr ^= i\\n#\\n# if xr == 0:\\n#     print('NIE')\\n#     return\\n\\nres = []\\n\\nfor i in range(n):\\n    prev = -1\\n    for j in range(m):\\n        if prev == -1:\\n            prev = mat[i][j]\\n        elif prev != mat[i][j]:\\n            # mat[i][j - 1] \\u3068 mat[i][j]\\n            xr = 0\\n            for k in range(n):\\n                if k != i:\\n                    xr ^= mat[k][0]\\n            if xr ^ mat[i][j - 1] != 0:\\n                res = [1] * (i) + [j] + [1] * (n - i - 1)\\n            else:\\n                res = [1] * (i) + [j + 1] + [1] * (n - i - 1)\\n            print('TAK')#, mat[i][j - 1], mat[i][j], xr)\\n            print(*res)\\n            return\\n\\nxr = 0\\nfor i in range(n):\\n    xr ^= mat[i][0]\\n\\nif xr == 0:\\n    print('NIE')\\nelse:\\n    print('TAK')\\n    res = [1] * n\\n    print(*res)\\n\", \"n, m = [int(t) for t in input().split()]\\n\\ndef xor(arr):\\n    t = 0\\n    for a in arr:\\n        t = t^a\\n    return t\\n\\na = []\\nwin = False\\nj = 0\\nfor i in range(n):\\n    tmp = [int(t) for t in input().split()]\\n    if len(set(tmp)) > 1:\\n        win = True\\n        j = i\\n    a.append(tmp)\\nif not win:\\n    if xor([t[0] for t in a]) == 0:\\n        print('NIE')\\n    else:\\n        print('TAK')\\n        print(' '.join(['1']*n))\\nelse:\\n    print('TAK')\\n    if xor([t[0] for t in a]) != 0:\\n        print(' '.join(['1']*n))\\n    else:\\n        ans = ['1']*n\\n        k = 1\\n        while a[j][k] == a[j][0]:\\n            k += 1\\n        ans[j] = str(k + 1)\\n        print(' '.join(ans))\", \"n,m=tuple(map(int,input().strip().split()))\\nmat=[]\\nfor i in range(n):\\n    mmm=list(map(int,input().strip().split()))\\n    mat.append(mmm)\\nst=0\\nrnum=-1\\ncnum=-1\\nfor i in range(n):\\n    for ii in range(m-1):\\n        if(mat[i][ii]!=mat[i][ii+1]):\\n            st=1\\n            rnum=i\\n            cnum=ii\\n            break\\n    if(st==1):\\n        break\\nif((not st) or m==1):\\n    hh=0\\n    sr=\\\"\\\"\\n    for i in range(n):\\n        hh=hh^mat[i][0]\\n        sr=sr+str(1)+\\\" \\\"\\n    if(hh==0):\\n        print(\\\"NIE\\\")\\n    else:\\n        print(\\\"TAK\\\")\\n        print(sr)\\nelse:\\n    print(\\\"TAK\\\")\\n    sr=\\\"\\\"\\n    hh=0\\n    for i in range(0,n):\\n        if(i!=rnum):\\n            hh = hh ^ mat[i][0]\\n    if(hh^mat[rnum][cnum]==0):\\n        for i in range(0, n):\\n            if (i != rnum):\\n                sr=sr+str(1)+\\\" \\\"\\n            else:\\n                sr=sr+str(cnum+2)+\\\" \\\"\\n    else:\\n        for i in range(0, n):\\n            if (i != rnum):\\n                sr=sr+str(1)+\\\" \\\"\\n            else:\\n                sr=sr+str(cnum+1)+\\\" \\\"\\n    print(sr)\", \"m, n = list(map(int,input().split()))\\nmatrix = [list(map(int,input().split())) for i in range(m)]\\nc = 0\\nx, y = 0, 0\\ndupa  = 1\\nfor i in range(m):\\n\\tif dupa == 0:\\n\\t\\tbreak\\n\\tcur = matrix[i][0]\\n\\tfor j in range(n):\\n\\t\\tif matrix[i][j] != cur:\\n\\t\\t\\tx = i\\n\\t\\t\\ty = j\\n\\t\\t\\tprint(\\\"TAK\\\")\\n\\t\\t\\tc = 1\\n\\t\\t\\tdupa = 0\\n\\t\\t\\tbreak\\nimport sys\\nif c == 0:\\n\\tzor = 0\\n\\tfor i in range(m):\\n\\t\\tzor = (zor^matrix[i][0])\\n\\tif zor == 0:\\n\\t\\tprint(\\\"NIE\\\")\\n\\t\\treturn\\n\\telse:\\n\\t\\tprint(\\\"TAK\\\")\\n\\t\\tfor k in range(m):\\n\\t\\t\\tprint(1, end = \\\" \\\")\\n\\t\\treturn\\nelse:\\n\\tfor i in range(m):\\n\\t\\tif i != x:\\n\\t\\t\\tprint(1, end = \\\" \\\")\\n\\t\\telse:\\n\\t\\t\\ta = matrix[x][y]\\n\\t\\t\\tb = matrix[x][0]\\n\\t\\t\\tsor = 0\\n\\t\\t\\tfor g in range(m):\\n\\t\\t\\t\\tsor = (sor^matrix[g][0])\\n\\t\\t\\tif sor > 0:\\n\\t\\t\\t\\tprint(0+1, end = \\\" \\\")\\n\\t\\t\\telse:\\n\\t\\t\\t\\tprint(y + 1, end =  \\\" \\\")\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3 2\\n0 0\\n0 0\\n0 0\\n\",\n    \"2 3\\n7 7 7\\n7 7 10\\n\",\n    \"1 1\\n706\\n\",\n    \"1 1\\n0\\n\",\n    \"1 1\\n20\\n\",\n    \"1 2\\n0 682\\n\",\n    \"2 1\\n287\\n287\\n\",\n    \"2 1\\n287\\n341\\n\",\n    \"2 2\\n383 383\\n383 665\\n\",\n    \"2 2\\n383 383\\n383 383\\n\",\n    \"2 2\\n383 129\\n66 592\\n\",\n    \"1 249\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 67 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\",\n    \"1 249\\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\",\n    \"2 2\\n8 9\\n8 8\\n\",\n    \"4 3\\n1 1 1\\n2 2 2\\n4 3 3\\n7 7 7\\n\",\n    \"2 2\\n5 7\\n7 7\\n\",\n    \"3 2\\n0 1\\n1 0\\n0 0\\n\",\n    \"2 2\\n0 0\\n1 1\\n\",\n    \"3 3\\n1 2 3\\n1 2 3\\n0 0 0\\n\",\n    \"2 1\\n1\\n0\\n\",\n    \"2 3\\n1 7 7\\n7 7 7\\n\",\n    \"3 2\\n0 0\\n0 1\\n1 0\\n\",\n    \"2 2\\n0 1\\n0 0\\n\",\n    \"2 2\\n1 2\\n1 1\\n\",\n    \"2 1\\n0\\n1\\n\",\n    \"2 2\\n3 4\\n4 4\\n\",\n    \"3 2\\n1 4\\n2 2\\n3 3\\n\",\n    \"2 2\\n3 4\\n3 3\\n\",\n    \"2 2\\n7 9\\n5 7\\n\",\n    \"3 2\\n0 0\\n0 0\\n0 1\\n\",\n    \"2 2\\n1 10\\n2 10\\n\",\n    \"3 2\\n1 2\\n2 1\\n3 3\\n\",\n    \"4 3\\n3 3 3\\n3 3 3\\n1 2 2\\n1 1 1\\n\",\n    \"2 2\\n1 0\\n0 1\\n\",\n    \"2 2\\n7 1\\n7 7\\n\",\n    \"3 2\\n0 1\\n4 4\\n5 5\\n\",\n    \"3 2\\n4 5\\n4 4\\n1 1\\n\",\n    \"4 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n\",\n    \"3 3\\n0 0 0\\n1 0 0\\n1 0 0\\n\",\n    \"3 3\\n0 0 0\\n2 2 2\\n0 0 0\\n\",\n    \"2 2\\n2 1\\n2 1\\n\",\n    \"2 2\\n2 7\\n2 2\\n\",\n    \"3 3\\n7 7 7\\n7 7 7\\n1 1 1\\n\",\n    \"3 2\\n1 0\\n2 0\\n3 3\\n\",\n    \"4 2\\n2 2\\n2 2\\n4 8\\n8 8\\n\"\n  ],\n  \"outputs\": [\n    \"NIE\\n\",\n    \"TAK\\n1 3 \\n\",\n    \"TAK\\n1 \\n\",\n    \"NIE\\n\",\n    \"TAK\\n1 \\n\",\n    \"TAK\\n2 \\n\",\n    \"NIE\\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n1 2 \\n\",\n    \"NIE\\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n127 \\n\",\n    \"NIE\\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n1 1 2 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n1 1 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n2 1 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n1 1 1 \\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n2 1 1 \\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n1 1 2 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n2 1 1 \\n\",\n    \"TAK\\n1 1 2 1 \\n\",\n    \"TAK\\n1 1 \\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n1 1 1 \\n\",\n    \"TAK\\n1 1 1 \\n\",\n    \"TAK\\n2 1 1 1 \\n\",\n    \"TAK\\n1 2 1 \\n\",\n    \"TAK\\n1 1 1 \\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n2 1 \\n\",\n    \"TAK\\n1 1 1 \\n\",\n    \"TAK\\n2 1 1 \\n\",\n    \"TAK\\n1 1 1 1 \\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1151/B",
  "starter_code": ""
}