{
  "task_id": "APPS/67",
  "problem_id": 67,
  "prompt": "Nauuo is a girl who loves writing comments.\n\nOne day, she posted a comment on Codeforces, wondering whether she would get upvotes or downvotes.\n\nIt's known that there were $x$ persons who would upvote, $y$ persons who would downvote, and there were also another $z$ persons who would vote, but you don't know whether they would upvote or downvote. Note that each of the $x+y+z$ people would vote exactly one time.\n\nThere are three different results: if there are more people upvote than downvote, the result will be \"+\"; if there are more people downvote than upvote, the result will be \"-\"; otherwise the result will be \"0\".\n\nBecause of the $z$ unknown persons, the result may be uncertain (i.e. there are more than one possible results). More formally, the result is uncertain if and only if there exist two different situations of how the $z$ persons vote, that the results are different in the two situations.\n\nTell Nauuo the result or report that the result is uncertain.\n\n\n-----Input-----\n\nThe only line contains three integers $x$, $y$, $z$ ($0\\le x,y,z\\le100$), corresponding to the number of persons who would upvote, downvote or unknown.\n\n\n-----Output-----\n\nIf there is only one possible result, print the result : \"+\", \"-\" or \"0\".\n\nOtherwise, print \"?\" to report that the result is uncertain.\n\n\n-----Examples-----\nInput\n3 7 0\n\nOutput\n-\nInput\n2 0 1\n\nOutput\n+\nInput\n1 1 0\n\nOutput\n0\nInput\n0 0 1\n\nOutput\n?\n\n\n-----Note-----\n\nIn the first example, Nauuo would definitely get three upvotes and seven downvotes, so the only possible result is \"-\".\n\nIn the second example, no matter the person unknown downvotes or upvotes, Nauuo would get more upvotes than downvotes. So the only possible result is \"+\".\n\nIn the third example, Nauuo would definitely get one upvote and one downvote, so the only possible result is \"0\".\n\nIn the fourth example, if the only one person upvoted, the result would be \"+\", otherwise, the result would be \"-\". There are two possible results, so the result is uncertain.",
  "solutions": "[\"x, y, z = map(int, input().split())\\nif z == 0:\\n    if x == y:\\n        print('0')\\n    elif x > y:\\n        print('+')\\n    else:\\n        print('-')\\nelse:\\n    if x > y + z:\\n        print('+') \\n    elif x + z < y:\\n        print('-')\\n    else:\\n        print('?')\", \"x, y, z = map(int, input().split())\\nbest = x - y + z\\nworst = x - y - z\\nif worst > 0:\\n\\tprint('+')\\nelif best < 0:\\n\\tprint('-')\\nelif worst == 0 and best == 0:\\n\\tprint('0')\\nelse:\\n\\tprint('?')\", \"a, b, c = map(int, input().split())\\nif c == 0:\\n    if a - b == 0:\\n        print(0)\\n    elif a > b:\\n        print('+')\\n    else:\\n        print('-')\\nelse:\\n    if a - b - c <= 0 and a - b + c >= 0:\\n        print('?')\\n    elif a - b >= 0:\\n        print('+')\\n    else:\\n        print('-')\", \"x,y,z = map(int, input().split())\\na = x - y\\nif a + z < 0:\\n    print('-')\\nelif a - z > 0:\\n    print('+')\\nelif a + z == a - z and a + z == 0:\\n    print(0)\\nelse:\\n    print('?')\", \"x, y, z = list(map(int, input().split()))\\n\\ntotal = x - y\\n\\nif total - z > 0:\\n\\tprint('+')\\nelif total + z < 0:\\n\\tprint('-')\\nelif z == 0 and total == 0:\\n\\tprint('0')\\nelse:\\n\\tprint('?')\\n\\n\", \"x, y, z = list(map(int, input().split()))\\nif x + z < y:\\n    print('-')\\nelif y + z < x:\\n    print('+')\\nelif z == 0 and x == y:\\n    print(0)\\nelse:\\n    print('?')\", \"x, y, z = list(map(int, input().split()))\\na = x - y\\nif abs(a) - z > 0:\\n    if a < 0:\\n        print('-')\\n    elif a == 0:\\n        print(0)\\n    else:\\n        print('+')\\nelif a == 0 and z == 0:\\n    print(0)\\nelse:\\n    print('?')\\n\", \"\\ndef main():\\n    buf = input()\\n    buflist = buf.split()\\n    x = int(buflist[0])\\n    y = int(buflist[1])\\n    z = int(buflist[2])\\n    minimum = x - y - z\\n    maximum = x - y + z\\n    if minimum > 0 and maximum > 0:\\n        print('+')\\n    elif minimum < 0 and maximum < 0:\\n        print('-')\\n    elif minimum == 0 and maximum == 0:\\n        print('0')\\n    else:\\n        print('?')\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"x, y, z = map(int, input().split())\\nres = '?'\\nif x < y:\\n    if x + z < y:\\n        res = '-'\\nelif y < x:\\n    if y + z < x:\\n        res = '+'\\nelif x == y and z == 0:\\n    res = '0'\\nprint(res)\", \"def ain():\\n    return map(int,input().split())\\ndef lin():\\n    return list(ain())\\n\\ndef plist(l):\\n    for x in l:\\n        print(x, end= ' ')\\n    print()\\n\\na,b,c = ain()\\nif a > b+c:\\n    print('+')\\nelif b > a+c:\\n    print('-')\\nelif c == 0 and a==b:\\n    print('0')\\nelse:\\n    print('?')\\n# python3 p.py\\n\", \"# coding: utf-8\\n\\nimport sys\\nimport math\\n\\nimport array\\nimport bisect\\nimport collections\\nfrom collections import Counter, defaultdict\\nimport fractions\\nimport heapq\\nimport re\\n\\nsys.setrecursionlimit(1000000)\\n\\n\\ndef array2d(dim1, dim2, init=None):\\n    return [[init for _ in range(dim2)] for _ in range(dim1)]\\n\\ndef argsort(l, reverse=False):\\n    return sorted(list(range(len(l))), key=lambda i: l[i], reverse=reverse)\\n\\ndef argmin(l):\\n    return l.index(min(l))\\n\\ndef YESNO(ans, yes=\\\"YES\\\", no=\\\"NO\\\"):\\n    print([no, yes][ans])\\n\\nII = lambda: int(input())\\nMI = lambda: list(map(int, input().split()))\\nMIL = lambda: list(MI())\\nMIS = lambda: input().split()\\n\\n\\ndef main():\\n    x, y, z = MI()\\n    u = x - y + z\\n    d = x - y - z\\n    if u > 0 and d > 0: return \\\"+\\\"\\n    if u < 0 and d < 0: return \\\"-\\\"\\n    if u == 0 and d == 0: return \\\"0\\\"\\n    return \\\"?\\\"\\n\\n\\ndef __starting_point():\\n    print(main())\\n\\n__starting_point()\", \"import sys\\ninput = sys.stdin.readline\\n\\nx, y, z = map(int, input().split())\\n\\nbase = x-y\\n\\nif base + z > 0 and base - z > 0:\\n    print('+')\\nelif base + z < 0 and base - z < 0:\\n    print('-')\\nelif base + z == 0 and base - z == 0:\\n    print('0')\\nelse:\\n    print('?')\", \"import math\\nfrom collections import deque, defaultdict\\nfrom sys import stdin, stdout\\ninput = stdin.readline\\n# print = stdout.write\\nlistin = lambda : list(map(int, input().split()))\\nmapin = lambda : map(int, input().split())\\nx, y, z = mapin()\\nif x == y and z == 0:\\n    print(0)\\nelse:\\n    if abs(x-y) > z:\\n        if x-y > 0:\\n            print('+')\\n        else:\\n            print('-')\\n    else:\\n        print('?')\", \"x, y, z = map(int, input().split())\\nif x + z < y:\\n    print('-')\\nelif x > y + z:\\n    print('+')\\nelif z == 0:\\n    print('0')\\nelse:\\n    print('?')\", \"x, y, z = map(int, input().split())\\nb = x - y\\nif abs(b) > z:\\n\\tprint('-' if b < 0 else '+')\\nelif z == 0:\\n\\tprint(0)\\nelse:\\n\\tprint('?')\", \"from sys import stdin\\na,b,c=list(map(int,stdin.readline().strip().split()))\\nif a>b+c:\\n    print(\\\"+\\\")\\nelif b>a+c:\\n    print(\\\"-\\\")\\nelif c==0 and a==b:\\n    print(0)\\nelse:\\n    print(\\\"?\\\")\\n\", \"x, y, z = list(map(int, input().split()))\\nx -= y\\nif x > 0 and z < x:\\n\\tprint(\\\"+\\\")\\nelif z == 0 and x == 0:\\n\\tprint(\\\"0\\\")\\nelif x < 0 and abs(z) < abs(x):\\n\\tprint(\\\"-\\\")\\nelse:\\n\\tprint(\\\"?\\\")\\n\", \"x,y,z = list(map(int,input().split()))\\nnum = x-y\\nif num > 0: print('+' if num - z > 0 else '?')\\nelif num < 0: print('-' if num + z < 0 else '?')\\nelif num == 0: print('0' if z == 0 else '?')\\n\", \"x, y, z = map(int, input().split())\\nif x + z < y:\\n    print('-')\\nelif y + z < x:\\n    print('+')\\nelif y == x and z == 0:\\n    print('0')\\nelse:\\n    print('?')\", \"#  =========     /\\\\       /|    |====/|\\n#      |        /  \\\\       |    |   / |\\n#      |       /____\\\\      |    |  /  |\\n#      |      /      \\\\     |    | /   |\\n#  ========= /        \\\\  =====  |/====|  \\n#  code\\n\\ndef __starting_point():\\n    x,y,z = list(map(int,input().split()))\\n    if x > y:\\n        up = x - y\\n        if z < up:\\n            print('+')\\n        else:\\n            print('?')\\n    elif y > x:\\n        down = y - x\\n        if z < down:\\n            print('-')\\n        else:\\n            print('?')\\n    else:\\n        if z == 0:\\n            print('0')\\n        else:\\n            print('?')\\n\\n__starting_point()\", \"def f(a):\\n    if a > 0:\\n        return '+'\\n    if a == 0:\\n        return '0'\\n    return '-'\\n\\nx, y, z = list(map(int, input().split()))\\nif z == 0:\\n    print(f(x - y))\\nelif f(x - y - z) != f(x - y + z):\\n    print('?')\\nelse:\\n    print(f(x-y-z))\", \"x,y,z=map(int,input().split())\\nr=x-y\\nif r<0 and r+z<0:\\n    print('-')\\nelif r>0 and r-z>0:\\n    print('+')\\nelif r==0 and r+z==0:\\n    print('0')\\nelse:\\n    print('?')\", \"x, y, z = map(int, input().split())\\na = x + z\\nb = y + z\\nQ = a >= y\\nW = b >= x\\nE = (z==0 and x==y)\\nif E:\\n    print(0)\\nelif Q and W:\\n     print('?')\\nelif Q:\\n     print('+')\\nelse:\\n     print('-') \", \"x, y, z = list(map(int, input().split()))\\nx += z\\nA, B, C = False, False, False\\nif x > y:\\n  A = True\\nelif x == y:\\n  B = True\\nelse:\\n  C = True\\nx -= z\\ny += z\\nif x > y:\\n  A = True\\nelif x == y:\\n  B = True\\nelse:\\n  C = True\\nif A and (not B) and (not C):\\n  print('+')\\nelif B and (not A) and (not C):\\n  print('0')\\nelif C and (not A) and (not B):\\n  print('-')\\nelse:\\n  print('?')\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3 7 0\\n\",\n    \"2 0 1\\n\",\n    \"1 1 0\\n\",\n    \"0 0 1\\n\",\n    \"12 1 11\\n\",\n    \"22 99 77\\n\",\n    \"28 99 70\\n\",\n    \"73 29 43\\n\",\n    \"100 100 100\\n\",\n    \"1 0 1\\n\",\n    \"5 7 1\\n\",\n    \"13 6 8\\n\",\n    \"94 37 25\\n\",\n    \"45 0 44\\n\",\n    \"62 56 5\\n\",\n    \"88 88 0\\n\",\n    \"1 1 1\\n\",\n    \"0 0 0\\n\",\n    \"0 100 0\\n\",\n    \"0 0 100\\n\",\n    \"100 0 100\\n\",\n    \"100 100 0\\n\",\n    \"50 100 50\\n\",\n    \"100 50 50\\n\",\n    \"48 100 48\\n\",\n    \"100 48 48\\n\",\n    \"0 100 48\\n\",\n    \"100 0 48\\n\",\n    \"0 100 99\\n\",\n    \"100 0 99\\n\",\n    \"96 55 0\\n\",\n    \"21 50 0\\n\",\n    \"86 1 0\\n\",\n    \"58 58 1\\n\",\n    \"12 89 2\\n\",\n    \"34 51 3\\n\",\n    \"93 21 2\\n\",\n    \"97 78 2\\n\",\n    \"19 90 4\\n\",\n    \"21 52 5\\n\",\n    \"42 40 4\\n\",\n    \"58 97 4\\n\",\n    \"26 92 6\\n\",\n    \"8 87 7\\n\",\n    \"49 8 6\\n\",\n    \"97 64 6\\n\",\n    \"43 93 9\\n\",\n    \"21 55 9\\n\",\n    \"66 27 9\\n\",\n    \"58 83 8\\n\",\n    \"52 14 10\\n\",\n    \"2 87 10\\n\",\n    \"80 29 11\\n\",\n    \"92 93 10\\n\",\n    \"62 63 12\\n\",\n    \"33 24 13\\n\",\n    \"79 42 12\\n\",\n    \"98 82 13\\n\",\n    \"60 33 15\\n\",\n    \"37 5 15\\n\",\n    \"21 31 14\\n\",\n    \"78 95 14\\n\",\n    \"2 82 17\\n\",\n    \"42 43 16\\n\",\n    \"98 44 17\\n\",\n    \"82 84 16\\n\",\n    \"80 63 18\\n\",\n    \"21 24 18\\n\",\n    \"97 33 19\\n\",\n    \"87 98 19\\n\",\n    \"99 20 7\\n\",\n    \"47 78 6\\n\",\n    \"47 40 10\\n\",\n    \"96 71 19\\n\",\n    \"25 35 23\\n\",\n    \"36 3 35\\n\",\n    \"74 2 16\\n\",\n    \"58 83 39\\n\",\n    \"40 51 11\\n\",\n    \"0 87 13\\n\",\n    \"89 41 36\\n\",\n    \"97 71 36\\n\",\n    \"34 44 21\\n\",\n    \"13 1 13\\n\",\n    \"83 3 8\\n\",\n    \"60 60 32\\n\",\n    \"25 39 32\\n\",\n    \"46 1 89\\n\",\n    \"43 9 61\\n\",\n    \"82 98 93\\n\",\n    \"2 2 1\\n\",\n    \"10 5 6\\n\",\n    \"9 8 2\\n\",\n    \"5 3 3\\n\",\n    \"8 5 5\\n\",\n    \"5 3 2\\n\",\n    \"1 50 50\\n\",\n    \"3 2 3\\n\",\n    \"1 3 4\\n\",\n    \"1 2 2\\n\",\n    \"7 4 3\\n\",\n    \"7 3 5\\n\",\n    \"5 1 6\\n\",\n    \"3 4 5\\n\",\n    \"25 12 100\\n\",\n    \"3 3 2\\n\",\n    \"5 2 10\\n\",\n    \"7 4 4\\n\",\n    \"4 3 1\\n\",\n    \"5 5 3\\n\",\n    \"2 1 3\\n\",\n    \"1 2 7\\n\",\n    \"6 5 4\\n\",\n    \"15 4 15\\n\"\n  ],\n  \"outputs\": [\n    \"-\",\n    \"+\",\n    \"0\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"-\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"-\",\n    \"?\",\n    \"+\",\n    \"+\",\n    \"+\",\n    \"0\",\n    \"?\",\n    \"0\",\n    \"-\",\n    \"?\",\n    \"?\",\n    \"0\",\n    \"?\",\n    \"?\",\n    \"-\",\n    \"+\",\n    \"-\",\n    \"+\",\n    \"-\",\n    \"+\",\n    \"+\",\n    \"-\",\n    \"+\",\n    \"?\",\n    \"-\",\n    \"-\",\n    \"+\",\n    \"+\",\n    \"-\",\n    \"-\",\n    \"?\",\n    \"-\",\n    \"-\",\n    \"-\",\n    \"+\",\n    \"+\",\n    \"-\",\n    \"-\",\n    \"+\",\n    \"-\",\n    \"+\",\n    \"-\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"+\",\n    \"+\",\n    \"+\",\n    \"+\",\n    \"?\",\n    \"-\",\n    \"-\",\n    \"?\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"+\",\n    \"?\",\n    \"+\",\n    \"-\",\n    \"?\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"-\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"+\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\",\n    \"?\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1173/A",
  "starter_code": ""
}