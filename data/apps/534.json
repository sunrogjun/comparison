{
  "task_id": "APPS/534",
  "problem_id": 534,
  "prompt": "During the break the schoolchildren, boys and girls, formed a queue of n people in the canteen. Initially the children stood in the order they entered the canteen. However, after a while the boys started feeling awkward for standing in front of the girls in the queue and they started letting the girls move forward each second. \n\nLet's describe the process more precisely. Let's say that the positions in the queue are sequentially numbered by integers from 1 to n, at that the person in the position number 1 is served first. Then, if at time x a boy stands on the i-th position and a girl stands on the (i + 1)-th position, then at time x + 1 the i-th position will have a girl and the (i + 1)-th position will have a boy. The time is given in seconds.\n\nYou've got the initial position of the children, at the initial moment of time. Determine the way the queue is going to look after t seconds.\n\n\n-----Input-----\n\nThe first line contains two integers n and t (1 \u2264 n, t \u2264 50), which represent the number of children in the queue and the time after which the queue will transform into the arrangement you need to find. \n\nThe next line contains string s, which represents the schoolchildren's initial arrangement. If the i-th position in the queue contains a boy, then the i-th character of string s equals \"B\", otherwise the i-th character equals \"G\".\n\n\n-----Output-----\n\nPrint string a, which describes the arrangement after t seconds. If the i-th position has a boy after the needed time, then the i-th character a must equal \"B\", otherwise it must equal \"G\".\n\n\n-----Examples-----\nInput\n5 1\nBGGBG\n\nOutput\nGBGGB\n\nInput\n5 2\nBGGBG\n\nOutput\nGGBGB\n\nInput\n4 1\nGGGB\n\nOutput\nGGGB",
  "solutions": "[\"import copy\\n\\ndef process( s ):\\n\\tres = s[:]\\n\\tfor i in range( 1, len(s) ):\\n\\t\\tif s[i] == 'G' and s[i - 1] == 'B':\\n\\t\\t\\tres[i], res[i - 1] = res[i - 1], res[i]\\n\\treturn res\\n\\nfl = input().split()\\nn = int( fl[0] )\\nt = int( fl[1] )\\ns = input().split()[0]\\nS = []\\nfor i in range(n):\\n\\tS.append( s[i] )\\nfor i in range(t):\\n\\tS = process( S )\\nans = \\\"\\\"\\nfor i in range(n):\\n\\tans += S[i]\\nprint( ans )\", \"import sys\\ninp = sys.stdin\\nn, t = inp.readline().split()\\nn, t = int(n), int(t)\\ns = inp.readline()\\na = []\\nfor i in range(n):\\n  a.append(s[i])\\nfor i in range(t):\\n  j = 0\\n  while j < n - 1:\\n    if a[j] == 'B' and a[j + 1] == 'G':\\n      a[j],a[j + 1] = a[j + 1],a[j]\\n      j += 1\\n    j += 1\\nprint(\\\"\\\".join(a))      \", \"n,t=input().split()\\nn=int(n)\\nt=int(t)\\n\\ns=input()\\n\\nfor i in range(t):\\n    s=s.replace(\\\"BG\\\",\\\"GB\\\")\\n\\nprint(s)\\n\", \"n,tim=[int(i) for i in input().split()]\\ns=input()\\ndata=[]\\nfor i in range(n):\\n\\tif s[i]=='B':\\n\\t\\tdata.append(1)\\n\\telse:\\n\\t\\tdata.append(0)\\n\\nfor t in range(tim):\\n\\ti=0\\n\\twhile i<n:\\n\\t\\tif data[i]==1 and i+1<n and data[i+1]==0:\\n\\t\\t\\tdata[i]=0\\n\\t\\t\\tdata[i+1]=1\\n\\t\\t\\ti+=2\\n\\t\\telse:\\n\\t\\t\\ti+=1\\nans=\\\"\\\"\\nfor i in range(n):\\n\\tif data[i]==1:\\n\\t\\tans=ans+'B'\\n\\telse:\\n\\t\\tans=ans+'G'\\nprint(ans)\\n\", \"a,b=input().split()\\na=int(a)\\nb=int(b)\\ns=input()\\nfor i in range (b):\\n       s=s.replace(\\\"BG\\\",\\\"GB\\\")\\nprint(s)\\n\", \"a=input()\\nn,t=list(map(int,a.split()))\\ns=input()\\nfor i in range(t):\\n    s=s.replace(\\\"BG\\\",\\\"GB\\\")\\nprint(s)\\n\", \"\\nn, t = map(int, input().split())\\na = list(input())\\n\\nfor i in range(t):\\n    j = 0\\n    while j < n:\\n        while j < n and a[j] == 'G':\\n            j += 1\\n        while j < n and a[j] == 'B':\\n            j += 1\\n        if j < n:\\n            a[j - 1], a[j] = 'G', 'B'\\n            j += 1\\n        \\nfor i in a:\\n    print(i, end = '')\", \"import math\\nimport sys\\n#Main function\\ndef cantina():\\n    datain = []\\n    queue = []\\n    \\n    #Taking input\\n    for i in range(2):\\n        datain.append(input().split())\\n\\n    #Setting time in\\n    time = int(datain[0][1])\\n\\n    #Making queue list    \\n    for i in range(len(datain[1][0])):\\n        queue.append(datain[1][0][i])\\n\\n    #Queueswaps based on amount of times\\n    for i in range(time):\\n        queueswap(queue)\\n\\n    #returns queue\\n    return queue\\n\\n#Function for swapping\\ndef queueswap(queue):\\n    swaps = []\\n    \\n    #Finds places to swap\\n    for i in range(len(queue)-1):\\n        if queue[i] == \\\"B\\\" and queue[i+1] == \\\"G\\\":\\n            swaps.append(i)\\n            \\n    #Swaps the places          \\n    for i in swaps:\\n        queue[i] = \\\"G\\\"\\n        queue[i+1] = \\\"B\\\"\\n        \\n    #returns the corrected list\\n    return queue\\n    \\n#Prints the output string\\nprint(''.join(cantina()))\\n\", \"import sys\\nn, m = list(map(int, input().split()))\\ns = list(input())\\nfor i in range(m):\\n    a = []\\n    for j in range(n-1):\\n        if s[j] == 'B' and s[j+1] == 'G': a.append(j)\\n    for x in a:\\n        s[x], s[x+1] = 'G', 'B'\\n\\nfor c in s:\\n    sys.stdout.write(c)\\nsys.stdout.write('\\\\n')\\n\\n\", \"n, t = list(map(int, input().split()))\\ns = input()\\nfor i in range(t):\\n    s = s.replace(\\\"BG\\\",\\\"GB\\\")\\nprint(s)\\n\", \"n,k=[ int(x) for x in input().split(' ') ]\\ncurrent=input()\\n\\ndef turn(str):\\n\\ttemp=list(str)\\t\\n\\tfor i in range(1,len(str)) :\\n\\t\\tif str[i] == 'G' and str[i-1] == 'B' :\\n\\t\\t\\ttemp[i-1]='G'\\n\\t\\t\\ttemp[i]='B'\\n\\tret=''\\n\\tfor i in temp :\\n\\t\\tret+=i\\n\\treturn ret\\n\\t\\n\\n\\t\\nfor i in range(k):\\n\\tcurrent=turn(current)\\n\\nprint(current)\\n\\n\", \"(n, t) = map(int, input().split())\\ns = input()\\nfor _ in range(t):\\n    s=s.replace('BG', \\\"GB\\\")\\nprint(s)\", \"l = input()\\nl1 = l.split(' ')\\nn = int(l1[0])\\nt = int(l1[1])\\ns =str(input())\\nfor x in range(t):\\n    k = s.replace('BG','GB')\\n    s = k\\nprint(k)\\n\", \"n, t = [int(i) for i in input().split()]\\na = [i for i in input().strip()]\\nfor i in range(t):\\n    falg = 1\\n    for j in range(n - 1):\\n        falg -= 1\\n        if a[j] == 'B' and a[j + 1] == 'G' and falg <= 0:\\n            a[j], a[j + 1] = a[j + 1], a[j]\\n            falg = 2\\nprint(''.join(a))\", \"n, t = map(int, input().split(' '))\\nqueue = list(input())\\n \\nfor i in range(t):\\n    j = 1 \\n    while j < n:\\n        if queue[-j] == 'G' and queue[-j-1] == 'B':\\n            queue[-j], queue[-j-1] = queue[-j-1], queue[-j]\\n            j += 2\\n        else:\\n            j += 1\\n \\nprint(''.join(queue))\", \"a, b = list(map(int, input().split()))\\nq = input()\\np = \\\"\\\"\\n\\nfor i in range(0, b):\\n    j = 0\\n    while j <= len(q) - 2:\\n        if q[j] == 'B' and q[j + 1] == 'G':\\n            p = p + \\\"GB\\\";\\n            j = j + 2\\n        else:\\n            p = p + q[j]\\n            j = j + 1\\n    if j == len(q) - 1:\\n        p = p + q[j]\\n    q = p\\n    p = \\\"\\\"\\n\\nprint(q)\\n\", \"a=input().split(\\\" \\\")\\na=[int(i) for i in a]\\nn=input()\\nn=[i for i in n]\\nwhile a[1]:\\n    k=[]\\n    for i in range(0,a[0]):\\n        if n[i]=='B':\\n            k.append(i)\\n    for i in k:\\n        if i< a[0]-1 and n[i+1]=='G':\\n            n[i]='G'\\n            n[i+1]='B'\\n    a[1]-=1\\nprint(\\\"\\\".join(n))\", \"n,t = map(int, input().split())\\ns = input()\\nfor tem in range(0,t):\\n    s2 = ''\\n    cont = 0\\n    while cont < n-1:\\n        if s[cont] == 'B' and s[cont+1] == 'G':\\n            s2 += 'GB'\\n            cont += 2\\n        else:\\n            s2 += s[cont]\\n            cont += 1\\n    if cont == n-1:\\n        s2 += s[-1]\\n    s = s2\\nprint(s2)\", \"tstring=str(input())\\nqueuelist=list(input())\\nfinalqueue=''\\n\\nt=int(tstring[tstring.index(' ')+1:])\\n\\nfor j in range(0,t):\\n    for i in range(0,len(queuelist)-1):\\n        if queuelist[i]=='B' and queuelist[i+1]=='G':\\n            queuelist[i]='G'\\n            queuelist[i+1]='X'\\n    for i in range(0,len(queuelist)):\\n        if queuelist[i]=='X':\\n            queuelist[i]='B'\\n\\nfor i in range(0,len(queuelist)):\\n    finalqueue+=queuelist[i]\\n\\nprint(finalqueue)\", \"n,t = map(int,input().split())\\ns = list(input())\\nwhile(t>0):\\n    j = 0\\n    while(j < n - 1):\\n        if((s[j]=='B')and(s[j+1]=='G')):\\n           s[j],s[j+1]=s[j+1],s[j]\\n           j += 1\\n        j += 1\\n    t -= 1\\nprint(''.join(s))\", \"a = input()\\na = a.split(' ')\\na = list(map(int,a))\\nn = a[0]\\nt = a[1]\\nqueue = list(input())\\nfor i in range(t):\\n    j = 0\\n    while (j < n-1):\\n        if (queue[j] == 'B' and queue[j+1] == 'G'):\\n            queue[j] = 'G'\\n            queue[j+1] = 'B'\\n            j += 1\\n        j += 1\\nq = ''\\nfor i in range(n):\\n    q = q + queue[i]\\nprint(q)\\n\", \"num, s = map(int, input().split())\\nqueue = input()\\n\\nfor i in range(s):\\n    new_queue = \\\"\\\"\\n    while len(queue) > 0:\\n        if queue[0] == \\\"G\\\":\\n            new_queue += \\\"G\\\"\\n            queue = queue[1:]\\n        else:\\n            if len(queue) > 1 and queue[1] == \\\"G\\\":\\n                new_queue += \\\"GB\\\"\\n                queue = queue[2:]\\n            else:\\n                new_queue += \\\"B\\\"\\n                queue = queue[1:]\\n    queue = new_queue\\n\\n\\nprint(queue)\", \"n, t = map(int, input().split())\\ns = [c for c in input()]\\nfor i in range(t):\\n    skip = False\\n    for j, n in enumerate(s[:-1]):\\n        if skip == True:\\n            skip = False\\n            continue\\n        if s[j] == \\\"B\\\" and s[j+1] == \\\"G\\\":\\n            s[j], s[j+1] = \\\"G\\\", \\\"B\\\"\\n            skip = True\\nprint(\\\"\\\".join(c for c in s))\", \"n,t = input().split(' ')\\ns = input()\\ns = list(s)\\nt = int(t)\\nn = int(n)\\nwhile t>0 :\\n    i = 0\\n    while i<n-1 :\\n        if s[i]=='B' :\\n            if s[i+1]=='G' :\\n                temp = s[i]\\n                s[i] = s[i+1]\\n                s[i+1] = temp\\n                i += 1\\n        i += 1\\n    t -= 1\\nprint(''.join(s))\\n\", \"from sys import stdin\\n\\nn,t = [ int(x) for x in stdin.readline().strip().split() ]\\nqueue = [ x for x in stdin.readline().strip() ]\\ni,changes = 0,True\\n\\nwhile changes and i<t:\\n  changes,j = False,1\\n  while j<n:\\n    if queue[j-1]=='B' and queue[j]=='G':\\n      queue[j-1],queue[j],changes,j = 'G','B',True,j+1\\n    j += 1\\n  i += 1\\nprint(''.join(queue))\\n\\n  \\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5 1\\nBGGBG\\n\",\n    \"5 2\\nBGGBG\\n\",\n    \"4 1\\nGGGB\\n\",\n    \"2 1\\nBB\\n\",\n    \"2 1\\nBG\\n\",\n    \"6 2\\nBBGBBG\\n\",\n    \"8 3\\nBBGBGBGB\\n\",\n    \"10 3\\nBBGBBBBBBG\\n\",\n    \"22 7\\nGBGGBGGGGGBBBGGBGBGBBB\\n\",\n    \"50 4\\nGBBGBBBGGGGGBBGGBBBBGGGBBBGBBBGGBGGBGBBBGGBGGBGGBG\\n\",\n    \"50 8\\nGGGGBGGBGGGBGBBBGGGGGGGGBBGBGBGBBGGBGGBGGGGGGGGBBG\\n\",\n    \"50 30\\nBGGGGGGBGGBGBGGGGBGBBGBBBGGBBBGBGBGGGGGBGBBGBGBGGG\\n\",\n    \"20 20\\nBBGGBGGGGBBBGBBGGGBB\\n\",\n    \"27 6\\nGBGBGBGGGGGGBGGBGGBBGBBBGBB\\n\",\n    \"46 11\\nBGGGGGBGBGGBGGGBBGBBGBBGGBBGBBGBGGGGGGGBGBGBGB\\n\",\n    \"50 6\\nBGGBBBBGGBBBBBBGGBGBGBBBBGBBBBBBGBBBBBBBBBBBBBBBBB\\n\",\n    \"50 10\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\n\",\n    \"50 8\\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n\",\n    \"50 10\\nBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGB\\n\",\n    \"50 13\\nGGGBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n\",\n    \"1 1\\nB\\n\",\n    \"1 1\\nG\\n\",\n    \"1 50\\nB\\n\",\n    \"1 50\\nG\\n\",\n    \"50 50\\nBBBBBBBBGGBBBBBBGBBBBBBBBBBBGBBBBBBBBBBBBBBGBBBBBB\\n\",\n    \"50 50\\nGGBBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBGGGGGGBG\\n\",\n    \"6 3\\nGGBBBG\\n\",\n    \"26 3\\nGBBGBBBBBGGGBGBGGGBGBGGBBG\\n\",\n    \"46 3\\nGGBBGGGGBBGBGBBBBBGGGBGGGBBGGGBBBGGBGGBBBGBGBB\\n\",\n    \"44 8\\nBGBBBBBBBBBGGBBGBGBGGBBBBBGBBGBBBBBBBBBGBBGB\\n\",\n    \"20 20\\nBBGGBGGGGBBBGBBGGGBB\\n\",\n    \"30 25\\nBGGBBGBGGBGBGBBGBGGGGBGBGGBBBB\\n\",\n    \"17 42\\nBBGBGBGGGGGGBBGGG\\n\",\n    \"30 50\\nBGGBBGGGGGGGGBBGGGBBGGBBBGBBGG\\n\",\n    \"31 33\\nBBGGBBGGBGBBBBGGBGBBBGBGGBBGBBB\\n\",\n    \"2 2\\nBG\\n\",\n    \"8 8\\nGGGBGGBB\\n\",\n    \"34 34\\nBGGBBBBGGBBGBGGGGGGBBGGGGGBGGBGGGB\\n\",\n    \"34 20\\nBBBBGBGGGBGGGBGBGGBBBBGGBBGGGBGBBG\\n\",\n    \"50 50\\nBBGBBBBBBBBBBBBGBBBGBBBBBBBGBBBBBBGBBBGBBGBBGBBBGG\\n\",\n    \"10 10\\nGGGGGGGGGG\\n\",\n    \"10 10\\nBBBBBBBBBB\\n\",\n    \"10 10\\nBGBGBGBGBG\\n\",\n    \"1 1\\nB\\n\"\n  ],\n  \"outputs\": [\n    \"GBGGB\\n\",\n    \"GGBGB\\n\",\n    \"GGGB\\n\",\n    \"BB\\n\",\n    \"GB\\n\",\n    \"GBBGBB\\n\",\n    \"GGBGBBBB\\n\",\n    \"GBBBBBGBBB\\n\",\n    \"GGGGGGGGBGGBGGBBBBBBBB\\n\",\n    \"GGBGBGBGBGBGGGBBGBGBGBGBBBGBGBGBGBGBGBGBGBGBGGBGBB\\n\",\n    \"GGGGGGGGGGGGBGGBGBGBGBGBGGGGGGBGBGBGBGBGBGGBGGBGBB\\n\",\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGBBBBBBBBBB\\n\",\n    \"GGGGGGGBGBGBGGGGGBGBBBBBBBB\\n\",\n    \"GGGGGGGGGGGBGGGGGBBGBGBGBGBGBGBGBGBGBGBGBBBBBB\\n\",\n    \"GGGGBBBBBGBGBGBGBBBGBBBBBBGBBBBBBBBBBBBBBBBBBBBBBB\\n\",\n    \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n\",\n    \"BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBGBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGGGGGGBGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG\\n\",\n    \"B\\n\",\n    \"G\\n\",\n    \"B\\n\",\n    \"G\\n\",\n    \"GGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGBBBBB\\n\",\n    \"GGGBBB\\n\",\n    \"GGBBBBGBGBGBGGGBGBGGGBGBBB\\n\",\n    \"GGGGBGBGGGBBBBBGBGBGBGGGBGGBGBGBGBGBGBGBGBBBBB\\n\",\n    \"GBBGBGBGBGBGBGBBBBGBBGBBBBBBBBBGBBGBBBBBBBBB\\n\",\n    \"GGGGGGGGGGBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGGGGGBBBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGBBBBBB\\n\",\n    \"GGGGGGGGGGGGGGGGGGBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGGBBBBBBBBBBBBBBBBBBB\\n\",\n    \"GB\\n\",\n    \"GGGGGBBB\\n\",\n    \"GGGGGGGGGGGGGGGGGGGGGBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGGGGGGGGBBBBBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGGBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB\\n\",\n    \"GGGGGGGGGG\\n\",\n    \"BBBBBBBBBB\\n\",\n    \"GGGGGBBBBB\\n\",\n    \"B\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/266/B",
  "starter_code": ""
}