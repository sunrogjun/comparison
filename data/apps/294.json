{
  "task_id": "APPS/294",
  "problem_id": 294,
  "prompt": "Everybody in Russia uses Gregorian calendar. In this calendar there are 31 days in January, 28 or 29 days in February (depending on whether the year is leap or not), 31 days in March, 30 days in April, 31 days in May, 30 in June, 31 in July, 31 in August, 30 in September, 31 in October, 30 in November, 31 in December.\n\nA year is leap in one of two cases: either its number is divisible by 4, but not divisible by 100, or is divisible by 400. For example, the following years are leap: 2000, 2004, but years 1900 and 2018 are not leap.\n\nIn this problem you are given n (1 \u2264 n \u2264 24) integers a_1, a_2, ..., a_{n}, and you have to check if these integers could be durations in days of n consecutive months, according to Gregorian calendar. Note that these months could belong to several consecutive years. In other words, check if there is a month in some year, such that its duration is a_1 days, duration of the next month is a_2 days, and so on.\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 24) \u2014 the number of integers.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (28 \u2264 a_{i} \u2264 31) \u2014 the numbers you are to check.\n\n\n-----Output-----\n\nIf there are several consecutive months that fit the sequence, print \"YES\" (without quotes). Otherwise, print \"NO\" (without quotes).\n\nYou can print each letter in arbitrary case (small or large).\n\n\n-----Examples-----\nInput\n4\n31 31 30 31\n\nOutput\nYes\n\n\nInput\n2\n30 30\n\nOutput\nNo\n\n\nInput\n5\n29 31 30 31 30\n\nOutput\nYes\n\n\nInput\n3\n31 28 30\n\nOutput\nNo\n\n\nInput\n3\n31 31 28\n\nOutput\nYes\n\n\n\n\n-----Note-----\n\nIn the first example the integers can denote months July, August, September and October.\n\nIn the second example the answer is no, because there are no two consecutive months each having 30 days.\n\nIn the third example the months are: February (leap year) \u2014 March \u2014 April \u2013 May \u2014 June.\n\nIn the fourth example the number of days in the second month is 28, so this is February. March follows February and has 31 days, but not 30, so the answer is NO.\n\nIn the fifth example the months are: December \u2014 January \u2014 February (non-leap year).",
  "solutions": "[\"n = int(input())\\ns = input().split()\\na = [0] * n\\nm = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\nfor i in range(n):\\n  a[i] = int(s[i])\\nans = \\\"No\\\"\\nfor i in range(len(m) - n):\\n  if a == m[i:i+n]:\\n    ans = \\\"Yes\\\"\\n    break\\nprint(ans)\", \"# IAWT\\na = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\\n 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\\n 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\\n 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\\n 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\\n 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\ndef starting(x): # x is index\\n    if x + n-1 >= len(a): return False\\n    for i in range(n):\\n        if s[i] != a[i + x]:\\n            return False\\n    return True\\n\\nn = int(input())\\ns = list(map(int, input().split()))\\nans = \\\"No\\\"\\nfor i in range(len(a)):\\n    if starting(i): ans = \\\"Yes\\\"\\n\\nprint(ans)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4\\n31 31 30 31\\n\",\n    \"2\\n30 30\\n\",\n    \"5\\n29 31 30 31 30\\n\",\n    \"3\\n31 28 30\\n\",\n    \"3\\n31 31 28\\n\",\n    \"24\\n29 28 31 30 31 30 31 31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"4\\n31 29 31 30\\n\",\n    \"24\\n31 28 31 30 31 30 31 31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"8\\n31 29 31 30 31 30 31 31\\n\",\n    \"1\\n29\\n\",\n    \"1\\n31\\n\",\n    \"11\\n30 31 30 31 31 30 31 30 31 31 28\\n\",\n    \"21\\n30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31 31 28 31 30 31\\n\",\n    \"2\\n30 31\\n\",\n    \"7\\n28 31 30 31 30 31 31\\n\",\n    \"4\\n28 31 30 31\\n\",\n    \"9\\n31 31 29 31 30 31 30 31 31\\n\",\n    \"4\\n31 28 31 30\\n\",\n    \"2\\n31 31\\n\",\n    \"17\\n31 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"4\\n30 31 30 31\\n\",\n    \"12\\n31 28 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"12\\n31 29 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"22\\n31 30 31 30 31 31 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"14\\n31 30 31 31 28 31 30 31 30 31 31 30 31 30\\n\",\n    \"12\\n31 30 31 31 28 31 30 31 30 31 31 30\\n\",\n    \"17\\n31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"4\\n31 28 28 30\\n\",\n    \"4\\n31 29 29 30\\n\",\n    \"8\\n31 29 31 30 31 31 31 31\\n\",\n    \"11\\n30 31 30 31 31 30 31 30 31 29 28\\n\",\n    \"21\\n30 31 30 31 31 28 31 30 31 30 31 29 30 31 30 31 31 28 31 30 31\\n\",\n    \"7\\n28 28 30 31 30 31 31\\n\",\n    \"9\\n29 31 29 31 30 31 30 31 31\\n\",\n    \"2\\n31 29\\n\",\n    \"17\\n28 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"12\\n31 28 31 30 31 30 31 31 30 31 28 31\\n\",\n    \"2\\n29 31\\n\",\n    \"12\\n31 29 31 30 31 30 31 30 30 31 30 31\\n\",\n    \"12\\n31 28 31 30 31 29 31 31 30 31 30 31\\n\",\n    \"22\\n31 30 31 30 31 31 30 31 30 31 31 28 31 30 28 30 31 31 30 31 30 31\\n\",\n    \"14\\n31 30 31 31 28 31 30 31 30 31 31 30 29 30\\n\",\n    \"12\\n31 30 31 31 28 28 30 31 30 31 31 30\\n\",\n    \"17\\n31 30 31 30 31 31 29 31 30 31 31 31 31 30 31 30 31\\n\",\n    \"19\\n31 28 31 30 31 30 31 31 30 31 30 31 31 28 31 30 31 30 31\\n\",\n    \"20\\n31 28 31 30 31 30 31 31 30 31 30 31 31 28 31 30 31 30 31 31\\n\",\n    \"1\\n28\\n\",\n    \"1\\n29\\n\",\n    \"1\\n30\\n\",\n    \"1\\n31\\n\",\n    \"24\\n31 29 31 30 31 30 31 31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"24\\n31 28 31 30 31 30 31 31 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"24\\n28 31 30 31 30 31 31 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31 31\\n\",\n    \"24\\n29 31 30 31 30 31 31 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31 31\\n\",\n    \"24\\n28 31 30 31 30 31 31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31 31\\n\",\n    \"13\\n28 31 30 31 30 31 31 30 31 30 31 31 28\\n\",\n    \"15\\n31 31 28 31 30 31 30 31 31 30 31 30 31 31 29\\n\",\n    \"23\\n31 30 31 31 30 31 30 31 31 28 31 30 31 30 31 31 30 31 30 31 31 29 31\\n\",\n    \"24\\n31 30 31 30 31 31 30 31 30 31 31 30 31 30 31 30 31 31 30 31 30 31 31 30\\n\",\n    \"23\\n29 31 30 31 30 31 31 30 31 30 31 31 29 31 30 31 30 31 31 30 31 30 31\\n\",\n    \"15\\n31 31 29 31 30 31 30 31 31 30 31 30 31 31 28\\n\",\n    \"12\\n31 30 31 30 31 30 31 31 30 31 30 31\\n\"\n  ],\n  \"outputs\": [\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\",\n    \"No\\n\\n\",\n    \"Yes\\n\\n\",\n    \"No\\n\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/899/B",
  "starter_code": ""
}