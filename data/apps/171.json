{
  "task_id": "APPS/171",
  "problem_id": 171,
  "prompt": "You have probably registered on Internet sites many times. And each time you should enter your invented password. Usually the registration form automatically checks the password's crypt resistance. If the user's password isn't complex enough, a message is displayed. Today your task is to implement such an automatic check.\n\nWeb-developers of the company Q assume that a password is complex enough, if it meets all of the following conditions:  the password length is at least 5 characters;  the password contains at least one large English letter;  the password contains at least one small English letter;  the password contains at least one digit. \n\nYou are given a password. Please implement the automatic check of its complexity for company Q.\n\n\n-----Input-----\n\nThe first line contains a non-empty sequence of characters (at most 100 characters). Each character is either a large English letter, or a small English letter, or a digit, or one of characters: \"!\", \"?\", \".\", \",\", \"_\".\n\n\n-----Output-----\n\nIf the password is complex enough, print message \"Correct\" (without the quotes), otherwise print message \"Too weak\" (without the quotes).\n\n\n-----Examples-----\nInput\nabacaba\n\nOutput\nToo weak\n\nInput\nX12345\n\nOutput\nToo weak\n\nInput\nCONTEST_is_STARTED!!11\n\nOutput\nCorrect",
  "solutions": "[\"s = input().strip()\\nflag1 = len(s) >= 5\\nd1 = 'qwertyuiopasdfghjklzxcvbnm'\\nd2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'\\nd3 = '123456789'\\nflag2 = False\\nflag3 = False\\nflag4 = False\\n\\nfor i in d1:\\n    if i in s:\\n        flag2 = True\\nfor i in d2:\\n    if i in s:\\n        flag3 = True\\nfor i in d3:\\n    if i in s:\\n        flag4 = True  \\nif(flag1 and flag2 and flag3 and flag4):\\n    print(\\\"Correct\\\")\\nelse:\\n    print(\\\"Too weak\\\")\\n\\n\", \"s = input().strip()\\nflag1 = len(s) >= 5\\nd1 = 'qwertyuiopasdfghjklzxcvbnm'\\nd2 = 'QWERTYUIOPASDFGHJKLZXCVBNM'\\nd3 = '1234567890'\\nflag2 = False\\nflag3 = False\\nflag4 = False\\n\\nfor i in d1:\\n    if i in s:\\n        flag2 = True\\nfor i in d2:\\n    if i in s:\\n        flag3 = True\\nfor i in d3:\\n    if i in s:\\n        flag4 = True  \\nif(flag1 and flag2 and flag3 and flag4):\\n    print(\\\"Correct\\\")\\nelse:\\n    print(\\\"Too weak\\\")\\n\\n\", \"import re\\na1=re.compile('[a-z]')\\na2=re.compile('[A-Z]')\\na3=re.compile('[0-9]')\\ns=input()\\nif len(s)>=5:\\n    s=list(s)\\n    ar=[0,0,0]\\n    for i in s:\\n            if(a1.match(i)!=None):\\n                    ar[0]+=1\\n    for i in s:\\n            if(a2.match(i)!=None):\\n                    ar[1]+=1\\n    for i in s:\\n            if(a3.match(i)!=None):\\n                    ar[2]+=1\\n    if (ar[0]!=0 and ar[1]!=0 and ar[2]!=0):\\n        print('Correct')\\n    else:\\n        print('Too weak')\\nelse:\\n    print('Too weak')\\n\", \"s=input()\\nimport string\\na=1\\nfor i in s:\\n    if i in string.ascii_lowercase:\\n        a*=2\\n    if i in string.ascii_uppercase:\\n        a*=3\\n    if i in string.digits:\\n        a*=5\\nprint(\\\"Too weak\\\" if (a%30 or len(s)<5) else \\\"Correct\\\")\\n\", \"S = input()\\nans = 0\\nAns = 0\\nns = 0\\n\\nfor i in range(len(S)):\\n    k = ord(S[i])\\n    if k >= 48 and k <= 57:\\n        ns += 1\\n    elif k >=65 and k <= 90:\\n        Ans += 1\\n    elif k >= 97 and k <= 122:\\n        ans += 1\\nif ans != 0 and Ans != 0 and len(S) >= 5 and ns != 0:\\n    print('Correct')\\nelse:\\n    print('Too weak')\", \"s = input()\\nprint('Correct' if len(s) >= 5 and any([elem.isupper() for elem in s]) and any([elem.islower() for elem in s]) and any([elem.isdigit() for elem in s]) else 'Too weak')\", \"import re\\na1=re.compile('[a-z]')\\na2=re.compile('[A-Z]')\\na3=re.compile('[0-9]')\\ns=input()\\nif len(s)>=5:\\n    s=list(s)\\n    ar=[0,0,0]\\n    for i in s:\\n            if(a1.match(i)!=None):\\n                    ar[0]+=1\\n    for i in s:\\n            if(a2.match(i)!=None):\\n                    ar[1]+=1\\n    for i in s:\\n            if(a3.match(i)!=None):\\n                    ar[2]+=1\\n    if (ar[0]!=0 and ar[1]!=0 and ar[2]!=0):\\n        print('Correct')\\n    else:\\n        print('Too weak')\\nelse:\\n    print('Too weak')\\n\", \"s=input()\\na=False\\nb=False\\nc=False\\nd=False\\nif(len(s)>=5):\\n    a=True\\nfor i in range(len(s)):\\n    if(ord(s[i])>=ord('A') and ord(s[i])<=ord('Z')):\\n        b=True\\n    if(ord(s[i])>=ord('a') and ord(s[i])<=ord('z')):\\n        c=True\\n    if(ord(s[i])>=ord('1') and ord(s[i])<=ord('9')):\\n        d=True\\nif(a and b and c and d):\\n    print(\\\"Correct\\\")\\nelse:\\n    print(\\\"Too weak\\\")\\n\", \"upreg=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\\ndownreg=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\\ncifra=['1','2','3','4','5','6','7','8','9','0']\\nslovo=input()\\nflag=[0,0,0,0]\\nif len(slovo)>=5:\\n    flag[0]=1\\nfor i in range(len(slovo)):\\n    simvol=slovo[i:i+1]\\n    if simvol in upreg:\\n        flag[1]=1\\n    if simvol in downreg:\\n        flag[2]=1\\n    if simvol in cifra:\\n        flag[3]=1\\nif flag[0] and flag[1] and flag[2] and flag[3]:\\n    print('Correct')\\nelse:\\n    print('Too weak')\\n\", \"s = input()\\nup, low, digit = False, False, False\\nfor ch in s:\\n    if ch.isdigit():\\n        digit = True\\n    elif ch.isalpha():\\n        if ch.isupper():\\n            up = True\\n        else:\\n            low = True\\nif len(s) >= 5 and up and low and digit:\\n    print('Correct')\\nelse:\\n    print('Too weak')\\n\\n\", \"s = input()\\nyes = True\\nyes &= len(s) >= 5\\nyes &= any(c.isupper() for c in s)\\nyes &= any(c.islower() for c in s)\\nyes &= any(c.isdigit() for c in s)\\n\\nif yes:\\n    print('Correct')\\nelse:\\n    print('Too weak')\\n\", \"def check(a):\\n    if len(a) < 5:\\n        return 0\\n    does_have_little = 0\\n    for elem in [chr(i) for i in range(ord('a'), ord('z') + 1)]:\\n        if elem in a:\\n            does_have_little = 1\\n            break\\n    if not does_have_little:\\n        return 0\\n    does_have_big = 0\\n    for elem in [chr(i) for i in range(ord('A'), ord('Z') + 1)]:\\n        if elem in a:\\n            does_have_big = 1\\n            break\\n    if not does_have_big:\\n        return 0\\n    number = 0\\n    for elem in [chr(i) for i in range(ord('0'), ord('9') + 1)]:\\n        if elem in a:\\n            number = 1\\n            break\\n    if not number:\\n        return 0\\n    return 1\\n\\na = input()\\nif check(a):\\n    print(\\\"Correct\\\")\\nelse:\\n    print(\\\"Too weak\\\")\", \"pw = input()\\n\\nlg = case = numb = 0\\n\\nif len(pw) >= 5:\\n    lg = 1\\nif pw.lower() != pw and pw.upper() != pw:\\n    case = 1\\nfor i in pw:\\n    if i.isnumeric():\\n        numb = 1\\n\\n#print(lg, case, numb)\\n\\nif numb and case and lg:\\n    print('Correct')\\nelse:\\n    print('Too weak')\\n\", \"str = input()\\nsmall = 0\\nbig = 0\\nnum = 0\\nfor i in range(10):\\n    if chr(i + ord('0')) in str:\\n        num = 1\\nfor i in range(26):\\n    if chr(i + ord('a')) in str:\\n        small = 1\\nfor i in range(26):\\n    if chr(i + ord('A')) in str:\\n        big = 1\\nif len(str) >= 5 and big and small and num:\\n    print(\\\"Correct\\\")\\nelse:\\n    print(\\\"Too weak\\\")\\n\", \"s = input()\\nif len(s) < 5:\\n    print(\\\"Too weak\\\")\\nelse:\\n    a = b = c = False\\n    for i in range(0, 26):\\n        if chr(ord('A') + i) in s:\\n            a = True\\n        if chr(ord('a') + i) in s:\\n            b = True\\n        if i < 10 and chr(ord('0') + i) in s:\\n            c = True\\n    if a and b and c:\\n        print(\\\"Correct\\\")\\n    else:\\n        print(\\\"Too weak\\\")\", \"S = input()\\nlower, upper, number = False, False, False\\nL, U, N = [str(i) for i in range(10)], [chr(i) for i in range(ord('A'), ord('Z') + 1)], [chr(i) for i in range(ord('a'), ord('z') + 1)]\\n\\nfor letter in S:\\n    lower = lower or (letter in L)\\n    upper = upper or (letter in U)\\n    number = number or (letter in N)\\nif (len(S) >= 5 and lower and upper and number):\\n    print (\\\"Correct\\\")\\nelse:\\n    print (\\\"Too weak\\\")\\n\", \"from math import*\\n\\ndef add_bit(n, k):\\n    return n | (1 << k)\\n\\ns = input().strip()\\nans = 0\\n\\nif len(s) >= 5:\\n    ans = add_bit(ans, 0)\\n\\nfor i in range(len(s)):\\n    if s[i] >= 'a' and s[i] <= 'z':\\n        ans = add_bit(ans, 1)\\n    if s[i] >= 'A' and s[i] <= 'Z':\\n        ans = add_bit(ans, 2)\\n    if s[i] >= '0' and s[i] <= '9':\\n        ans = add_bit(ans, 3)\\n\\nif ans == 15:\\n    print('Correct')\\nelse:\\n    print('Too weak')\", \"import re\\n\\ndef getAnswer(x):\\n    if len(x) < 5:\\n        return \\\"Too weak\\\"\\n    if (re.search('[A-Z]',x)) == None:\\n        return \\\"Too weak\\\"\\n    if (re.search('[a-z]',x)) == None:\\n        return \\\"Too weak\\\"\\n    if (re.search('[0-9]',x)) == None:\\n        return \\\"Too weak\\\"\\n    return \\\"Correct\\\"\\ndef main():\\n    x = input()\\n    print(getAnswer(x))\\n\\nmain()\", \"S = input()\\na = len(S) >= 5\\nb, c, d = 0, 0, 0\\nfor i in S:\\n    if 'A' <= i <= 'Z':\\n        b = 1\\n    if 'a' <= i <= 'z':\\n        c = 1\\n    if '0' <= i <= '9':\\n        d = 1\\nif a + b + c + d == 4:\\n    print(\\\"Correct\\\")\\nelse:\\n    print(\\\"Too weak\\\")\\n\", \"def main():\\n    a = input()\\n    lower = False\\n    upper = False\\n    digit = False\\n    if len(a) >= 5:\\n        for c in a:\\n            lower = lower or c.islower()\\n            upper = upper or c.isupper()\\n            digit = digit or c.isdigit()\\n        if lower and upper and digit:\\n            print(\\\"Correct\\\")\\n        else:\\n            print(\\\"Too weak\\\")\\n    else:\\n        print(\\\"Too weak\\\")\\n\\nmain()\", \"print('Correct' if (lambda s: len(s) >= 5 and any([elem.isupper() for elem in s]) and any([elem.islower() for elem in s]) and any([elem.isdigit() for elem in s]))(input()) else 'Too weak')\\n\", \"import string\\ns = input()\\nf1 = f2 = f3 = False\\nfor c in s:\\n    if c in string.ascii_lowercase:\\n        f1 = True\\n    if c in string.ascii_uppercase:\\n        f2 = True\\n    if c in string.digits:\\n        f3 = True\\nif len(s) >= 5 and f1 and f2 and f3:\\n    print('Correct')\\nelse:\\n    print('Too weak')\", \"password=input()\\na=b=c=0\\nif len(password)>4:\\n    for i in password:\\n        if a==0 and (ord(i) in range(48,58)): a=1\\n        if b==0 and (ord(i) in range(65,91)): b=1\\n        if c==0 and (ord(i) in range(97,123)): c=1\\n        if a+b+c>2:\\n            print('Correct')\\n            return\\nprint ('Too weak')\\n\\n\", \"s = input().strip()\\nalp = set([chr(i) for i in range(ord('a'), ord('z') + 1)])\\nupper = set([chr(i) for i in range(ord('A'), ord('Z') + 1)])\\nnum = set([str(i) for i in range(10)])\\nif len(s) >= 5:\\n    s = set(list(s))\\n    if len(s & alp) > 0 and len(s & upper) > 0 and len(s & num) > 0:\\n        print('Correct')\\n    else:\\n        print('Too weak')\\nelse:\\n    print('Too weak')\"]",
  "input_output": "{\n  \"inputs\": [\n    \"abacaba\\n\",\n    \"X12345\\n\",\n    \"CONTEST_is_STARTED!!11\\n\",\n    \"1zA__\\n\",\n    \"1zA_\\n\",\n    \"zA___\\n\",\n    \"1A___\\n\",\n    \"z1___\\n\",\n    \"0\\n\",\n    \"_\\n\",\n    \"a\\n\",\n    \"D\\n\",\n    \"_\\n\",\n    \"?\\n\",\n    \"?\\n\",\n    \"._,.!.,...?_,!.\\n\",\n    \"!_?_,?,?.,.,_!!!.!,.__,?!!,_!,?_,!??,?!..._!?_,?_!,?_.,._,,_.,.\\n\",\n    \"?..!.,,?,__.,...????_???__!,?...?.,,,,___!,.!,_,,_,??!_?_,!!?_!_??.?,.!!?_?_.,!\\n\",\n    \"XZX\\n\",\n    \"R\\n\",\n    \"H.FZ\\n\",\n    \"KSHMICWPK,LSBM_JVZ!IPDYDG_GOPCHXFJTKJBIFY,FPHMY,CB?PZEAG..,X,.GFHPIDBB,IQ?MZ\\n\",\n    \"EFHI,,Y?HMMUI,,FJGAY?FYPBJQMYM!DZHLFCTFWT?JOPDW,S_!OR?ATT?RWFBMAAKUHIDMHSD?LCZQY!UD_CGYGBAIRDPICYS\\n\",\n    \"T,NDMUYCCXH_L_FJHMCCAGX_XSCPGOUZSY?D?CNDSYRITYS,VAT!PJVKNTBMXGGRYKACLYU.RJQ_?UWKXYIDE_AE\\n\",\n    \"y\\n\",\n    \"qgw\\n\",\n    \"g\\n\",\n    \"loaray\\n\",\n    \"d_iymyvxolmjayhwpedocopqwmy.oalrdg!_n?.lrxpamhygps?kkzxydsbcaihfs.j?eu!oszjsy.vzu?!vs.bprz_j\\n\",\n    \"txguglvclyillwnono\\n\",\n    \"FwX\\n\",\n    \"Zi\\n\",\n    \"PodE\\n\",\n    \"SdoOuJ?nj_wJyf\\n\",\n    \"MhnfZjsUyXYw?f?ubKA\\n\",\n    \"CpWxDVzwHfYFfoXNtXMFuAZr\\n\",\n    \"9.,0\\n\",\n    \"5,8\\n\",\n    \"7\\n\",\n    \"34__39_02!,!,82!129!2!566\\n\",\n    \"96156027.65935663!_87!,44,..7914_!0_1,.4!!62!.8350!17_282!!9.2584,!!7__51.526.7\\n\",\n    \"90328_\\n\",\n    \"B9\\n\",\n    \"P1H\\n\",\n    \"J2\\n\",\n    \"M6BCAKW!85OSYX1D?.53KDXP42F\\n\",\n    \"C672F429Y8X6XU7S,.K9111UD3232YXT81S4!729ER7DZ.J7U1R_7VG6.FQO,LDH\\n\",\n    \"W2PI__!.O91H8OFY6AB__R30L9XOU8800?ZUD84L5KT99818NFNE35V.8LJJ5P2MM.B6B\\n\",\n    \"z1\\n\",\n    \"p1j\\n\",\n    \"j9\\n\",\n    \"v8eycoylzv0qkix5mfs_nhkn6k!?ovrk9!b69zy!4frc?k\\n\",\n    \"l4!m_44kpw8.jg!?oh,?y5oraw1tg7_x1.osl0!ny?_aihzhtt0e2!mr92tnk0es!1f,9he40_usa6c50l\\n\",\n    \"d4r!ak.igzhnu!boghwd6jl\\n\",\n    \"It0\\n\",\n    \"Yb1x\\n\",\n    \"Qf7\\n\",\n    \"Vu7jQU8.!FvHBYTsDp6AphaGfnEmySP9te\\n\",\n    \"Ka4hGE,vkvNQbNolnfwp\\n\",\n    \"Ee9oluD?amNItsjeQVtOjwj4w_ALCRh7F3eaZah\\n\",\n    \"Um3Fj?QLhNuRE_Gx0cjMLOkGCm\\n\",\n    \"Oq2LYmV9HmlaW\\n\",\n    \"Cq7r3Wrb.lDb_0wsf7!ruUUGSf08RkxD?VsBEDdyE?SHK73TFFy0f8gmcATqGafgTv8OOg8or2HyMPIPiQ2Hsx8q5rn3_WZe\\n\",\n    \"Wx4p1fOrEMDlQpTlIx0p.1cnFD7BnX2K8?_dNLh4cQBx_Zqsv83BnL5hGKNcBE9g3QB,!fmSvgBeQ_qiH7\\n\",\n    \"k673,\\n\",\n    \"LzuYQ\\n\",\n    \"Pasq!\\n\",\n    \"x5hve\\n\",\n    \"b27fk\\n\",\n    \"h6y1l\\n\",\n    \"i9nij\\n\",\n    \"Gf5Q6\\n\",\n    \"Uf24o\\n\",\n    \"Oj9vu\\n\",\n    \"c7jqaudcqmv8o7zvb5x_gp6zcgl6nwr7tz5or!28.tj8s1m2.wxz5a4id03!rq07?662vy.7.p5?vk2f2mc7ag8q3861rgd0rmbr\\n\",\n    \"i6a.,8jb,n0kv4.1!7h?p.96pnhhgy6cl7dg7e4o6o384ys3z.t71kkq,,w,oqi4?u,,m5!rzu6wym_4hm,ohjy!.vvksl?pt,,1\\n\",\n    \"M10V_MN_1K8YX2LA!89EYV7!5V9?,.IDHDP6JEC.OGLY.180LMZ6KW3Z5E17IT94ZNHS!79GN09Q6LH0,F3AYNKP?KM,QP_?XRD6\\n\",\n    \"Hi7zYuVXCPhaho68YgCMzzgLILM6toQTJq8akMqqrnUn6ZCD36iA1yVVpvlsIiMpCu!1QZd4ycIrQ5Kcrhk5k0jTrwdAAEEP_T2f\\n\",\n    \"Bk2Q38vDSW5JqYu.077iYC.9YoiPc!Dh6FJWOVze6?YXiFjPNa4F1RG?154m9mY2jQobBnbxM,cDV8l1UX1?v?p.tTYIyJO!NYmE\\n\",\n    \"Ro1HcZ.piN,JRR88DLh,WtW!pbFM076?wCSbqfK7N2s5zUySFBtzk7HV,BxHXR0zALAr016z5jvvB.WUdEcKgYFav5TygwHQC..C\\n\",\n    \"!?.,_\\n\"\n  ],\n  \"outputs\": [\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Too weak\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Correct\\n\",\n    \"Too weak\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/411/A",
  "starter_code": ""
}