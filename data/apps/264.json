{
  "task_id": "APPS/264",
  "problem_id": 264,
  "prompt": "There is an airplane which has n rows from front to back. There will be m people boarding this airplane.\n\nThis airplane has an entrance at the very front and very back of the plane.\n\nEach person has some assigned seat. It is possible for multiple people to have the same assigned seat. The people will then board the plane one by one starting with person 1. Each person can independently choose either the front entrance or back entrance to enter the plane.\n\nWhen a person walks into the plane, they walk directly to their assigned seat and will try to sit in it. If it is occupied, they will continue walking in the direction they walked in until they are at empty seat - they will take the earliest empty seat that they can find. If they get to the end of the row without finding a seat, they will be angry.\n\nFind the number of ways to assign tickets to the passengers and board the plane without anyone getting angry. Two ways are different if there exists a passenger who chose a different entrance in both ways, or the assigned seat is different. Print this count modulo 10^9 + 7.\n\n\n-----Input-----\n\nThe first line of input will contain two integers n, m (1 \u2264 m \u2264 n \u2264 1 000 000), the number of seats, and the number of passengers, respectively.\n\n\n-----Output-----\n\nPrint a single number, the number of ways, modulo 10^9 + 7.\n\n\n-----Example-----\nInput\n3 3\n\nOutput\n128\n\n\n\n-----Note-----\n\nHere, we will denote a passenger by which seat they were assigned, and which side they came from (either \"F\" or \"B\" for front or back, respectively).\n\nFor example, one valid way is 3B, 3B, 3B (i.e. all passengers were assigned seat 3 and came from the back entrance). Another valid way would be 2F, 1B, 3F.\n\nOne invalid way would be 2B, 2B, 2B, since the third passenger would get to the front without finding a seat.",
  "solutions": "[\"MOD = 10 ** 9 + 7\\nn, m = input().split(' ')\\nn = int(n)\\nm = int(m)\\nans = pow(2 * (n + 1), m, MOD)\\nans = (ans * (n + 1 - m)) % MOD\\nans = (ans * pow(n + 1, MOD - 2, MOD)) % MOD\\nprint(ans)\\n\", \"mod = 1000000007\\ndef power(a, p):\\n    res = 1\\n    while p > 0:\\n        if p % 2 == 1:\\n            res = (res * a) % mod\\n        a = (a * a) % mod\\n        p //= 2\\n    return res\\nn, m = map(int, input().split())\\nn += 1\\nres = (power(n * 2, m - 1)) * (n - m) * 2\\nprint(res % mod)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3 3\\n\",\n    \"1000000 1000000\\n\",\n    \"1000000 500000\\n\",\n    \"1 1\\n\",\n    \"10 1\\n\",\n    \"285042 201091\\n\",\n    \"896437 604720\\n\",\n    \"284114 73851\\n\",\n    \"541826 316395\\n\",\n    \"353093 96536\\n\",\n    \"540898 158491\\n\",\n    \"858309 773589\\n\",\n    \"56322 42432\\n\",\n    \"461466 56468\\n\",\n    \"29102 1503\\n\",\n    \"42800 41731\\n\",\n    \"235175 92933\\n\",\n    \"921643 744360\\n\",\n    \"619924 583916\\n\",\n    \"43657 852\\n\",\n    \"4672 3086\\n\",\n    \"197047 148580\\n\",\n    \"693851 210584\\n\",\n    \"951563 122804\\n\",\n    \"175236 173750\\n\",\n    \"784160 282537\\n\",\n    \"976535 433238\\n\",\n    \"827825 745802\\n\",\n    \"361284 5729\\n\",\n    \"189791 36882\\n\",\n    \"84609 75872\\n\",\n    \"938407 501656\\n\",\n    \"600033 306982\\n\",\n    \"857745 223544\\n\",\n    \"321370 271684\\n\",\n    \"41872 1808\\n\",\n    \"234247 67712\\n\",\n    \"734006 258894\\n\",\n    \"991718 318936\\n\",\n    \"335925 159533\\n\",\n    \"3745 1612\\n\",\n    \"196119 47809\\n\",\n    \"506214 320883\\n\",\n    \"960651 256313\\n\",\n    \"107210 13886\\n\",\n    \"124763 65049\\n\",\n    \"491959 252209\\n\",\n    \"684333 613651\\n\",\n    \"897899 478680\\n\",\n    \"69082 16337\\n\",\n    \"261457 212062\\n\",\n    \"453831 290298\\n\",\n    \"646205 361804\\n\",\n    \"838580 174298\\n\",\n    \"364922 343089\\n\",\n    \"30945 5665\\n\",\n    \"749671 469976\\n\",\n    \"942045 878421\\n\",\n    \"287729 11831\\n\",\n    \"144546 128076\\n\",\n    \"519169 430233\\n\",\n    \"711543 136245\\n\",\n    \"903917 186673\\n\",\n    \"252919 105355\\n\",\n    \"106282 12802\\n\"\n  ],\n  \"outputs\": [\n    \"128\\n\",\n    \"233176135\\n\",\n    \"211837745\\n\",\n    \"2\\n\",\n    \"20\\n\",\n    \"348727840\\n\",\n    \"531995995\\n\",\n    \"935093233\\n\",\n    \"365726326\\n\",\n    \"708633906\\n\",\n    \"698076231\\n\",\n    \"875072331\\n\",\n    \"905316418\\n\",\n    \"616418222\\n\",\n    \"211174820\\n\",\n    \"178922948\\n\",\n    \"704139178\\n\",\n    \"959987426\\n\",\n    \"765568563\\n\",\n    \"898633472\\n\",\n    \"648722588\\n\",\n    \"132050966\\n\",\n    \"800890261\\n\",\n    \"202475849\\n\",\n    \"291135880\\n\",\n    \"252488614\\n\",\n    \"30881486\\n\",\n    \"28515641\\n\",\n    \"121235105\\n\",\n    \"503014832\\n\",\n    \"860171419\\n\",\n    \"321500030\\n\",\n    \"214582457\\n\",\n    \"778808942\\n\",\n    \"624745554\\n\",\n    \"389891349\\n\",\n    \"610314478\\n\",\n    \"822257297\\n\",\n    \"688082968\\n\",\n    \"401609204\\n\",\n    \"100232679\\n\",\n    \"831275903\\n\",\n    \"31547174\\n\",\n    \"500076538\\n\",\n    \"179122019\\n\",\n    \"454953468\\n\",\n    \"696157573\\n\",\n    \"980362331\\n\",\n    \"889928809\\n\",\n    \"24188373\\n\",\n    \"866036254\\n\",\n    \"552613881\\n\",\n    \"801930294\\n\",\n    \"488250696\\n\",\n    \"140158453\\n\",\n    \"758927360\\n\",\n    \"673292024\\n\",\n    \"214250096\\n\",\n    \"625218018\\n\",\n    \"232200563\\n\",\n    \"44864151\\n\",\n    \"40200989\\n\",\n    \"762310964\\n\",\n    \"941982792\\n\",\n    \"237272767\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/838/D",
  "starter_code": ""
}