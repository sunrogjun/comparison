{
  "task_id": "APPS/143",
  "problem_id": 143,
  "prompt": "Someone gave Alyona an array containing n positive integers a_1, a_2, ..., a_{n}. In one operation, Alyona can choose any element of the array and decrease it, i.e. replace with any positive integer that is smaller than the current one. Alyona can repeat this operation as many times as she wants. In particular, she may not apply any operation to the array at all.\n\nFormally, after applying some operations Alyona will get an array of n positive integers b_1, b_2, ..., b_{n} such that 1 \u2264 b_{i} \u2264 a_{i} for every 1 \u2264 i \u2264 n. Your task is to determine the maximum possible value of mex of this array.\n\nMex of an array in this problem is the minimum positive integer that doesn't appear in this array. For example, mex of the array containing 1, 3 and 4 is equal to 2, while mex of the array containing 2, 3 and 2 is equal to 1.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 100 000)\u00a0\u2014 the number of elements in the Alyona's array.\n\nThe second line of the input contains n integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint one positive integer\u00a0\u2014 the maximum possible value of mex of the array after Alyona applies some (possibly none) operations.\n\n\n-----Examples-----\nInput\n5\n1 3 3 3 6\n\nOutput\n5\n\nInput\n2\n2 1\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample case if one will decrease the second element value to 2 and the fifth element value to 4 then the mex value of resulting array 1 2 3 3 4 will be equal to 5.\n\nTo reach the answer to the second sample case one must not decrease any of the array elements.",
  "solutions": "[\"x=int(input())\\nl=list(map(int, input().split(' ')))\\nl.sort()\\na=1\\nfor i in l:\\n    if i>=a:\\n        a+=1\\nprint(a)\\n\", \"n = int(input())\\nA = [int(x) for x in input().split()]\\nA.sort()\\nmex = 1\\nfor i in range(n):\\n    if A[i] >= mex:\\n        A[i] = mex\\n        mex += 1\\nprint(mex)\\n\\n\\n\", \"n = int(input())\\nc = list(map(int, input().split()))\\nc.sort()\\nm = 1\\nfor i in range(n):\\n    if m <= c[i]:\\n        c[i] = m\\n        m += 1\\nprint(m)\\n\", \"n = int(input())\\nai = list(map(int,input().split()))\\nai.sort()\\nnum = n\\nans = 0\\nfor i in ai:\\n    num -= 1\\n    ans += 1\\n    ans = min(i,ans)\\nprint(ans+1)\\n\", \"\\nn = int(input())\\ntab = sorted(list(map(int, input().split())))\\ncmex = 1\\nfor num in tab:\\n    if num >= cmex:\\n        cmex += 1\\n\\nprint(cmex)\\n\", \"from collections import defaultdict, deque, Counter, OrderedDict\\n\\ndef main():\\n    n = int(input())\\n    l = sorted([int(i) for i in input().split()])\\n    c = 1\\n    for i in l:\\n        if i >= c:\\n            c += 1\\n    print(c)\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\ndef __starting_point():\\n    \\\"\\\"\\\"sys.setrecursionlimit(400000)\\n    threading.stack_size(40960000)\\n    thread = threading.Thread(target=main)\\n    thread.start()\\\"\\\"\\\"\\n    main()\\n__starting_point()\", \"n = int(input())\\ndata = sorted(list(map(int, input().split())))\\nmin1 = 10 ** 9 + 1\\nfor i in range(n):\\n    data[i] = min(data[i], i + 1, min1)\\n    min1 = data[i] + 1\\nprint(data[-1] + 1)\", \"n = int(input())\\na = list(map(int, input().split()))\\na.sort()\\nans = n + 1\\n\\ni = 0\\nj = 1\\n\\nwhile i < n:\\n    if a[i] >= j:\\n        i += 1\\n        j += 1\\n    else:\\n        while i < n and a[i] < j:\\n            i += 1\\n        if i != n:\\n            j += 1\\n            i += 1\\n\\nprint(j)\\n\", \"n = int(input())\\n\\nmex = 1\\nfor num in sorted(map(int, input().split())):\\n    if num >= mex:\\n        mex += 1\\n\\nprint(mex)\", \"import sys\\n\\n\\ndef main():\\n    n = int(sys.stdin.readline())\\n    x = list(map(int, sys.stdin.readline().split()))\\n    x.sort()\\n\\n    c = 1\\n    for i in range(n):\\n        if x[i] >= c:\\n            c+=1\\n    print(c)\\n\\nmain()\\n\", \"n = int(input())\\nour = list(map(int, input().split()))\\nour.sort()\\nour[0] = 1\\nfor i in range(1, n):\\n    if our[i] > our[i - 1]:\\n        our[i] = our[i - 1] + 1\\nprint(our[-1] + 1)\", \"read = lambda: map(int, input().split())\\nn = int(input())\\na = sorted(read())\\nk = 1\\nfor i in range(n):\\n    if a[i] > k:\\n        a[i] = k\\n        k += 1\\n    elif a[i] == k:\\n        k += 1\\nprint(k)\", \"n = int(input())\\na = sorted(int(x) for x in input().split())\\nm = 0\\nfor i in range(1, n+1):\\n    if i > a[i-1] + m:\\n        m = i - a[i-1]\\nprint(n-m+1)\", \"n=int(input())\\na=sorted(map(int,input().split()))\\nans=1\\nfor i in range(n):\\n    if a[i]>=ans: ans+=1\\nprint(ans)\", \"n = int(input())\\nl = list(map(int,input().split()))\\nl.sort()\\nd = set()\\nl[0] = 1\\nfor i in range(1,n):\\n    l[i] = min(l[i-1] + 1,l[i])\\nprint(l[n-1]+1)\", \"n=int(input())\\nl=sorted(map(int,input().split()))\\nans=2\\nl[0]=1\\nfor i in range(1,n):\\n    if l[i]>l[i-1]: l[i]=l[i-1]+1; ans=l[i]+1\\nprint(ans)\", \"n = int(input())\\na = list(map(int, input().split()))\\na.sort()\\n\\nmex = 1\\nmiss = False\\n\\ni = 0\\nwhile i < n:\\n    while i < n and a[i] < mex:\\n        i += 1\\n\\n    if i != n:\\n        mex += 1\\n\\n    i += 1\\n\\nprint(mex)\\n\", \"n=int(input())\\nnombres=list(map(int,input().split()))\\n\\nnombres.sort()\\n\\ni=0\\nentierSuivant=1\\nwhile i!=n:\\n    if nombres[i]>entierSuivant:\\n        nombres[i]=entierSuivant\\n        entierSuivant+=1\\n    elif entierSuivant==nombres[i]:\\n        entierSuivant+=1\\n    i+=1\\n\\nprint(entierSuivant)\", \"#!/usr/bin/env python3\\n\\nfrom collections import Counter\\n\\ntry:\\n    while True:\\n        n = int(input())\\n        a = sorted(map(int, input().split()))\\n        t = 1\\n        for x in a:\\n            t = min(t, x) + 1\\n\\n        print(t)\\n\\nexcept EOFError:\\n    pass\\n\", \"n = int(input())\\narr = [int(x) for x in input().split()]\\narr.sort()\\npoint = 0\\nfor i in range(n):\\n    if(point<arr[i]):\\n        point += 1\\nprint(point+1)\", \"n = int(input())\\nL = sorted([int(i) for i in input().split()])\\n\\ni = 0\\nmex = 1\\nwhile i < n:\\n    if mex <= L[i]:\\n        mex += 1\\n    i += 1\\nprint(mex)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\na.sort()\\n\\ntarget = 1\\nfor i in range(n):\\n    if a[i] >= target:\\n        target += 1\\n\\nprint(target)\\n\", \"import sys\\nn=int(input())\\nz=list(map(int,input().split()))\\nz.sort()\\nlast=0\\nfor i in range(n):\\n    if z[i]-last>=2:\\n        z[i]=last+1\\n        last+=1\\n    else:\\n        last=z[i]\\nprint(z[-1]+1)\", \"n = int(input())\\narr = list(map(int, input().split()))\\narr.sort()\\nmex = 1\\nfor i in range(n):\\n    if arr[i] >= mex:\\n        arr[i] = mex\\n        mex = mex + 1\\nprint(mex)\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n\\nimport time\\n\\nn   = int(input())\\na   = [int(i) for i in input().split()]\\n\\nstart = time.time()\\n\\na   = sorted(a)\\n\\nnow = 1\\n\\nfor i in range(n):\\n    if a[i] >= now:\\n        a[i] = now\\n        now  = now + 1\\n\\nprint(now)\\nfinish = time.time()\\n#print(finish - start)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5\\n1 3 3 3 6\\n\",\n    \"2\\n2 1\\n\",\n    \"1\\n1\\n\",\n    \"1\\n1000000000\\n\",\n    \"1\\n2\\n\",\n    \"2\\n1 1\\n\",\n    \"2\\n1 3\\n\",\n    \"2\\n2 2\\n\",\n    \"2\\n2 3\\n\",\n    \"2\\n3 3\\n\",\n    \"3\\n1 1 1\\n\",\n    \"3\\n2 1 1\\n\",\n    \"3\\n3 1 1\\n\",\n    \"3\\n1 1 4\\n\",\n    \"3\\n2 1 2\\n\",\n    \"3\\n3 2 1\\n\",\n    \"3\\n2 4 1\\n\",\n    \"3\\n3 3 1\\n\",\n    \"3\\n1 3 4\\n\",\n    \"3\\n4 1 4\\n\",\n    \"3\\n2 2 2\\n\",\n    \"3\\n3 2 2\\n\",\n    \"3\\n4 2 2\\n\",\n    \"3\\n2 3 3\\n\",\n    \"3\\n4 2 3\\n\",\n    \"3\\n4 4 2\\n\",\n    \"3\\n3 3 3\\n\",\n    \"3\\n4 3 3\\n\",\n    \"3\\n4 3 4\\n\",\n    \"3\\n4 4 4\\n\",\n    \"4\\n1 1 1 1\\n\",\n    \"4\\n1 1 2 1\\n\",\n    \"4\\n1 1 3 1\\n\",\n    \"4\\n1 4 1 1\\n\",\n    \"4\\n1 2 1 2\\n\",\n    \"4\\n1 3 2 1\\n\",\n    \"4\\n2 1 4 1\\n\",\n    \"4\\n3 3 1 1\\n\",\n    \"4\\n1 3 4 1\\n\",\n    \"4\\n1 1 4 4\\n\",\n    \"4\\n2 2 2 1\\n\",\n    \"4\\n1 2 2 3\\n\",\n    \"4\\n2 4 1 2\\n\",\n    \"4\\n3 3 1 2\\n\",\n    \"4\\n2 3 4 1\\n\",\n    \"4\\n1 4 2 4\\n\",\n    \"4\\n3 1 3 3\\n\",\n    \"4\\n3 4 3 1\\n\",\n    \"4\\n1 4 4 3\\n\",\n    \"4\\n4 1 4 4\\n\",\n    \"4\\n2 2 2 2\\n\",\n    \"4\\n2 2 3 2\\n\",\n    \"4\\n2 2 2 4\\n\",\n    \"4\\n2 2 3 3\\n\",\n    \"4\\n2 2 3 4\\n\",\n    \"4\\n2 4 4 2\\n\",\n    \"4\\n2 3 3 3\\n\",\n    \"4\\n2 4 3 3\\n\",\n    \"4\\n4 4 2 3\\n\",\n    \"4\\n4 4 4 2\\n\",\n    \"4\\n3 3 3 3\\n\",\n    \"4\\n3 3 3 4\\n\",\n    \"4\\n4 3 3 4\\n\",\n    \"4\\n4 4 3 4\\n\",\n    \"4\\n4 4 4 4\\n\",\n    \"11\\n1 1 1 1 1 1 1 1 1 3 3\\n\",\n    \"20\\n1 1 1 1 1 1 1 1 1 1 8 8 8 8 8 8 8 8 8 8\\n\",\n    \"4\\n2 2 2 3\\n\",\n    \"3\\n1 1 2\\n\",\n    \"15\\n1 2 2 20 23 25 28 60 66 71 76 77 79 99 100\\n\",\n    \"7\\n1 2 2 2 5 5 1\\n\",\n    \"4\\n1 1 1 2\\n\",\n    \"5\\n1 1 1 1 10000\\n\",\n    \"5\\n1 1 1 1 2\\n\",\n    \"7\\n1 3 3 3 3 3 6\\n\",\n    \"4\\n1 1 1 3\\n\",\n    \"10\\n1 1 1 1 1 1 1 1 1 100\\n\",\n    \"4\\n1 1 2 2\\n\",\n    \"5\\n1 1 1 3 4\\n\",\n    \"8\\n1 1 1 1 2 2 3 40\\n\",\n    \"5\\n1 1 1 1 1\\n\",\n    \"7\\n1 2 2 2 2 2 4\\n\",\n    \"10\\n1 1 1 10000000 10000000 10000000 10000000 10000000 10000000 10000000\\n\",\n    \"10\\n1 1 1 1 1 1 1 1 2 3\\n\",\n    \"4\\n8 8 8 8\\n\",\n    \"5\\n5 6 6 6 7\\n\"\n  ],\n  \"outputs\": [\n    \"5\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"15\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/682/B",
  "starter_code": ""
}