{
  "task_id": "APPS/183",
  "problem_id": 183,
  "prompt": "Amr doesn't like Maths as he finds it really boring, so he usually sleeps in Maths lectures. But one day the teacher suspected that Amr is sleeping and asked him a question to make sure he wasn't.\n\nFirst he gave Amr two positive integers n and k. Then he asked Amr, how many integer numbers x > 0 exist such that:  Decimal representation of x (without leading zeroes) consists of exactly n digits;  There exists some integer y > 0 such that:   $y \\operatorname{mod} k = 0$;  decimal representation of y is a suffix of decimal representation of x.  \n\nAs the answer to this question may be pretty huge the teacher asked Amr to output only its remainder modulo a number m.\n\nCan you help Amr escape this embarrassing situation?\n\n\n-----Input-----\n\nInput consists of three integers n, k, m (1 \u2264 n \u2264 1000, 1 \u2264 k \u2264 100, 1 \u2264 m \u2264 10^9).\n\n\n-----Output-----\n\nPrint the required number modulo m.\n\n\n-----Examples-----\nInput\n1 2 1000\n\nOutput\n4\nInput\n2 2 1000\n\nOutput\n45\nInput\n5 3 1103\n\nOutput\n590\n\n\n-----Note-----\n\nA suffix of a string S is a non-empty string that can be obtained by removing some number (possibly, zero) of first characters from S.",
  "solutions": "[\"n,k,m=list(map(int,input().split()))\\nd,r,p,P=0,0,1%k,(10**(n-1))*9\\nF=[0]*k\\nF[0]=1\\nwhile d<n:\\n\\td+=1\\n\\tP//=10\\n\\tE=[0]*k\\n\\tif P==0:P=1\\n\\ti=1\\n#\\tprint(\\\"E=\\\",E)\\n#\\tprint(\\\"F=\\\",F)\\n\\twhile i<10:\\n\\t\\tj=(-i*p)%k\\n\\t\\tf=0\\n\\t\\twhile f<k:\\n\\t\\t\\tE[f]+=F[j]\\n\\t\\t\\tf+=1\\n\\t\\t\\tj+=1\\n\\t\\t\\tif j==k:j=0\\n\\t\\ti+=1\\n\\tr+=E[0]*P\\n\\tp=p*10%k\\n\\tE[0]=0\\n\\ti=1\\n\\twhile i<k:\\n\\t\\tF[i]=(F[i]+E[i])%m\\n\\t\\ti+=1\\n#\\tprint(E,P)\\n\\tF[0]=1\\n#print(\\\"r=\\\",r)\\nprint(r%m)\\n#i=10**n\\n#j=10**(n-1)\\n#r=0\\n#F=[0]*k\\n#while j<i:\\n#\\tx=str(j)\\n#\\tl=len(x)\\n#\\ta=l\\n#\\twhile a:\\n#\\t\\ta-=1\\n#\\t\\ts=int(x[a:l])\\n#\\t\\tif s>0 and s%k==0:\\n#\\t\\t\\tr+=1\\n#\\t\\t\\tbreak\\n#\\tj+=1\\n#print()\\n#print(r)\\n\\\"\\\"\\\"\\n3 6 9\\n13 16 19\\t12 15 18\\n23 26 29\\t21 24 27\\n33 36 39\\t30\\n43 46 49\\t42 45 48\\n53 56 59\\t51 54 57\\n63 66 69\\t60\\n73 76 79\\t72 75 78\\n83 86 89\\t81 84 87\\n93 96 99\\t90\\n\\\"\\\"\\\"\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"def get_input():\\n    hahaha=input()\\n    (n,k,m)=hahaha.split(sep=None, maxsplit=1000)\\n    return (int(n),int(k),int(m))\\n(n,k,m)=get_input()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\\n\", \"from bisect import bisect_left as bl\\nfrom bisect import bisect_right as br\\nimport heapq\\nimport math\\nfrom collections import *\\nfrom functools import reduce,cmp_to_key\\nimport sys\\ninput = sys.stdin.readline\\n \\n# M = mod = 998244353\\ndef factors(n):return sorted(list(set(reduce(list.__add__,([i, n//i] for i in range(1, int(n**0.5) + 1) if n % i == 0)))))\\n# def inv_mod(n):return pow(n, mod - 2, mod)\\n \\ndef li():return [int(i) for i in input().rstrip('\\\\n').split(' ')]\\ndef st():return input().rstrip('\\\\n')\\ndef val():return int(input().rstrip('\\\\n'))\\ndef li2():return [i for i in input().rstrip('\\\\n').split(' ')]\\ndef li3():return [int(i) for i in input().rstrip('\\\\n')]\\n\\ndef find(a,mod,n):\\n    rem = n - len(bin(a)[2:])\\n    ans = 0\\n    while rem:\\n        temp = min(rem,50)\\n        ans = (ans + 2**temp)%mod\\n        rem -= temp\\n    return ans\\n\\n\\nn, k, m = li()\\nf=[0 for i in range(k)]   \\ns=0\\nfor v in range(n):\\n    tens = 10**v%k\\n    f=[  (sum(   [f[(j+k-(x+1)*tens)%k] for x in range(9)] )+f[j])%m       for j in range(k)]\\n    for x in range(9):\\n        f[(x+1)*tens%k]+=1\\n    if n-v-1==0:\\n        s+=(f[0]%m)\\n    else:\\n        s+=f[0]*((10**(n-v-2)*9))%m\\n    f[0]=0\\nprint(s%m)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 2 1000\\n\",\n    \"2 2 1000\\n\",\n    \"5 3 1103\\n\",\n    \"2 17 10000\\n\",\n    \"3 9 10000\\n\",\n    \"6 64 941761822\\n\",\n    \"183 3 46847167\\n\",\n    \"472 44 364550669\\n\",\n    \"510 76 811693420\\n\",\n    \"783 30 602209107\\n\",\n    \"863 47 840397713\\n\",\n    \"422 22 411212542\\n\",\n    \"370 9 385481464\\n\",\n    \"312 41 915197716\\n\",\n    \"261 32 49719977\\n\",\n    \"434 6 56571287\\n\",\n    \"355 3 945669623\\n\",\n    \"905 71 999142682\\n\",\n    \"900 84 526417573\\n\",\n    \"387 3 521021345\\n\",\n    \"246 33 996704992\\n\",\n    \"443 29 106807555\\n\",\n    \"621 43 356382217\\n\",\n    \"782 84 643445347\\n\",\n    \"791 23 94030462\\n\",\n    \"543 98 508536403\\n\",\n    \"20 96 238661639\\n\",\n    \"845 60 888437864\\n\",\n    \"998 85 501663165\\n\",\n    \"123 72 56222855\\n\",\n    \"12 39 618421525\\n\",\n    \"462 35 144751085\\n\",\n    \"674 22 494819681\\n\",\n    \"650 66 579060528\\n\",\n    \"432 80 133016247\\n\",\n    \"176 70 196445230\\n\",\n    \"393 71 933802677\\n\",\n    \"37 92 9838905\\n\",\n    \"993 26 108974437\\n\",\n    \"433 93 36915724\\n\",\n    \"957 88 512982771\\n\",\n    \"170 94 82742818\\n\",\n    \"624 33 145653575\\n\",\n    \"56 48 961996131\\n\",\n    \"889 6 225765429\\n\",\n    \"1 93 727895661\\n\",\n    \"470 61 617307737\\n\",\n    \"520 94 712232167\\n\",\n    \"531 78 460047919\\n\",\n    \"776 32 523607700\\n\",\n    \"648 74 329538445\\n\",\n    \"885 6 743810885\\n\",\n    \"712 53 592302770\\n\",\n    \"426 72 589297447\\n\",\n    \"561 69 310141994\\n\",\n    \"604 97 26180786\\n\",\n    \"586 32 846994504\\n\",\n    \"514 67 260591607\\n\",\n    \"429 45 103817253\\n\",\n    \"767 27 364988776\\n\",\n    \"497 33 479662107\\n\",\n    \"262 71 404639692\\n\",\n    \"125 33 152527721\\n\",\n    \"857 98 70814341\\n\",\n    \"375 79 416634034\\n\",\n    \"886 10 902171654\\n\",\n    \"335 28 979397289\\n\",\n    \"769 30 474381420\\n\",\n    \"736 31 26855044\\n\",\n    \"891 7 814335325\\n\",\n    \"346 23 947672082\\n\",\n    \"1000 1 382210711\\n\",\n    \"1 1 10000\\n\",\n    \"1000 100 777767777\\n\",\n    \"1000 13 10619863\\n\",\n    \"1 100 1000\\n\",\n    \"11 11 11\\n\",\n    \"1 1 1\\n\",\n    \"1 2 2\\n\"\n  ],\n  \"outputs\": [\n    \"4\",\n    \"45\",\n    \"590\",\n    \"5\",\n    \"252\",\n    \"46530\",\n    \"29891566\",\n    \"122479316\",\n    \"546301720\",\n    \"279682329\",\n    \"433465398\",\n    \"63862621\",\n    \"163845824\",\n    \"912219984\",\n    \"19320923\",\n    \"56257936\",\n    \"219132384\",\n    \"825882209\",\n    \"281234824\",\n    \"435545521\",\n    \"385601286\",\n    \"7872021\",\n    \"251594310\",\n    \"208138038\",\n    \"41862326\",\n    \"117587951\",\n    \"198761428\",\n    \"193926448\",\n    \"145180249\",\n    \"32350599\",\n    \"115875938\",\n    \"79931198\",\n    \"19590614\",\n    \"224930740\",\n    \"25032672\",\n    \"64904804\",\n    \"366541352\",\n    \"7980021\",\n    \"87469631\",\n    \"20722839\",\n    \"161742313\",\n    \"1117330\",\n    \"99048377\",\n    \"199203510\",\n    \"193135878\",\n    \"0\",\n    \"428782123\",\n    \"199435818\",\n    \"117748792\",\n    \"309970800\",\n    \"177655063\",\n    \"297512873\",\n    \"147693148\",\n    \"316207784\",\n    \"245538618\",\n    \"6950800\",\n    \"579729448\",\n    \"88291586\",\n    \"41335161\",\n    \"259490746\",\n    \"84548778\",\n    \"93447345\",\n    \"59122415\",\n    \"58423075\",\n    \"175150318\",\n    \"134375492\",\n    \"675105408\",\n    \"157049322\",\n    \"24225276\",\n    \"611862019\",\n    \"59151110\",\n    \"372462157\",\n    \"9\",\n    \"577920877\",\n    \"8796170\",\n    \"0\",\n    \"7\",\n    \"0\",\n    \"0\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/507/D",
  "starter_code": ""
}