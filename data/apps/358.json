{
  "task_id": "APPS/358",
  "problem_id": 358,
  "prompt": "You've decided to carry out a survey in the theory of prime numbers. Let us remind you that a prime number is a positive integer that has exactly two distinct positive integer divisors.\n\nConsider positive integers a, a + 1, ..., b (a \u2264 b). You want to find the minimum integer l (1 \u2264 l \u2264 b - a + 1) such that for any integer x (a \u2264 x \u2264 b - l + 1) among l integers x, x + 1, ..., x + l - 1 there are at least k prime numbers. \n\nFind and print the required minimum l. If no value l meets the described limitations, print -1.\n\n\n-----Input-----\n\nA single line contains three space-separated integers a, b, k (1 \u2264 a, b, k \u2264 10^6;\u00a0a \u2264 b).\n\n\n-----Output-----\n\nIn a single line print a single integer \u2014 the required minimum l. If there's no solution, print -1.\n\n\n-----Examples-----\nInput\n2 4 2\n\nOutput\n3\n\nInput\n6 13 1\n\nOutput\n4\n\nInput\n1 4 3\n\nOutput\n-1",
  "solutions": "[\"def f(n):\\n    m = int(n ** 0.5) + 1\\n    t = [1] * (n + 1)\\n    for i in range(3, m):\\n        if t[i]: t[i * i :: 2 * i] = [0] * ((n - i * i) // (2 * i) + 1)\\n    return [2] + [i for i in range(3, n + 1, 2) if t[i]]\\n\\na, b, k = map(int, input().split())\\nn = 2000001\\n\\nt, p, x = [-1] * n, f(n), -1\\nk -= 1; b += 1\\n\\nfor i in range(len(p) - k):\\n    t[p[i]] = p[i + k] - p[i]\\n\\nt.reverse()\\nfor i in range(1, n):\\n    if t[i] < 0: t[i] = t[i - 1] + 1\\nt.reverse()\\n\\nfor i in range(a + 1, b):\\n    t[i] = max(t[i], t[i - 1])\\n\\nfor l in range(1, b - a + 1):\\n    if t[b - l] < l:\\n        x = l\\n        break\\nprint(x)\", \"def f(n):\\n    m, l = int(n ** 0.5) + 1, n - 1\\n    t = [1] * n\\n    for i in range(3, m):\\n        if t[i]: t[i * i :: 2 * i] = [0] * ((l - i * i) // (2 * i) + 1)\\n    return [2] + [i for i in range(3, n, 2) if t[i]]\\n\\na, b, k = map(int, input().split())\\nk -= 1; b += 1; n = b + 100\\n\\nt, p, x = [-1] * n, f(n), -1\\n\\nfor i in range(len(p) - k):\\n    t[p[i]] = p[i + k] - p[i]\\n\\nt.reverse()\\nfor i in range(1, n):\\n    if t[i] < 0: t[i] = t[i - 1] + 1\\nt.reverse()\\n\\nif len(p) > k: \\n    for i in range(a + 1, b):\\n        t[i] = max(t[i], t[i - 1])\\n\\n    for l in range(1, b - a + 1):\\n        if t[b - l] < l:\\n            x = l\\n            break\\nprint(x)\", \"def f(a, b):\\n    t = [1] * (b + 1)\\n    for i in range(3, int(b ** 0.5) + 1):\\n        if t[i]: t[i * i :: 2 * i] = [0] * ((b - i * i) // (2 * i) + 1)\\n    return [i for i in range(3, b + 1, 2) if t[i] and i > a]\\n\\na, b, k = map(int, input().split())\\n\\np = f(a - 1, b)\\nif 3 > a and b > 1: p = [2] + p\\n \\nif k > len(p): print(-1)\\nelif len(p) == k: print(max(p[k - 1] - a + 1, b - p[0] + 1))\\nelse: print(max(p[k - 1] - a + 1, b - p[len(p) - k] + 1, max(p[i + k] - p[i] for i in range(len(p) - k))))\", \"def main():\\n    def f(n):\\n        m = int(n ** 0.5) + 1\\n        t = [1] * (n + 1)\\n        for i in range(3, m):\\n            if t[i]: t[i * i :: 2 * i] = [0] * ((n - i * i) // (2 * i) + 1)\\n        return [2] + [i for i in range(3, n + 1, 2) if t[i]]\\n\\n    a, b, k = map(int, input().split())\\n    n = 1100001\\n    \\n    t, p, x = [-1] * n, f(n), -1\\n    k -= 1; b += 1\\n\\n    for i in range(len(p) - k):\\n        t[p[i]] = p[i + k] - p[i]\\n    for i in range(1,n):\\n        if t[-i] < 0:\\n            t[-i] = t[-i + 1] + 1\\n    for i in range(a + 1, b):\\n        t[i] = max(t[i], t[i - 1])\\n    for l in range(1, b - a + 1):\\n        if t[b - l] < l:\\n            x = l\\n            break\\n    print(x)\\nmain()\", \"def f(a, b):\\n    t = [1] * (b + 1)\\n    for i in range(3, int(b ** 0.5) + 1):\\n        if t[i]: t[i * i :: 2 * i] = [0] * ((b - i * i) // (2 * i) + 1)\\n    return [i for i in range(3, b + 1, 2) if t[i] and i > a]\\n\\na, b, k = map(int, input().split())\\n\\np = f(a - 1, b)\\nif 3 > a and b > 1: p = [2] + p\\n \\nif k > len(p): print(-1)\\nelif len(p) == k: print(max(p[k - 1] - a + 1, b - p[0] + 1))\\nelse: print(max(p[k - 1] - a + 1, b - p[len(p) - k] + 1, max(p[i + k] - p[i] for i in range(len(p) - k))))\", \"def f(a, b):\\n    t = [1] * (b + 1)\\n    for i in range(3, int(b ** 0.5) + 1):\\n        if t[i]: \\n            t[i * i :: 2 * i] = [0] * ((b - i * i) // (2 * i) + 1)\\n    return [i for i in range(3, b + 1, 2) if t[i] and i > a]\\n\\na, b, k = map(int, input().split())\\n\\np = f(a - 1, b)\\n\\nif 3 > a and b > 1: \\n    p = [2] + p\\n \\nif k > len(p): print(-1)\\n\\nelif len(p) == k: \\n    print(max(p[k - 1] - a + 1, b - p[0] + 1))\\n\\nelse: \\n    print(max(p[k - 1] - a + 1, b - p[len(p) - k] + 1, max(p[i + k] - p[i] for i in range(len(p) - k))))\", \"def f(a, b):\\n\\n    t = [1] * (b + 1)\\n\\n    for i in range(3, int(b ** 0.5) + 1):\\n\\n        if t[i]: t[i * i :: 2 * i] = [0] * ((b - i * i) // (2 * i) + 1)\\n\\n    return [i for i in range(3, b + 1, 2) if t[i] and i > a]\\n\\n\\n\\na, b, k = list(map(int, input().split()))\\n\\n\\n\\np = f(a - 1, b)\\n\\nif 3 > a and b > 1: p = [2] + p\\n\\n \\n\\nif k > len(p): print(-1)\\n\\nelif len(p) == k: print(max(p[k - 1] - a + 1, b - p[0] + 1))\\n\\nelse: print(max(p[k - 1] - a + 1, b - p[len(p) - k] + 1, max(p[i + k] - p[i] for i in range(len(p) - k))))\\n\\n\\n\\n# Made By Mostafa_Khaled\\n\", \"p=[1]*(1000005)\\np[0]=0\\np[1]=0\\nfor i in range(2,1001):\\n    if p[i]:\\n        for j in range(2*i,1000005,i):\\n            p[j]=0\\nfor i in range(1,1000001):\\n    p[i]+=p[i-1]\\na,b,k=map(int,input().split())\\nif p[b]-p[a-1]<k:\\n    print(-1);return()\\ni=j=a\\nl=0\\nwhile j<=b:\\n    if p[j]-p[i-1]<k:\\n        j+=1\\n    else:\\n        l=max(l,j-i+1)\\n        i+=1\\nl=max(j-i+1,l)\\nprint(l)\\n            \", \"I = lambda : map(int,input().split())\\nvisited = [False for i in range (10**6+1)]\\n#prime = {}\\na , b , k  =I()\\nvisited[1] = True\\nli = []\\nfor i in range(2,int(b**(0.5))+1) :\\n    #print(visited[:14])\\n    if visited[i] == False :\\n        #prime[i] = 1\\n        for j in range (i+i,b+1 , i) :\\n            visited[j] =True\\nfor i in range (a,b+1)   :\\n    if visited[i] == False :\\n        li.append(i)\\nans = 0 \\nmaxx = 0 \\n#print(li)\\nt1 = a\\n#print(li)\\nif len(li) < k :\\n    print(\\\"-1\\\");return\\nn = len(li)\\nfor i in range (n-k+1) :\\n    ans = li[i+k-1] -t1 + 1\\n    #print(ans)\\n    maxx = max(maxx,ans)\\n    t1 = li[i] + 1\\nww = b - li[-k] + 1\\n#print(ww)\\nmaxx = max(ww,maxx)\\nprint(maxx)\", \"import sys\\nfrom math import *\\n\\ndef minp():\\n\\treturn sys.stdin.readline().strip()\\n\\ndef mint():\\n\\treturn int(minp())\\n\\ndef mints():\\n\\treturn map(int, minp().split())\\n\\na,b,k = mints()\\n\\np = [True]*(b+1)\\nfor i in range(2, b+1):\\n\\tif p[i]:\\n\\t\\tfor j in range(i*i, b+1, i):\\n\\t\\t\\tp[j] = False\\n\\np[1] = False\\n#d = []\\n#for i in range(a, b+1)\\n#\\tif p[i]:\\n#\\t\\td.append(i)\\nc = 0\\ni = a\\nq = [0]*(b+1)\\nql = 1\\nqr = 1\\nq[0] = a-1\\nwhile c < k and i <= b:\\n\\tif p[i]:\\n\\t\\tc += 1\\n\\t\\tq[qr] = i\\n\\t\\tqr += 1\\n\\ti += 1\\nif c != k:\\n\\tprint(-1)\\n\\treturn\\n#print(q[qr-1],a)\\nr = q[qr-1]-a\\nwhile i <= b:\\n\\t#print(r, q[qr-1],q[ql-1]+1)\\n\\tr = max(r, q[qr-1]-(q[ql-1]+1))\\n\\tql += 1\\n\\tc -= 1\\n\\twhile i <= b:\\n\\t\\tif p[i]:\\n\\t\\t\\tq[qr] = i\\n\\t\\t\\tqr += 1\\n\\t\\t\\tc += 1\\n\\t\\t\\ti += 1\\n\\t\\t\\tbreak\\n\\t\\ti += 1\\nif c == k:\\n\\t#print(r, b, q[ql-1]+1)\\n\\tr = max(r, b-q[ql-1]-1)\\nelse:\\n\\t#print(r, b, q[ql-1])\\n\\tr = max(r, b-q[ql-1])\\nprint(r+1)\", \"from math import floor, sqrt\\n\\n\\ndef siv(limit, primes):\\n    mark = [False] * (limit + 1)\\n    for i in range(2, limit + 1):\\n        if not mark[i]:\\n            primes.append(i)\\n            for j in range(i, limit + 1, i):\\n                mark[j] = True\\n\\n\\ndef pir(low, high, prims):\\n    limit = floor(sqrt(high)) + 1\\n    primes = list()\\n    siv(limit, primes)\\n    n = high - low + 1\\n    mark = [False] * (n + 1)\\n    for i in range(len(primes)):\\n        loLim = floor(low / primes[i]) * primes[i]\\n        if loLim < low:\\n            loLim += primes[i]\\n        if loLim == primes[i]:\\n            loLim += primes[i]\\n        for j in range(loLim, high + 1, primes[i]):\\n            mark[j - low] = True\\n    pc = 0\\n    for i in range(low, high + 1):\\n        if not mark[i - low]:\\n            prims.append(i)\\n            pc += 1\\n    return pc\\n\\n\\na, b, k = [int(i) for i in input().split()]\\n\\nprims = []\\npc = pir(a, b, prims)\\nif pc!= 0 and prims[0] == 1:\\n    prims.remove(1)\\n    pc-=1\\n\\nif pc < k:\\n    print(-1)\\n    return\\n\\nmx = max(prims[k - 1] - a + 1, b - prims[len(prims) - k] + 1)\\n\\nfor i in range(len(prims) - k):\\n    mx = max(prims[i + k] - prims[i], mx)\\n\\nprint(mx)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2 4 2\\n\",\n    \"6 13 1\\n\",\n    \"1 4 3\\n\",\n    \"5 8 2\\n\",\n    \"8 10 3\\n\",\n    \"1 5 2\\n\",\n    \"6 8 3\\n\",\n    \"21 29 2\\n\",\n    \"17 27 3\\n\",\n    \"1 1000000 10000\\n\",\n    \"690059 708971 10000\\n\",\n    \"12357 534133 2\\n\",\n    \"838069 936843 3\\n\",\n    \"339554 696485 4\\n\",\n    \"225912 522197 5\\n\",\n    \"404430 864261 6\\n\",\n    \"689973 807140 7\\n\",\n    \"177146 548389 8\\n\",\n    \"579857 857749 9\\n\",\n    \"35648 527231 10\\n\",\n    \"2 1000000 10000\\n\",\n    \"1 999999 9999\\n\",\n    \"5 5 10\\n\",\n    \"11 11 6\\n\",\n    \"4 4 95\\n\",\n    \"1 1000000 1000000\\n\",\n    \"1 1000000 78498\\n\",\n    \"1 1000000 78499\\n\",\n    \"3459 94738 1\\n\",\n    \"1 1000000 1\\n\",\n    \"1 1000000 78498\\n\",\n    \"1 1000000 78497\\n\",\n    \"1 1000000 78490\\n\",\n    \"1000 10000 13\\n\",\n    \"100000 1000000 7821\\n\",\n    \"20 1000000 40000\\n\",\n    \"1000 900000 50000\\n\",\n    \"10000 1000000 60000\\n\",\n    \"9999 99999 8000\\n\",\n    \"50 150 20\\n\",\n    \"999953 999953 1\\n\",\n    \"999953 999953 2\\n\",\n    \"999931 999953 2\\n\",\n    \"999906 999984 4\\n\",\n    \"999940 999983 3\\n\",\n    \"1 1 1\\n\",\n    \"1 1 1000000\\n\",\n    \"1 2 1\\n\",\n    \"1 3 1\\n\",\n    \"1 3 2\\n\",\n    \"1 4 2\\n\",\n    \"1 5 2\\n\",\n    \"1 5 3\\n\",\n    \"2 5 2\\n\",\n    \"3 5 1\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"4\\n\",\n    \"-1\\n\",\n    \"3\\n\",\n    \"-1\\n\",\n    \"9\\n\",\n    \"11\\n\",\n    \"137970\\n\",\n    \"-1\\n\",\n    \"138\\n\",\n    \"142\\n\",\n    \"168\\n\",\n    \"190\\n\",\n    \"236\\n\",\n    \"236\\n\",\n    \"240\\n\",\n    \"300\\n\",\n    \"280\\n\",\n    \"137970\\n\",\n    \"137958\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"999999\\n\",\n    \"-1\\n\",\n    \"72\\n\",\n    \"114\\n\",\n    \"999999\\n\",\n    \"999998\\n\",\n    \"999978\\n\",\n    \"168\\n\",\n    \"108426\\n\",\n    \"539580\\n\",\n    \"659334\\n\",\n    \"793662\\n\",\n    \"86572\\n\",\n    \"100\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"23\\n\",\n    \"52\\n\",\n    \"26\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"2\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/237/C",
  "starter_code": ""
}