{
  "task_id": "APPS/453",
  "problem_id": 453,
  "prompt": "When new students come to the Specialized Educational and Scientific Centre (SESC) they need to start many things from the beginning. Sometimes the teachers say (not always unfairly) that we cannot even count. So our teachers decided to teach us arithmetics from the start. And what is the best way to teach students add and subtract? \u2014 That's right, using counting sticks! An here's our new task: \n\nAn expression of counting sticks is an expression of type:[ A sticks][sign +][B sticks][sign =][C sticks] (1 \u2264 A, B, C).  \n\nSign + consists of two crossed sticks: one vertical and one horizontal. Sign = consists of two horizontal sticks. The expression is arithmetically correct if A + B = C.\n\nWe've got an expression that looks like A + B = C given by counting sticks. Our task is to shift at most one stick (or we can shift nothing) so that the expression became arithmetically correct. Note that we cannot remove the sticks from the expression, also we cannot shift the sticks from the signs + and =.\n\nWe really aren't fabulous at arithmetics. Can you help us?\n\n\n-----Input-----\n\nThe single line contains the initial expression. It is guaranteed that the expression looks like A + B = C, where 1 \u2264 A, B, C \u2264 100.\n\n\n-----Output-----\n\nIf there isn't a way to shift the stick so the expression becomes correct, print on a single line \"Impossible\" (without the quotes). If there is a way, print the resulting expression. Follow the format of the output from the test samples. Don't print extra space characters.\n\nIf there are multiple correct answers, print any of them. For clarifications, you are recommended to see the test samples.\n\n\n-----Examples-----\nInput\n||+|=|||||\n\nOutput\n|||+|=||||\n\nInput\n|||||+||=||\n\nOutput\nImpossible\n\nInput\n|+|=||||||\n\nOutput\nImpossible\n\nInput\n||||+||=||||||\n\nOutput\n||||+||=||||||\n\n\n\n-----Note-----\n\nIn the first sample we can shift stick from the third group of sticks to the first one.\n\nIn the second sample we cannot shift vertical stick from + sign to the second group of sticks. So we cannot make a - sign.\n\nThere is no answer in the third sample because we cannot remove sticks from the expression.\n\nIn the forth sample the initial expression is already arithmetically correct and that is why we don't have to shift sticks.",
  "solutions": "[\"t = input()\\nk = t.find('=')\\nn = 2 * k - len(t)\\nif n == 2:\\n    if t[1] != '+': t = t[1: ] + '|'\\n    else: t = t[: k - 1] + t[k: ] + '|'\\nelif n == -2: t = '|' + t[: -1]\\nelif n != 0: t = 'Impossible'\\nprint(t)\", \"s = input()\\nplus = s.index('+')\\nravno = s.index('=')\\na = len(s[:plus])\\nb = len(s[plus+1:ravno])\\nc = len(s[ravno+1:])\\nif a+b == c-2:\\n    a += 1\\n    c -= 1\\n    print('|'*a,'+','|'*b,'=','|'*c,sep='')\\nelif a+b-2 == c:\\n    c +=1\\n    if a>1:\\n        a -= 1\\n        print('|'*a,'+','|'*b,'=','|'*c,sep='')\\n    elif b>1:\\n        b -= 1\\n        print('|'*a,'+','|'*b,'=','|'*c,sep='')\\nelif a+b == c:\\n    print('|'*a,'+','|'*b,'=','|'*c,sep='')    \\nelse:\\n    print('Impossible')\", \"s, c = input().split(sep=\\\"=\\\")\\na, b = s.split(sep=\\\"+\\\")\\na, b, c = map(len, [a, b, c])\\nif a + b != c:\\n  if a > 1 and a - 1 + b == c + 1:\\n    a -= 1\\n    c += 1\\n  elif b > 1 and a + b - 1 == c + 1:\\n    b -= 1\\n    c += 1\\n  elif c > 1 and a + 1 + b == c - 1:\\n    c -= 1\\n    a += 1\\n  else:\\n    print(\\\"Impossible\\\")\\n    return\\nprint(\\\"|\\\" * a + \\\"+\\\" + \\\"|\\\" * b + \\\"=\\\" + \\\"|\\\" * c)\", \"s, c = input().split('=')\\na, b = s.split('+')\\na, b, c = list(map(len, [a, b, c]))\\n\\nif a + b != c:\\n\\tif a > 1 and a - 1 + b == c + 1:\\n\\t\\ta -= 1\\n\\t\\tc += 1\\n\\telif b > 1 and a + b - 1 == c + 1:\\n\\t\\tb -= 1\\n\\t\\tc += 1\\n\\telif c > 1 and a + 1 + b == c - 1:\\n\\t\\tc -= 1\\n\\t\\ta += 1\\n\\telse:\\n\\t\\tprint(\\\"Impossible\\\")\\n\\t\\treturn\\nprint(\\\"|\\\" * a + \\\"+\\\" + \\\"|\\\" * b + \\\"=\\\" + \\\"|\\\" * c)\\n\", \"a,b,c = input().replace(\\\"+\\\",\\\"=\\\").split(\\\"=\\\")\\nlenA=0\\nlenB=0\\nlenC=0\\na1=len(a)\\nb1=len(b)\\nc1=len(c)\\nst=\\\"\\\"\\nif (a1+b1)-c1==0:\\n    st=a+\\\"+\\\"+b+\\\"=\\\"+c\\nif (a1+b1)-c1==2:\\n    if a1>1:\\n        lenA=a1-1\\n        lenB=b1\\n    elif b1>1:\\n        lenB=b1-1\\n        lenA=a1\\n    lenC=c1+1\\nif (a1+b1)-c1==-2:\\n    if c1>1:\\n        lenA=a1+1\\n        lenB=b1\\n        lenC=c1-1\\nif lenA and lenB and lenC!=0:\\n    for x in range(lenA):   st=st+\\\"|\\\"\\n    st=st+\\\"+\\\"\\n    for x in range(lenB):   st=st+\\\"|\\\"\\n    st=st+\\\"=\\\"\\n    for x in range(lenC):   st=st+\\\"|\\\"\\n\\nif st:\\n    print(st)\\nelse:\\n    print(\\\"Impossible\\\")\", \"from sys import stdin\\ndef main():\\n    x = stdin.readline().strip()\\n    for i in range (0,len(x)):\\n        if x[i] == '=':\\n            b = i\\n        if x[i] == '+':\\n            a = i\\n    c = len(x[0:a])\\n    d = len(x[b+1:len(x)])\\n    e = len(x[a+1:b])\\n    if c+e==d:\\n        print (x)\\n    else:\\n        if c+e > d:\\n            if c+e > d and c+e != d:\\n                if(c==1):\\n                    e-=1\\n                else:\\n                    c -= 1\\n                d += 1\\n            if d != c+e:\\n                print ('Impossible')\\n            else:\\n                m = ('|'*c,'+','|'*e,'=','|'*d)\\n                m=''.join(m)\\n                print(m)\\n        else:\\n            if d > c+e and c+e != d:\\n                d -= 1\\n                c += 1\\n            if c+e != d:\\n                print ('Impossible')\\n            else:\\n                n = ('|'*c,'+','|'*e,'=','|'*d)\\n                n=''.join(n)\\n                print(n)\\n        \\nmain()\\n\", \"from sys import stdin\\ndef main():\\n    x = stdin.readline().strip()\\n    for i in range (0,len(x)):\\n        if x[i] == '=':\\n            b = i\\n        if x[i] == '+':\\n            a = i\\n    c = len(x[0:a])\\n    d = len(x[b+1:len(x)])\\n    e = len(x[a+1:b])\\n    if c+e==d:\\n        print (x)\\n    else:\\n        if c+e > d:\\n            if c+e > d and c+e != d:\\n                if(c==1):\\n                    e-=1\\n                else:\\n                    c -= 1\\n                d += 1\\n            if d != c+e:\\n                print ('Impossible')\\n            else:\\n                m = ('|'*c,'+','|'*e,'=','|'*d)\\n                m=''.join(m)\\n                print(m)\\n        else:\\n            if d > c+e and c+e != d:\\n                d -= 1\\n                c += 1\\n            if c+e != d:\\n                print ('Impossible')\\n            else:\\n                n = ('|'*c,'+','|'*e,'=','|'*d)\\n                n=''.join(n)\\n                print(n)\\n        \\nmain()\\n\", \"from sys import stdin\\ndef main():\\n    x = stdin.readline().strip()\\n    for i in range (0,len(x)):\\n        if x[i] == '=':\\n            b = i\\n        if x[i] == '+':\\n            a = i\\n    c = len(x[0:a])\\n    d = len(x[b+1:len(x)])\\n    e = len(x[a+1:b])\\n    if c+e==d:\\n        print (x)\\n    else:\\n        if c+e > d:\\n            if c+e > d and c+e != d:\\n                if(c==1):\\n                    e-=1\\n                else:\\n                    c -= 1\\n                d += 1\\n            if d != c+e:\\n                print ('Impossible')\\n            else:\\n                m = ('|'*c,'+','|'*e,'=','|'*d)\\n                m=''.join(m)\\n                print(m)\\n        else:\\n            if d > c+e and c+e != d:\\n                d -= 1\\n                c += 1\\n            if c+e != d:\\n                print ('Impossible')\\n            else:\\n                n = ('|'*c,'+','|'*e,'=','|'*d)\\n                n=''.join(n)\\n                print(n)\\n        \\nmain()\\n\", \"from sys import stdin\\ndef main():\\n\\ta=stdin.readline().strip()\\n\\tx=a.split('+')\\n\\ty=x[1].split('=')\\n\\td,b,c=x[0],y[0],y[1]\\n\\tif (len(d)+len(b)==len(c)):\\n\\t\\tprint(a)\\n\\telif (len(d)+1+len(b)==len(c)-1):\\n\\t\\td=d+'|'\\n\\t\\tf=[]\\n\\t\\tfor i in range(len(c)):\\n\\t\\t\\tf.append(c[i])\\n\\t\\tf.remove(f[i])\\n\\t\\tc=''.join(f)\\n\\t\\te=d+'+'+b+'='+c\\n\\t\\tprint(e)\\n\\telif (len(d)-1+len(b)==len(c)+1):\\n\\t\\tc=c+'|'\\n\\t\\tif(len(d)>1):\\n\\t\\t\\tf=[]\\n\\t\\t\\tfor i in range (len(d)):\\n\\t\\t\\t\\tf.append(d[i])\\n\\t\\t\\tf.remove(f[0])\\n\\t\\t\\td=''.join(f)\\n\\t\\telse:\\n\\t\\t\\tf=[]\\n\\t\\t\\tfor i in range (len(b)):\\n\\t\\t\\t\\tf.append(b[i])\\n\\t\\t\\tf.remove(f[0])\\n\\t\\t\\tb=''.join(f)\\n\\t\\te=d+'+'+b+'='+c\\n\\t\\tprint(e)\\n\\telse:\\n\\t\\tprint('Impossible')\\nmain()\\n\\n\", \"from sys import stdin\\ndef main():\\n    f=stdin.readline().strip()\\n    x=f.split(\\\"+\\\")\\n    y=x[1].split(\\\"=\\\")\\n    a,b,c=x[0],y[0],y[1]\\n    if len(a)+len(b)==len(c):\\n        print(f)\\n    elif len(a)-1>=1 and len(a)-1 + len(b)==len(c)+1:\\n        c=c+\\\"|\\\"\\n        d=[]\\n        for i in range(len(a)):\\n                d.append(a[i])\\n        d.remove(d[i])\\n        a=''.join(d)\\n        n=a+'+'+b+'='+c\\n        print(n)\\n    elif len(c)-1>=1 and len(a)+1 + len(b) == len(c)-1:\\n        a=a+\\\"|\\\"\\n        d=[]\\n        for i in range(len(c)):\\n            d.append(c[i])\\n        d.remove(d[i])\\n        c=''.join(d)\\n        n=a+'+'+b+'='+c\\n        print(n)\\n    elif len(b)-1>=1 and len(a) + len(b)-1 == len(c)+1:\\n        c=c+\\\"|\\\"\\n        d=[]\\n        for i in range(len(b)):\\n            d.append(b[i])\\n        d.remove(d[i])\\n        b=''.join(d)\\n        n=a+'+'+b+'='+c\\n        print(n)\\n    elif len(c)-1>=0 and len(a)+ len(b)+1 == len(c)-1:\\n        b=b+\\\"|\\\"\\n        d=[]\\n        for i in range(len(c)):\\n            d.append(c[i])\\n        d.remove(d[i])\\n        c=''.join(d)\\n        n=a+'+'+b+'='+c\\n        print(n)\\n    else:\\n        print(\\\"Impossible\\\")\\n        \\nmain()\", \"v = input().split('+')\\na = len(v[0])\\nv = v[1].split('=')\\nb = len(v[0])\\nc = len(v[1])\\n\\ndef good(a, b, c):\\n    return a+b==c and a>0 and b>0 and c>0\\n\\nif good(a-1, b, c+1):\\n    a = a-1\\n    c = c+1\\n\\nif good(a, b-1, c+1):\\n    b = b-1\\n    c = c+1\\n\\nif good(a+1, b, c-1):\\n    a = a+1\\n    c = c-1\\n\\nif good(a, b+1, c-1):\\n    b = b+1\\n    c = c-1\\n\\nif a+b==c:\\n    print('|'*a+'+'+'|'*b+'='+'|'*c)\\nelse:\\n    print(\\\"Impossible\\\")\\n\", \"a,b=input().split(\\\"=\\\")\\nif abs(len(a)-1-len(b)) not in [0,2]:\\n  print(\\\"Impossible\\\")\\nelif len(a)-1==len(b):\\n  print(a+'='+b)\\nelif len(a)-1<len(b):\\n  print('|'+a+\\\"=\\\"+b[:-1])\\nelif a.find('+')>1:\\n  print(a[1:]+'='+b+'|')\\nelse:\\n  print(a[:-1]+'='+b+'|')\", \"import re\\n\\ns = input()\\nl = re.compile('[|]+').findall(s)\\n\\ndiff = len(l[0]) + len(l[1]) - len(l[2])\\n\\nif diff == 0:\\n    print(s)\\nelif diff == -2:\\n    print(l[0]+'|+' + l[1] + '=' + l[2][:-1])\\nelif diff == 2:\\n    l[2] += '|'\\n    if len(l[0]) == 1:\\n        l[1] = l[1][:-1]\\n    else:\\n        l[0] = l[0][:-1]\\n    print(l[0]+'+'+l[1]+'='+l[2])\\nelse:\\n    print('Impossible')\\n\\n\", \"t = input()\\nk = t.find('=')\\nn = 2 * k - len(t)\\nif n == 2:\\n    if t[1] != '+': t = t[1: ] + '|'\\n    else: t = t[: k - 1] + t[k: ] + '|'\\nelif n == -2: t = '|' + t[: -1]\\nelif n != 0: t = 'Impossible'\\nprint(t)\", \"e = str(input())\\na, b, c = e.index('+'), e.index('=') - e.index('+') - 1, len(e) - e.index('=') - 1\\nif a + b == c:\\n  print(e)\\nelif a > 1 and a - 1 + b == c + 1: # a -> c\\n  print(\\\"|\\\" * (a - 1) + '+' + \\\"|\\\" * b + '=' + \\\"|\\\" * (c + 1))\\nelif b > 1 and a + b - 1 == c + 1: # b -> c\\n  print(\\\"|\\\" * a + '+' + \\\"|\\\" * (b - 1) + '=' + \\\"|\\\" * (c + 1))\\nelif c > 1 and a + 1 + b == c - 1: # c -> a\\n  print(\\\"|\\\" * (a + 1) + '+' + \\\"|\\\" * b + '=' + \\\"|\\\" * (c - 1))\\nelse:\\n  print(\\\"Impossible\\\")\", \"t = input()\\nk = t.find('=')\\nn = 2 * k - len(t)\\nif n == 2:\\n    if t[1] != '+': t = t[1: ] + '|'\\n    else: t = t[: k - 1] + t[k: ] + '|'\\nelif n == -2: t = '|' + t[: -1]\\nelif n != 0: t = 'Impossible'\\nprint(t)\\n\", \"t = input()\\nk = t.find('=')\\nn = 2 * k - len(t)\\nif n == 2:\\n    if t[1] != '+': t = t[1: ] + '|'\\n    else: t = t[: k - 1] + t[k: ] + '|'\\nelif n == -2: t = '|' + t[: -1]\\nelif n != 0: t = 'Impossible'\\nprint(t)\\n\", \"t = input()\\nk = t.find('=')\\nn = 2 * k - len(t)\\nif n == 2:\\n    if t[1] != '+': t = t[1: ] + '|'\\n    else: t = t[: k - 1] + t[k: ] + '|'\\nelif n == -2: t = '|' + t[: -1]\\nelif n != 0: t = 'Impossible'\\nprint(t)\\n\", \"t = input()\\nk = t.find('=')\\nn = 2 * k - len(t)\\nif n == 2:\\n    if t[1] != '+': t = t[1: ] + '|'\\n    else: t = t[: k - 1] + t[k: ] + '|'\\nelif n == -2: t = '|' + t[: -1]\\nelif n != 0: t = 'Impossible'\\nprint(t)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"||+|=|||||\\n\",\n    \"|||||+||=||\\n\",\n    \"|+|=||||||\\n\",\n    \"||||+||=||||||\\n\",\n    \"||||||||||||+|||||||||||=||||||||||||||||||||||\\n\",\n    \"||||||||||||||||||+||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||||||=|||||||||||||||||||||||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+|=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|+|=|\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||||||||||||||||||||||||=|\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=|\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||||=|\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||||||||||||||||||||||||||||||=|\\n\",\n    \"||+||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||+|=|\\n\",\n    \"|+||=|\\n\",\n    \"|+|=||\\n\",\n    \"|||+|=|\\n\",\n    \"|||+|=|\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||+||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|+|=|||\\n\",\n    \"|+|=||||\\n\",\n    \"|+||=|\\n\",\n    \"|+||||||=|||||\\n\",\n    \"|+|||=||\\n\",\n    \"|+||||=|||\\n\",\n    \"|+|||||=||||\\n\",\n    \"||+||=||\\n\",\n    \"||+|||=|||\\n\",\n    \"|||||+||=||||||||||\\n\",\n    \"|||+|||=||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||+|||||=||||||||||||\\n\",\n    \"||+|||||||=|||||||\\n\",\n    \"||||+||||=||||||\\n\",\n    \"||||+|||=|||||\\n\",\n    \"||+|||=|||||||\\n\",\n    \"||+|=|\\n\",\n    \"|||+|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||+|=||||||\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\"\n  ],\n  \"outputs\": [\n    \"|||+|=||||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"||||+||=||||||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+|=||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||||+||||||||||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"|+||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|+|=||\\n\",\n    \"|+|=||\\n\",\n    \"|+|=||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"||||||||||||||||||||||||||||||||||||||||||||||||||+|||||||||||||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"|+||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\",\n    \"||+|=|||\\n\",\n    \"|+|=||\\n\",\n    \"|+|||||=||||||\\n\",\n    \"|+||=|||\\n\",\n    \"|+|||=||||\\n\",\n    \"|+||||=|||||\\n\",\n    \"|+||=|||\\n\",\n    \"|+|||=||||\\n\",\n    \"Impossible\\n\",\n    \"||+|||=|||||\\n\",\n    \"|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||+||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"||||||+|||||=|||||||||||\\n\",\n    \"|+|||||||=||||||||\\n\",\n    \"|||+||||=|||||||\\n\",\n    \"|||+|||=||||||\\n\",\n    \"|||+|||=||||||\\n\",\n    \"|+|=||\\n\",\n    \"||+|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||=|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\\n\",\n    \"Impossible\\n\",\n    \"Impossible\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/394/A",
  "starter_code": ""
}