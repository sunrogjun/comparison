{
  "task_id": "APPS/190",
  "problem_id": 190,
  "prompt": "\u041a\u0430\u0440\u0442\u0430 \u0437\u0432\u0451\u0437\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0431\u0430 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0435\u0435 \u0438\u0437 n \u0441\u0442\u0440\u043e\u043a \u043f\u043e m \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435. \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u00a0\u2014 \u044d\u0442\u043e \u043b\u0438\u0431\u043e \u00ab.\u00bb (\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043f\u0443\u0441\u0442\u043e\u0439 \u0443\u0447\u0430\u0441\u0442\u043e\u043a \u043d\u0435\u0431\u0430), \u043b\u0438\u0431\u043e \u00ab*\u00bb (\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0442\u043e, \u0447\u0442\u043e \u0432 \u044d\u0442\u043e\u043c \u043c\u0435\u0441\u0442\u0435 \u043d\u0430 \u043d\u0435\u0431\u0435 \u0435\u0441\u0442\u044c \u0437\u0432\u0435\u0437\u0434\u0430). \n\n\u041d\u043e\u0432\u043e\u0435 \u0438\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u0430\u0440\u0442\u044b \u0437\u0432\u0451\u0437\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0431\u0430 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u043d\u043e \u043d\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u044b\u0445 \u043b\u0438\u0441\u0442\u0430\u0445, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u0437\u0432\u0435\u0437\u0434\u044b. \u0413\u0440\u0430\u043d\u0438\u0446\u044b \u0438\u0441\u043a\u043e\u043c\u043e\u0433\u043e \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b \u0441\u0442\u043e\u0440\u043e\u043d\u0430\u043c \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044f.\n\n\n-----\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435-----\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 n \u0438 m (1 \u2264 n, m \u2264 1000)\u00a0\u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u043d\u0430 \u043a\u0430\u0440\u0442\u0435 \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0431\u0430.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 n \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u0434\u0430\u043d\u043e \u043f\u043e m \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u041a\u0430\u0436\u0434\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b\u00a0\u2014 \u044d\u0442\u043e \u043b\u0438\u0431\u043e \u00ab.\u00bb (\u043f\u0443\u0441\u0442\u043e\u0439 \u0443\u0447\u0430\u0441\u0442\u043e\u043a \u043d\u0435\u0431\u0430), \u043b\u0438\u0431\u043e \u00ab*\u00bb (\u0437\u0432\u0435\u0437\u0434\u0430).\n\n\u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043d\u0430 \u043d\u0435\u0431\u0435 \u0435\u0441\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u0430 \u0437\u0432\u0435\u0437\u0434\u0430.\n\n\n-----\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435-----\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2014 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u0441\u0442\u043e\u0440\u043e\u043d\u0443 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u043a\u0440\u044b\u0442\u044c \u0432\u0441\u0435 \u0437\u0432\u0435\u0437\u0434\u044b.\n\n\n-----\u041f\u0440\u0438\u043c\u0435\u0440\u044b-----\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n4 4\n....\n..*.\n...*\n..**\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n3\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1 3\n*.*\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n3\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n2 1\n.\n*\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n1\n\n\n\n-----\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435-----\n\n\u041e\u0434\u0438\u043d \u0438\u0437 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440:\n\n [Image] \n\n\u041e\u0434\u0438\u043d \u0438\u0437 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440 (\u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043f\u043e\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0438\u0439 \u043a\u0432\u0430\u0434\u0440\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0437\u0430 \u043f\u0440\u0435\u0434\u0435\u043b\u044b \u043a\u0430\u0440\u0442\u044b \u0437\u0432\u0435\u0437\u0434\u043d\u043e\u0433\u043e \u043d\u0435\u0431\u0430):\n\n [Image] \n\n\u041e\u0442\u0432\u0435\u0442 \u043d\u0430 \u0442\u0440\u0435\u0442\u0438\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u043f\u0440\u0438\u043c\u0435\u0440:\n\n [Image]",
  "solutions": "[\"n, m = input().split()\\nn = int(n)\\nm = int(m)\\na = []\\nN = n\\nfor i in range(n) :\\n    a.append(input().split())\\n    \\nfor i in range(n) :\\n    if a[i][0].find('*') == -1 :\\n        n-=1\\n    else :\\n        break\\nif n != 1 :\\n    for i in range(len(a)-1,-1,-1) :\\n        if a[i][0].find('*') == -1 :\\n            n-=1\\n        else :\\n            break\\n#print(n)\\n\\nM = m\\nbr = 0\\nfor i in range(m) :\\n    count = 0\\n    for j in range(len(a)) :\\n        if a[j][0][i] != ('*') :\\n            count+=1\\n        else :\\n            br = 1\\n            break\\n    if br == 1 :\\n        break\\n    if count == N :\\n        m-=1\\nbr = 0\\nif m != 1 :\\n    for i in range(M-1,-1,-1) :\\n        count = 0\\n        for j in range(len(a)) :\\n            if a[j][0][i] != ('*') :\\n                count+=1\\n            else :\\n                br = 1\\n                break\\n        if br == 1 :\\n            break\\n        if count == N :\\n            m-=1\\n#print(m)\\nif m > n :\\n    print(m)\\nelse :\\n    print(n)\\n\", \"from sys import stdin, stdout\\n\\ndef main():\\n    h, w = map(int, stdin.readline().split())\\n    ver = set()\\n    hor = set()\\n    for i in range(h):\\n        s = stdin.readline().rstrip()\\n        for j in range(w):\\n            if s[j] == '*':\\n                hor.add(j)\\n                ver.add(i)\\n    stdout.write(str(max(max(hor) - min(hor), max(ver) - min(ver)) + 1))\\n\\n\\nmain()\", \"n, m = map(int, input().split())\\nl = [n, m]\\nr = [-1, -1]\\nfor i in range(n):\\n    A = input()\\n    if A.find('*')!=-1:\\n        if i < l[0]:\\n            l[0] = i\\n        if A.find('*') < l[1]:\\n            l[1] = A.find('*')\\n        if i > r[0]:\\n            r[0] = i\\n        if A.rfind('*') > r[1]:\\n            r[1] = A.rfind('*')\\nprint(max(r[0]-l[0]+1, r[1]-l[1]+1))\", \"def main():\\n    n, m = list(map(int, input().split()))\\n    x1, y1, x2, y2 = n, m, -1, -1\\n    for i in range(n):\\n        s = input()\\n        for j in range(m):\\n            if s[j] == '*':\\n                x1, y1 = min(i, x1), min(j, y1)\\n                x2, y2 = max(i, x2), max(j, y2)\\n    ans = max(x2 - x1, y2 - y1) + 1\\n    print(ans)\\nmain()\\n\", \"n,m = map(int,input().split())\\na = []\\nfor i in range(n):\\n    a.append(list(input()))\\nminj,maxi,maxj,mini = 10000000000000,0,-1,1000000000000\\nfor i in range(n):\\n    for j in range(m):\\n        if a[i][j]=='*':\\n            minj = min(j,minj)\\n            maxi = i\\n            maxj = max(maxj,j)\\n            mini = min(mini,i)\\nprint(max(maxi-mini+1,maxj-minj+1))\", \"s = input().split()\\nn = int(s[0])\\nm = int(s[1])\\na = []\\nb = []\\nc = []\\nd = []\\nfor i in range(n):\\n    a.append(input())\\nfor j in range(m):\\n    for i in range(n):\\n        if a[i][j] == '*':\\n            b.append(i)\\n\\nc.append(max(b) - min(b)+1)\\nb = []\\nfor i in range(n):\\n    for j in range(m):\\n        if a[i][j] == '*':\\n            b.append(j)\\nd.append(max(b) - min(b)+1)\\nprint(max(max(c),max(d)))\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \\n\", \"n, m = map(int, input().split())\\nmxx, mxy, mnx, mny = 0, 0, n + 1, m + 1\\nfor i in range(0, n):\\n    line = input()\\n    for j in range(0, m):\\n        if line[j] == '*':\\n            mxx = max(mxx, i)\\n            mxy = max(mxy, j)\\n            mnx = min(mnx, i)\\n            mny = min(mny, j)\\nprint(max(mxx - mnx + 1, mxy - mny + 1))\", \"def main():\\n    import sys\\n    input = sys.stdin.readline\\n    n, m = [int(i) for i in input().split()]\\n    x1 = n - 1\\n    x2 = 0\\n    y1 = m - 1\\n    y2 = 0\\n    for i in range(n):\\n        s = input()\\n        for j in range(m):\\n            if s[j] == '*':\\n                x1 = min(x1, i)\\n                x2 = max(x2, i)\\n                y1 = min(y1, j)\\n                y2 = max(y2, j)\\n    print(max(x2 - x1, y2 - y1) + 1)\\n\\nmain()\", \"n, m = [int(x) for x in input().split()]\\nminX = m+1; maxX = -1; minY = n+1; maxY = -1\\nfor i in range(n):\\n\\tline = input()\\n\\tj = 0\\n\\tfor c in line:\\t\\t\\n\\t\\tif c == '*':\\n\\t\\t\\tif minX > j: minX = j\\n\\t\\t\\tif maxX < j: maxX = j\\n\\t\\t\\tif minY > i: minY = i\\n\\t\\t\\tif maxY < i: maxY = i\\n\\t\\tj += 1\\n\\nprint(max(maxX - minX + 1, maxY - minY + 1))\\n\", \"n,m=list(map(int,input().split()))\\na=[]\\nl=m+1\\nr=-1\\nu=n+1\\nd=-1\\nlma=m+1\\nrma=-1\\numa=n+1\\ndma=-1\\nfor i in range(n):\\n    a.append(input().strip())\\n    if a[i].find('*')!=-1:\\n        l=a[i].find('*')\\n        r=a[i].rfind('*')\\n    if l<lma:\\n        lma=l\\n    if r>rma:\\n        rma=r\\n    if '*' in a[i] and uma==n+1:\\n        uma=i\\n    if '*' in a[i] and uma!=n+1:\\n        dma=i\\nprint(max(dma-uma+1, rma-lma+1))\\n\", \"n, m = map(int,input().split())\\nminv = n\\nming = m\\nmaxv = 0\\nmaxg = 0\\ni=0\\nwhile (i < n):\\n str = input()\\n j=0\\n while (j < m):\\n  if (str[j] == '*'):\\n   if (minv > i): minv = i\\n   if (maxv < i): maxv = i\\n   if (ming > j): ming = j\\n   if (maxg < j): maxg = j\\n  j+= 1\\n i += 1\\nif ((maxv - minv) > (maxg - ming)):\\n n = maxv - minv + 1\\n print(n)\\nelse:\\n m = maxg - ming + 1\\n print(m)\", \"z = input().split()\\na = []\\nfor i in range(2):\\n    a.append(int(z[i]))\\nn = a[0]\\nm = a[1]\\nb = []\\nx1 = 1001\\nx2 = 0\\ny1 = 1001\\ny2 = 0\\nfor i in range(n):\\n    b.append(str(input()))\\nfor i in range(n):\\n    for j in range(m):\\n        if b[i][j] == '*':\\n            if i < y1 :\\n                y1 = i\\n            if j < x1:\\n                x1 = j\\n            if i > y2:\\n                y2 = i\\n            if j > x2:\\n                x2 = j\\nx = x2 - x1 + 1\\ny = y2 - y1 + 1\\nif x > y:\\n    print(x)\\nelse:\\n    print(y)\\n    \\n\", \"n,m=list(map(int,input().split()))\\na=[list(input()) for i in range(n)]\\nima=0\\njma=0\\nimi=n+1\\njmi=m+1\\nfor i in range(n):\\n\\tfor j in range(m):\\n\\t\\tif a[i][j]=='*':\\n\\t\\t\\tif i<imi:\\n\\t\\t\\t\\timi=i\\n\\t\\t\\tif i>ima:\\n\\t\\t\\t\\tima=i\\n\\t\\t\\tif j<jmi:\\n\\t\\t\\t\\tjmi=j\\n\\t\\t\\tif j>jma:\\n\\t\\t\\t\\tjma=j\\nif ima-imi+1>0 and ima-imi+1>=jma-jmi+1:\\n\\tprint(ima-imi+1)\\nelif jma-jmi+1>0 and jma-jmi+1>=ima-imi+1:\\n\\tprint(jma-jmi+1)\\nelif jma-jmi<=0 and ima-imi<=0:\\n\\tprint(0)\\n\", \"3\\n\\nnm = (str(input()).split(\\\" \\\"))\\nprever = int(nm[0])\\nposver = 0\\npregor = int(nm[1])\\nposgor = 0\\n\\nz = 1\\nwhile z <= int(nm[0]):\\n\\t\\tal = list(str(input()))\\n\\t\\trar = al.count(\\\"*\\\")\\n\\t\\tif rar != 0:\\n\\t\\t\\t\\tif prever > z:\\n\\t\\t\\t\\t\\t\\tprever = z\\n\\t\\t\\t\\tif posver < z:\\n\\t\\t\\t\\t\\t\\tposver = z\\n\\t\\tx = 0\\n\\t\\twhile x <= (len(al) - 1):\\n\\t\\t\\t\\tif al[x] == '*':\\n\\t\\t\\t\\t\\t\\tif pregor > x:\\n\\t\\t\\t\\t\\t\\t\\t\\tpregor = x\\n\\t\\t\\t\\t\\t\\tif posgor < x:\\n\\t\\t\\t\\t\\t\\t\\t\\tposgor = x\\n\\t\\t\\t\\tx += 1\\n\\t\\tz += 1\\n\\ns1 = abs(pregor - posgor) + 1\\ns2 = abs(prever - posver) + 1\\n\\nif s1 >= s2:\\n\\t\\ts2 = s1\\nelif s2 > s1:\\n\\t\\ts1 = s2\\nprint(s1)\\n\", \"n,m = list(map(int,input().split()))\\nb = True\\nnach = 0\\ncon = 0\\nnn = 0\\ncc = 0\\nfor i in range(n):\\n    s = input()\\n    c = s.count('*')\\n    bb = True\\n    for j in range(m):\\n        if bb:\\n            if s[j] == '*':\\n                bb = False\\n                if b:\\n                    nn = j\\n                else:\\n                    nn = min(nn,j)\\n        if s[j] == '*':\\n            cc = max(cc,j)\\n    if b:\\n        if c != 0:\\n            b = False\\n            nach = i\\n            con = i\\n    if c != 0:\\n        con = i\\nm1 = cc - nn + 1\\nm2 = con - nach + 1\\n#print(m1,m2)\\nprint(max(m1,m2))\\n        \\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4 4\\n....\\n..*.\\n...*\\n..**\\n\",\n    \"1 3\\n*.*\\n\",\n    \"2 1\\n.\\n*\\n\",\n    \"1 1\\n*\\n\",\n    \"1 2\\n.*\\n\",\n    \"1 2\\n*.\\n\",\n    \"1 2\\n**\\n\",\n    \"2 1\\n.\\n*\\n\",\n    \"2 1\\n*\\n.\\n\",\n    \"2 1\\n*\\n*\\n\",\n    \"5 3\\n..*\\n.**\\n..*\\n...\\n..*\\n\",\n    \"7 10\\n..........\\n......*...\\n....**..*.\\n...**.....\\n...*......\\n..........\\n..**.*....\\n\",\n    \"3 9\\n.........\\n......*..\\n.........\\n\",\n    \"4 3\\n...\\n..*\\n*..\\n...\\n\",\n    \"1 1\\n*\\n\",\n    \"1 2\\n*.\\n\",\n    \"1 2\\n**\\n\",\n    \"1 3\\n.**\\n\",\n    \"1 3\\n*.*\\n\",\n    \"1 4\\n..**\\n\",\n    \"1 4\\n*..*\\n\",\n    \"1 5\\n.*.**\\n\",\n    \"1 5\\n.*..*\\n\",\n    \"2 1\\n*\\n.\\n\",\n    \"2 1\\n*\\n*\\n\",\n    \"2 2\\n.*\\n..\\n\",\n    \"2 2\\n*.\\n.*\\n\",\n    \"2 3\\n*..\\n**.\\n\",\n    \"2 3\\n*..\\n..*\\n\",\n    \"2 4\\n.***\\n.*.*\\n\",\n    \"2 4\\n*..*\\n....\\n\",\n    \"2 5\\n*..**\\n.*.*.\\n\",\n    \"2 5\\n.....\\n*.*..\\n\",\n    \"3 1\\n*\\n*\\n*\\n\",\n    \"3 1\\n*\\n.\\n*\\n\",\n    \"3 2\\n..\\n..\\n**\\n\",\n    \"3 2\\n.*\\n.*\\n..\\n\",\n    \"3 3\\n*..\\n.**\\n***\\n\",\n    \"3 3\\n*..\\n.*.\\n...\\n\",\n    \"3 4\\n.*..\\n....\\n....\\n\",\n    \"3 4\\n..*.\\n....\\n..*.\\n\",\n    \"3 5\\n.....\\n*.*..\\n.....\\n\",\n    \"3 5\\n.....\\n.*...\\n..*..\\n\",\n    \"4 1\\n.\\n.\\n*\\n*\\n\",\n    \"4 1\\n*\\n.\\n*\\n.\\n\",\n    \"4 2\\n*.\\n*.\\n.*\\n**\\n\",\n    \"4 2\\n*.\\n..\\n..\\n.*\\n\",\n    \"4 3\\n...\\n.**\\n..*\\n...\\n\",\n    \"4 3\\n..*\\n...\\n...\\n*..\\n\",\n    \"4 4\\n..*.\\n..*.\\n.*..\\n***.\\n\",\n    \"4 4\\n....\\n...*\\n....\\n..*.\\n\",\n    \"4 5\\n*.*.*\\n.....\\n.....\\n.....\\n\",\n    \"4 5\\n.....\\n...*.\\n.*...\\n.....\\n\",\n    \"5 1\\n*\\n*\\n.\\n.\\n.\\n\",\n    \"5 1\\n*\\n.\\n.\\n.\\n*\\n\",\n    \"5 2\\n.*\\n**\\n**\\n..\\n**\\n\",\n    \"5 2\\n*.\\n..\\n..\\n..\\n.*\\n\",\n    \"5 3\\n...\\n***\\n..*\\n.**\\n**.\\n\",\n    \"5 3\\n*..\\n...\\n...\\n...\\n.*.\\n\",\n    \"5 4\\n*.**\\n.*..\\n.*..\\n..*.\\n*..*\\n\",\n    \"5 4\\n....\\n..*.\\n....\\n....\\n..*.\\n\",\n    \"5 5\\n....*\\n....*\\n....*\\n..*..\\n..*.*\\n\",\n    \"5 5\\n.....\\n..*..\\n*....\\n.....\\n.....\\n\",\n    \"2 2\\n**\\n**\\n\",\n    \"2 2\\n*.\\n.*\\n\",\n    \"2 2\\n.*\\n*.\\n\",\n    \"2 2\\n**\\n..\\n\",\n    \"2 2\\n..\\n**\\n\",\n    \"2 2\\n*.\\n*.\\n\",\n    \"2 2\\n.*\\n.*\\n\",\n    \"2 2\\n*.\\n..\\n\",\n    \"2 2\\n.*\\n..\\n\",\n    \"2 2\\n..\\n*.\\n\",\n    \"2 2\\n..\\n.*\\n\",\n    \"2 2\\n.*\\n**\\n\",\n    \"2 2\\n*.\\n**\\n\",\n    \"2 2\\n**\\n.*\\n\",\n    \"2 2\\n**\\n*.\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/647/B",
  "starter_code": ""
}