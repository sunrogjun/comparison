{
  "task_id": "APPS/129",
  "problem_id": 129,
  "prompt": "Ivan is collecting coins. There are only $N$ different collectible coins, Ivan has $K$ of them. He will be celebrating his birthday soon, so all his $M$ freinds decided to gift him coins. They all agreed to three terms:  Everyone must gift as many coins as others. All coins given to Ivan must be different. Not less than $L$ coins from gifts altogether, must be new in Ivan's collection.\n\nBut his friends don't know which coins have Ivan already got in his collection. They don't want to spend money so they want to buy minimum quantity of coins, that satisfy all terms, irrespective of the Ivan's collection. Help them to find this minimum number of coins or define it's not possible to meet all the terms.\n\n\n-----Input-----\n\nThe only line of input contains 4 integers $N$, $M$, $K$, $L$ ($1 \\le K \\le N \\le 10^{18}$; $1 \\le M, \\,\\, L \\le 10^{18}$)\u00a0\u2014 quantity of different coins, number of Ivan's friends, size of Ivan's collection and quantity of coins, that must be new in Ivan's collection.\n\n\n-----Output-----\n\nPrint one number\u00a0\u2014 minimal number of coins one friend can gift to satisfy all the conditions. If it is impossible to satisfy all three conditions print \"-1\" (without quotes).\n\n\n-----Examples-----\nInput\n20 15 2 3\n\nOutput\n1\nInput\n10 11 2 4\n\nOutput\n-1\n\n\n-----Note-----\n\nIn the first test, one coin from each friend is enough, as he will be presented with 15 different coins and 13 of them will definitely be new.\n\nIn the second test, Ivan has 11 friends, but there are only 10 different coins. So all friends can't present him different coins.",
  "solutions": "[\"n, m, k, l = map(int, input().split())\\ncnt = (k + l + m - 1) // m\\nif cnt * m > n:\\n    print(-1)\\nelse:\\n    print(cnt)\", \"n, m, k, l = map(int, input().split())\\nneed = k + l\\nif need % m == 0 and need <= n:\\n    print(need // m)\\nelse:\\n    x = need // m + 1\\n    if x * m > n:\\n        print(-1)\\n    else:\\n        print(x)\", \"n, m, k, l = list(map(int, input().split()))\\nif (k+l+m-1)//m*m > n:\\n    print(-1)\\nelse:\\n    print((k+l+m-1)//m)\\n\", \"n, m, k, l = list(map(int, input().split()))\\nif k + l > n:\\n    print(-1)\\nelse:\\n    x = (k + l) // m + (1 if (k + l) % m != 0 else 0)\\n    if x * m > n:\\n        print(-1)\\n    else:\\n        print(x)\\n\", \"n,m,k,l=map(int,input().split())\\nc=(k+l)//m\\nif (k+l)%m!=0:\\n    c+=1\\nif n>=m*c:\\n    print(c)\\nelse :\\n    print(-1)\", \"from sys import stdin, stdout\\nfrom math import sin, tan, cos\\n\\nn, m, k, l = map(int, stdin.readline().split())\\n\\nlb, rb = 0, n // m + 1\\nwhile rb - lb > 1:\\n    mid = (lb + rb) >> 1\\n    \\n    if mid * m - k >= l:\\n        rb = mid\\n    else:\\n        lb = mid\\n\\nif lb != n // m:\\n    stdout.write(str(rb))\\nelse:\\n    stdout.write('-1')\", \"n, m, k, l = map(int, input().split())\\nk += l\\nx = (k + m - 1) // (m);\\nif m * x > n:\\n    print(-1)\\nelse:\\n    print(x)\", \"n, m, k, l = list(map(int, input().split()))\\nif (l > n - k):\\n    print(-1)\\nelse:\\n    am = ((l + k) // m + bool((l + k) % m))\\n    if am * m > n:\\n        print(-1)\\n    else:\\n        print(am)\", \"N, M, K, L = map(int, input().split())\\nif N < M or K + L > N:\\n    print(-1)\\nelse:\\n    print((L + K - 1) // M + 1 if ((L + K - 1) // M + 1) * M <= N else -1)\", \"n, m, k, l = list(map(int, input().split()))\\nrequired = k + l\\nper_friend = (required + m - 1) // m\\nif (m * per_friend > n):\\n    print(-1)\\nelse:\\n    print(per_friend)   \\n\", \"import math\\n\\ndef __starting_point():\\n    n, m, k, l = list(map(int, input().split()))\\n    one_friend = (k + l) // m + int((k + l) % m != 0)\\n    if one_friend * m > n:\\n        print(-1)\\n    else:\\n        print(one_friend)\\n\\n__starting_point()\", \"import math\\n\\ndef main():\\n    n,m,k,l = map(int, input().strip().split())\\n\\n    t = int(k + l + m - 1) // m\\n\\n    if k + l > n:\\n        print(-1)\\n        return\\n    \\n    if m * t > n:\\n        print(-1)\\n        return\\n    \\n    print(t)\\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"n, m, k, l = [int(x) for x in input().split()]\\nif (l + k) % m == 0:\\n    c = (l + k)//m\\nelse:\\n    c = (l + k)//m + 1\\nif m * c > n:\\n    print(-1)\\nelse:\\n    print(c)\", \"n, m, k, l = list(map(int, input().split()))\\nif m > n:\\n    print(-1)\\nelif l + k > n:\\n    print(-1)\\nelse:\\n    s = (l + k) // m + bool((l + k) % m)\\n    if s * m > n:\\n        print(-1)\\n    else:\\n        print(s)\\n\", \"n, m, k, l = map(int, input().split())\\nif m > n or (l + k + m - 1) // m * m > n:\\n    print(-1)\\nelse:\\n    x = (l + k + m - 1) // m\\n    print(x)\", \"import math, sys\\n\\ndef mp():\\n    return list(map(int, input().split()))\\n\\ndef main():\\n    n, m, k, l = mp()\\n    ost = n - k\\n    need = (l + k)\\n    if ost < l or need > n:\\n        print(-1)\\n        return\\n    ans = (l + k - 1) // m + 1\\n    if ans * m - k >= l and ans * m <= n:\\n        print(ans)\\n    else:\\n        print(-1)\\n    \\n    \\n    \\n\\ndeb = 0\\nif deb:\\n    file = open(\\\"input.txt\\\", \\\"r\\\")\\n    input = file.readline\\nelse:\\n    input = sys.stdin.readline\\n\\nmain()\\n\\nif deb:\\n    file.close()\\n\", \"import math\\n\\nn, m, k, l = map(int, input().split())\\n\\nx = (l + k) // m\\nif x * m < l + k:\\n    x += 1\\nassert x * m >= l + k\\n\\nif m * x > n:\\n    print(-1)\\nelse:\\n    print(x)\", \"#!/usr/bin/env python3\\nn,m,k,l=list(map(int,input().split()))\\nq=(l+k-1)//m+1\\nif q*m>n:print(-1)\\nelse:print(q)\\n\", \"def main():\\n    n, m, k, l = map(int, input().split())\\n    d = (l + k) // m\\n    if (l + k) % m:\\n        d += 1\\n    if m * d > n or n - k < l:\\n        print(-1)\\n    else:\\n        print(d)\\n\\n\\nmain()\", \"N, M, K, L = list(map(int, input().split()))\\n\\neach = (K + L) // M\\n\\nif (K + L) % M != 0:\\n    each += 1\\n\\nif each * M > N:\\n    print(-1)\\nelse:\\n    print(each)\\n\", \"n, m, k, l = map(int, input().split())\\nmm = (k + l)\\nif mm % m == 0:\\n    mm //= m\\nelse:\\n    mm = mm // m + 1\\nif n < mm * m:\\n    print(-1)\\nelse:\\n    print(mm)\", \"import sys\\nn, m, k, l  = [int(s) for s in input().split()]\\nif (k + l) % m != 0:\\n    i = (k + l) // m + 1\\nelse:\\n    i = (k + l) // m\\nif  i * m > n:\\n    print(-1)\\nelse:\\n    print(i)\\n    \\n\", \"n, m, k, l = list(map(int, input().split()))\\n\\ntarget = l + k\\nperfriend = target // m + (1 if target % m else 0)\\n\\nif  perfriend * m > n or m > n or target > n:\\n    print(-1)\\nelse:\\n    print(perfriend)\\n\\n\", \"n,m,k,l=list(map(int,input().split()))\\nif k+l>n:\\n    print('-1')\\nelse:\\n    x=(k+l)//m\\n    if (k+l)%m>0:\\n        x+=1\\n    if x*m>n:\\n        print('-1')\\n    else:\\n        print(x)\\n\", \"n,m,k,l = list(map(int, input().split()))\\nx = -(-(k+l)//m)\\nif x <= n/m:\\n    print(x)\\nelse:\\n    print(-1)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"20 15 2 3\\n\",\n    \"10 11 2 4\\n\",\n    \"2 1 1 1\\n\",\n    \"10 2 9 7\\n\",\n    \"530897800469409942 582203276934671957 137373076313041391 377446491430894140\\n\",\n    \"1000000000000000000 1 1 1000000000000000000\\n\",\n    \"48295947839584738 12 49503958 47108947578469711\\n\",\n    \"100 20 98 2\\n\",\n    \"1000000000000000000 1000000000000000000 1000000000000000000 1000000000000000000\\n\",\n    \"100 100 1 1\\n\",\n    \"1847865 4577 9483 478\\n\",\n    \"100 20 98 1\\n\",\n    \"100 20 98 3\\n\",\n    \"765492670657661908 120898708872120733 441256691517467806 47990392299392923\\n\",\n    \"213010000114902384 512822228505417058 119707578037963386 328177470098391815\\n\",\n    \"596503389699530515 914343495357891807 130250515210162891 644804913475506893\\n\",\n    \"63890874321754343 897803536671470111 34570989234398115 10108894437967468\\n\",\n    \"472139220663336814 338152858568948777 71689560172156215 572945143351096534\\n\",\n    \"778131271313761135 29162283248225583 355425770702597603 716328407201370097\\n\",\n    \"100000000000067841 932 9842 64\\n\",\n    \"800000030000007009 78 53784432543372 5435578332346625\\n\",\n    \"990754991918791804 172731536557340966 872344445472278981 798534984920208868\\n\",\n    \"778957518786811855 571857503518586907 769096994987230500 32325604610793188\\n\",\n    \"695046328995629472 971547627530533122 523943811516500483 107182605463941115\\n\",\n    \"80030159858197311 792835026333624499 74094987869466717 865812863350994075\\n\",\n    \"7 4 1 6\\n\",\n    \"99 5 98 1\\n\",\n    \"99999999994444488 3 77777777777777777 8888888888888888\\n\",\n    \"10 6 3 7\\n\",\n    \"4 4 2 2\\n\",\n    \"20 15 10 10\\n\",\n    \"20 15 20 3\\n\",\n    \"50 9 20 30\\n\",\n    \"1000000000000000 1000000000000000 1 1\\n\",\n    \"19366 12326 871 14611\\n\",\n    \"20 3 10 10\\n\",\n    \"20 15 6 10\\n\",\n    \"5 2 2 3\\n\",\n    \"26255 5436 5959 18019\\n\",\n    \"1000000000000000000 1000000000000 1000000000001 1000000000000\\n\",\n    \"5 3 2 1\\n\",\n    \"20 6 19 1\\n\",\n    \"10 9 6 4\\n\",\n    \"5 4 3 2\\n\",\n    \"1 1 1 1\\n\",\n    \"7 4 1 4\\n\",\n    \"7 3 6 1\\n\",\n    \"10 9 2 8\\n\",\n    \"5 2 1 4\\n\",\n    \"100000000000000000 99999999999999 99999999999999 9999\\n\",\n    \"20 2 20 5\\n\",\n    \"10 6 4 3\\n\",\n    \"3 2 1 2\\n\",\n    \"10 3 2 8\\n\",\n    \"1000000000000000000 1 1 999999999999999999\\n\",\n    \"1000000000000000000 2 1000000000000000 4\\n\",\n    \"9 5 2 6\\n\",\n    \"15 9 9 1\\n\",\n    \"20 12 7 6\\n\",\n    \"7 4 4 3\\n\",\n    \"21 10 5 16\\n\",\n    \"12 7 6 6\\n\",\n    \"3 3 1 1\\n\",\n    \"15 10 7 5\\n\",\n    \"20 11 1 13\\n\",\n    \"10 3 7 3\\n\",\n    \"10 9 7 3\\n\",\n    \"5 3 2 2\\n\",\n    \"12 5 3 9\\n\",\n    \"11 3 9 1\\n\",\n    \"19 5 12 5\\n\",\n    \"100 21 1 98\\n\",\n    \"25 15 22 2\\n\",\n    \"12 7 4 6\\n\",\n    \"12 3 12 1\\n\",\n    \"18 10 4 8\\n\",\n    \"100 3 1 99\\n\",\n    \"7 4 3 2\\n\",\n    \"17 7 1 15\\n\",\n    \"16 14 7 6\\n\",\n    \"9 7 2 7\\n\",\n    \"1000000000000000 1 1000000000000000 1\\n\",\n    \"9 4 3 4\\n\",\n    \"30 29 15 15\\n\",\n    \"10 3 9 1\\n\",\n    \"20 11 10 2\\n\",\n    \"29 15 5 13\\n\",\n    \"10 7 6 3\\n\",\n    \"4 2 1 2\\n\",\n    \"7 2 5 2\\n\",\n    \"1000000000000000000 1 100000000000000000 200000000000000000\\n\"\n  ],\n  \"outputs\": [\n    \"1\",\n    \"-1\",\n    \"2\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"3925745635664473\",\n    \"5\",\n    \"-1\",\n    \"1\",\n    \"3\",\n    \"5\",\n    \"-1\",\n    \"5\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"11\",\n    \"70376445703718\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"28888888888888889\",\n    \"-1\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"3\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"2\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"1000000000000000000\",\n    \"500000000000002\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"1\",\n    \"-1\",\n    \"-1\",\n    \"2\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"-1\",\n    \"2\",\n    \"-1\",\n    \"300000000000000000\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1068/A",
  "starter_code": ""
}