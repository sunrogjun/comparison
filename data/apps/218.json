{
  "task_id": "APPS/218",
  "problem_id": 218,
  "prompt": "You are given the string s of length n and the numbers p, q. Split the string s to pieces of length p and q.\n\nFor example, the string \"Hello\" for p = 2, q = 3 can be split to the two strings \"Hel\" and \"lo\" or to the two strings \"He\" and \"llo\".\n\nNote it is allowed to split the string s to the strings only of length p or to the strings only of length q (see the second sample test).\n\n\n-----Input-----\n\nThe first line contains three positive integers n, p, q (1 \u2264 p, q \u2264 n \u2264 100).\n\nThe second line contains the string s consists of lowercase and uppercase latin letters and digits.\n\n\n-----Output-----\n\nIf it's impossible to split the string s to the strings of length p and q print the only number \"-1\".\n\nOtherwise in the first line print integer k \u2014 the number of strings in partition of s.\n\nEach of the next k lines should contain the strings in partition. Each string should be of the length p or q. The string should be in order of their appearing in string s \u2014 from left to right.\n\nIf there are several solutions print any of them.\n\n\n-----Examples-----\nInput\n5 2 3\nHello\n\nOutput\n2\nHe\nllo\n\nInput\n10 9 5\nCodeforces\n\nOutput\n2\nCodef\norces\n\nInput\n6 4 5\nPrivet\n\nOutput\n-1\n\nInput\n8 1 1\nabacabac\n\nOutput\n8\na\nb\na\nc\na\nb\na\nc",
  "solutions": "[\"a, b, c = map(int, input().split(' '))\\nx = input()\\nfor i in range(105):\\n    for j in range(105):\\n        if i*b+j*c == a:\\n            print(i+j)\\n            for k in range(i):\\n                print(x[:b])\\n                x = x[b:]\\n            for l in range(j):\\n                print(x[:c])\\n                x = x[c:]\\n            quit()\\nprint(-1)\", \"n, p, q = list(map(int, input().split(\\\" \\\")))\\ns=input()\\n\\nc=-1\\n\\nfor i in range (n+1):\\n    for j in range (n+1):\\n        if p*i+q*j==n:\\n            c=i\\n            d=j\\n            break\\n    if c!=-1:\\n        break\\n\\nif c==-1:\\n    print(-1)\\nelse:\\n    print(c+d)\\n    for i in range (c):\\n        print(s[p*i:p*(i+1)])\\n    e=c*p\\n    for j in range (d):\\n        print(s[e+q*j:e+q*(j+1)])\\n\", \"def main():\\n    items=input().split()\\n    n=int(items[0])\\n    p=int(items[1])\\n    q=int(items[2])\\n    s=input()\\n    A=int(n/p)\\n    for a in range(A+1):\\n        forq=n-a*p\\n        if forq%q==0:\\n            b=int(forq/q)\\n            print(a+b)\\n            for i in range(a):\\n                print(s[i*p:(i+1)*p])\\n            for i in range(b):\\n                print(s[a*p+i*q:a*p+(i+1)*q])\\n            return\\n    print(-1)\\n    \\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n,p,q=list(map(int, input().split(\\\" \\\")))\\ns = input()\\nasdf = False\\nfor i in range(n//p+1):\\n    for j in range((n-i*p)//q+1):\\n        if i*p+j*q == n and asdf == False:\\n            print(i+j)\\n            asdf = True\\n            for a in range(i):\\n                print(s[a*p:(a+1)*p])\\n            for b in range(j):\\n                print(s[p*i+b*q:p*i+(b+1)*q])\\nif asdf == False:\\n    print(-1)\\n            \\n\", \"n, p, q = map(int, input().split())\\ns = input()\\nfor i in range(n // p + 1):\\n    if (n - i * p) % q == 0:\\n        print(i + (n - i * p) // q)\\n        for j in range(i):\\n            print(s[j * p:j * p + p])\\n        for j in range((n - i * p) // q):\\n            print(s[i * p + j * q: i * p + j * q + q])\\n        return\\nprint(-1)\", \"n, a, b = map(int, input().split())\\ns = input()\\nk1, k2 = 0, 0\\nfor i in range(n + 1):\\n    for j in range(n + 1):\\n        if i * a + j * b == n:\\n            k1 = i\\n            k2 = j\\n            break\\n    if k1 or k2:\\n        break\\nelse:\\n    print('-1')\\n\\nif k1 or k2:\\n    print(k1 + k2)\\n    i = 0\\n    while k1:\\n        print(s[i: i + a])\\n        k1 -= 1\\n        i += a\\n    while k2:\\n        print(s[i: i + b])\\n        k2 -= 1\\n        i += b\", \"#The Text Splitting.py\\nimport os\\nn, a, b = list(map(int, input().split()))\\ns = input()\\nmaxn = n // a\\n# print(s)\\nx = -1\\nfor i in range(0, maxn+1):\\n\\ttmp = n - a*i\\n\\tif tmp % b == 0:\\n\\t\\tx = i\\n\\t\\tbreak\\nif x != -1:\\n\\tprint(x + (n - a*x) // b)\\n\\tout = \\\"\\\"\\n\\tfor i in range(0, x):\\n\\t\\tout = s[a*i:(i+1)*a]\\n\\t\\tprint(out)\\n\\ty = (n - a*x) // b\\n\\tfor i in range(0, y):\\n\\t\\tout = s[b*i+a*x:(i+1)*b+a*x]\\n\\t\\tprint(out)\\nelse:\\n\\tprint(\\\"-1\\\")\\n#os.system(\\\"pause\\\")\\n\", \"import math\\n\\ndef euclid_algorithm(a, b):\\n    t1, t2 = abs(a), abs(b)\\n    #saving equalities:\\n    #t1 == x1 * a + y1 * b,\\n    #t2 == x2 * a + y2 * b. \\n    x1, y1, x2, y2 = int(math.copysign(1, a)), 0, 0, int(math.copysign(1, b))\\n    if t1 < t2:\\n        t1, t2 = t2, t1\\n        x1, y1, x2, y2 = x2, y2, x1, y1\\n\\n    while t2 > 0:\\n        if x1 * a + y1 * b != t1:\\n            print('inshalla')\\n        k = int(t1 // t2)\\n        t1, t2 = t2, t1 % t2\\n        #t1 - k * t2 == (x1 - k * x2) * a + (y1 - k * y2) * b\\n        x1, y1, x2, y2 = x2, y2, x1 - k * x2, y1 - k * y2\\n\\n    return t1, x1, y1\\n\\ndef opposite_element(x, p):\\n    gcd, k, l = euclid_algorithm(x, p)\\n    if gcd != 1:\\n        return -1\\n    return k % p\\n\\ndef fact_mod(n, p):\\n    prod = 1\\n    for i in range(2,n+1):\\n        prod *= i\\n        prod %= p\\n    return prod\\n\\nn, p, q = [int(x) for x in input().split()]\\ns = input().rstrip()\\nfor i in range(n // p + 1):\\n    if (n - p*i) % q == 0:\\n        j = (n - p*i) // q\\n        print(i+j)\\n        for k in range(i):\\n            print(s[k*p:(k+1)*p])\\n        for k in range(j):\\n            print(s[p*i + k*q: p*i + (k+1)*q])\\n        break\\nelse:\\n    print(-1)\\n    \\n\", \"n, a, b = list(map(int, input().split(' ')))\\n\\ns = input()\\n\\nc = 0\\nwhile c * a <= n and (n - c * a) % b != 0:\\n    c += 1\\n\\nif c * a > n:\\n    print(-1)\\nelse:\\n    cb = (n - a * c) // b\\n    print(c + cb)\\n    for i in range(c):\\n        print(s[a * i: a * (i + 1)])\\n    for i in range(cb):\\n        print(s[c * a + b * i: c * a + b * (i + 1)])\\n\", \"n, p, q = list(map(int, input().split()))\\ns = input()\\n\\nk1 = 0\\nk = 0\\n\\nr = n // p\\n\\nfor i in range(r, -1, -1):\\n    if (n - p * i) % q == 0:\\n        k1 = i\\n        k = k1 + ((n - p * i) // q)\\n\\n\\nif k == 0:\\n    print(-1)\\nelse:\\n    print(k)\\n    for i in range(k1):\\n        print(s[i*p: (i+1)*p])\\n    for i in range(k - k1):\\n        print(s[p*k1 + i*q: p*k1 + (i + 1)*q])\\n\", \"n, p, q = list(map(int, input().split()))\\ns = input()\\nm = 0\\nwhile m * p <= n:\\n    if (n - m * p) % q == 0:\\n        k = m + (n - m * p) // q\\n        print(k)\\n        for i in range(m):\\n            print(s[p * i: p * (i + 1)])\\n        for i in range(k - m):\\n            print(s[p * m + q * i: p * m + q * (i + 1)])\\n        break\\n    m += 1\\nelse:\\n    print(-1)\\n\", \"def main():\\n    n, p, q = list(map(int, input().split()))\\n    s = input()\\n\\n    for i in range(0, n + 1):\\n        for j in range(0, n + 1):\\n            if p * i + q * j == n:\\n                print(i + j)\\n                for k in range(i):\\n                    print(s[:p])\\n                    s = s[p:]\\n                for k in range(j):\\n                    print(s[:q])\\n                    s = s[q:]\\n                return 0\\n\\n    print(-1)\\n    return 0\\n\\nmain()\\n\", \"import sys\\n# fin = open(\\\"ecr4a.in\\\", \\\"r\\\")\\nfin = sys.stdin\\n\\nn, p, q = map(int, fin.readline().split())\\ns = fin.readline().rstrip()\\n\\n\\nkp, kq = None, None\\nfor i in range(0, n // p + 1):\\n    if not (n - i*p) % q:\\n        kp, kq = i, (n - i*p) // q\\n        break\\nelse:\\n    print(-1)\\n    return\\n\\nprint(kp+kq)\\ncpos, m = 0, p*kp\\nwhile (cpos < m):\\n    print(s[cpos:cpos + p])\\n    cpos += p\\nwhile (cpos < n):\\n    print(s[cpos:cpos + q])\\n    cpos += q\", \"import sys\\nif False:\\n\\tinp = open('A.txt', 'r')\\nelse:\\n\\tinp = sys.stdin\\n\\nn, p, q = list(map(int, inp.readline().split()))\\nstring = inp.readline().strip()\\n\\nlength = n\\nans = -1\\nfor i in range(n//p + 1):\\n\\tlength = n-p*i\\n\\tif length%q == 0:\\n\\t\\tans = i\\n\\t\\tbreak\\nif ans == -1:\\n\\tprint(-1)\\nelse:\\n\\tprint(ans + length//q)\\n\\tfor i in range(ans):\\n\\t\\tprint(string[:p])\\n\\t\\tstring = string[p:]\\n\\tfor i in range(length//q):\\n\\t\\tprint(string[:q])\\n\\t\\tstring = string[q:]\\n\\n\\n\\n\\n\", \"n, p, q = map(int, input().split())\\ns = input()\\nfor i in range(n // p + 1):\\n    if (n - i * p) % q == 0:\\n        print(i + (n - i * p) // q)\\n        for j in range(i):\\n            print(s[j * p:j * p + p])\\n        for j in range((n - i * p) // q):\\n            print(s[i * p + j * q: i * p + j * q + q])\\n        return\\nprint(-1)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5 2 3\\nHello\\n\",\n    \"10 9 5\\nCodeforces\\n\",\n    \"6 4 5\\nPrivet\\n\",\n    \"8 1 1\\nabacabac\\n\",\n    \"1 1 1\\n1\\n\",\n    \"10 8 1\\nuTl9w4lcdo\\n\",\n    \"20 6 4\\nfmFRpk2NrzSvnQC9gB61\\n\",\n    \"30 23 6\\nWXDjl9kitaDTY673R5xyTlbL9gqeQ6\\n\",\n    \"40 14 3\\nSOHBIkWEv7ScrkHgMtFFxP9G7JQLYXFoH1sJDAde\\n\",\n    \"50 16 3\\nXCgVJUu4aMQ7HMxZjNxe3XARNiahK303g9y7NV8oN6tWdyXrlu\\n\",\n    \"60 52 8\\nhae0PYwXcW2ziQCOSci5VaElHLZCZI81ULSHgpyG3fuZaP0fHjN4hCKogONj\\n\",\n    \"70 50 5\\n1BH1ECq7hjzooQOZdbiYHTAgATcP5mxI7kLI9rqA9AriWc9kE5KoLa1zmuTDFsd2ClAPPY\\n\",\n    \"80 51 8\\no2mpu1FCofuiLQb472qczCNHfVzz5TfJtVMrzgN3ff7FwlAY0fQ0ROhWmIX2bggodORNA76bHMjA5yyc\\n\",\n    \"90 12 7\\nclcImtsw176FFOA6OHGFxtEfEyhFh5bH4iktV0Y8onIcn0soTwiiHUFRWC6Ow36tT5bsQjgrVSTcB8fAVoe7dJIWkE\\n\",\n    \"100 25 5\\n2SRB9mRpXMRND5zQjeRxc4GhUBlEQSmLgnUtB9xTKoC5QM9uptc8dKwB88XRJy02r7edEtN2C6D60EjzK1EHPJcWNj6fbF8kECeB\\n\",\n    \"100 97 74\\nxL8yd8lENYnXZs28xleyci4SxqsjZqkYzkEbQXfLQ4l4gKf9QQ9xjBjeZ0f9xQySf5psDUDkJEtPLsa62n4CLc6lF6E2yEqvt4EJ\\n\",\n    \"51 25 11\\nwpk5wqrB6d3qE1slUrzJwMFafnnOu8aESlvTEb7Pp42FDG2iGQn\\n\",\n    \"70 13 37\\nfzL91QIJvNoZRP4A9aNRT2GTksd8jEb1713pnWFaCGKHQ1oYvlTHXIl95lqyZRKJ1UPYvT\\n\",\n    \"10 3 1\\nXQ2vXLPShy\\n\",\n    \"4 2 3\\naaaa\\n\",\n    \"100 1 1\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\\n\",\n    \"99 2 4\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"11 2 3\\nhavanahavan\\n\",\n    \"100 2 2\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"17 3 5\\ngopstopmipodoshli\\n\",\n    \"5 4 3\\nfoyku\\n\",\n    \"99 2 2\\n123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\\n\",\n    \"99 2 2\\nrecursionishellrecursionishellrecursionishellrecursionishellrecursionishellrecursionishelldontuseit\\n\",\n    \"11 2 3\\nqibwnnvqqgo\\n\",\n    \"4 4 3\\nhhhh\\n\",\n    \"99 2 2\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"99 2 5\\nhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\\n\",\n    \"10 5 9\\nCodeforces\\n\",\n    \"10 5 9\\naaaaaaaaaa\\n\",\n    \"11 3 2\\nmlmqpohwtsf\\n\",\n    \"3 3 2\\nzyx\\n\",\n    \"100 3 3\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"4 2 3\\nzyxw\\n\",\n    \"3 2 3\\nejt\\n\",\n    \"5 2 4\\nzyxwv\\n\",\n    \"100 1 1\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"100 5 4\\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"3 2 2\\nzyx\\n\",\n    \"99 2 2\\nhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhh\\n\",\n    \"26 8 9\\nabcabcabcabcabcabcabcabcab\\n\",\n    \"6 3 5\\naaaaaa\\n\",\n    \"3 2 3\\nzyx\\n\",\n    \"5 5 2\\naaaaa\\n\",\n    \"4 3 2\\nzyxw\\n\",\n    \"5 4 3\\nzyxwv\\n\",\n    \"95 3 29\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab\\n\",\n    \"3 2 2\\naaa\\n\",\n    \"91 62 3\\nfjzhkfwzoabaauvbkuzaahkozofaophaafhfpuhobufawkzbavaazwavwppfwapkapaofbfjwaavajojgjguahphofj\\n\",\n    \"99 2 2\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\\n\",\n    \"56 13 5\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab\\n\",\n    \"79 7 31\\nabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabca\\n\",\n    \"92 79 6\\nxlvplpckwnhmctoethhslkcyashqtsoeltriddglfwtgkfvkvgytygbcyohrvcxvosdioqvackxiuifmkgdngvbbudcb\\n\",\n    \"48 16 13\\nibhfinipihcbsqnvtgsbkobepmwymlyfmlfgblvhlfhyojsy\\n\",\n    \"16 3 7\\naaaaaaaaaaaaaaaa\\n\",\n    \"11 10 3\\naaaaaaaaaaa\\n\",\n    \"11 8 8\\naaaaaaaaaaa\\n\",\n    \"11 7 3\\naaaaaaaaaaa\\n\",\n    \"41 3 4\\nabcabcabcabcabcabcabcabcabcabcabcabcabcab\\n\",\n    \"11 3 2\\naaaaaaaaaaa\\n\",\n    \"14 9 4\\nabcdefghijklmn\\n\",\n    \"9 9 5\\n123456789\\n\",\n    \"92 10 41\\nmeotryyfneonmnrvfnhqlehlxtvpracifpadcofecvbikoitrlgeftiqofpvacgocrdiquhatlqosqvtduenaqkwrnnw\\n\",\n    \"17 16 3\\ndxyhgtsxtuyljmclj\\n\",\n    \"82 13 30\\nfmtwumakkejtolxqxrnydhqoufwtdwldfxcfjrndauqcarhbwmdwxsxfbqjsfspuxobywhcrvlndsdmkqd\\n\",\n    \"95 3 3\\nihnfqcswushyoirjxlxxnwqtwtaowounkumxukwpacxwatimhhhoggqwkkspcplvyndfukbxickcixidgxkjtnpkoeiwlor\\n\",\n    \"7 5 3\\nzyxwvut\\n\",\n    \"17 16 4\\nctvfhkiakagcilrdw\\n\"\n  ],\n  \"outputs\": [\n    \"2\\nHe\\nllo\\n\",\n    \"2\\nCodef\\norces\\n\",\n    \"-1\\n\",\n    \"8\\na\\nb\\na\\nc\\na\\nb\\na\\nc\\n\",\n    \"1\\n1\\n\",\n    \"10\\nu\\nT\\nl\\n9\\nw\\n4\\nl\\nc\\nd\\no\\n\",\n    \"5\\nfmFR\\npk2N\\nrzSv\\nnQC9\\ngB61\\n\",\n    \"5\\nWXDjl9\\nkitaDT\\nY673R5\\nxyTlbL\\n9gqeQ6\\n\",\n    \"6\\nSOHBIkWEv7Scrk\\nHgMtFFxP9G7JQL\\nYXF\\noH1\\nsJD\\nAde\\n\",\n    \"8\\nXCgVJUu4aMQ7HMxZ\\njNxe3XARNiahK303\\ng9y\\n7NV\\n8oN\\n6tW\\ndyX\\nrlu\\n\",\n    \"2\\nhae0PYwXcW2ziQCOSci5VaElHLZCZI81ULSHgpyG3fuZaP0fHjN4\\nhCKogONj\\n\",\n    \"14\\n1BH1E\\nCq7hj\\nzooQO\\nZdbiY\\nHTAgA\\nTcP5m\\nxI7kL\\nI9rqA\\n9AriW\\nc9kE5\\nKoLa1\\nzmuTD\\nFsd2C\\nlAPPY\\n\",\n    \"10\\no2mpu1FC\\nofuiLQb4\\n72qczCNH\\nfVzz5TfJ\\ntVMrzgN3\\nff7FwlAY\\n0fQ0ROhW\\nmIX2bggo\\ndORNA76b\\nHMjA5yyc\\n\",\n    \"10\\nclcImtsw176F\\nFOA6OHGFxtEf\\nEyhFh5bH4ikt\\nV0Y8onIcn0so\\nTwiiHUF\\nRWC6Ow3\\n6tT5bsQ\\njgrVSTc\\nB8fAVoe\\n7dJIWkE\\n\",\n    \"20\\n2SRB9\\nmRpXM\\nRND5z\\nQjeRx\\nc4GhU\\nBlEQS\\nmLgnU\\ntB9xT\\nKoC5Q\\nM9upt\\nc8dKw\\nB88XR\\nJy02r\\n7edEt\\nN2C6D\\n60Ejz\\nK1EHP\\nJcWNj\\n6fbF8\\nkECeB\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"10\\nX\\nQ\\n2\\nv\\nX\\nL\\nP\\nS\\nh\\ny\\n\",\n    \"2\\naa\\naa\\n\",\n    \"100\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\nb\\n\",\n    \"-1\\n\",\n    \"4\\nha\\nvan\\naha\\nvan\\n\",\n    \"50\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\naa\\n\",\n    \"5\\ngop\\nsto\\npmi\\npod\\noshli\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"4\\nqi\\nbwn\\nnvq\\nqgo\\n\",\n    \"1\\nhhhh\\n\",\n    \"-1\\n\",\n    \"21\\nhh\\nhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\nhhhhh\\n\",\n    \"2\\nCodef\\norces\\n\",\n    \"2\\naaaaa\\naaaaa\\n\",\n    \"5\\nmlm\\nqp\\noh\\nwt\\nsf\\n\",\n    \"1\\nzyx\\n\",\n    \"-1\\n\",\n    \"2\\nzy\\nxw\\n\",\n    \"1\\nejt\\n\",\n    \"-1\\n\",\n    \"100\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\n\",\n    \"25\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\naaaa\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"3\\nabcabcab\\ncabcabcab\\ncabcabcab\\n\",\n    \"2\\naaa\\naaa\\n\",\n    \"1\\nzyx\\n\",\n    \"1\\naaaaa\\n\",\n    \"2\\nzy\\nxw\\n\",\n    \"-1\\n\",\n    \"23\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabc\\nabcabcabcabcabcabcabcabcabcab\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"8\\nabcabcabcabca\\nbcabcabcabcab\\ncabca\\nbcabc\\nabcab\\ncabca\\nbcabc\\nabcab\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"3\\nibhfinipihcbsqnv\\ntgsbkobepmwymlyf\\nmlfgblvhlfhyojsy\\n\",\n    \"4\\naaa\\naaa\\naaa\\naaaaaaa\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"11\\nabc\\nabc\\nabc\\nabca\\nbcab\\ncabc\\nabca\\nbcab\\ncabc\\nabca\\nbcab\\n\",\n    \"5\\naaa\\naa\\naa\\naa\\naa\\n\",\n    \"-1\\n\",\n    \"1\\n123456789\\n\",\n    \"3\\nmeotryyfne\\nonmnrvfnhqlehlxtvpracifpadcofecvbikoitrlg\\neftiqofpvacgocrdiquhatlqosqvtduenaqkwrnnw\\n\",\n    \"-1\\n\",\n    \"5\\nfmtwumakkejto\\nlxqxrnydhqouf\\nwtdwldfxcfjrn\\ndauqcarhbwmdw\\nxsxfbqjsfspuxobywhcrvlndsdmkqd\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/612/A",
  "starter_code": ""
}