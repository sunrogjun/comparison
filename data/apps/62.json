{
  "task_id": "APPS/62",
  "problem_id": 62,
  "prompt": "Since most contestants do not read this part, I have to repeat that Bitlandians are quite weird. They have their own jobs, their own working method, their own lives, their own sausages and their own games!\n\nSince you are so curious about Bitland, I'll give you the chance of peeking at one of these games.\n\nBitLGM and BitAryo are playing yet another of their crazy-looking genius-needed Bitlandish games. They've got a sequence of n non-negative integers a_1, a_2, ..., a_{n}. The players make moves in turns. BitLGM moves first. Each player can and must do one of the two following actions in his turn:\n\n  Take one of the integers (we'll denote it as a_{i}). Choose integer x (1 \u2264 x \u2264 a_{i}). And then decrease a_{i} by x, that is, apply assignment: a_{i} = a_{i} - x.  Choose integer x $(1 \\leq x \\leq \\operatorname{min}_{i = 1} a_{i})$. And then decrease all a_{i} by x, that is, apply assignment: a_{i} = a_{i} - x, for all i. \n\nThe player who cannot make a move loses.\n\nYou're given the initial sequence a_1, a_2, ..., a_{n}. Determine who wins, if both players plays optimally well and if BitLGM and BitAryo start playing the described game in this sequence.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 3).\n\nThe next line contains n integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} < 300).\n\n\n-----Output-----\n\nWrite the name of the winner (provided that both players play optimally well). Either \"BitLGM\" or \"BitAryo\" (without the quotes).\n\n\n-----Examples-----\nInput\n2\n1 1\n\nOutput\nBitLGM\n\nInput\n2\n1 2\n\nOutput\nBitAryo\n\nInput\n3\n1 2 1\n\nOutput\nBitLGM",
  "solutions": "[\"from math import *\\nn=int(input())\\nif n==3:\\n    li=list(map(int,input().split()))\\n    ans=0\\n    flag=0\\n    for i in li:\\n        ans^=i\\n    if ans==0:\\n        print(\\\"BitAryo\\\")\\n    else:\\n        print(\\\"BitLGM\\\")\\nelif n==2:\\n    li=list(map(int,input().split()))\\n    li.sort()\\n    phi=(1+sqrt(5))/2\\n    ch=[0]*(785)\\n    for i in range(300):\\n        a=floor(phi*i)\\n        b=floor((phi**2)*i)\\n        ch[a]=b\\n        ch[b]=a\\n    if ch[li[0]]==li[1]:\\n        print(\\\"BitAryo\\\")\\n    else:\\n        print(\\\"BitLGM\\\")\\nelse:\\n    li=int(input())\\n    if li==0:\\n        print(\\\"BitAryo\\\")\\n    else:\\n        print(\\\"BitLGM\\\")\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2\\n1 1\\n\",\n    \"2\\n1 2\\n\",\n    \"3\\n1 2 1\\n\",\n    \"2\\n1 3\\n\",\n    \"2\\n3 5\\n\",\n    \"2\\n9 10\\n\",\n    \"2\\n6 8\\n\",\n    \"3\\n0 0 0\\n\",\n    \"2\\n223 58\\n\",\n    \"2\\n106 227\\n\",\n    \"2\\n125 123\\n\",\n    \"3\\n31 132 7\\n\",\n    \"2\\n41 29\\n\",\n    \"3\\n103 286 100\\n\",\n    \"3\\n9 183 275\\n\",\n    \"3\\n19 88 202\\n\",\n    \"3\\n234 44 69\\n\",\n    \"3\\n244 241 295\\n\",\n    \"1\\n6\\n\",\n    \"1\\n231\\n\",\n    \"2\\n241 289\\n\",\n    \"2\\n200 185\\n\",\n    \"2\\n218 142\\n\",\n    \"3\\n124 47 228\\n\",\n    \"3\\n134 244 95\\n\",\n    \"1\\n0\\n\",\n    \"1\\n10\\n\",\n    \"1\\n2\\n\",\n    \"1\\n1\\n\",\n    \"1\\n99\\n\",\n    \"2\\n44 27\\n\",\n    \"2\\n280 173\\n\",\n    \"2\\n29 47\\n\",\n    \"2\\n16 26\\n\",\n    \"2\\n58 94\\n\",\n    \"2\\n17 28\\n\",\n    \"2\\n59 96\\n\",\n    \"2\\n164 101\\n\",\n    \"2\\n143 88\\n\",\n    \"2\\n69 112\\n\",\n    \"2\\n180 111\\n\",\n    \"2\\n159 98\\n\",\n    \"2\\n183 113\\n\",\n    \"2\\n162 100\\n\",\n    \"2\\n230 142\\n\",\n    \"2\\n298 184\\n\",\n    \"2\\n144 233\\n\",\n    \"2\\n0 0\\n\",\n    \"2\\n173 280\\n\",\n    \"2\\n180 111\\n\",\n    \"2\\n251 155\\n\",\n    \"2\\n114 185\\n\",\n    \"2\\n156 253\\n\",\n    \"2\\n144 233\\n\",\n    \"2\\n0 0\\n\",\n    \"2\\n14 23\\n\",\n    \"2\\n2 1\\n\",\n    \"2\\n70 43\\n\",\n    \"2\\n49 30\\n\",\n    \"2\\n150 243\\n\",\n    \"2\\n6 10\\n\",\n    \"2\\n152 246\\n\",\n    \"2\\n13 8\\n\",\n    \"2\\n293 181\\n\",\n    \"2\\n15 9\\n\",\n    \"2\\n295 182\\n\",\n    \"2\\n62 38\\n\",\n    \"2\\n80 130\\n\",\n    \"2\\n40 65\\n\",\n    \"1\\n248\\n\",\n    \"1\\n10\\n\",\n    \"2\\n216 91\\n\",\n    \"1\\n234\\n\",\n    \"2\\n140 193\\n\",\n    \"3\\n151 97 120\\n\",\n    \"1\\n213\\n\",\n    \"3\\n119 251 222\\n\",\n    \"3\\n129 148 141\\n\",\n    \"1\\n147\\n\",\n    \"2\\n124 194\\n\",\n    \"3\\n184 222 102\\n\",\n    \"3\\n101 186 223\\n\",\n    \"3\\n0 87 87\\n\",\n    \"3\\n144 33 177\\n\",\n    \"3\\n49 252 205\\n\",\n    \"3\\n49 126 79\\n\",\n    \"3\\n152 66 218\\n\",\n    \"3\\n181 232 93\\n\",\n    \"3\\n15 150 153\\n\",\n    \"3\\n191 50 141\\n\",\n    \"3\\n162 230 68\\n\",\n    \"3\\n4 19 23\\n\",\n    \"3\\n222 129 95\\n\",\n    \"3\\n38 16 54\\n\",\n    \"3\\n254 227 29\\n\",\n    \"3\\n196 45 233\\n\",\n    \"3\\n70 45 107\\n\",\n    \"3\\n190 61 131\\n\",\n    \"3\\n0 173 173\\n\",\n    \"3\\n50 69 119\\n\",\n    \"1\\n108\\n\",\n    \"1\\n15\\n\",\n    \"1\\n85\\n\",\n    \"1\\n291\\n\",\n    \"1\\n1\\n\",\n    \"2\\n11 222\\n\",\n    \"2\\n218 127\\n\",\n    \"2\\n280 24\\n\",\n    \"2\\n298 281\\n\",\n    \"3\\n275 70 60\\n\",\n    \"3\\n299 299 298\\n\",\n    \"3\\n299 299 299\\n\",\n    \"3\\n299 299 299\\n\",\n    \"2\\n298 299\\n\",\n    \"2\\n299 299\\n\",\n    \"1\\n299\\n\",\n    \"3\\n299 290 288\\n\"\n  ],\n  \"outputs\": [\n    \"BitLGM\\n\",\n    \"BitAryo\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitAryo\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitAryo\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitAryo\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitAryo\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\",\n    \"BitLGM\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/282/D",
  "starter_code": ""
}