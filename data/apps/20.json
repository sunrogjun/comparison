{
  "task_id": "APPS/20",
  "problem_id": 20,
  "prompt": "Karen is getting ready for a new school day!\n\n [Image] \n\nIt is currently hh:mm, given in a 24-hour format. As you know, Karen loves palindromes, and she believes that it is good luck to wake up when the time is a palindrome.\n\nWhat is the minimum number of minutes she should sleep, such that, when she wakes up, the time is a palindrome?\n\nRemember that a palindrome is a string that reads the same forwards and backwards. For instance, 05:39 is not a palindrome, because 05:39 backwards is 93:50. On the other hand, 05:50 is a palindrome, because 05:50 backwards is 05:50.\n\n\n-----Input-----\n\nThe first and only line of input contains a single string in the format hh:mm (00 \u2264  hh  \u2264 23, 00 \u2264  mm  \u2264 59).\n\n\n-----Output-----\n\nOutput a single integer on a line by itself, the minimum number of minutes she should sleep, such that, when she wakes up, the time is a palindrome.\n\n\n-----Examples-----\nInput\n05:39\n\nOutput\n11\n\nInput\n13:31\n\nOutput\n0\n\nInput\n23:59\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first test case, the minimum number of minutes Karen should sleep for is 11. She can wake up at 05:50, when the time is a palindrome.\n\nIn the second test case, Karen can wake up immediately, as the current time, 13:31, is already a palindrome.\n\nIn the third test case, the minimum number of minutes Karen should sleep for is 1 minute. She can wake up at 00:00, when the time is a palindrome.",
  "solutions": "[\"s = input()\\nh = int(s[:2])\\nm = int(s[3:])\\n\\ndef ispalin(h, m):\\n    s = \\\"%02d:%02d\\\"%(h,m)\\n    return s == s[::-1]\\n\\nfor d in range(999999):\\n    if ispalin(h, m):\\n        print(d)\\n        break\\n    m+= 1\\n    if m == 60:\\n        h = (h+1)%24\\n        m = 0\\n\", \"def f(x, y):\\n    xx = str(x)\\n    if len(xx) == 1: xx = '0' + xx\\n    yy = str(y)\\n    if len(yy) == 1: yy = '0' + yy\\n    return yy[::-1] != xx\\n\\nread = lambda: map(int, input().split(':'))\\na, b = read()\\ncnt = 0\\nwhile f(a, b):\\n    b += 1\\n    if b == 60:\\n        a += 1\\n        b = 0\\n    if a == 24:\\n        a = 0\\n    cnt += 1\\nprint(cnt)\", \"a, b = input().split(':')\\na = int(a)\\nb = int(b)\\nanw = 0\\n\\ndef palin(s):\\n  return s == s[::-1]\\n\\nwhile not palin(str(a).zfill(2) + str(b).zfill(2)):\\n  anw += 1\\n  b += 1\\n  if (b == 60):\\n    b = 0\\n    a += 1\\n  if (a == 24):\\n    a = 0\\n    \\nprint(anw)\", \"h, m = map(int, input().split(':'))\\n\\n\\ndef increment():\\n    nonlocal m, h\\n    m += 1\\n    h += m // 60\\n    m %= 60\\n    h %= 24\\n\\n\\ndef reverse(num):\\n    return num % 10 * 10 + num // 10\\n\\n\\nans = 0\\nwhile h != reverse(m):\\n    increment()\\n    ans += 1\\n\\nprint(ans)\", \"s = input().split(\\\":\\\")\\nfir = int(s[0])\\nsec = int(s[1])\\n\\ndef ispal(a,b):\\n    if len(a)==1:a = \\\"0\\\"+a\\n    if len(b)==1:b = \\\"0\\\"+b\\n    if a[::-1]==b:return True\\n\\nans = 0\\nwhile not ispal(str(fir),str(sec)):\\n    ans += 1\\n    sec += 1\\n    if sec == 60:\\n        sec = 0\\n        fir += 1\\n    if fir == 24:\\n        fir  = 0\\n        sec = 0\\nprint(ans)\\n\", \"hh, dd = list(map(int, input().split(':')))\\n\\ncnt = 0\\n\\nwhile True:\\n    H = str(hh)\\n    D = str(dd)\\n    if len(H) < 2:\\n        H = \\\"0\\\" + H\\n    if len(D) < 2:\\n        D = \\\"0\\\" + D\\n    if H == D[::-1]:\\n        print(cnt)\\n        return\\n    dd += 1\\n    if dd > 59:\\n        dd = 0\\n        hh += 1\\n    if hh > 23:\\n        hh = 0\\n    cnt += 1\\n\", \"t = input()\\n\\nans = 0\\n\\nwhile(t != t[::-1]):\\n\\th, m = map(int, t.split(':'))\\n\\n\\tm += 1\\n\\th += m // 60\\n\\tm %= 60\\n\\th %= 24\\n\\n\\tans += 1\\n\\tt = \\\"{}{}:{}{}\\\".format(str(h//10), str(h%10), str(m//10), str(m%10))\\n\\nprint(ans)\", \"st = input()\\nfrom datetime import datetime as dt\\nimport datetime\\ntda  = dt.strptime(st,'%H:%M')\\n\\ndef isP(s):\\n    for i in range(len(s)):\\n        if(s[i]!=s[len(s)-i-1]):\\n            return False\\n    return True\\nfor i in range(3600):\\n    new = tda + datetime.timedelta(minutes=i)\\n    a = new.strftime('%H:%M')\\n    if isP(a):\\n        print(i)\\n        break\\n\\n\", \"def to_string(n):\\n    s = str(n)\\n    if n < 10:\\n        s = \\\"0\\\" + s\\n    return s\\n\\ns1, s2 = list(map(int, input().split(\\\":\\\")))\\n\\nres = 0\\nwhile(to_string(s1) != to_string(s2)[::-1]):\\n    res += 1\\n    s2 += 1\\n    if(s2 == 60):\\n        s2 = 0\\n        s1 += 1\\n    if(s1 == 24):\\n        s1 = 0\\nprint(res)\\n\", \"h, m = [int(i) for i in input().split(':')]\\nc = 0\\n\\nwhile True:\\n    s = str(h).rjust(2, '0') + str(m).rjust(2, '0')\\n    if s == s[::-1]:\\n        break\\n    c += 1\\n    m += 1\\n    if m >= 60:\\n        m %= 60\\n        h += 1\\n    if h == 24:\\n        h = 0\\n\\nprint(c)\\n    \\n\\n\", \"# coding: utf-8\\n\\ndef is_parindrome(h, m):\\n    s = \\\"{:02d}:{:02d}\\\".format(h, m)\\n    return s == s[::-1]\\n\\n\\ndef main():\\n    h, m = list(map(int, input().split(\\\":\\\")))\\n    c = 0\\n    while not is_parindrome(h, m):\\n        m += 1\\n        c += 1\\n        if m == 60:\\n            h += 1\\n            m = 0\\n            if h == 24:\\n                h = 0\\n    return c\\n\\n\\nprint(main())\\n\", \"h, m = list(map(int, input().split(':')))\\nc = 0\\nwhile True:\\n    r = (m % 10) * 10 + m // 10\\n    if r == h:\\n        print(c)\\n        break\\n    c += 1\\n    m += 1\\n    if m == 60:\\n        m = 0\\n        h += 1\\n    if h == 24:\\n        h = 0\\n    \\n\", \"def b(h, m):\\n    s = '%02d:%02d'%(h, m)\\n    return s == s[::-1]\\n\\nh, m = list(map(int, input().split(':')))\\nans = 0\\nwhile not b(h, m):\\n    ans += 1\\n    m += 1\\n    if m == 60:\\n        m = 0\\n        h = (h+1)%24\\nprint(ans)\\n\", \"import sys\\n\\ndef solve():\\n    s = input()\\n\\n    m = timetomin(s)\\n    ans = 0\\n\\n    while (not is_pali(mintotime(m))):\\n        m += 1\\n        m %= 24 * 60\\n        ans += 1\\n\\n    print(ans)\\n\\ndef is_pali(s):\\n    return s == s[::-1]\\n\\ndef mintotime(m):\\n    return '{:02d}:{:02d}'.format(m // 60, m % 60)\\n\\ndef timetomin(s):\\n    h, m = map(int, s.split(':'))\\n    return h * 60 + m\\n\\ndef __starting_point():\\n    solve()\\n__starting_point()\", \"def parse_time(s):\\n    hh, mm = s.split(\\\":\\\", 1)\\n    return int(hh), int(mm)\\n\\n\\ndef increase_time(time):\\n    hh, mm = time\\n    mm = mm + 1\\n    if mm == 60:\\n        hh, mm = hh + 1, 0\\n    if hh == 24:\\n        hh = 0\\n    return hh, mm\\n\\n\\ndef time_to_string(time):\\n    hh, mm = time\\n    return \\\"%02d:%02d\\\" % (hh, mm)\\n\\n\\ndef is_palindrome(time):\\n    s = time_to_string(time)\\n    return s == s[::-1]\\n\\n\\ndef solve(inp):\\n    time = parse_time(inp)\\n    elapsed = 0\\n    while not is_palindrome(time):\\n        elapsed += 1\\n        time = increase_time(time)\\n    return elapsed\\n\\n\\ndef __starting_point():\\n    print(solve(input()))\\n\\n__starting_point()\", \"def f():\\n    nonlocal a, b\\n    if a == '23' and b == '59':\\n        a = '00'\\n        b = '00'\\n        return\\n    \\n    if b == '59':\\n        a = str(int(a) + 1)\\n        if len(a) == 1:\\n            a = '0' + a\\n            \\n        b = '00'\\n        return\\n    \\n    b = str(int(b) + 1)\\n    if len(b) == 1:\\n        b = '0' + b\\n\\n\\ndef f1(s):\\n    res = ''\\n    for i in range(len(s)):\\n        res += s[len(s) - i - 1]\\n        \\n    return res\\n\\n\\ns = input()\\na = s[:2]\\nb = s[3:]\\n\\nans = 0\\nwhile a + b != f1(b) + f1(a):\\n    f()\\n    ans += 1\\n    \\nprint(ans)\", \"a,b=input().split(\\\":\\\")\\n\\nans = 0\\nwhile a[1]!=b[0] or a[0]!=b[1]:\\n    ans +=1\\n    x= 0\\n    if b==\\\"59\\\":x+=1\\n    b = str((int(b)+1)%60).zfill(2)\\n    a = str((int(a)+x)%24).zfill(2)\\nprint(ans)    \", \"time = input()\\nb = time.find(':')\\nh = int(time[:b])\\nm = int(time[b + 1:])\\nfor i in range(60 * 24):\\n    time = \\\"0\\\" * (2 - len(str(h))) + str(h) + \\\"0\\\" * (2 - len(str(m))) + str(m)\\n    if time == time[::-1]:\\n        print(i)\\n        return\\n    m += 1\\n    h += m // 60\\n    h %= 24\\n    m %= 60\\n\", \"h,m = [int(x) for x in input().split(\\\":\\\")]\\nans = 0\\ndef padL(s):\\n    while len(s) < 2:\\n        s = '0' + s\\n    return s\\ndef palindrome():\\n    t = padL(str(h)) + padL(str(m))\\n    return t == t[::-1]\\nwhile not palindrome():\\n    m += 1\\n    if m == 60:\\n        h += 1\\n        m = 0\\n        if h == 24:\\n            h = 0\\n    ans += 1\\nprint(ans)\", \"hh, mm = list(map(int, input().split(':')))\\n\\nans = 0\\nfor i in range(1440):\\n    t = hh * 60 + mm + i\\n    hi = str((t // 60) % 24)\\n    if len(hi) == 1:\\n        hi = '0' + hi\\n    mi = str(t % 60)\\n    if len(mi) == 1:\\n        mi = '0' + mi\\n    s = hi + ':' + mi\\n    if list(s) == list(reversed(list(s))):\\n        ans = i\\n        break\\n\\nprint(ans)\\n\", \"#786\\nh, m = list(map(int, input().split(':')))\\n\\ndef rev(t):\\n\\ts = ''\\n\\tfor c in reversed(t):\\n\\t\\ts += c\\n\\treturn s\\ndef fun(hour, minute):\\n\\tsm, sh = '', ''\\n\\tif minute < 10:\\n\\t\\tsm = '0' + str(minute)\\n\\telse:\\n\\t\\tsm = str(minute)\\n\\tif hour < 10:\\n\\t\\tsh = '0' + str(hour)\\n\\telse:\\n\\t\\tsh = str(hour)\\n\\treturn sh + sm\\ndef is_palindrome(t):\\n\\tif rev(t) == t:\\n\\t\\treturn True\\n\\treturn False\\n\\nres = 0\\n\\nwhile True:\\n\\tif is_palindrome(fun(h, m)):\\n\\t\\tprint(res)\\n\\t\\tbreak\\n\\tm += 1\\n\\tif m == 60:\\n\\t\\th += 1\\n\\t\\tm = 0\\n\\tif h == 24:\\n\\t\\th = 0\\n\\tres += 1\\n\", \"t = list(map(int, input().split(':')))\\n\\ndef isPal(t):\\n\\treturn t[0] // 10 == t[1] % 10 and t[0] % 10 == t[1] // 10\\n\\ndef next():\\n\\tt[1] += 1\\n\\tif t[1] == 60:\\n\\t\\tt[1] = 0\\n\\t\\tt[0] += 1\\n\\tif t[0] == 24:\\n\\t\\tt[0] = 0\\n\\nans = 0\\nwhile not isPal(t):\\n\\tnext()\\n\\tans += 1\\n\\nprint(ans)\", \"h, m = [int(i) for i in input().strip().split(':')]\\nt = h * 60 + m\\nfor i in range(1440):\\n\\ta = str(t // 60)\\n\\tb = str(t % 60)\\n\\tif len(a) == 1:\\n\\t\\ta = '0' + a\\n\\tif len(b) == 1:\\n\\t\\tb = '0' + b\\n\\tc = b[1] + b[0]\\n\\tif a == c:\\n\\t\\tprint(i)\\n\\t\\treturn\\n\\tt = (t + 1) % 1440\\n\", \"time = input()\\nnumbers = time.split(\\\":\\\")\\nhour = int(numbers[0])\\nminute = int(numbers[1])\\ntotal = hour * 60 + minute\\nminutes = 0\\nresults = \\\"no\\\"\\nwhile results != \\\"yes\\\":\\n    hour = str(int(total / 60) %  24)\\n    minute = str(total % 60)\\n    if len(hour) == 1:\\n        hour = \\\"0\\\" + hour\\n    if len(minute) == 1:\\n        minute = \\\"0\\\" + minute\\n    time = hour + minute\\n    if time[::-1] == time:\\n        results = \\\"yes\\\"\\n        break\\n    minutes += 1\\n    total += 1\\nprint(minutes)\", \"u = input().split(':')\\nh = u[0]\\nm = u[1]\\ndef add(minute):\\n    hh = minute//60 + int(h)\\n    mm = minute%60 + int(m)\\n    if mm >= 60:\\n        mm -= 60\\n        hh += 1\\n    if hh >= 24:\\n        hh -= 24\\n    if hh < 10:\\n        hh = '0' + str(hh)\\n    else:\\n        hh = str(hh)\\n    if mm < 10:\\n        mm = '0' + str(mm)\\n    else:\\n        mm = str(mm)\\n    strr = hh + mm\\n    return strr == strr[::-1]\\n\\nfor i in range(0, 1000000):\\n    if add(i):\\n        print(i)\\n        break\\n    \\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"05:39\\n\",\n    \"13:31\\n\",\n    \"23:59\\n\",\n    \"13:32\\n\",\n    \"14:40\\n\",\n    \"14:00\\n\",\n    \"05:50\\n\",\n    \"12:22\\n\",\n    \"12:34\\n\",\n    \"05:30\\n\",\n    \"14:14\\n\",\n    \"01:10\\n\",\n    \"02:20\\n\",\n    \"03:30\\n\",\n    \"04:40\\n\",\n    \"10:01\\n\",\n    \"11:11\\n\",\n    \"12:21\\n\",\n    \"14:41\\n\",\n    \"15:51\\n\",\n    \"20:02\\n\",\n    \"21:12\\n\",\n    \"22:22\\n\",\n    \"23:32\\n\",\n    \"01:11\\n\",\n    \"02:21\\n\",\n    \"03:31\\n\",\n    \"04:41\\n\",\n    \"05:51\\n\",\n    \"10:02\\n\",\n    \"11:12\\n\",\n    \"14:42\\n\",\n    \"15:52\\n\",\n    \"20:03\\n\",\n    \"21:13\\n\",\n    \"22:23\\n\",\n    \"23:33\\n\",\n    \"00:00\\n\",\n    \"00:01\\n\",\n    \"22:21\\n\",\n    \"20:01\\n\",\n    \"11:10\\n\",\n    \"06:59\\n\",\n    \"02:00\\n\",\n    \"02:19\\n\",\n    \"17:31\\n\",\n    \"19:00\\n\",\n    \"13:37\\n\",\n    \"07:59\\n\",\n    \"04:20\\n\",\n    \"07:10\\n\",\n    \"06:00\\n\",\n    \"06:01\\n\",\n    \"08:15\\n\",\n    \"06:59\\n\",\n    \"01:00\\n\",\n    \"07:00\\n\",\n    \"06:10\\n\",\n    \"18:52\\n\",\n    \"09:59\\n\",\n    \"19:00\\n\",\n    \"15:52\\n\",\n    \"06:50\\n\",\n    \"00:00\\n\",\n    \"19:20\\n\",\n    \"05:51\\n\",\n    \"06:16\\n\",\n    \"10:10\\n\",\n    \"17:11\\n\",\n    \"18:00\\n\",\n    \"00:01\\n\",\n    \"05:04\\n\",\n    \"16:00\\n\",\n    \"23:31\\n\",\n    \"17:25\\n\",\n    \"23:32\\n\",\n    \"23:58\\n\",\n    \"02:21\\n\",\n    \"01:11\\n\",\n    \"23:46\\n\",\n    \"00:09\\n\",\n    \"09:20\\n\",\n    \"05:59\\n\",\n    \"18:59\\n\",\n    \"02:02\\n\",\n    \"00:30\\n\",\n    \"05:54\\n\",\n    \"19:59\\n\",\n    \"16:59\\n\",\n    \"17:51\\n\",\n    \"09:30\\n\",\n    \"10:01\\n\",\n    \"16:55\\n\",\n    \"20:02\\n\",\n    \"16:12\\n\",\n    \"20:00\\n\",\n    \"01:01\\n\",\n    \"23:01\\n\",\n    \"06:05\\n\",\n    \"19:19\\n\",\n    \"17:00\\n\",\n    \"07:50\\n\",\n    \"21:20\\n\",\n    \"23:23\\n\",\n    \"19:30\\n\",\n    \"00:59\\n\",\n    \"22:59\\n\",\n    \"18:18\\n\",\n    \"17:46\\n\",\n    \"07:30\\n\",\n    \"17:16\\n\",\n    \"06:06\\n\",\n    \"23:30\\n\",\n    \"05:57\\n\",\n    \"19:46\\n\",\n    \"11:10\\n\",\n    \"17:07\\n\",\n    \"18:53\\n\",\n    \"07:06\\n\",\n    \"17:50\\n\",\n    \"09:15\\n\",\n    \"09:55\\n\",\n    \"20:05\\n\",\n    \"22:55\\n\",\n    \"10:00\\n\",\n    \"07:55\\n\",\n    \"07:40\\n\",\n    \"19:08\\n\",\n    \"23:24\\n\",\n    \"16:15\\n\",\n    \"07:20\\n\",\n    \"23:10\\n\",\n    \"06:51\\n\",\n    \"16:30\\n\",\n    \"17:54\\n\",\n    \"07:07\\n\",\n    \"08:01\\n\",\n    \"09:58\\n\",\n    \"18:03\\n\",\n    \"07:59\\n\",\n    \"05:55\\n\",\n    \"07:39\\n\",\n    \"05:52\\n\",\n    \"12:02\\n\",\n    \"08:59\\n\",\n    \"09:21\\n\",\n    \"16:04\\n\",\n    \"04:00\\n\",\n    \"18:21\\n\",\n    \"09:13\\n\",\n    \"17:20\\n\",\n    \"06:15\\n\",\n    \"19:21\\n\",\n    \"16:02\\n\",\n    \"15:59\\n\",\n    \"06:07\\n\",\n    \"08:08\\n\",\n    \"09:09\\n\",\n    \"02:19\\n\",\n    \"21:59\\n\"\n  ],\n  \"outputs\": [\n    \"11\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"69\\n\",\n    \"1\\n\",\n    \"41\\n\",\n    \"0\\n\",\n    \"69\\n\",\n    \"57\\n\",\n    \"20\\n\",\n    \"27\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"250\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"250\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"27\\n\",\n    \"0\\n\",\n    \"69\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"182\\n\",\n    \"20\\n\",\n    \"1\\n\",\n    \"151\\n\",\n    \"62\\n\",\n    \"64\\n\",\n    \"122\\n\",\n    \"20\\n\",\n    \"171\\n\",\n    \"241\\n\",\n    \"240\\n\",\n    \"106\\n\",\n    \"182\\n\",\n    \"10\\n\",\n    \"181\\n\",\n    \"231\\n\",\n    \"70\\n\",\n    \"2\\n\",\n    \"62\\n\",\n    \"250\\n\",\n    \"191\\n\",\n    \"0\\n\",\n    \"42\\n\",\n    \"250\\n\",\n    \"225\\n\",\n    \"61\\n\",\n    \"171\\n\",\n    \"122\\n\",\n    \"69\\n\",\n    \"46\\n\",\n    \"242\\n\",\n    \"1\\n\",\n    \"157\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"69\\n\",\n    \"69\\n\",\n    \"14\\n\",\n    \"61\\n\",\n    \"41\\n\",\n    \"242\\n\",\n    \"63\\n\",\n    \"18\\n\",\n    \"40\\n\",\n    \"247\\n\",\n    \"3\\n\",\n    \"183\\n\",\n    \"131\\n\",\n    \"31\\n\",\n    \"0\\n\",\n    \"187\\n\",\n    \"0\\n\",\n    \"230\\n\",\n    \"2\\n\",\n    \"9\\n\",\n    \"31\\n\",\n    \"236\\n\",\n    \"43\\n\",\n    \"182\\n\",\n    \"131\\n\",\n    \"62\\n\",\n    \"9\\n\",\n    \"32\\n\",\n    \"11\\n\",\n    \"33\\n\",\n    \"104\\n\",\n    \"136\\n\",\n    \"151\\n\",\n    \"166\\n\",\n    \"235\\n\",\n    \"2\\n\",\n    \"244\\n\",\n    \"16\\n\",\n    \"1\\n\",\n    \"175\\n\",\n    \"69\\n\",\n    \"175\\n\",\n    \"132\\n\",\n    \"46\\n\",\n    \"6\\n\",\n    \"67\\n\",\n    \"37\\n\",\n    \"1\\n\",\n    \"126\\n\",\n    \"141\\n\",\n    \"54\\n\",\n    \"8\\n\",\n    \"227\\n\",\n    \"161\\n\",\n    \"22\\n\",\n    \"190\\n\",\n    \"212\\n\",\n    \"128\\n\",\n    \"174\\n\",\n    \"120\\n\",\n    \"3\\n\",\n    \"119\\n\",\n    \"122\\n\",\n    \"246\\n\",\n    \"142\\n\",\n    \"249\\n\",\n    \"19\\n\",\n    \"62\\n\",\n    \"40\\n\",\n    \"238\\n\",\n    \"40\\n\",\n    \"101\\n\",\n    \"48\\n\",\n    \"162\\n\",\n    \"226\\n\",\n    \"41\\n\",\n    \"240\\n\",\n    \"243\\n\",\n    \"234\\n\",\n    \"113\\n\",\n    \"52\\n\",\n    \"1\\n\",\n    \"23\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/816/A",
  "starter_code": ""
}