{
  "task_id": "APPS/442",
  "problem_id": 442,
  "prompt": "Melody Pond was stolen from her parents as a newborn baby by Madame Kovarian, to become a weapon of the Silence in their crusade against the Doctor. Madame Kovarian changed Melody's name to River Song, giving her a new identity that allowed her to kill the Eleventh Doctor.\n\nHeidi figured out that Madame Kovarian uses a very complicated hashing function in order to change the names of the babies she steals. In order to prevent this from happening to future Doctors, Heidi decided to prepare herself by learning some basic hashing techniques.\n\nThe first hashing function she designed is as follows.\n\nGiven two positive integers $(x, y)$ she defines $H(x,y):=x^2+2xy+x+1$.\n\nNow, Heidi wonders if the function is reversible. That is, given a positive integer $r$, can you find a pair $(x, y)$ (of positive integers) such that $H(x, y) = r$?\n\nIf multiple such pairs exist, output the one with smallest possible $x$. If there is no such pair, output \"NO\".\n\n\n-----Input-----\n\nThe first and only line contains an integer $r$ ($1 \\le r \\le 10^{12}$).\n\n\n-----Output-----\n\nOutput integers $x, y$ such that $H(x,y) = r$ and $x$ is smallest possible, or \"NO\" if no such pair exists.\n\n\n-----Examples-----\nInput\n19\n\nOutput\n1 8\n\nInput\n16\n\nOutput\nNO",
  "solutions": "[\"r=int(input())\\nif r<=4:\\n    print(\\\"NO\\\")\\nelif r%2==0:\\n    print(\\\"NO\\\")\\nelse :\\n    print(1, (r-3)//2)\", \"n = int(input())\\ni = 1\\nwhile i * i < n:\\n    l = ( n - i*i - i - 1 )\\n    if l > 0 and l % (2 * i) == 0:\\n        print(i, l // (2 * i) )\\n        break\\n    i += 1\\nelse:\\n    print(\\\"NO\\\")\\n\", \"n = int(input())\\nif(n%2==0 or n<=3):\\n    print(\\\"NO\\\")\\nelse:\\n    print(1,(n-3)//2)\\n\", \"import math\\nimport sys,string,bisect,heapq\\ninput=sys.stdin.readline\\nfrom collections import deque,defaultdict\\nL=lambda : list(map(int,input().split()))\\nLs=lambda : list(input().split())\\nM=lambda : list(map(int,input().split()))\\nI=lambda :int(input())\\nn=I()\\nif(n%2==0 or n<=3):\\n    print(\\\"NO\\\")\\nelse:\\n    print(1,(n-3)//2)\\n    \\n\", \"\\nN = int(input())\\n\\nnum = N-1\\n\\nif num<=3 or num%2==1:\\n    print('NO')\\n    quit()\\n    \\nx = 1\\n\\ny = (num-2)//2\\n\\nprint(x,y)\\n\", \"r = int(input())\\nans = 'NO'\\nfor i in range(1, 3 * int(r ** .5)):\\n    d = r - 1 - i - i ** 2\\n    if d < 1:\\n        break\\n    else:\\n        if d % (i * 2) == 0:\\n            ans = (i, d // (i * 2))\\n            break\\nif ans == 'NO':\\n    print(ans)\\nelse:\\n    print(*ans)\\n\", \"r = int(input())\\n\\nif r%2 == 0:\\n    print('NO')\\n\\nelif r == 1:\\n    print('NO')\\n\\nelif r == 3:\\n    print('NO')\\nelse:\\n    print(1, end=' ')\\n    print((r-3)//2)\", \"r = int(input())\\nif r <= 4 or r % 2 == 0:\\n    print('NO')\\nelse:\\n    print(1, int((r-3)/2))\\n\", \"n = int(input())\\nif n&1 and n >= 5:\\n    print(1, (n-5)//2 + 1)\\nelse:\\n    print(\\\"NO\\\")\", \"#!/usr/bin/env python\\nr = int(input())\\n\\nfor x in range(1, 10**6):\\n    if (r - (x**2 + x + 1)) % (x << 1) == 0:\\n        y = (r - (x**2 + x + 1)) // (x << 1)\\n        if y > 0:\\n            print(x, y)\\n            break\\nelse:\\n    print(\\\"NO\\\")\\n\", \"def prime_factors(n):\\n    i = 2\\n    factors = []\\n    while i * i <= n:\\n        if n % i:\\n            i += 1\\n        else:\\n            n //= i\\n            factors.append(i)\\n    if n > 1:\\n        factors.append(n)\\n    return factors\\n\\ndef factors(n):\\n    super=[1]\\n    for i in prime_factors(n):\\n        super.extend([j*i for j in super])\\n    return list(sorted(set(super)))\\n    \\nn = int(input())\\nn -= 1\\nOK = False;\\nfor i in factors(n):\\n    if((n // i - i) > 0 and (n // i - i) % 2 == 1 and i > 0 and (n // i - i)// 2 > 0):\\n        print(\\\"{} {}\\\".format(i, (n // i - i)// 2))\\n        OK = True\\n        break\\nif(not OK):\\n    print(\\\"NO\\\")\", \"n = int(input())\\nn = n-1\\nx = int(n**0.5)\\nflag = True\\nfor i in range(1, x+1):\\n\\tif(n%i==0):\\n\\t\\ttemp = n//i\\n\\t\\ttemp = temp - i - 1\\n\\t\\tif(temp==0):\\n\\t\\t\\tcontinue\\n\\t\\tif(temp%2==0):\\n\\t\\t\\ta = i\\n\\t\\t\\tb = temp//2\\n\\t\\t\\tflag = False\\n\\t\\t\\tbreak\\nif(flag):\\n\\tprint(\\\"NO\\\")\\nelse:\\n\\tprint(a,b)\\n\", \"from math import sqrt, ceil\\nr = int(input())\\nfunc = lambda x: (r - 1 - x - x * x) / 2 / x\\nfor x in range(1, ceil(sqrt(r)) + 1):\\n    y = func(x)\\n    if y > 0 and y == int(y):\\n        print(x, int(y))\\n        return\\nprint('NO')\\n\\n\", \"r = int(input())\\n\\nif r % 2 == 0:\\n  print(\\\"NO\\\")\\nelse:\\n  k = (r - 1) // 2 - 1\\n  if k > 0:\\n    print(1, k)\\n  else:\\n    print(\\\"NO\\\")\", \"r = int(input())\\n \\nif (r<5 or r%2==0):\\n    print(\\\"NO\\\")\\n    return\\n \\nprint(1, (r-3) // 2)\", \"r = int(input())\\n\\nif r >= 5:\\n    if r % 2 == 0:\\n        print('NO')\\n    else:\\n        y = int((r-3)/2)\\n        print(1,'',y)\\nelse:\\n    print('NO')\\n\", \"def __starting_point():\\n\\tr = int(input())\\n\\tif r < 5:\\n\\t\\tprint(\\\"NO\\\")\\n\\telif r % 2 == 0:\\n\\t\\tprint(\\\"NO\\\")\\n\\telse:\\n\\t\\ty = (r - 3)//2\\n\\t\\tprint(\\\"1 \\\" + str(y))\\n\\n__starting_point()\", \"import sys\\n\\ndef H(x,y):\\n    r = x*x+2*x*y+x+1\\n    return r\\n\\ndef main():\\n    input = sys.stdin.readline()\\n    r = int(input)\\n    x = 1\\n    q = r - 3\\n    while q > 0:\\n        if q % (2*x) == 0:\\n            y = q // (2*x)\\n            print(x,y)\\n            break\\n        else:\\n            x += 1\\n            q = r - 1 - x - x*x\\n    if q <= 0:\\n        print(\\\"NO\\\")\\n#    return output\\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"r=int(input())\\nif(r%2==0 or r<=4):\\n print(\\\"NO\\\")\\nelse:\\n y=(r-3)//2\\n print(1,y)\", \"import sys\\nfrom collections import Counter\\nimport itertools\\nfrom math import floor, ceil\\n \\ndef input():\\n    return sys.stdin.readline().strip()\\n \\ndef dinput():\\n    return int(input())\\n \\ndef tinput():\\n    return input().split()\\n \\ndef rinput():\\n    return map(int, tinput())\\n \\ndef rt(x1, x2, y3):\\n    print(0.5*(x2+x1))\\n \\ndef main():\\n    y = int(input())\\n    i = 1\\n    t = 0\\n    r = 1\\n    if y % 2 == 1 and y >= 5:\\n        print(1, (y - 3)//2)\\n    else:\\n        print(\\\"NO\\\")\\n        \\n    \\nmain()\", \"r = int(input())\\nif (r > 3) and (r & 1):\\n    print(1, (r - 3) // 2)\\nelse: \\n    print(\\\"NO\\\")\", \"n=int(input())\\nif n%2==0:\\n    print(\\\"NO\\\")\\nelse:\\n    n-=1\\n    n-=2\\n    jam=int(n//2)\\n    if jam>0:\\n        print(1,jam)\\n    else:\\n        print(\\\"NO\\\")\", \"h = int(input())\\n\\nif h % 2 == 0:\\n    print(\\\"NO\\\")\\n    return\\nif h < 5:\\n    print(\\\"NO\\\")\\n    return\\nelse:\\n    print(1, (h // 2 - 1))\", \"r = int(input())\\n\\ndef factorise(n):\\n    # n is an odd number and we've ruled out 1 already\\n    factors = []\\n    guess = 3\\n    while guess < n:\\n        exponent = 1\\n        while n % guess == 0:\\n            factors.append(guess**exponent)\\n            n //= guess\\n            factors.append(n)\\n            exponent += 1\\n        guess += 2\\n    return sorted(factors)\\n\\nif r % 2 == 1:\\n    x = 1\\n    y = (r - 3)//2\\n    if y > 0:\\n        print(x, y)\\n    else:\\n        print(\\\"NO\\\")\\nelse:\\n    '''r -= 1\\n    # solve x(x + 2y + 1)\\n    factors = factorise(r)\\n    for x in factors:\\n        y = (-x -1 + 15/x)/2\\n        if y % 1 == 0:\\n            print(x, y)\\n            return\\n    else:'''\\n    print(\\\"NO\\\")\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"19\\n\",\n    \"16\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"8\\n\",\n    \"9\\n\",\n    \"10\\n\",\n    \"11\\n\",\n    \"12\\n\",\n    \"13\\n\",\n    \"14\\n\",\n    \"15\\n\",\n    \"16\\n\",\n    \"17\\n\",\n    \"18\\n\",\n    \"19\\n\",\n    \"20\\n\",\n    \"21\\n\",\n    \"260158260522\\n\",\n    \"250877914575\\n\",\n    \"116602436426\\n\",\n    \"540024979445\\n\",\n    \"917861648772\\n\",\n    \"962623690081\\n\",\n    \"54433933447\\n\",\n    \"16476190629\\n\",\n    \"426262703497\\n\",\n    \"723211047202\\n\",\n    \"652509336151\\n\",\n    \"215283472163\\n\",\n    \"29617919\\n\",\n    \"7505295085\\n\",\n    \"149890929717\\n\",\n    \"185589070745\\n\",\n    \"419450839\\n\",\n    \"519397679401\\n\",\n    \"943447972637\\n\",\n    \"54336309171\\n\",\n    \"688373050717\\n\",\n    \"156231653273\\n\",\n    \"23744498401\\n\",\n    \"768407398177\\n\",\n    \"963761198401\\n\",\n    \"240940299601\\n\"\n  ],\n  \"outputs\": [\n    \"1 8\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"1 1\\n\",\n    \"NO\\n\",\n    \"1 2\\n\",\n    \"NO\\n\",\n    \"1 3\\n\",\n    \"NO\\n\",\n    \"1 4\\n\",\n    \"NO\\n\",\n    \"1 5\\n\",\n    \"NO\\n\",\n    \"1 6\\n\",\n    \"NO\\n\",\n    \"1 7\\n\",\n    \"NO\\n\",\n    \"1 8\\n\",\n    \"NO\\n\",\n    \"1 9\\n\",\n    \"NO\\n\",\n    \"1 125438957286\\n\",\n    \"NO\\n\",\n    \"1 270012489721\\n\",\n    \"NO\\n\",\n    \"1 481311845039\\n\",\n    \"1 27216966722\\n\",\n    \"1 8238095313\\n\",\n    \"1 213131351747\\n\",\n    \"NO\\n\",\n    \"1 326254668074\\n\",\n    \"1 107641736080\\n\",\n    \"1 14808958\\n\",\n    \"1 3752647541\\n\",\n    \"1 74945464857\\n\",\n    \"1 92794535371\\n\",\n    \"1 209725418\\n\",\n    \"1 259698839699\\n\",\n    \"1 471723986317\\n\",\n    \"1 27168154584\\n\",\n    \"1 344186525357\\n\",\n    \"1 78115826635\\n\",\n    \"1 11872249199\\n\",\n    \"1 384203699087\\n\",\n    \"1 481880599199\\n\",\n    \"1 120470149799\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1184/A1",
  "starter_code": ""
}