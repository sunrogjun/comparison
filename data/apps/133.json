{
  "task_id": "APPS/133",
  "problem_id": 133,
  "prompt": "Alice got many presents these days. So she decided to pack them into boxes and send them to her friends.\n\nThere are $n$ kinds of presents. Presents of one kind are identical (i.e. there is no way to distinguish two gifts of the same kind). Presents of different kinds are different (i.e. that is, two gifts of different kinds are distinguishable). The number of presents of each kind, that Alice has is very big, so we can consider Alice has an infinite number of gifts of each kind.\n\nAlso, there are $m$ boxes. All of them are for different people, so they are pairwise distinct (consider that the names of $m$ friends are written on the boxes). For example, putting the first kind of present into the first box but not into the second box, is different from putting the first kind of present into the second box but not into the first box.\n\nAlice wants to pack presents with the following rules:  She won't pack more than one present of each kind into the same box, so each box should contain presents of different kinds (i.e. each box contains a subset of $n$ kinds, empty boxes are allowed);  For each kind at least one present should be packed into some box. \n\nNow Alice wants to know how many different ways to pack the presents exists. Please, help her and calculate this number. Since the answer can be huge, output it by modulo $10^9+7$.\n\nSee examples and their notes for clarification.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$, separated by spaces ($1 \\leq n,m \\leq 10^9$)\u00a0\u2014 the number of kinds of presents and the number of boxes that Alice has.\n\n\n-----Output-----\n\nPrint one integer \u00a0\u2014 the number of ways to pack the presents with Alice's rules, calculated by modulo $10^9+7$\n\n\n-----Examples-----\nInput\n1 3\n\nOutput\n7\nInput\n2 2\n\nOutput\n9\n\n\n-----Note-----\n\nIn the first example, there are seven ways to pack presents:\n\n$\\{1\\}\\{\\}\\{\\}$\n\n$\\{\\}\\{1\\}\\{\\}$\n\n$\\{\\}\\{\\}\\{1\\}$\n\n$\\{1\\}\\{1\\}\\{\\}$\n\n$\\{\\}\\{1\\}\\{1\\}$\n\n$\\{1\\}\\{\\}\\{1\\}$\n\n$\\{1\\}\\{1\\}\\{1\\}$\n\nIn the second example there are nine ways to pack presents:\n\n$\\{\\}\\{1,2\\}$\n\n$\\{1\\}\\{2\\}$\n\n$\\{1\\}\\{1,2\\}$\n\n$\\{2\\}\\{1\\}$\n\n$\\{2\\}\\{1,2\\}$\n\n$\\{1,2\\}\\{\\}$\n\n$\\{1,2\\}\\{1\\}$\n\n$\\{1,2\\}\\{2\\}$\n\n$\\{1,2\\}\\{1,2\\}$\n\nFor example, the way $\\{2\\}\\{2\\}$ is wrong, because presents of the first kind should be used in the least one box.",
  "solutions": "[\"# Contest: Codeforces Round #593 (Div. 2) (https://codeforces.com/contest/1236)\\n# Problem: B: Alice and the List of Presents (https://codeforces.com/contest/1236/problem/B)\\n\\ndef rint():\\n    return int(input())\\n\\n\\ndef rints():\\n    return list(map(int, input().split()))\\n\\n\\nM = 10**9 + 7\\nn, m = rints()\\nprint(pow((pow(2, m, M) + M - 1) % M, n, M))\\n\", \"MOD = 1000000007\\nn, m = list(map(int, input().split()))\\nprint(pow(pow(2, m, MOD) - 1, n, MOD))\\n\", \"n,m = map(int, input().split())\\np = 10**9 +7\\ndef pow(a,n):\\n\\tw = 1\\n\\tmn = a\\n\\twhile n > 0:\\n\\t\\tif n%2 == 1:\\n\\t\\t\\tw = (w*mn)%p\\n\\t\\tmn = (mn*mn)%p\\n\\t\\tn //= 2\\n\\treturn w\\nprint(pow(pow(2,m)-1,n))\", \"n, m = map(int, input().split())\\nprint(pow(pow(2, m, 10 ** 9 + 7) - 1, n, 10 ** 9 + 7))\", \"import sys\\ninput = sys.stdin.readline\\n\\nn,m=list(map(int,input().split()))\\nmod=10**9+7\\n\\nprint(pow(pow(2,m,mod)-1,n,mod))\\n\", \"n, m = list(map(int, input().split()))\\nMOD = 10**9 + 7\\nprint(pow(pow(2, m, MOD) - 1, n, MOD))\\n\", \"MOD = 10 ** 9 + 7\\ndef power(a, n):\\n  if n == 0:\\n    return 1\\n  if n % 2 == 0:\\n    return power(a, n // 2) ** 2 % MOD\\n  return power(a, n - 1) * a\\n\\n\\nn, m = list(map(int, input().split()))\\nprint(power(power(2, m) + MOD - 1, n) % MOD)\\n\", \"n, m = map(int, input().split())\\nMOD = 10**9 + 7\\n\\nans = 1\\nans *= pow(2, m, MOD) - 1\\nans %= MOD\\n\\nans = pow(ans, n, MOD)\\nprint(ans % MOD)\", \"n, m = map(int, input().split())\\n\\nmod = 10 ** 9 + 7\\n\\ndef binpow(a, n):\\n\\tif n == 0:\\n\\t\\treturn 1\\n\\tans = binpow(a, n // 2)\\n\\tans = ans * ans\\n\\tif n % 2 == 1:\\n\\t\\tans = ans * a\\n\\tans = ans % mod\\n\\treturn ans\\n\\nprint(binpow((binpow(2, m) - 1), n))\", \"def qp(a,b):\\n    if b==0:\\n        return 1\\n    ans=qp(a,b//2)\\n    if b%2==1:\\n        return ans*ans%1000000007*a%1000000007\\n    else:\\n        return ans*ans%1000000007\\n\\nn,m=map(int,input().split())\\n\\nans=qp(qp(2,m)-1,n)\\nprint(ans)\", \"n, m = list(map(int, input().split()))\\nMOD = 1000000007\\nans = pow(pow(2, m, MOD)-1+MOD, n, MOD)\\nprint(ans)\\n\", \"n, m = map(int, input().split())\\nMOD = 1000000007\\nres = pow(2, m, MOD) - 1\\nres = pow(res, n, MOD)\\nprint(res)\", \"n,m=list(map(int,input().split()))\\na=pow(2,m,1000000007)-1\\nb=pow(a,n,1000000007)\\nprint(b)\\n\", \"n, m = list(map(int, input().split()))\\nmod = 10**9+7\\nk = (pow(2,m,mod)+mod-1)%mod\\nprint((pow(k, n, mod)+mod)%mod)\\n\", \"import sys\\n\\ndef minp():\\n\\treturn sys.stdin.readline().strip()\\n\\ndef mint():\\n\\treturn int(minp())\\n\\ndef mints():\\n\\treturn map(int,minp().split())\\n\\nmod = int(1e9+7)\\nn, m = mints()\\nprint(pow((pow(2,m,mod)+mod-1)%mod, n, mod))\", \"n,m = [int(x) for x in input().split()]\\nmod = int(1e9)+7\\nn1 = (pow(2,m,mod)-1 + mod)%mod\\nn1 = pow(n1,n,mod)\\nprint(n1)\", \"#JMD\\n#Nagendra Jha-4096\\n\\n \\nimport sys\\nimport math\\n\\n#import fractions\\n#import numpy\\n \\n###File Operations###\\nfileoperation=0\\nif(fileoperation):\\n    orig_stdout = sys.stdout\\n    orig_stdin = sys.stdin\\n    inputfile = open('W:/Competitive Programming/input.txt', 'r')\\n    outputfile = open('W:/Competitive Programming/output.txt', 'w')\\n    sys.stdin = inputfile\\n    sys.stdout = outputfile\\n\\n###Defines...###\\nmod=1000000007\\n \\n###FUF's...###\\ndef nospace(l):\\n    ans=''.join(str(i) for i in l)\\n    return ans\\n \\n \\n \\n##### Main ####\\nt=1\\nfor tt in range(t):\\n    #n=int(input())\\n    n,m= map(int, sys.stdin.readline().split(' '))\\n    v=pow(2,m,mod)-1\\n    ans=pow(v,n,mod)\\n    print(ans)\\n    #a=list(map(int,sys.stdin.readline().split(' ')))\\n    \\n    \\n#####File Operations#####\\nif(fileoperation):\\n    sys.stdout = orig_stdout\\n    sys.stdin = orig_stdin\\n    inputfile.close()\\n    outputfile.close()\", \"import sys, math, bisect\\n\\ndef input():\\n    return sys.stdin.readline()[:-1]\\n\\ndef main():\\n    MOD = 10**9 + 7\\n    n, m = list(map(int,input().split()))\\n    t = pow(2,m,MOD)-1\\n    print(pow(t,n,MOD))\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"def pow(a,b):\\n    if b == 0:\\n        return 1\\n    retvalue = pow(a,b//2)\\n    retvalue *= retvalue\\n    retvalue %= 1000000007\\n    if (b%2) == 1:\\n        retvalue *= a\\n        retvalue %= 1000000007\\n    return retvalue\\n\\nn,m = list(map(int,input().split()))\\nprint(pow((pow(2,m)-1) % 1000000007, n))\\n\", \"import sys\\nreadline = sys.stdin.readline\\nmod = 10**9+7\\n\\nN, M = map(int, readline().split())\\n\\nx = pow(2, M, mod)\\nprint(pow(x-1, N, mod))\", \"mod = 10 ** 9 + 7\\nn, m = list(map(int, input().split()))\\nprint(pow((pow(2, m, mod) - 1), n, mod))\\n\", \"n, m = list(map(int, input().split()))\\n\\nMOD=10**9+7\\n\\np1=pow(2,m,MOD)-1\\np2=pow(p1,n,MOD)\\n\\nprint(p2)\\n\", \"N, M = map(int, input().split())\\nmod = 10**9+7\\n\\n# mod\\u3092\\u53d6\\u308a\\u306a\\u304c\\u3089\\u3079\\u304d\\u4e57\\u3059\\u308b\\ndef power_func(a,n,mod=mod):\\n    bi=str(format(n,\\\"b\\\"))#2\\u9032\\u8868\\u73fe\\u306b\\n    res=1\\n    for i in range(len(bi)):\\n        res=(res*res) %mod\\n        if bi[i]==\\\"1\\\":\\n            res=(res*a) %mod\\n    return res\\n\\na = power_func(2, M) -1\\nif a < 0:\\n    a += mod\\nans = power_func(a, N)\\nprint(ans) \"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 3\\n\",\n    \"2 2\\n\",\n    \"1000000000 1000000000\\n\",\n    \"489132389 96\\n\",\n    \"462817723 208\\n\",\n    \"10 415749054\\n\",\n    \"185182737 683516583\\n\",\n    \"1 1\\n\",\n    \"67 445057511\\n\",\n    \"53 710974288\\n\",\n    \"766313215 146\\n\",\n    \"483378560 249\\n\",\n    \"294440070 297\\n\",\n    \"22 346212760\\n\",\n    \"214 70\\n\",\n    \"498 36\\n\",\n    \"243 155\\n\",\n    \"911 144\\n\",\n    \"1208 1429\\n\",\n    \"362 1464\\n\",\n    \"1956 1933\\n\",\n    \"958 1712\\n\",\n    \"1737 2760\\n\",\n    \"297 2221\\n\",\n    \"851963022 4\\n\",\n    \"242811857 22\\n\",\n    \"943226362 45\\n\",\n    \"744891088 118\\n\",\n    \"607778684 18\\n\",\n    \"69 553612861\\n\",\n    \"39 884188112\\n\",\n    \"208 898957748\\n\",\n    \"204 697134196\\n\",\n    \"311 619805019\\n\",\n    \"75 511331377\\n\",\n    \"798664260 289720442\\n\",\n    \"118448079 385479325\\n\",\n    \"122681800 592225969\\n\",\n    \"411520242 339446102\\n\",\n    \"248755287 144691387\\n\",\n    \"617282691 956569994\\n\",\n    \"565315457 718194150\\n\",\n    \"330332097 730084442\\n\",\n    \"534571158 222043261\\n\",\n    \"807153816 542148359\\n\",\n    \"35785771 557468706\\n\",\n    \"199108316 823003436\\n\",\n    \"592582684 738223068\\n\",\n    \"840387185 768322358\\n\",\n    \"294176817 643050540\\n\",\n    \"651139198 572383165\\n\",\n    \"314697041 784667526\\n\",\n    \"188186551 379116090\\n\",\n    \"922338645 900544285\\n\",\n    \"117909304 588342759\\n\",\n    \"426452433 106792\\n\",\n    \"686898624 980111485\\n\",\n    \"169231047 790996597\\n\",\n    \"393454015 42675288\\n\",\n    \"955475387 410847984\\n\",\n    \"290496089 820810891\\n\",\n    \"635994662 423804127\\n\",\n    \"33727662 414901164\\n\",\n    \"886792224 998690495\\n\",\n    \"31 112\\n\",\n    \"71 106\\n\",\n    \"100 474\\n\",\n    \"14 469\\n\",\n    \"18 290\\n\",\n    \"172 39\\n\",\n    \"139 415\\n\",\n    \"117 2553\\n\",\n    \"156 342\\n\",\n    \"260 2998\\n\",\n    \"184 7\\n\",\n    \"428 71\\n\",\n    \"1046 34\\n\",\n    \"560 27\\n\",\n    \"732 137\\n\",\n    \"1730 39\\n\",\n    \"1335 185\\n\",\n    \"175 59\\n\",\n    \"900 32\\n\",\n    \"2998 38\\n\",\n    \"1 1000000000\\n\",\n    \"1000000000 1\\n\",\n    \"5 2\\n\",\n    \"2 5\\n\",\n    \"7 6\\n\",\n    \"5 8\\n\"\n  ],\n  \"outputs\": [\n    \"7\",\n    \"9\",\n    \"751201557\",\n    \"496937\",\n    \"886407548\",\n    \"763222305\",\n    \"568113155\",\n    \"1\",\n    \"687331027\",\n    \"739543572\",\n    \"577417399\",\n    \"400296687\",\n    \"391755258\",\n    \"70690719\",\n    \"57768876\",\n    \"238608733\",\n    \"872572138\",\n    \"588180251\",\n    \"809533438\",\n    \"76973162\",\n    \"376783113\",\n    \"555561716\",\n    \"702877932\",\n    \"118273419\",\n    \"843890746\",\n    \"658352132\",\n    \"326355794\",\n    \"857670894\",\n    \"241523454\",\n    \"343253715\",\n    \"485799965\",\n    \"590505163\",\n    \"878017912\",\n    \"357441166\",\n    \"891361754\",\n    \"405748370\",\n    \"929397040\",\n    \"849919410\",\n    \"69858832\",\n    \"666866415\",\n    \"407582988\",\n    \"180672585\",\n    \"536919158\",\n    \"212941625\",\n    \"452817189\",\n    \"763956563\",\n    \"650559775\",\n    \"830809744\",\n    \"364216881\",\n    \"425282882\",\n    \"362206900\",\n    \"579388817\",\n    \"655244255\",\n    \"187784871\",\n    \"852741659\",\n    \"740748981\",\n    \"805355123\",\n    \"442732671\",\n    \"221958294\",\n    \"544061679\",\n    \"707906935\",\n    \"831152709\",\n    \"529262173\",\n    \"183247773\",\n    \"626643854\",\n    \"603494283\",\n    \"180274936\",\n    \"14294519\",\n    \"544261782\",\n    \"222650110\",\n    \"639620853\",\n    \"906570878\",\n    \"306076272\",\n    \"573924479\",\n    \"715075794\",\n    \"677189841\",\n    \"92349932\",\n    \"179196390\",\n    \"596791767\",\n    \"352860620\",\n    \"596600489\",\n    \"315527995\",\n    \"832035237\",\n    \"63403329\",\n    \"140625000\",\n    \"1\",\n    \"243\",\n    \"961\",\n    \"980611601\",\n    \"203901829\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1236/B",
  "starter_code": ""
}