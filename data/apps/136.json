{
  "task_id": "APPS/136",
  "problem_id": 136,
  "prompt": "You are given two very long integers a, b (leading zeroes are allowed). You should check what number a or b is greater or determine that they are equal.\n\nThe input size is very large so don't use the reading of symbols one by one. Instead of that use the reading of a whole line or token.\n\nAs input/output can reach huge size it is recommended to use fast input/output methods: for example, prefer to use scanf/printf instead of cin/cout in C++, prefer to use BufferedReader/PrintWriter instead of Scanner/System.out in Java. Don't use the function input() in Python2 instead of it use the function raw_input().\n\n\n-----Input-----\n\nThe first line contains a non-negative integer a.\n\nThe second line contains a non-negative integer b.\n\nThe numbers a, b may contain leading zeroes. Each of them contains no more than 10^6 digits.\n\n\n-----Output-----\n\nPrint the symbol \"<\" if a < b and the symbol \">\" if a > b. If the numbers are equal print the symbol \"=\".\n\n\n-----Examples-----\nInput\n9\n10\n\nOutput\n<\n\nInput\n11\n10\n\nOutput\n>\n\nInput\n00012345\n12345\n\nOutput\n=\n\nInput\n0123\n9\n\nOutput\n>\n\nInput\n0123\n111\n\nOutput\n>",
  "solutions": "[\"a = input()\\nb = input()\\nn, m = len(a), len(b)\\nif n > m: b = '0' * (n - m) + b\\nelse: a = '0' * (m - n) + a\\ni = 0\\nwhile i < max(n, m) and a[i] == b[i]:\\n    i += 1\\nprint('=' if i == max(n, m) else '<' if int(a[i]) < int(b[i]) else '>')\\n\", \"#! /usr/bin/env python\\n# -*- coding: utf-8 -*-\\n# vim:fenc=utf-8\\n#\\n# Copyright \\u00a9 2016 missingdays <missingdays@missingdays>\\n#\\n# Distributed under terms of the MIT license.\\n\\n\\\"\\\"\\\"\\n\\n\\\"\\\"\\\"\\n\\ndef calc(a, b, l):\\n    for i in range(l):\\n        if int(a[i]) > int(b[i]):\\n            return \\\">\\\"\\n        elif int(a[i]) < int(b[i]):\\n            return \\\"<\\\"\\n\\n    return \\\"=\\\"    \\n\\na = input()\\nb = input()\\n\\nal = len(a)\\nbl = len(b)\\n\\nif bl > al:\\n    a = \\\"0\\\" * (bl - al) + a\\n    al = bl\\nelif al > bl:\\n    b = \\\"0\\\" * (al - bl) + b\\n    bl = al\\n\\nprint(calc(a, b, bl))\\n\", \"def main():\\n    a = input()\\n    b = input()\\n    x = max(len(a), len(b))\\n    a = \\\"0\\\" * (x - len(a)) + a\\n    b = \\\"0\\\" * (x - len(b)) + b\\n\\n    if a > b:\\n        print(\\\">\\\")\\n    elif a < b:\\n        print(\\\"<\\\")\\n    else:\\n        print(\\\"=\\\")\\n\\nmain()\\n\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n\\nimport time\\n\\ndef nz(x):\\n    a = 0\\n    for i in range(len(x)):\\n        if x[i] == '0':\\n            a += 1\\n        else:\\n            break\\n    return x[a:]\\n\\na   = list(input())\\nb   = list(input())\\n\\nstart = time.time()\\n\\na = nz(a)\\nb = nz(b)\\n\\nif len(a) == len(b):\\n    flag = True\\n    for i in range(len(a)):\\n        if a[i] < b[i]:\\n            print('<')\\n            flag = False\\n            break\\n        elif a[i] > b[i]:\\n            print('>')\\n            flag = False\\n            break\\n    if flag == True:\\n        print('=')\\nelif len(a) < len(b):\\n    print('<')\\nelse:\\n    print('>')\\nfinish = time.time()\\n#print(finish - start)\\n\", \"import sys\\n\\n# fin = open(\\\"ecr5a.in\\\", \\\"r\\\")\\nfin = sys.stdin\\n\\na, b = fin.readline().rstrip().lstrip('0'), fin.readline().rstrip().lstrip('0')\\n\\nif len(a) < len(b):\\n    print('<')\\nelif len(a) > len(b):\\n    print('>')\\nelse:\\n    for i in range(len(a)):\\n        if a[i] == b[i]:\\n            continue\\n        elif a[i] < b[i]:\\n            print('<')\\n            break\\n        else:\\n            print('>')\\n            break\\n    else:\\n        print('=')\", \"def clz(s):\\n    n = 0\\n    for i in range(len(s)):\\n        if s[i] == '0':\\n            n += 1\\n        else:\\n            break\\n    return n\\n\\n\\ndef solve():\\n    A = input()\\n    B = input()\\n\\n    lza = clz(A)\\n    lzb = clz(B)\\n\\n    la = len(A) - lza\\n    lb = len(B) - lzb\\n\\n    if la > lb:\\n        print('>')\\n    elif la < lb:\\n        print('<')\\n    else:\\n        for i in range(la):\\n            if A[lza + i] > B[lzb+i]:\\n                print('>')\\n                break\\n            elif A[lza + i] < B[lzb+i]:\\n                print('<')\\n                break\\n        else:\\n            print('=')\\n\\n\\ndef __starting_point():\\n    solve()\\n\\n__starting_point()\", \"def preprocess(g):\\n    g = input()\\n    g = list(g)\\n    r = len(g)-1\\n    for i in range(0,len(g)):\\n        if g[i] > '0':\\n            r = i\\n            break\\n    g = g[r:]\\n    return \\\"\\\".join(g)\\n[g,h] = [1,1]\\ng = preprocess(g)\\nh = preprocess(h)\\nif len(g) < len(h):\\n    print(\\\"<\\\")\\nelif len(g) > len(h):\\n    print(\\\">\\\")\\nelse:\\n    if g < h:\\n        print(\\\"<\\\")\\n    elif g > h:\\n        print(\\\">\\\")\\n    else:\\n        print(\\\"=\\\")\\n\", \"def c(a, b):\\n    for x, y in zip(a, b):\\n        if x > y:\\n            return '>'\\n        elif x < y:\\n            return '<'\\n    return '='\\na, b = input(), input()\\nif len(a) < len(b):\\n    a = '0' * (len(b) - len(a)) + a\\nelif len(a) > len(b):\\n    b = '0' * (len(a) - len(b)) + b\\nprint(c(a, b))\", \"a = input()\\nb = input()\\ni = 0\\nwhile i < len(a) and a[i] == '0':\\n    i += 1\\n\\nj = 0\\nwhile j < len(b) and b[j] == '0':\\n    j += 1\\n\\na = a[i::]\\nif a == '':\\n    a = '0'\\nb = b[j::]\\nif b == '':\\n    b = '0'\\nif len(a) > len(b):\\n    print('>')\\nelif len(b) > len(a):\\n    print('<')\\nelse:\\n    i = 0\\n    while i < len(a) and a[i] == b[i]:\\n        i += 1\\n    if i == len(a):\\n        print('=')\\n    else:\\n        if a[i] > b[i]:\\n            print('>')\\n        else:\\n            print('<')\", \"a = str(input())\\nb = str(input())\\nlen1 = len(a)\\nlen2 = len(b)\\nfirst1 = -1\\nfirst2 = -1\\nfor i in range(len1):\\n    if a[i] != '0'and first1 == -1:\\n        first1 = i\\n        break\\nfor i in range(len2):\\n    if b[i] != '0' and first2 == -1:\\n        first2 = i\\n        break\\nflag = 0\\nif first1 == -1:\\n    first1 = len1 - 1\\nif first2 == -1:\\n    first2 = len2 - 1\\nif len1 - first1 > len2 - first2 :\\n    flag = 1\\n    print('>')\\nelif len1 - first1 < len2 - first2:\\n    flag = 1\\n    print('<')\\nelse:\\n    for i in range(first1, len1):\\n        if a[i] > b[i-first1+first2]:\\n            flag = 1\\n            print('>')\\n            break\\n        elif a[i] < b[i-first1+first2]:\\n            flag = 1\\n            print('<')\\n            break\\nif flag == 0:\\n    print('=')\", \"a = input()\\nb = input()\\n\\ndef delL(inp):\\n    out = ''\\n    flag = False\\n    for i in inp:\\n        if i != '0':\\n            flag = True\\n        if flag:\\n            out = out + i\\n    if out == '':\\n        return '0'\\n    return out\\n    \\na = delL(a)\\nb = delL(b)\\n\\nif len(a) > len(b):\\n    print('>')\\nelif len(a) < len(b):\\n    print('<')\\nelse:\\n    flag = False\\n    for i in range(len(a)):\\n        if a[i] > b[i]:\\n            flag = True\\n            print('>')\\n            break\\n        elif a[i] < b[i]:\\n            flag = True\\n            print('<')\\n            break\\n    if flag == False: \\n        print('=') \\n\", \"a = input()\\nb = input()\\ni = 0\\nj = 0\\nn = len(a)\\nm = len(b)\\nwhile i < n and a[i] == '0':\\n    i += 1\\nwhile j < m and b[j] == '0':\\n    j += 1\\nif n - i > m - j:\\n    print(\\\">\\\")\\nelif n - i < m - j:\\n    print(\\\"<\\\")\\nelse:\\n    while i < n:\\n        if a[i] > b[j]:\\n            print(\\\">\\\")\\n            break\\n        elif a[i] < b[j]:\\n            print(\\\"<\\\")\\n            break\\n        else:\\n            i += 1\\n            j += 1\\n    else:    \\n        print(\\\"=\\\")\", \"# your code goes here\\na = (input())\\nb = (input())\\nj = 0\\nfor i in range(len(a)):\\n\\tif a[i] == '0':\\n\\t\\tj+=1\\n\\telse: \\n\\t\\tbreak\\na = a[j:]\\nj = 0\\nfor i in range(len(b)):\\n\\tif b[i] == '0':\\n\\t\\tj+=1\\n\\telse: \\n\\t\\tbreak\\nb = b[j:]\\nflag = 0\\nif len(a)> len(b):\\n\\tprint (\\\">\\\")\\nelif len(a)<len(b):\\n\\tprint (\\\"<\\\")\\nelse:\\n\\tfor i in range(len(a)):\\n\\t\\tif (a[i]>b[i]):\\n\\t\\t\\tflag = 1\\n\\t\\t\\tbreak\\n\\t\\telif (a[i]<b[i]):\\n\\t\\t\\tflag = 2\\n\\t\\t\\tbreak\\n\\t\\telse:\\n\\t\\t\\tcontinue\\n\\tif (flag == 0):\\n\\t\\tprint (\\\"=\\\")\\n\\telif (flag == 1):\\n\\t\\tprint (\\\">\\\")\\n\\telse:\\n\\t\\tprint (\\\"<\\\")\\n\", \"x = input()\\ny = input()\\na = \\\"\\\"\\nb = \\\"\\\"\\nflag = 0\\nfor i in range(0,len(x)):\\n    if flag != 0 : a = a + x[i]\\n    elif x[i] != '0':\\n        flag = 1\\n        a = a + x[i]\\nflag = 0\\nfor i in range(0,len(y)):\\n    if flag != 0 : b = b + y[i]\\n    elif flag == 0 and y[i] == 0: continue\\n    elif y[i] != '0':\\n        flag = 1\\n        b = b + y[i]\\nlen1 = len(a)\\nlen2 = len(b)\\n\\n\\nif len1 > len2: print(\\\">\\\")\\nelif len2 > len1: print(\\\"<\\\")\\nelse:\\n    flag = 0\\n    for i in range(0,len1):\\n        if flag == 1: break\\n        if a[i] > b[i]:\\n            print(\\\">\\\")\\n            flag = 1\\n        elif b[i] > a[i]:\\n            print(\\\"<\\\")\\n            flag = 1\\n    if flag == 0:\\n        print(\\\"=\\\")\", \"a=input().lstrip('0')\\nb=input().lstrip('0')\\ndlinaA=len(a)\\ndlinaB=len(b)\\nif dlinaA==0:\\n    a='0'\\nif dlinaB==0:\\n    b='0'\\nif dlinaA==0 and dlinaB==0:\\n    print('=')\\nif dlinaA>dlinaB:\\n    print('>')\\nelif dlinaA<dlinaB:\\n    print('<')\\nelse:\\n    for i in range(dlinaA):\\n        if int(a[i])>int(b[i]):\\n            print('>')\\n            break\\n        elif int(a[i])<int(b[i]):\\n            print('<')\\n            break\\n        elif i==dlinaA-1:\\n            print('=')\\n            break\\n\\n\", \"a=input().lstrip('0')\\nb=input().lstrip('0')\\ndlinaA=len(a)\\ndlinaB=len(b)\\nif dlinaA==0:\\n    a='0'\\nif dlinaB==0:\\n    b='0'\\nif dlinaA==0 and dlinaB==0:\\n    print('=')\\nif dlinaA>dlinaB:\\n    print('>')\\nelif dlinaA<dlinaB:\\n    print('<')\\nelse:\\n    for i in range(dlinaA):\\n        if int(a[i])>int(b[i]):\\n            print('>')\\n            break\\n        elif int(a[i])<int(b[i]):\\n            print('<')\\n            break\\n        elif i==dlinaA-1:\\n            print('=')\\n            break\\n\\n\", \"a=input()\\nb=input()\\n\\na=a.lstrip(\\\"0\\\")\\nb=b.lstrip(\\\"0\\\")\\n\\nif a==\\\"\\\":\\n a=\\\"0\\\"\\nelse:\\n pass\\nif b==\\\"\\\":\\n b=\\\"0\\\"\\nelse:\\n pass\\n\\nla=len(a)\\nlb=len(b)\\n\\nif la>lb:\\n print(\\\">\\\")\\n\\nelif la<lb:\\n print(\\\"<\\\")\\n\\nelif la==lb:\\n i=0\\n while int(a[i])==int(b[i]) and i+1!=la:\\n  i+=1\\n if i+1==la and int(a[i])==int(b[i]):\\n  print(\\\"=\\\")\\n elif int(a[i])<int(b[i]):\\n  print(\\\"<\\\")\\n elif int(a[i])>int(b[i]):\\n  print(\\\">\\\")\", \"a = str(input())\\nb = str(input())\\n\\na = a.lstrip('0')\\n\\nb = b.lstrip('0')\\nflag = True\\n\\nif len(a) > len(b):\\n    print(\\\">\\\")\\n    flag = False\\nelif len(a) < len(b):\\n    print('<')\\n    flag = False\\n\\n\\nif flag:\\n    flag1 = True\\n\\n    for i in range(len(a)):\\n        if (int(a[i]) > int(b[i])):\\n            print('>')\\n            flag1 = False\\n            break\\n        if  (int(a[i]) < int(b[i])):\\n            print(\\\"<\\\")\\n            flag1 = False\\n            break\\n\\n    if (flag1):\\n        print('=')\", \"import sys\\n\\na = sys.stdin.readline().split()[0]\\nb = sys.stdin.readline().split()[0]\\ni, j = 0, 0\\nif (len(a) < len(b)):\\n    a = '0' * (len(b) - len(a)) + a\\nelse:\\n    b = '0' * (len(a) - len(b)) + b\\nwhile (i < len(a)) and (j < len(b)) and (a[i] == b[j]):\\n    i += 1\\n    j += 1\\nif (i == len(a)) and (j == len(b)):\\n    print('=')\\nelif j == len(b):\\n    print('>')\\nelif i == len(a):\\n    print('<')\\nelse:\\n    #print(')')\\n    print('<' if (a[i] < b[j]) else '>')\", \"a = input()\\nb = input()\\nif len(a)>len(b):\\n    gap = len(a)-len(b)\\n    new = ''\\n    for _ in range(gap):\\n        new+='0'\\n    b = new + b\\nelif len(b)>len(a):\\n    gap = len(b) - len(a)\\n    new = ''\\n    for _ in range(gap):\\n        new+='0'\\n    a = new + a\\nfor i in range(0,len(a)):\\n    if(a[i]>b[i]):\\n        print('>')\\n        return\\n    elif(b[i]>a[i]):\\n        print('<')\\n        return\\nprint('=') \", \"a = input()\\nb = input()\\nif len(a)>len(b):b = '0'*(len(a)-len(b)) + b\\nelse:a = '0'*(len(b)-len(a)) + a\\nfor i in range(0,len(a)):\\n    if(a[i]>b[i]):\\n        print('>')\\n        return\\n    elif(b[i]>a[i]):\\n        print('<')\\n        return\\nprint('=') \", \"a = input()\\nb = input()\\nif len(a)>len(b):b = '0'*(len(a)-len(b)) + b\\nelse:a = '0'*(len(b)-len(a)) + a\\nif(a>b):print('>')\\nelif(b>a):print('<')\\nelse:print('=') \", \"a = input()\\nb = input()\\n\\n\\ndef remove_zeroes(s: str):\\n    i = 0\\n    for x in range(len(s) - 1):\\n        if s[x] == '0':\\n            i += 1\\n        else:\\n            break\\n    return s[i:]\\n\\na = remove_zeroes(a)\\nb = remove_zeroes(b)\\n\\nif len(a) != len(b):\\n    if len(a) > len(b):\\n        print('>')\\n    else:\\n        print('<')\\n    return\\n\\ncmp1 = a > b\\ncmp2 = a < b\\n\\nif cmp1:\\n    print('>')\\nelif cmp2:\\n    print('<')\\nelse:\\n    print('=')\\n\", \"s=input()\\ns1=input()\\n\\nif len(s)>len(s1):\\n       s1='0'*(len(s)-len(s1))+s1\\nelse : \\n        s='0'*(len(s1)-len(s))+s\\n\\n\\n\\nif(s>s1):\\n    print('>')\\nelif(s<s1):\\n    print ('<')\\nelse:\\n    print ('=')\", \"a = input()\\nb = input()\\nswap = 0\\nans = ['<', '>']\\nif len(a) > len(b):\\n    a, b = b, a\\n    swap = 1\\na = '0' * (len(b)-len(a)) + a\\nif a == b:\\n    print(\\\"=\\\")\\n    quit()\\nif a < b:\\n    print(ans[swap])\\n    quit()\\nprint(ans[1-swap])\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"9\\n10\\n\",\n    \"11\\n10\\n\",\n    \"00012345\\n12345\\n\",\n    \"0123\\n9\\n\",\n    \"0123\\n111\\n\",\n    \"9\\n9\\n\",\n    \"0\\n0000\\n\",\n    \"1213121\\n1213121\\n\",\n    \"8631749422082281871941140403034638286979613893271246118706788645620907151504874585597378422393911017\\n1460175633701201615285047975806206470993708143873675499262156511814213451040881275819636625899967479\\n\",\n    \"6421902501252475186372406731932548506197390793597574544727433297197476846519276598727359617092494798\\n8\\n\",\n    \"9\\n3549746075165939381145061479392284958612916596558639332310874529760172204736013341477640605383578772\\n\",\n    \"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n\",\n    \"0000000001\\n2\\n\",\n    \"1000000000000000000000000000000000\\n1000000000000000000000000000000001\\n\",\n    \"123456123456123456123456123456123456123456123456123456123456123456\\n123456123456123456123456123456123456123456123456123456123456123456123456123456\\n\",\n    \"1111111111111111111111111111111111111111\\n2222222222222222222222222222222222222222\\n\",\n    \"123456789999999\\n123456789999999\\n\",\n    \"111111111111111111111111111111\\n222222222222222222222222222222\\n\",\n    \"1111111111111111111111111111111111111111111111111111111111111111111111\\n1111111111111111111111111111111111111111111111111111111111111111111111\\n\",\n    \"587345873489573457357834\\n47957438573458347574375348\\n\",\n    \"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333\\n\",\n    \"11111111111111111111111111111111111\\n44444444444444444444444444444444444\\n\",\n    \"11111111111111111111111111111111111\\n22222222222222222222222222222222222\\n\",\n    \"9999999999999999999999999999999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\n\",\n    \"1\\n2\\n\",\n    \"9\\n0\\n\",\n    \"222222222222222222222222222222222222222222222222222222222\\n22222222222222222222222222222222222222222222222222222222222\\n\",\n    \"66646464222222222222222222222222222222222222222222222222222222222222222\\n111111111111111111111111111111111111111111111111111111111111111111111111111111111111\\n\",\n    \"222222222222222222222222222222222222222222222222222\\n111111111111111111111111111111111111111111111111111111111111111\\n\",\n    \"11111111111111111111111111111111111111\\n44444444444444444444444444444444444444\\n\",\n    \"01\\n2\\n\",\n    \"00\\n01\\n\",\n    \"99999999999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999999999\\n\",\n    \"43278947323248843213443272432\\n793439250984509434324323453435435\\n\",\n    \"0\\n1\\n\",\n    \"010\\n011\\n\",\n    \"999999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999999\\n\",\n    \"0001001\\n0001010\\n\",\n    \"1111111111111111111111111111111111111111111111111111111111111\\n1111111111111111111111111111111111111111111111111111111111111\\n\",\n    \"00000\\n00\\n\",\n    \"999999999999999999999999999\\n999999999999999999999999999\\n\",\n    \"999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\n999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999\\n\",\n    \"001\\n000000000010\\n\",\n    \"01\\n10\\n\",\n    \"555555555555555555555555555555555555555555555555555555555555\\n555555555555555555555555555555555555555555555555555555555555\\n\",\n    \"5555555555555555555555555555555555555555555555555\\n5555555555555555555555555555555555555555555555555\\n\",\n    \"01\\n02\\n\",\n    \"001111\\n0001111\\n\",\n    \"55555555555555555555555555555555555555555555555555\\n55555555555555555555555555555555555555555555555555\\n\",\n    \"1029301293019283091283091283091280391283\\n1029301293019283091283091283091280391283\\n\",\n    \"001\\n2\\n\",\n    \"000000000\\n000000000\\n\",\n    \"000000\\n10\\n\",\n    \"000000000000000\\n001\\n\",\n    \"0000001\\n2\\n\",\n    \"0000\\n123\\n\",\n    \"951\\n960\\n\",\n    \"002\\n0001\\n\",\n    \"0000001\\n01\\n\",\n    \"99999999999999999999999999999999999999999999999999999999999999\\n99999999999999999999999999999999999999999999999999999999999999\\n\",\n    \"12345678901234567890123456789012345678901234567890123456789012\\n12345678901234567890123456789012345678901234567890123456789012\\n\",\n    \"02\\n01\\n\",\n    \"00000111111\\n00000110111\\n\",\n    \"0123\\n123\\n\",\n    \"123771237912798378912\\n91239712798379812897389123123123123\\n\",\n    \"00001\\n002\\n\",\n    \"0000000000000000000000000000000000000000000000000000000000000\\n000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\\n\",\n    \"000000001\\n00002\\n\",\n    \"00002\\n00003\\n\",\n    \"000123456\\n123457\\n\",\n    \"01\\n00\\n\",\n    \"00\\n0\\n\",\n    \"10\\n11\\n\",\n    \"0011\\n12\\n\",\n    \"00\\n1\\n\",\n    \"0\\n0\\n\",\n    \"00\\n10\\n\",\n    \"011\\n10\\n\",\n    \"00011111111111111111111111111111111111000000000000000000000000000000000000000000000000000210000000000000000000000000000000000000000011000\\n11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111112091\\n\",\n    \"0000001\\n00\\n\",\n    \"01\\n1\\n\",\n    \"010\\n001\\n\",\n    \"100\\n111\\n\",\n    \"1\\n0\\n\",\n    \"000000\\n000000000000000000000\\n\",\n    \"010101\\n010101\\n\",\n    \"00000000000000000001111111111111111111111111111111111111111111111111111111\\n11111111111111111111111\\n\",\n    \"0000000\\n0\\n\",\n    \"187923712738712879387912839182381\\n871279397127389781927389718923789178923897123\\n\",\n    \"0010\\n030\\n\"\n  ],\n  \"outputs\": [\n    \"<\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \">\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \">\\n\",\n    \">\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \">\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \">\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"<\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \">\\n\",\n    \"<\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \">\\n\",\n    \"<\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \"=\\n\",\n    \">\\n\",\n    \"=\\n\",\n    \"<\\n\",\n    \"<\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/616/A",
  "starter_code": ""
}