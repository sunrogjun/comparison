{
  "task_id": "APPS/497",
  "problem_id": 497,
  "prompt": "Ilya lives in a beautiful city of Chordalsk.\n\nThere are $n$ houses on the street Ilya lives, they are numerated from $1$ to $n$ from left to right; the distance between every two neighboring houses is equal to $1$ unit. The neighboring houses are $1$ and $2$, $2$ and $3$, ..., $n-1$ and $n$. The houses $n$ and $1$ are not neighboring.\n\nThe houses are colored in colors $c_1, c_2, \\ldots, c_n$ so that the $i$-th house is colored in the color $c_i$. Everyone knows that Chordalsk is not boring, so there are at least two houses colored in different colors.\n\nIlya wants to select two houses $i$ and $j$ so that $1 \\leq i < j \\leq n$, and they have different colors: $c_i \\neq c_j$. He will then walk from the house $i$ to the house $j$ the distance of $(j-i)$ units.\n\nIlya loves long walks, so he wants to choose the houses so that the distance between them is the maximum possible.\n\nHelp Ilya, find this maximum possible distance.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($3 \\leq n \\leq 300\\,000$)\u00a0\u2014 the number of cities on the street.\n\nThe second line contains $n$ integers $c_1, c_2, \\ldots, c_n$ ($1 \\leq c_i \\leq n$)\u00a0\u2014 the colors of the houses.\n\nIt is guaranteed that there is at least one pair of indices $i$ and $j$ so that $1 \\leq i < j \\leq n$ and $c_i \\neq c_j$.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the maximum possible distance Ilya can walk.\n\n\n-----Examples-----\nInput\n5\n1 2 3 2 3\n\nOutput\n4\n\nInput\n3\n1 2 1\n\nOutput\n1\n\nInput\n7\n1 1 3 1 1 1 1\n\nOutput\n4\n\n\n\n-----Note-----\n\nIn the first example the optimal way is to walk from the first house to the last one, where Ilya can walk the distance of $5-1 = 4$ units.\n\nIn the second example the optimal way is to either walk from the first house to the second or from the second to the third. Both these ways have the distance of $1$ unit.\n\nIn the third example the optimal way is to walk from the third house to the last one, where Ilya can walk the distance of $7-3 = 4$ units.",
  "solutions": "[\"import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\\n\\nsys.setrecursionlimit(10**7)\\ninf = 10**20\\neps = 1.0 / 10**10\\nmod = 10**9+7\\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\\n\\ndef LI(): return tuple(map(int, sys.stdin.readline().split()))\\ndef LLI(): return [tuple(map(int, l.split())) for l in sys.stdin]\\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\\ndef LS(): return sys.stdin.readline().split()\\ndef I(): return int(sys.stdin.readline())\\ndef F(): return float(sys.stdin.readline())\\ndef S(): return input()\\ndef pf(s): return print(s, flush=True)\\n\\ndef main():\\n    n = I()\\n    a = LI()\\n    b = a[0]\\n    c = a[-1]\\n    r = 0\\n    for i in range(n-1,-1,-1):\\n        if a[i] != b:\\n            r = i\\n            break\\n\\n    for i in range(n):\\n        if a[i] != b:\\n            t = n-1 - i\\n            if r < t:\\n                r = t\\n\\n    return r\\n\\nprint(main())\\n\\n\\n\", \"\\n\\ndef ria():\\n    return [int(i) for i in input().split()]\\n\\n\\nmx=0\\nn=ria()[0]\\nar=ria()\\nfor i in range(n):\\n    if ar[i]!=ar[0]:\\n        mx=max(i,mx)\\n    if ar[i]!=ar[n-1]:\\n        mx=max(n-1-i,mx)\\nprint(mx)\", \"from collections import defaultdict as dd\\nimport math\\ndef nn():\\n\\treturn int(input())\\n\\ndef li():\\n\\treturn list(input())\\n\\ndef mi():\\n\\treturn list(map(int, input().split()))\\n\\ndef lm():\\n\\treturn list(map(int, input().split()))\\n\\n\\nn=nn()\\n\\nhouses=lm()\\n\\nstart=0\\n\\nwhile houses[start]==houses[n-1]:\\n\\tstart+=1\\n\\n\\nend=n-1\\n\\nwhile houses[end]==houses[0]:\\n\\tend-=1\\n\\n\\nprint(max([n-1-start, end]))\\n\\n\\n\\n\\n\", \"n = int(input())\\nl = list(map(int,input().split()))\\nk = 0\\nwhile l[k] == l[-1]:\\n\\tk+=1\\nm = len(l)-1-k\\nk = len(l)-1\\nwhile l[k] == l[0]:\\n\\tk-=1\\nm = max(m, k)\\nprint(m)\", \"n = int(input())\\n\\ncolors = list(map(int, input().split()))\\n\\nleft = 0\\nright = n - 1\\nwhile colors[left] == colors[right]:\\n    left += 1\\n\\nleft_answer = right - left\\n\\n\\nleft = 0\\nright = n - 1\\nwhile colors[left] == colors[right]:\\n    right -= 1\\n\\nright_answer = right - left\\n\\nprint(max(left_answer, right_answer))\\n\", \"n = int(input())\\nA = [int(x) for x in input().split()]\\nf = A[0]\\nl = A[-1]\\n\\nfor i in range(n):\\n    if A[i] != A[-1]:\\n        break\\n\\nfor j in reversed(list(range(n))):\\n    if A[j] != A[0]:\\n        break\\n\\nprint(max(j+1, n-i)-1)\\n\", \"n=int(input())\\nl1=list(map(int,input().split()))\\nx=0\\ny=n-1\\na=0\\nb=n-1\\nwhile l1[x]==l1[y] and l1[a]==l1[b]:\\n    y-=1\\n    a+=1\\nprint(y-x)\", \"n=int(input())\\na=list(map(int,input().split()))\\nfor i in range(n-1):\\n    if a[i]!=a[-1]:\\n        ma=n-i-1\\n        break\\nfor i in range(n-1,0,-1):\\n    if a[0]!=a[i]:\\n        ma=max(ma,i)\\nprint(ma)\\n\", \"N = int(input())\\n\\nA = list(map(int, input().split()))\\n\\nans = 0\\n\\nl = 0\\nr = N - 1\\n\\nwhile True:\\n    if A[l] != A[r]:\\n        ans = r - l\\n        break\\n    l += 1\\nl, r = 0, N - 1\\nwhile True:\\n    if A[l] != A[r]:\\n        ans = max(ans, r - l)\\n        break\\n    r -= 1\\nprint(ans)\", \"def main():\\n    n = int(input())\\n    arr = list(map(int, input().split()))\\n    m = 0\\n    for i in range(n):\\n        if arr[i] != arr[-1]:\\n            m = max(m, n - 1 - i)\\n            break\\n    for i in range(n - 1, -1, -1):\\n        if arr[i] != arr[0]:\\n            m = max(m, i)\\n            break\\n    print(m)\\n    return 0\\nmain()\", \"n = int(input())\\nA = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, n):\\n    if A[i] != A[0]:\\n        ans = max(ans, i)\\nfor i in range(n - 1):\\n    if A[i] != A[-1]:\\n        ans = max(ans, n - i - 1)\\nprint(ans)\\n\", \"n = int(input())\\nl = [*map(int, input().split())]\\nd = {}\\nfor i, e in enumerate(l):\\n    d[e] = i\\nv = sorted(d.values())\\nres = 0\\nfor i, e in enumerate(l):\\n    j = v[-1]\\n    if e == l[j]:\\n        j = v[-2]\\n    res = max(res, j - i)\\nprint(res)\", \"n = int(input())\\na = list(map(int, input().split()))\\nmax1 = max2 = 0\\nfor q in range(1, n):\\n    if a[0] != a[q]:\\n        max1 = q\\nfor q in range(n-2, -1, -1):\\n    if a[-1] != a[q]:\\n        max2 = q\\nprint(max(max1, n-max2-1))\\n\", \"#print('HARE KRISHNA')\\ndef I():\\n    return int(input())\\ndef IL():\\n    return list(map(int,input().split()))\\ndef IM():\\n    return map(int,input().split())\\ndef IS():\\n    return input()\\ndef ISL():\\n    return list(input())\\nn=I()\\nl=IL()\\nmaxi1=0\\nfor i in range(1,n):\\n    if l[i]!=l[0]:\\n        maxi1=i \\nmaxi2=0 \\nfor i in range(n-2,-1,-1):\\n    if l[i]!=l[n-1]:\\n        maxi2=i \\nmaxi2=(n-1-maxi2)\\nprint(max(maxi1,maxi2))\", \"n = int(input())\\narr = [int(x) for x in input().split()]\\n\\nif arr[0] != arr[n-1]:\\n    print(n-1)\\nelse:\\n    c = arr[0]\\n    left = None\\n    right = None\\n    for i in range(n):\\n        if arr[i] != c:\\n            if left is None:\\n                left = i\\n            right = i\\n    print(max(n-1 - left, right))\\n\", \"n = int(input())\\ncolors = [int(x) for x in input().split()]\\nright = n - 1\\nleft = 0\\nwhile colors[right] == colors[0]:\\n    right -= 1\\n\\nwhile colors[left] == colors[-1]:\\n\\tleft += 1\\n\\nprint(max(n - left - 1, right))\", \"def mp():\\n    return map(int, input().split())\\n\\nn = int(input())\\na = list(mp())\\n\\nans = 1\\nfor i in range(1, n):\\n    if a[i] != a[0]:\\n        ans = i\\na = a[::-1]\\nfor i in range(1, n):\\n    if a[i] != a[0]:\\n        ans = max(ans, i)\\nprint(ans)\", \"n = int(input())\\nc = list(map(int, input().split()))\\n\\nl, r = 0, n-1\\nwhile c[l] == c[-1]:\\n    l += 1\\nwhile c[r] == c[0]:\\n    r -= 1\\n\\nprint(max(r, n-1-l))\\n\", \"n=int(input())\\nl=list(map(int,input().split()))\\nans=0\\nfor i in range(n):\\n         if(l[i]!=l[0]):\\n                  ans=max(i-0,ans)\\n         if(l[i]!=l[n-1]):\\n                  ans=max(ans,n-i-1)\\nprint(ans)\", \"n = int(input())\\na = list(map(int, input().split()))\\nl = a[0]\\nr = a[-1]\\nk = 0\\nwhile (a[k] == a[-1]):\\n  k += 1\\n\\n\\nr = 0\\nwhile (a[n - r - 1] == a[0]):\\n  r += 1\\n\\nprint(max(n - k - 1, n - r - 1))\", \"#\\t!/usr/bin/env python3\\n#\\tencoding: UTF-8\\n#\\tModified: <06/Apr/2019 05:10:59 PM>\\n\\n\\n#\\t\\u272a H4WK3yE\\u4e61\\n#\\tMohd. Farhan Tahir\\n#\\tIndian Institute Of Information Technology (IIIT),Gwalior\\n\\n\\n# ///==========Libraries, Constants and Functions=============///\\n\\n\\nimport sys\\n\\n\\ndef get_array(): return list(map(int, sys.stdin.readline().split()))\\n\\n\\ndef get_ints(): return list(map(int, sys.stdin.readline().split()))\\n\\n\\ndef input(): return sys.stdin.readline()\\n\\n# ///==========MAIN=============///\\n\\n\\ndef main():\\n    n = int(input())\\n    arr = get_array()\\n    x = arr[0]\\n    mx = 0\\n    for j in range(n-1, 0, -1):\\n        if arr[j] != x:\\n            mx = j\\n            break\\n    for i in range(1, n):\\n        if arr[i] != x:\\n            next = arr[i]\\n            curr = i\\n            break\\n    for i in range(n-1, curr, -1):\\n        if arr[i] != next:\\n            mx = max(mx, i-curr)\\n            break\\n    print(mx)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n=int(input())\\nc=[int(x) for x in input().split()]\\nper={}\\npos={}\\ni=1\\nfor item in c:\\n    if item not in per:\\n        per[item]=i\\n    pos[item]=i\\n    i+=1\\nper1=[]\\npos1=[]\\nfor item in per:\\n    per1.append((per[item],item))\\nfor item in pos:\\n    pos1.append((pos[item],item))\\nper1.sort()\\npos1.sort(reverse=True)\\nif per1[0][1]!=pos1[0][1]:\\n    print(pos1[0][0]-per1[0][0])\\nelse:\\n    print(max(pos1[0][0]-per1[1][0],pos1[1][0]-per1[0][0]))\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nif a[0] != a[-1]:\\n    print(n - 1)\\nelse:\\n    for i in range(len(a)):\\n        if a[i] != a[0]:\\n            l = i\\n            break\\n    for i in range(len(a)):\\n        if a[i] != a[0]:\\n            r = i\\n    print(max(r, n - l - 1))\\n\", \"N = int(input())\\nC = list(map(int,input().split()))\\nans = 0\\nfor i in range(N-1,0,-1):\\n    if C[i] != C[0]:\\n        ans = max(ans, i)\\n        break\\nfor i in range(N-1):\\n    if C[i] != C[-1]:\\n        ans = max(ans, N-1-i)\\nprint(ans)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5\\n1 2 3 2 3\\n\",\n    \"3\\n1 2 1\\n\",\n    \"7\\n1 1 3 1 1 1 1\\n\",\n    \"10\\n1 5 2 10 9 3 3 2 9 5\\n\",\n    \"10\\n6 5 7 1 10 10 2 3 6 6\\n\",\n    \"10\\n5 5 9 1 2 5 10 6 8 5\\n\",\n    \"10\\n6 6 6 10 2 9 3 3 9 6\\n\",\n    \"10\\n8 8 8 3 4 3 1 8 8 8\\n\",\n    \"10\\n4 2 10 9 8 5 7 6 6 6\\n\",\n    \"4\\n1 2 1 2\\n\",\n    \"7\\n1 5 5 5 5 5 1\\n\",\n    \"5\\n1 2 1 2 1\\n\",\n    \"10\\n1 1 1 1 1 1 1 2 1 1\\n\",\n    \"5\\n1 1 2 1 1\\n\",\n    \"5\\n1 2 2 1 2\\n\",\n    \"6\\n1 2 3 1 2 3\\n\",\n    \"8\\n1 2 3 4 5 1 2 3\\n\",\n    \"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 2 1 1\\n\",\n    \"10\\n1 1 1 1 1 1 2 1 1 1\\n\",\n    \"8\\n1 1 8 1 1 8 1 1\\n\",\n    \"5\\n2 1 2 1 2\\n\",\n    \"7\\n1 2 3 1 2 3 1\\n\",\n    \"5\\n2 1 3 2 1\\n\",\n    \"12\\n1 1 1 1 2 1 1 1 1 1 1 1\\n\",\n    \"3\\n1 1 3\\n\",\n    \"10\\n1 2 3 4 5 5 4 3 2 1\\n\",\n    \"6\\n1 2 2 2 2 1\\n\",\n    \"8\\n1 2 3 4 1 2 3 4\\n\",\n    \"6\\n6 1 3 1 6 1\\n\",\n    \"7\\n1 2 3 4 1 2 3\\n\",\n    \"6\\n1 2 1 1 2 1\\n\",\n    \"15\\n1 1 1 1 1 1 1 1 1 1 2 1 1 1 1\\n\",\n    \"6\\n1 2 2 1 2 2\\n\",\n    \"4\\n1 1 1 2\\n\",\n    \"10\\n1 2 3 4 5 6 1 1 1 2\\n\",\n    \"20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 2 1 1 1 1 1 1\\n\",\n    \"5\\n1 2 1 1 2\\n\",\n    \"9\\n1 2 3 4 1 2 3 4 1\\n\",\n    \"9\\n1 1 1 1 1 1 2 1 1\\n\",\n    \"8\\n1 1 1 1 1 5 1 1\\n\",\n    \"6\\n1 2 1 2 1 2\\n\",\n    \"41\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 1\\n\",\n    \"7\\n1 2 1 2 1 2 1\\n\",\n    \"6\\n1 3 1 3 1 3\\n\",\n    \"6\\n1 1 2 2 1 1\\n\",\n    \"4\\n1 1 2 2\\n\"\n  ],\n  \"outputs\": [\n    \"4\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"6\\n\",\n    \"9\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"17\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"8\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"10\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"9\\n\",\n    \"13\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"39\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1119/A",
  "starter_code": ""
}