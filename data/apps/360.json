{
  "task_id": "APPS/360",
  "problem_id": 360,
  "prompt": "After lessons Nastya decided to read a book. The book contains $n$ chapters, going one after another, so that one page of the book belongs to exactly one chapter and each chapter contains at least one page.\n\nYesterday evening Nastya did not manage to finish reading the book, so she marked the page with number $k$ as the first page which was not read (i.e. she read all pages from the $1$-st to the $(k-1)$-th).\n\nThe next day Nastya's friend Igor came and asked her, how many chapters remain to be read by Nastya? Nastya is too busy now, so she asks you to compute the number of chapters she has not completely read yet (i.e. the number of chapters she has not started to read or has finished reading somewhere in the middle).\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\leq n \\leq 100$)\u00a0\u2014 the number of chapters in the book.\n\nThere are $n$ lines then. The $i$-th of these lines contains two integers $l_i$, $r_i$ separated by space ($l_1 = 1$, $l_i \\leq r_i$)\u00a0\u2014 numbers of the first and the last pages of the $i$-th chapter. It's guaranteed that $l_{i+1} = r_i + 1$ for all $1 \\leq i \\leq n-1$, and also that every chapter contains at most $100$ pages.\n\nThe $(n+2)$-th line contains a single integer $k$ ($1 \\leq k \\leq r_n$)\u00a0\u2014 the index of the marked page. \n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the number of chapters which has not been completely read so far.\n\n\n-----Examples-----\nInput\n3\n1 3\n4 7\n8 11\n2\n\nOutput\n3\n\nInput\n3\n1 4\n5 9\n10 12\n9\n\nOutput\n2\n\nInput\n1\n1 7\n4\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first example the book contains $11$ pages and $3$ chapters\u00a0\u2014 $[1;3]$, $[4;7]$ and $[8;11]$. Nastya marked the $2$-nd page, so she finished in the middle of the $1$-st chapter. So, all chapters has not been read so far, so the answer is $3$.\n\nThe book in the second example contains $12$ pages and $3$ chapters too, but Nastya finished reading in the middle of the $2$-nd chapter, so that the answer is $2$.",
  "solutions": "[\"ii = lambda: int(input())\\nmi = lambda: map(int, input().split())\\nli = lambda: list(mi())\\n\\nn = ii()\\na = [li() for _ in range(n)]\\nk = ii()\\nans = 0\\nfor l, r in a:\\n    ans += k <= r\\nprint(ans)\", \"n = int(input())\\na = []\\nfor i in range(n):\\n    a.append([int(j) for j in input().split()])\\nk = int(input())\\nans = n\\nfor i in range(n):\\n    if k > a[i][1]:\\n        ans -= 1\\nprint(ans)\\n\", \"n = int(input())\\nb = []\\nfor i in range(n):\\n    tl, tr = list(map(int, input().split()))\\n    b.append((tl, tr))\\nk = int(input())\\nans = 0\\nfor l, r in b:\\n    if k <= r:\\n        ans += 1\\nprint(ans)\\n\", \"n = int(input())\\narr = [list(map(int, input().split())) for i in range(n)]\\nk = int(input()) - 1\\ncnt = 0\\nfor el in arr:\\n\\tif el[1] <= k:\\n\\t\\tcnt += 1\\nprint(n - cnt)\", \"hop = []\\nfor i in range(int(input())):\\n    a, b = map(int, input().split())\\n    hop.append(b)\\nk = int(input())\\nfor i in range(len(hop)):\\n    if k <= hop[i]:\\n        print(len(hop) - i)\\n        break\", \"n = int(input())\\na = []\\nfor i in range(n):\\n\\tl, r = list(map(int, input().split()))\\n\\ta.append((l, r))\\nq = int(input())\\nk = 0\\nfor i in a:\\n\\tif q > i[1]:\\n\\t\\tk += 1\\nprint(n -k)\\n\", \"n = int(input())\\na = []\\nfor i in range(n):\\n    x, y = map(int, input().split())\\n    a.append(y)\\np = int(input())\\nfor i in range(n):\\n    if p <= a[i]:\\n        print(n - i)\\n        break\", \"n = int(input())\\nl = []\\nfor i in range(n):\\n    l.append(list(map(int, input().split())))\\npage = int(input())\\n\\nout = 0\\nfor ch in l:\\n    if ch[-1] >= page:\\n        out += 1\\n\\nprint(out)\\n\", \"n = int(input())\\na = []\\nfor i in range(n):\\n\\tl, r = map(int, input().split())\\n\\ta+=[(l, r)]\\nk = int(input())\\n\\ncount = 0\\nfor l, r in a:\\n\\tif not r<k:\\n\\t\\tcount += 1\\nprint(count)\", \"from sys import stdin, stdout\\nfrom math import sqrt, pi, acos, gcd, atan2, cos, sin, factorial\\nfrom decimal import Decimal\\nPEPS = 1e-10\\nINF = float('inf')\\n\\n\\ndef sqr(a):\\n    return a * a\\n\\n\\ndef dist(a, b = (0, 0)):\\n    return sqrt(sqr(a[0] - b[0]) + sqr(a[1] - b[1]))\\n\\n\\ndef s_dist(a, b = (0, 0)):\\n    return (sqr(a[0] - b[0]) + sqr(a[1] - b[1]))\\n\\n\\ndef dist3(a, b = (0, 0, 0)):\\n    return sqrt(sqr(a[0] - b[0]) + sqr(a[1] - b[1]) + sqr(a[2] - b[2]))\\n\\n\\ndef s_dist3(a, b = (0, 0, 0)):\\n    return (sqr(a[0] - b[0]) + sqr(a[1] - b[1]) + sqr(a[2] - b[2]))\\n\\n\\ndef trans(p, al):\\n    return (p[0] * cos(al) + p[1] * sin(al), - p[0] * sin(al) + p[1] * cos(al))\\n\\n\\ndef get_angle(a, b, c):\\n    cos_al = (sqr(a) + sqr(b) - sqr(c)) / (2 * a * b)\\n    return acos(cos_al)\\n\\n\\ndef write_float(ans):\\n    stdout.write(str('%.6f' % ans) + '\\\\n')\\n\\n\\ndef get_hight(pt1, pt2, pt3):\\n    a = (pt2[0] - pt1[0], pt2[1] - pt1[1])\\n    b = (pt3[0] - pt1[0], pt3[1] - pt1[1])\\n    return abs(a[0] * b[1] - a[1] * b[0]) / dist(pt1, pt2)\\n\\n\\ndef get_square(pt1, pt2, pt3):\\n    a = (pt2[0] - pt1[0], pt2[1] - pt1[1])\\n    b = (pt3[0] - pt2[0], pt3[1] - pt2[1])\\n    return (a[0] * b[-1] - a[1] * b[0]) / 2\\n\\n\\ndef sign(v):\\n    if v > 0:\\n        return 1\\n    elif v < 0:\\n        return -1\\n    else:\\n        return 0\\n\\n\\ndef inn(pt, triangle):\\n    signs = set()\\n    signs.add(sign(get_square(triangle[0], triangle[1], pt)))\\n    signs.add(sign(get_square(triangle[1], triangle[2], pt)))\\n    signs.add(sign(get_square(triangle[2], triangle[0], pt)))\\n    return len(signs) == 1\\n\\n\\ndef inter_in(a, b):\\n    return dist((a[0], a[1]), (b[0], b[1])) < a[-1] + b[-1]\\n\\n\\ndef inter_in3(a, b):\\n    return dist3(a[:-1], b[:-1]) < a[-1] + b[-1]\\n\\n\\ndef shift(what, wth):\\n    return (what[0] - wth[0], what[1] - wth[1])\\n\\n\\nn = int(stdin.readline())\\nchal = []\\n\\nfor i in range(n):\\n    l, r = map(int ,stdin.readline().split())\\n    chal.append((l, r))\\n\\nk = int(stdin.readline())\\nans = 0\\n\\nfor p in chal:\\n    if p[1] >= k:\\n        ans += 1\\n\\nstdout.write(str(ans))\", \"# -*- coding: utf-8 -*-\\n\\n\\ndef rli():\\n    return list(map(int, input().split()))\\n\\n\\ndef main():\\n    n = int(input())\\n    ns = []\\n    for i in range(n):\\n        x, y = rli()\\n        ns.append((x, y))\\n    w = int(input())\\n    for i in range(n):\\n        x, y = ns[i]\\n        if y >= w:\\n            print(n - i)\\n            return\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"# -*- coding: utf-8 -*-\\n# @Time    : 2019/3/12 0:35\\n# @Author  : LunaFire\\n# @Email   : gilgemesh2012@gmail.com\\n# @File    : A. Nastya Is Reading a Book.py\\n\\n\\ndef main():\\n    n = int(input())\\n    lr = [list(map(int, input().split())) for _ in range(n)]\\n    k = int(input())\\n\\n    ret = 0\\n    for i in range(n):\\n        if lr[i][1] >= k:\\n            ret += 1\\n    print(ret)\\n\\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"import getpass\\nimport math\\nimport sys\\nimport string\\nimport re\\nimport math\\nimport random\\nfrom decimal import Decimal, getcontext\\n\\n\\ndef ria():\\n    return [int(i) for i in input().split()]\\n\\n\\nif getpass.getuser() != 'frohenk':\\n    filename = 'half'\\n    # sys.stdin = open('input.txt')\\n    # sys.stdout = open('output.txt', 'w')\\nelse:\\n    sys.stdin = open('input.txt')\\n    # sys.stdin.close()\\n\\nn = ria()[0]\\nar = []\\nfor i in range(n):\\n    ar.append(ria())\\nlk = ria()[0]\\ncnt = 0\\nlk -= 1\\nfor l, r in ar:\\n    if l <= lk and r <= lk:\\n        cnt += 1\\nprint(n - cnt)\\n\", \"n = int(input())\\nd = []\\nfor _ in range(n):\\n    l, r = [int(item) for item in input().split()]\\n    d.append([l, r])\\n\\nk = int(input())\\n\\nans = 0\\nfor i in range(n):\\n    l, r = d[i]\\n    if r >= k:\\n        ans = i\\n        break\\n\\nprint(n - ans)\\n\", \"n=int(input())\\ntot=[]\\nfor i in range(n):\\n    a,b=[int(x) for x in input().split()]\\n    tot.append((a,b))\\nk=int(input())\\ncounter=0\\nfor item in tot:\\n    if item[0]<=k<=item[1]:\\n        print(n-counter)\\n        break\\n    counter+=1\\n\", \"n = int(input())\\narr = []\\nfor i in range(n):\\n\\ta, b = map(int, input().split())\\n\\tarr.append([a, b])\\nk = int(input())\\nfor i in range(n):\\n\\tl = arr[i][0]\\t\\n\\tr = arr[i][1]\\n\\tif r >= k:\\n\\t\\tind = i\\n\\t\\tbreak\\nprint(n - ind)\", \"n=int(input())\\narr=[]\\nfor i in range(n):\\n\\ta,b=list(map(int,input().split()))\\n\\tarr.append((a,b))\\npage=int(input())\\nans=0\\nfor i in range(n):\\n\\tif(arr[i][0]<=page<=arr[i][1]):\\n\\t\\tans=i\\nprint(n-ans)\\n\\n\\n\", \"n = int(input())\\nA = [list(map(int, input().split())) for i in range(n)]\\nk = int(input())\\nans = 0\\nfor i in range(n):\\n  l, r = A[i]\\n  if k <= r:\\n    ans += 1\\nprint(ans)\\n\", \"#      \\nimport collections, atexit, math, sys, bisect \\n\\nsys.setrecursionlimit(1000000)\\n\\nisdebug = False\\ntry :\\n    #raise ModuleNotFoundError\\n    import pylint\\n    import numpy\\n    def dprint(*args, **kwargs):\\n        #print(*args, **kwargs, file=sys.stderr)\\n        # in python 3.4 **kwargs is invalid???\\n        print(*args,  file=sys.stderr)\\n    dprint('debug mode')\\n    isdebug = True\\nexcept Exception:\\n    def dprint(*args, **kwargs):\\n        pass\\n\\n\\ndef red_inout():\\n    inId = 0\\n    outId = 0\\n    if not isdebug:\\n        inId = 0\\n        outId = 0\\n    if inId>0:\\n        dprint('use input', inId)\\n        try:\\n            f = open('input'+ str(inId) + '.txt', 'r')\\n            sys.stdin = f #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\n        except Exception:\\n            dprint('invalid input file')\\n    if outId>0:\\n        dprint('use output', outId)\\n        try:\\n            f = open('stdout'+ str(outId) + '.txt', 'w')\\n            sys.stdout = f #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\n        except Exception:\\n            dprint('invalid output file')\\n            \\n        atexit.register(lambda :sys.stdout.close())     #idle \\u4e2d\\u4e0d\\u4f1a\\u6267\\u884c atexit\\n\\nif isdebug and len(sys.argv) == 1:\\n    red_inout()\\n\\ndef getIntList():\\n    return list(map(int, input().split()))            \\n\\ndef solve(): \\n    pass\\n    \\nT_ = 1    \\n#T_, = getIntList()\\n\\nfor iii_ in range(T_):\\n    #solve()\\n    N,  = getIntList()\\n    #print(N)\\n    zz = []\\n    for i in range(N):\\n        l,r = getIntList()\\n        zz.append((l,r))\\n    x, = getIntList()\\n    for i in range(N):\\n        l,r  = zz[i]\\n        if l<=x<=r:\\n            print(N-i)\\n            break\\n \\n \\n\", \"n = int(input())\\nA = []\\nfor i in range(n):\\n    a, b = list(map(int, input().split()))\\n    A.append((a, b))\\nk = int(input())\\nfor i in range(n):\\n    if k >= A[i][0] and k <= A[i][1]:\\n        print(n - i)\\n        break\\n\", \"n = int(input())\\nl = []\\nr = []\\nfor i in range(n):\\n    l1, r1 = map(int, input().split())\\n    l.append(l1)\\n    r.append(r1)\\nk = int(input())\\nres = 1\\nfor el in l:\\n    if k < el:\\n        res += 1\\nprint(res)\", \"n = int(input())\\nl = list()\\nr = list()\\nfor i in range(n):\\n    x, y = list(map(int, input().split()))\\n    l.append(x)\\n    r.append(y)\\nk = int(input())\\nans = 0\\nfor i in range(n):\\n    if k <= r[i]:\\n        ans += 1\\nprint(ans)\\n\", \"\\n\\nl=[]\\nr=[]\\nn=int(input())\\nfor i in range(n):\\n\\n\\ts=input().split(\\\" \\\")\\n\\tl.append(int(s[0]))\\n\\tr.append(int(s[1]))\\n\\nk=int(input())\\n\\nrem=n\\n\\n\\ni=0\\n\\n\\nfor i in range(n):\\n\\tif(l[i]<=k<=r[i]):\\n\\t\\tbreak\\n\\trem-=1\\nprint(rem)\\n\\n\\n\", \"n=int(input())\\na=[0]*50001\\nfor i in range(n):\\n    l,r=list(map(int,input().split()))\\n    for j in range(l,r+1):\\n        a[j]=i\\nk=int(input())\\nprint(n-a[k])\\n\", \"n=int(input())\\na=[]\\nfor i in range(n):\\n    a.append(list(map(int,input().split())))\\nk=int(input())\\nfor i in range(n):\\n    if a[i][1]>=k:\\n        print(n-i)\\n        break\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n1 3\\n4 7\\n8 11\\n2\\n\",\n    \"3\\n1 4\\n5 9\\n10 12\\n9\\n\",\n    \"1\\n1 7\\n4\\n\",\n    \"3\\n1 6\\n7 16\\n17 20\\n4\\n\",\n    \"3\\n1 6\\n7 13\\n14 17\\n16\\n\",\n    \"6\\n1 6\\n7 12\\n13 19\\n20 28\\n29 37\\n38 39\\n21\\n\",\n    \"27\\n1 46\\n47 111\\n112 207\\n208 266\\n267 341\\n342 380\\n381 443\\n444 476\\n477 495\\n496 581\\n582 653\\n654 710\\n711 712\\n713 774\\n775 799\\n800 809\\n810 874\\n875 877\\n878 913\\n914 986\\n987 998\\n999 1030\\n1031 1095\\n1096 1106\\n1107 1147\\n1148 1196\\n1197 1210\\n45\\n\",\n    \"10\\n1 60\\n61 84\\n85 88\\n89 149\\n150 216\\n217 243\\n244 307\\n308 319\\n320 321\\n322 402\\n389\\n\",\n    \"49\\n1 17\\n18 115\\n116 211\\n212 269\\n270 345\\n346 404\\n405 441\\n442 467\\n468 526\\n527 583\\n584 664\\n665 757\\n758 794\\n795 802\\n803 882\\n883 920\\n921 960\\n961 962\\n963 1006\\n1007 1081\\n1082 1112\\n1113 1149\\n1150 1217\\n1218 1282\\n1283 1287\\n1288 1365\\n1366 1374\\n1375 1379\\n1380 1478\\n1479 1524\\n1525 1549\\n1550 1646\\n1647 1671\\n1672 1752\\n1753 1755\\n1756 1782\\n1783 1824\\n1825 1894\\n1895 1966\\n1967 2027\\n2028 2091\\n2092 2112\\n2113 2153\\n2154 2156\\n2157 2161\\n2162 2258\\n2259 2324\\n2325 2421\\n2422 2501\\n1285\\n\",\n    \"45\\n1 48\\n49 118\\n119 122\\n123 198\\n199 283\\n284 352\\n353 447\\n448 528\\n529 539\\n540 549\\n550 557\\n558 627\\n628 700\\n701 741\\n742 835\\n836 883\\n884 887\\n888 900\\n901 943\\n944 1032\\n1033 1131\\n1132 1158\\n1159 1222\\n1223 1281\\n1282 1315\\n1316 1397\\n1398 1469\\n1470 1520\\n1521 1558\\n1559 1631\\n1632 1688\\n1689 1699\\n1700 1766\\n1767 1775\\n1776 1778\\n1779 1878\\n1879 1904\\n1905 1984\\n1985 1987\\n1988 1999\\n2000 2059\\n2060 2126\\n2127 2168\\n2169 2189\\n2190 2206\\n1109\\n\",\n    \"19\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n13\\n\",\n    \"27\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n25\\n\",\n    \"71\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n69\\n\",\n    \"12\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n9\\n\",\n    \"68\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n53\\n\",\n    \"4\\n1 12\\n13 59\\n60 100\\n101 124\\n93\\n\",\n    \"9\\n1 81\\n82 177\\n178 254\\n255 338\\n339 410\\n411 412\\n413 474\\n475 534\\n535 555\\n426\\n\",\n    \"5\\n1 48\\n49 138\\n139 146\\n147 200\\n201 272\\n122\\n\",\n    \"47\\n1 6\\n7 14\\n15 21\\n22 24\\n25 27\\n28 31\\n32 39\\n40 40\\n41 43\\n44 48\\n49 52\\n53 54\\n55 60\\n61 68\\n69 74\\n75 80\\n81 82\\n83 89\\n90 90\\n91 97\\n98 101\\n102 111\\n112 120\\n121 130\\n131 135\\n136 141\\n142 150\\n151 153\\n154 156\\n157 157\\n158 162\\n163 164\\n165 165\\n166 167\\n168 170\\n171 171\\n172 181\\n182 188\\n189 195\\n196 202\\n203 203\\n204 208\\n209 218\\n219 220\\n221 230\\n231 237\\n238 239\\n161\\n\",\n    \"11\\n1 8\\n9 15\\n16 18\\n19 23\\n24 25\\n26 27\\n28 29\\n30 36\\n37 39\\n40 44\\n45 54\\n49\\n\",\n    \"1\\n1 2\\n1\\n\",\n    \"2\\n1 1\\n2 2\\n1\\n\",\n    \"1\\n1 7\\n7\\n\",\n    \"1\\n1 1\\n1\\n\",\n    \"4\\n1 2\\n3 4\\n5 6\\n7 8\\n1\\n\",\n    \"3\\n1 3\\n4 5\\n6 7\\n4\\n\",\n    \"3\\n1 3\\n4 5\\n6 6\\n1\\n\",\n    \"3\\n1 1\\n2 2\\n3 3\\n2\\n\",\n    \"1\\n1 7\\n1\\n\",\n    \"3\\n1 3\\n4 7\\n8 11\\n1\\n\",\n    \"5\\n1 1\\n2 3\\n4 5\\n6 7\\n8 9\\n1\\n\",\n    \"2\\n1 3\\n4 7\\n4\\n\",\n    \"2\\n1 2\\n3 4\\n3\\n\",\n    \"4\\n1 1\\n2 3\\n4 4\\n5 5\\n2\\n\",\n    \"3\\n1 1\\n2 2\\n3 3\\n1\\n\",\n    \"2\\n1 3\\n4 10\\n4\\n\",\n    \"13\\n1 13\\n14 15\\n16 17\\n18 19\\n20 21\\n22 23\\n24 25\\n26 27\\n28 29\\n30 31\\n32 33\\n34 35\\n36 37\\n13\\n\",\n    \"4\\n1 3\\n4 7\\n8 11\\n12 15\\n12\\n\",\n    \"2\\n1 2\\n3 10\\n1\\n\",\n    \"3\\n1 1\\n2 3\\n4 5\\n1\\n\",\n    \"2\\n1 1\\n2 2\\n2\\n\",\n    \"3\\n1 4\\n5 9\\n10 12\\n10\\n\",\n    \"2\\n1 2\\n3 4\\n1\\n\",\n    \"3\\n1 3\\n4 7\\n8 11\\n8\\n\",\n    \"66\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n1\\n\",\n    \"3\\n1 1\\n2 2\\n3 3\\n3\\n\",\n    \"3\\n1 2\\n3 4\\n5 6\\n3\\n\",\n    \"2\\n1 3\\n4 6\\n4\\n\",\n    \"4\\n1 1\\n2 2\\n3 3\\n4 4\\n2\\n\",\n    \"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n3\\n\",\n    \"13\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24\\n25 26\\n5\\n\",\n    \"1\\n1 5\\n1\\n\",\n    \"3\\n1 3\\n4 7\\n8 11\\n4\\n\",\n    \"3\\n1 1\\n2 2\\n3 4\\n3\\n\",\n    \"3\\n1 3\\n4 6\\n7 9\\n4\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"27\\n\",\n    \"1\\n\",\n    \"25\\n\",\n    \"25\\n\",\n    \"7\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"16\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"17\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"13\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"66\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"11\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1136/A",
  "starter_code": ""
}