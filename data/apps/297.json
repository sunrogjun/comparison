{
  "task_id": "APPS/297",
  "problem_id": 297,
  "prompt": "Vasya has got three integers $n$, $m$ and $k$. He'd like to find three integer points $(x_1, y_1)$, $(x_2, y_2)$, $(x_3, y_3)$, such that $0 \\le x_1, x_2, x_3 \\le n$, $0 \\le y_1, y_2, y_3 \\le m$ and the area of the triangle formed by these points is equal to $\\frac{nm}{k}$.\n\nHelp Vasya! Find such points (if it's possible). If there are multiple solutions, print any of them.\n\n\n-----Input-----\n\nThe single line contains three integers $n$, $m$, $k$ ($1\\le n, m \\le 10^9$, $2 \\le k \\le 10^9$).\n\n\n-----Output-----\n\nIf there are no such points, print \"NO\".\n\nOtherwise print \"YES\" in the first line. The next three lines should contain integers $x_i, y_i$ \u2014 coordinates of the points, one point per line. If there are multiple solutions, print any of them.\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n4 3 3\n\nOutput\nYES\n1 0\n2 3\n4 1\n\nInput\n4 4 7\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first example area of the triangle should be equal to $\\frac{nm}{k} = 4$. The triangle mentioned in the output is pictured below:  [Image] \n\nIn the second example there is no triangle with area $\\frac{nm}{k} = \\frac{16}{7}$.",
  "solutions": "[\"def gcd(a, b):\\n    a, b = max(a, b), min(a, b)\\n    while b:\\n        a, b = b, a % b\\n    return a\\n\\n\\nn, m, k = list(map(int, input().split()))\\n_n, _m = n, m\\nn, k = n // gcd(n, k), k // gcd(n, k)\\nm, k = m // gcd(m, k), k // gcd(m, k)\\na = 2\\na, k = a // gcd(a, k), k // gcd(a, k)\\nif k != 1:\\n    print(\\\"NO\\\")\\nelif a * n <= _n:\\n    print(\\\"YES\\\")\\n    print(\\\"0 0\\\")\\n    print(a * n, 0)\\n    print(0, m)\\nelif a * m <= _m:\\n    print(\\\"YES\\\")\\n    print(\\\"0 0\\\")\\n    print(n, 0)\\n    print(0, m * a)\\nelse:\\n    print(\\\"NO\\\")\\n\", \"def HOD(a, b):\\n    while (b > 0):\\n        a, b = b, a % b\\n    return a\\nn, m, k = map(int, input().split())\\nx = HOD(n, k)\\nn1 = n // x\\nk = k // x\\nx = HOD(m, k)\\nm1 = m // x\\nk = k // x\\nif (k > 2):\\n    print(\\\"NO\\\")\\nif (k == 2):\\n    print(\\\"YES\\\")\\n    print(0, 0)\\n    print(n1, 0)\\n    print(0, m1)\\nif (k == 1):\\n    if (n1 * 2 <= n):\\n        print(\\\"YES\\\")\\n        print(0, 0)\\n        print(n1 * 2, 0)\\n        print(0, m1)\\n    else:\\n        if (m1 * 2 <= m):\\n            print(\\\"YES\\\")\\n            print(0, 0)\\n            print(n1, 0)\\n            print(0, m1 * 2)\\n        else:\\n            print(\\\"NO\\\")\", \"def gcd(a, b):\\n    if (b == 0):\\n        return a\\n    return gcd(b, a % b)\\n\\nn, m, k = [int(i) for i in input().split()]\\nif ((2 * n * m) % k != 0):\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\\n    newk = k / gcd(2 * n, k)\\n    a = n / gcd(2 * n, k)\\n    b = m / newk\\n    \\n    if (2 * a <= n):\\n        a = a * 2\\n    else:\\n        b = b * 2\\n    \\n    a = int(a)\\n    b = int(b)\\n    print(0, 0)\\n    print(a, 0)\\n    print(0, b)\", \"import math, sys\\nfrom itertools import permutations\\n\\ndef mp():\\n    return list(map(int, input().split()))\\n\\ndebug = 0\\nif debug:\\n    file = open(\\\"input.txt\\\", \\\"r\\\")\\n    input = file.readline\\nelse:\\n    input = sys.stdin.readline\\n\\ndef main():\\n    n, m, k = mp()\\n    x = n * m\\n    g = math.gcd(x, k)\\n    x //= g\\n    a = 0\\n    if k // g == 1:\\n        a = x * 2\\n    elif k // g == 2:\\n        a = x\\n    else:\\n        print(\\\"NO\\\")\\n        return\\n    print(\\\"YES\\\")\\n    kn = math.gcd(k, n)\\n    k //= kn\\n    km = math.gcd(k, m)\\n    on = n\\n    om = m\\n    n //= kn\\n    m //= km\\n    t = a // (n * m)\\n    if t * n <= on:\\n        print(0, 0)\\n        print(t * n, 0)\\n        print(0, m)\\n    elif t * m <= om:\\n        print(0, 0)\\n        print(n, 0)\\n        print(0, m * t)\\n    else:\\n        # assert(t == 4)\\n        print(0, 0)\\n        print(2 * n, 0)\\n        print(0, 2 * m)\\n\\n\\n\\nmain()\", \"from fractions import gcd\\n\\nans = False\\nx1=0\\ny1=0\\ny2=0\\nx3=0\\nn, m, k = input().split(\\\" \\\")\\nn = int(n)\\nm = int(m)\\nk = int(k)\\na=gcd(n, k)\\nn_new=n/a\\nk_new=k/a\\na = gcd(m, k_new)\\nm_new=m/a\\nk_new=k_new/a\\nif k_new > 2:\\n    print(\\\"NO\\\")\\nelse:\\n    x2 = int(n_new)\\n    y3 = int(m_new)\\n    if(k_new < 2):\\n        if(x2*2 <= n):\\n            x2*=2\\n            ans = True\\n        elif(y3*2 <= m):\\n            y3*=2\\n            ans = True\\n        else:\\n            print(\\\"NO\\\")\\n    else:\\n        ans = True\\n    if(ans):\\n        print(\\\"YES\\\")\\n        print(x1, y1)\\n        print(x2, y2)\\n        print(x3, y3)\\n    \\n\", \"def gcd(a, b):\\n\\twhile b:\\n\\t\\ta, b = b, a % b\\n\\treturn a\\nn, m, k = list(map(int, input().split()))\\nif n*m*2 % k:\\n\\tprint(\\\"NO\\\")\\nelse:\\n\\tprint(\\\"YES\\\")\\n\\tg1 = gcd(n, k)\\n\\tn //= g1\\n\\tk //= g1\\n\\tg2 = gcd(m, k)\\n\\tm //= g2\\n\\tk //= g2\\n\\tif k == 1:\\n\\t\\tif g1 == 1:\\n\\t\\t\\tm *= 2\\n\\t\\telse:\\n\\t\\t\\tn *= 2\\n\\tprint('0 0')\\n\\tprint('0', m)\\n\\tprint(n, '0')\\n\", \"from fractions import gcd as g\\n\\n(n, m, k) = list(map(int, input().split()))\\n\\nif (n * m * 2) % k != 0:\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\\n    n0 = n // g(n, k)\\n    k //= g(n, k)\\n    m0 = m // g(m, k)\\n    k //= g(m, k)\\n\\n    if k == 1:\\n        if n0 * 2 <= n:\\n            n0 *= 2\\n        else:\\n            m0 *= 2\\n\\n    print(0, 0)\\n    print(n0, 0)\\n    print(0, m0)\\n    \\n    \\n\", \"n, m, k = list(map(int, input().split()))\\n\\nif 2 * n * m % k != 0:\\n    print(\\\"NO\\\")\\n    return\\n\\ng = n\\nb = k\\n\\nwhile g > 0 and b > 0:\\n    if g > b:\\n        g %= b\\n    else:\\n        b %= g\\n\\ng = g + b\\nk1 = k // g\\np = False\\nif k1 % 2 == 0:\\n    k1 //= 2\\n    p = True\\na = n // g\\nb = m // k1\\n\\nif not p:\\n    if a < n:\\n        a *= 2\\n    else:\\n        b *= 2\\n\\nprint(\\\"YES\\\")\\n# print(a * b // 2, n * m // k)\\nprint(0, 0)\\nprint(a, 0)\\nprint(0, b)\\n\", \"def gcd(a, b):\\n    while b:\\n        a, b = b, a%b\\n    return a\\nn,m,k=list(map(int,input().split()))\\nif (2*n*m)%k==0:\\n    c=0\\n    if k%2!=0:\\n        c=1\\n    else:\\n        k//=2\\n    a=n//gcd(k,n)\\n    k//=gcd(k,n)\\n    b=m//gcd(m,k)\\n    if c==1:\\n        if a*2>n and a*2>m:\\n            b*=2\\n        else:\\n            a*=2\\n    if a>n or b>m:\\n        a,b=b,a\\n    print(\\\"YES\\\")\\n    print(\\\"0 0\\\")\\n    print(\\\"0\\\",b)\\n    print(a,\\\"0\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"#!/usr/bin/env python3\\nimport sys\\nfrom math import gcd\\n\\ndef rint():\\n    return list(map(int, sys.stdin.readline().split()))\\n#lines = stdin.readlines()\\n\\nn, m, k = rint()\\n\\nif (2*n*m)%k:\\n    print(\\\"NO\\\")\\n    return\\n\\nnk_gcd = gcd(n, k)\\n\\nw = n//nk_gcd\\nk = k//nk_gcd\\n\\nmk_gcd = gcd(m, k)\\n\\nh = m//mk_gcd\\nk = k//mk_gcd\\n\\nif k == 1:\\n    if w < n:\\n        w *= 2\\n    elif h < m:\\n        h *= 2\\nelse:\\n    # In order to 2*n*m/k is integer, k is 2, so no need to divide  w or h by 2\\n    pass\\n\\nprint(\\\"YES\\\")\\nprint(0, 0)\\nprint(w, 0)\\nprint(0, h)\\n\", \"inp = input()\\nn, m, k = [int(x) for x in inp.split()]\\n\\ndef gcd(x, y):\\n    if y == 0:\\n        return x\\n    return gcd(y, x % y)\\n\\nif 2 * n * m % k != 0:\\n    print('NO')\\nelse:\\n    print('YES')\\n    if n * m % k != 0:\\n        k //= 2\\n        need = False\\n    else:\\n        need = True\\n    p = gcd(n, k)\\n    q = k // p\\n    x = n // p\\n    y = m // q\\n    if need:\\n        if p > 1:\\n            x *= 2\\n        else:\\n            y *= 2\\n    print(0, 0)\\n    print(x, 0)\\n    print(0, y)\\n\", \"import math\\nn, m, k = [int(x) for x in input().split()]\\n\\nif 2*n*m % k != 0:\\n    print('NO')\\nelse:\\n    if k % 2 == 0:\\n        k //= 2\\n        g = math.gcd(k, n)\\n        k1 = k // g\\n        a = n // g\\n        b = m // k1\\n    else:\\n        g = math.gcd(k, n)\\n        a = n // g\\n        k1 = k // g\\n        b = m // k1\\n        if a < n:  # if a = n then b always < m\\n            a *= 2\\n        else:\\n            b *= 2\\n    print('YES')\\n    print(0, 0)\\n    print(a, 0)\\n    print(0, b)\", \"def GCD(a, b):\\n\\twhile a != 0 and b != 0:\\n\\t\\tif a > b:\\n\\t\\t\\ta %= b\\n\\t\\telse:\\n\\t\\t\\tb %= a\\n\\treturn a + b\\n\\ns = input().split(' ')\\nn = int(s[0])\\nm = int(s[1])\\nk = int(s[2])\\n\\ndivided = False\\n\\nif 2 * n * m % k != 0:\\n\\tprint(\\\"NO\\\")\\n\\treturn\\n\\nif k % 2 == 0:\\n\\tk = k // 2\\n\\tdivided = True\\n\\nk1 = GCD(n,k);\\nk2 = k // k1;\\nx = n // k1;\\ny = m // k2;\\nif not divided:\\n\\tif 2 * x <= n:\\n\\t\\tx *= 2\\n\\telif 2 * y <= m:\\n\\t\\ty *= 2\\n\\telse:\\n\\t\\tprint(\\\"NO\\\")\\n\\t\\treturn\\n\\nprint(\\\"YES\\\")\\nprint(0, y)\\nprint(0, 0)\\nprint(x, 0)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4 3 3\\n\",\n    \"4 4 7\\n\",\n    \"3 4 2\\n\",\n    \"3 4 3\\n\",\n    \"3 4 12\\n\",\n    \"16904235 79092881 127345237\\n\",\n    \"1000000000 999999937 1024\\n\",\n    \"229999981 1000000000 2048\\n\",\n    \"1 1 2\\n\",\n    \"1000000000 1000000000 2\\n\",\n    \"799999999 217041223 5865979\\n\",\n    \"899999963 558436066 279988\\n\",\n    \"217041223 799999999 5865979\\n\",\n    \"311 2886317 897644587\\n\",\n    \"1 156483121 156483121\\n\",\n    \"237349317 1 237349317\\n\",\n    \"1747211 283 494460713\\n\",\n    \"8824 785 2\\n\",\n    \"4422 1826 3\\n\",\n    \"4354 3801 181\\n\",\n    \"13 51 298401051\\n\",\n    \"2 19 182343418\\n\",\n    \"1 361 656220385\\n\",\n    \"4 16 540162752\\n\",\n    \"69 4761 424105119\\n\",\n    \"45418 13277 603014786\\n\",\n    \"10267 1 781924453\\n\",\n    \"186860 5142 960834120\\n\",\n    \"22207 109 844776487\\n\",\n    \"49435 13164 650762340\\n\",\n    \"1 19 534704707\\n\",\n    \"1 58 418647074\\n\",\n    \"1 1 892524041\\n\",\n    \"3 2344 776466408\\n\",\n    \"185 5 955376075\\n\",\n    \"1 1 612615929\\n\",\n    \"13903 56932 791525596\\n\",\n    \"1869 1 970435263\\n\",\n    \"302 5 854377630\\n\",\n    \"6 11 33287298\\n\",\n    \"1 6 212196966\\n\",\n    \"1 23 96139333\\n\",\n    \"1 2 614160842\\n\",\n    \"339 3 498103209\\n\",\n    \"4 1 677012876\\n\",\n    \"3 1 560955243\\n\",\n    \"1 3 34832211\\n\",\n    \"71 7 918774577\\n\",\n    \"8 2 802716944\\n\",\n    \"974654615 59871038 562\\n\",\n    \"568435169 488195690 755\\n\",\n    \"307439915 61744535 511\\n\",\n    \"887669087 755467202 3\\n\",\n    \"626673832 329016046 38\\n\",\n    \"925487090 902564890 70\\n\",\n    \"236887699 1000000000 2\\n\",\n    \"3 5 30\\n\",\n    \"99999989 999999937 2\\n\",\n    \"9 2 3\\n\",\n    \"62 14 8\\n\",\n    \"2 2 8\\n\",\n    \"1200 143143 336\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n0 0\\n0 2\\n4 0\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 4\\n3 0\\n\",\n    \"YES\\n0 0\\n0 4\\n2 0\\n\",\n    \"YES\\n0 0\\n0 2\\n1 0\\n\",\n    \"YES\\n0 0\\n0 699937\\n30 0\\n\",\n    \"YES\\n0 0\\n0 999999937\\n1953125 0\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 1\\n1 0\\n\",\n    \"YES\\n0 0\\n0 1000000000\\n1000000000 0\\n\",\n    \"YES\\n0 0\\n0 74\\n799999999 0\\n\",\n    \"YES\\n0 0\\n0 3989\\n899999963 0\\n\",\n    \"YES\\n0 0\\n0 799999999\\n74 0\\n\",\n    \"YES\\n0 0\\n0 1\\n2 0\\n\",\n    \"YES\\n0 0\\n0 2\\n1 0\\n\",\n    \"YES\\n0 0\\n0 1\\n2 0\\n\",\n    \"YES\\n0 0\\n0 1\\n2 0\\n\",\n    \"YES\\n0 0\\n0 785\\n8824 0\\n\",\n    \"YES\\n0 0\\n0 1826\\n2948 0\\n\",\n    \"YES\\n0 0\\n0 42\\n4354 0\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 1\\n2 0\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 2\\n1 0\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 2\\n1 0\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 2\\n1 0\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 17316634\\n626673832 0\\n\",\n    \"NO\\n\",\n    \"YES\\n0 0\\n0 1000000000\\n236887699 0\\n\",\n    \"YES\\n0 0\\n0 1\\n1 0\\n\",\n    \"YES\\n0 0\\n0 999999937\\n99999989 0\\n\",\n    \"YES\\n0 0\\n0 2\\n6 0\\n\",\n    \"YES\\n0 0\\n0 7\\n31 0\\n\",\n    \"YES\\n0 0\\n0 1\\n1 0\\n\",\n    \"YES\\n0 0\\n0 20449\\n50 0\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1030/D",
  "starter_code": ""
}