{
  "task_id": "APPS/549",
  "problem_id": 549,
  "prompt": "A big company decided to launch a new series of rectangular displays, and decided that the display must have exactly n pixels. \n\nYour task is to determine the size of the rectangular display \u2014 the number of lines (rows) of pixels a and the number of columns of pixels b, so that:\n\n  there are exactly n pixels on the display;  the number of rows does not exceed the number of columns, it means a \u2264 b;  the difference b - a is as small as possible. \n\n\n-----Input-----\n\nThe first line contains the positive integer n (1 \u2264 n \u2264 10^6)\u00a0\u2014 the number of pixels display should have.\n\n\n-----Output-----\n\nPrint two integers\u00a0\u2014 the number of rows and columns on the display. \n\n\n-----Examples-----\nInput\n8\n\nOutput\n2 4\n\nInput\n64\n\nOutput\n8 8\n\nInput\n5\n\nOutput\n1 5\n\nInput\n999999\n\nOutput\n999 1001\n\n\n\n-----Note-----\n\nIn the first example the minimum possible difference equals 2, so on the display should be 2 rows of 4 pixels.\n\nIn the second example the minimum possible difference equals 0, so on the display should be 8 rows of 8 pixels.\n\nIn the third example the minimum possible difference equals 4, so on the display should be 1 row of 5 pixels.",
  "solutions": "[\"\\nimport sys\\n#sys.stdin=open(\\\"data.txt\\\")\\ninput=sys.stdin.readline\\n\\nn=int(input())\\n\\nfor a in range(1,n+1)[::-1]:\\n    if n%a: continue\\n    if a>n//a: continue\\n    print(\\\"%s %s\\\"%(a,n//a))\\n    break\", \"n = int(input())\\n\\na = 1\\nb = n\\n\\nfor i in range(2, int(n**.5)+1):\\n    if n % i == 0:\\n        a = i\\n        b = n//i\\n\\nprint(a,b)\\n\", \"n = int(input())\\nrowres = 1\\nfor row in range(1, n + 1):\\n\\tif n % row == 0:\\n\\t\\tcol = n // row\\n\\t\\tif row <= col:\\n\\t\\t\\trowres = row\\nprint(rowres, n // rowres)\", \"#!/usr/bin/env python3\\n\\ndef main():\\n    import math\\n\\n    try:\\n        while True:\\n            n = int(input())\\n            x = int(math.sqrt(n))\\n            while n % x:\\n                x -= 1\\n            print(x, n // x)\\n\\n    except EOFError:\\n        pass\\n\\nmain()\\n\", \"n = int(input())\\ntop = 0\\n\\nfor i in range(1, int(n**(1/2))+1):\\n    if n % i == 0:\\n        top = max((top, i))\\n\\nprint(top, n//top)\\n\", \"from math import sqrt, ceil\\nn = int(input())\\na = ceil(sqrt(n))\\nfor i in range(a, n+1):\\n\\tif n%i == 0:\\n\\t\\tprint(n//i, i)\\n\\t\\treturn\\n\\t\\t\\n\", \"x = int(input())\\nxd=[]\\nfor i in range(1, x+1):\\n    if (x%i == 0 and i <= x/i):\\n        xd.append([i, x//i])\\n    \\nxd.sort(key = lambda x:x[1]-x[0])\\nprint(xd[0][0], xd[0][1]);\", \"def dl(n):\\n    ret = 0\\n    i = 1\\n    while (i * i <= n):\\n        if (n % i == 0):\\n            ret = i\\n        i += 1\\n    return ret\\n\\n\\nn = int(input())\\nkek1 = dl(n)\\nkek2 = n // kek1\\nprint(kek1, kek2)\", \"import math\\nn = int(input())\\nk = math.floor(n ** 0.5)\\ncounter = 2\\nmd = 1\\nwhile counter <= k:\\n    if n % counter == 0:\\n        md = counter\\n    counter += 1\\nprint(md, n // md)\\n\", \"n = int(input())\\n\\na, b = -1, -1\\nfor i in range(1, n+1):\\n    if n % i == 0:\\n        if i > n//i:\\n            break\\n        a, b = i, n//i\\nprint(a, b)\\n\", \"import math\\nn = int(input())\\naupper = int(math.sqrt(n))\\nfor a in range(aupper,0,-1):\\n    if n%a == 0:\\n        print(a,int(n/a))\\n        break\", \"n = int(input())\\n\\ni = 1\\n\\nr = 1, n\\n\\nwhile i*i <= n:\\n\\tif n%i == 0:\\n\\t\\tr = i, n//i\\n\\ti+=1\\n\\nprint(r[0], r[1])\", \"n = int(input())\\nbest = (n, 1)\\nfor i in range(1, int(n ** 0.5 + 1)):\\n    if n %i == 0 and abs(n // i -  i) < abs(best[0] - best[1]):\\n        best = (n // i, i)\\nprint(*sorted(best))\", \"#!python\\n\\nn = int(input())\\n\\nm = n - 1\\nii = 1\\nfor i in range(1, int((n+2)/2)):\\n    if n%i == 0:\\n        if m > abs(i - n/i):\\n            ii = i\\n            m = abs(i - n/i)\\n\\njj = int(n/ii)\\n\\na, b = min(ii, jj), max(ii, jj)\\nprint(a, b)\", \"import math\\n\\nn = int(input())\\n\\nfor i in range(1, int(math.sqrt(n)) + 1):\\n    if not (n % i):\\n        ans = [i, n // i]\\n\\nprint(ans[0], ans[1])\", \"import math\\n\\ndef displaysize(n):\\n    s = int(math.floor(math.sqrt(n)))  \\n    while n % s != 0:\\n        s -= 1\\n    return (s,n//s)\\n\\ndef __starting_point():\\n    i = int(input())\\n    a,b = displaysize(i)\\n    print(str(a) + \\\"   \\\" + str(b))\\n\\n\\n__starting_point()\", \"import math\\nn = int(input())\\nfor i in range(round(math.sqrt(n)), 0, -1):\\n    if n%i == 0:\\n        cols = n//i\\n        break\\nprint(n//(n//i), end = ' ')\\nprint(n//i)\\n\", \"import math\\n\\nsize = int(input())\\n\\nsml = 1\\n\\nfor i in range(math.floor(math.sqrt(size)), 1, -1):\\n\\tif size % i == 0:\\n\\t\\tsml = i\\n\\t\\tbreak\\n\\nprint(\\\"{0} {1}\\\".format(sml, size//sml))\", \"n = int(input())\\nmin_sum, a, b = n, 0, 0\\nfor i in range(1, int(n ** (1/2) + 1)):\\n    if not n % i and min_sum > abs(i - (n // i)):\\n        a, b = i, n // i\\n        min_sum = abs(a - b)\\n\\nprint(a , b)\\n\", \"n = int(input())\\n\\nfor i in range(1,int(n ** .5) + 1):\\n    if n % i == 0:\\n        a = i\\nprint(a,n // a)\", \"n=int(input())\\nb=int(n**0.5)\\nf=True\\nfor i in range(b,1,-1):\\n    if n%i==0:\\n        print(min(n//i,i),max(n//i,i))\\n        f=False\\n        break\\nif f:\\n    print(1,n)\\n\", \"n = int(input().strip())\\nimport math\\nfor i in range(1, int(1+math.sqrt(n))):\\n    if n%i == 0:\\n        p = i\\np = min(p, n/p)\\nn = n//p\\nprint(p, n)\\n\", \"# python3\\nimport math\\n\\ndef solve():\\n    n=int(input())\\n    m = int(math.sqrt(n))\\n    while n % m != 0:\\n        m-=1\\n\\n    return str(m)+\\\" \\\"+ str(int(n/m))\\n    \\nprint(solve())\\n\", \"import math\\n\\nn = int(input())\\nlim = int(math.sqrt(n))\\n\\nfor a in range(lim, 0, -1):\\n    b = n/a\\n    if b == int(b):\\n        print(a, int(b))\\n        break\\n\\n\", \"def problem(n):\\n    b=[]\\n    b=[x for x in range(1, n+1) if n % x == 0]\\n    return b[len(b)//2]\\n    \\na=int(input())\\nc=problem(a)\\nprint(a//c,c)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"8\\n\",\n    \"64\\n\",\n    \"5\\n\",\n    \"999999\\n\",\n    \"716539\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"10\\n\",\n    \"11\\n\",\n    \"12\\n\",\n    \"15\\n\",\n    \"100\\n\",\n    \"101\\n\",\n    \"169\\n\",\n    \"179\\n\",\n    \"190\\n\",\n    \"1000\\n\",\n    \"10000\\n\",\n    \"10001\\n\",\n    \"100000\\n\",\n    \"100001\\n\",\n    \"1000000\\n\",\n    \"999983\\n\",\n    \"524288\\n\",\n    \"954493\\n\",\n    \"966289\\n\",\n    \"944663\\n\",\n    \"912673\\n\",\n    \"732641\\n\",\n    \"232897\\n\",\n    \"16807\\n\",\n    \"999958\\n\",\n    \"990151\\n\",\n    \"997002\\n\",\n    \"20\\n\",\n    \"20261\\n\",\n    \"999123\\n\",\n    \"901841\\n\"\n  ],\n  \"outputs\": [\n    \"2 4\\n\",\n    \"8 8\\n\",\n    \"1 5\\n\",\n    \"999 1001\\n\",\n    \"97 7387\\n\",\n    \"1 1\\n\",\n    \"1 2\\n\",\n    \"1 3\\n\",\n    \"2 2\\n\",\n    \"2 3\\n\",\n    \"1 7\\n\",\n    \"3 3\\n\",\n    \"2 5\\n\",\n    \"1 11\\n\",\n    \"3 4\\n\",\n    \"3 5\\n\",\n    \"10 10\\n\",\n    \"1 101\\n\",\n    \"13 13\\n\",\n    \"1 179\\n\",\n    \"10 19\\n\",\n    \"25 40\\n\",\n    \"100 100\\n\",\n    \"73 137\\n\",\n    \"250 400\\n\",\n    \"11 9091\\n\",\n    \"1000 1000\\n\",\n    \"1 999983\\n\",\n    \"512 1024\\n\",\n    \"971 983\\n\",\n    \"983 983\\n\",\n    \"961 983\\n\",\n    \"97 9409\\n\",\n    \"679 1079\\n\",\n    \"343 679\\n\",\n    \"49 343\\n\",\n    \"2 499979\\n\",\n    \"1 990151\\n\",\n    \"998 999\\n\",\n    \"4 5\\n\",\n    \"1 20261\\n\",\n    \"3 333041\\n\",\n    \"1 901841\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/747/A",
  "starter_code": ""
}