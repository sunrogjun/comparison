{
  "task_id": "APPS/306",
  "problem_id": 306,
  "prompt": "Given an integer $x$. Your task is to find out how many positive integers $n$ ($1 \\leq n \\leq x$) satisfy $$n \\cdot a^n \\equiv b \\quad (\\textrm{mod}\\;p),$$ where $a, b, p$ are all known constants.\n\n\n-----Input-----\n\nThe only line contains four integers $a,b,p,x$ ($2 \\leq p \\leq 10^6+3$, $1 \\leq a,b < p$, $1 \\leq x \\leq 10^{12}$). It is guaranteed that $p$ is a prime.\n\n\n-----Output-----\n\nPrint a single integer: the number of possible answers $n$.\n\n\n-----Examples-----\nInput\n2 3 5 8\n\nOutput\n2\n\nInput\n4 6 7 13\n\nOutput\n1\n\nInput\n233 233 10007 1\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample, we can see that $n=2$ and $n=8$ are possible answers.",
  "solutions": "[\"a, b, p, x = [int(x) for x in input().split()]\\n\\npowers = [a]\\n\\nwhile powers[-1] != 1:\\n    powers.append(powers[-1] * a % p)\\n    \\norder = len(powers)\\npowers = [powers[-1]] + powers\\n\\ninverse = pow(order, p-2, p)\\n\\ndef f(sol):\\n    return (x // (p * order)) + (1 if sol <= x % (p * order) else 0)\\n\\ndef chinese(a, n, b, m):\\n    k = inverse * (b - a + m) % m\\n    x = k * n + a\\n    return x % (n * m)\\n\\nres = 0\\nfor i in range(len(powers)-1):\\n    inv = powers[order - i]\\n    val = inv * b % p\\n    \\n    sol = chinese(i, order, val, p)\\n    \\n    res += f(sol)\\n    \\nprint(res)\\n\", \"a,b,p,x = list(map(int, input().strip().split()))\\n\\n\\ndef brute(a,b,p,x):\\n    for n in range(1, x+1):\\n        if (n*pow(a,n,p)) % p == b:\\n            print(n)\\n\\n#brute(a,b,p,x)\\n\\nsols = 0\\n\\ninva = pow(a,p-2,p)\\n\\n##print('a', inva)\\n\\na2 = 1\\nb2 = b\\ns = 0\\nd1 = -b\\nfac = p*(p-1)\\nwhile s < p-1:\\n    k = (d1 + s) % p\\n    u = k\\n    L = x - s - (p-1)*k\\n    sols += L//fac + 1\\n##    while (p-1)*u + s <= x:\\n##        n = (p-1)*u + s\\n##        print(s, k, n)\\n##        print(n)\\n##        #print(n*pow(a,n,p) % p, b)\\n##        sols += 1\\n##        u += p\\n    d1 = (d1 * inva) % p\\n    s += 1\\n\\nprint(sols)\\n        \\n\\n        \\n    \\n\\n\", \"a, b, p, x = list(map(int, input().split()))\\nans = 0\\nainv = 1\\nfor i in range(p - 2):\\n    ainv = (ainv * a) % p\\nrem = 1\\ninv = 1\\nlcm = p * (p - 1)\\nfor n in range(1, p):\\n    rem = (rem * a) % p\\n    inv = (inv * ainv) % p\\n    i0 = min(p, ((n * rem - b) * inv + p) % p)\\n    n0 = n + i0 * (p - 1)\\n    ans += max(0, (x - n0 + lcm) // lcm)\\nprint(ans)\\n\", \"# -*- coding: utf - 8 -*-\\n\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\n|    author: mr.math - Hakimov Rahimjon     |\\n|    e-mail: mr.math0777@gmail.com          |\\n|    created: 04.02.2018 13:31              |\\n\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\n# inp = open(\\\"input.txt\\\", \\\"r\\\"); input = inp.readline; out = open(\\\"output.txt\\\", \\\"w\\\"); print = out.write\\nTN = 1\\n\\n\\n# ===========================================\\n\\n\\ndef solution():\\n    a, b, p, x = list(map(int, input().split()))\\n    ans = 0\\n    ainv = 1\\n    for i in range(p - 2):\\n        ainv = (ainv * a) % p\\n    rem = 1\\n    inv = 1\\n    lcm = p * (p - 1)\\n    for n in range(1, p):\\n        rem = (rem * a) % p\\n        inv = (inv * ainv) % p\\n        i0 = min(p, ((n * rem - b) * inv + p) % p)\\n        n0 = n + i0 * (p - 1)\\n        ans += max(0, (x - n0 + lcm) // lcm)\\n    print(ans)\\n\\n\\n# ===========================================\\nwhile TN != 0:\\n    solution()\\n    TN -= 1\\n# ===========================================\\n# inp.close()\\n# out.close()\\n\", \"# -*- coding: utf - 8 -*-\\n\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\n|    author: mr.math - Hakimov Rahimjon     |\\n|    e-mail: mr.math0777@gmail.com          |\\n|    created: 04.02.2018 13:31              |\\n\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\n# inp = open(\\\"input.txt\\\", \\\"r\\\"); input = inp.readline; out = open(\\\"output.txt\\\", \\\"w\\\"); print = out.write\\nTN = 1\\n\\n\\n# ===========================================\\n\\n\\ndef solution():\\n    a, b, p, x = list(map(int, input().split()))\\n    ans = 0\\n    ainv = 1\\n    for i in range(p - 2):\\n        ainv = (ainv * a) % p\\n    rem = 1\\n    inv = 1\\n    lcm = p * (p - 1)\\n    for n in range(1, p):\\n        rem = (rem * a) % p\\n        inv = (inv * ainv) % p\\n        i0 = min(p, ((n * rem - b) * inv + p) % p)\\n        n0 = n + i0 * (p - 1)\\n        ans += max(0, (x - n0 + lcm) // lcm)\\n    print(ans)\\n\\n\\n# ===========================================\\nwhile TN != 0:\\n    solution()\\n    TN -= 1\\n# ===========================================\\n# inp.close()\\n# out.close()\\n\", \"a,b,p,x = [int(x) for x in input().split()]\\n\\nainv = pow(a,p-2,p)\\n\\ncount = 0\\n\\nn = 1\\nexp = ainv*b%p\\nwhile n<p:\\n    m = n\\n    if exp>n:\\n        m += (n+p-exp)*(p-1)\\n    else:\\n        m += (n-exp)*(p-1)\\n    \\n    if m<=x: count += 1 + (x-m)//(p*(p-1))\\n    \\n    n += 1\\n    exp = (exp*ainv)%p\\n\\nprint(count)\", \"def congr(a, b, p, x):\\n    solutions = 0\\n    power = pow(a, p - 2, p)\\n    a2, b2, s, d1 = 1, b, 0, -b\\n    prod = p * (p - 1)\\n    while s < p - 1:\\n        k = (d1 + s) % p\\n        L = x - s - (p - 1) * k\\n        solutions += L // prod + 1\\n        d1 = (d1 * power) % p\\n        s += 1\\n    return solutions\\n\\n\\na, b, p, x = [int(j) for j in input().split()]\\nprint(congr(a, b, p, x))\\n\", \"def AC():\\n    a, b, p, x = map(int, input().split())\\n    ans = 0\\n    m = 1\\n    for i in range(p - 2):\\n        m = (m * a) % p\\n    rem = 1\\n    inv = 1\\n    Ch = p * (p - 1)\\n    for n in range(1, p):\\n        rem = (rem * a) % p\\n        inv = (inv * m) % p\\n        cur = min(p, ((n * rem - b) * inv + p) % p)\\n        rep = n + cur * (p - 1)\\n        ans += max(0, (x - rep + Ch) // Ch)\\n    print(ans)\\nAC()\", \"import sys\\n\\ndef calc(a, b, p, x):\\n    ans = 0\\n    power = pow(a, p - 2, p)\\n    a2, b2, s, d1 = 1, b, 0, -b\\n    prod = p * (p - 1)\\n    while s < p - 1:\\n        k = (d1 + s) % p\\n        L = x - s - (p - 1) * k\\n        ans += L // prod + 1\\n        d1 = (d1 * power) % p\\n        s += 1\\n    return str(ans)\\n \\n \\na, b, p, x = list(map(int,sys.stdin.readline().split()))\\nsys.stdout.write(calc(a, b, p, x))\\n\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2 3 5 8\\n\",\n    \"4 6 7 13\\n\",\n    \"233 233 10007 1\\n\",\n    \"338792 190248 339821 152634074578\\n\",\n    \"629260 663548 739463 321804928248\\n\",\n    \"656229 20757 818339 523535590429\\n\",\n    \"1000002 1000002 1000003 1000000000000\\n\",\n    \"345 2746 1000003 5000000\\n\",\n    \"802942 824238 836833 605503824329\\n\",\n    \"1 1 2 880336470888\\n\",\n    \"2 2 3 291982585081\\n\",\n    \"699601 39672 1000003 391631540387\\n\",\n    \"9 1 11 792412106895\\n\",\n    \"85 535 541 680776274925\\n\",\n    \"3153 4504 7919 903755230811\\n\",\n    \"10021 18448 20719 509684975746\\n\",\n    \"66634 64950 66889 215112576953\\n\",\n    \"585128 179390 836839 556227387547\\n\",\n    \"299973 381004 1000003 140225320941\\n\",\n    \"941641 359143 1000003 851964325687\\n\",\n    \"500719 741769 1000003 596263138944\\n\",\n    \"142385 83099 1000003 308002143690\\n\",\n    \"891986 300056 999983 445202944465\\n\",\n    \"620328 378284 999983 189501757723\\n\",\n    \"524578 993938 999979 535629124351\\n\",\n    \"419620 683571 999979 243073161801\\n\",\n    \"339138 549930 999883 962863668031\\n\",\n    \"981603 635385 999233 143056117417\\n\",\n    \"416133 340425 998561 195227456237\\n\",\n    \"603835 578057 996323 932597132292\\n\",\n    \"997998 999323 1000003 999968459613\\n\",\n    \"997642 996418 999983 999997055535\\n\",\n    \"812415 818711 820231 999990437063\\n\",\n    \"994574 993183 1000003 999974679059\\n\",\n    \"999183 998981 999979 999970875649\\n\",\n    \"1 1 2 1\\n\",\n    \"699601 39672 1000003 1\\n\",\n    \"4 1 5 15\\n\",\n    \"912896 91931 999983 236754\\n\",\n    \"154814 35966 269041 1234567\\n\",\n    \"1 2 5 470854713201\\n\",\n    \"3 27 29 968042258975\\n\",\n    \"473 392 541 108827666667\\n\",\n    \"8 27 29 193012366642\\n\",\n    \"1302 504 1987 842777827450\\n\",\n    \"693528 398514 1000003 1000000000000\\n\",\n    \"533806 514846 1000003 999999999999\\n\",\n    \"812509 699256 1000003 999999999999\\n\",\n    \"28361 465012 1000003 1000000000000\\n\",\n    \"28361 465012 1000003 12693229\\n\",\n    \"28361 465012 1000003 13271836\\n\",\n    \"28361 465012 1000003 13271835\\n\",\n    \"28361 465012 1000003 13421000\\n\",\n    \"28361 465012 1000003 19609900\\n\",\n    \"28361 465012 1000003 12693228\\n\",\n    \"1 1 2 1000000000000\\n\",\n    \"1 1000002 1000003 1000000000000\\n\",\n    \"1 44444 1000003 999999999998\\n\",\n    \"2 1000002 1000003 1000000000000\\n\",\n    \"2 23333 1000003 1000000000000\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"449263\\n\",\n    \"434818\\n\",\n    \"639482\\n\",\n    \"999998\\n\",\n    \"4\\n\",\n    \"723664\\n\",\n    \"440168235444\\n\",\n    \"97327528361\\n\",\n    \"391905\\n\",\n    \"72037464262\\n\",\n    \"1258366493\\n\",\n    \"114124839\\n\",\n    \"24599907\\n\",\n    \"3215965\\n\",\n    \"664796\\n\",\n    \"140481\\n\",\n    \"851984\\n\",\n    \"596056\\n\",\n    \"307937\\n\",\n    \"445451\\n\",\n    \"189574\\n\",\n    \"535377\\n\",\n    \"243611\\n\",\n    \"962803\\n\",\n    \"143126\\n\",\n    \"195090\\n\",\n    \"936103\\n\",\n    \"999964\\n\",\n    \"1000007\\n\",\n    \"1219017\\n\",\n    \"999965\\n\",\n    \"999996\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"94170942640\\n\",\n    \"33380767549\\n\",\n    \"201160200\\n\",\n    \"6655598851\\n\",\n    \"424145863\\n\",\n    \"999995\\n\",\n    \"999997\\n\",\n    \"999997\\n\",\n    \"999996\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"500000000000\\n\",\n    \"999997\\n\",\n    \"999997\\n\",\n    \"1000001\\n\",\n    \"999999\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/919/E",
  "starter_code": ""
}