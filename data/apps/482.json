{
  "task_id": "APPS/482",
  "problem_id": 482,
  "prompt": "Innokentiy decides to change the password in the social net \"Contact!\", but he is too lazy to invent a new password by himself. That is why he needs your help. \n\nInnokentiy decides that new password should satisfy the following conditions:  the length of the password must be equal to n,  the password should consist only of lowercase Latin letters,  the number of distinct symbols in the password must be equal to k,  any two consecutive symbols in the password must be distinct. \n\nYour task is to help Innokentiy and to invent a new password which will satisfy all given conditions. \n\n\n-----Input-----\n\nThe first line contains two positive integers n and k (2 \u2264 n \u2264 100, 2 \u2264 k \u2264 min(n, 26)) \u2014 the length of the password and the number of distinct symbols in it. \n\nPay attention that a desired new password always exists.\n\n\n-----Output-----\n\nPrint any password which satisfies all conditions given by Innokentiy.\n\n\n-----Examples-----\nInput\n4 3\n\nOutput\njava\n\nInput\n6 6\n\nOutput\npython\n\nInput\n5 2\n\nOutput\nphphp\n\n\n\n-----Note-----\n\nIn the first test there is one of the appropriate new passwords \u2014 java, because its length is equal to 4 and 3 distinct lowercase letters a, j and v are used in it.\n\nIn the second test there is one of the appropriate new passwords \u2014 python, because its length is equal to 6 and it consists of 6 distinct lowercase letters.\n\nIn the third test there is one of the appropriate new passwords \u2014 phphp, because its length is equal to 5 and 2 distinct lowercase letters p and h are used in it.\n\nPay attention the condition that no two identical symbols are consecutive is correct for all appropriate passwords in tests.",
  "solutions": "[\"n, k = map(int, input().split())\\nprint(('abcdefghijklmnopqrstuvwxyz'[:k] * n)[:n])\", \"n, k = input().split()\\nn, k = int(n), int(k)\\ns = []\\nfor i in range(n):\\n\\ts.append(chr((i % k + ord('a'))))\\nprint(''.join(s))\", \"n, k = map(int, input().split())\\nconst = ''\\nans = ''\\nfor i in range(k):\\n    const += chr(i + 97)\\nans = (n // k) * const\\nans += const[:n % k]\\nprint(ans)\", \"import string\\n\\nn, k = map(int, input().split())\\n\\nsymbs = []\\nletters = string.ascii_lowercase[:k]\\nlast = 0\\nfor i in range(n):\\n\\tsymbs.append(letters[last])\\n\\tlast+=1\\n\\tif last==k:\\n\\t\\tlast = 0\\nprint(''.join(symbs))\", \"import string\\n\\nn, k = (int(i) for i in input().split())\\nstr = string.ascii_lowercase[:k]\\n\\nans = str * (n // k) + str[:(n % k)]\\n\\nprint(ans)\\n\", \"#This code is dedicated to Olya S.\\n\\npassword=''\\nn,k=list(map(int,input().split()))\\nalph=[chr(i) for i in range(97,97+k)]\\n\\nfor i in range(n):\\n    password+=alph[i%k]\\n\\nprint(password)\\n    \\n\\n\", \"(lambda n, k: print(*([chr(i + ord('a')) for i in range(k)] * (n // k + 1))[:n], sep=''))(*map(int, input().split()))\", \"n, k = map(int, input().split())\\n\\nabc = 'abcdefghijklmnopqrstuvwxyz'\\n\\nfor i in range(n):\\n\\tprint(abc[i % k], end = '')\\n\\nprint()\\n\", \"n, k = list(map(int, input().split()))\\ns = []\\nl = \\\"\\\"\\nfor i in range(k):\\n    s.append(chr(97 + i))\\nfor i in range(len(s)):\\n    l += s[i]\\nfor i in range(n//k):\\n    print(l,end='')\\nfor i in range(n%k):\\n    print(s[i],end='')\", \"\\\"\\\"\\\" Created by Shahen Kosyan on 3/11/17 \\\"\\\"\\\"\\n\\ndef __starting_point():\\n    n, k = [int(x) for x in input().split()]\\n    kc = k\\n\\n    alphabet = 'abcdefghijklmnopqrstuvwxyz'\\n    alphabet = list(alphabet)\\n    password = ''\\n\\n    i = 0\\n    while kc > 0:\\n        password += alphabet[i]\\n        kc -= 1\\n        i += 1\\n\\n    i = 0\\n    while len(password) < n:\\n        if i == k:\\n            i = 0\\n        password += password[i]\\n        i += 1\\n\\n    print(password)\\n\\n__starting_point()\", \"n, k = list(map(int, input().split()))\\ns = 'abcdefghijklmnopqrstuvwxyz'\\nres = \\\"\\\"\\nfor i in range(n):\\n    res += s[i%k]\\n\\nprint(res)\\n\", \"import string\\n\\nalphabet = string.ascii_lowercase\\n\\nn, k = map(int, input().split())\\n\\nle = min(k, 26)\\n\\nindex = 0\\nresult = ''\\n\\nfor i in range(1, n+1):\\n    result+=alphabet[int(index)]\\n    index+=1\\n    if index >= k:\\n        index = 0\\nprint(result)\", \"n,k=[int(c) for c in input().split(' ')]\\naCode=ord('a')\\npasswd,temp='',''\\nfor i in range(0,k):\\n    temp+=chr(aCode+i)\\ncount=n//k\\nrest=n%k\\npasswd=temp*count\\nif rest>0:\\n    passwd+=temp[:rest]\\nprint(passwd)\", \"n,k = map(int, input().split()) \\ns = '' \\nx = n // k \\ny = n % k \\nfor i in range(x): \\n    for j in range(k): \\n        p = str(chr(97 + j)) \\n        s = s + p \\nfor i in range(y): \\n    p = str(chr(97 + i)) \\n    s = s + p \\nprint(s)\", \"a,b = map(int, input(). split())\\nA=['a','b', 'c', 'd', 'e', 'f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\\nif a==b:\\n    for i in range(a):\\n        print(A[i],end='')\\nelse:\\n    while a>=b:\\n        for i in range(b):\\n            print(A[i],end='')\\n        a=a-b\\n    for j in range(a):\\n        print(A[j],end='')\\n\", \"nk=input().split()\\nn=int(nk[0])\\nk=int(nk[1])\\npassword=''\\ni=0\\nj=0\\nfor i in range(n):\\n    if j<k:\\n        password=password+chr(97+j)\\n        j+=1\\n    else:\\n        j=0\\n        password=password+chr(97+j)\\n        j+=1\\nprint(password)\\n\", \"n,k=list(map(int, input().split()))\\nchars=['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\\nuse_chars=chars[:k]\\npassword=\\\" \\\"\\nx=0\\nfor char_i in range(1,n+1):\\n    current_char=use_chars[x]\\n    if password[char_i-1] == current_char:\\n        current_char=use_chars[x]\\n    if x+1 == k:\\n        x=0\\n    else:\\n        x+=1\\n    password+=current_char\\nprint(password[1:])\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4 3\\n\",\n    \"6 6\\n\",\n    \"5 2\\n\",\n    \"3 2\\n\",\n    \"10 2\\n\",\n    \"26 13\\n\",\n    \"100 2\\n\",\n    \"100 10\\n\",\n    \"3 3\\n\",\n    \"6 3\\n\",\n    \"10 3\\n\",\n    \"50 3\\n\",\n    \"90 2\\n\",\n    \"6 2\\n\",\n    \"99 3\\n\",\n    \"4 2\\n\",\n    \"100 3\\n\",\n    \"40 22\\n\",\n    \"13 8\\n\",\n    \"16 15\\n\",\n    \"17 17\\n\",\n    \"19 4\\n\",\n    \"100 26\\n\",\n    \"100 25\\n\",\n    \"26 26\\n\",\n    \"27 26\\n\",\n    \"2 2\\n\",\n    \"26 25\\n\",\n    \"99 2\\n\",\n    \"99 26\\n\",\n    \"4 4\\n\",\n    \"5 3\\n\",\n    \"5 4\\n\",\n    \"5 5\\n\",\n    \"24 22\\n\",\n    \"26 14\\n\",\n    \"26 15\\n\",\n    \"30 12\\n\",\n    \"35 4\\n\",\n    \"79 3\\n\",\n    \"79 14\\n\",\n    \"85 13\\n\",\n    \"90 25\\n\",\n    \"90 19\\n\",\n    \"26 24\\n\",\n    \"100 17\\n\",\n    \"26 2\\n\"\n  ],\n  \"outputs\": [\n    \"abca\\n\",\n    \"abcdef\\n\",\n    \"ababa\\n\",\n    \"aba\\n\",\n    \"ababababab\\n\",\n    \"abcdefghijklmabcdefghijklm\\n\",\n    \"abababababababababababababababababababababababababababababababababababababababababababababababababab\\n\",\n    \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\\n\",\n    \"abc\\n\",\n    \"abcabc\\n\",\n    \"abcabcabca\\n\",\n    \"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcab\\n\",\n    \"ababababababababababababababababababababababababababababababababababababababababababababab\\n\",\n    \"ababab\\n\",\n    \"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc\\n\",\n    \"abab\\n\",\n    \"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabca\\n\",\n    \"abcdefghijklmnopqrstuvabcdefghijklmnopqr\\n\",\n    \"abcdefghabcde\\n\",\n    \"abcdefghijklmnoa\\n\",\n    \"abcdefghijklmnopq\\n\",\n    \"abcdabcdabcdabcdabc\\n\",\n    \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuv\\n\",\n    \"abcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxy\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyza\\n\",\n    \"ab\\n\",\n    \"abcdefghijklmnopqrstuvwxya\\n\",\n    \"abababababababababababababababababababababababababababababababababababababababababababababababababa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstu\\n\",\n    \"abcd\\n\",\n    \"abcab\\n\",\n    \"abcda\\n\",\n    \"abcde\\n\",\n    \"abcdefghijklmnopqrstuvab\\n\",\n    \"abcdefghijklmnabcdefghijkl\\n\",\n    \"abcdefghijklmnoabcdefghijk\\n\",\n    \"abcdefghijklabcdefghijklabcdef\\n\",\n    \"abcdabcdabcdabcdabcdabcdabcdabcdabc\\n\",\n    \"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabca\\n\",\n    \"abcdefghijklmnabcdefghijklmnabcdefghijklmnabcdefghijklmnabcdefghijklmnabcdefghi\\n\",\n    \"abcdefghijklmabcdefghijklmabcdefghijklmabcdefghijklmabcdefghijklmabcdefghijklmabcdefg\\n\",\n    \"abcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyabcdefghijklmno\\n\",\n    \"abcdefghijklmnopqrsabcdefghijklmnopqrsabcdefghijklmnopqrsabcdefghijklmnopqrsabcdefghijklmn\\n\",\n    \"abcdefghijklmnopqrstuvwxab\\n\",\n    \"abcdefghijklmnopqabcdefghijklmnopqabcdefghijklmnopqabcdefghijklmnopqabcdefghijklmnopqabcdefghijklmno\\n\",\n    \"ababababababababababababab\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/770/A",
  "starter_code": ""
}