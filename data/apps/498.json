{
  "task_id": "APPS/498",
  "problem_id": 498,
  "prompt": "Santa Claus is the first who came to the Christmas Olympiad, and he is going to be the first to take his place at a desk! In the classroom there are n lanes of m desks each, and there are two working places at each of the desks. The lanes are numbered from 1 to n from the left to the right, the desks in a lane are numbered from 1 to m starting from the blackboard. Note that the lanes go perpendicularly to the blackboard, not along it (see picture).\n\nThe organizers numbered all the working places from 1 to 2nm. The places are numbered by lanes (i.\u00a0e. all the places of the first lane go first, then all the places of the second lane, and so on), in a lane the places are numbered starting from the nearest to the blackboard (i.\u00a0e. from the first desk in the lane), at each desk, the place on the left is numbered before the place on the right. [Image] The picture illustrates the first and the second samples. \n\nSanta Clause knows that his place has number k. Help him to determine at which lane at which desk he should sit, and whether his place is on the left or on the right!\n\n\n-----Input-----\n\nThe only line contains three integers n, m and k (1 \u2264 n, m \u2264 10 000, 1 \u2264 k \u2264 2nm)\u00a0\u2014 the number of lanes, the number of desks in each lane and the number of Santa Claus' place.\n\n\n-----Output-----\n\nPrint two integers: the number of lane r, the number of desk d, and a character s, which stands for the side of the desk Santa Claus. The character s should be \"L\", if Santa Clause should sit on the left, and \"R\" if his place is on the right.\n\n\n-----Examples-----\nInput\n4 3 9\n\nOutput\n2 2 L\n\nInput\n4 3 24\n\nOutput\n4 3 R\n\nInput\n2 4 4\n\nOutput\n1 2 R\n\n\n\n-----Note-----\n\nThe first and the second samples are shown on the picture. The green place corresponds to Santa Claus' place in the first example, the blue place corresponds to Santa Claus' place in the second example.\n\nIn the third sample there are two lanes with four desks in each, and Santa Claus has the fourth place. Thus, his place is in the first lane at the second desk on the right.",
  "solutions": "[\"n, m, k = list(map(int, input().split()))\\nprint((k - 1) // (2 * m) + 1, end=\\\" \\\")\\nprint((k - 1) % (2 * m) // 2 + 1, end=\\\" \\\")\\nif ((k - 1) % (2 * m) % 2 == 0):\\n    print(\\\"L\\\")\\nelse:\\n    print(\\\"R\\\")\\n\", \"n, m, k = map(int, input().split())\\n\\nk -= 1\\n\\nprint(k // (2 * m) + 1, (k % (2 * m)) // 2 + 1, 'L' if k % 2 == 0 else 'R')\", \"n, m, k = map(int, input().split()) \\nk -= 1\\nprint(k // (m + m) + 1, (k % (m + m)) // 2 + 1, 'LR'[k % 2])\", \"n, m, k = list(map(int, input().split()))\\nrad = (k - 1) // (2 * m) + 1\\nparta = ((k - 1) % (2 * m)) // 2 + 1\\nif (k % 2) == 0:\\n    print(rad, parta, \\\"R\\\")\\nelse:\\n    print(rad, parta, \\\"L\\\")\\n\", \"import math\\nn, m, k = list(map(int, input().split()))\\nif k % 2 == 1:\\n    pos = \\\"L\\\"\\nelse:\\n    pos = \\\"R\\\"\\nr = math.ceil(k / (2 * m))\\nk -= (r - 1) * 2 * m\\nf = math.ceil(k / 2)\\nprint(r, f, pos)\\n\", \"n, m, k = map(int, input().split()) #4, 3\\n# # # #\\n# # # #\\n# # # #\\n\\npos = \\\"\\\"\\nif k % 2 == 0:\\n    pos = \\\"R\\\"\\nelse:\\n    pos = \\\"L\\\"\\nrad = (k - 1) // (2 * m) + 1\\nparta = ((k - (rad - 1) * 2 * m) + 1) // 2\\nprint(rad, parta, pos)\", \"n, m, k = map(int, input().split())\\n\\npl = ''\\nif k % 2 == 0:\\n    pl = 'R'\\nelse:\\n    pl = 'L'\\n\\nk = k // 2 + k % 2\\npart = k % m\\nrad = k // m + 1\\nif k % m == 0:\\n    rad -= 1\\nif part == 0:\\n    part = m\\n\\nprint(rad, part, pl)\", \"def get_place(rows, dpr, k):  # n=rows; m=dpr\\n    k -= 1\\n    dn = k // 2\\n    return (dn // dpr + 1, dn % dpr + 1, 'LR'[k % 2])\\n\\ndef m():\\n    print(*get_place(*list(map(int, input().split(' ')))))\\n\\ndef __starting_point():\\n    m()\\n\\n\\n__starting_point()\", \"r,p,n=map(int,input().split())\\nprint((n-1)//(p*2)+1,(n-1)%(p*2)//2+1,sep=' ',end=' ')\\nif n%2==0:print('R')\\nelse: print('L')\\n\", \"n, m , k = list(map(int, input().split()))\\nr = (k - 1) // (2 * m) + 1\\nd = ((k - 1) % (2 * m)) // 2 + 1\\nif k % 2 == 0:\\n    s = 'R'\\nelse:\\n    s = 'L'\\nprint(r, d, s)\\n\", \"q,w,e=list(map(int,input().split()))\\nif e%2==1:\\n    c='L'\\nelse:\\n    c='R'\\ne=(e+1)//2\\nx=e%w\\nif x==0:\\n    x=w\\nif e%w==0:\\n    z=e//w\\nelse:\\n    z=e//w+1\\nprint(z,x,c)\\n\", \"from math import ceil\\nn,m,k=[int(i) for i in input().split()]\\na=k%(2*m)\\nif a==0:\\n    a=2*m\\n\\nprint(ceil(k/(2*m)),(a+1)//2,'RL'[k%2])\\n\", \"N, M, K = list(map(int, input().split()))\\nrow_size = 2 * M\\nK -= 1\\nrow = K // row_size\\nK %= row_size\\nside = 'L' if K % 2 == 0 else 'R'\\nd = K // 2\\n\\nprint(row + 1, d + 1, side)\\n\", \"n,m,k =map(int,input().split())\\nper1 = (k-1)//(2*m)\\nprint(1+per1, end = ' ')\\nper2 = k - per1* (2*m)\\nprint(1 + (per2-1)//2, end = ' ')\\nif k % 2 == 0:\\n    print('R')\\nelse:\\n    print('L')\", \"n, m, k = map(int, input().split())\\nrow = (k + m * 2 - 1) // (m * 2)\\ntable = (k - ((m * 2) * (row - 1) + 1)) // 2 + 1\\nplace = ''\\nif k % 2 == 0:\\n    place = 'R'\\nelse:\\n    place = 'L'\\nprint(row, table, place)\", \"n, m, k = map(int, input().split())\\nprint((k - 1) // (2*m) + 1, end=\\\" \\\")\\nprint((k - 1) % (2*m) // 2 + 1, end=\\\" \\\")\\nif k % 2 == 1:\\n    print(\\\"L\\\")\\nelse:\\n    print(\\\"R\\\")\\n\", \"def kek(k):\\n    if k % 2:\\n        return 'L'\\n    else:\\n        return 'R'\\nn, m, k = list(map(int, input().split()))\\nnum_of_parta = (k - 1) // 2\\nr = num_of_parta // m + 1\\nd = num_of_parta % m + 1\\ns = kek(k)\\nprint(r, d, s)\\n\", \"def r():\\n\\treturn list(map(int, input().split()))\\nn, m, k = r()\\na = (k + 2 * m - 1) // (2 * m)\\nk -= (a - 1) * 2 * m\\nb = (k + 1) // 2\\nc = 'R' if k % 2 == 0 else 'L'\\nprint(a, b, c)\", \"n,m,k=[int(i) for i in input().split()]\\nryad=k//(2*m)+1\\nif k%(2*m)==0:\\n    ryad-=1\\nparta=(k-2*m*(ryad-1))//2+k%2\\nif k%2==0:\\n    mesto='R'\\nelse:\\n    mesto='L'\\nprint(ryad,parta,mesto)\", \"n, m, k = list(map(int, input().split()))\\n\\nr = -(-k // (2*m))\\nlr = ['R', 'L'][k%2]\\npos = k % (2*m) if k % (2*m) else 2*m\\nd = (pos+1) // 2\\n\\nprint(r, d, lr)\\n\", \"from math import *\\n\\nn, m, k = [int(x) for x in input().split()]\\ntmp1 = ceil(k / (2 * m))\\ntmp2 = k - (tmp1 - 1) * 2 * m\\ntmp3 = ceil(tmp2 / 2)\\nif k % 2 == 0:\\n    print(tmp1, tmp3, 'R')\\nelse:\\n    print(tmp1, tmp3, 'L')\", \"import math, sys\\n\\nfin = sys.stdin\\nfout = sys.stdout\\nn, m, x = list(map(int, fin.readline().split()))\\nr = math.ceil(x / (m * 2))\\nd = math.ceil((x - ((r - 1) * (m * 2))) / 2)\\ns = ''\\nif x % 2 == 1:\\n    s = 'L'\\nelse:\\n    s = 'R'\\nfout.write(str(r) + ' ' + str(d) + ' ' + str(s))\\n\", \"n, m, k = list(map(int, input().split()))\\nk2 = ((k - 1) // 2 + 1)\\nans2  =k2 % m\\nif ans2 == 0:\\n    ans2 = m\\nprint((k2 - 1) // m + 1, ans2, end=\\\" \\\")\\nif k % 2 == 1:\\n    print(\\\"L\\\")\\nelse:\\n    print(\\\"R\\\")\\n\", \"n, m, k = map(int, input().split())\\nprint((k - 1) // (2 * m) + 1, ((k - 1) % (2 * m) + 2) // 2, \\\"R\\\" if ((k - 1) % (2 * m) + 1) % 2 == 0 else \\\"L\\\")\", \"n, m, k = map(int, input().split())\\nt1 = 2 * m\\nps1 = (k - 1) // t1 + 1\\nps2 = (k % t1)\\nif ps2 == 0:\\n    ps2 = 2 * m\\nprint(ps1, (ps2 + ps2 % 2) // 2, (\\\"L\\\" if ps2 % 2 == 1 else \\\"R\\\"))\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4 3 9\\n\",\n    \"4 3 24\\n\",\n    \"2 4 4\\n\",\n    \"3 10 24\\n\",\n    \"10 3 59\\n\",\n    \"10000 10000 160845880\\n\",\n    \"1 1 1\\n\",\n    \"1 1 2\\n\",\n    \"1 10000 1\\n\",\n    \"1 10000 20000\\n\",\n    \"10000 1 1\\n\",\n    \"10000 1 10000\\n\",\n    \"10000 1 20000\\n\",\n    \"3 2 1\\n\",\n    \"3 2 2\\n\",\n    \"3 2 3\\n\",\n    \"3 2 4\\n\",\n    \"3 2 5\\n\",\n    \"3 2 6\\n\",\n    \"3 2 7\\n\",\n    \"3 2 8\\n\",\n    \"3 2 9\\n\",\n    \"3 2 10\\n\",\n    \"3 2 11\\n\",\n    \"3 2 12\\n\",\n    \"300 2000 1068628\\n\",\n    \"300 2000 584756\\n\",\n    \"300 2000 268181\\n\",\n    \"10000 9999 186450844\\n\",\n    \"10000 9999 197114268\\n\",\n    \"10000 9999 112390396\\n\",\n    \"10000 10000 1\\n\",\n    \"10000 10000 2\\n\",\n    \"10000 10000 100000001\\n\",\n    \"10000 10000 199999999\\n\",\n    \"10000 10000 200000000\\n\",\n    \"1 2 1\\n\",\n    \"1 2 2\\n\",\n    \"1 2 3\\n\",\n    \"1 2 4\\n\",\n    \"2 1 1\\n\",\n    \"2 1 2\\n\",\n    \"2 1 3\\n\",\n    \"2 1 4\\n\",\n    \"4 3 7\\n\",\n    \"1 1 1\\n\"\n  ],\n  \"outputs\": [\n    \"2 2 L\\n\",\n    \"4 3 R\\n\",\n    \"1 2 R\\n\",\n    \"2 2 R\\n\",\n    \"10 3 L\\n\",\n    \"8043 2940 R\\n\",\n    \"1 1 L\\n\",\n    \"1 1 R\\n\",\n    \"1 1 L\\n\",\n    \"1 10000 R\\n\",\n    \"1 1 L\\n\",\n    \"5000 1 R\\n\",\n    \"10000 1 R\\n\",\n    \"1 1 L\\n\",\n    \"1 1 R\\n\",\n    \"1 2 L\\n\",\n    \"1 2 R\\n\",\n    \"2 1 L\\n\",\n    \"2 1 R\\n\",\n    \"2 2 L\\n\",\n    \"2 2 R\\n\",\n    \"3 1 L\\n\",\n    \"3 1 R\\n\",\n    \"3 2 L\\n\",\n    \"3 2 R\\n\",\n    \"268 314 R\\n\",\n    \"147 378 R\\n\",\n    \"68 91 L\\n\",\n    \"9324 4745 R\\n\",\n    \"9857 6990 R\\n\",\n    \"5621 818 R\\n\",\n    \"1 1 L\\n\",\n    \"1 1 R\\n\",\n    \"5001 1 L\\n\",\n    \"10000 10000 L\\n\",\n    \"10000 10000 R\\n\",\n    \"1 1 L\\n\",\n    \"1 1 R\\n\",\n    \"1 2 L\\n\",\n    \"1 2 R\\n\",\n    \"1 1 L\\n\",\n    \"1 1 R\\n\",\n    \"2 1 L\\n\",\n    \"2 1 R\\n\",\n    \"2 1 L\\n\",\n    \"1 1 L\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/748/A",
  "starter_code": ""
}