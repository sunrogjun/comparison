{
  "task_id": "APPS/365",
  "problem_id": 365,
  "prompt": "A one-dimensional Japanese crossword can be represented as a binary string of length x. An encoding of this crossword is an array a of size n, where n is the number of segments formed completely of 1's, and a_{i} is the length of i-th segment. No two segments touch or intersect.\n\nFor example:   If x = 6 and the crossword is 111011, then its encoding is an array {3, 2};  If x = 8 and the crossword is 01101010, then its encoding is an array {2, 1, 1};  If x = 5 and the crossword is 11111, then its encoding is an array {5};  If x = 5 and the crossword is 00000, then its encoding is an empty array. \n\nMishka wants to create a new one-dimensional Japanese crossword. He has already picked the length and the encoding for this crossword. And now he needs to check if there is exactly one crossword such that its length and encoding are equal to the length and encoding he picked. Help him to check it!\n\n\n-----Input-----\n\nThe first line contains two integer numbers n and x (1 \u2264 n \u2264 100000, 1 \u2264 x \u2264 10^9) \u2014 the number of elements in the encoding and the length of the crossword Mishka picked.\n\nThe second line contains n integer numbers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10000) \u2014 the encoding.\n\n\n-----Output-----\n\nPrint YES if there exists exaclty one crossword with chosen length and encoding. Otherwise, print NO.\n\n\n-----Examples-----\nInput\n2 4\n1 3\n\nOutput\nNO\n\nInput\n3 10\n3 3 2\n\nOutput\nYES\n\nInput\n2 10\n1 3\n\nOutput\nNO",
  "solutions": "[\"R=lambda:list(map(int,input().split()))\\nn,x=R()\\nprint('YES'if sum(R())+n-1==x else'NO')\\n\", \"n, x = map(int, input().split())\\nif x == sum([int(x) for x in input().split()]) + n - 1:\\n    print('YES')\\nelse:\\n    print('NO')\", \"n, x = map(int, input().split())\\nprint(['NO', 'YES'][sum(map(int, input().split())) + n - 1 == x])\", \"n, x = [int(i) for i in input().split()]\\na = [int(i) for i in input().split()]\\nif sum(a) + n - 1 == x:\\n    print('YES')\\nelse:\\n    print('NO')\", \"n, x = list(map(int, input().split()))\\na = list(map(int, input().split()))\\n\\nif sum(a) + n - 1 == x:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\\n\", \"n, x = [int(i) for i in input().split()]\\na = [int(j) for j in input().split()]\\ns = sum(a)\\nif s + n - 1 == x:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"n,x=list(map(int,input().split()))\\na=list(map(int,input().split()))\\nsum1=sum(a)\\n\\n\\nif((x-sum1)==n-1):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\\n\\n\", \"d=input().split(' ')\\nn=int(d[1])\\nlenc=int(d[0])\\nd=list(map(lambda x:int(x),input().split(' ')))\\nif sum(d)+lenc-1==n:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"def main():\\n    n, x = list(map(int, input().split()))\\n    a = list(map(int, input().split()))\\n    s = sum(a)\\n    print('YES' if s + (n - 1) == x else 'NO')\\n\\nmain()\\n\", \"n,x=list(map(int,input().split()))\\na=list(map(int,input().split()))\\nif sum(a)+len(a)-1==x:\\n    print('YES')\\nelse:\\n    print('NO')\\n\\n\", \"import sys\\nn,x=map(int,input().split())\\nt=list(map(int,input().split()))\\nif sum(t)+len(t)-1==x:\\n    print('YES')\\nelse:\\n    print('NO')\", \"a=input().split(' ')\\nn=int(a[0])\\nx=int(a[1])\\na=input().split(' ')\\na=[int(i) for i in a]\\nif len(a)+sum(a)==x+1:\\n    print(\\\"YES\\\")\\n    return\\nprint(\\\"NO\\\")\\n\", \"n,t = list(map(int,input().split())) \\ndata = list(map(int,input().split()))\\ns=sum(data)\\nprint('YES' if t==n-1+s else 'NO')\\n\", \"n, x = input().split()\\nn = int(n)\\nx = int(x)\\n\\nsum = 0\\nfor i in input().split():\\n    sum += int(i)\\n\\nif sum + n-1 != x:\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\", \"n, x = list(map(int, input().split()))\\na = list(map(int, input().split()))\\ns = 0\\nfor i in a:\\n    s += i\\nif (s == x - n+1) or (n == 0):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"n,x=list(map(int,input().split()))\\na=list(map(int,input().split()))\\nsu=sum(a)\\nif x==su and len(a)==1:\\n    print('YES')\\nelif su==0:\\n    print('YES')\\nelif x-su==n-1:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"# -*- coding: utf-8 -*-\\n\\ndef f(n, x, arr):\\n\\n  if x == (sum(arr) + n - 1):\\n    print('YES')\\n  else:\\n    print('NO')\\n\\n\\n\\ndef __starting_point():\\n  \\n  n, x = list(map(int, input().split()))\\n  arr = list(map(int, input().split()))\\n\\n  # for i in range(n):\\n  #   list(map(int, input().split()))\\n\\n  f(n, x, arr)\\n__starting_point()\", \"n = [int(x) for x in input().strip().split()]\\nm = [int(y) for y in input().strip().split()]\\nif n[1] == (sum(m) + n[0] - 1):\\n  print('YES')\\nelse:\\n  print('NO')\", \"n, x = [int(i) for i in input().split()]\\n\\na = [int(i) for i in input().split()]\\n\\nif sum(a) == (x - n + 1):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n,x=map(int,input().split())\\na=list(map(int,input().split()))\\nk=0\\nfor i in range(len(a)-1):\\n    k+=a[i]+1\\nk+=a[len(a)-1]\\nif len(a)==0 or k==x:\\n    print('YES')\\nelse:\\n    print('NO')\", \"line = list(map(int, input().split()))\\nn, x = line\\nencoding = list(map(int, input().split()))\\nif sum(encoding) + n - 1 == x:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n, x = list(map(int, input().split()))\\ns = sum(list(map(int, input().split())))\\nif s + n - 1 == x:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"n,x = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nif n - 1 + sum(a) == x:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\\n\", \"# your code goes here\\nsegment, length = map(int, input().split(' '))\\nsegments = [int(x) for x in input().strip().split(' ')]\\ntotal = sum(segments)\\nif total + segment - 1 == length:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint (\\\"NO\\\")\", \"n,x = list(map(int,input().split()))\\narr = list(map(int,input().split()))\\nif sum(arr)+(n-1)== x:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2 4\\n1 3\\n\",\n    \"3 10\\n3 3 2\\n\",\n    \"2 10\\n1 3\\n\",\n    \"1 1\\n1\\n\",\n    \"1 10\\n10\\n\",\n    \"1 10000\\n10000\\n\",\n    \"10 1\\n5 78 3 87 4 9 5 8 9 1235\\n\",\n    \"3 12\\n3 3 3\\n\",\n    \"3 9\\n2 2 2\\n\",\n    \"2 5\\n1 1\\n\",\n    \"1 2\\n1\\n\",\n    \"3 13\\n3 3 3\\n\",\n    \"3 6\\n1 1 1\\n\",\n    \"1 6\\n5\\n\",\n    \"3 11\\n3 3 2\\n\",\n    \"2 6\\n1 3\\n\",\n    \"3 10\\n2 2 2\\n\",\n    \"3 8\\n2 1 1\\n\",\n    \"1 5\\n2\\n\",\n    \"1 3\\n1\\n\",\n    \"5 5\\n1 1 1 1 1\\n\",\n    \"2 10\\n4 4\\n\",\n    \"2 8\\n2 3\\n\",\n    \"2 4\\n1 1\\n\",\n    \"3 10\\n1 2 4\\n\",\n    \"3 10\\n2 1 3\\n\",\n    \"2 6\\n1 2\\n\",\n    \"3 4\\n1 1 1\\n\",\n    \"3 11\\n1 2 4\\n\",\n    \"3 12\\n3 3 2\\n\",\n    \"4 9\\n1 1 1 1\\n\",\n    \"1 10\\n9\\n\",\n    \"1 7\\n5\\n\",\n    \"2 5\\n1 2\\n\",\n    \"3 8\\n1 1 2\\n\",\n    \"3 7\\n1 1 1\\n\",\n    \"1 10\\n1\\n\",\n    \"3 10\\n2 3 4\\n\",\n    \"3 9\\n1 2 3\\n\",\n    \"3 9\\n3 3 2\\n\",\n    \"3 6\\n3 3 2\\n\",\n    \"1 1\\n3\\n\",\n    \"1 3\\n2\\n\",\n    \"3 10\\n3 3 3\\n\",\n    \"3 5\\n1 1 1\\n\",\n    \"2 1\\n100 100\\n\",\n    \"3 3\\n3 3 3\\n\",\n    \"4 17\\n3 3 9 1\\n\",\n    \"4 1660\\n1505 13 37 100\\n\",\n    \"3 5\\n3 3 2\\n\",\n    \"4 10\\n3 3 2 5\\n\",\n    \"5 5\\n5 5 5 5 5\\n\",\n    \"1 1\\n2\\n\",\n    \"5 10\\n1 2 2 4 5\\n\",\n    \"2 1\\n1 1\\n\"\n  ],\n  \"outputs\": [\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/884/B",
  "starter_code": ""
}