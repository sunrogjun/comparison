{
  "task_id": "APPS/134",
  "problem_id": 134,
  "prompt": "Katya studies in a fifth grade. Recently her class studied right triangles and the Pythagorean theorem. It appeared, that there are triples of positive integers such that you can construct a right triangle with segments of lengths corresponding to triple. Such triples are called Pythagorean triples.\n\nFor example, triples (3, 4, 5), (5, 12, 13) and (6, 8, 10) are Pythagorean triples.\n\nHere Katya wondered if she can specify the length of some side of right triangle and find any Pythagorean triple corresponding to such length? Note that the side which length is specified can be a cathetus as well as hypotenuse.\n\nKatya had no problems with completing this task. Will you do the same?\n\n\n-----Input-----\n\nThe only line of the input contains single integer n (1 \u2264 n \u2264 10^9)\u00a0\u2014 the length of some side of a right triangle.\n\n\n-----Output-----\n\nPrint two integers m and k (1 \u2264 m, k \u2264 10^18), such that n, m and k form a Pythagorean triple, in the only line.\n\nIn case if there is no any Pythagorean triple containing integer n, print  - 1 in the only line. If there are many answers, print any of them.\n\n\n-----Examples-----\nInput\n3\n\nOutput\n4 5\nInput\n6\n\nOutput\n8 10\nInput\n1\n\nOutput\n-1\nInput\n17\n\nOutput\n144 145\nInput\n67\n\nOutput\n2244 2245\n\n\n-----Note-----[Image]\n\nIllustration for the first sample.",
  "solutions": "[\"n = int(input())\\nif n % 4 == 0:\\n    temp = n // 4\\n    m = temp * 3\\n    k = temp * 5\\nelif n % 2 == 0:\\n    n //=  2\\n    m = n**2 // 2\\n    k = m + 1\\n    m *= 2\\n    k *= 2\\nelse:\\n    m = n**2 // 2\\n    k = m + 1\\nif 3 > n:\\n    print(\\\"-1\\\")\\nelse:\\n    print(m,k)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"17\\n\",\n    \"67\\n\",\n    \"10\\n\",\n    \"14\\n\",\n    \"22\\n\",\n    \"23\\n\",\n    \"246\\n\",\n    \"902\\n\",\n    \"1000000000\\n\",\n    \"1998\\n\",\n    \"2222222\\n\",\n    \"2222226\\n\",\n    \"1111110\\n\",\n    \"9999998\\n\",\n    \"1024\\n\",\n    \"8388608\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"16\\n\",\n    \"492\\n\",\n    \"493824\\n\",\n    \"493804\\n\",\n    \"493800\\n\",\n    \"2048\\n\",\n    \"8388612\\n\",\n    \"44\\n\",\n    \"444\\n\",\n    \"4444\\n\",\n    \"44444\\n\",\n    \"444444\\n\",\n    \"4444444\\n\",\n    \"100000000\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"7\\n\",\n    \"9\\n\",\n    \"11\\n\",\n    \"13\\n\",\n    \"15\\n\",\n    \"19\\n\",\n    \"111\\n\",\n    \"113\\n\",\n    \"115\\n\",\n    \"117\\n\",\n    \"119\\n\",\n    \"111111\\n\",\n    \"111113\\n\",\n    \"111115\\n\",\n    \"111117\\n\",\n    \"111119\\n\",\n    \"9999993\\n\",\n    \"9999979\\n\",\n    \"9999990\\n\",\n    \"9999991\\n\",\n    \"9999992\\n\",\n    \"9999973\\n\",\n    \"9999994\\n\",\n    \"9999995\\n\",\n    \"9999996\\n\",\n    \"9999997\\n\",\n    \"9999978\\n\",\n    \"99999993\\n\",\n    \"99999979\\n\",\n    \"99999990\\n\",\n    \"99999991\\n\",\n    \"99999992\\n\",\n    \"99999973\\n\",\n    \"99999994\\n\",\n    \"99999995\\n\",\n    \"99999996\\n\",\n    \"99999997\\n\",\n    \"99999978\\n\",\n    \"987654323\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"64\\n\",\n    \"999999999\\n\",\n    \"16\\n\",\n    \"999999937\\n\",\n    \"999999998\\n\",\n    \"433494437\\n\",\n    \"484916147\\n\",\n    \"999999929\\n\",\n    \"982451653\\n\",\n    \"2048\\n\"\n  ],\n  \"outputs\": [\n    \"4 5\",\n    \"8 10\",\n    \"-1\",\n    \"144 145\",\n    \"2244 2245\",\n    \"24 26\",\n    \"48 50\",\n    \"120 122\",\n    \"264 265\",\n    \"15128 15130\",\n    \"203400 203402\",\n    \"1250000000 750000000\",\n    \"998000 998002\",\n    \"1234567654320 1234567654322\",\n    \"1234572098768 1234572098770\",\n    \"308641358024 308641358026\",\n    \"24999990000000 24999990000002\",\n    \"1280 768\",\n    \"10485760 6291456\",\n    \"5 3\",\n    \"10 6\",\n    \"20 12\",\n    \"615 369\",\n    \"617280 370368\",\n    \"617255 370353\",\n    \"617250 370350\",\n    \"2560 1536\",\n    \"10485765 6291459\",\n    \"55 33\",\n    \"555 333\",\n    \"5555 3333\",\n    \"55555 33333\",\n    \"555555 333333\",\n    \"5555555 3333333\",\n    \"125000000 75000000\",\n    \"-1\",\n    \"4 5\",\n    \"12 13\",\n    \"24 25\",\n    \"40 41\",\n    \"60 61\",\n    \"84 85\",\n    \"112 113\",\n    \"180 181\",\n    \"6160 6161\",\n    \"6384 6385\",\n    \"6612 6613\",\n    \"6844 6845\",\n    \"7080 7081\",\n    \"6172827160 6172827161\",\n    \"6173049384 6173049385\",\n    \"6173271612 6173271613\",\n    \"6173493844 6173493845\",\n    \"6173716080 6173716081\",\n    \"49999930000024 49999930000025\",\n    \"49999790000220 49999790000221\",\n    \"24999950000024 24999950000026\",\n    \"49999910000040 49999910000041\",\n    \"12499990 7499994\",\n    \"49999730000364 49999730000365\",\n    \"24999970000008 24999970000010\",\n    \"49999950000012 49999950000013\",\n    \"12499995 7499997\",\n    \"49999970000004 49999970000005\",\n    \"24999890000120 24999890000122\",\n    \"4999999300000024 4999999300000025\",\n    \"4999997900000220 4999997900000221\",\n    \"2499999500000024 2499999500000026\",\n    \"4999999100000040 4999999100000041\",\n    \"124999990 74999994\",\n    \"4999997300000364 4999997300000365\",\n    \"2499999700000008 2499999700000010\",\n    \"4999999500000012 4999999500000013\",\n    \"124999995 74999997\",\n    \"4999999700000004 4999999700000005\",\n    \"2499998900000120 2499998900000122\",\n    \"487730530870294164 487730530870294165\",\n    \"-1\",\n    \"5 3\",\n    \"10 6\",\n    \"80 48\",\n    \"499999999000000000 499999999000000001\",\n    \"20 12\",\n    \"499999937000001984 499999937000001985\",\n    \"249999999000000000 249999999000000002\",\n    \"93958713454973484 93958713454973485\",\n    \"117571834810662804 117571834810662805\",\n    \"499999929000002520 499999929000002521\",\n    \"482605625241216204 482605625241216205\",\n    \"2560 1536\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/707/C",
  "starter_code": ""
}