{
  "task_id": "APPS/509",
  "problem_id": 509,
  "prompt": "Petr has just bought a new car. He's just arrived at the most known Petersburg's petrol station to refuel it when he suddenly discovered that the petrol tank is secured with a combination lock! The lock has a scale of $360$ degrees and a pointer which initially points at zero:\n\n [Image] \n\nPetr called his car dealer, who instructed him to rotate the lock's wheel exactly $n$ times. The $i$-th rotation should be $a_i$ degrees, either clockwise or counterclockwise, and after all $n$ rotations the pointer should again point at zero.\n\nThis confused Petr a little bit as he isn't sure which rotations should be done clockwise and which should be done counterclockwise. As there are many possible ways of rotating the lock, help him and find out whether there exists at least one, such that after all $n$ rotations the pointer will point at zero again.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\leq n \\leq 15$) \u2014 the number of rotations.\n\nEach of the following $n$ lines contains one integer $a_i$ ($1 \\leq a_i \\leq 180$) \u2014 the angle of the $i$-th rotation in degrees.\n\n\n-----Output-----\n\nIf it is possible to do all the rotations so that the pointer will point at zero after all of them are performed, print a single word \"YES\". Otherwise, print \"NO\". Petr will probably buy a new car in this case.\n\nYou can print each letter in any case (upper or lower).\n\n\n-----Examples-----\nInput\n3\n10\n20\n30\n\nOutput\nYES\n\nInput\n3\n10\n10\n10\n\nOutput\nNO\n\nInput\n3\n120\n120\n120\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn the first example, we can achieve our goal by applying the first and the second rotation clockwise, and performing the third rotation counterclockwise.\n\nIn the second example, it's impossible to perform the rotations in order to make the pointer point at zero in the end.\n\nIn the third example, Petr can do all three rotations clockwise. In this case, the whole wheel will be rotated by $360$ degrees clockwise and the pointer will point at zero again.",
  "solutions": "[\"import getpass\\nimport sys\\n\\n\\ndef ria():\\n    return [int(i) for i in input().split()]\\n\\n\\nif getpass.getuser() != 'frohenk':\\n    filename = 'half'\\n    # sys.stdin = open('input.txt')\\n    # sys.stdout = open('output.txt', 'w')\\nelse:\\n    sys.stdin = open('input.txt')\\n    # sys.stdin.close()\\n\\nn = ria()[0]\\nar = []\\nfor i in range(n):\\n    ar.append(ria()[0])\\n\\nsm = sum(ar) / 2\\nfor i in range(2 ** n):\\n    c = 0\\n    for j in range(n):\\n        if i & (1 << j):\\n            c += ar[j]\\n        else:\\n            c -= ar[j]\\n    if c % 360 == 0:\\n        print('YES')\\n        return\\nprint('NO')\\n\", \"def ii():\\n    return int(input())\\ndef mi():\\n    return list(map(int, input().split()))\\ndef li():\\n    return list(mi())\\n\\nn = ii()\\na = [ii() for i in range(n)]\\nans = 0\\nfor i in range(2 ** n):\\n    s = 0\\n    for b in range(n):\\n        if i >> b & 1:\\n            s += a[b]\\n        else:\\n            s -= a[b]\\n    if s % 360 == 0:\\n        ans = 1\\n        break\\nprint('YES' if ans else 'NO')\\n\", \"n = int(input())\\n\\na = [int(input()) for _ in range(n)]\\n\\nok = False\\n\\nfor i in range(2**n):\\n\\tbi = bin(i)[2:]\\n\\tbi = '0' * (n - len(bi)) + bi\\n\\tif sum((-1 if bi[j] == '0' else 1) * a[j] for j in range(n)) % 360 == 0:\\n\\t\\tok = True\\n\\nprint('YES' if ok else 'NO')\\n\", \"n = int(input())\\na = [int(input()) for i in range(n)]\\n\\ndef rec(s, a, i):\\n    if i == len(a):\\n        return (s % 360 == 0)\\n    return rec((s + a[i]) % 360, a, i + 1) or rec((s - a[i]) % 360, a, i + 1)\\n\\nprint('YES' if rec(0, a, 0) else 'NO')\", \"N = int(input())\\nn = [int(input())for i in range(N)]\\ns = sum(n)\\nw = 0\\nfor k in range(2**N) :\\n    p = sum(n[i]for i in range(N)if k&(1<<i))\\n    if (s-p-p)%360 == 0 :\\n        print('YES')\\n        w = 1\\n        break\\nif w == 0 :\\n    print('NO')\\n        \\n\", \"\\nn = int(input())\\na = [ int(input()) for x in range(0, n) ]\\n\\nfor x in range(0, 2 ** n + 1):\\n    v = 0\\n    for p in range(0, n):\\n        if (x >> p) & 1 != 0:\\n            v += a[p]\\n        else:\\n            v -= a[p]\\n\\n    if v % 360 == 0:\\n        print(\\\"YES\\\")\\n        break\\nelse:\\n    print(\\\"NO\\\")\\n\\n\", \"#      \\nimport collections, atexit, math, sys, bisect \\n\\nsys.setrecursionlimit(1000000)\\ndef getIntList():\\n    return list(map(int, input().split()))    \\n\\ntry :\\n    #raise ModuleNotFoundError\\n    import numpy\\n    def dprint(*args, **kwargs):\\n        #print(*args, **kwargs, file=sys.stderr)\\n        # in python 3.4 **kwargs is invalid???\\n        print(*args,  file=sys.stderr)\\n    dprint('debug mode')\\nexcept Exception:\\n    def dprint(*args, **kwargs):\\n        pass\\n\\n\\n\\ninId = 0\\noutId = 0\\nif inId>0:\\n    dprint('use input', inId)\\n    sys.stdin = open('input'+ str(inId) + '.txt', 'r') #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\nif outId>0:\\n    dprint('use output', outId)\\n    sys.stdout = open('stdout'+ str(outId) + '.txt', 'w') #\\u6807\\u51c6\\u8f93\\u51fa\\u91cd\\u5b9a\\u5411\\u81f3\\u6587\\u4ef6\\n    atexit.register(lambda :sys.stdout.close())     #idle \\u4e2d\\u4e0d\\u4f1a\\u6267\\u884c atexit\\n    \\nN, = getIntList()\\n#print(N)\\nza = []\\nfor i in range(N):\\n    a, = getIntList()   \\n    za.append(a)\\n\\nfor mm in range( 1<<N):\\n    c = 0\\n    for i in range(N):\\n        if mm & (1<<i):\\n            c+=za[i]\\n        else:\\n            c-= za[i]\\n    if c%360==0:\\n        print(\\\"YES\\\")\\n        return\\n\\nprint(\\\"NO\\\")\\n\\n\\n\\n\", \"from itertools import product\\n\\nN = int(input())\\nA = [int(input()) for i in range(N)]\\n\\nfor P in product([0, 1], repeat=N):\\n    d = 0\\n    for a, p in zip(A, P):\\n        if p:\\n            d += a\\n        else:\\n            d -= a\\n    if d % 360 == 0:\\n        print(\\\"YES\\\")\\n        break\\nelse:\\n    print(\\\"NO\\\")\", \"def gen(i, angle):\\n    if i == n:\\n        return angle % 360 == 0\\n    return gen(i + 1, angle + a[i]) or gen(i + 1, angle - a[i])\\n\\nn = int(input())\\na = [int(input()) for _ in range(n)]\\n\\nprint(\\\"YES\\\" if gen(0, 0) else \\\"NO\\\")\", \"n = int(input())\\n\\nl = []\\nfor i in range(n):\\n    l.append(int(input()))\\n\\np = False\\n\\nfor i in range(2**n):\\n    k = ('0'*20 + str(bin(i))[2:])[-n:]\\n\\n    total = 0\\n    for j in range(n):\\n        if (k[j] == '0'):\\n            total += l[j]\\n        else:\\n            total -= l[j]\\n\\n    if (total%360 == 0):\\n        p = True\\n\\nif p:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"n = int(input())\\nl = []\\nfor i in range(n):\\n    l.append(int(input()))\\n\\ns = sum(l)\\n\\nout = False\\n\\nfor test in range(pow(2, n)):\\n    snew = sum([l[i] for i in range(n) if (test & pow(2,i) != 0)])\\n    if (s - 2 * snew) % 360 == 0:\\n        out = True\\n        break\\n\\nif out:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"n = int(input())\\na = [int(input()) for i in range(n)]\\nfor i in range(2 ** n):\\n\\tsu = 0\\n\\tfor j in range(n):\\n\\t\\tif ((1 << j) | i) != i:\\n\\t\\t\\tsu += a[j]\\n\\t\\telse:\\n\\t\\t\\tsu -= a[j]\\n\\tif su % 360 == 0:\\n\\t\\tprint('YES')\\n\\t\\treturn\\nprint('NO')\", \"n = int(input())\\na = [int(input()) for i in range(n)]\\nok = [False for i in range(360)]\\nok[0] = True\\n\\nfor i in range(n):\\n    ok2 = [False for i in range(360)]\\n    for j in range(360):\\n        if ok[j]:\\n            ok2[(j + a[i]) % 360] = True\\n            ok2[(j - a[i]) % 360] = True\\n    ok = ok2[:]\\n\\nif ok[0]:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"n = int(input())\\na = [0]\\nfor i in range(n):\\n    st = []\\n    t = int(input())\\n    for i in a:\\n        st.append(i + t)\\n        st.append(i - t)\\n    a = st\\nr = False\\nfor i in a:\\n    if ((i % 360) + 360) % 360 == 0:\\n        r = True\\nprint('YES' if r else 'NO')\\n\", \"import sys\\nn = int(input())\\ntab = [0]\\nfor i in range(n):\\n\\tnewtab = []\\n\\tnew = int(input())\\n\\tfor j in tab:\\n\\t\\tnewtab.append(j+new)\\n\\t\\tnewtab.append(j-new)\\n\\ttab = newtab\\nfor i in tab:\\n\\tif i%360 == 0:\\n\\t\\tprint(\\\"YES\\\")\\n\\t\\treturn\\nprint(\\\"NO\\\")\", \"#! usr/bin/env python\\n# -*- coding : utf-8 -*-\\n\\nfrom collections import deque\\nimport heapq\\nimport bisect\\nimport math\\n\\n\\ndef main():\\n    n = int(input())\\n    a = [int(input()) for i in range(n)]\\n\\n    for i in range(1 << n):\\n        cur = 0\\n        for j in range(n):\\n            if (i >> j) & 1:\\n                cur += a[j]\\n            else:\\n                cur -= a[j]\\n\\n        if cur % 360 == 0:\\n            print(\\\"YES\\\")\\n            return\\n\\n    print(\\\"NO\\\")\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n = int(input())\\na = []\\nfor _ in range(n):\\n    a.append(int(input()))\\nimport itertools as it\\nif sum(a) % 2:\\n    print('NO')\\nelse:\\n    f = False\\n    q = it.product([-1,1], repeat = n)\\n    for i in q:\\n        s = 0\\n        for j in range(len(i)):\\n            s += i[j] * a[j]\\n        if s % 360 == 0:\\n            f = True\\n            break\\n    if f:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\", \"n = int(input())\\na = []\\nfor i in range(n):\\n    a.append(int(input()))\\nfor i in range(1<<n):\\n    lol = 0\\n    for j in range(n):\\n        if((1<<j)&i):\\n            lol += a[j]\\n        else:\\n            lol -= a[j]\\n    if (lol%360) == 0:\\n        print(\\\"YES\\\")\\n        break\\nelse:\\n    print(\\\"NO\\\")\\n\", \"from itertools import combinations\\nn = int(input())\\nu = []\\nfor i in range(n):\\n    u.append(int(input()))\\ns = sum(u)\\nans = s\\nk = 0\\nfor i in range(n // 2 + 1):\\n    a = combinations(u, i)\\n    for j in a:\\n        s1 = sum(j)\\n        if abs(s - s1 * 2) % 360 < ans:\\n            ans = abs(s - s1 * 2) % 360\\nif ans != 0:\\n    print('NO')\\nelse:\\n    print('YES')\\n\", \"n = int(input())\\nl = [int(input()) for _ in range(n)]\\n\\ni = 0\\nn2 = 1 << n\\nres = False\\nwhile i < n2:\\n    b = bin(i)[2:].zfill(n)\\n    s = 0\\n    for j, e in enumerate(b):\\n        if e == '0':\\n            s += l[j]\\n        else:\\n            s -= l[j]\\n    if s % 360 == 0:\\n        res = True\\n    i += 1\\n\\nif res:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"# import sys\\n# sys.stdin = open('input', 'r')\\n# sys.stdout = open('output', 'w')\\n\\ndef check(A, sum, n):\\n\\tif n == 0:\\n\\t\\tif sum%360 == 0:\\n\\t\\t\\treturn True\\n\\t\\telse:\\n\\t\\t\\treturn False\\n\\telse:\\n\\t\\treturn check(A[1:], sum + A[0], n-1) or check(A[1:], sum - A[0], n-1)\\n\\n\\nn = int(input())\\nA = []\\n\\nfor _ in range(n):\\n\\tx = int(input())\\n\\tA.append(x)\\n\\nif check(A, 0, n):\\n\\tprint('YES')\\nelse:\\n\\tprint('NO')\", \"def read(type = 1):\\n    if type:\\n        file = open(\\\"input.dat\\\", \\\"r\\\")\\n        n = int(file.readline())\\n        a = []\\n        for i in range(n):\\n            a.append(int(file.readline()))\\n        file.close()\\n    else:\\n        n = int(input().strip())\\n        a = []\\n        for i in range(n):\\n            a.append(int(input().strip()))\\n    return n, a\\n\\n\\ndef check():\\n    s = 0\\n    for i in range(n):\\n        if c[i]:\\n            s += a[i]\\n        else:\\n            s -= a[i]\\n    if s % 360 == 0:\\n        return 1\\n\\n\\ndef back():\\n    if len(c) == n:\\n        if check():\\n            return 1\\n    else:\\n        for i in range(2):\\n            c.append(i)\\n            if back():\\n                return 1\\n            c.pop()\\n\\n\\ndef solve():\\n    if back():\\n        return 1\\n    else:\\n        return 0\\n\\n\\nc = []\\nn, a = read(0)\\nif solve():\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"\\ndef main():\\n    count=int(input())\\n    arr=[]\\n    for x in range(count):\\n        arr.append(int(input()))\\n    store=[0]\\n    for x in arr:\\n        duplicate=[]\\n        for y in store:\\n            duplicate.append((y+x)%360)\\n            duplicate.append((y-x)%360)\\n        store=duplicate.copy()\\n    if 0 in store:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\nmain()\\n\", \"import sys\\nfrom itertools import product\\n\\nn = int(input())\\na = [int(input()) for _ in range(n)]\\n\\nfor p in product([1, -1], repeat=n):\\n\\ttmp = 0\\n\\tfor i, sgn in enumerate(p):\\n\\t\\ttmp += sgn * a[i]\\n\\tif tmp % 360 == 0:\\n\\t\\tprint(\\\"YES\\\")\\n\\t\\treturn\\nprint(\\\"NO\\\")\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n10\\n20\\n30\\n\",\n    \"3\\n10\\n10\\n10\\n\",\n    \"3\\n120\\n120\\n120\\n\",\n    \"10\\n151\\n172\\n68\\n9\\n8\\n1\\n18\\n116\\n59\\n117\\n\",\n    \"11\\n121\\n62\\n66\\n177\\n5\\n173\\n16\\n31\\n80\\n31\\n54\\n\",\n    \"12\\n16\\n27\\n65\\n54\\n154\\n90\\n23\\n135\\n102\\n42\\n17\\n173\\n\",\n    \"15\\n68\\n97\\n79\\n11\\n88\\n144\\n139\\n77\\n90\\n157\\n102\\n170\\n1\\n147\\n70\\n\",\n    \"9\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n128\\n76\\n\",\n    \"10\\n1\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n128\\n76\\n\",\n    \"1\\n180\\n\",\n    \"1\\n1\\n\",\n    \"2\\n180\\n180\\n\",\n    \"15\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\",\n    \"15\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n24\\n\",\n    \"8\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n128\\n\",\n    \"10\\n1\\n1\\n3\\n3\\n9\\n9\\n27\\n27\\n81\\n81\\n\",\n    \"11\\n1\\n1\\n3\\n3\\n9\\n9\\n27\\n27\\n81\\n81\\n117\\n\",\n    \"9\\n1\\n2\\n4\\n8\\n16\\n32\\n64\\n128\\n104\\n\",\n    \"12\\n1\\n1\\n2\\n5\\n5\\n10\\n25\\n25\\n50\\n125\\n125\\n110\\n\",\n    \"3\\n11\\n6\\n7\\n\",\n    \"10\\n77\\n92\\n11\\n84\\n57\\n126\\n18\\n146\\n139\\n54\\n\",\n    \"13\\n122\\n12\\n117\\n71\\n30\\n87\\n168\\n145\\n12\\n134\\n139\\n57\\n64\\n\",\n    \"15\\n100\\n10\\n14\\n2\\n3\\n11\\n10\\n1\\n3\\n7\\n6\\n5\\n4\\n3\\n1\\n\",\n    \"15\\n22\\n145\\n26\\n44\\n142\\n44\\n83\\n5\\n44\\n53\\n66\\n35\\n13\\n13\\n35\\n\",\n    \"15\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n\",\n    \"14\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n180\\n\",\n    \"15\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n168\\n\",\n    \"5\\n179\\n179\\n179\\n179\\n4\\n\",\n    \"5\\n40\\n170\\n170\\n170\\n170\\n\",\n    \"5\\n179\\n178\\n177\\n176\\n10\\n\",\n    \"5\\n144\\n144\\n144\\n144\\n144\\n\",\n    \"6\\n180\\n178\\n157\\n143\\n63\\n1\\n\",\n    \"5\\n179\\n179\\n179\\n92\\n91\\n\",\n    \"15\\n49\\n52\\n58\\n34\\n40\\n43\\n49\\n55\\n34\\n52\\n43\\n55\\n55\\n46\\n55\\n\",\n    \"4\\n1\\n178\\n180\\n1\\n\",\n    \"5\\n100\\n100\\n100\\n100\\n40\\n\",\n    \"6\\n129\\n156\\n147\\n174\\n126\\n138\\n\",\n    \"10\\n145\\n129\\n125\\n164\\n164\\n55\\n98\\n43\\n157\\n100\\n\",\n    \"2\\n10\\n10\\n\",\n    \"6\\n125\\n125\\n125\\n125\\n125\\n95\\n\",\n    \"6\\n100\\n110\\n125\\n130\\n140\\n115\\n\",\n    \"5\\n120\\n120\\n120\\n40\\n40\\n\",\n    \"11\\n70\\n70\\n70\\n70\\n70\\n70\\n70\\n70\\n70\\n70\\n20\\n\",\n    \"5\\n179\\n170\\n160\\n111\\n100\\n\",\n    \"9\\n80\\n80\\n80\\n80\\n80\\n80\\n80\\n80\\n80\\n\",\n    \"5\\n30\\n30\\n120\\n120\\n120\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1097/B",
  "starter_code": ""
}