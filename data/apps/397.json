{
  "task_id": "APPS/397",
  "problem_id": 397,
  "prompt": "Each evening after the dinner the SIS's students gather together to play the game of Sport Mafia. \n\nFor the tournament, Alya puts candies into the box, which will serve as a prize for a winner. To do that, she performs $n$ actions. The first action performed is to put a single candy into the box. For each of the remaining moves she can choose from two options:\n\n  the first option, in case the box contains at least one candy, is to take exactly one candy out and eat it. This way the number of candies in the box decreased by $1$;  the second option is to put candies in the box. In this case, Alya will put $1$ more candy, than she put in the previous time. \n\nThus, if the box is empty, then it can only use the second option.\n\nFor example, one possible sequence of Alya's actions look as follows:\n\n  put one candy into the box;  put two candies into the box;  eat one candy from the box;  eat one candy from the box;  put three candies into the box;  eat one candy from the box;  put four candies into the box;  eat one candy from the box;  put five candies into the box; \n\nThis way she will perform $9$ actions, the number of candies at the end will be $11$, while Alya will eat $4$ candies in total.\n\nYou know the total number of actions $n$ and the number of candies at the end $k$. You need to find the total number of sweets Alya ate. That is the number of moves of the first option. It's guaranteed, that for the given $n$ and $k$ the answer always exists.\n\nPlease note, that during an action of the first option, Alya takes out and eats exactly one candy.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $k$ ($1 \\le n \\le 10^9$; $0 \\le k \\le 10^9$)\u00a0\u2014 the total number of moves and the number of candies in the box at the end. \n\nIt's guaranteed, that for the given $n$ and $k$ the answer exists.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the number of candies, which Alya ate. Please note, that in this problem there aren't multiple possible answers\u00a0\u2014 the answer is unique for any input data. \n\n\n-----Examples-----\nInput\n1 1\n\nOutput\n0\nInput\n9 11\n\nOutput\n4\nInput\n5 0\n\nOutput\n3\nInput\n3 2\n\nOutput\n1\n\n\n-----Note-----\n\nIn the first example, Alya has made one move only. According to the statement, the first move is always putting one candy in the box. Hence Alya ate $0$ candies.\n\nIn the second example the possible sequence of Alya's actions looks as follows:   put $1$ candy,  put $2$ candies,  eat a candy,  eat a candy,  put $3$ candies,  eat a candy,  put $4$ candies,  eat a candy,  put $5$ candies.  \n\nThis way, she will make exactly $n=9$ actions and in the end the box will contain $1+2-1-1+3-1+4-1+5=11$ candies. The answer is $4$, since she ate $4$ candies in total.",
  "solutions": "[\"n,k=map(int,input().split())\\nlow=1\\nhigh=n\\nimport sys\\nwhile low<=high:\\n    mid=(low+high)//2\\n    if mid*(mid+1)//2 -(n-mid)>k:\\n        high=mid-1\\n    elif mid*(mid+1)//2-(n-mid)==k:\\n        print(n-mid)\\n        return\\n    else :\\n        low=mid+1\", \"def main():\\n    import sys\\n    input = sys.stdin.readline\\n    \\n    n, k = map(int, input().split())\\n    \\n    l = 1\\n    r = n + 1\\n    \\n    while r - l != 1:\\n        m = l + r >> 1\\n        candies = m * (m + 1) // 2\\n        eat = n - m\\n        \\n        if candies - eat <= k:\\n            l = m\\n        else:\\n            r = m\\n    \\n    print(n - l)\\n    \\n    return 0\\n\\nmain()\", \"turns, candies = map(int, input().split())\\nsumm = 0\\nturn = 0\\nwhile candies != summ - (turns - turn):\\n    turn += 1\\n    summ += turn\\nprint(turns - turn)\", \"#n = int(input())\\nn,k = map(int,input().split())\\n\\ncurrent = 1\\nactions = 1\\nstep = 2\\nwhile n!= (actions + (current-k)):\\n    current += step\\n    step+=1\\n    actions +=1\\n\\nprint (current-k)\", \"n, k = list(map(int, input().split()))\\nc = 1\\nwhile c * (c + 1) // 2 < k:\\n    c += 1\\nwhile c * (c + 1) // 2 - (n - c) != k:\\n    c += 1\\nprint(n - c)\\n\", \"a, b = list(map(int,input().split()))\\nl = 0\\nr = a + 1\\nwhile r - l > 1:\\n    m = (r + l) // 2\\n    #print(l, r)\\n    if m * (m + 1) // 2 - (a - m) > b:\\n        r = m\\n    else:\\n        l = m\\nprint(a - l)\", \"n, k = map(int, input().split())\\nl = 0\\nr = n + 1\\nwhile r - l > 1:\\n    m = (l + r) // 2\\n    if m * (m + 1) // 2 - (n - m) > k:\\n        r = m\\n    else:\\n        l = m\\nprint(n - l)\", \"from math import sqrt as sqrt\\nn, k = map(int, input().split())\\nt = int(sqrt(8 * n + 8 * k + 9) + 0.0001)\\nm = (t - 3) // 2\\nprint(n - m)\", \"n, k = list(map(int, input().split()))\\nc = n + k\\np = int(0.5 * ((8 * c + 9) ** 0.5 - 3))\\nprint(n - p)\\n\", \"n, k = [int(i) for i in input().split()]\\nfor i in range(100*k+100*n):\\n    if i*(i+1) == (n+k-i)*2:\\n        print(n-i)\\n        break\", \"N, K = list(map(int,input().split()))\\nB = (-2 * N - 3)\\nC = (N * N + N - 2 * K)\\n\\ndef sqr(n):\\n    x = n\\n    y = (x + 1) // 2\\n    while y < x:\\n        x = y\\n        y = (x + n // x) // 2\\n    return x\\n\\nt = sqr(B*B-4*C)\\nprint((-B - t)//2)\\n\", \"from collections import Counter\\n\\nn, k = list(map(int, input().split()))\\n\\nfor p in range(n+1):\\n    if p*(p+1)//2 - (n-p) == k:\\n        print(n-p)\\n        break\\n\", \"from math import *\\nn,k=list(map(int,input().split()))\\nval=int(sqrt(9+(8*(n+k))))\\nans=(-3+val)//2\\nprint(n-ans)\\n\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\n\\nimport time\\n\\n\\n(n, k) = (int(i) for i in input().split())\\n\\n\\nstart = time.time()\\n\\nprint((2*n+3-int((9+8*(n+k))**0.5))//2)\\nfinish = time.time()\\n#print(finish - start)\\n\", \"import sys\\nimport math\\n\\nn, k = list(map(int, sys.stdin.readline().strip().split()))\\na = (2 * n + 3 - math.sqrt((2*n+3)**2 - 4 * (n**2 + n - 2 * k))) // 2\\nprint(int(a))\", \"n,k=map(int,input().split())\\nfor i in range(10**5):\\n  if (i*(i+1))//2-(n-i)==k:\\n    print(n-i)\", \"import math\\nn,k = [int(x) for x in input().split(' ')]\\nans = ((2*n + 3) - int(math.sqrt(8*n + 8*k + 9)))//2\\nprint(ans);\", \"n, k = map(int, input().split())\\nd = int((9 + 8 * (n + k)) ** 0.5)\\nx = (d - 3) // 2\\nprint(n - x)\", \"import sys\\ninput = sys.stdin.readline\\nsys.setrecursionlimit(100000)\\n\\ndef getN():\\n    return int(input())\\ndef getList():\\n    return list(map(int, input().split()))\\nimport math\\n\\ndef validation(n, k, x):\\n    if (x*(x+1)) // 2 - (n-x) == k:\\n        return 0\\n    if (x * (x + 1)) // 2 - (n - x) > k:\\n        return 1\\n    return 2\\n\\nn, k = getList()\\n\\nl = 0\\nr = 1000000001\\nwhile(True):\\n    mid = (l+r)//2\\n    flag = validation(n, k, mid)\\n    if flag == 0:\\n        ans = mid\\n        break\\n    elif flag == 1:\\n        r = mid\\n    else:\\n        l = mid\\n\\nprint(n - ans)\\n\", \"from math import sqrt\\nn, k = list(map(int, input().split()))\\nprint(int(n - 0.5 * (sqrt(8 * (k + n) + 9) - 3)))\\n\", \"import math\\nn, k = map(int, input().split())\\n\\nq = int(-3 + math.sqrt(9 + 8*(n+k)))//2\\n\\nr = n-q\\n\\nprint(r)\", \"n,k=[int(i) for i in input().split()]\\na = pow(1+2*k+2*n,0.5) - 1\\nprint(n-int(a))\\n\", \"from sys import stdin, stdout, exit\\nimport math\\n\\nn, k = list(map(int, stdin.readline().split()))\\n\\n\\n\\nans = round((-3 + math.sqrt(9 + 8*(k+n))) / 2)\\nstdout.write(str(n-ans) + \\\"\\\\n\\\")\\n\", \"import sys\\n\\ndef input():\\n    return sys.stdin.readline().strip()\\n\\ndef dinput():\\n    return int(input())\\n\\ndef tinput():\\n    return input().split()\\n\\ndef rinput():\\n    return map(int, tinput())\\n\\ndef rt(x1, x2, y3):\\n    print(0.5 * (x2 + x1) * y3)\\n\\ndef main():\\n    n, k = rinput()\\n    i = 0\\n    t = 0\\n    while k > i:\\n        t += 1\\n        i += t\\n    c = n - t\\n    i -= c\\n    while i != k:\\n        t += 1\\n        i += t + 1\\n        c -= 1\\n    print(c)\\nmain()\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 1\\n\",\n    \"9 11\\n\",\n    \"5 0\\n\",\n    \"3 2\\n\",\n    \"4 1\\n\",\n    \"7 7\\n\",\n    \"9 26\\n\",\n    \"11 16\\n\",\n    \"19 35\\n\",\n    \"102 4175\\n\",\n    \"999999994 108004280\\n\",\n    \"99 3728\\n\",\n    \"100 3727\\n\",\n    \"103 1976\\n\",\n    \"104 2380\\n\",\n    \"105 1910\\n\",\n    \"106 634\\n\",\n    \"107 3295\\n\",\n    \"1001 102283\\n\",\n    \"1002 104108\\n\",\n    \"1003 189032\\n\",\n    \"1004 134455\\n\",\n    \"1005 72914\\n\",\n    \"1006 268738\\n\",\n    \"1007 84070\\n\",\n    \"1008 97781\\n\",\n    \"1009 96893\\n\",\n    \"100001 390012276\\n\",\n    \"100002 25222283\\n\",\n    \"100003 28548661\\n\",\n    \"100004 114244998\\n\",\n    \"1000000 485392454\\n\",\n    \"999999 675660078\\n\",\n    \"999998 551232762\\n\",\n    \"999997 811911683\\n\",\n    \"999996 400053684\\n\",\n    \"999995 5235750\\n\",\n    \"999994 37944730\\n\",\n    \"999993 417284432\\n\",\n    \"999992 159231858\\n\",\n    \"239239 142219520\\n\",\n    \"1000000000 315152540\\n\",\n    \"999999999 497659085\\n\",\n    \"999999998 434363581\\n\",\n    \"999999997 448430755\\n\",\n    \"999999996 974966979\\n\",\n    \"999999995 658102495\\n\",\n    \"999999993 94535084\\n\",\n    \"999999992 437042862\\n\",\n    \"239239239 689501111\\n\",\n    \"1000000000 846040702\\n\",\n    \"51002 1000000000\\n\",\n    \"9 0\\n\"\n  ],\n  \"outputs\": [\n    \"0\",\n    \"4\",\n    \"3\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"2\",\n    \"5\",\n    \"10\",\n    \"11\",\n    \"999952921\",\n    \"13\",\n    \"14\",\n    \"40\",\n    \"35\",\n    \"43\",\n    \"69\",\n    \"26\",\n    \"548\",\n    \"545\",\n    \"388\",\n    \"485\",\n    \"622\",\n    \"273\",\n    \"596\",\n    \"565\",\n    \"568\",\n    \"72070\",\n    \"92887\",\n    \"92435\",\n    \"84883\",\n    \"968812\",\n    \"963213\",\n    \"966766\",\n    \"959677\",\n    \"971676\",\n    \"996465\",\n    \"991170\",\n    \"971071\",\n    \"982092\",\n    \"222361\",\n    \"999948715\",\n    \"999945271\",\n    \"999946439\",\n    \"999946176\",\n    \"999937149\",\n    \"999942410\",\n    \"999953207\",\n    \"999946383\",\n    \"239196142\",\n    \"999939239\",\n    \"6281\",\n    \"6\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1195/B",
  "starter_code": ""
}