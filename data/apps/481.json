{
  "task_id": "APPS/481",
  "problem_id": 481,
  "prompt": "Let's consider a table consisting of n rows and n columns. The cell located at the intersection of i-th row and j-th column contains number i \u00d7 j. The rows and columns are numbered starting from 1.\n\nYou are given a positive integer x. Your task is to count the number of cells in a table that contain number x.\n\n\n-----Input-----\n\nThe single line contains numbers n and x (1 \u2264 n \u2264 10^5, 1 \u2264 x \u2264 10^9) \u2014 the size of the table and the number that we are looking for in the table.\n\n\n-----Output-----\n\nPrint a single number: the number of times x occurs in the table.\n\n\n-----Examples-----\nInput\n10 5\n\nOutput\n2\n\nInput\n6 12\n\nOutput\n4\n\nInput\n5 13\n\nOutput\n0\n\n\n\n-----Note-----\n\nA table for the second sample test is given below. The occurrences of number 12 are marked bold.  [Image]",
  "solutions": "[\"n, x = map(int, input().split())\\nans = 0\\nfor i in range(n, 0, -1):\\n    if x % i == 0 and x//i <= n:\\n        ans += 1\\nprint(ans)\", \"n, x = (int(x) for x in input().split())\\n\\n\\nans = 0\\nfor i in range(1, n + 1):\\n\\tif x % i == 0:\\n\\t\\tj = x // i\\n\\t\\tif 1 <= j <= n:\\n\\t\\t\\tans += 1\\n\\nprint(ans)\", \"n,x = list(map(int,input().split()))\\ncnt = 0\\nfor i in range(1,n+1,1):\\n    if(x%i==0 and x//i<=n):\\n        cnt+=1\\nprint(cnt)\\n\", \"def main():\\n    count = 0\\n    n, x = map(int, input().split())\\n    for i in range(1, n + 1):\\n        if x % i == 0:\\n            if x // i <= n:\\n                count += 1\\n    print(count)    \\n\\nmain()\", \"# = int(input())\\nfrom math import ceil, sqrt\\nn, x = map(int, input().split())\\n# = [int(x) for x in input().split()]\\ncnt = 0\\ns = set()\\n\\nfor i in range(1, ceil(sqrt(x))+1):\\n    if x % i == 0 and i <= n and x / i <= n:\\n        s.add(i)\\n        s.add(x // i)\\n#print(s)\\nprint(len(s))\", \"n, x = list(map(int, input().split()))\\np = 0\\nfor i in range(1,n+1):\\n    if x%i == 0:\\n        k = x//i\\n        if k > n: continue\\n        p += 1\\n        #print(i,k)\\nprint(p)\\n\", \"n, x = [int(i) for i in input().split()]\\nprint(sum([x%i == 0 and x//i <= n for i in range(1, n+1)]))\", \"x, n = map(int, input().split())\\nd = 1\\nres = 0\\nwhile d < n ** 0.5:\\n    if n % d == 0 and d <= x and n // d <= x:\\n        res += 2\\n    d += 1\\nif d * d == n and d <= x:\\n    res += 1\\nprint(res)\", \"n,x=list(map(int,input().split()))\\nans=0\\nfor i in range(1,n+1):\\n    if x%i==0 and 0<x//i<=n: \\n        ans+=1\\nprint(ans)\\n\", \"n, x = map(int, input().split())\\nans = 0\\nfor i in range(1, n+1):\\n    if x % i == 0 and x // i <= n:\\n        ans += 1\\nprint(ans)\", \"(n,x)=map(int,input().split())\\nk=0\\nfor i in range(1,n+1):\\n\\tif x%i==0 and x//i<=n:\\n\\t\\tk+=1\\nprint(k)\", \"n, x = list(map(int, input().split()))\\n\\ncnt = 0\\nfrom math import sqrt\\nfor i in range(1, int(sqrt(x)) + 1):\\n    j = x // i\\n    if i * j == x and i <= n and j <= n:\\n        cnt += 2\\n        if i == j:\\n            cnt -= 1\\nprint(cnt)\\n\", \"n, x = map(int, input().split(' '))\\nc = 0\\nfor i in range(1, n+1):\\n    d = x // i\\n    m = x % i\\n    if d <= n and m == 0:\\n        c += 1\\nprint(c)\", \"n, x = list(map(int, input().split()))\\n\\ncount = 0\\n\\nfor i in range(1,n+1):\\n    if (x%i == 0 and x/i <=n):\\n        count += 1\\n\\nprint(count)\\n        \\n\", \"n, m = map(int, input().split())\\nanswer = 0\\nfor i in range(1, n + 1):\\n    if m % i == 0 and m // i <= n:\\n        answer += 1\\nprint(answer)\", \"n, x = input().split()\\nn = int(n)\\nX = int(x)\\n\\nif X > n ** 2:\\n    print(0)\\nelse:\\n    fin = 0\\n    for x in range(n):\\n        v = X / (x + 1)\\n        fin += v.is_integer() and v <= n\\n    print(fin)\\n\", \"n,x = map(int,input().split())\\nl = 0\\nfor i in range(1, n+1):\\n    if(x % i == 0 and x // i <=n):\\n        l+=1\\nprint(l)\", \"__author__ = 'User'\\nn, x = list(map(int, input().split()))\\nc = 0\\n#print(x // n)\\nfor i in range(max(1, x // n), n + 1):\\n    if x % i == 0 and x // i <= n:\\n        #print(i)\\n        c += 1\\nprint(c)\\n\", \"#!/usr/bin/env python3\\n\\\"\\\"\\\"\\nCodeforces Round #319 (Div. 2)\\n\\nProblem 577 A. Multiplication Table\\n\\n@author yamaton\\n@date 2015-09-10\\n\\\"\\\"\\\"\\n\\nimport itertools as it\\nimport functools\\nimport operator\\nimport collections\\nimport math\\nimport sys\\n\\n\\ndef solve(n, x):\\n    sqx = int(math.sqrt(x))\\n    lim = min(sqx, n)\\n    count = sum(2 for i in range(1, lim + 1) if x % i == 0 and (x // i <= n))\\n    if sqx * sqx == x and sqx <= n:\\n        count -= 1\\n    return count\\n\\n\\ndef print_stderr(*args, **kwargs):\\n    print(*args, file=sys.stderr, **kwargs)\\n\\n\\ndef main():\\n    [n, x] = [int(i) for i in input().strip().split()]\\n    result = solve(n, x)\\n    print(result)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n, x = map(int, input().split())\\ncnt = 0\\nfor i in range(1, n + 1):\\n    if ((x // i) == (x / i)) and ((x // i) <= n):\\n        cnt += 1\\nprint(cnt)        \", \"n, x = [int(i) for i in input().split(' ')]\\n\\ncnt = 0\\n\\nfor i in range(1, n + 1):\\n    if (x % i == 0):\\n        if (x // i <= n):\\n            cnt += 1\\n\\nprint(cnt)\\n\", \"n, x = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, n + 1):\\n    if x % i == 0 and x // i <= n:\\n        ans += 1\\nprint(ans)        \\n\", \"def __starting_point():\\n    arr = input().split()\\n    s = int(arr[0])\\n    num = int(arr[1])\\n    count = 0\\n    for i in range(1, s + 1):\\n        if i > num + 1:\\n            break\\n        if num % i == 0 and num / i <= s:\\n            count += 1\\n    print(count)\\n__starting_point()\", \"n, q = list(map(int, input().split()))\\ncount = 0\\nfor var in range(1, n + 1):\\n    if (q / var) % 1 == 0 and q // var <= n:\\n        count += 1\\nprint(count)\\n\", \"n, x = list(map(int, input().split()))\\ncount = 0\\nfor i in range(1,n+1):\\n    if x%i==0:\\n        if x//i <= n:\\n            count += 1\\nprint(count)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"10 5\\n\",\n    \"6 12\\n\",\n    \"5 13\\n\",\n    \"1 1\\n\",\n    \"2 1\\n\",\n    \"100000 1\\n\",\n    \"1 1000000000\\n\",\n    \"100000 1000000000\\n\",\n    \"100000 362880\\n\",\n    \"1 4\\n\",\n    \"9 12\\n\",\n    \"10 123\\n\",\n    \"9551 975275379\\n\",\n    \"17286 948615687\\n\",\n    \"58942 936593001\\n\",\n    \"50000 989460910\\n\",\n    \"22741 989460910\\n\",\n    \"22740 989460910\\n\",\n    \"100000 989460910\\n\",\n    \"100000 98280\\n\",\n    \"100000 997920\\n\",\n    \"100000 720720\\n\",\n    \"100000 2162160\\n\",\n    \"100000 4324320\\n\",\n    \"100000 8648640\\n\",\n    \"100000 183783600\\n\",\n    \"100000 551350800\\n\",\n    \"40000 551350800\\n\",\n    \"20000 400000000\\n\",\n    \"19999 400000000\\n\",\n    \"19999 399960001\\n\",\n    \"31621 999887641\\n\",\n    \"31622 999887641\\n\",\n    \"31620 999887641\\n\",\n    \"100000 999887641\\n\",\n    \"100000 25\\n\",\n    \"100000 1\\n\",\n    \"100000 3628800\\n\",\n    \"100000 39916800\\n\",\n    \"100000 479001600\\n\",\n    \"4 9\\n\",\n    \"2 6\\n\",\n    \"20 100\\n\",\n    \"10 3\\n\",\n    \"4 4\\n\",\n    \"2 4\\n\",\n    \"89874 1\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"4\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"16\\n\",\n    \"154\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"128\\n\",\n    \"222\\n\",\n    \"226\\n\",\n    \"282\\n\",\n    \"320\\n\",\n    \"348\\n\",\n    \"438\\n\",\n    \"392\\n\",\n    \"150\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"220\\n\",\n    \"328\\n\",\n    \"254\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"1\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/577/A",
  "starter_code": ""
}