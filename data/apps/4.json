{
  "task_id": "APPS/4",
  "problem_id": 4,
  "prompt": "Jamie loves sleeping. One day, he decides that he needs to wake up at exactly hh: mm. However, he hates waking up, so he wants to make waking up less painful by setting the alarm at a lucky time. He will then press the snooze button every x minutes until hh: mm is reached, and only then he will wake up. He wants to know what is the smallest number of times he needs to press the snooze button.\n\nA time is considered lucky if it contains a digit '7'. For example, 13: 07 and 17: 27 are lucky, while 00: 48 and 21: 34 are not lucky.\n\nNote that it is not necessary that the time set for the alarm and the wake-up time are on the same day. It is guaranteed that there is a lucky time Jamie can set so that he can wake at hh: mm.\n\nFormally, find the smallest possible non-negative integer y such that the time representation of the time x\u00b7y minutes before hh: mm contains the digit '7'.\n\nJamie uses 24-hours clock, so after 23: 59 comes 00: 00.\n\n\n-----Input-----\n\nThe first line contains a single integer x (1 \u2264 x \u2264 60).\n\nThe second line contains two two-digit integers, hh and mm (00 \u2264 hh \u2264 23, 00 \u2264 mm \u2264 59).\n\n\n-----Output-----\n\nPrint the minimum number of times he needs to press the button.\n\n\n-----Examples-----\nInput\n3\n11 23\n\nOutput\n2\n\nInput\n5\n01 07\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample, Jamie needs to wake up at 11:23. So, he can set his alarm at 11:17. He would press the snooze button when the alarm rings at 11:17 and at 11:20.\n\nIn the second sample, Jamie can set his alarm at exactly at 01:07 which is lucky.",
  "solutions": "[\"x=int(input())\\nh,m=list(map(int,input().split()))\\ndef ok(mm):\\n  while mm<0: mm+=1440\\n  hh=mm//60\\n  mm=mm%60\\n  return hh%10==7 or hh//10==7 or mm%10==7 or mm//10==7\\nfor y in range(999):\\n  if ok(h*60+m-y*x):\\n    print(y)\\n    return\\n\", \"def lucky(x):\\n    return (x % 10 == 7)\\nx = int(input())\\nh, m = list(map(int, input().split()))\\nt = 60 * h + m\\n\\nans = float('inf')\\nfor hh in range(24):\\n    for mm in range(60):\\n        if lucky(hh) or lucky(mm):\\n            s = 60 * hh + mm\\n            while t < s:\\n                s -= 60 * 24\\n\\n            r = t - s\\n            if r % x != 0:\\n                continue\\n\\n            ans = min(ans,  r // x)\\n\\nprint(ans)\\n\", \"x=int(input())\\nline=input().split()\\nh=int(line[0])\\nm=int(line[1])\\ns=0\\nwhile (not m%10==7) and (not h%10==7):\\n    m-=x\\n    if m<0:\\n        m+=60\\n        h-=1\\n    if h<0:\\n        h+=24\\n    s+=1\\nprint (s)\\n\", \"x = int(input())\\nhh, mm = [int(v) for v in input().split()]\\n\\nans = 0\\nwhile '7' not in ('%s%s' % (hh, mm)):\\n    ans += 1\\n    if x == 60:\\n        hh -= 1\\n    else:\\n        mm -= x\\n        if mm < 0:\\n            mm += 60\\n            hh -= 1\\n            if hh < 0:\\n                hh = 23\\n\\nprint(ans)\\n\", \"def lucky(a,b):\\n    return '7' in str(a)+str(b)\\nx = int(input())\\nt = 0\\nh,m = list(map(int,input().split()))\\nwhile not lucky(h,m):\\n    t+=1\\n    m -= x\\n    while m<0:\\n        m+=60\\n        h-=1\\n    h%=24\\nprint(t)\\n\", \"def isLucky(t):\\n\\tif 7==t%10:\\n\\t\\treturn True\\n\\tif (t//60)%10==7:\\n\\t\\treturn True\\n\\treturn False\\n\\nx = int(input())\\nh,m = list(map(int,input().split()))\\nct = h*60+m\\nans = 0\\nwhile (not isLucky(ct)):\\n\\tct = (ct-x)%(60*24)\\n\\tans+=1\\nprint(ans)\\n\", \"def nt(t):\\n    t = t % (60 * 24)\\n    return '7' in str(t // 60) + str(t % 60)\\n\\nx = int(input())\\nh, m = [int(i) for i in input().split()]\\nt = h * 60 + m\\nans = 0\\nwhile not nt(t):\\n    t = (t - x) % (60 * 24)\\n    ans += 1\\nprint(ans)\", \"x = int(input())\\nh,m = map(int, input().split())\\nans = 0\\nwhile 1:\\n    if '7' in str(h) + str(m):\\n        break\\n    ans += 1\\n    if m >= x:\\n        m -= x\\n    else:\\n        m = 60 - (x-m)\\n        h -= 1\\n        if h == -1:\\n            h = 23\\nprint(ans)\", \"x = int(input())\\n\\nh, m = [int(x) for x in input().split()]\\n\\nfor y in range(3600):\\n    t = h * 60 + m - x * y\\n    if t < 0:\\n        t += 60 * 24\\n    h_new = t // 60\\n    m_new = t % 60\\n    \\n    if '7' in str(h_new) + str(m_new):\\n        print(y)\\n        break\\n\", \"#!/usr/bin/env python3\\n# -*- coding: utf-8 -*-\\nread = lambda: list(map(int, input().split()))\\n\\n\\nx = int(input())\\nhh, mm = read()\\nr = 0\\nwhile '7' not in str(mm) and '7' not in str(hh):\\n    mm -= x\\n    if mm < 0:\\n        hh -= 1\\n        mm += 60\\n    if hh < 0:\\n        hh = 23\\n    r += 1\\nprint(r)\\n\", \"def lucky(hh, mm):\\n  if '7' in str(hh):\\n    return True\\n  if '7' in str(mm):\\n    return True\\n  return False\\n\\nx = int(input())\\nh, m = map(int, input().split())\\ncnt = 0\\nwhile not lucky(h, m):\\n  m -= x\\n  if m < 0:\\n    m += 60\\n    h -= 1\\n  if h < 0:\\n    h += 24\\n  cnt += 1\\n \\nprint(cnt)\", \"x = int(input())\\nhh, mm = map(int, input().split())\\nmins = hh * 60 + mm\\nans = 0\\nwhile str(mins // 60).count('7') == 0 and str(mins % 60).count('7') == 0:\\n    mins -= x\\n    ans += 1\\n    if mins < 0:\\n        mins = 1440 + mins\\nprint(ans)\", \"\\ndef lucky(x, y):\\n    return '7' in str(x) + str(y)\\n\\ndef take(hour, minutes, time):\\n    minutes = minutes - time\\n\\n    if minutes < 0:\\n        hour -= 1\\n        minutes += 60\\n\\n    if hour < 0:\\n        hour += 24\\n\\n    return hour, minutes\\n\\n\\ndef __starting_point():\\n    x = int(input())\\n    hour, minutes = list(map(int, input().split()))\\n\\n    total = 0\\n    while not lucky(hour, minutes):\\n        hour, minutes = take(hour, minutes, x)\\n        total += 1\\n\\n    print(total)\\n\\n__starting_point()\", \"x = int(input())\\nn, m = list(map(int, input().split()))\\na = 0\\nwhile (n % 10 != 7 and n // 10 != 7 and m % 10 != 7 and m // 10 != 7):\\n    m -= x\\n    if m < 0:\\n        m += 60\\n        n -= 1\\n        if n < 0:\\n            n  += 24\\n    a += 1\\nprint(a)\\n\", \"x = int(input())\\nh, m = input().split()\\nif '7' in h + m:\\n\\tprint(0)\\nelse:\\n\\tres = 0\\n\\twhile not '7' in h + m:\\n\\t\\tm = str(int(m) - x)\\n\\t\\tif m[0] == '-':\\n\\t\\t\\tm = str(60 + int(m))\\n\\t\\t\\th = str(int(h) - 1)\\n\\t\\t\\tif h[0] == '-':\\n\\t\\t\\t\\th = str(24 + int(h))\\n\\t\\tres += 1\\n\\tprint(res)\\n\\n\", \"def dst(a, b):\\n\\tif (a <= b):\\n\\t\\treturn b - a\\n\\treturn b - a + 60 * 24\\n\\nx = int(input())\\nh, m = map(int, input().split())\\n# print(h, m)\\ncur = 60 * h + m\\nans = 10**9\\nfor H in range(24):\\n\\tfor M in range(60):\\n\\t\\tif (str(H) + str(M)).count(\\\"7\\\"):\\n\\t\\t\\tif (dst(H * 60 + M, cur) % x == 0):\\n\\t\\t\\t\\tans = min(ans, dst(H * 60 + M, cur) // x)\\nprint(ans)\", \"from sys import stdin, stdout\\n\\nx = int(stdin.readline())\\na, b = list(map(int, stdin.readline().split()))\\n\\ntime = a * 60 + b\\nfor i in range(10 ** 6):\\n    t = time - i * x\\n    \\n    if t < 0:\\n        t += 24 * 60\\n        time += 24 * 60\\n    \\n    if '7' in str(t // 60) + str(t % 60):\\n        stdout.write(str(i))\\n        break\\n\", \"x=int(input())\\narr=list(map(int,input().strip().split(' ')))\\nh=arr[0]\\nm=arr[1]\\ncnt=0\\nwhile(True):\\n     s=str(h)\\n     ss=str(m)\\n     if('7' in s or '7' in ss):\\n          break\\n     else:\\n          cnt+=1\\n          \\n          if(m-x<0):\\n               if(h-1<0):\\n                    h=23\\n               else:\\n                    h-=1\\n               m=60+m-x\\n          else:\\n               m=m-x\\nprint(cnt)\", \"x = int(input())\\nh, m = list(map(int, input().split()))\\nt = 60 * h + m\\ndef check(t):\\n    h = str(t // 60)\\n    m = str(t % 60)\\n    if '7' in h + m:\\n        return True\\n    return False\\nan = 0\\nwhile not check(t):\\n    t -= x\\n    an += 1\\n    if t < 0:\\n        t = 24 * 60 + t\\nprint(an)\\n\", \"x = int(input())\\nhh, mm = list(map(int, input().split()))\\ni= 0\\nwhile(True):\\n    if str(hh).find('7') >= 0 or str(mm).find('7') >= 0:\\n        break\\n    mm -= x\\n    if mm < 0:\\n        mm %= 60\\n        hh -= 1\\n        hh %= 24\\n    i+=1\\nprint(i)\\n\", \"def test(x):\\n\\treturn '7' in str(x)\\n\\nx = int(input())\\nh,m=[int(i)for i in input().split()]\\nans = 0\\nwhile (not test(h)) and (not test(m)):\\n\\tif m - x < 0:\\n\\t\\tif h == 0:\\n\\t\\t\\th = 23\\n\\t\\telse: h -= 1   \\n\\t\\tm = m - x + 60 \\n\\telse:m -= x\\t\\n\\tans += 1\\nprint(ans)\\t\\n\", \"x = int(input())\\n\\nhh, mm = map(int, input().split())\\n\\ndef ch(hh, mm):\\n    return '7' in str(hh) or '7' in str(mm)\\n\\ncount = 0\\nwhile not ch(hh, mm):\\n    count += 1\\n    if mm >= x:\\n        mm -= x\\n    else:\\n        hh -= 1\\n        mm -= x - 60\\n    if hh < 0:\\n        hh = 23\\nprint(count)\", \"x = int(input())\\nh,m = map(int,input().split())\\nans = 0\\nwhile (h % 10 != 7) and (m % 10 != 7):\\n\\tif m - x >= 0:\\n\\t\\tm -= x\\n\\telse:\\n\\t\\ttemp = x - m\\n\\t\\tm = 60 - temp\\n\\t\\tif h - 1 >= 0:\\n\\t\\t\\th -= 1\\n\\t\\telse:\\n\\t\\t\\th = 23\\n\\tans += 1\\n\\t# print(':'.join([str(h),str(m)]))\\nprint(ans)\", \"\\n\\nx = list(map(int, input().strip().split()))[0]\\nh, m = list(map(int, input().strip().split()))\\n\\n\\ncount = 0\\n\\nwhile True:\\n    a = str(h)\\n    b = str(m)\\n    if '7' in a:\\n        break\\n    if '7' in b:\\n        break\\n    count += 1\\n    m -= x\\n    if m < 0:\\n        h -= 1\\n        m += 60\\n    if h < 0:\\n        h += 24\\n\\nprint(count)\", \"x = int(input().strip())\\nfirst_line = input().strip()\\nhh = first_line.split()[0]\\nmm = first_line.split()[1]\\n\\nnum_snooze = 0\\n\\nwhile '7' not in hh and '7' not in mm:\\n    h = int(hh)\\n    m = int(mm)\\n\\n    m -= x\\n\\n    if m < 0:\\n        m += 60\\n        h -= 1\\n        if h < 0:\\n            h += 24\\n            \\n    num_snooze += 1\\n\\n    hh = str(h)\\n    mm = str(m)\\n\\nprint(num_snooze)\\n\\n\\n\\n\\n\\n\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n11 23\\n\",\n    \"5\\n01 07\\n\",\n    \"34\\n09 24\\n\",\n    \"2\\n14 37\\n\",\n    \"14\\n19 54\\n\",\n    \"42\\n15 44\\n\",\n    \"46\\n02 43\\n\",\n    \"14\\n06 41\\n\",\n    \"26\\n04 58\\n\",\n    \"54\\n16 47\\n\",\n    \"38\\n20 01\\n\",\n    \"11\\n02 05\\n\",\n    \"55\\n22 10\\n\",\n    \"23\\n10 08\\n\",\n    \"23\\n23 14\\n\",\n    \"51\\n03 27\\n\",\n    \"35\\n15 25\\n\",\n    \"3\\n12 15\\n\",\n    \"47\\n00 28\\n\",\n    \"31\\n13 34\\n\",\n    \"59\\n17 32\\n\",\n    \"25\\n11 03\\n\",\n    \"9\\n16 53\\n\",\n    \"53\\n04 06\\n\",\n    \"37\\n00 12\\n\",\n    \"5\\n13 10\\n\",\n    \"50\\n01 59\\n\",\n    \"34\\n06 13\\n\",\n    \"2\\n18 19\\n\",\n    \"46\\n06 16\\n\",\n    \"14\\n03 30\\n\",\n    \"40\\n13 37\\n\",\n    \"24\\n17 51\\n\",\n    \"8\\n14 57\\n\",\n    \"52\\n18 54\\n\",\n    \"20\\n15 52\\n\",\n    \"20\\n03 58\\n\",\n    \"48\\n07 11\\n\",\n    \"32\\n04 01\\n\",\n    \"60\\n08 15\\n\",\n    \"44\\n20 20\\n\",\n    \"55\\n15 35\\n\",\n    \"55\\n03 49\\n\",\n    \"23\\n16 39\\n\",\n    \"7\\n20 36\\n\",\n    \"35\\n16 42\\n\",\n    \"35\\n05 56\\n\",\n    \"3\\n17 45\\n\",\n    \"47\\n05 59\\n\",\n    \"15\\n10 13\\n\",\n    \"59\\n06 18\\n\",\n    \"34\\n17 18\\n\",\n    \"18\\n05 23\\n\",\n    \"46\\n17 21\\n\",\n    \"30\\n06 27\\n\",\n    \"14\\n18 40\\n\",\n    \"58\\n22 54\\n\",\n    \"26\\n19 44\\n\",\n    \"10\\n15 57\\n\",\n    \"54\\n20 47\\n\",\n    \"22\\n08 45\\n\",\n    \"48\\n18 08\\n\",\n    \"32\\n07 06\\n\",\n    \"60\\n19 19\\n\",\n    \"45\\n07 25\\n\",\n    \"29\\n12 39\\n\",\n    \"13\\n08 28\\n\",\n    \"41\\n21 42\\n\",\n    \"41\\n09 32\\n\",\n    \"9\\n21 45\\n\",\n    \"37\\n10 43\\n\",\n    \"3\\n20 50\\n\",\n    \"47\\n00 04\\n\",\n    \"15\\n13 10\\n\",\n    \"15\\n17 23\\n\",\n    \"43\\n22 13\\n\",\n    \"27\\n10 26\\n\",\n    \"55\\n22 24\\n\",\n    \"55\\n03 30\\n\",\n    \"24\\n23 27\\n\",\n    \"52\\n11 33\\n\",\n    \"18\\n22 48\\n\",\n    \"1\\n12 55\\n\",\n    \"1\\n04 27\\n\",\n    \"1\\n12 52\\n\",\n    \"1\\n20 16\\n\",\n    \"1\\n04 41\\n\",\n    \"1\\n20 21\\n\",\n    \"1\\n04 45\\n\",\n    \"1\\n12 18\\n\",\n    \"1\\n04 42\\n\",\n    \"1\\n02 59\\n\",\n    \"1\\n18 24\\n\",\n    \"1\\n02 04\\n\",\n    \"1\\n18 28\\n\",\n    \"1\\n18 01\\n\",\n    \"1\\n10 25\\n\",\n    \"1\\n02 49\\n\",\n    \"1\\n02 30\\n\",\n    \"1\\n18 54\\n\",\n    \"1\\n02 19\\n\",\n    \"1\\n05 25\\n\",\n    \"60\\n23 55\\n\",\n    \"60\\n08 19\\n\",\n    \"60\\n00 00\\n\",\n    \"60\\n08 24\\n\",\n    \"60\\n16 13\\n\",\n    \"60\\n08 21\\n\",\n    \"60\\n16 45\\n\",\n    \"60\\n08 26\\n\",\n    \"60\\n08 50\\n\",\n    \"60\\n05 21\\n\",\n    \"60\\n13 29\\n\",\n    \"60\\n05 18\\n\",\n    \"60\\n13 42\\n\",\n    \"60\\n05 07\\n\",\n    \"60\\n05 47\\n\",\n    \"60\\n21 55\\n\",\n    \"60\\n05 36\\n\",\n    \"60\\n21 08\\n\",\n    \"60\\n21 32\\n\",\n    \"60\\n16 31\\n\",\n    \"5\\n00 00\\n\",\n    \"2\\n06 58\\n\",\n    \"60\\n00 00\\n\",\n    \"2\\n00 00\\n\",\n    \"10\\n00 00\\n\",\n    \"60\\n01 00\\n\",\n    \"12\\n00 06\\n\",\n    \"1\\n00 01\\n\",\n    \"5\\n00 05\\n\",\n    \"60\\n01 01\\n\",\n    \"11\\n18 11\\n\",\n    \"60\\n01 15\\n\",\n    \"10\\n00 16\\n\",\n    \"60\\n00 59\\n\",\n    \"30\\n00 00\\n\",\n    \"60\\n01 05\\n\",\n    \"4\\n00 03\\n\",\n    \"4\\n00 00\\n\",\n    \"60\\n00 01\\n\",\n    \"6\\n00 03\\n\",\n    \"13\\n00 00\\n\",\n    \"1\\n18 01\\n\",\n    \"5\\n06 00\\n\",\n    \"60\\n04 08\\n\",\n    \"5\\n01 55\\n\",\n    \"8\\n00 08\\n\",\n    \"23\\n18 23\\n\",\n    \"6\\n00 06\\n\",\n    \"59\\n18 59\\n\",\n    \"11\\n00 10\\n\",\n    \"10\\n00 01\\n\",\n    \"59\\n00 00\\n\",\n    \"10\\n18 10\\n\",\n    \"5\\n00 01\\n\",\n    \"1\\n00 00\\n\",\n    \"8\\n00 14\\n\",\n    \"60\\n03 00\\n\",\n    \"60\\n00 10\\n\",\n    \"5\\n01 13\\n\",\n    \"30\\n02 43\\n\",\n    \"17\\n00 08\\n\",\n    \"3\\n00 00\\n\",\n    \"60\\n00 05\\n\",\n    \"5\\n18 05\\n\",\n    \"30\\n00 30\\n\",\n    \"1\\n00 06\\n\",\n    \"55\\n00 00\\n\",\n    \"8\\n02 08\\n\",\n    \"7\\n00 00\\n\",\n    \"6\\n08 06\\n\",\n    \"48\\n06 24\\n\",\n    \"8\\n06 58\\n\",\n    \"3\\n12 00\\n\",\n    \"5\\n01 06\\n\",\n    \"2\\n00 08\\n\",\n    \"3\\n18 03\\n\",\n    \"1\\n17 00\\n\",\n    \"59\\n00 48\\n\",\n    \"5\\n12 01\\n\",\n    \"55\\n01 25\\n\",\n    \"2\\n07 23\\n\",\n    \"10\\n01 10\\n\",\n    \"2\\n00 01\\n\",\n    \"59\\n00 01\\n\",\n    \"5\\n00 02\\n\",\n    \"4\\n01 02\\n\",\n    \"5\\n00 06\\n\",\n    \"42\\n00 08\\n\",\n    \"60\\n01 20\\n\",\n    \"3\\n06 00\\n\",\n    \"4\\n00 01\\n\",\n    \"2\\n00 06\\n\",\n    \"1\\n00 57\\n\",\n    \"6\\n00 00\\n\",\n    \"5\\n08 40\\n\",\n    \"58\\n00 55\\n\",\n    \"2\\n00 02\\n\",\n    \"1\\n08 01\\n\",\n    \"10\\n10 10\\n\",\n    \"60\\n01 11\\n\",\n    \"2\\n07 00\\n\",\n    \"15\\n00 03\\n\",\n    \"6\\n04 34\\n\",\n    \"16\\n00 16\\n\",\n    \"2\\n00 59\\n\",\n    \"59\\n00 08\\n\",\n    \"10\\n03 10\\n\",\n    \"3\\n08 03\\n\",\n    \"20\\n06 11\\n\",\n    \"4\\n01 00\\n\",\n    \"38\\n01 08\\n\",\n    \"60\\n00 06\\n\",\n    \"5\\n12 00\\n\",\n    \"6\\n01 42\\n\",\n    \"4\\n00 04\\n\",\n    \"60\\n04 05\\n\",\n    \"1\\n00 53\\n\",\n    \"5\\n08 05\\n\",\n    \"60\\n18 45\\n\",\n    \"60\\n06 23\\n\",\n    \"6\\n00 15\\n\",\n    \"58\\n00 06\\n\",\n    \"2\\n06 44\\n\",\n    \"1\\n08 00\\n\",\n    \"10\\n06 58\\n\",\n    \"59\\n00 58\\n\",\n    \"1\\n18 00\\n\",\n    \"50\\n00 42\\n\",\n    \"30\\n18 30\\n\",\n    \"60\\n21 59\\n\",\n    \"2\\n10 52\\n\",\n    \"56\\n00 00\\n\",\n    \"16\\n18 16\\n\",\n    \"5\\n01 05\\n\",\n    \"5\\n05 00\\n\",\n    \"5\\n23 59\\n\",\n    \"7\\n17 13\\n\",\n    \"58\\n00 00\\n\",\n    \"15\\n00 07\\n\",\n    \"59\\n08 00\\n\",\n    \"46\\n00 00\\n\",\n    \"59\\n01 05\\n\",\n    \"2\\n01 00\\n\",\n    \"60\\n00 24\\n\",\n    \"10\\n00 08\\n\",\n    \"10\\n00 06\\n\",\n    \"60\\n01 24\\n\",\n    \"50\\n00 10\\n\",\n    \"2\\n03 00\\n\",\n    \"4\\n19 04\\n\",\n    \"25\\n00 23\\n\",\n    \"10\\n01 01\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"0\\n\",\n    \"9\\n\",\n    \"12\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"26\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"8\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"13\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"0\\n\",\n    \"8\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"63\\n\",\n    \"10\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"17\\n\",\n    \"41\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"24\\n\",\n    \"30\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"11\\n\",\n    \"4\\n\",\n    \"7\\n\",\n    \"1\\n\",\n    \"21\\n\",\n    \"0\\n\",\n    \"6\\n\",\n    \"9\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"8\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"21\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"11\\n\",\n    \"0\\n\",\n    \"3\\n\",\n    \"17\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"5\\n\",\n    \"9\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"8\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"7\\n\",\n    \"7\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"8\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"1\\n\",\n    \"9\\n\",\n    \"1\\n\",\n    \"9\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"12\\n\",\n    \"6\\n\",\n    \"12\\n\",\n    \"6\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"4\\n\",\n    \"12\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"9\\n\",\n    \"73\\n\",\n    \"390\\n\",\n    \"7\\n\",\n    \"181\\n\",\n    \"37\\n\",\n    \"8\\n\",\n    \"31\\n\",\n    \"4\\n\",\n    \"74\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"8\\n\",\n    \"38\\n\",\n    \"7\\n\",\n    \"13\\n\",\n    \"8\\n\",\n    \"4\\n\",\n    \"91\\n\",\n    \"7\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"145\\n\",\n    \"11\\n\",\n    \"96\\n\",\n    \"47\\n\",\n    \"2\\n\",\n    \"62\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"37\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"73\\n\",\n    \"3\\n\",\n    \"47\\n\",\n    \"10\\n\",\n    \"7\\n\",\n    \"87\\n\",\n    \"18\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"14\\n\",\n    \"9\\n\",\n    \"7\\n\",\n    \"62\\n\",\n    \"9\\n\",\n    \"2\\n\",\n    \"16\\n\",\n    \"98\\n\",\n    \"1\\n\",\n    \"86\\n\",\n    \"185\\n\",\n    \"2\\n\",\n    \"0\\n\",\n    \"7\\n\",\n    \"49\\n\",\n    \"9\\n\",\n    \"0\\n\",\n    \"44\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"106\\n\",\n    \"74\\n\",\n    \"9\\n\",\n    \"8\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"184\\n\",\n    \"0\\n\",\n    \"61\\n\",\n    \"9\\n\",\n    \"1\\n\",\n    \"182\\n\",\n    \"2\\n\",\n    \"14\\n\",\n    \"8\\n\",\n    \"0\\n\",\n    \"25\\n\",\n    \"106\\n\",\n    \"24\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"56\\n\",\n    \"2\\n\",\n    \"37\\n\",\n    \"106\\n\",\n    \"12\\n\",\n    \"7\\n\",\n    \"49\\n\",\n    \"78\\n\",\n    \"92\\n\",\n    \"11\\n\",\n    \"6\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"13\\n\",\n    \"3\\n\",\n    \"7\\n\",\n    \"383\\n\",\n    \"1\\n\",\n    \"78\\n\",\n    \"8\\n\",\n    \"1\\n\",\n    \"9\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"87\\n\",\n    \"7\\n\",\n    \"2\\n\",\n    \"86\\n\",\n    \"133\\n\",\n    \"72\\n\",\n    \"0\\n\",\n    \"7\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"8\\n\",\n    \"2\\n\",\n    \"211\\n\",\n    \"7\\n\",\n    \"37\\n\",\n    \"37\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"271\\n\",\n    \"17\\n\",\n    \"16\\n\",\n    \"43\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/916/A",
  "starter_code": ""
}