{
  "task_id": "APPS/108",
  "problem_id": 108,
  "prompt": "You are given a string s consisting of |s| small english letters.\n\nIn one move you can replace any character of this string to the next character in alphabetical order (a will be replaced with b, s will be replaced with t, etc.). You cannot replace letter z with any other letter.\n\nYour target is to make some number of moves (not necessary minimal) to get string abcdefghijklmnopqrstuvwxyz (english alphabet) as a subsequence. Subsequence of the string is the string that is obtained by deleting characters at some positions. You need to print the string that will be obtained from the given string and will be contain english alphabet as a subsequence or say that it is impossible.\n\n\n-----Input-----\n\nThe only one line of the input consisting of the string s consisting of |s| (1 \u2264 |s| \u2264 10^5) small english letters.\n\n\n-----Output-----\n\nIf you can get a string that can be obtained from the given string and will contain english alphabet as a subsequence, print it. Otherwise print \u00ab-1\u00bb (without quotes).\n\n\n-----Examples-----\nInput\naacceeggiikkmmooqqssuuwwyy\n\nOutput\nabcdefghijklmnopqrstuvwxyz\n\nInput\nthereisnoanswer\n\nOutput\n-1",
  "solutions": "[\"s = list(input())\\ntarget = 'abcdefghijklmnopqrstuvwxyz'\\nind_t = 0\\nind_s = 0\\nwhile ind_s < len(s) and ind_t < 26:\\n  if ord(s[ind_s]) <= ord(target[ind_t]):\\n    s[ind_s] = target[ind_t]\\n    ind_t += 1\\n    ind_s += 1\\n  else:\\n    ind_s += 1\\nif ind_t == 26:\\n  print(''.join(s))\\nelse:\\n  print(-1)\", \"\\na = list(input())\\ni = 0\\nk = 0\\nl = len(a)\\nwhile i<l:\\n\\tif a[i]<=chr(97+k):\\n\\t\\tif k<26:\\n\\t\\t\\ta[i] = chr(97+k)\\n\\t\\t\\tk+=1\\n\\ti+=1\\nif k==26:\\n\\tprint (''.join(a))\\nelse:\\n\\tprint (-1)\", \"s = list(input())\\nst = 'a'\\nfor i in range(len(s)):\\n    if (s[i] <= st):\\n        s[i] = st\\n        st = chr(ord(st) + 1)\\n    if st > 'z':\\n        break\\nif (st <= 'z'):\\n    print(-1)\\nelse:\\n    print(*s,sep = '')\", \"s = input()\\nt = 97\\no = ''\\nfor i in s:\\n    if ord(i)<= t and t <= 122:\\n        o += chr(t)\\n        t += 1\\n    else:\\n        o += i\\nif t != 123:print(-1)\\nelse:print(o)\\n\", \"s = list(input())\\n\\na = \\\"abcdefghijklmnopqrstuvwxyz\\\"\\n\\ni = 0\\nj = 0\\n\\nwhile i < len(a) and j < len(s):\\n\\tif s[j] <= a[i]:\\n\\t\\ts[j] = a[i]\\n\\t\\ti += 1\\n\\tj += 1\\n\\nif i == len(a):\\n\\tprint(\\\"\\\".join(s))\\nelse:\\n\\tprint(-1)\\n\", \"s = input()\\nn = len(s)\\nL = list(s)\\nS = 'abcdefghijklmnopqrstuvwxyz'\\nind = 0\\nfor i in range(n):\\n    if (ind < 26 and s[i] <= S[ind]):\\n        L[i] = S[ind]\\n        ind += 1\\n        \\n\\n    \\nans = \\\"\\\"\\nfor item in L:\\n    ans += item\\n\\nif (ind >= 26):\\n    print(ans)\\nelse:\\n    print(-1)\\n    \\n\", \"s=input()\\narr=[]\\nfor i in s:\\n    arr.append(i)\\nc='a'\\nd=0\\nfor i in range(len(arr)):\\n    if arr[i]<=c:\\n        arr[i]=c\\n        if c=='z':\\n            d=1\\n            break\\n        c=chr(ord(c)+1)\\n\\nif d==0:\\n    print(-1)\\nelse:\\n    print(*arr,sep='')\\n\", \"s=input()\\nnewst=[]\\n\\ncurr='a'\\n\\nfor k in s:\\n\\tif curr>=k and curr<='z':\\n\\t\\tnewst.append(curr)\\n\\t\\tcurr=chr(ord(curr)+1)\\n\\telse:\\n\\t\\tnewst.append(k)\\nif curr>'z':\\n\\tfor k in newst:\\n\\t\\tprint(k,end='')\\n\\tprint()\\nelse:\\n\\tprint(-1)\", \"import sys\\n# from io import StringIO\\n# sys.stdin = StringIO(open(__file__.replace('.py', '.in')).read())\\n\\ns = list(input())\\n\\nif len(s) < 26:\\n    print(-1)\\n    return\\n\\nal = list('abcdefghijklmnopqrstuvwxyz')\\ni = 0\\nfor j in range(len(s)):\\n    c = s[j]\\n    if ord(c) <= ord(al[i]):\\n        s[j] = al[i]\\n        i += 1\\n        if i == 26:\\n            break\\n\\nif i >= 26:\\n    print(''.join(s))\\nelse:\\n    print(-1)\", \"s=input()\\nans=s+''\\nl=len(s)\\na='abcdefghijklmnopqrstuvwxyz'\\ni=0\\nfor j in range(26):\\n    while s[i]>a[j]:\\n        i+=1\\n        if i==l:\\n            print(-1)\\n            return\\n    ans=ans[:i]+a[j]+ans[i+1:]\\n    i+=1\\n    if j!=25 and i==l:\\n        print(-1)\\n        return\\nprint(ans)\\n\", \"s = list(input())\\nch = 'a'\\nfor i in range(len(s)):\\n    if s[i] <= ch:\\n        s[i] = ch\\n        if ch == 'z':\\n            ans = ''\\n            for i in range(len(s)):\\n                ans += s[i]\\n            print(ans)\\n            break\\n        ch = chr(ord(ch) + 1)\\nelse:\\n    print(-1)\", \"s = str(input())\\n\\ncurrent = ord('a')\\n\\nn = len(s)\\n\\nans = ''\\n\\nfor i in range(n):\\n    if ord(s[i]) <= current and current < 123:\\n        ans += chr(current)\\n        current += 1\\n    else: ans += s[i]\\n    \\nif current == 123: print(ans)\\n\\nelse: print(-1)\", \"#!/usr/bin/env python3\\n\\nimport sys\\n\\ns = sys.stdin.readline().strip()\\nalph = 'abcdefghijklmnopqrstuvwxyz'\\n\\nres = []\\nia = 0\\ndone = False\\n\\nfor i, c in enumerate(s):\\n\\tif c <= alph[ia]:\\n\\t\\tres.append(alph[ia])\\n\\t\\tia += 1\\n\\t\\tif ia == len(alph):\\n\\t\\t\\tdone = True\\n\\t\\t\\tidone = i\\n\\t\\t\\tbreak\\n\\telse:\\n\\t\\tres.append(c)\\n\\nif done:\\n\\tprint(''.join(res) + s[idone +1:])\\nelse:\\n\\tprint ('-1')\\n\\n\", \"s = list(input())\\nwant = \\\"abcdefghijklmnopqrstuvwxyz\\\"\\n\\nj = 0\\nfor i in range(len(s)):\\n\\n\\tif j >= 26:\\n\\t\\tbreak\\n\\n\\tif s[i] <= want[j]:\\n\\t\\ts[i] = want[j]\\n\\t\\tj += 1\\n\\n\\nif j < 26:\\n\\tprint(-1)\\nelse:\\n\\tans = \\\"\\\".join(s)\\n\\tprint(ans)\\n\", \"from string import ascii_lowercase\\ns = list(input())\\nsymbs = ascii_lowercase\\n\\ncursymbol = 0\\nfor d in range(len(s)):\\n    if s[d] <= ascii_lowercase[cursymbol]:\\n        s[d] = ascii_lowercase[cursymbol]\\n        if ascii_lowercase[cursymbol] == 'z':\\n            print(''.join(s))\\n            return\\n        cursymbol += 1\\nprint(-1)\\n\", \"def solve():\\n    S = input()\\n    counter = 97\\n    res = \\\"\\\"\\n    for s in list(S):\\n        s = ord(s)\\n        if counter >= 123:\\n            res += chr(s)\\n            continue\\n\\n        if s <= counter:\\n            res += chr(counter)\\n            counter += 1\\n        else:\\n            res += chr(s)\\n\\n    if counter == 123:\\n        print(res)\\n    else:\\n        print(-1)\\n\\ndef __starting_point():\\n    solve()\\n\\n\\n\\n__starting_point()\", \"s = input()\\nk = 0\\nn = 97\\na = []\\nfor i in s:\\n    a.append(i)\\nfor i in range(len(s)):\\n    if ord(a[i]) <= n:\\n        a[i] = chr(n)\\n        n+=1\\n        k+=1\\n    if k == 26:\\n        break\\nif k < 26:\\n    print(-1)\\nelse:\\n    print(*a,sep = '')\", \"s=input()\\nalpha=\\\"abcdefghijklmnopqrstuvwxyz\\\"\\nc=0\\ncnt=0\\nans=\\\"\\\"\\nwhile cnt<len(s) and c<26:\\n    if (ord(s[cnt])-ord('a'))<=c:\\n        ans+=alpha[c]\\n        c+=1\\n    else:\\n        ans+=s[cnt]\\n    cnt+=1\\nif c==26:\\n    ans+=s[cnt:]\\n    print(ans)\\nelse:\\n    print(-1)\\n\", \"s = [c for c in input()]\\n\\ncurrent_char = 97\\n\\nfor i in range(len(s)):\\n    if current_char == 123:\\n        continue\\n    elif ord(s[i]) <= current_char:\\n        s[i] = chr(current_char)\\n        current_char += 1\\n\\nif current_char < 123:\\n    print(-1)\\nelse:\\n    print(''.join(s))\\n\", \"s = list(input())\\nif len(s) < 26 :\\n    print(-1)\\n    return\\n\\nalpha = 'abcdefghijklmnopqrstuvwxyz'\\ncidx = 0\\n\\nfor i in range(len(s)) :\\n    if s[i] <= alpha[cidx] :\\n        s[i] = alpha[cidx]\\n        cidx += 1\\n    if cidx == 26 :\\n        print(''.join(s))\\n        return\\nelse :\\n    print(-1)\", \"import math\\n\\ns = input()\\nalf = \\\"abcdefghijklmnopqrstuvwxyz\\\"\\nn = -1\\n\\ndef con_str(string, ch, i):\\n    return string[:i] + ch + string[i+1:]\\n\\nfor i in alf:\\n    flag = False\\n    for j in range(n+1, len(s)):\\n        if s[j]<=i:\\n            n = j\\n            s = con_str(s, i, j)\\n            flag = True\\n            break\\n    if not(flag):\\n        print(-1)\\n        return\\nprint(s)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"aacceeggiikkmmooqqssuuwwyy\\n\",\n    \"thereisnoanswer\\n\",\n    \"jqcfvsaveaixhioaaeephbmsmfcgdyawscpyioybkgxlcrhaxs\\n\",\n    \"rtdacjpsjjmjdhcoprjhaenlwuvpfqzurnrswngmpnkdnunaendlpbfuylqgxtndhmhqgbsknsy\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxxx\\n\",\n    \"abcdefghijklmnopqrstuvwxya\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"cdaaaaaaaaabcdjklmnopqrstuvwxyzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\n\",\n    \"zazaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abbbefghijklmnopqrstuvwxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmaopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyx\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz\\n\",\n    \"zaaaazaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaafghijklmnopqrstuvwxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaz\\n\",\n    \"abcdefghijklmnopqrstuvwaxy\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnapqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvnxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzzzz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aacceeggiikkmmooqqssuuwwya\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aacdefghijklmnopqrstuvwxyyy\\n\",\n    \"abcaefghijklmnopqrstuvwxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zaaacaaaaaaaaaaaaaaaaaaaayy\\n\",\n    \"abcdedccdcdccdcdcdcdcdcddccdcdcdc\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdecdcdcddcdcdcdcdcdcdcd\\n\",\n    \"abaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"a\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaadefghijklmnopqrstuvwxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abbbbbbbbbbbbbbbbbbbbbbbbz\\n\",\n    \"aacceeggiikkmmaacceeggiikkmmooaacceeggiikkmmaacceeggiikkmmooqqssuuwwzy\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"phqghumeaylnlfdxfircvscxggbwkfnqduxwfnfozvsrtkjprepggxrpnrvystmwcysyycqpevikeffmznimkkasvwsrenzkycxf\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaap\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zabcdefghijklmnopqrstuvwxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"rveviaomdienfygifatviahordebxazoxflfgzslhyzowhxbhqzpsgellkoimnwkvhpbijorhpggwfjexivpqbcbmqjyghkbq\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"xtlsgypsfadpooefxzbcoejuvpvaboygpoeylfpbnpljvrvipyamyehwqnqrqpmxujjloovaowuxwhmsncbxcoksfzkvatxdknly\\n\",\n    \"jqcfvsaveaixhioaaeephbmsmfcgdyawscpyioybkgxlcrhaxsa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"wlrbbmqbhcdarzowkkyhiddqscdxrjmowfrxsjybldbefsarcbynecdyggxxpklorellnmpapqfwkhopkmcoqh\\n\",\n    \"abadefghijklmnopqrstuvwxyz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zazsazcbbbbbbbbbbbbbbbbbbbbbbb\\n\",\n    \"zazsazcbbbbbbbbbbbbbbbbbbbbbyb\\n\",\n    \"bbcdefghijklmnopqrstuvwxyzzz\\n\",\n    \"zaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zzzzzaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"kkimnfjbbgggicykcciwtoazomcvisigagkjwhyrmojmoebnqoadpmockfjxibdtvrbedrsdoundbcpkfdqdidqdmxdltink\\n\",\n    \"cawgathqceccscakbazmhwbefvygjbcfyihcbgga\\n\",\n    \"acrsbyszsbfslzbqzzamcmrypictkcheddehvxdipaxaannjodzyfxgtfnwababzjraapqbqbfzhbiewlzz\\n\",\n    \"ggcebbheeblbioxdvtlrtkxeuilonazpebcbqpzz\\n\",\n    \"zzzzabcdefghijklmnopqrstuvwxy\\n\",\n    \"zabcdefghijklmnopqrstuvwxy\\n\",\n    \"babcdefghijklmnopqrstuvwxyz\\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaz\\n\",\n    \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\"\n  ],\n  \"outputs\": [\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"cdabcdefghijklmnopqrstuvwxyzxyzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\\n\",\n    \"zazbcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaz\\n\",\n    \"zabcdzefghijklmnopqrstuvwxyzaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzzzz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzy\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zabcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzcdcdcdc\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"-1\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzmmooaacceeggiikkmmaacceeggiikkmmooqqssuuwwzy\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"-1\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zabcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyza\\n\",\n    \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzabcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"rveviaomdienfygifbtvichordefxgzoxhlijzslkyzowlxmnqzpsopqrstuvwxyzhpbijorhpggwfjexivpqbcbmqjyghkbq\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"xtlsgypsfadpooefxzbcoejuvpvdeoygpofylgphnpljvrvipyjmyklwqnqrqpmxunopqrvstwuxwvwxyzbxcoksfzkvatxdknly\\n\",\n    \"jqcfvsavebixhiocdefphgmsmhijkylwsmpynoypqrxstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"wlrbbmqbhcdarzowkkyhiddqscdxrjmowfrxsjybldcefsdrefynghiyjkxxplmornopqrstuvwxyzopkmcoqh\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\",\n    \"zazsbzcdefghijklmnopqrstuvwxyz\\n\",\n    \"zazsbzcdefghijklmnopqrstuvwxyz\\n\",\n    \"-1\\n\",\n    \"zabcdefghijklmnopqrstuvwxyz\\n\",\n    \"zzzzzabcdefghijklmnopqrstuvwxyza\\n\",\n    \"kkimnfjbbgggicykcciwtoazomcvisigbgkjwhyrmojmoecnqodepmofkgjxihitvrjklrsmounopqrstuvwxyzdmxdltink\\n\",\n    \"-1\\n\",\n    \"acrsbyszscfslzdqzzemfmrypigtkhijklmnvxopqrxstuvwxyzyfxgtfnwababzjraapqbqbfzhbiewlzz\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"babcdefghijklmnopqrstuvwxyz\\n\",\n    \"-1\\n\",\n    \"abcdefghijklmnopqrstuvwxyz\\n\",\n    \"abcdefghijklmnopqrstuvwxyzaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/946/C",
  "starter_code": ""
}