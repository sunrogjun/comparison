{
  "task_id": "APPS/216",
  "problem_id": 216,
  "prompt": "You are given a sequence a consisting of n integers. You may partition this sequence into two sequences b and c in such a way that every element belongs exactly to one of these sequences. \n\nLet B be the sum of elements belonging to b, and C be the sum of elements belonging to c (if some of these sequences is empty, then its sum is 0). What is the maximum possible value of B - C?\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 100) \u2014 the number of elements in a.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} ( - 100 \u2264 a_{i} \u2264 100) \u2014 the elements of sequence a.\n\n\n-----Output-----\n\nPrint the maximum possible value of B - C, where B is the sum of elements of sequence b, and C is the sum of elements of sequence c.\n\n\n-----Examples-----\nInput\n3\n1 -2 0\n\nOutput\n3\n\nInput\n6\n16 23 16 15 42 8\n\nOutput\n120\n\n\n\n-----Note-----\n\nIn the first example we may choose b = {1, 0}, c = { - 2}. Then B = 1, C =  - 2, B - C = 3.\n\nIn the second example we choose b = {16, 23, 16, 15, 42, 8}, c = {} (an empty sequence). Then B = 120, C = 0, B - C = 120.",
  "solutions": "[\"\\nn=int(input())\\narr= list(map(int,input().strip().split(' ')))\\ns = 0\\nfor i in range(n):\\n   s+=abs(arr[i])\\nprint(s)\", \"n = int(input())\\na = [int(v) for v in input().split()]\\n\\nprint(sum(abs(v) for v in a))\\n\", \"n = int(input())\\narr = list(map(int, input().split()))\\nb = c = 0\\nfor val in arr:\\n    if val >= 0:\\n        b += val\\n    else:\\n        c += val\\nprint(b - c)\", \"n = int(input())\\na = list(map(int, input().split()))\\nans = 0\\nfor i in a:\\n    ans += abs(i)\\n\\nprint(ans)\\n\", \"n = int(input())\\na = [int(i) for i in input().split()]\\nb = [i for i in a if i >= 0]\\nc = [i for i in a if i < 0]\\nprint(sum(b) - sum(c))\", \"n = int(input())\\nA = list(map(int, input().split()))\\nB = [abs(a) for a in A]\\nprint(sum(B))\", \"input()\\na=list(map(int,input().split()))\\nprint(sum(x for x in a if x > 0)-sum([x for x in a if x<0]))\\n\", \"from sys import stdin, stdout\\n\\nn = int(stdin.readline())\\nfirst, second = 0, 0\\n\\nvalues = list(map(int, stdin.readline().split()))\\nfor v in values:\\n    if v >= 0:\\n        first += v\\n    else:\\n        second += v\\n\\nstdout.write(str(first - second))\", \"n = int(input())\\nv = [int(x) for x in input().split()]\\nans = 0\\nfor x in v:\\n\\tans += x if x > 0 else -x\\nprint(ans)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nb = []\\nc = []\\nfor k in a:\\n    if k> 0:\\n        b.append(k)\\n    else:\\n        c.append(k)\\n\\nprint(sum(b)-sum(c))\", \"n = int(input())\\nL = list(map(int, input().split()))\\nL = list(map(abs, L))\\nprint(sum(L))\\n\", \"\\nn = int(input())\\na = list(map(int,input().split()))\\nt = min(a)\\nif t<0:\\n\\tp = 0\\n\\tn = 0\\n\\tfor i in a:\\n\\t\\tif i>0:\\n\\t\\t\\tp+=i\\n\\t\\telse:\\n\\t\\t\\tn+=i\\n\\tprint (p-n)\\nelse:\\n\\tprint (sum(a))\", \"n = int(input())\\na = list(map(int, input().split()))\\nb = [i for i in a if i < 0]\\nprint(sum(a) - 2 * sum(b))\\n\", \"R=lambda:map(int,input().split())\\n\\nn = int(input())\\n\\na = list(R())\\n\\ns = 0 \\n\\nfor i in range(n):\\n    if a[i] >= 0:\\n        s += a[i]\\n    else: s -= a[i]\\n    \\nprint(s)\", \"n = int(input())\\na = list(map(int, input().split()))\\nb=[i for i in a if i > 0]\\nc=[i for i in a if i <= 0]\\nsb = 0\\nsc = 0\\nif len(b) > 0:\\n    sb = sum(b)\\nif len(c) > 0:\\n    sc = sum(c)\\nprint(sb-sc)\\n\", \"n = int(input())\\n\\nlst = []\\nfor x in input().split():\\n    lst.append(int(x))\\n\\nsum_1 = 0\\nsum_2 = 0\\nfor x in lst:\\n    if x >= 0:\\n        sum_1 += x\\n    else:\\n        sum_2 += x\\n\\nprint(sum_1 - sum_2)\\n\", \"input()\\nprint(sum(map(abs, map(int, input().split()))))\", \"def read():\\n    return list(map(int,input().split()))\\nn=int(input())\\na=read()\\nB=0\\nC=0\\nfor i in a:\\n    if i>0:\\n        B+=i\\n    else:\\n        C+=i\\nprint(B-C)\\n\", \"n=int(input())\\na=[int(x) for x in input().split()]\\nb=0\\nc=0\\nfor i in range(len(a)):\\n    if a[i]<0:\\n        c+=a[i]*(-1)\\n    elif a[i]>=0:\\n        b+=a[i]\\nans=b+c\\nprint(ans)\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\nnum = 0\\nfor i in range(n):\\n    if a[i] < 0:\\n        num += -1 * a[i]\\n    else:\\n        num += a[i]\\n\\nprint(num)\", \"n=int(input())\\na=[int(x) for x in input().split()]\\nb=[]\\nc=[]\\nfor i in a:\\n\\tif i>=0:\\n\\t\\tb.append(i)\\n\\telse:\\n\\t\\tc.append(i)\\nprint(sum(b)-sum(c))\", \"n = int(input())\\na= list(map(int,input().split()))\\nfor i in range(len(a)):\\n    a[i] = abs(a[i])\\nprint(sum(a))\", \"n = int(input())\\na = list(map(int,input().split(\\\" \\\")))\\n\\nsumv = 0\\nfor i in range(n):\\n\\tif a[i] < 0:\\n\\t\\tsumv -= a[i]\\n\\telse:\\n\\t\\tsumv += a[i]\\n\\nprint(sumv)\", \"n = int(input())\\nseq = list(map(int, input().split(' ')))\\n\\ntot = 0\\nfor x in seq:\\n    if x < 0:\\n        tot += - x\\n    else:\\n        tot += x\\n\\nprint(tot)\\n\", \"def solve():\\n    n = int(input())\\n    A = list(map(int, input().split()))\\n\\n    res = 0\\n    for a in A:\\n        if a >= 0:\\n            res += a\\n        else:\\n            res -= a\\n\\n    print(res)\\n\\n\\ndef __starting_point():\\n    solve()\\n\\n\\n\\n__starting_point()\"]",
  "input_output": "{\n  \"inputs\": [\n    \"3\\n1 -2 0\\n\",\n    \"6\\n16 23 16 15 42 8\\n\",\n    \"1\\n-1\\n\",\n    \"100\\nn\",\n    \"2\\n-1 5\\n\",\n    \"3\\n-2 0 1\\n\",\n    \"12\\n-1 -2 -3 4 4 -6 -6 56 3 3 -3 3\\n\",\n    \"4\\n1 -1 1 -1\\n\",\n    \"4\\n100 -100 100 -100\\n\",\n    \"3\\n-2 -5 10\\n\",\n    \"5\\n1 -2 3 -4 5\\n\",\n    \"3\\n-100 100 -100\\n\",\n    \"6\\n1 -1 1 -1 1 -1\\n\",\n    \"6\\n2 -2 2 -2 2 -2\\n\",\n    \"9\\n12 93 -2 0 0 0 3 -3 -9\\n\",\n    \"6\\n-1 2 4 -5 -3 55\\n\",\n    \"6\\n-12 8 68 -53 1 -15\\n\",\n    \"2\\n-2 1\\n\",\n    \"3\\n100 -100 100\\n\",\n    \"5\\n100 100 -1 -100 2\\n\",\n    \"6\\n-5 -4 -3 -2 -1 0\\n\",\n    \"6\\n4 4 4 -3 -3 2\\n\",\n    \"2\\n-1 2\\n\",\n    \"1\\n100\\n\",\n    \"5\\n-1 -2 3 1 2\\n\",\n    \"5\\n100 -100 100 -100 100\\n\",\n    \"5\\n1 -1 1 -1 1\\n\",\n    \"4\\n0 0 0 -1\\n\",\n    \"5\\n100 -100 -1 2 100\\n\",\n    \"2\\n75 0\\n\",\n    \"4\\n55 56 -59 -58\\n\",\n    \"2\\n9 71\\n\",\n    \"2\\n9 70\\n\",\n    \"2\\n9 69\\n\",\n    \"2\\n100 -100\\n\",\n    \"4\\n-9 4 -9 5\\n\",\n    \"42\\n91 -27 -79 -56 80 -93 -23 10 80 94 61 -89 -64 81 34 99 31 -32 -69 92 79 -9 73 66 -8 64 99 99 58 -19 -40 21 1 -33 93 -23 -62 27 55 41 57 36\\n\",\n    \"7\\n-1 2 2 2 -1 2 -1\\n\",\n    \"6\\n-12 8 17 -69 7 -88\\n\",\n    \"3\\n1 -2 5\\n\",\n    \"6\\n-2 3 -4 5 6 -1\\n\",\n    \"2\\n-5 1\\n\",\n    \"4\\n2 2 -2 4\\n\",\n    \"68\\n21 47 -75 -25 64 83 83 -21 89 24 43 44 -35 34 -42 92 -96 -52 -66 64 14 -87 25 -61 -78 83 -96 -18 95 83 -93 -28 75 49 87 65 -93 -69 -2 95 -24 -36 -61 -71 88 -53 -93 -51 -81 -65 -53 -46 -56 6 65 58 19 100 57 61 -53 44 -58 48 -8 80 -88 72\\n\",\n    \"5\\n5 5 -10 -1 1\\n\",\n    \"3\\n-1 2 3\\n\",\n    \"76\\n57 -38 -48 -81 93 -32 96 55 -44 2 38 -46 42 64 71 -73 95 31 -39 -62 -1 75 -17 57 28 52 12 -11 82 -84 59 -86 73 -97 34 97 -57 -85 -6 39 -5 -54 95 24 -44 35 -18 9 91 7 -22 -61 -80 54 -40 74 -90 15 -97 66 -52 -49 -24 65 21 -93 -29 -24 -4 -1 76 -93 7 -55 -53 1\\n\",\n    \"5\\n-1 -2 1 2 3\\n\",\n    \"4\\n2 2 -2 -2\\n\",\n    \"6\\n100 -100 100 -100 100 -100\\n\",\n    \"100\\n-59 -33 34 0 69 24 -22 58 62 -36 5 45 -19 -73 61 -9 95 42 -73 -64 91 -96 2 53 -8 82 -79 16 18 -5 -53 26 71 38 -31 12 -33 -1 -65 -6 3 -89 22 33 -27 -36 41 11 -47 -32 47 -56 -38 57 -63 -41 23 41 29 78 16 -65 90 -58 -12 6 -60 42 -36 -52 -54 -95 -10 29 70 50 -94 1 93 48 -71 -77 -16 54 56 -60 66 76 31 8 44 -61 -74 23 37 38 18 -18 29 41\\n\",\n    \"2\\n-1 1\\n\",\n    \"3\\n1 -2 100\\n\",\n    \"5\\n1 -2 3 1 2\\n\",\n    \"10\\n100 -10 -100 10 10 10 10 10 10 10\\n\",\n    \"4\\n2 0 -2 4\\n\",\n    \"4\\n3 -3 1 -1\\n\",\n    \"3\\n1 -1 1\\n\",\n    \"4\\n2 5 -2 4\\n\",\n    \"2\\n-2 2\\n\",\n    \"3\\n1 -2 1\\n\",\n    \"5\\n-1 -2 1 1 -1\\n\",\n    \"4\\n-2 0 2 4\\n\",\n    \"8\\n-42 7 87 -16 -5 65 -88 1\\n\",\n    \"3\\n1 -3 4\\n\",\n    \"1\\n1\\n\",\n    \"2\\n0 1\\n\",\n    \"3\\n-1 2 -1\\n\",\n    \"18\\n-21 12 65 66 -24 62 82 35 -45 -47 28 37 5 -32 22 -14 -69 -95\\n\",\n    \"4\\n-1 1 -1 1\\n\",\n    \"5\\n-1 2 1 1 1\\n\",\n    \"3\\n1 1 1\\n\"\n  ],\n  \"outputs\": [\n    \"3\\n\",\n    \"120\\n\",\n    \"1\\n\",\n    \"10000\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"94\\n\",\n    \"4\\n\",\n    \"400\\n\",\n    \"17\\n\",\n    \"15\\n\",\n    \"300\\n\",\n    \"6\\n\",\n    \"12\\n\",\n    \"122\\n\",\n    \"70\\n\",\n    \"157\\n\",\n    \"3\\n\",\n    \"300\\n\",\n    \"303\\n\",\n    \"15\\n\",\n    \"20\\n\",\n    \"3\\n\",\n    \"100\\n\",\n    \"9\\n\",\n    \"500\\n\",\n    \"5\\n\",\n    \"1\\n\",\n    \"303\\n\",\n    \"75\\n\",\n    \"228\\n\",\n    \"80\\n\",\n    \"79\\n\",\n    \"78\\n\",\n    \"200\\n\",\n    \"27\\n\",\n    \"2348\\n\",\n    \"11\\n\",\n    \"201\\n\",\n    \"8\\n\",\n    \"21\\n\",\n    \"6\\n\",\n    \"10\\n\",\n    \"3991\\n\",\n    \"22\\n\",\n    \"6\\n\",\n    \"3787\\n\",\n    \"9\\n\",\n    \"8\\n\",\n    \"600\\n\",\n    \"4362\\n\",\n    \"2\\n\",\n    \"103\\n\",\n    \"9\\n\",\n    \"280\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"3\\n\",\n    \"13\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"8\\n\",\n    \"311\\n\",\n    \"8\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"4\\n\",\n    \"761\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"3\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/946/A",
  "starter_code": ""
}