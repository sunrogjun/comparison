{
  "task_id": "APPS/463",
  "problem_id": 463,
  "prompt": "There is an array with n elements a_1, a_2, ..., a_{n} and the number x.\n\nIn one operation you can select some i (1 \u2264 i \u2264 n) and replace element a_{i} with a_{i} & x, where & denotes the bitwise and operation.\n\nYou want the array to have at least two equal elements after applying some operations (possibly, none). In other words, there should be at least two distinct indices i \u2260 j such that a_{i} = a_{j}. Determine whether it is possible to achieve and, if possible, the minimal number of operations to apply.\n\n\n-----Input-----\n\nThe first line contains integers n and x (2 \u2264 n \u2264 100 000, 1 \u2264 x \u2264 100 000), number of elements in the array and the number to and with.\n\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 100 000), the elements of the array.\n\n\n-----Output-----\n\nPrint a single integer denoting the minimal number of operations to do, or -1, if it is impossible.\n\n\n-----Examples-----\nInput\n4 3\n1 2 3 7\n\nOutput\n1\n\nInput\n2 228\n1 1\n\nOutput\n0\n\nInput\n3 7\n1 2 3\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first example one can apply the operation to the last element of the array. That replaces 7 with 3, so we achieve the goal in one move.\n\nIn the second example the array already has two equal elements.\n\nIn the third example applying the operation won't change the array at all, so it is impossible to make some pair of elements equal.",
  "solutions": "[\"n, x = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nb = [0] * 1000000\\nans = 0\\ngo = False\\n\\nfor i in a:\\n    b[i] += 1\\n    if b[i] > 1:\\n        go = True\\n\\nif go:\\n    print(ans)\\nelse:\\n    for i in a:\\n        b[i] -= 1\\n        if b[i & x] + 1 > 1:\\n            go = True\\n            ans = 1\\n            break\\n        \\n        b[i] += 1\\n    \\n    if go:\\n        print(ans)\\n    else:\\n        c = [i & x for i in a]\\n        b = [0] * 1000000\\n        for i in c:\\n            b[i] += 1\\n            if (b[i] > 1):\\n                ans = 2\\n                go = True\\n                break\\n        if go:\\n            print(ans)\\n        else:\\n            print(-1)\\n\", \"n, x= list(map(int, input().split()))\\n\\ndata = list(map(int,input().split()))\\n\\ns = set(data)\\n\\nif len(s) < len(data):\\n    print(0)\\n    return\\n\\n\\nanswer = -1\\n\\nss = set()\\nprevs = set()\\n\\nfor el in data:\\n    curr = el & x\\n    \\n    if curr in prevs or el in ss:\\n        answer = 1\\n\\n    prevs.add(el)\\n\\n    if curr in ss and answer != 1:\\n        answer = 2\\n        \\n    ss.add(curr)\\n\\nprint(answer)\\n\\n    \\n\", \"import sys\\nimport os\\n\\ndef solve(a, x):\\n    occ = dict()\\n    for k in a:\\n        if k in occ:\\n            return 0\\n        else:\\n            occ[k] = True\\n\\n    two = False\\n    occx = dict()\\n    for k in a:\\n        if k & x == k:\\n            continue\\n        elif k & x in occ:\\n            return 1\\n        elif k & x in occx:\\n            two = True\\n        else:\\n            occx[k & x] = True\\n\\n    return 2 if two else -1\\n\\ndef main():\\n    n, x = map(int, input().split())\\n\\n    a = list(map(int, input().split()))\\n\\n    print(solve(a, x))\\n\\ndef __starting_point():\\n    main()\\n__starting_point()\", \"n, x = [int(v) for v in input().split()]\\na = [int(v) for v in input().split()]\\n\\nsa = set(a)\\n\\nif len(sa) < n:\\n    print(0)\\nelse:\\n    la = [v & x for v in a if v & x != v]\\n    if set(la) & sa:\\n        print(1)\\n    else:\\n        if len(set(la)) < len(la):\\n            print(2)\\n        else:\\n            print(-1)\\n\", \"n, x = list(map(int, input().split()))\\na = sorted(map(int, input().split()))\\ns = set(a)\\nb = sorted([u & x for u in a])\\nt = set(b)\\n\\nif len(s) < len(a):\\n    print(0)\\nelif any([u != (u & x) and (u & x) in s for u in a]):\\n    print(1)\\nelif len(t) < len(b):\\n    print(2)\\nelse:\\n    print(-1)\\n\", \"n, x = list(map(int,input().split()))\\na = set(int(i) for i in input().split())\\nif len(a)!=n:\\n    ans = 0\\nelse:\\n    shift = set()\\n    ans = -1\\n    for i in a:\\n        shift.add(i & x)\\n        if i&x != i and i&x in a:\\n            ans = 1\\n    if len(shift)!=n and ans == -1:\\n        ans = 2\\nprint(ans)\\n\\n\", \"n,m=list(map(int,input().split()))\\nl=list(map(int,input().split()))\\nd={}\\nansz=0\\nfor i in l:\\n  if(i in d):\\n    ansz=1\\n  else:\\n    d[i]=1\\nlz=[]\\nans1=0\\nfor i in l:\\n  lz.append(i&m)\\n  if(i&m in d and i&m!=i):\\n    ans1=1\\n\\nans2=0\\ndz={}\\nfor i in lz:\\n  if(i in dz):\\n    ans2=1\\n  else:\\n    dz[i]=1\\n\\nif(ansz):\\n  print(0)\\nelif(ans1):\\n  print(1)\\nelif(ans2):\\n  print(2)\\nelse:\\n  print(-1)\\n\\n\", \"n, x = [int(i) for i in input().split()]\\na = [int(i) for i in input().split()]\\nf = [False] * (max(a) + 1)\\nfor i in a:\\n    if f[i]:\\n        print(0)\\n        quit()\\n    f[i] = True\\n\\nwk1 = []\\nfor i in range(n):\\n    wk1.append(a[i] & x)\\n\\nf = [False] * (max(a) + 1)\\nposition = [-1] * (max(a) + 1)\\nfor i in range(n):\\n    f[a[i]] = True\\n    position[a[i]] = i\\n\\nfor i in range(n):\\n    if f[wk1[i]] and (position[wk1[i]] != i):\\n        print(1)\\n        quit()\\n\\nf = [False] * (max(wk1) + 1)\\nfor i in wk1:\\n    if f[i]:\\n        print(2)\\n        quit()\\n    f[i] = True\\n\\nprint(-1)\\n\\n\\n\", \"# from math import ceil\\n#from sys import stdout\\n\\nt = 1#int(input())\\nfor test in range(1,t+1):\\n    n,x = list(map(int, input().split()))\\n    b = list(map(int, input().split()))\\n    a = set(b)\\n    ans = -1\\n    if len(a)-len(b)<0:\\n        ans = 0\\n    else:\\n        D = {}\\n        for i in b:\\n            if i in D:\\n                D[i]+=1\\n            else:\\n                D[i] = 1\\n        for i in b:\\n            if (i&x) in D:\\n                if i==(i&x):\\n                    if D[i]>1:\\n                        ans = 1\\n                        break\\n                else:\\n                    ans = 1\\n                    break\\n        if ans==-1:\\n            tmp = []\\n            for i in b:\\n                tmp.append(i&x)\\n            if len(tmp)>len(set(tmp)):\\n                ans = 2\\n    print(ans)\\n\\n\\n\\n    \\n\", \"n, x = map(int, input().split())\\na = list(map(int, input().split()))\\nans = 100\\no = set()\\nc = set()\\n\\nfor i in range(n):\\n    if a[i] in o:\\n        ans = min(ans, 0)\\n    elif a[i] in c:\\n        ans = min(ans, 1)\\n    elif a[i] & x in o:\\n        ans = min(ans, 1)\\n    elif a[i] & x in c:\\n        ans = min(ans, 2)\\n    o.add(a[i])\\n    c.add(a[i]&x)\\nprint(-1 if ans == 100 else ans)\", \"can11 = set()\\ncan12 = set()\\ncan2 = False\\nn, x = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nfor ai in a:\\n\\tif ai in can11:\\n\\t\\tprint('0')\\n\\t\\tbreak\\n\\tcan11.add(ai)\\n\\tai2 = ai & x\\n\\tif ai2 == ai:\\n\\t\\tcontinue\\n\\tif ai2 in can12:\\n\\t\\tcan2 = True\\n\\telse:\\n\\t\\tcan12.add(ai2)\\nelse:\\n\\tcan11.intersection_update(can12)\\n\\tif can11:\\n\\t\\tprint(1)\\n\\telif can2:\\n\\t\\tprint(2)\\n\\telse:\\n\\t\\tprint('-1')\\n\", \"from collections import *\\n\\nn, m = map(int, input().split())\\n\\na = [int(i) for i in input().split()]\\n\\nst = set(a)\\nif len(st) < n:\\n    print(0);return\\n\\nmp = defaultdict(int)\\nfor i in a:\\n    mp[i] += 1\\n\\nfor i in a:\\n    mp[i] -= 1\\n    if (mp[i & m] > 0):\\n        print(1);return\\n    mp[i] += 1\\n\\nst.clear()\\n\\nfor i in a:\\n    t = m\\n    if (i & t) in st:\\n        print(2);return\\n    st.add(i & t)\\n\\nprint(-1)\\n\", \"def getUsefulWeight(coef, uw):\\n    if coef == 1:\\n        print(-1)\\n        return\\n    uw += (uw/(coef-1))\\n    return uw\\n\\n#n = int(input().strip())\\n#x = int(input().strip())\\nn,x = list(map(int, input().strip().split(\\\" \\\")))\\n\\na = list(map(int, input().strip().split(\\\" \\\")))\\nd = {}\\nret = 3\\nfor y in  a:\\n    val = y&x\\n    if y in d:\\n        newc = d[y]\\n        if ret > newc:\\n            ret = newc\\n    if val in d:\\n        newc = d[val]+1\\n        if ret > newc:\\n            ret = newc\\n    d[y] = 0\\n    if val not in d:\\n        d[val] = 1\\n\\nif ret == 3:\\n    print(\\\"-1\\\")\\nelse:\\n    print(ret)\\n\\n\", \"n,x=map(int,input().split())\\na=list(map(int,input().split()))\\nb=[0]*(100001);c=[0]*100001\\nfor i in a:\\n    b[i]+=1\\n    if b[i]>=2:\\n        print(0);return\\nfor i in a:\\n    b[i]-=1\\n    if b[i&x]>=1:\\n        print(1);return\\n    b[i]+=1\\nfor i in a:\\n    c[i&x]+=1\\n    if c[i&x]>=2:\\n        print(2);return\\nprint(-1)\", \"n,x = list(map(int,input().split()))\\nl = list(map(int,input().split()))\\na =[0]*(10**5+1)\\nb=[0]*(10**5+1)\\ncount =0\\nflag=0\\nfor i in range(n):\\n    if a[l[i]-1] == 0:\\n        a[l[i]-1] = 1\\n    else:\\n        count = 0\\n        flag=1\\nif flag == 0:\\n    for i in range(n):\\n        if a[(l[i]&x)-1] == 1 and l[i]&x != l[i]:\\n            count =1\\n            break\\n        else:\\n            if b[(l[i]&x)-1] == 1 :\\n                count =2\\n        b[(l[i]&x)-1] =1\\nif flag == 0 and count == 0:\\n    print('-1')\\nelse:\\n    print(count)\\n\", \"n, x = list(map(int, input().split()))\\na = list(map(int, input().split()))\\nd = {}\\nt = {}\\nok = False\\n\\nfor i in a:\\n    try:\\n        d[i] += 1\\n    except KeyError:\\n        d[i] = 1\\n\\nfor i in a:\\n    if d[i] > 1:\\n        print(0)\\n        return\\n    tmp = x & i\\n\\n    if tmp != i:\\n        try:\\n            t[tmp] += 1\\n            # if t[tmp] == 2:\\n            #     ok = True\\n            #     t[tmp] -= 1\\n        except KeyError:\\n            t[tmp] = 1\\n\\n# print(d)\\n# print(t)\\n\\nfor i in t:\\n    try:\\n        tmp = d[i]\\n    except KeyError:\\n        tmp = 0\\n\\n    if t[i] > 1:\\n        ok = True\\n    if t[i] >= 1 and tmp == 1:\\n        print(1)\\n        return\\n\\nif ok:\\n    print(2)\\nelse:\\n    print(-1)\\n\\n\", \"[n,x] = [int(i) for i in input().split()]\\nnums = [int(i) for i in input().split()]\\n\\n\\ndef foo():\\n    nonlocal x,n,nums\\n    a_plain = set()\\n    \\n    for i in range(n):\\n        if nums[i] not in a_plain:\\n            a_plain.add(nums[i])\\n        else:\\n            print(0)\\n            return\\n\\n    for i in range(n):\\n        if (nums[i] & x) in a_plain and (nums[i] & x != nums[i]):\\n            print(1)\\n            return\\n    \\n    a_and = {}\\n    for i in range(n):\\n        temp = nums[i] & x\\n        if temp not in a_and:\\n            a_and[temp] = 1\\n        else:\\n            a_and[temp] += 1\\n    \\n    for k in a_and:\\n        if a_and[k] > 1:\\n            print(2)\\n            return\\n    print(-1)\\n        \\n\\nfoo()\", \"from collections import Counter\\n\\nn, x = [int(i) for i in input().split()]\\nA = [int(i) for i in input().split()]\\n\\nif Counter(A).most_common()[0][1] >= 2:\\n    print(0)\\n    return\\n\\nsetA = set(A)\\nB = []\\n\\nfor a in A:\\n    B.append(a & x)\\n\\nans = -1\\n\\nfor b, c in Counter(B).most_common():\\n    if c >= 2:\\n        if b in setA:\\n            ans = 1\\n            break\\n        else:\\n            ans = 2\\n    else:\\n        break\\n\\nprint(ans)\", \"from sys import stdin,exit\\ndef listInput():\\n\\treturn list(map(int,stdin.readline().rstrip().split()))\\n\\nn,x= listInput()\\nli = listInput()\\ndic1 = {}\\n#print('x is ',x)\\nfor i in li:\\n\\tif i in dic1: dic1[i]+=1\\n\\telse : dic1[i]=1\\ndic2 = {}\\nfor i in li:\\n\\t#print('for ',i,' &x is ',i&x)\\n\\tif i&x in dic2: dic2[i&x]+=1\\n\\telse : dic2[i&x]=1\\nans = n+1\\n#rint(dic1)\\n#print(dic2)\\nfor i in li:\\n\\tif dic1[i]>=2:\\n\\t\\tans=min(ans,0)\\t\\n\\telif i!=(i&x) and (i&x) in dic1:\\n\\t\\tans = min(ans,1)\\n\\telif (i&x) in dic1 and dic1[i&x]>=2:\\n\\t\\tans = min(ans,1)\\n\\telif i!=(i&x) and i in dic2:\\n\\t\\tans = min(ans,1)\\n\\telif (i&x) in dic2 and dic2[i&x]>=2:\\n\\t\\tans = min(ans,2)\\n\\nif ans == (n+1):\\n\\tprint(-1)\\nelse :\\n\\tprint(ans)\\n\", \"import sys\\n\\nn,x=list(map(int,input().split()))\\nA=list(map(int,input().split()))\\n\\nA.sort()\\ncheck=0\\nfor i in range(1,n):\\n    if A[i]==A[i-1]:\\n        check=1\\n        break\\n\\nif check==1:\\n    print(0)\\n    return\\n\\nB=[A[i] for i in range(n)]\\n\\nfor i in range(n):\\n    A[i]=A[i] & x\\n\\nAX=[(A[i],i) for i in range(n)]\\n\\nAX.sort()\\n\\ncheck=0\\ni=0\\nj=0\\nwhile i<n:\\n    if AX[i][0]==B[j]:\\n        if AX[i][1] != j:\\n            check=1\\n            break\\n        else:\\n            i+=1\\n    elif AX[i][0]<B[j]:\\n            i+=1\\n    elif AX[i][0]>B[j]:\\n        j+=1\\n\\nif check==1:\\n    print(1)\\n    return\\n        \\n\\ncheck=0\\nfor i in range(1,n):\\n    if AX[i][0]==AX[i-1][0]:\\n        check=1\\n        break\\n\\nif check==1:\\n    print(2)\\n    return\\n\\nprint(-1)\\n\\n\", \"def main2():\\n    n, x = [int(x) for x in input().split()]\\n    a = [int(x) for x in input().split()]\\n\\n    a.sort()\\n\\n    count = 9999\\n\\n    for i in range(len(a) - 1):\\n        f, s = a[i], a[i + 1]\\n        if f == s:\\n            print(0)\\n            return\\n        if f & x == s & x:\\n            if count > 2:\\n                count = 2\\n        if f == s & x:\\n            if count > 1:\\n                count = 1\\n\\n    if count == 9999:\\n        print(-1)\\n    else:\\n        print(count)\\n\\n\\ndef main():\\n    n, x = [int(x) for x in input().split()]\\n    a = [int(x) for x in input().split()]\\n\\n    anded = set()\\n\\n    count = 9999\\n\\n    a.sort()\\n    init = {}\\n\\n    for i, e in enumerate(a):\\n        if e not in init:\\n            init[e] = set()\\n\\n        init[e].add(i)\\n\\n    for i in range(len(a)):\\n        f = a[i]\\n\\n        if i < len(a) - 1:\\n            s = a[i + 1]\\n            if f == s:\\n                print(0)\\n                return\\n\\n        fx = f & x\\n        init[f].remove(i)\\n        if fx in init and init[fx]:\\n            if count > 1:\\n                count = 1\\n\\n        init[f].add(i)\\n\\n        if fx in anded:\\n            if count > 2:\\n                count = 2\\n\\n        anded.add(fx)\\n\\n    if count == 9999:\\n        print(-1)\\n    else:\\n        print(count)\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"#!/usr/bin/env python3\\nfrom sys import stdin, stdout\\n\\ndef rint():\\n    return map(int, stdin.readline().split())\\n#lines = stdin.readlines()\\n\\n\\nn, x = rint()\\n\\na = list(rint())\\n\\na_dict = dict()\\nfor i in range(n):\\n    if a[i] not in a_dict:\\n        a_dict[a[i]] = 1\\n    else:\\n        a_dict[a[i]] += 1\\n\\nif n > len(a_dict):\\n    print(\\\"0\\\")\\n    return\\n\\nfor i in range(n):\\n    if a[i]&x in a_dict:\\n        if a[i]&x == a[i]:\\n            if a_dict[a[i]&x] >= 2:\\n                print(\\\"1\\\")\\n                return\\n        else:\\n            print(\\\"1\\\")\\n            return\\n\\nax = [a[i]&x for i in range(n)]\\n\\nax_set = set(ax)\\n\\nif n > len(ax_set):\\n    print(\\\"2\\\")\\nelse:\\n    print(\\\"-1\\\")\", \"from collections import Counter\\n\\nn, x  = list(map(int, input().split()))\\n\\nb = Counter(list(map(int, input().split())))\\n\\nbs = set(b.keys())\\n\\n\\nif b.most_common(1)[0][1]>1:\\n    print(0)\\n    return\\n\\nk = Counter([a&x for a in list(b.keys()) if a&x != a])\\nks = set(k.keys())\\nif len(ks.intersection(bs))>0:\\n    print(1)\\n    return\\n\\nif len(k) >0 and k.most_common(1)[0][1]>1:\\n    print(2)\\n    return\\nprint(-1)\\n\\n\\n\\n\\n\\n\\n\\n\", \"n, x  = map(int, input().split())\\na = list(map(int, input().split()))\\ndp = [10**9 for i in range(max(a)+1)]\\nfor i in range(n):\\n    if(dp[a[i]] == 0):\\n        print(0)\\n        return\\n    dp[a[i]] = 0\\nj= len(dp)-1\\n\\nans = 10**9\\nwhile j >=0:\\n    if dp[j] != 10**9:\\n        if(dp[j&x] != 10**9 and j !=j&x):\\n            ans = min(ans, dp[j&x] + dp[j]+1)\\n        dp[j&x] = min(dp[j&x], dp[j]+1)\\n    j-=1\\nif(ans==10**9):\\n    print(-1)\\n    return\\nprint(ans)\", \"from sys import stdin, stdout \\n\\n# string input\\nn, x= stdin.readline().split()\\nn, x = int(n), int(x)\\n\\narr = [int(y) for y in stdin.readline().split()]\\n\\narr.sort()\\n\\nflag = 0\\nfor i in range(len(arr)-1):\\n\\tif(arr[i] == arr[i+1]):\\n\\t\\tprint(0)\\n\\t\\tflag = 1\\n\\t\\tbreak\\n\\nif flag == 0:\\n\\tarr1 = [(arr[i] & x) for i in range(len(arr))]\\n\\tarr2 = [(arr1[i], arr[i]) for i in range(len(arr))]\\n\\tarr2 = sorted(arr2, key=lambda x: x[0])\\n\\t#print(arr2)\\n\\tcurrentAns = -1\\n\\tfor i in range(len(arr2)-1):\\n\\t\\tif(arr2[i][0] == arr2[i+1][0]):\\n\\t\\t\\tif (arr2[i][0] == arr2[i][1] or arr2[i+1][0] == arr2[i+1][1]):\\n\\t\\t\\t\\tcurrentAns = 1\\n\\t\\t\\t\\tflag = 1\\n\\t\\t\\t\\tbreak\\n\\t\\t\\telse:\\n\\t\\t\\t\\tcurrentAns = 2\\n\\tprint(currentAns)\\n\\n# print to stdout\\n#stdout.write(str(summation))\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4 3\\n1 2 3 7\\n\",\n    \"2 228\\n1 1\\n\",\n    \"3 7\\n1 2 3\\n\",\n    \"4 3\\n1 2 7 15\\n\",\n    \"4 3\\n7 3 2 1\\n\",\n    \"5 132\\n10060 81912 13624 40413 19012\\n\",\n    \"3 32768\\n95911 33435 56607\\n\",\n    \"3 65536\\n37707 92596 76353\\n\",\n    \"5 65537\\n60825 99853 69251 68402 1266\\n\",\n    \"4 22\\n17 49 1028 4\\n\",\n    \"4 3\\n7 15 1 17\\n\",\n    \"2 1\\n3 5\\n\",\n    \"4 10\\n3 6 10 14\\n\",\n    \"4 10\\n2 14 11 6\\n\",\n    \"4 5\\n13 21 1 11\\n\",\n    \"2 16\\n15 14\\n\",\n    \"2 4\\n1 2\\n\",\n    \"4 12\\n13 14 8 10\\n\",\n    \"4 4\\n2 1 4 5\\n\",\n    \"4 2\\n4 5 3 2\\n\",\n    \"6 4\\n1 4 3 4 2 4\\n\",\n    \"4 12\\n10 9 12 13\\n\",\n    \"4 15\\n31 63 1 17\\n\",\n    \"2 1\\n2 4\\n\",\n    \"4 6\\n14 30 2 10\\n\",\n    \"4 3\\n9 13 3 7\\n\",\n    \"2 2\\n4 5\\n\",\n    \"2 8\\n2 3\\n\",\n    \"5 5\\n3 9 5 21 37\\n\",\n    \"4 5\\n5 3 9 7\\n\",\n    \"4 3\\n5 9 3 7\\n\",\n    \"4 12\\n15 13 9 8\\n\",\n    \"2 1\\n10 8\\n\",\n    \"4 22\\n30 23 18 19\\n\",\n    \"4 8\\n3 7 8 10\\n\",\n    \"4 9\\n11 13 3 1\\n\",\n    \"4 3\\n9999 9999 3 7\\n\",\n    \"3 1\\n5 1 1\\n\",\n    \"2 4\\n2 3\\n\",\n    \"2 5\\n1 3\\n\",\n    \"4 7\\n9 17 3 11\\n\",\n    \"3 1\\n9 1 1\\n\",\n    \"3 4\\n1 2 4\\n\",\n    \"4 10\\n2 15 11 6\\n\",\n    \"3 8\\n1 4 5\\n\",\n    \"2 32\\n1 2\\n\",\n    \"5 3\\n2 7 10 11 15\\n\",\n    \"4 1\\n2 4 8 16\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"0\\n\",\n    \"-1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"0\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1013/B",
  "starter_code": ""
}