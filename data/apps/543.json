{
  "task_id": "APPS/543",
  "problem_id": 543,
  "prompt": "The programming competition season has already started and it's time to train for ICPC. Sereja coaches his teams for a number of year and he knows that to get ready for the training session it's not enough to prepare only problems and editorial. As the training sessions lasts for several hours, teams become hungry. Thus, Sereja orders a number of pizzas so they can eat right after the end of the competition.\n\nTeams plan to train for n times during n consecutive days. During the training session Sereja orders exactly one pizza for each team that is present this day. He already knows that there will be a_{i} teams on the i-th day.\n\nThere are two types of discounts in Sereja's favourite pizzeria. The first discount works if one buys two pizzas at one day, while the second is a coupon that allows to buy one pizza during two consecutive days (two pizzas in total).\n\nAs Sereja orders really a lot of pizza at this place, he is the golden client and can use the unlimited number of discounts and coupons of any type at any days.\n\nSereja wants to order exactly a_{i} pizzas on the i-th day while using only discounts and coupons. Note, that he will never buy more pizzas than he need for this particular day. Help him determine, whether he can buy the proper amount of pizzas each day if he is allowed to use only coupons and discounts. Note, that it's also prohibited to have any active coupons after the end of the day n.\n\n\n-----Input-----\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 200 000)\u00a0\u2014 the number of training sessions.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 10 000)\u00a0\u2014 the number of teams that will be present on each of the days.\n\n\n-----Output-----\n\nIf there is a way to order pizzas using only coupons and discounts and do not buy any extra pizzas on any of the days, then print \"YES\" (without quotes) in the only line of output. Otherwise, print \"NO\" (without quotes).\n\n\n-----Examples-----\nInput\n4\n1 2 1 2\n\nOutput\nYES\n\nInput\n3\n1 0 1\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample, Sereja can use one coupon to buy one pizza on the first and the second days, one coupon to buy pizza on the second and the third days and one discount to buy pizzas on the fourth days. This is the only way to order pizzas for this sample.\n\nIn the second sample, Sereja can't use neither the coupon nor the discount without ordering an extra pizza. Note, that it's possible that there will be no teams attending the training sessions on some days.",
  "solutions": "[\"n=input()\\nc=[int(x) for x in input().split()]\\np=0\\nd=True\\nfor i in c:\\n    #print(p,d,i)\\n    if i%2==0:\\n        if p==1:\\n            if i==0:\\n                d=False\\n    else:\\n        p=1-p\\n\\nprint('YES' if d and p==0 else 'NO')\", \"#!/usr/bin/env python3\\n\\n\\ndef main():\\n    try:\\n        while True:\\n            n = int(input())\\n            rem = False\\n            for x in map(int, input().split()):\\n                if x & 0x1:\\n                    rem = not rem\\n                elif rem and x == 0:\\n                    print(\\\"NO\\\")\\n                    break\\n            else:\\n                print(\\\"NO\\\" if rem else \\\"YES\\\")\\n\\n    except EOFError:\\n        pass\\n\\n\\nmain()\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\ni = 0\\ncnt = 0\\nok = True\\nwhile i < n:\\n    if a[i] == 0:\\n        if cnt % 2 == 1:\\n            ok = False\\n            break\\n        else:\\n            cnt = 0\\n    else:\\n        cnt += a[i]\\n    i += 1\\n\\nif not ok or cnt % 2 == 1:\\n    print(\\\"NO\\\")\\nelse:\\n    print(\\\"YES\\\")\\n\", \"n=int(input())\\ndays=input().split()\\nfor i in range (n):\\n    days[i]=int(days[i])\\nworks=True\\nfor i in range (n):\\n    if days[i]<0:\\n        works=False\\n        break\\n    if days[i]%2==1:\\n        if i==n-1:\\n            works=False\\n            break\\n        else:\\n            days[i+1]-=1\\nif works:\\n    print (\\\"YES\\\")\\nelse:\\n    print (\\\"NO\\\")\\n\", \"__author__ = 'Think'\\ndef f(k):\\n\\tif k==0:\\n\\t\\treturn 0\\n\\telif (k%2)==1:\\n\\t\\treturn 1\\n\\telse:\\n\\t\\treturn 2\\nn=int(input())\\nteams=[f(int(i)) for i in input().split()]\\ncoupon=False\\nworking=True\\nfor i in teams:\\n\\tif coupon:\\n\\t\\tif i==0:\\n\\t\\t\\tworking=False\\n\\t\\t\\tbreak\\n\\t\\telse:\\n\\t\\t\\ti-=1\\n\\tcoupon=((i%2)==1)\\nif (not coupon) and working:\\n\\tprint(\\\"YES\\\")\\nelse:\\n\\tprint(\\\"NO\\\")\", \"n = int(input())\\ns = [int(i) for i in input().split()]\\nt = 0\\nfor i in s:\\n    if i -t < 0:\\n        print(\\\"NO\\\")\\n        break\\n    t = (i-t)%2\\nelse:\\n    if t:\\n        print(\\\"NO\\\")\\n    else:\\n        print(\\\"YES\\\")\", \"n=int(input())\\nL =[int(x) for x in input().split()]\\nL.append(0)\\n\\npossib = True\\nfor i in range(n):\\n    if L[i] < 0:\\n        possib = False\\n        break\\n    if L[i]&1:\\n        L[i+1] -= 1\\n\\nif L[-1] < 0:\\n    possib = False\\n\\nif possib:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"n = int(input())\\narr = [int(x) for x in input().split()]\\n\\ncrr = []\\nhap = 0\\nfor x in arr:\\n    if(x==0):\\n        crr.append(hap)\\n        hap = 0\\n    else:\\n        hap += x\\ncrr.append(hap)\\n\\nfor x in crr:\\n    if(x%2):\\n        print('NO')\\n        return\\nprint('YES')\", \"n = int(input())\\na = [int(x) for x in input().split()]\\nfor i in range(len(a)):\\n    if a[i]%2 == 0 and a[i] > 0:\\n        a[i] = 2\\n    if a[i]%2 == 1:\\n        a[i] = 1\\npossible = True\\nfor i in range(len(a)):\\n    if a[i] == 1:\\n        if i + 1 < len(a) and a[i + 1] > 0:\\n            a[i] = 0\\n            a[i + 1] -= 1\\nfor i in range(len(a)):\\n    if a[i] == 1:\\n        possible = False\\nif possible:\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\na.append(0)\\nfor i in range(n+1):\\n    if a[i] < 0:\\n        print('NO')\\n        return\\n    a[i] %= 2\\n    if a[i] == 1:\\n        a[i+1] -= 1\\nprint('YES')\\n\", \"n = int(input())\\na = list(map(int, input().split()))\\n\\nfor i, j in enumerate(a):\\n    if j % 2:\\n        if i+1 < n:\\n            if a[i+1] == 0:\\n                print('NO')\\n                break\\n            a[i+1] -= 1\\n        else:\\n            print('NO')\\n            break\\nelse:\\n    print('YES')\\n\", \"#!/usr/bin/env python3\\n\\ndef __starting_point():\\n  n = int(input())\\n  a = list(map(int, input().split()))\\n\\n  possible = True\\n  prev = 0\\n  for i in range(n):\\n    v = a[i] - prev\\n    if v < 0:\\n      possible = False\\n    v %= 2\\n    prev = v\\n\\n  if prev == 0 and possible:\\n    print('YES')\\n  else:\\n    print('NO')\\n\\n\\n__starting_point()\", \"n = int(input())\\na = list(map(int, input().split()))\\nfor i in range(n - 1):\\n    if a[i] > 0:\\n        a[i] %= 2\\n    if a[i] == 1:\\n        a[i + 1] -= 1\\nif a[-1] % 2 != 0:\\n    a[-1] = -1\\n\\nif min(a) >= 0:\\n    print('YES')\\nelse:\\n    print('NO')\\n\", \"from sys import stdin\\n\\nn = int(stdin.readline())\\n\\na = [int(x) for x in stdin.readline().split()]\\n\\npizza_free_today = False\\n\\nresult = 'NO'\\n\\nfor teams in a:\\n    if pizza_free_today:\\n        teams -= 1\\n        pizza_free_today = False\\n    if teams < 0:\\n        break\\n    if teams % 2 == 0:\\n        pass\\n    else:\\n        pizza_free_today = True\\nelse:\\n    if not pizza_free_today:\\n        result = 'YES'\\n\\nprint(result)\\n\", \"k = int(input())\\nn = list(map(int, input().split()))\\nn.append(0)\\nres = True\\nfor i in range(k + 1):\\n    if (n[i] < 0):\\n        res = False\\n        break\\n    if (n[i] % 2 == 0):\\n        continue\\n    elif (i < k):\\n        n[i+1] = n[i+1] - 1\\n\\nif (res):\\n    print(\\\"YES\\\")\\nelse:\\n    print(\\\"NO\\\")\", \"N = int(input())\\nA = list(map(int, input().split()))\\ntotal = sum(A)\\nif total % 2 != 0:\\n    print(\\\"NO\\\")\\n    return\\n\\nfor i in range(N):\\n    if A[i] == 0:\\n        continue\\n    elif A[i] % 2 == 0:\\n        A[i] = 2\\n    else:\\n        A[i] = 1\\n\\nfor i in range(N):\\n    if A[i] < 0:\\n        print(\\\"NO\\\")\\n        return\\n    elif A[i] == 0:\\n        continue\\n    elif A[i] == 1:\\n        A[i] = 0\\n        if i + 1 <= N - 1:\\n            A[i+1] -= 1\\n    else:\\n        A[i] = 0\\n\\nfor i in range(N):\\n    if A[i] < 0:\\n        print(\\\"NO\\\")\\n        return\\n\\nprint(\\\"YES\\\")\\n\", \"n = int(input())\\nps = [int(x) for x in input().split(' ')]\\n\\nf = True\\n\\nfor i in range(n):\\n    if ps[i] % 2 == 1:\\n        if i == n - 1 or ps[i + 1] == 0:\\n            f = False\\n            break\\n        else:\\n            ps[i + 1] -= 1\\n\\nprint(\\\"YES\\\" if f else \\\"NO\\\")\", \"import sys\\nn=int(input())\\na=[int(i) for i in input().split(\\\" \\\")]\\nk=0\\nif n==1:\\n    if a[0]%2==0:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\nelse:\\n    k=0\\n    for i in range(n-1):\\n        if a[i]<0:\\n            k=1\\n        else:\\n            if a[i]%2==1:\\n                a[i+1]-=1\\n    if a[n-1]%2==1:\\n        k=1\\n    if k==1:\\n        print(\\\"NO\\\")\\n    else:\\n        print(\\\"YES\\\")\\n\", \"import sys\\nn = int(sys.stdin.readline().replace('\\\\n',''))\\na = [int(x) for x in sys.stdin.readline().replace('\\\\n','').split(' ')]\\nok = True\\nfor day, teams in enumerate(a):\\n    if teams < 0:\\n        sys.stdout.write('NO')\\n        ok = False\\n        break\\n    elif teams % 2 == 0:\\n        pass\\n    elif day+1 < len(a):\\n        a[day+1] -= 1\\n    else:\\n        sys.stdout.write('NO')\\n        ok = False\\n        break\\nif ok:\\n    sys.stdout.write('YES')\\n\", \"from collections import defaultdict\\nimport sys, os, math\\n\\ndef __starting_point():\\n    #n, m = list(map(int, input().split()))\\n    n = int(input())\\n    arr = list(map(int, input().split()))\\n    for i in range(n):\\n        if arr[i] % 2 != 0:\\n            if i == n - 1 or arr[i + 1] == 0:\\n                print(\\\"NO\\\")\\n                return\\n            arr[i + 1] -= 1\\n    print(\\\"YES\\\")\\n__starting_point()\", \"n = int(input())\\na = [int(i) for i in input().split()]\\nfor i in range(n):\\n    if a[i] < 0:\\n        print(\\\"NO\\\")\\n        raise SystemExit\\n    if a[i] % 2 != 0:\\n        if i == n - 1:\\n            print(\\\"NO\\\")\\n            raise SystemExit\\n        else:\\n            a[i + 1] -= 1\\nprint(\\\"YES\\\")\", \"input()\\na = [int(i) for i in input().split(' ')]\\nr = 'NO'\\nmi = 0\\nfor i in a:\\n    if mi == 1:\\n        i -= mi\\n        mi = 0\\n    if i < 0:\\n        break\\n    elif i == 0:\\n        continue\\n    elif i%2 != 0:\\n        mi = 1\\nelse:\\n    if mi == 1:\\n        r = 'NO'\\n    else:\\n        r = 'YES'\\nprint(r)\\n\", \"I = lambda: list(map(int, input().split()))\\nn, a = I()[0], I()\\nactive_coupon = False\\nfor i in range(n):\\n    #order quantity after last active coupon if exists\\n    q = a[i] - 1*active_coupon\\n    if q >= 0:\\n        #check whether needs second coupon\\n        r = q % 2\\n        #must use second coupon\\n        active_coupon = [True, False][r!=1]\\n    else:\\n        #negative order quantity\\n        active_coupon = True\\n        break\\nprint('YNEOS'[active_coupon::2])\", \"n=int(input())\\narr=[int(i) for i in input().split()]\\nans=0\\nfor i in arr:\\n    ans+=i\\nif ans%2!=0:\\n    print(\\\"NO\\\")\\nelse:\\n    if n==1:\\n        if arr[0]%2==0:\\n            print(\\\"YES\\\")\\n        else:\\n            print(\\\"NO\\\")\\n    else:\\n        flag=0\\n        for i in range(0,n-1):\\n            if arr[i]<0:\\n                flag=1\\n                break\\n            arr[i]%=2\\n            if arr[i]==1:\\n                arr[i]=0\\n                arr[i+1]-=1\\n        if flag==1:\\n            print(\\\"NO\\\")\\n        else:\\n            if arr[n-1]<0 or arr[n-1]%2!=0:\\n                print(\\\"NO\\\")\\n            else:\\n                print(\\\"YES\\\")\\n\", \"n = int(input())\\nteams = [int(x) for x in input().split()]\\nres = 'YES'\\ndiff = 0\\n\\nfor team in teams:\\n\\tif diff > 0 and team == 0:\\n\\t\\tres = 'NO'\\n\\t\\tbreak\\n\\n\\tdiff = (team + diff) % 2\\n\\nif res == 'YES' and diff > 0:\\n\\tres = 'NO'\\n\\nprint(res)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4\\n1 2 1 2\\n\",\n    \"3\\n1 0 1\\n\",\n    \"3\\n1 3 1\\n\",\n    \"3\\n2 0 2\\n\",\n    \"1\\n179\\n\",\n    \"10\\n0 0 5 9 9 3 0 0 0 10\\n\",\n    \"3\\n3 2 3\\n\",\n    \"1\\n0\\n\",\n    \"2\\n0 0\\n\",\n    \"10\\n0 0 0 0 0 0 0 0 0 0\\n\",\n    \"1\\n1\\n\",\n    \"1\\n2\\n\",\n    \"1\\n3\\n\",\n    \"1\\n10000\\n\",\n    \"2\\n10000 10000\\n\",\n    \"3\\n2 2 2\\n\",\n    \"10\\n3 3 3 2 2 2 2 2 2 3\\n\",\n    \"100\\n2 3 2 3 3 3 3 3 3 2 2 2 2 2 2 3 2 3 3 2 3 2 3 2 2 3 3 3 3 3 2 2 2 2 3 2 3 3 2 2 3 2 3 3 3 3 2 2 3 3 3 3 3 2 3 3 3 2 2 2 2 3 2 2 2 2 3 2 2 3 2 2 2 3 2 2 3 2 2 2 3 3 3 2 2 2 2 3 2 2 3 3 3 2 2 2 2 2 3 3\\n\",\n    \"3\\n0 0 1\\n\",\n    \"10\\n1 0 1 1 0 1 1 0 1 0\\n\",\n    \"100\\n1 0 1 1 0 1 0 0 0 1 1 0 0 1 1 0 1 0 1 0 0 1 0 1 1 1 0 0 0 0 1 1 0 0 1 0 0 0 0 1 0 1 0 1 0 0 1 0 0 0 0 1 0 0 0 0 0 1 0 0 0 1 0 1 0 0 0 1 1 0 1 0 1 1 1 1 1 0 1 1 0 0 0 1 0 0 1 0 1 1 1 1 1 1 1 0 1 0 1 1\\n\",\n    \"10\\n8 4 0 0 6 1 9 8 0 6\\n\",\n    \"100\\n44 0 0 0 16 0 0 0 0 77 9 0 94 0 78 0 0 50 55 35 0 35 88 27 0 0 86 0 0 56 0 0 17 23 0 22 54 36 0 0 94 36 0 22 0 0 0 0 0 0 0 82 0 0 50 0 6 0 0 44 80 0 0 0 98 0 0 0 0 92 0 56 0 16 0 14 0 37 89 0 62 3 83 0 0 0 80 0 92 58 92 0 0 0 57 79 0 0 0 42\\n\",\n    \"100\\n37 92 14 95 3 37 0 0 0 84 27 33 0 0 0 74 74 0 35 72 46 29 8 92 1 76 47 0 38 82 0 81 54 7 61 46 91 0 86 0 80 0 0 98 88 0 4 0 0 52 0 0 82 0 33 35 0 36 58 52 1 50 29 0 0 24 0 69 97 65 13 0 30 0 14 66 47 94 22 24 8 92 67 0 34 0 0 0 84 85 50 33 0 99 67 73 21 0 0 62\\n\",\n    \"100\\n56 22 13 79 28 73 16 55 34 0 97 19 22 36 22 80 30 19 36 92 9 38 24 10 61 43 19 12 18 34 21 36 1 17 0 97 72 37 74 70 51 34 33 87 27 33 45 97 38 56 2 32 88 92 64 51 74 94 86 98 57 62 83 3 87 61 9 65 57 13 64 10 50 35 7 75 41 3 70 66 6 55 69 42 91 75 14 22 68 93 2 53 22 98 45 2 78 58 18 13\\n\",\n    \"2\\n1 4\\n\",\n    \"4\\n2 1 1 2\\n\",\n    \"5\\n1 1 1 0 1\\n\",\n    \"4\\n1 0 2 2\\n\",\n    \"3\\n3 2 1\\n\",\n    \"2\\n1 0\\n\",\n    \"2\\n1 2\\n\",\n    \"3\\n2 1 1\\n\",\n    \"3\\n3 0 0\\n\",\n    \"9\\n6 3 5 9 0 3 1 9 6\\n\",\n    \"4\\n1 0 1 1\\n\",\n    \"4\\n1 1 1 0\\n\",\n    \"2\\n1 5\\n\",\n    \"3\\n1 0 2\\n\",\n    \"3\\n1 2 2\\n\",\n    \"3\\n1 2 1\\n\",\n    \"3\\n1 4 1\\n\",\n    \"3\\n3 2 2\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"YES\\n\",\n    \"NO\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/731/B",
  "starter_code": ""
}