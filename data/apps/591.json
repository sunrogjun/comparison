{
  "task_id": "APPS/591",
  "problem_id": 591,
  "prompt": "Vasya is going to the Olympics in the city Ntown by train. The boy wants to read the textbook to prepare for the Olympics. He counted that he needed k hours for this. He also found that the light in the train changes every hour. The light is measured on a scale from 0 to 100, where 0 is very dark, and 100 is very light.\n\nVasya has a train lighting schedule for all n hours of the trip \u2014 n numbers from 0 to 100 each (the light level in the first hour, the second hour and so on). During each of those hours he will either read the whole time, or not read at all. He wants to choose k hours to read a book, not necessarily consecutive, so that the minimum level of light among the selected hours were maximum. Vasya is very excited before the upcoming contest, help him choose reading hours.\n\n\n-----Input-----\n\nThe first input line contains two integers n and k (1 \u2264 n \u2264 1000, 1 \u2264 k \u2264 n) \u2014 the number of hours on the train and the number of hours to read, correspondingly. The second line contains n space-separated integers a_{i} (0 \u2264 a_{i} \u2264 100), a_{i} is the light level at the i-th hour.\n\n\n-----Output-----\n\nIn the first output line print the minimum light level Vasya will read at. In the second line print k distinct space-separated integers b_1, b_2, ..., b_{k}, \u2014 the indexes of hours Vasya will read at (1 \u2264 b_{i} \u2264 n). The hours are indexed starting from 1. If there are multiple optimal solutions, print any of them. Print the numbers b_{i} in an arbitrary order.\n\n\n-----Examples-----\nInput\n5 3\n20 10 30 40 10\n\nOutput\n20\n1 3 4 \n\nInput\n6 5\n90 20 35 40 60 100\n\nOutput\n35\n1 3 4 5 6 \n\n\n\n-----Note-----\n\nIn the first sample Vasya should read at the first hour (light 20), third hour (light 30) and at the fourth hour (light 40). The minimum light Vasya will have to read at is 20.",
  "solutions": "[\"def readln(): return tuple(map(int, input().split()))\\n\\nimport sys\\nsys.stdin = open('input.txt', 'r')\\nsys.stdout = open('output.txt', 'w')\\n\\nn, k = readln()\\nlst = [(v, i + 1) for i, v in enumerate(readln())]\\nlst.sort()\\nlst.reverse()\\nprint(lst[k - 1][0])\\nprint(*list(zip(*lst[:k]))[1])\\n\", \"import sys\\nsys.stdin = open('input.txt', 'r')\\nsys.stdout = open('output.txt', 'w')\\n\\nn, k = map(int, input().split())\\np = [(x, i) for i, x in enumerate(list(map(int, input().split())), 1)]\\np.sort(reverse = True)\\nprint(p[k - 1][0])\\nprint(' '.join(str(x[1]) for x in p[:k]))\", \"fc = open('input.txt', 'r')\\nn,k = [ int(x) for x in fc.readline().strip().split() ]\\nline = fc.readline().strip().split()\\nb = [ (int(line[i]), i+1) for i in range(len(line)) ]\\nb.sort()\\nl = list()\\nfor i in range(len(b)-k,len(b)):\\n  l.append(str(b[i][1]))\\nfw = open('output.txt', 'w')\\nfw.write('{0}\\\\n'.format(b[len(b)-k][0]))\\nfw.write(' '.join(l))\\nfw.write('\\\\n')\\nfc.close()\\nfw.close()\\n\", \"\\ndef main():\\n    f=open(\\\"input.txt\\\");\\n    inp= f.readline().strip().split()\\n    inp=[int(i) for i in inp];\\n    num= f.readline().strip().split()\\n    num=[int(i) for i in num];\\n    num2=[];\\n    for i in range(len(num)):\\n        num2.append(num[i]);\\n    num2.sort()\\n    num2.reverse()\\n    x=int(inp.pop())\\n    y = num2[x-1];\\n    p=[];\\n    cont=0;\\n    for i in range(len(num)):\\n        if(num[i]>=y and cont<x):\\n            p.append(i+1);\\n            cont+=1\\n    t=open(\\\"output.txt\\\",\\\"w\\\");\\n    t.write(str(y)+\\\"\\\\n\\\");\\n    t.write(' '.join(str(e) for e in p)+\\\"\\\\n\\\");\\n    t.close()\\n    f.close()\\n    \\nmain()\\n\", \"\\ndef main():\\n    f=open(\\\"input.txt\\\");\\n    inp= f.readline().strip().split()\\n    inp=[int(i) for i in inp];\\n    num= f.readline().strip().split()\\n    num=[int(i) for i in num];\\n    num2=[];\\n    for i in range(len(num)):\\n        num2.append(num[i]);\\n    num2.sort()\\n    num2.reverse()\\n    x=int(inp.pop())\\n    y = num2[x-1];\\n    p=[];\\n    cont=0;\\n    for i in range(len(num)):\\n        if(num[i]>=y and cont<x):\\n            p.append(i+1);\\n            cont+=1\\n    t=open(\\\"output.txt\\\",\\\"w\\\");\\n    t.write(str(y)+\\\"\\\\n\\\");\\n    t.write(' '.join(str(e) for e in p)+\\\"\\\\n\\\");\\n    t.close()\\n    f.close()\\n    \\nmain()\\n\", \"def main():\\n    f=open(\\\"input.txt\\\",\\\"r\\\")\\n    inp= f.readline().split()\\n    inp=[int(i) for i in inp];\\n    num= f.readline().split()\\n    num=[int(i) for i in num];\\n    num2=[];\\n    for i in range(len(num)):\\n        num2.append(num[i]);\\n    num2.sort()\\n    num2.reverse()\\n    x=int(inp.pop())\\n    y = num2[x-1];\\n    p=[];\\n    cont=0;\\n    for i in range(len(num)):\\n        if(num[i]>=y and cont<x):\\n            p.append(i+1);\\n            cont+=1\\n    g=open(\\\"output.txt\\\",\\\"w\\\") \\n    g.write(str(y))\\n    g.write(\\\"\\\\n\\\")\\n    g.write(' '.join(str(e) for e in p));\\n    g.close()\\n    f.close()\\nmain()\\n\", \"from sys import stdin\\ndef main():\\n    f=open(\\\"input.txt\\\")\\n    fin=open(\\\"output.txt\\\",\\\"w\\\")\\n    horas=[int(x)for x in f.readline().strip().split()]\\n    luz=[int(x)for x in f.readline().strip().split()]\\n    posiciones=list(range(1,len(luz)+1))   \\n    s=list(zip(luz,posiciones))\\n    x=list()\\n    s.sort()\\n    z=list()\\n    eliminado=horas[0]-horas[1]\\n    for i in range(eliminado,len(s)):\\n        x.append(s[i])\\n    for u in range (len(x)):\\n        z.append(x[u][1])\\n    z.sort()    \\n    fin.write(str(x[0][0]) + \\\"\\\\n\\\")\\n    for c in range(len(z)):\\n        fin.write( str(z[c]) + \\\" \\\")\\n\\n    fin.close()\\n    f.close()\\nmain()\\n\", \"from sys import stdin\\ndef main():\\n    f=open(\\\"input.txt\\\")\\n    fin=open(\\\"output.txt\\\",\\\"w\\\")\\n    horas=[int(x)for x in f.readline().strip().split()]\\n    luz=[int(x)for x in f.readline().strip().split()]\\n    posiciones=list(range(1,len(luz)+1))   \\n    s=list(zip(luz,posiciones))\\n    x=list()\\n    s.sort()\\n    z=list()\\n    eliminado=horas[0]-horas[1]\\n    for i in range(eliminado,len(s)):\\n        x.append(s[i])\\n    for u in range (len(x)):\\n        z.append(x[u][1])\\n    z.sort()    \\n    fin.write(str(x[0][0]) + \\\"\\\\n\\\")\\n    for c in range(len(z)):\\n        fin.write( str(z[c]) + \\\" \\\")\\n\\n    fin.close()\\n    f.close()\\nmain()\", \"def main():\\n\\ta=open('input.txt','r')\\n\\tc=open('output.txt','w')\\n\\tb=a.readline().split()\\n\\tn=int(b[0])\\n\\tk=int(b[1])\\n\\tb=a.readline().split()\\n\\th=[]\\n\\td=[]\\n\\tfor i in range (len(b)):\\n\\t\\th.append((int(b[i]),i+1))\\n\\th.sort()\\n\\tfor i in range (1,k+1):\\n\\t\\td.append(h[-i])\\n\\td.sort()\\n\\te=str(d[0][0])\\t\\n\\tc.write('{0}\\\\n' .format(e))\\n\\tf=[]\\n\\tfor i in range (len(d)):\\n\\t\\tf.append(d[i][1])\\n\\tf.sort()\\n\\tfor i in range (len(f)):\\n\\t\\tg=str(f[i])\\n\\t\\tc.write(g+\\\" \\\")\\nmain()\\n\", \"def main():\\n\\ta=open('input.txt','r')\\n\\tc=open('output.txt','w')\\n\\tb=a.readline().split()\\n\\tn=int(b[0])\\n\\tk=int(b[1])\\n\\tb=a.readline().split()\\n\\th=[]\\n\\td=[]\\n\\tfor i in range (len(b)):\\n\\t\\th.append((int(b[i]),i+1))\\n\\th.sort()\\n\\tfor i in range (1,k+1):\\n\\t\\td.append(h[-i])\\n\\td.sort()\\n\\te=str(d[0][0])\\t\\n\\tc.write('{0}\\\\n' .format(e))\\n\\tf=[]\\n\\tfor i in range (len(d)):\\n\\t\\tf.append(d[i][1])\\n\\tf.sort()\\n\\tfor i in range (len(f)):\\n\\t\\tg=str(f[i])\\n\\t\\tc.write(g+\\\" \\\")\\nmain()\\n\\n\", \"fi = open('input.txt', 'r')\\nn, k = map(int, fi.readline().split())\\na = sorted(zip(map(int, fi.readline().split()), range(1, n + 1)))\\nfo = open('output.txt', 'w')\\nprint(str(a[n - k][0]), file=fo)\\nprint(' '.join(str(ai[1]) for ai in a[n - k:]), file=fo)\", \"with open('input.txt') as fin:\\n\\tlines = fin.readlines()\\n_, k = map(int, lines[0].split())\\nlights = sorted((int(light), i + 1) for i, light in enumerate(lines[1].split()))\\nitops = sorted(i for _, i in lights[-k:])\\nwith open('output.txt', 'w') as fout:\\n\\tprint(lights[-k][0], file=fout)\\n\\tprint(' '.join(map(str, itops)), file=fout)\", \"import sys\\nsys.stdin = open('input.txt', 'r')\\nsys.stdout = open('output.txt', 'w')\\nn,k = list(map(int, input().split()))\\nA = []\\nfor i,light in enumerate(list(map(int, input().split()))):\\n    A.append((light,i))\\nA.sort(reverse=True)\\nprint(A[k-1][0])\\nout = [A[i][1]+1 for i in range(k)]\\nprint(\\\" \\\".join(map(str, out)))\", \"'''\\nCreated on May 4, 2016\\n@author: Md. Rezwanul Haque\\n'''\\nimport sys \\nfrom audioop import reverse\\nsys.stdin = open(\\\"input.txt\\\",\\\"r\\\");\\nsys.stdout = open(\\\"output.txt\\\",\\\"w\\\");\\n\\nn,k = map(int,input().split())\\np = [(x,i)for i,x in enumerate (list(map(int,input().split())),1)]\\n#print(p)\\np.sort(reverse = True)\\n#print(p)\\nprint(p[k-1][0])\\nprint(\\\" \\\".join(str(x[1])for x in p[:k]))\", \"def main():\\n    with open(\\\"input.txt\\\", \\\"r\\\") as f:\\n        n, k, = list(map(int, f.readline().split()))\\n        l = [-1] + list(map(int, f.readline().split()))\\n    idx = sorted(list(range(1, n + 1)), key=l.__getitem__, reverse=True)[:k]\\n    with open(\\\"output.txt\\\", \\\"w\\\") as f:\\n        f.writelines((str(l[idx[-1]]), '\\\\n', ' '.join(map(str, idx))))\\n\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"F=open('input.txt','r')\\nI=lambda:list(map(int,F.readline().split()))\\nn,k=I()\\na=I()\\nm=sorted(range(1,n+1),key=lambda x:a[x-1])[-k:]\\nW=open('output.txt','w')\\nW.write(str(a[m[0]-1])+'\\\\n'+' '.join(map(str,m)))\\nW.close()\", \"F=open('input.txt','r')\\nI=lambda:list(map(int,F.readline().split()))\\nn,k=I()\\na=I()\\nm=sorted(range(1,n+1),key=lambda x:a[x-1])[-k:]\\nW=open('output.txt','w')\\nW.write(str(a[m[0]-1])+'\\\\n'+' '.join(map(str,m)))\\nW.close()\", \"f = open(\\\"input.txt\\\", \\\"r\\\")\\ng = open(\\\"output.txt\\\", \\\"w\\\")\\nn, k = map(int, f.readline().split())\\na = [(x+1, int(y)) for x, y in enumerate(f.readline().split())]\\na = sorted(a, key=lambda x: x[1])[::-1]\\ng.write(str(a[k-1][1]) + \\\"\\\\n\\\")\\nfor z in a[:k]:\\n\\tg.write(str(z[0]) + \\\" \\\")\\nf.close()\\ng.close()\", \"F=open('input.txt','r')\\nI=lambda:list(map(int,F.readline().split()))\\nn,k=I()\\na=I()\\nm=sorted(range(1,n+1),key=lambda x:a[x-1])[-k:]\\nW=open('output.txt','w')\\nW.write(str(a[m[0]-1])+'\\\\n'+' '.join(map(str,m)))\\nW.close()\", \"'''\\ndef main():\\n\\tfrom sys import stdin,stdout\\ndef __starting_point():\\n\\tmain()\\n'''\\n#349B\\n'''\\ndef main():\\n\\tfrom sys import stdin,stdout\\n\\tN = int(stdin.readline())\\n\\tarr = list(map(int,stdin.readline().split()))\\n\\tdiv = []\\n\\tfor i in arr:\\n\\t\\tdiv.append(N//i)\\n\\tmaxim = 0\\n\\tmaxindex = -1\\n\\tfor i in range(9):\\n\\t\\tif div[i] >maxim:\\n\\t\\t\\tmaxim = div[i]\\n\\t\\t\\tmaxindex = i\\n\\tif maxindex > -1:\\n\\t\\tans = [ (maxindex+1) for i in range(maxim)]\\n\\t\\tN= N%arr[maxindex]\\n\\t\\t#print(N)\\n\\t\\ti = 0\\n\\t\\twhile i<maxim:\\n\\t\\t\\t#print('i=',i,'N=',N)\\n\\t\\t\\tfor j in range(8,maxindex,-1):\\n\\t\\t\\t\\t#print('j=',j,'diff=',arr[j]-arr[ans[i]-1])\\n\\t\\t\\t\\tif arr[j]-arr[ans[i]-1] <=N:\\n\\t\\t\\t\\t\\tN -= arr[j]-arr[ans[i]-1]\\n\\t\\t\\t\\t\\tans[i] = j+1\\n\\t\\t\\t\\t\\tbreak\\n\\t\\t\\ti+=1\\n\\t\\tfor i in ans:\\n\\t\\t\\tstdout.write(str(i))\\n\\telse:\\n\\t\\tstdout.write('-1\\\\n')\\ndef __starting_point():\\n\\tmain()\\n'''\\n#234B Input and Output\\ndef main():\\n\\tfrom sys import stdin,stdout\\n\\timport collections\\n\\twith open('input.txt','r') as ip:\\n\\t\\tN,K = list(map(int,ip.readline().split()))\\n\\t\\tarr = list(map(int,ip.readline().split()))\\n\\tmydict = collections.defaultdict(set)\\n\\tfor i in range(len(arr)):\\n\\t\\tmydict[arr[i]].add(i+1)\\n\\tans = []\\n\\ti=0\\n\\twhile K>0:\\n\\t\\tfor it in mydict[sorted(list(mydict.keys()),reverse=True)[i]]:\\n\\t\\t\\tans.append(it)\\n\\t\\t\\tK-=1\\n\\t\\t\\tif K<1:\\n\\t\\t\\t\\tbreak\\n\\t\\tminim=i\\n\\t\\ti+=1\\n\\twith open('output.txt','w') as out:\\n\\t\\tout.write(str(sorted(list(mydict.keys()),reverse=True)[minim])+'\\\\n')\\n\\t\\tans=' '.join(str(x) for x in ans)\\n\\t\\tout.write(ans+'\\\\n')\\t\\t\\ndef __starting_point():\\n\\tmain()\\n\\n__starting_point()\", \"F=open('input.txt','r')\\n\\nI=lambda:list(map(int,F.readline().split()))\\n\\nn,k=I()\\n\\na=I()\\n\\nm=sorted(list(range(1,n+1)),key=lambda x:a[x-1])[-k:]\\n\\nW=open('output.txt','w')\\n\\nW.write(str(a[m[0]-1])+'\\\\n'+' '.join(map(str,m)))\\n\\nW.close()\\n\\n\\n\\n# Made By Mostafa_Khaled\\n\", \"import sys\\nfrom math import *\\n\\nf = open('input.txt', 'r')\\nout = open('output.txt', 'w')\\n\\ndef minp():\\n\\treturn f.readline().strip()\\n\\ndef mint():\\n\\treturn int(minp())\\n\\ndef mints():\\n\\treturn map(int, minp().split())\\n\\nn, k = mints()\\na = []\\nj = 0\\nfor i in mints():\\n\\tj += 1\\n\\ta.append((-i, j))\\na.sort()\\nprint(-a[k-1][0], file=out)\\nfor i in range(k):\\n\\tprint(a[i][1], end=' ', file=out)\\nf.close()\\nout.close()\", \"#!/usr/bin/env python\\n\\ndef main():\\n\\n    text_input = []\\n    with open('input.txt', 'r') as f:\\n        text_input = f.readlines()\\n    \\n    n, k = [int(c) for c in text_input[0].split()]\\n    lights = [(int(c), i) for i, c in enumerate(text_input[1].split())]\\n    lights.sort(reverse=True)\\n    res = [str(lights[i][1] + 1) for i in range(k)]\\n    with open('output.txt', 'w') as f:\\n        print(lights[k-1][0], file=f)\\n        print(' '.join(res), file=f)\\n    \\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"f = open(\\\"input.txt\\\",\\\"r\\\")\\nn, k = map(str,f.readline().split())\\nf1 = open(\\\"output.txt\\\",\\\"w\\\")\\nn = int(n); k = int(k)\\nb = []; c = []\\na = list(map(str,f.readline().split()))\\nfor i in range(len(a)): a[i] = int(a[i])\\np = 0\\nfor i in range(len(a)):\\n    for j in range(len(a)):\\n        if a[i] <= a[j] and i != j: p += 1\\n    if p >= k-1: b.append(a[i])\\n    p = 0\\nf1.write(str(max(b)))\\np = 0\\nc.append(a.index(max(b))+1)\\nfor i in range(len(a)):\\n    if a[i] >= max(b) and p < k-1 and i+1 not in c:\\n        c.append(i+1); p += 1\\nc.sort()\\nf1.write(\\\"\\\\n\\\")\\nfor i in range(len(c)): f1.write(str(c[i])); f1.write(\\\" \\\")\\nf.close(); f1.close()\", \"def f(idl,idr,x):\\n    if idr-idl<2:\\n        return\\n    m=(idr+idl)//2\\n    i=idl\\n    j=m\\n    f(idl,m,x)\\n    f(m,idr,x)\\n    a = []\\n    for k in range(idr-idl):\\n        if j >= idr or (i < m and x[i]<x[j]):\\n            a.append(x[i])\\n            i+=1\\n        else:\\n            a.append(x[j])\\n            j+=1\\n    for k in range(idr - idl):\\n        x[k+idl] = a[k]\\n\\nfi = open('input.txt', 'r')\\nn,k=map(int,fi.readline().split())\\na=fi.readline().split()\\na=[[int(a[x]),x+1] for x in range(n)]\\nf(0,n,a)\\nfo = open('output.txt', 'w')\\nprint(a[-k][0], file=fo)\\nprint(*[ x[1] for x in a[-k:]], file=fo)\"]",
  "input_output": "{\n  \"inputs\": [\n    \"5 3\\n20 10 30 40 10\\n\",\n    \"6 5\\n90 20 35 40 60 100\\n\",\n    \"100 7\\n85 66 9 91 50 46 61 12 55 65 95 1 25 97 95 4 59 59 52 34 94 30 60 11 68 36 17 84 87 68 72 87 46 99 24 66 75 77 75 2 19 3 33 19 7 20 22 3 71 29 88 63 89 47 7 52 47 55 87 77 9 81 44 13 30 43 66 74 9 42 9 72 97 61 9 94 92 29 18 7 92 68 76 43 35 71 54 49 77 50 77 68 57 24 84 73 32 85 24 37\\n\",\n    \"1 1\\n10\\n\",\n    \"1 1\\n86\\n\",\n    \"100 79\\n83 83 83 83 83 94 94 83 83 83 83 90 83 99 83 91 83 83 83 83 83 83 83 83 83 83 83 91 83 83 83 83 83 96 83 83 83 91 83 83 92 83 83 83 83 83 83 83 83 83 83 83 83 83 83 83 83 83 83 98 83 83 91 97 83 83 83 83 83 83 83 92 83 83 83 83 83 83 83 93 83 83 91 83 83 83 83 83 83 83 83 83 83 83 96 83 83 83 83 83\\n\",\n    \"20 3\\n17 76 98 17 55 17 17 99 65 17 17 17 17 52 17 17 69 88 17 17\\n\",\n    \"15 1\\n0 78 24 24 61 60 0 65 52 57 97 51 56 13 10\\n\",\n    \"50 50\\n59 40 52 0 65 49 3 58 57 22 86 37 55 72 11 3 30 30 20 64 44 45 12 48 96 96 39 14 8 53 40 37 8 58 97 16 96 48 30 89 66 19 31 50 23 80 67 16 11 7\\n\",\n    \"60 8\\n59 12 34 86 57 65 42 24 62 18 94 92 43 29 95 33 73 3 69 18 36 18 34 97 85 65 74 25 26 70 46 31 57 73 78 89 95 77 94 71 38 23 30 97 69 97 76 43 76 31 38 50 13 16 55 85 47 5 71 4\\n\",\n    \"70 5\\n76 16 20 60 5 96 32 50 35 9 79 42 38 35 72 45 98 33 55 0 86 92 49 87 22 79 35 27 69 35 89 29 31 43 88 1 48 95 3 92 82 97 53 80 79 0 78 58 37 38 45 9 5 38 53 49 71 7 91 3 75 17 76 44 77 31 78 91 59 91\\n\",\n    \"12 3\\n18 64 98 27 36 27 65 43 39 41 69 47\\n\",\n    \"15 13\\n6 78 78 78 78 20 78 78 8 3 78 18 32 56 78\\n\",\n    \"17 4\\n75 52 24 74 70 24 24 53 24 48 24 0 67 47 24 24 6\\n\",\n    \"14 2\\n31 18 78 90 96 2 90 27 86 9 94 98 94 34\\n\",\n    \"100 56\\n56 64 54 22 46 0 51 27 8 10 5 26 68 37 51 53 4 64 82 23 38 89 97 20 23 31 7 95 55 27 33 23 95 6 64 69 27 54 36 4 96 61 68 26 46 10 61 53 32 19 28 62 7 32 86 84 12 88 92 51 53 23 80 7 36 46 48 29 12 98 72 99 16 0 94 22 83 23 12 37 29 13 93 16 53 21 8 37 67 33 33 67 35 72 3 97 46 30 9 57\\n\",\n    \"90 41\\n43 24 4 69 54 87 33 34 9 77 87 66 66 0 71 43 42 10 78 48 26 40 8 61 80 38 76 63 7 47 99 69 77 43 29 74 86 93 39 28 99 98 11 27 43 58 50 61 1 79 45 17 23 13 10 98 41 28 19 98 87 51 26 28 88 60 42 25 19 3 29 18 0 56 84 27 43 92 93 97 25 90 13 90 75 52 99 6 66 87\\n\",\n    \"100 71\\n29 56 85 57 40 89 93 81 92 38 81 41 18 9 89 21 81 6 95 94 38 11 90 38 6 81 61 43 81 12 36 35 33 10 81 49 59 37 81 61 95 34 43 20 94 88 57 81 42 81 50 24 85 81 1 90 33 8 59 87 17 52 91 54 81 98 28 11 24 51 95 31 98 29 5 81 91 52 41 81 7 9 81 81 13 81 3 81 10 0 37 47 62 50 81 81 81 94 93 38\\n\",\n    \"100 55\\n72 70 77 90 86 96 60 60 60 60 87 62 60 87 0 60 82 60 86 74 60 60 60 60 60 60 78 60 60 60 96 60 60 0 60 60 89 99 60 60 60 60 60 60 89 60 88 84 60 93 0 60 60 60 75 60 67 64 65 60 65 60 72 60 76 4 60 60 60 63 96 62 78 71 63 81 89 98 60 60 69 60 61 60 60 60 85 71 82 79 67 60 60 60 79 96 2 60 60 60\\n\",\n    \"100 27\\n25 87 25 25 77 78 25 73 91 25 25 70 84 25 61 75 82 25 25 25 25 65 25 25 82 63 93 25 93 75 25 25 25 89 98 25 25 72 70 25 72 25 25 25 70 25 25 98 90 25 25 25 25 25 91 25 78 71 63 69 25 25 25 63 25 25 75 94 25 25 25 25 25 97 25 78 66 87 25 89 25 25 73 85 25 91 72 25 25 80 25 70 25 96 25 25 25 25 25 25\\n\",\n    \"100 99\\n1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2\\n\",\n    \"100 50\\n1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2\\n\",\n    \"100 51\\n1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2\\n\",\n    \"100 75\\n1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2\\n\",\n    \"100 45\\n1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2 1 2\\n\",\n    \"2 2\\n2 2\\n\",\n    \"2 1\\n2 1\\n\",\n    \"2 1\\n1 2\\n\",\n    \"3 1\\n1 2 0\\n\",\n    \"3 2\\n0 0 0\\n\",\n    \"3 3\\n0 1 0\\n\",\n    \"3 2\\n99 100 99\\n\",\n    \"1 1\\n0\\n\",\n    \"4 1\\n100 100 0 100\\n\",\n    \"4 2\\n0 1 0 1\\n\",\n    \"10 3\\n0 1 2 3 0 1 2 3 0 1\\n\",\n    \"10 9\\n0 1 0 1 100 100 1 0 1 0\\n\",\n    \"7 7\\n1 0 0 0 0 0 0\\n\",\n    \"7 6\\n0 0 0 0 0 0 1\\n\",\n    \"7 1\\n12 33 12 88 10 0 3\\n\",\n    \"7 1\\n0 1 1 1 1 1 1\\n\",\n    \"7 6\\n1 1 1 1 1 1 0\\n\",\n    \"7 2\\n1 0 1 1 1 1 1\\n\",\n    \"8 4\\n1 1 1 1 0 0 0 0\\n\",\n    \"7 5\\n1 1 1 2 0 0 0\\n\"\n  ],\n  \"outputs\": [\n    \"20\\n1 3 4 \\n\",\n    \"35\\n1 3 4 5 6 \\n\",\n    \"94\\n11 14 15 21 34 73 76 \\n\",\n    \"10\\n1 \\n\",\n    \"86\\n1 \\n\",\n    \"83\\n6 7 12 14 16 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 \\n\",\n    \"88\\n3 8 18 \\n\",\n    \"97\\n11 \\n\",\n    \"0\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 \\n\",\n    \"92\\n11 12 15 24 37 39 44 46 \\n\",\n    \"92\\n6 17 38 40 42 \\n\",\n    \"65\\n3 7 11 \\n\",\n    \"8\\n2 3 4 5 6 7 8 9 11 12 13 14 15 \\n\",\n    \"67\\n1 4 5 13 \\n\",\n    \"96\\n5 12 \\n\",\n    \"33\\n1 2 3 5 7 13 14 15 16 18 19 21 22 23 28 29 33 35 36 38 39 41 42 43 45 47 48 52 55 56 58 59 60 61 63 65 66 67 70 71 72 75 77 80 83 85 88 89 90 91 92 93 94 96 97 100 \\n\",\n    \"52\\n4 5 6 10 11 12 13 15 19 24 25 27 28 31 32 33 36 37 38 41 42 46 48 50 56 60 61 65 66 74 75 78 79 80 82 84 85 86 87 89 90 \\n\",\n    \"35\\n2 3 4 5 6 7 8 9 10 11 12 15 17 19 20 21 23 24 26 27 28 29 31 32 35 36 37 38 39 40 41 43 45 46 47 48 49 50 51 53 54 56 59 60 62 63 64 65 66 70 71 73 76 77 78 79 80 83 84 86 88 91 92 93 94 95 96 97 98 99 100 \\n\",\n    \"60\\n1 2 3 4 5 6 11 12 14 17 19 20 27 31 37 38 45 47 48 50 55 57 58 59 61 63 65 70 71 72 73 74 75 76 77 78 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 98 99 100 \\n\",\n    \"75\\n2 5 6 9 13 16 17 25 27 29 30 34 35 48 49 55 57 67 68 74 76 78 80 84 86 90 94 \\n\",\n    \"1\\n2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 \\n\",\n    \"2\\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100 \\n\",\n    \"1\\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 99 100 \\n\",\n    \"1\\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 \\n\",\n    \"2\\n12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100 \\n\",\n    \"2\\n1 2 \\n\",\n    \"2\\n1 \\n\",\n    \"2\\n2 \\n\",\n    \"2\\n2 \\n\",\n    \"0\\n2 3 \\n\",\n    \"0\\n1 2 3 \\n\",\n    \"99\\n2 3 \\n\",\n    \"0\\n1 \\n\",\n    \"100\\n4 \\n\",\n    \"1\\n2 4 \\n\",\n    \"2\\n4 7 8 \\n\",\n    \"0\\n2 3 4 5 6 7 8 9 10 \\n\",\n    \"0\\n1 2 3 4 5 6 7 \\n\",\n    \"0\\n2 3 4 5 6 7 \\n\",\n    \"88\\n4 \\n\",\n    \"1\\n7 \\n\",\n    \"1\\n1 2 3 4 5 6 \\n\",\n    \"1\\n6 7 \\n\",\n    \"1\\n1 2 3 4 \\n\",\n    \"0\\n1 2 3 4 7 \\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/234/B",
  "starter_code": ""
}