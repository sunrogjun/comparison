{
  "task_id": "APPS/336",
  "problem_id": 336,
  "prompt": "Vasya works as a watchman in the gallery. Unfortunately, one of the most expensive paintings was stolen while he was on duty. He doesn't want to be fired, so he has to quickly restore the painting. He remembers some facts about it.  The painting is a square 3 \u00d7 3, each cell contains a single integer from 1 to n, and different cells may contain either different or equal integers.  The sum of integers in each of four squares 2 \u00d7 2 is equal to the sum of integers in the top left square 2 \u00d7 2.  Four elements a, b, c and d are known and are located as shown on the picture below. $\\left. \\begin{array}{|c|c|c|} \\hline ? & {a} & {?} \\\\ \\hline b & {?} & {c} \\\\ \\hline ? & {d} & {?} \\\\ \\hline \\end{array} \\right.$\n\nHelp Vasya find out the number of distinct squares the satisfy all the conditions above. Note, that this number may be equal to 0, meaning Vasya remembers something wrong.\n\nTwo squares are considered to be different, if there exists a cell that contains two different integers in different squares.\n\n\n-----Input-----\n\nThe first line of the input contains five integers n, a, b, c and d (1 \u2264 n \u2264 100 000, 1 \u2264 a, b, c, d \u2264 n)\u00a0\u2014 maximum possible value of an integer in the cell and four integers that Vasya remembers.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the number of distinct valid squares.\n\n\n-----Examples-----\nInput\n2 1 1 1 2\n\nOutput\n2\n\nInput\n3 3 1 2 3\n\nOutput\n6\n\n\n\n-----Note-----\n\nBelow are all the possible paintings for the first sample. $\\left. \\begin{array}{|l|l|l|} \\hline 2 & {1} & {2} \\\\ \\hline 1 & {1} & {1} \\\\ \\hline 1 & {2} & {1} \\\\ \\hline \\end{array} \\right.$ $\\left. \\begin{array}{|l|l|l|} \\hline 2 & {1} & {2} \\\\ \\hline 1 & {2} & {1} \\\\ \\hline 1 & {2} & {1} \\\\ \\hline \\end{array} \\right.$\n\nIn the second sample, only paintings displayed below satisfy all the rules. $\\left. \\begin{array}{|c|c|c|} \\hline 2 & {3} & {1} \\\\ \\hline 1 & {1} & {2} \\\\ \\hline 2 & {3} & {1} \\\\ \\hline \\end{array} \\right.$ $\\left. \\begin{array}{|c|c|c|} \\hline 2 & {3} & {1} \\\\ \\hline 1 & {2} & {2} \\\\ \\hline 2 & {3} & {1} \\\\ \\hline \\end{array} \\right.$ $\\left. \\begin{array}{|l|l|l|} \\hline 2 & {3} & {1} \\\\ \\hline 1 & {3} & {2} \\\\ \\hline 2 & {3} & {1} \\\\ \\hline \\end{array} \\right.$ $\\left. \\begin{array}{|c|c|c|} \\hline 3 & {3} & {2} \\\\ \\hline 1 & {1} & {2} \\\\ \\hline 3 & {3} & {2} \\\\ \\hline \\end{array} \\right.$ $\\left. \\begin{array}{|c|c|c|} \\hline 3 & {3} & {2} \\\\ \\hline 1 & {2} & {2} \\\\ \\hline 3 & {3} & {2} \\\\ \\hline \\end{array} \\right.$ $\\left. \\begin{array}{|c|c|c|} \\hline 3 & {3} & {2} \\\\ \\hline 1 & {3} & {2} \\\\ \\hline 3 & {3} & {2} \\\\ \\hline \\end{array} \\right.$",
  "solutions": "[\"n, a, b, c, d= [int(i) for i in input().split()]\\no = 0\\nfor i in range(1, n+1):\\n\\tif i+b-c>0 and i+b-c<=n:\\n\\t\\tif i+a-d>0 and i+a-d<=n:\\n\\t\\t\\tif i+a+b-c-d>0 and i+a+b-c-d<=n:\\n\\t\\t\\t\\to+=1\\nprint(o*n)\\n\", \"n, a, b, c, d = map(int, input().split())\\nans = 0\\nfor i in range(1, n + 1):\\n\\tx = i + b - c\\n\\ty = i + a + b - c - d\\n\\tz = i + a - d\\n\\tans += n * (1 <= x <= n and 1 <= y <= n and 1 <= z <= n)\\nprint(ans)\", \"n,a,b,c,d=[int(x) for x in input().split()]\\npossib=0\\nfor x in range(1,n+1):\\n    if 1<=(a+b+x-c-d)<=n and 1<=(b+x-c)<=n and 1<=(a+x-d)<=n:\\n        possib+=1\\nprint(possib*n)\\n\", \"n, a, b, c, d = list(map(int, input().split()))\\nans = 0\\nfor x1 in range(1, n + 1):\\n    x2 = x1 + b - c\\n    x4 = a + x1 - d\\n    x5 = b + x4 - c\\n    if 1 <= x2 <= n and 1 <= x4 <= n and 1 <= x5 <= n:\\n        ans += 1\\nprint(ans * n)\\n    \\n\", \"n, a, b, c, d = list(map(int, input().split()))\\nl = max(1 - b + c, 1 - a + d, 1 - a - b + c + d)\\nh = min(n - b + c, n - a + d, n - a - b + c + d)\\nif (l < 0):\\n    l = 1\\nif (h > n):\\n    h = n\\nif h < l:\\n    print(0)\\nelse:\\n    print(n * (h - l + 1))\\n\", \"n,a,b,c,d = list(map(int, input().split()))\\nnum = 0\\ni = 0\\nwhile n > i:\\n    i += 1\\n    if i + b - c < 1 or i + b - c > n:\\n        continue\\n    if i + a - d < 1 or i + a - d > n:\\n        continue\\n    if i + a - d + b - c  < 1 or i + a - d + b - c > n:\\n        continue\\n    num += 1\\nprint(num * n)\\n\", \"n, a, b, c, d = list(map(int, input().split()))\\nans = 0\\nfor i in range(1, n + 1):\\n    s = i + a + b\\n    x2 = s - a - c\\n    x3 = s - c - d\\n    x4 = s - b - d\\n    if max(x2, x3, x4) <= n and min(x2, x3, x4) >= 1:\\n        ans += n\\nprint(ans)\\n\", \"#!/usr/bin/env python3\\n\\ndef main():\\n    n, a, b, c, d = [int(x) for x in input().split()]\\n    cnt = 0\\n    for x in range(1, n + 1):\\n        z1 = x + b - c\\n        z2 = x + a + b - d - c\\n        z3 = x + a - d\\n\\n        if all(1 <= xx <= n for xx in (z1, z2, z3)):\\n            cnt += n\\n\\n    print(cnt)\\n\\ndef __starting_point():\\n    main()\\n\\n__starting_point()\", \"n,a,b,c,d=map(int,input().split())\\nq={}\\nfor x1 in range(1,n+1):\\n    x4=a+x1-d\\n    if x4<1 or x4>n: continue\\n    x2=x1+b-c\\n    if x2<1 or x2>n: continue\\n    x5=x2+a-d\\n    if x5<1 or x5>n: continue\\n    q[(x1,x2,x4,x5)]=1\\nprint(len(q)*n)\", \"n, a, b, c, d = list(map(int, input().split()))\\narr = [0] * 4\\narr[0] = a + b\\narr[1] = a + c\\narr[2] = c + d\\narr[3] = b + d\\narr.sort()\\nif n + arr[0] - arr[3] >= 0:\\n    print(n * (n + arr[0] - arr[3]))\\nelse:\\n    print(0)\\n\", \"n, a, b, c, d = map(int, input().split())\\nans = 0\\nfor e in range(1, n + 1):\\n    min1 = a + b + e + 1\\n    max1 = a + b + e + n\\n    min2 = b + e + d + 1\\n    max2 = b + d + e + n\\n    min3 = d + c + e + 1\\n    max3 = d + c + e + n\\n    min4 = a + c + e + 1\\n    max4 = a + c + e + n\\n    l = max(min1, min2, min3, min4)\\n    r = min(max1, max2, max3, max4)\\n    if l <= r:\\n        ans += r - l + 1\\nprint(ans)\", \"n, a, b, c, d = map(int, input().split())\\n\\nans = 0\\nfor i in range(1, n+1) :\\n    s = a+b+i\\n    j = s - a - c\\n    k = s - b - d\\n    l = s - c - d\\n    if 1 <= j <=n and 1<= k <= n and 1<= l <= n :\\n        ans += n\\n\\nprint(ans)\", \"n, a, b, c, d = list(map(int, input().split()))\\nlst = [a+b, a+c, c+d, b+d]\\nif (n-(max(lst)-min(lst))) <=0:\\n    print(0)\\nelse:\\n    print((n-(max(lst)-min(lst)))*n)\\n\\n\", \"n, a, b, c, d = map(int, input().split())\\n\\nans = 0\\n\\nfor x1 in range(1, n+1):\\n\\tx2 = x1+b-c\\n\\tif x2 < 1 or x2 > n:\\n\\t\\tcontinue\\n\\tx4 = x1+a-d\\n\\tif x4 < 1 or x4 > n:\\n\\t\\tcontinue\\n\\tx5 = x1+a+b-c-d\\n\\tif x5 < 1 or x5 > n:\\n\\t\\tcontinue\\n\\n\\tans += 1\\n\\nprint(ans*n)\", \"def solve(n,a,b,c,d):\\n    ans = 0\\n    sums = [a+b, b+d, d+c, c+a]\\n    minsum = min(sums)\\n    maxsum = max(sums)\\n    tmp = minsum + n\\n    if (tmp <= maxsum):\\n        return ans\\n    else:\\n        ans += n * (tmp - maxsum)\\n    return ans\\n    \\n(n,a,b,c,d) = [int(x) for x in input().split()]\\nprint(solve(n,a,b,c,d))\", \"n, a, b, c, d = list(map(int, input().split()))\\nlo = min(a+b, a+c, c+d, b+d)\\nhi = max(a+b, a+c, c+d, b+d)\\nans = 0\\nfor x in range(1, n+1):\\n    ans += max(0, n-(hi-lo))\\nprint(ans)\\n\", \"n, a, b, c, d = [int(s) for s in input().split()]\\ndef solve(p):\\n    s = []\\n    s.append(p[0][0] + p[0][1] + p[1][0] + p[1][1])\\n    s.append(p[0][1] + p[0][2] + p[1][1] + p[1][2])\\n    s.append(p[1][0] + p[1][1] + p[2][0] + p[2][1])\\n    s.append(p[1][1] + p[1][2] + p[2][1] + p[2][2])\\n    return max(0, n - (max(s) - min(s)))\\np = [\\n    [0, a, 0],\\n    [b, 0, c],\\n    [0, d, 0],\\n]\\nres = 0\\nfor m in range(1, n + 1):\\n    p[1][1] = m\\n    res += solve(p)\\nprint(res)\\n\", \"# You lost the game.\\nn,a,b,c,d = list(map(int, input().split()))\\nr = 0\\nfor e in range(1,n+1):\\n    h = e + (a-d)\\n    i = h + (b-c)\\n    f = i + (d-a)\\n    if e == f + (c-b) and h <= n and i <= n and f <= n and h > 0 and i > 0 and f > 0:\\n        r += 1\\nprint(r*n)\\n\\n\", \"import sys\\n\\narr = list(map(int, input().strip().split()))\\nn = arr[0]\\ntop = arr[1]\\nleft = arr[2]\\nright = arr[3]\\nbottom = arr[4]\\n\\ntop_left = top + left\\ntop_right = top + right\\nbottom_left = bottom + left\\nbottom_right = bottom + right\\n\\nmax_greater = 0\\nmax_lesser = 0\\nnums = [top_right, bottom_left, bottom_right]\\nfor e in nums:\\n    diff = e - top_left\\n    max_greater = max(max_greater, diff)\\n    max_lesser = min(max_lesser, diff)\\nmax_diff = max_greater - max_lesser\\n\\nif max_diff > n - 1:\\n    ans = 0\\nelse:\\n    ans = (n - max_diff) * n\\nprint(ans)\\n\", \"def f(n, r, p, q):\\n    if r < 1 or r > n: return 0\\n    if p < 1 or p > n: return 0\\n    if q < 1 or q > n: return 0\\n    return 1\\n\\nn, a, b, c, d = [int(i) for i in input().split()]\\nbox = 0\\nfor i in range(1, n + 1):\\n    r = i + b - c\\n    p = r + a - d\\n    q = p + c - b\\n    box += f(n, r, p, q)\\n    '''\\n    for j in range(1, n + 1):\\n        print(i, a, r)\\n        print(b, j, c)\\n        print(q, d, p)\\n        print()\\n        '''\\nbox *= n\\nprint(box)\\n    \\n\", \"\\ndef __starting_point():\\n    #n, m = list(map(int, input().split()))\\n    n, a, b, c, d = list(map(int, input().split()))\\n    x = max([1 - a + d, 1 - b + c, 1, 1 - a - b + d + c])\\n    y = min([n - a + d, n - b + c, n, n - a - b + d + c])\\n    #print(x, y)\\n    if x > y:\\n        print(0)\\n        return\\n    else:\\n        print(n *(y - x + 1))\\n    \\n\\n__starting_point()\", \"n, a, b, c, d = map(int, input().split())\\n\\nmin_sum = max(a + b, a + c, b + d, c + d) + 1\\nmax_sum = min(a + b, a + c, b + d, c + d) + n\\n\\nprint(max((max_sum - min_sum + 1) * n, 0))\", \"import sys\\n\\nn, a, b, c, d = list(map(int,sys.stdin.readline().split()))\\n\\nc1 = 0\\nfor x11 in range(n):\\n    x13 = x11 + 1 - c + b\\n    x31 = x11 + 1 - d + a\\n    x33 = x11 + 1 - c - d + a + b\\n    #print (x11 + 1, x13, x31, x33)\\n    if x13 >= 1 and x13 <= n and x31 >= 1 and x31 <= n and x33 >= 1 and x33 <= n:\\n        c1 = c1 + 1\\nprint(c1 * n)\\n\", \"n, a, b, c, d = map(int, input().split())\\nans = 0\\nfor i in range(1, n + 1):\\n    if c + d + 1 <= a + b + i <= c + d + n and a + c + 1 <= a + b + i <= a + c + n and b + d + 1 <= a + b + i <= b + d + n:\\n        ans += n\\nprint(ans)\", \"n, a, b, c, d = list(map(int, input().split(' ')))\\nprint(max(0, n*(n-max([a+b, a+c, c+d, b+d])+min([a+b, a+c, c+d, b+d]))))\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"2 1 1 1 2\\n\",\n    \"3 3 1 2 3\\n\",\n    \"1 1 1 1 1\\n\",\n    \"1000 522 575 426 445\\n\",\n    \"99000 52853 14347 64237 88869\\n\",\n    \"100000 2 2 2 2\\n\",\n    \"2 1 1 2 2\\n\",\n    \"10 9 10 8 10\\n\",\n    \"100 19 16 35 83\\n\",\n    \"1000 102 583 606 929\\n\",\n    \"10000 1816 3333 6908 7766\\n\",\n    \"100000 80015 84290 50777 30497\\n\",\n    \"100000 64022 49026 55956 88430\\n\",\n    \"100000 10263 46628 10268 22948\\n\",\n    \"100000 81311 81584 51625 57276\\n\",\n    \"100000 77594 3226 21255 8541\\n\",\n    \"100000 65131 35523 58220 87645\\n\",\n    \"100000 83958 32567 91083 95317\\n\",\n    \"100000 36851 54432 21164 85520\\n\",\n    \"100000 55732 17473 23832 75148\\n\",\n    \"100000 60789 25296 49585 25237\\n\",\n    \"100000 92060 77234 58709 36956\\n\",\n    \"100000 87223 66046 27153 40823\\n\",\n    \"100000 3809 35468 34556 51158\\n\",\n    \"100000 35038 37363 95275 88903\\n\",\n    \"100000 45274 9250 36558 49486\\n\",\n    \"100000 1 1 1 1\\n\",\n    \"100000 1 1 1 100000\\n\",\n    \"100000 1 1 100000 1\\n\",\n    \"100000 1 1 100000 100000\\n\",\n    \"100000 1 100000 1 1\\n\",\n    \"100000 1 100000 1 100000\\n\",\n    \"100000 1 100000 100000 1\\n\",\n    \"100000 1 100000 100000 100000\\n\",\n    \"100000 100000 1 1 1\\n\",\n    \"100000 100000 1 1 100000\\n\",\n    \"100000 100000 1 100000 1\\n\",\n    \"100000 100000 1 100000 100000\\n\",\n    \"100000 100000 100000 1 1\\n\",\n    \"100000 100000 100000 1 100000\\n\",\n    \"100000 100000 100000 100000 1\\n\",\n    \"100000 100000 100000 100000 100000\\n\",\n    \"3 3 3 1 1\\n\",\n    \"10 1 2 5 10\\n\",\n    \"5 1 1 5 5\\n\",\n    \"4 4 4 1 1\\n\",\n    \"10 10 10 1 1\\n\",\n    \"5 5 5 1 1\\n\",\n    \"100 100 100 1 1\\n\",\n    \"3 1 1 3 3\\n\",\n    \"10 2 10 1 10\\n\",\n    \"7 7 7 1 1\\n\",\n    \"5 5 3 4 1\\n\",\n    \"7 1 1 7 7\\n\",\n    \"100 1 1 100 100\\n\",\n    \"123 1 2 3 100\\n\",\n    \"10 1 1 10 10\\n\",\n    \"803 525 6 623 8\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"6\\n\",\n    \"1\\n\",\n    \"774000\\n\",\n    \"1296306000\\n\",\n    \"10000000000\\n\",\n    \"0\\n\",\n    \"70\\n\",\n    \"1700\\n\",\n    \"150000\\n\",\n    \"4750000\\n\",\n    \"1696900000\\n\",\n    \"6866200000\\n\",\n    \"5095500000\\n\",\n    \"4600600000\\n\",\n    \"1291800000\\n\",\n    \"5478900000\\n\",\n    \"3012500000\\n\",\n    \"1806300000\\n\",\n    \"7422500000\\n\",\n    \"4015900000\\n\",\n    \"2637100000\\n\",\n    \"1470700000\\n\",\n    \"5173900000\\n\",\n    \"0\\n\",\n    \"6848000000\\n\",\n    \"10000000000\\n\",\n    \"100000\\n\",\n    \"100000\\n\",\n    \"0\\n\",\n    \"100000\\n\",\n    \"0\\n\",\n    \"10000000000\\n\",\n    \"100000\\n\",\n    \"100000\\n\",\n    \"10000000000\\n\",\n    \"0\\n\",\n    \"100000\\n\",\n    \"0\\n\",\n    \"100000\\n\",\n    \"100000\\n\",\n    \"10000000000\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"0\\n\",\n    \"2829\\n\",\n    \"0\\n\",\n    \"0\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/675/B",
  "starter_code": ""
}