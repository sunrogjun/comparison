{
  "task_id": "APPS/425",
  "problem_id": 425,
  "prompt": "Vasya will fancy any number as long as it is an integer power of two. Petya, on the other hand, is very conservative and only likes a single integer $p$ (which may be positive, negative, or zero). To combine their tastes, they invented $p$-binary numbers of the form $2^x + p$, where $x$ is a non-negative integer.\n\nFor example, some $-9$-binary (\"minus nine\" binary) numbers are: $-8$ (minus eight), $7$ and $1015$ ($-8=2^0-9$, $7=2^4-9$, $1015=2^{10}-9$).\n\nThe boys now use $p$-binary numbers to represent everything. They now face a problem: given a positive integer $n$, what's the smallest number of $p$-binary numbers (not necessarily distinct) they need to represent $n$ as their sum? It may be possible that representation is impossible altogether. Help them solve this problem.\n\nFor example, if $p=0$ we can represent $7$ as $2^0 + 2^1 + 2^2$.\n\nAnd if $p=-9$ we can represent $7$ as one number $(2^4-9)$.\n\nNote that negative $p$-binary numbers are allowed to be in the sum (see the Notes section for an example).\n\n\n-----Input-----\n\nThe only line contains two integers $n$ and $p$ ($1 \\leq n \\leq 10^9$, $-1000 \\leq p \\leq 1000$).\n\n\n-----Output-----\n\nIf it is impossible to represent $n$ as the sum of any number of $p$-binary numbers, print a single integer $-1$. Otherwise, print the smallest possible number of summands.\n\n\n-----Examples-----\nInput\n24 0\n\nOutput\n2\n\nInput\n24 1\n\nOutput\n3\n\nInput\n24 -1\n\nOutput\n4\n\nInput\n4 -7\n\nOutput\n2\n\nInput\n1 1\n\nOutput\n-1\n\n\n\n-----Note-----\n\n$0$-binary numbers are just regular binary powers, thus in the first sample case we can represent $24 = (2^4 + 0) + (2^3 + 0)$.\n\nIn the second sample case, we can represent $24 = (2^4 + 1) + (2^2 + 1) + (2^0 + 1)$.\n\nIn the third sample case, we can represent $24 = (2^4 - 1) + (2^2 - 1) + (2^2 - 1) + (2^2 - 1)$. Note that repeated summands are allowed.\n\nIn the fourth sample case, we can represent $4 = (2^4 - 7) + (2^1 - 7)$. Note that the second summand is negative, which is allowed.\n\nIn the fifth sample case, no representation is possible.",
  "solutions": "[\"n, p = list(map(int, input().split()))\\nfor q in range(5757):\\n    s = bin(n)\\n    if n >= q >= s.count('1'):\\n        print(q)\\n        break\\n    n -= p\\nelse:\\n    print(-1)\\n\", \"def get_n(bin_n):\\n    ans = 0\\n    while bin_n > 0:\\n        ans += bin_n & 1\\n        bin_n >>= 1\\n    return ans\\n\\n\\n\\nn, p = map(int, input().split())\\nans = 1\\nwhile ans < 10 ** 5 * 2 and not (n - p * ans >= ans >= get_n(n - p * ans)):\\n    ans += 1\\nif ans == 10 ** 5 * 2:\\n    print(-1)\\nelse:\\n    print(ans)\", \"n, p = list(map(int, input().split()))\\nans = 1\\nn2 = n\\nwhile n2 > 0:\\n    n2 = n - ans * p\\n    count1 = bin(n2).count('1', 2)\\n    if count1 <= ans and ans <= n2:\\n        print(ans)\\n        break\\n    ans += 1\\nelse:\\n    print(-1)\\n\", \"import sys\\n\\n\\ndef count_1(n):\\n    ans = 0\\n    while n > 0:\\n        if n % 2 == 1:\\n            ans += 1\\n        n //= 2\\n    return ans\\n            \\n\\n\\nn, p = list(map(int, input().split()))\\nfor i in range(1, 40):\\n    n -= p\\n    if n <= 0:\\n        break\\n    if count_1(n) <= i and n >= i:\\n        print(i)\\n        return\\nprint(-1)\\n\", \"def Dec_to_Bin(N):\\n    b = ''\\n    while N > 0:\\n        b = str(N % 2) + b\\n        N = N // 2\\n    if b=='':\\n        return \\\"0\\\"\\n    return b\\n\\nif True:\\n    n,p=list(map(int, input().split()))\\n\\n    j=1\\n    while True:\\n        if n-p*j<=0:\\n            print(-1)\\n            break\\n        S=Dec_to_Bin(n-p*j)\\n        if S.count(\\\"1\\\")<=j:\\n            ans=0\\n            k=0\\n            while k<len(S):\\n                ans+=int(S[k])*2**(len(S)-k-1)\\n                k+=1\\n            if ans>=j:\\n                print (j)\\n            else:\\n                print(-1)\\n            break\\n        j+=1\\n\\n#24 0\\n#24 1\\n#24 -1\\n#4 -7\\n#1 1\\n#5 2\\n\", \"n, p = map(int, input().split())\\nmin_ans = -1\\nfor i in range(1, 10000):\\n    nn = n\\n    nn -= i * p\\n    if nn > 0:\\n        st = bin(nn)[2:]\\n        if st.count(\\\"1\\\") <= i and nn >= i:\\n            min_ans = i\\n            break\\nprint(min_ans)\", \"def check(k, n, p):\\n    t = n - p * k\\n    s = bin(t)[2:]\\n    count = 0\\n    for i in range(len(s)):\\n        if s[i] == \\\"1\\\":\\n            count += 1\\n    return count <= k and t >= k\\n\\n\\ndef main():\\n    n, p = map(int, input().split())\\n    i = 1\\n    while i < 10000:\\n        if check(i, n, p):\\n            print(i)\\n            return\\n        i += 1\\n    print(-1)\\n\\nmain()\", \"n,p=list(map(int,input().split()))\\nif p==0:\\n    dv=str(bin(n))[2:]\\n    colvo=dv.count(\\\"1\\\")\\n    print(colvo)\\nelse:\\n    m=1\\n    while n-m*p>=0:\\n        # print(m)\\n        a=n-m*p\\n        dv=str(bin(a))[2:]\\n        colvo=dv.count(\\\"1\\\")\\n        if colvo<=m and m<=a:\\n            print(m)\\n            return\\n        m+=1\\n    print(-1)\\n\", \"from math import log\\ndef col(n):\\n    rez = 0\\n    while n > 0:\\n        rez += n%2\\n        n //= 2\\n    return rez\\n\\n\\ndef f(n, p):\\n    for i in range(1, int(log(n, 2) + 20)):\\n        if col(n-p*i) == i:\\n            return i\\n        if col(n-p*i) < i and n-p*i >= i:\\n            return i\\n    return -1\\n\\n\\nn, p = list(map(int, input().split()))\\nprint(f(n, p))\\n\", \"n, k = map(int, input().split())\\ni = 1\\nn -= k\\nwhile n > 0 and not(bin(n).count('1') <= i <= n):\\n    n -= k\\n    i += 1\\nif n > 0:\\n    print(i)\\nelse:\\n    print(-1)\", \"def get_n(n, k):\\n    if bin(n).count('1') > k or k > n:\\n        return False\\n    return True\\n\\nn, p = list(map(int, input().split()))\\n\\nif p - n >= 0:\\n    print(-1)\\nelif p - n == -1:\\n    print(1)\\nelse:\\n    for i in range(1, 10101):\\n        if get_n(n - p * i, i):\\n            print(i)\\n            return\\n    print(-1)\\n\", \"n, p = map(int, input().split())\\nans = -1\\nfor i in range(10001):\\n    if n - i * p >= i:\\n        c = (bin(n - i * p)[2:]).count(\\\"1\\\")\\n        if c <= i:\\n            ans = i\\n            break\\nprint(ans)\", \"n, p = list(map(int, input().split()))\\nans = -1\\nl = 1\\nwhile n - l * p > 0:\\n    if p == 0:\\n        s = bin(n)[2:]\\n        for i in range(len(s)):\\n            if s[i] == '1':\\n                ans += 1\\n        ans += 1\\n        break\\n    k = n - l * p\\n    v1, v2 = 0, 0\\n    s = bin(k)[2:]\\n    for i in range(len(s)):\\n        if s[i] == '1':\\n            v1 += 1\\n            v2 += 1\\n        if i > 0 and s[i - 1] == '1' and s[i] == '0':\\n            v2 += 1\\n            s = s[:i] + '1' + s[i + 1:]\\n    if v1 <= l <= v2:\\n        ans = l\\n        break\\n    l += 1\\nprint(ans)\\n\", \"import sys\\nimport math\\n# sys.stdin = open(\\\"in.txt\\\")\\nn, p = map(int, input().split())\\nfor i in range(1, 1000000):\\n    if n - p * i >= i and bin(n - p * i)[2:].count(\\\"1\\\") <= i:\\n        print(i)\\n        return\\nprint(-1)\", \"x, p = map(int, input().split())\\n\\nans = float('inf')\\nfor i in range(0, 100001):\\n    y = x - i * p\\n    if (y <= 0):\\n        continue\\n    aaa = 0\\n    for j, el in enumerate(reversed(bin(y))):\\n        if (el == '1'):\\n            aaa += 2**j\\n            if (aaa >= i):\\n                break\\n    bbb = bin(y).count('1')\\n    if (bbb <= i <= aaa):\\n        ans = min(ans, i)\\n\\nif ans == float('inf'):\\n    ans = -1\\n\\nprint(ans)\", \"n, p = map(int, input().split())\\nif n == 0:\\n    print(0)\\nelse:\\n    if p >= n:\\n        print(-1)\\n    else:\\n        i = 0\\n        while 1:\\n            n -= p\\n            if n <= 0:\\n                print(-1)\\n                break\\n            i += 1\\n            s = str(bin(n))\\n            k = 0\\n            for j in s:\\n                if j == '1':\\n                    k += 1\\n            if k <= i and n >= i:\\n                print(i)\\n                break\", \"from math import log2\\nn,p=input().split()\\nn=int(n)\\np=int(p)\\nk=1\\nu=1\\nwhile n-p*k>=1:\\n      #print(bin(n-p*k).count('1'),bin(n-p*k),k,log2(n-p*k))\\n      if log2(n-p*k)+1>=k>=bin(n-p*k).count('1'):\\n            print(k)\\n            u=0\\n            break    \\n      else:\\n            k+=1\\n# print(bin(n-p*k).count('1'),bin(n-p*k))\\n#if log2(n-p*k)>=k:  \\nif u:\\n      print(-1)\", \"n, p = map(int, input().split())\\nans = -1\\nm = 1\\nif p == 0:\\n    s = bin(n)[2:]\\n    for i in range(len(s)):\\n        if s[i] == '1':\\n            ans += 1\\n    ans += 1\\nwhile n - m * p > 0 and p != 0:\\n    k = n - m * p\\n    left, right = 0, 0\\n    s = bin(k)[2:]\\n    for i in range(len(s)):\\n        if s[i] == '1':\\n            left += 1\\n            right += 1\\n        if i > 0 and s[i - 1] == '1' and s[i] == '0':\\n            s = s[:i] + '1' + s[i + 1:]\\n            right += 1\\n    if left <= m <= right:\\n        ans = m\\n        break\\n    m += 1\\nprint(ans)\", \"n, p = list(map(int, input().split()))\\nl = 1\\nk = 1\\nwhile n - l * p > 0:\\n    s = bin(n - l * p)[2:]\\n    l1 = 0\\n    l2 = 0\\n    last = 0\\n    for i in s:\\n        if i == \\\"1\\\":\\n            l1 += 1\\n            l2 += 1\\n            last = 1\\n        else:\\n            if last > 0:\\n                l2 += 2 ** (last - 1)\\n                last += 1\\n    if l >= l1 and l2 >= l:\\n        print(l)\\n        k = 0\\n        break\\n    l += 1\\nif k:\\n    print(-1)\\n\", \"a, b = map(lambda x: int(x), input().split())\\nk = 0\\ns = 1\\nf = True\\nwhile k < s:\\n    a = a - b\\n    if a <= 0:\\n        break\\n    c = a\\n    k += 1\\n    s = 1\\n    while c != 1:\\n        s += c % 2\\n        c = c // 2\\n\\nq = k - s\\nq1 = k\\nfor i in range(q):\\n    a = a - b\\n    if a <= 0:\\n        break\\n    c = a\\n    k += 1\\n    s = 1\\n    while c != 1:\\n        s += c % 2\\n        c = c // 2\\n\\n    if s == k:\\n        print(s)\\n        f = False\\n        break\\nif f and a > 0:\\n    print(q1)\\n\\nif a <= 0:\\n    print(-1)\", \"def bn(x):\\n    b = []\\n    i = 1\\n    j = 0\\n    while j < 32:\\n        #print(x & i, x, i)\\n        b.append(int(x & i != 0))\\n        i = i << 1\\n        j += 1\\n    b.reverse()\\n    return sum(b)\\n\\n\\nn, p = list(map(int, input().split()))\\nfor i in range(1, 32):\\n    bi = bn(n - i * p)\\n    if bi <= i <= n - i * p:\\n        print(i)\\n        return\\nprint(-1)\\n    \\n    \\n\", \"n, p = map(int,input().split())\\nm = 10000000000\\nq = 0\\nfor i in range(1, 100):\\n    a = n - i * p\\n    if a > 0:\\n        u = a\\n        o = 0\\n        while u > 0:\\n            if u % 2 == 1:\\n                o += 1\\n                u //= 2\\n            else:\\n                u //= 2\\n    \\n        mi = o\\n        if (i >= mi) and (a >= i):\\n            print(i)\\n            q = 1\\n            break\\n    else:\\n        break\\nif q == 0:\\n    print(-1)\", \"def pro(g, v):\\n\\tif g == 0:\\n\\t\\tif v == 0:\\n\\t\\t\\treturn True\\n\\t\\telse:\\n\\t\\t\\treturn False\\n\\ty = 2**100\\n\\tans = 0\\n\\tx = g\\n\\twhile x != 0:\\n\\t\\tif x >= y:\\n\\t\\t\\tx -= y\\n\\t\\t\\tans += 1\\n\\t\\ty //= 2\\n\\tif ans <= v and v <= g:\\n\\t\\treturn True\\n\\telse:\\n\\t\\treturn False\\n\\nn, p = list(map(int, input().split()))\\nmini = 100000\\nfor i in range(0, 40000):\\n\\tif n - p * i < 0:\\n\\t\\tbreak\\n\\tx = pro(n - p * i, i)\\n\\t#print (x, i)\\n\\tif (x):\\n\\t\\t#print (\\\"YES\\\")\\n\\t\\tmini = min(mini, i)\\nif mini == 100000:\\n\\tprint(-1)\\nelse:\\n\\tprint (mini)\\n\", \"import math\\nx, y = list(map(int, input().split()))\\n\\ni = 1\\nn = x - (i * y)\\nwhile n >= 1:\\n    a = 0\\n    for j in str(bin(n))[2:]:\\n        a += int(j)\\n        a *= 2\\n    a //= 2\\n    if str(bin(n))[2:].count('1') <= i and i <= a:\\n        print(i)\\n        break\\n    i += 1\\n    n = x - (i * y)\\nelse:\\n    print(-1)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"24 0\\n\",\n    \"24 1\\n\",\n    \"24 -1\\n\",\n    \"4 -7\\n\",\n    \"1 1\\n\",\n    \"10 7\\n\",\n    \"3 -179\\n\",\n    \"12345678 -123\\n\",\n    \"1000000000 1000\\n\",\n    \"1 0\\n\",\n    \"1 -1\\n\",\n    \"536870912 0\\n\",\n    \"536870911 0\\n\",\n    \"1 -1000\\n\",\n    \"100500 -179\\n\",\n    \"1000000000 -1000\\n\",\n    \"536870812 1\\n\",\n    \"536870812 -1\\n\",\n    \"1 1000\\n\",\n    \"1001 1000\\n\",\n    \"13 -987\\n\",\n    \"101 50\\n\",\n    \"1001 500\\n\",\n    \"13 6\\n\",\n    \"5 2\\n\",\n    \"67108838 -1\\n\",\n    \"11 5\\n\",\n    \"19 6\\n\",\n    \"21 10\\n\",\n    \"1 -1\\n\",\n    \"2001 1000\\n\",\n    \"17 8\\n\",\n    \"3002 1000\\n\",\n    \"332639425 -399\\n\",\n    \"9 8\\n\",\n    \"3 2\\n\",\n    \"678 169\\n\",\n    \"2 1\\n\",\n    \"9 4\\n\",\n    \"29 9\\n\",\n    \"782 156\\n\",\n    \"1 0\\n\",\n    \"1999 999\\n\",\n    \"47 23\\n\",\n    \"3998 999\\n\",\n    \"4 3\\n\",\n    \"746 248\\n\",\n    \"2 -1000\\n\",\n    \"35 11\\n\",\n    \"16777215 0\\n\"\n  ],\n  \"outputs\": [\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"5\\n\",\n    \"12\\n\",\n    \"16\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"29\\n\",\n    \"8\\n\",\n    \"8\\n\",\n    \"14\\n\",\n    \"24\\n\",\n    \"26\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"7\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"26\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"13\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"-1\\n\",\n    \"1\\n\",\n    \"-1\\n\",\n    \"8\\n\",\n    \"-1\\n\",\n    \"24\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1225/C",
  "starter_code": ""
}