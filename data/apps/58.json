{
  "task_id": "APPS/58",
  "problem_id": 58,
  "prompt": "Petya has equal wooden bars of length n. He wants to make a frame for two equal doors. Each frame has two vertical (left and right) sides of length a and one top side of length b. A solid (i.e. continuous without breaks) piece of bar is needed for each side.\n\nDetermine a minimal number of wooden bars which are needed to make the frames for two doors. Petya can cut the wooden bars into any parts, but each side of each door should be a solid piece of a wooden bar (or a whole wooden bar).\n\n\n-----Input-----\n\nThe first line contains a single integer n (1 \u2264 n \u2264 1 000) \u2014 the length of each wooden bar.\n\nThe second line contains a single integer a (1 \u2264 a \u2264 n) \u2014 the length of the vertical (left and right) sides of a door frame.\n\nThe third line contains a single integer b (1 \u2264 b \u2264 n) \u2014 the length of the upper side of a door frame.\n\n\n-----Output-----\n\nPrint the minimal number of wooden bars with length n which are needed to make the frames for two doors.\n\n\n-----Examples-----\nInput\n8\n1\n2\n\nOutput\n1\n\nInput\n5\n3\n4\n\nOutput\n6\n\nInput\n6\n4\n2\n\nOutput\n4\n\nInput\n20\n5\n6\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first example one wooden bar is enough, since the total length of all six sides of the frames for two doors is 8.\n\nIn the second example 6 wooden bars is enough, because for each side of the frames the new wooden bar is needed.",
  "solutions": "[\"'''input\\n6\\n4\\n2\\n'''\\n\\ndef list_input():\\n    return list(map(int,input().split()))\\ndef map_input():\\n    return map(int,input().split())\\ndef map_string():\\n    return input().split()\\n \\ndef f(n,a,b,left,cnta = 4,cntb = 2):\\n\\tif(cnta == 0 and cntb == 0): return 0\\n\\tif(cnta < 0 or cntb < 0): return 100000000000000000000\\n\\tif a <= left and cnta and b <= left and cntb:\\n\\t\\treturn min(f(n,a,b,left-a,cnta-1,cntb),f(n,a,b,left-b,cnta,cntb-1))\\n\\tif a <= left and cnta:\\n\\t\\treturn f(n,a,b,left-a,cnta-1,cntb)\\n\\tif b <= left and cntb:\\n\\t\\treturn f(n,a,b,left-b,cnta,cntb-1)\\n\\treturn 1+min(f(n,a,b,n-a,cnta-1,cntb),f(n,a,b,n-b,cnta,cntb-1))\\t\\t\\t\\n\\nn = int(input())\\na = int(input())\\nb = int(input())\\nprint(f(n,a,b,0))\", \"n = int(input())\\na = int(input())\\nb = int(input())\\n\\nc = 1\\nrem = n \\na1,b1 = 0,0\\nwhile True:\\n\\tif rem>=a and a1<4:\\n\\t\\trem-=a\\n\\t\\ta1+=1\\n\\tif rem>=b and b1<2:\\n\\t\\trem-=b\\n\\t\\tb1+=1\\n\\tif a1==4 and b1==2:\\n\\t\\tprint(c)\\n\\t\\tbreak\\n\\tif (rem<a or a1==4) and (rem<b or b1==2):\\n\\t\\trem = n \\n\\t\\tc+=1\\n\\t\\n\", \"n = int(input())\\na = int(input())\\nb = int(input())\\n\\nans = 6\\n\\ncur, cnt = 0, 0\\ncur = 2\\ncnt += 2 * ((n - b) // a)\\nwhile cnt < 4:\\n    cur += 1\\n    cnt += (n // a)\\nans = min(ans, cur)\\n\\nif b * 2 <= n:\\n    cur, cnt = 0, 0\\n    cur = 1\\n    cnt += ((n - 2 * b) // a)\\n    while cnt < 4:\\n        cur += 1\\n        cnt += (n // a)\\n    ans = min(ans, cur)\\n\\nprint(ans)\\n\", \"n = int(input())\\na = int(input())\\nb = int(input())\\n\\nsequences = list()\\nbar_len = (a, b)\\n\\nfor i in range(2 ** 6):\\n    seq = list()\\n\\n    for j in range(6):\\n        seq.append((i & 2 ** j) >> j)\\n\\n    if sum(seq) == 2:\\n        sequences.append(seq)\\n\\n\\nmin_count = 10000\\nfor seq in sequences:\\n    bar = n\\n    count = 1\\n    idx = 0\\n\\n    for i in seq:\\n        if bar > bar_len[i]:\\n            bar -= bar_len[i]\\n        elif bar == bar_len[i]:\\n            if idx < len(seq) - 1:\\n                count += 1\\n            bar = n\\n        else:\\n            count += 1\\n            bar = n - bar_len[i]\\n        idx += 1\\n    if count < min_count:\\n        min_count = count\\n\\nprint(min_count)\\n\", \"n=int(input())\\na=int(input())\\nb=int(input())\\nnba=4\\nnbb=2\\ncom=0\\ns=4*a+2*b\\nwhile (nba > 0) or (nbb > 0):\\n      com+=1\\n      x=n\\n      if 2*a+b==n:\\n            com=2\\n            break\\n      else:\\n            if a>b:\\n                  while x>=a and nba > 0 :\\n                        x-=a\\n                        nba-=1\\n                  while x>=b and nbb>0 :\\n                        x-=b\\n                        nbb-=1\\n            else:\\n                  while x>=b and nbb>0 :\\n                        x-=b\\n                        nbb-=1\\n                  while x>=a and nba > 0 :\\n                        x-=a\\n                        nba-=1\\nprint(com)\", \"n = int(input())\\na = int(input())\\nb = int(input())\\nna = 4\\nnb = 2\\ncnt=0\\nwhile True:\\n    len = n\\n    cnt+=1\\n    while len>0:\\n        resa = len-min(int(len/a),na)*a\\n        resb = len-min(int(len/b),nb)*b\\n        if resa<resb and na>0 and len>=a:\\n            len-=a\\n            na-=1\\n        elif nb>0 and len>=b:\\n            len-=b\\n            nb-=1\\n        else:\\n            break\\n    if na==nb==0:\\n        break\\nprint(cnt)\\n\", \"#from dust i have come dust i will be\\n\\nn=int(input())\\na=int(input())\\nb=int(input())\\n\\ncnt=1\\nr=n\\nqa,qb=0,0\\n\\nwhile 1:\\n    if r>=a and qa<4:\\n        r-=a\\n        qa+=1\\n\\n    if r>=b and qb<2:\\n        r-=b\\n        qb+=1\\n\\n    if qa==4 and qb==2:\\n        print(cnt)\\n        return\\n\\n    if (r<a or qa==4) and (r<b or qb==2):\\n        r=n\\n        cnt+=1\\n\\n\\n\\n\\n\", \"n=int(input())\\na=int(input())\\nb=int(input())\\nif a!=b:\\n    m=[[a],[b]]\\n    while len(m[0])<6:\\n        p=m.pop(0)\\n        m.append(p+[a])\\n        m.append(p+[b])\\n    i=0\\n    while i < len(m):\\n        if m[i].count(b)!=2:\\n            m.pop(i)\\n        else:\\n            i+=1\\nelse:\\n    m=[[a]*6]\\nd=6\\nfor p in m:\\n    k=1\\n    x=n\\n    for t in p:\\n        x-=t\\n        if x<0:\\n            k+=1\\n            x=n-t\\n    d=min(d,k)\\nprint(d)\", \"n = int(input())\\na = int(input())\\nb = int(input())\\n\\nresult = 6\\nif 4 * a + 2 * b <= n:\\n    result = min(1, result)\\nif 2 * a + b <= n:\\n    result = min(2, result)\\nif 4 * a <= n:\\n    result = min(3, result)\\nif 2 * b <= n:\\n    if a + 2 * b <= n:\\n        if n // a >= 3:\\n            result = min(2, result)\\n        elif n // a == 2:\\n            result = min(3, result)\\n        else:\\n            result = min(4, result)\\n    else:\\n        if n // a >= 4:\\n            result = min(2, result)\\n        elif n // a == 3:\\n            result = min(3, result)\\n        elif n // a == 2:\\n            result = min(4, result)\\n        else:\\n            result = min(5, result)\\nif a + b <= n:\\n    if 2 * a <= n:\\n        result = min(3, result)\\n    else:\\n        result = min(4, result)\\nif 2 * a <= n:\\n    result = min(4, result)\\nprint(result)\\n\\n\\n\", \"n = int(input())\\na = int(input())\\nb = int(input())\\nans = 6\\ncnt = 0\\ncur = 2\\ncnt += 2 * ((n - b) // a)\\nwhile cnt < 4:\\n    cur += 1\\n    cnt += (n // a)\\nans = min(ans, cur)\\nif b * 2 <= n:\\n    cur, cnt = 0, 0\\n    cur = 1\\n    cnt += ((n - 2 * b) // a)\\n    while cnt < 4:\\n        cur += 1\\n        cnt += (n // a)\\n    ans = min(ans, cur)\\nprint(ans)\", \"n = int(input())\\na = int(input())\\nb = int(input())\\nax, bx = 4, 2\\nx = 0\\nz = False\\nif a*2+b < n//2:\\n    print(1)\\nelif a*2+b == n:\\n    print(2)\\nelif a >= b:\\n    while ax >= 0 and bx >= 0:\\n        if ax == bx == 0:\\n            print(x)\\n            return\\n        for i in range(ax, -1, -1):\\n            for j in range(bx, -1, -1):\\n                # print(i ,j)\\n                if (a*i)+(b*j) <= n:\\n                    # print('yes')\\n                    ax -= i\\n                    bx -= j\\n                    x += 1\\n                    z = True\\n                    break\\n            if z:\\n                z = not z\\n                break\\nelse:\\n    while ax >= 0 and bx >= 0:\\n        if ax == bx == 0:\\n            print(x)\\n            return\\n        for i in range(bx, -1, -1):\\n            for j in range(ax, -1, -1):\\n                # print(i ,j)\\n                if (a*j)+(b*i) <= n:\\n                    # print('yes')\\n                    ax -= j\\n                    bx -= i\\n                    x += 1\\n                    z = True\\n                    break\\n            if z:\\n                z = not z\\n                break\\n\", \"def woodenBarNum(n, a, b):\\n    remA = 4\\n    remB = 2\\n    numWood = 0\\n    remWood = 0\\n    for i in range(remA):\\n        if remWood < a:\\n            numWood += 1\\n            remWood = n\\n        remWood -= a\\n        if remWood >= b and remB > 0:\\n            remWood -= b\\n            remB -= 1\\n    if remB > 0:\\n        for j in range(remB):\\n            if remWood < b:\\n                numWood += 1\\n                remWood = n\\n            remWood -= b\\n    return numWood\\nn = int(input())\\na = int(input())\\nb = int(input())\\nprint(woodenBarNum(n,a,b))\", \"# -*- coding: utf-8 -*-\\n\\\"\\\"\\\"\\nCreated on Thu Nov 30 12:11:39 2017\\n\\n@author: vishal\\n\\\"\\\"\\\"\\n\\nn=int(input())\\na=int(input())\\nb=int(input())\\n\\nif(4*a+2*b<=n):\\n    print(1)\\nelif(2*a+b<=n or a+2*b<=n and 3*a<=n):\\n    print(2)\\nelif(a+b<=n and 2*a<=n or 2*b<=n and 2*a<=n or 4*a<=n):\\n    print(3)\\nelif(2*a<=n or a+b<=n):\\n    print(4)\\nelif(2*b<=n):\\n    print(5)\\nelse:\\n    print(6)\", \"n = int(input())\\na = int(input())\\nb = int(input())\\n\\nans = 1\\nrem = n\\nsides = 6\\n\\nif (((a+a) + b) * 2) <= n:\\n    print(1)\\nelse:\\n    if (a*2+b) <= n or ((a*4) <= n and (b*2) <= n):\\n        print(2)\\n    elif (a*4 <= n and b <= n) or (b*2 <= n and a*2 <= n) or (a+b <= n and a*2 <= n):\\n        print(3)\\n    elif (a*2 <= n and b <= n) or (a+b <= n and a <= n):\\n        print(4)\\n    elif b*2 <= n and a <= n:\\n        print(5)\\n    else:\\n        print(6)\\n        \\n            \\n    \\n\", \"import math\\na = int(input())\\nv = int(input())\\nl = int(input())\\nlist1 = [v,v,v,v,l,l]\\nlist2 = sorted(list1)[::-1]\\nw = 1\\nif a == 165 and v == 59 and l == 40:\\n    print(2)\\nelif a == 828 and v == 363 and l == 56:\\n    print(2)\\nelse:\\n    while True:\\n        if len(list2) <= 1:\\n            break\\n        list2[0] = a - list2[0]\\n        n = len(list2)-1\\n        for i in range(n):\\n            if list2[0] < list2[n-i]:\\n                w += 1\\n                del list2[0]\\n                break\\n            else:\\n                list2[0] = list2[0] - list2[n-i]\\n                del list2[n-i]\\n                if len(list2) == 0:\\n                    break\\n    print(w)\\n\", \"#!/usr/bin/env python3\\n# Door Frames\\nn = int(input())\\na = int(input())\\nb = int(input())\\n\\nres = [[0 for i in range(5)] for j in range(3)]\\nsize = [[0 for i in range(5)] for j in range(3)]\\n\\n\\ndef get_max_size(i, j):\\n    u = size[j-1][i] if j else 0\\n    l = size[j][i-1] if i else 0\\n    ru = res[j-1][i] if j else i\\n    rl = res[j][i-1] if i else j\\n    if u - b >= 0:\\n        du = u - b\\n        dru = 0\\n    else:\\n        du = n - b\\n        dru = 1\\n\\n    if l - a >= 0:\\n        dl = l - a\\n        drl = 0\\n    else:\\n        dl = n - a\\n        drl = 1\\n\\n    if (ru + dru) < (rl + drl):\\n        return (ru + dru), du\\n    elif (ru + dru) > (rl + drl):\\n        return (rl + drl), dl\\n    elif du > dl:\\n        return (ru + dru), du\\n    else:\\n        return (rl + drl), dl\\n\\n\\nfor j in range(3):\\n    for i in range(5):\\n        if (i+j):\\n            r, m = get_max_size(i, j)\\n            res[j][i] = r\\n            size[j][i] = m\\n\\nprint(res[-1][-1])\\n\", \"n=int(input())\\na=int(input())\\nb=int(input())\\ncnt=0\\nl=0\\nal=4\\nbl=2\\n\\ncnt+=1\\nl=n\\n\\nwhile al or bl:\\n    if al>bl:\\n        if l-a>=0 and al:\\n            al-=1\\n            l-=a\\n            continue\\n        elif l-b>=0 and bl:\\n            bl-=1\\n            l-=b\\n            continue\\n        else:\\n            l=n\\n            cnt+=1\\n            continue\\n    else:\\n        if l-b>=0 and bl:\\n            bl-=1\\n            l-=b\\n            continue\\n        elif l-a>=0 and al:\\n            al-=1\\n            l-=a\\n            continue\\n        else:\\n            l=n\\n            cnt+=1\\n            continue\\n\\nprint(cnt)\\n\", \"n=int(input())\\na=int(input())\\nb=int(input())\\nif a>=b:\\n    l=a\\n    s=b\\n    if n-a>=3*l+2*b:\\n        print(1)\\n    if n-a<3*l+2*b and n-a>=a+b:\\n        print(2)\\n    if n-a<a+b and n-a>=a:\\n        print(3)\\n    if n-a<a and n-a>=b:\\n        print(4)\\n    if n-a<b and n-b>=b:\\n        print(5)\\n    if n-a<b and n-b<b:\\n        print(6)\\nelse:\\n    l=b\\n    s=a\\n    if n-l>=1*l+4*s:\\n        print(1)\\n    if n-l<l+4*s and n-l>=2*s:\\n        print(2)\\n    if n-l<2*s and n-l>=s:\\n        print(3)\\n    if n-l<s and n>=4*s:\\n        print(3)\\n    if n-l<s and n>=2*s and n<4*s:\\n        print(4)\\n    if n-l<s and n-s<s:\\n        print(6)\\n\\n\\n\", \"n = int(input())\\na = int(input())\\nb = int(input())\\n\\nif n >= 4 * a + 2 * b:\\n\\tans = 1\\n\\t#print(1)\\nelif n >= 4 * a + b:\\n\\tans = 2\\n\\t\\n\\t#print(2)\\nelif n >= 4 * a and 2 * b <= n:\\n\\tans = 2\\n\\t\\n\\t#print(3)\\n\\nelif n >= 3 * a + 2 * b:\\n\\tans = 2\\n\\t#print(-7)\\nelif n >= 3 * a and n >= a + 2 * b:\\n\\tans = 2\\n\\t#print(-6)\\n\\nelif n >= 2 * a + b or n >= 2 * a + 2 * b:\\n\\tans = 2\\n\\t\\n\\t#print(5)\\nelif n >= 2 * a and (n >= 2 * b or n >= a + b):\\n\\tans = 3\\n\\t#else:####\\n\\t#\\tans = 4\\n\\t\\n\\t#print(6)\\nelif n >= a + 2 * b:######\\n\\tans = 4\\n\\t\\n\\t#print(7)\\nelif n >= a + b:\\n\\tans = 4\\n\\t\\n\\t#print(8)\\nelif n >= 2 * b:\\n\\tif 3 * a <= n:\\n\\t\\tans = 3\\n\\telse:\\n\\t\\tans = 5\\n\\t\\n\\t#print(9)\\nelse:\\n\\tif 4 * a <= n:\\n\\t\\tans = 3\\n\\telif 3 * a <= n:\\n\\t\\tans = 4\\n\\telif 2 * a <= n:\\n\\t\\tans = 4\\n\\telse:\\n\\t\\tans = 6\\n\\t#print(10)\\n\\t\\nprint(ans)\", \"_len = int(input())\\n_ver = int(input()) #4\\n_up = int(input()) #2\\nl = [_ver,_ver,_ver,_ver,_up,_up]\\nl = sorted(l, reverse=True)\\n\\nn = 1\\nleft = [_len]\\nfor i in range(6):\\n\\tfor j in range(len(left)):\\n\\t\\tif left[j] >= l[i]:\\n\\t\\t\\tleft[j] -= l[i]\\n\\t\\t\\tbreak\\n\\t\\telif j == len(left) - 1:\\n\\t\\t\\tleft.append(_len - l[i])\\n\\t\\t\\tn += 1\\n\\tleft = sorted(left)\\n\\nif n > 2 and _ver*2+_up<=_len:\\n\\tprint(2)\\nelse:\\n\\tprint(n)\", \"n=int(input())\\na=int(input())\\nb=int(input())\\nl=u=0\\nans=1\\nm=n\\nif 2*a+b==n:\\n\\tprint(2)\\n\\treturn\\nwhile l<4 or u<2:\\n\\tif m>=a and m>=b:\\n\\t\\tif u<2 and l<4:\\n\\t\\t\\tif a>=b:\\n\\t\\t\\t\\tm-=a\\n\\t\\t\\t\\tl+=1\\n\\t\\t\\telse:\\n\\t\\t\\t\\tm-=b\\n\\t\\t\\t\\tu+=1\\n\\t\\telif l<4:\\n\\t\\t\\tm-=a\\n\\t\\t\\tl+=1\\n\\t\\telse:\\n\\t\\t\\tm-=b\\n\\t\\t\\tu+=1\\n\\telse:\\n\\t\\tif m<a and m>=b and u<2:\\n\\t\\t\\tm-=b\\n\\t\\t\\tu+=1\\n\\t\\telif m>=a and m<b and l<4:\\n\\t\\t\\tm-=a\\n\\t\\t\\tl+=1\\n\\t\\telse:\\n\\t\\t\\tans+=1\\n\\t\\t\\tm=n\\nprint(ans)\", \"import math\\n[n,a,b],r,i,j=[int(input())for x in range(3)],6,4,5\\nwhile i>=0:\\n\\tl,c,o=[b if x in[i,j]else a for x in range(6)],0,n\\n\\tfor k in l:\\n\\t\\tif o<k:\\n\\t\\t\\to,c=n-k,c+1\\n\\t\\telse:o-=k\\n\\tr=min(r,c if o==n else c+1)\\n\\tj-=1\\n\\tif i==j:i,j=i-1,5\\nprint(r)\", \"from math import ceil\\n\\nn = int(input())\\na = int(input())\\nb = int(input())\\n#5\\nk = 2 * b + 4 * a\\nbr = 0\\n\\nif 2 * b <= n and b < a and a + b > n:\\n    br = 5\\n    \\nelif 2 * a > n and 2 * b > n and a + b > n:\\n    br = 6\\n   \\nelif k <= n:\\n    br = 1\\n\\nelif b + 2 * a <= n:\\n    br = 2\\n\\nelif a + b <= n and 2 * a <= n or 4 * a <= n:\\n    br = 3\\n\\nelse:\\n    br = 4\\n\\n\\nprint(br)\\n\\n\", \"n = int(input())\\na = int(input())\\nb = int(input())\\nmax_1 = 6\\nmax_2 = 6\\n\\nakrat = 4\\npole = [n]*6\\npole[0] += -b\\npole[1] += -b\\nwhile akrat >0:\\n    for i in range(6):\\n        if pole[i]>=a:\\n            pole[i] +=-a\\n            akrat+=-1\\n            break\\nif n in pole:\\n    max_1 = pole.index(n)\\nelse:\\n    max_1 = 6\\n\\nif n >=2*b:\\n    akrat = 4\\n    pole = [n]*6\\n    pole[0] += -2*b\\n    while akrat >0:\\n        for i in range(6):\\n            if pole[i]>=a:\\n                pole[i] +=-a\\n                akrat+=-1\\n                break\\n    if n in pole:\\n        max_2 = pole.index(n)\\n    else:\\n        max_2 = 6\\nprint(min(max_1,max_2))\", \"bar = int(input())\\nside = int(input())\\ntop = int(input())\\n\\n\\ncurrent_bar = bar\\nnum_bars = 1\\ndim = [side] * 4 + [top] * 2\\ndim.sort()\\nwhile dim != []:\\n    #print (current_bar)\\n    if current_bar < min(dim):\\n        current_bar = bar\\n        num_bars += 1\\n    \\n    if current_bar >= dim[-1]:\\n        current_bar -= dim.pop()\\n        \\n    if dim != [] and current_bar >= dim[0]:\\n        current_bar -= dim.pop(0)\\n\\nprint (num_bars)\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"8\\n1\\n2\\n\",\n    \"5\\n3\\n4\\n\",\n    \"6\\n4\\n2\\n\",\n    \"20\\n5\\n6\\n\",\n    \"1\\n1\\n1\\n\",\n    \"3\\n1\\n2\\n\",\n    \"3\\n2\\n1\\n\",\n    \"1000\\n1\\n1\\n\",\n    \"1000\\n1000\\n1000\\n\",\n    \"1000\\n1\\n999\\n\",\n    \"1000\\n1\\n498\\n\",\n    \"1000\\n1\\n998\\n\",\n    \"31\\n5\\n6\\n\",\n    \"400\\n100\\n2\\n\",\n    \"399\\n100\\n2\\n\",\n    \"800\\n401\\n400\\n\",\n    \"141\\n26\\n11\\n\",\n    \"717\\n40\\n489\\n\",\n    \"293\\n47\\n30\\n\",\n    \"165\\n59\\n40\\n\",\n    \"404\\n5\\n183\\n\",\n    \"828\\n468\\n726\\n\",\n    \"956\\n153\\n941\\n\",\n    \"676\\n175\\n514\\n\",\n    \"296\\n1\\n10\\n\",\n    \"872\\n3\\n182\\n\",\n    \"448\\n15\\n126\\n\",\n    \"24\\n2\\n5\\n\",\n    \"289\\n56\\n26\\n\",\n    \"713\\n150\\n591\\n\",\n    \"841\\n62\\n704\\n\",\n    \"266\\n38\\n164\\n\",\n    \"156\\n34\\n7\\n\",\n    \"28\\n14\\n9\\n\",\n    \"604\\n356\\n239\\n\",\n    \"180\\n18\\n76\\n\",\n    \"879\\n545\\n607\\n\",\n    \"599\\n160\\n520\\n\",\n    \"727\\n147\\n693\\n\",\n    \"151\\n27\\n135\\n\",\n    \"504\\n71\\n73\\n\",\n    \"80\\n57\\n31\\n\",\n    \"951\\n225\\n352\\n\",\n    \"823\\n168\\n141\\n\",\n    \"956\\n582\\n931\\n\",\n    \"380\\n108\\n356\\n\",\n    \"804\\n166\\n472\\n\",\n    \"228\\n12\\n159\\n\",\n    \"380\\n126\\n82\\n\",\n    \"252\\n52\\n178\\n\",\n    \"828\\n363\\n56\\n\",\n    \"404\\n122\\n36\\n\",\n    \"314\\n4\\n237\\n\",\n    \"34\\n5\\n17\\n\",\n    \"162\\n105\\n160\\n\",\n    \"586\\n22\\n272\\n\",\n    \"32\\n9\\n2\\n\",\n    \"904\\n409\\n228\\n\",\n    \"480\\n283\\n191\\n\",\n    \"56\\n37\\n10\\n\",\n    \"429\\n223\\n170\\n\",\n    \"149\\n124\\n129\\n\",\n    \"277\\n173\\n241\\n\",\n    \"701\\n211\\n501\\n\",\n    \"172\\n144\\n42\\n\",\n    \"748\\n549\\n256\\n\",\n    \"324\\n284\\n26\\n\",\n    \"900\\n527\\n298\\n\",\n    \"648\\n624\\n384\\n\",\n    \"72\\n48\\n54\\n\",\n    \"200\\n194\\n87\\n\",\n    \"624\\n510\\n555\\n\",\n    \"17\\n16\\n2\\n\",\n    \"593\\n442\\n112\\n\",\n    \"169\\n158\\n11\\n\",\n    \"41\\n38\\n17\\n\",\n    \"762\\n609\\n442\\n\",\n    \"186\\n98\\n104\\n\",\n    \"314\\n304\\n294\\n\",\n    \"35\\n35\\n33\\n\",\n    \"8\\n3\\n5\\n\",\n    \"11\\n3\\n5\\n\",\n    \"5\\n4\\n2\\n\",\n    \"41\\n5\\n36\\n\",\n    \"7\\n4\\n1\\n\",\n    \"6\\n1\\n4\\n\",\n    \"597\\n142\\n484\\n\",\n    \"6\\n6\\n1\\n\",\n    \"8\\n4\\n2\\n\",\n    \"4\\n1\\n4\\n\",\n    \"7\\n2\\n3\\n\",\n    \"100\\n100\\n50\\n\",\n    \"5\\n1\\n3\\n\",\n    \"10\\n4\\n6\\n\",\n    \"8\\n8\\n2\\n\",\n    \"5\\n2\\n4\\n\",\n    \"11\\n5\\n3\\n\",\n    \"668\\n248\\n336\\n\",\n    \"2\\n2\\n1\\n\",\n    \"465\\n126\\n246\\n\",\n    \"5\\n1\\n5\\n\",\n    \"132\\n34\\n64\\n\",\n    \"11\\n1\\n6\\n\",\n    \"8\\n4\\n5\\n\",\n    \"4\\n2\\n4\\n\",\n    \"576\\n238\\n350\\n\",\n    \"6\\n1\\n5\\n\",\n    \"5\\n1\\n4\\n\",\n    \"9\\n2\\n8\\n\",\n    \"7\\n3\\n4\\n\",\n    \"9\\n4\\n5\\n\",\n    \"10\\n3\\n4\\n\",\n    \"18\\n5\\n8\\n\",\n    \"2\\n1\\n1\\n\",\n    \"100\\n40\\n60\\n\",\n    \"6\\n4\\n4\\n\",\n    \"3\\n1\\n1\\n\",\n    \"10\\n3\\n7\\n\",\n    \"9\\n2\\n5\\n\",\n    \"6\\n2\\n3\\n\"\n  ],\n  \"outputs\": [\n    \"1\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"1\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"1\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"6\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"4\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"5\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"5\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"4\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"3\\n\",\n    \"6\\n\",\n    \"2\\n\",\n    \"3\\n\",\n    \"2\\n\",\n    \"3\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/910/B",
  "starter_code": ""
}