{
  "task_id": "APPS/321",
  "problem_id": 321,
  "prompt": "Alice has a lovely piece of cloth. It has the shape of a square with a side of length $a$ centimeters. Bob also wants such piece of cloth. He would prefer a square with a side of length $b$ centimeters (where $b < a$). Alice wanted to make Bob happy, so she cut the needed square out of the corner of her piece and gave it to Bob. Now she is left with an ugly L shaped cloth (see pictures below).\n\nAlice would like to know whether the area of her cloth expressed in square centimeters is prime. Could you help her to determine it?\n\n\n-----Input-----\n\nThe first line contains a number $t$\u00a0($1 \\leq t \\leq 5$)\u00a0\u2014 the number of test cases.\n\nEach of the next $t$ lines describes the $i$-th test case. It contains two integers $a$ and $b~(1 \\leq b < a \\leq 10^{11})$\u00a0\u2014 the side length of Alice's square and the side length of the square that Bob wants.\n\n\n-----Output-----\n\nPrint $t$ lines, where the $i$-th line is the answer to the $i$-th test case. Print \"YES\" (without quotes) if the area of the remaining piece of cloth is prime, otherwise print \"NO\".\n\nYou can print each letter in an arbitrary case (upper or lower).\n\n\n-----Example-----\nInput\n4\n6 5\n16 13\n61690850361 24777622630\n34 33\n\nOutput\nYES\nNO\nNO\nYES\n\n\n\n-----Note-----\n\nThe figure below depicts the first test case. The blue part corresponds to the piece which belongs to Bob, and the red part is the piece that Alice keeps for herself. The area of the red part is $6^2 - 5^2 = 36 - 25 = 11$, which is prime, so the answer is \"YES\". [Image] \n\nIn the second case, the area is $16^2 - 13^2 = 87$, which is divisible by $3$. [Image] \n\nIn the third case, the area of the remaining piece is $61690850361^2 - 24777622630^2 = 3191830435068605713421$. This number is not prime because $3191830435068605713421 = 36913227731 \\cdot 86468472991 $.\n\nIn the last case, the area is $34^2 - 33^2 = 67$.",
  "solutions": "[\"def isPrime(n) : \\n    # Corner cases \\n    if (n <= 1) : \\n        return False\\n    if (n <= 3) : \\n        return True\\n  \\n    # This is checked so that we can skip  \\n    # middle five numbers in below loop \\n    if (n % 2 == 0 or n % 3 == 0) : \\n        return False\\n  \\n    i = 5\\n    while(i * i <= n) : \\n        if (n % i == 0 or n % (i + 2) == 0) : \\n            return False\\n        i = i + 6\\n  \\n    return True\\nt=int(input())\\nfor yes in range(t):\\n\\ta,b=map(int,input().split())\\n\\txx=a-b\\n\\tyy=a+b \\n\\tif xx==1 and isPrime(yy)==True:\\n\\t\\tprint(\\\"YES\\\")\\n\\telse:\\n\\t\\tprint(\\\"NO\\\")\", \"read = lambda: map(int, input().split())\\ndef prime(x):\\n    d = 2\\n    while d*d<= x:\\n        if x % d == 0: return 0\\n        d += 1\\n    return 1\\nt = int(input())\\nres = \\\"\\\"\\nfor i in range(t):\\n    a, b = read()\\n    res += \\\"YES\\\\n\\\" if a-b==1 and prime(a+b) else \\\"NO\\\\n\\\"\\nprint(res)\", \"def isPrime(n):\\n    for i in range(2,int(n**0.5)+1):\\n        if n%i==0:\\n            return False\\n    return True\\n\\n    return True\\nfor i in ' '*int(input()):\\n    a,b=map(int,input().split())\\n    if a-b>1:print('NO')\\n    else:\\n        print(['NO','YES'][isPrime(a+b)])\", \"def check_prime(n):\\n    i = 2\\n    while i * i <= n:\\n        if n % i == 0:\\n            return False\\n        i += 1\\n    return True\\n\\nt = int(input())\\nfor tnum in range(t):\\n    a, b = map(int, input().split())\\n    if a != b + 1:\\n        print(\\\"NO\\\")\\n    else:\\n        print(\\\"YES\\\" if check_prime(a + b) else \\\"NO\\\")\", \"from math import sqrt\\nn = int(input())\\nfor i in range(n):\\n    a, b = map(int, input().split())\\n    first = a - b\\n    second = a + b\\n    if first != 1:\\n        print('NO')\\n    else:\\n        f = False\\n        for i in range(2, int(sqrt(second)) + 1):\\n            if second % i == 0:\\n                f = True\\n                break\\n        if f:\\n            print('NO')\\n        else:\\n            print('YES')\", \"def prime(n):\\n    if n < 2:\\n        return False\\n    elif n % 2 == 0:\\n        return False\\n    else:\\n        for k in range(3, 1 + int(n ** .5), 2):\\n            if n % k == 0:\\n                return False\\n    return True\\n\\n\\nt = int(input())\\nfor i in range(t):\\n    a, b = list(map(int, input().split()))\\n    n = (a + b)\\n    if a - b > 1:\\n        print('NO')\\n    else:\\n        if prime(n):\\n            print('YES')\\n        else:\\n            print('NO')\\n\", \"t = int(input())\\nfor _ in range(t):\\n    a, b = list(map(int, input().split()))\\n    if a - b != 1:\\n        print(\\\"NO\\\")\\n        continue\\n    c = a + b\\n    for t in range(2, int(c ** 0.5) + 1):\\n        if c % t == 0:\\n            print(\\\"NO\\\")\\n            break\\n    else:\\n        print(\\\"YES\\\")\\n\", \"def check(a):\\n    for i in range(2, round(a**0.5 + 1)):\\n        if not a % i:\\n            return 0\\n    return 1\\n\\n\\nfor i in range(int(input())):\\n    a, b = map(int, input().split())\\n    if (a - b) > 1 and (a + b) > 1:\\n        print('NO')\\n    else:\\n        print('YES' if check(a**2-b**2) else 'NO')\", \"from math import sqrt \\nfrom itertools import count, islice\\n\\ndef isPrime(n):\\n    return n > 1 and all(n%i for i in islice(count(2), int(sqrt(n)-1)))\\n\\nt=int(input())\\n\\nfor i in range(t):\\n\\ta,b=map(int,input().split())\\n\\tans = False\\n\\tif a-b==1:\\n\\t\\tx = a+b\\n\\t\\tans=isPrime(x)\\n\\n\\tif ans:\\n\\t\\tprint(\\\"YES\\\")\\n\\telse:\\n\\t\\tprint(\\\"NO\\\")\", \"t=int(input())\\nimport math\\nfor i in range(t):\\n    a,b=list(map(int,input().split()))\\n    if((a-b)!=1):\\n        print(\\\"NO\\\")\\n    else:\\n        l=2*a-1\\n        p=0\\n        for k in range(2,int(math.sqrt(l))+1):\\n            if(l%k==0):\\n                print(\\\"NO\\\")\\n                p=1\\n                break \\n        if(p==0):\\n            print(\\\"YES\\\")\\n\", \"def prime(x):\\n    if x==1:\\n        return False\\n    ret=True\\n    for i in range(2,int(x**0.5)+1):\\n        if x%i==0:\\n            ret=False\\n    return ret\\n\\nn=int(input())\\nfor i in range(n):\\n    s=input().split()\\n    d=int(s[0])-int(s[1])\\n    if d!=1:\\n        print(\\\"NO\\\")\\n    else:\\n        if prime(int(s[0])+int(s[1])):\\n            print(\\\"YES\\\")\\n        else:\\n            print(\\\"NO\\\")\\n\", \"t = int(input())\\nwhile t > 0:\\n    a, b = list(map(int,input().split()))\\n    if a - b != 1 :\\n        print(\\\"NO\\\")\\n    else:\\n        num = a + b\\n        num2 = int(num ** 0.5)\\n        num3 = 2\\n        ans = 0\\n        while num3 <= num2:\\n            if num % num3 == 0:\\n                ans = 1\\n            num3 += 1\\n        if ans == 1:\\n            print(\\\"NO\\\")\\n        else:\\n            print(\\\"YES\\\")\\n    t -= 1\\n\", \"import sys\\n\\ndef isprime(x):\\n    import math\\n    if x == 1:\\n        return True\\n\\n    for i in range(2, math.ceil(math.sqrt(x))+1):\\n        if x % i == 0:\\n            return False\\n    return True\\n\\n\\ndef __starting_point():\\n    cin = sys.stdin\\n\\n    T = int(next(cin))\\n    for _ in range(T):\\n        n, m = list(map(int, next(cin).split()))\\n\\n        # n**2-m**2 = (n-m)*(n+m)\\n\\n        if n-m == 1 and isprime(n+m):\\n            print('YES')\\n        else:\\n            print('NO')\\n\\n__starting_point()\", \"def isPrime(n) : \\n    # Corner cases \\n    if (n <= 1) : \\n        return False\\n    if (n <= 3) : \\n        return True\\n  \\n    # This is checked so that we can skip  \\n    # middle five numbers in below loop \\n    if (n % 2 == 0 or n % 3 == 0) : \\n        return False\\n  \\n    i = 5\\n    while(i * i <= n) : \\n        if (n % i == 0 or n % (i + 2) == 0) : \\n            return False\\n        i = i + 6\\n  \\n    return True\\nt=int(input())\\nfor l in range(t):\\n\\ta,b=list(map(int,input().split()))\\n\\tif(a-b!=1):\\n\\t\\tprint(\\\"NO\\\")\\n\\telse:\\n\\t\\tif(isPrime(a+b)):\\n\\t\\t\\tprint('YES')\\n\\t\\telse:\\n\\t\\t\\tprint('NO')\\n\\n\", \"from math import sqrt; from itertools import count, islice\\n\\nn = int(input())\\n\\n\\ndef isPrime(n):\\n    return n > 1 and all(n%i for i in islice(count(2), int(sqrt(n)-1)))\\n\\ndef eval_(a, b):\\n    if  abs(a - b)!=1:\\n        return \\\"NO\\\"\\n    result = isPrime(a + b)\\n    if result:\\n        return \\\"YES\\\"\\n    else:\\n        return \\\"NO\\\"\\n\\n\\nfor i in range(n):\\n    (a, b) = [int(x) for x in input().split()]\\n    print(eval_(a, b))\", \"import math\\n\\nt = int(input())\\n\\n\\ndef isprime(c):\\n\\t# print(int(math.ceil(math.sqrt(c)))+1)\\n\\tfor x in range(2, int(math.ceil(math.sqrt(c)))+1):\\n\\t\\t# print(\\\"x: {}\\\".format(x))\\n\\t\\tif c % x == 0:\\n\\t\\t\\treturn False\\n\\n\\treturn True\\n\\nfor x in range(t):\\n\\ta, b = list(map(int, input().split()))\\n\\tif (1 == a-b) and isprime(a + b):\\n\\t\\tprint (\\\"YES\\\")\\n\\telse:\\n\\t\\tprint (\\\"NO\\\")\\n\\n\\n\\n\", \"from math import sqrt, floor\\n\\n\\ndef check(n):\\n    for i in range(2, floor(sqrt(n)) + 1):\\n        if (n % i == 0):\\n            return False\\n\\n    return True\\n\\n\\nt = int(input())\\n\\nfor i in range(t):\\n    a, b = list(map(int, input().split()))\\n\\n    if (a - b == 1 and check(a + b)):\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\n\", \"t = int(input())\\n\\ndef divider(n):\\n    i = 2\\n    j = 0\\n    while i**2 <= n and j != 1:\\n        if n%i == 0:\\n            j = 1\\n        i += 1\\n    if j == 1:\\n        return False\\n    else:\\n        return True\\n\\n\\nfor i in range(t):\\n    a, b = list(map(int,input().split()))\\n    if a-b == 1 and divider(a+b):\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\n\", \"def isprime(n):\\n    i = 2\\n    m = n\\n    while (i * i <= n):\\n        while (n % i == 0):\\n            n /= i\\n        i += 1\\n    return m == n\\n\\n\\nt = int(input())\\nfor i in range(t):\\n    a, b = map(int, input().split())\\n    if (isprime(a + b) and a - b == 1):\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\", \"t=int(input())\\na=[]\\nb=[]\\nfor i in range(t):\\n    aa,bb=[int(el) for el in input().split()]\\n    a.append(aa)\\n    b.append(bb)\\n\\ndef prost(n):\\n    if n==3:\\n        return True\\n    if n%2==0:\\n        return False\\n    for i in range (3,int(n**0.5)+1,2):\\n        if n%i==0:\\n            return False\\n    return True\\n    return\\n\\nfor i in range(t):\\n    if a[i]-b[i]!=1:\\n        print ('NO')\\n        continue\\n    if prost(a[i]+b[i]):\\n        print('YES')\\n    else:\\n        print('NO')\\n\", \"import random\\ndef MillerRabinPrimalityTest(number):\\n    '''\\n    because the algorithm input is ODD number than if we get\\n    even and it is the number 2 we return TRUE ( spcial case )\\n    if we get the number 1 we return false and any other even \\n    number we will return false.\\n    '''\\n    if number == 2:\\n        return True\\n    elif number == 1 or number % 2 == 0:\\n        return False\\n    \\n    ''' first we want to express n as : 2^s * r ( were r is odd ) '''\\n    \\n    ''' the odd part of the number '''\\n    oddPartOfNumber = number - 1\\n    \\n    ''' The number of time that the number is divided by two '''\\n    timesTwoDividNumber = 0\\n    \\n    ''' while r is even divid by 2 to find the odd part '''\\n    while oddPartOfNumber % 2 == 0:\\n        oddPartOfNumber = oddPartOfNumber // 2\\n        timesTwoDividNumber = timesTwoDividNumber + 1 \\n     \\n    '''\\n    since there are number that are cases of \\\"strong liar\\\" we \\n    need to check more then one number\\n    '''\\n    for time in range(3):\\n        \\n        ''' choose \\\"Good\\\" random number '''\\n        while True:\\n            ''' Draw a RANDOM number in range of number ( Z_number )  '''\\n            randomNumber = random.randint(2, number)-1\\n            if randomNumber != 0 and randomNumber != 1:\\n                break\\n        \\n        ''' randomNumberWithPower = randomNumber^oddPartOfNumber mod number '''\\n        randomNumberWithPower = pow(randomNumber, oddPartOfNumber, number)\\n        \\n        ''' if random number is not 1 and not -1 ( in mod n ) '''\\n        if (randomNumberWithPower != 1) and (randomNumberWithPower != number - 1):\\n            # number of iteration\\n            iterationNumber = 1\\n            \\n            ''' while we can squre the number and the squered number is not -1 mod number'''\\n            while (iterationNumber <= timesTwoDividNumber - 1) and (randomNumberWithPower != number - 1):\\n                ''' squre the number '''\\n                randomNumberWithPower = pow(randomNumberWithPower, 2, number)\\n                \\n                # inc the number of iteration\\n                iterationNumber = iterationNumber + 1\\n            '''     \\n            if x != -1 mod number then it because we did not found strong witnesses\\n            hence 1 have more then two roots in mod n ==>\\n            n is composite ==> return false for primality\\n            '''\\n            if (randomNumberWithPower != (number - 1)):\\n                return False\\n            \\n    ''' well the number pass the tests ==> it is probably prime ==> return true for primality '''\\n    return True\\ncases=int(input())\\nfor case in range(cases):\\n    a,b=map(int,input().split())\\n    t=MillerRabinPrimalityTest((a**2)-(b**2))\\n    if t:\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\", \"def divider(n):\\n    i = 2\\n    j = 0\\n    while i**2 <= n and j != 1:\\n        if n % i == 0:\\n            j = 1\\n        i += 1\\n    if j == 1:\\n        return False\\n    else:\\n        return True\\n\\n\\ni = int(input())\\nfor i in range(i):\\n    a, b = list(map(int, input().split()))\\n    if a - b == 1 and divider(a+b):\\n        print(\\\"YES\\\")\\n    else:\\n        print(\\\"NO\\\")\\n\", \"import math\\n\\ndef is_prime(n):\\n    bound = int(math.sqrt(n + 1) + 1)\\n    for k in range(2, bound):\\n        if n % k == 0:\\n            return False\\n    return True\\n\\n\\ndef solve():\\n    a, b = (int(x) for x in input().split())\\n    if a - b != 1:\\n        print('NO')\\n        return\\n\\n    if is_prime(a+b):\\n        print('YES')\\n    else:\\n        print('NO')\\n\\n\\nnum_tests = int(input())\\nfor _ in range(num_tests):\\n    solve()\\n\", \"\\nimport math as m\\ndef f(a):\\n\\tif (a==2) : return True\\n\\tfor i in range(2,round(m.sqrt(a))+1):\\n\\t\\tif a%i==0:\\n\\t\\t\\treturn False\\n\\treturn True\\n\\nt=int(input())\\n\\n\\nfor i in range(t):\\n\\ta,b=input().split()\\n\\n\\ta=int(a)\\n\\tb=int(b)\\n\\n\\tif (a-b)==1 and f(a+b) :\\n\\t\\tprint(\\\"YES\\\")\\n\\telse :\\n\\t\\tprint(\\\"NO\\\")\\n\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"4\\n6 5\\n16 13\\n61690850361 24777622630\\n34 33\\n\",\n    \"5\\n160 159\\n223 222\\n480 479\\n357 356\\n345 344\\n\",\n    \"5\\n631 582\\n201 106\\n780 735\\n608 528\\n470 452\\n\",\n    \"5\\n2 1\\n3 1\\n4 1\\n5 1\\n8 7\\n\",\n    \"5\\n2187 2186\\n517 516\\n3235 3234\\n4810 4809\\n3076 3075\\n\",\n    \"5\\n40957587394 40957587393\\n46310781841 46310781840\\n21618631676 21618631675\\n17162988704 17162988703\\n16831085306 16831085305\\n\",\n    \"5\\n35838040099 35838040098\\n26612022790 26612022789\\n23649629085 23649629084\\n17783940691 17783940690\\n31547284201 31547284200\\n\",\n    \"5\\n45967567181 17972496150\\n96354194442 71676080197\\n66915115533 22181324318\\n62275223621 22258625262\\n92444726334 84313947726\\n\",\n    \"5\\n77734668390 12890100149\\n62903604396 24274903133\\n22822672980 7380491861\\n50311650674 7380960075\\n63911598474 3692382643\\n\",\n    \"5\\n21 20\\n48 47\\n59140946515 26225231058\\n78 38\\n31 30\\n\",\n    \"5\\n529 169\\n232 231\\n283 282\\n217 216\\n34310969148 14703433301\\n\",\n    \"1\\n100000000000 99999999999\\n\",\n    \"5\\n8680 4410\\n59011181086 3472811643\\n770 769\\n1911 1910\\n3615 3614\\n\",\n    \"5\\n62903604396 24274903133\\n37198 37197\\n16929 16928\\n38325 38324\\n49905 33035\\n\",\n    \"5\\n5 4\\n7 6\\n4 3\\n4 1\\n9 8\\n\",\n    \"5\\n497334 497333\\n437006 437005\\n88531320027 6466043806\\n863754 694577\\n151084 151083\\n\",\n    \"5\\n4606204 4606203\\n1620972 1620971\\n67109344913 14791364910\\n8894157 3383382\\n4110450 4110449\\n\",\n    \"5\\n24095027715 9551467282\\n34945375 34945374\\n16603803 16603802\\n58997777 26551505\\n39762660 39762659\\n\",\n    \"5\\n313997256 313997255\\n224581770 224581769\\n549346780 476752290\\n60559465837 28745119200\\n274287972 274287971\\n\",\n    \"2\\n10 9\\n3 2\\n\",\n    \"5\\n31125459810 8334535873\\n3439858310 3439858309\\n9242031363 5238155938\\n1025900247 1025900246\\n3754943269 3754943268\\n\",\n    \"5\\n81271189833 16089352976\\n98451628984 76827432884\\n19327420986 19327420985\\n15702367716 15702367715\\n49419997643 49419997642\\n\",\n    \"5\\n41024865848 173372595\\n60687612551 33296061228\\n64391844305 16241932104\\n81009941361 1976380712\\n58548577555 28344963216\\n\",\n    \"5\\n18975453681 18975453680\\n33749667489 33749667488\\n32212198515 32212198514\\n39519664171 39519664170\\n5846685141 5846685140\\n\",\n    \"5\\n11065751057 11065751056\\n14816488910 14816488909\\n7599636437 7599636436\\n32868029728 32868029727\\n29658708183 29658708182\\n\",\n    \"5\\n61150570394 22605752451\\n64903938253 57679397316\\n79673778456 37950907361\\n59209507183 35302232713\\n88726603470 50246884625\\n\",\n    \"5\\n45925060463 34682596536\\n34161192623 19459231506\\n74417875602 23392925845\\n58874966000 740257587\\n64371611777 32770840566\\n\",\n    \"5\\n17406961899 17406961898\\n21570966087 21570966086\\n31354673689 31354673688\\n24493273605 24493273604\\n44187316822 44187316821\\n\",\n    \"5\\n49948848825 49948848824\\n33118965298 33118965297\\n34285673904 34285673903\\n46923258767 46923258766\\n48431110341 48431110340\\n\",\n    \"5\\n38196676529 10033677341\\n76701388169 39387747140\\n96968196508 53479702571\\n98601117347 56935774756\\n89303447903 62932115422\\n\",\n    \"5\\n84969448764 45272932776\\n40645404603 21303358412\\n95260279132 55067325137\\n92908555827 18951498996\\n73854112015 59320860713\\n\",\n    \"1\\n5 4\\n\",\n    \"1\\n25 24\\n\",\n    \"1\\n13 12\\n\",\n    \"2\\n50000000605 50000000604\\n5 4\\n\",\n    \"1\\n281 280\\n\",\n    \"3\\n5 4\\n13 12\\n25 24\\n\",\n    \"1\\n45131796361 45131796360\\n\",\n    \"5\\n61 60\\n10000010 10\\n12345 45\\n12343345 65\\n1030 6\\n\",\n    \"2\\n61 60\\n85 84\\n\",\n    \"5\\n61 60\\n5242157731 5242157730\\n12345 45\\n5011907031 5011907030\\n20207223564 20207223563\\n\",\n    \"1\\n80003600041 80003600040\\n\",\n    \"5\\n5242157731 5242157730\\n12345 45\\n5011907031 5011907030\\n20207223564 20207223563\\n61 60\\n\",\n    \"3\\n25 24\\n841 840\\n28561 28560\\n\",\n    \"1\\n61 60\\n\",\n    \"1\\n7 6\\n\",\n    \"1\\n99999999999 36\\n\",\n    \"1\\n421 420\\n\",\n    \"1\\n5928189385 5928189384\\n\",\n    \"1\\n122 121\\n\",\n    \"1\\n61251050005 61251050004\\n\",\n    \"1\\n160489044 125525827\\n\",\n    \"1\\n18 14\\n\",\n    \"1\\n96793840086 96793840085\\n\",\n    \"1\\n84777676971 84777676970\\n\",\n    \"1\\n3121 3120\\n\",\n    \"1\\n500000041 500000040\\n\",\n    \"1\\n5484081721 5484081720\\n\",\n    \"1\\n4999100041 4999100040\\n\"\n  ],\n  \"outputs\": [\n    \"YES\\nNO\\nNO\\nYES\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"YES\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"YES\\nNO\\nNO\\nNO\\nYES\\n\",\n    \"NO\\nYES\\nNO\\nYES\\nNO\\n\",\n    \"NO\\n\",\n    \"NO\\nNO\\nNO\\nYES\\nYES\\n\",\n    \"NO\\nNO\\nYES\\nYES\\nNO\\n\",\n    \"NO\\nYES\\nYES\\nNO\\nYES\\n\",\n    \"YES\\nNO\\nNO\\nNO\\nYES\\n\",\n    \"NO\\nYES\\nNO\\nNO\\nYES\\n\",\n    \"NO\\nYES\\nNO\\nNO\\nYES\\n\",\n    \"YES\\nNO\\nNO\\nNO\\nYES\\n\",\n    \"YES\\nYES\\n\",\n    \"NO\\nNO\\nNO\\nYES\\nYES\\n\",\n    \"NO\\nNO\\nYES\\nYES\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"YES\\nYES\\nYES\\nYES\\nYES\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"YES\\nNO\\n\",\n    \"NO\\n\",\n    \"NO\\nNO\\nNO\\n\",\n    \"NO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\n\",\n    \"NO\\nNO\\nNO\\nNO\\nNO\\n\",\n    \"NO\\nNO\\nNO\\n\",\n    \"NO\\n\",\n    \"YES\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\",\n    \"NO\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/1033/B",
  "starter_code": ""
}