{
  "task_id": "APPS/87",
  "problem_id": 87,
  "prompt": "Petr wants to make a calendar for current month. For this purpose he draws a table in which columns correspond to weeks (a week is seven consequent days from Monday to Sunday), rows correspond to weekdays, and cells contain dates. For example, a calendar for January 2017 should look like on the picture: $\\left. \\begin{array}{|r|r|r|r|r|r|} \\hline & {2} & {9} & {16} & {23} & {30} \\\\ \\hline & {3} & {10} & {17} & {24} & {31} \\\\ \\hline & {4} & {11} & {18} & {25} & {} \\\\ \\hline & {5} & {12} & {19} & {26} & {} \\\\ \\hline & {6} & {13} & {20} & {27} & {} \\\\ \\hline & {7} & {14} & {21} & {28} & {} \\\\ \\hline 1 & {8} & {15} & {22} & {29} & {} \\\\ \\hline \\end{array} \\right.$ \n\nPetr wants to know how many columns his table should have given the month and the weekday of the first date of that month? Assume that the year is non-leap.\n\n\n-----Input-----\n\nThe only line contain two integers m and d (1 \u2264 m \u2264 12, 1 \u2264 d \u2264 7)\u00a0\u2014 the number of month (January is the first month, December is the twelfth) and the weekday of the first date of this month (1 is Monday, 7 is Sunday).\n\n\n-----Output-----\n\nPrint single integer: the number of columns the table should have.\n\n\n-----Examples-----\nInput\n1 7\n\nOutput\n6\n\nInput\n1 1\n\nOutput\n5\n\nInput\n11 6\n\nOutput\n5\n\n\n\n-----Note-----\n\nThe first example corresponds to the January 2017 shown on the picture in the statements.\n\nIn the second example 1-st January is Monday, so the whole month fits into 5 columns.\n\nIn the third example 1-st November is Saturday and 5 columns is enough.",
  "solutions": "[\"import sys\\narr = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\na, b = list(map(int, input().split()))\\na -= 1\\nb -= 1\\nctr = 1\\nfor i in range(arr[a] - 1):\\n    b += 1\\n    if (b == 7):\\n        b = 0\\n        ctr += 1\\nprint(ctr)\\n            \\n\", \"def main():\\n\\tm, d = map(int, input().split())\\n\\ta = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\tnum = a[m - 1]\\n\\tans = 1\\n\\tnum -= (8 - d)\\n\\tans += ((num + 7 - 1) // 7)\\n\\tprint(ans)\\n\\nmain()\", \"m, d = map(int, input().split())\\nmonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\nprint(-(-(month[m - 1] + d - 1) // 7))\", \"m, d = list(map(int, input().split()))\\n\\nnd = [0,31,28,31,30,31,30,31,31,30,31,30,31][m]\\n\\nnc = 0\\n\\nnd = nd - (8 - d)\\nnc = nc + 1\\n\\nwhile (nd > 0):\\n\\tnd = nd - 7\\n\\tnc = nc + 1\\n\\nprint(nc)\\n\\n\", \"d = [-1, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\nn, k = map(int, input().split())\\nprint((d[n] - (7 - k + 1) + 6) // 7 + 1)\", \"month, day = list(map(int, input().split()))\\nmonths = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\nfs = 7 - day + 1\\ncounter = 1\\nwhile fs + 7 <= months[month - 1]:\\n    counter += 1\\n    fs += 7\\nif (fs != months[month - 1]):\\n    counter += 1\\nprint(counter)\", \"m, d = list(map(int, input().split()))\\na31 = [1, 3, 5, 7, 8, 10, 12]\\nc = 30\\nif m in a31:\\n    c = 31\\nelif m == 2:\\n    c = 28\\nc -= (8 - d)\\nprint(1 + (c + 6) // 7)\\n\", \"from sys import stdin\\nimport math\\n\\ndays_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\nM, D = list(map(int, stdin.readline().split()))\\nM -= 1\\nD -= 1\\n\\nprint(math.ceil((days_in_month[M] + D) / 7))\\n\", \"m, d = list(map(int, input().split()))\\n\\ndays = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\nprint(((days[m] + d - 1) + 6) // 7)\\n\", \"months = [0, 31,28,31,30,31,30,31,31,30,31,30,31]\\n\\nfrom math import ceil\\n\\nm, d = list(map(int, input().split()))\\n\\nprint(ceil((months[m] + d - 1) / 7))\\n\", \"m,d=map(int,input().split())\\nmonth=[31,28,31,30,31,30,31,31,30,31,30,31]\\nres=(d-1+month[m-1])\\nif res%7>0:\\n  print(res//7+1)\\nelse:\\n  print(res//7)\", \"import math, sys\\n\\t\\ndef main():\\n\\tn,d = list(map(int, input().split()))\\n\\tmonths = [31,28,31,30,31,30,31,31,30,31,30,31]\\n\\tk = (months[n-1] - (8-d))\\n\\tans = 1 + k//7 + int(k%7>0)\\n\\tprint(ans)\\n\\t\\t\\n\\t\\t \\n\\t\\t\\t\\n\\ndef __starting_point():\\n\\tmain()\\n\\n__starting_point()\", \"md = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\nm, d = list(map(int, input().split()))\\nfsl = 7 - d + 1\\nmd[m-1] -= fsl\\nprint(1-(-md[m-1]//7))\\n\", \"import math\\ndays = [0,31,28,31,30,31,30,31,31,30,31,30,31]\\nm,d=map(int,input().split())\\nans = math.ceil((days[m]+d-1)/7)\\nprint(ans)\", \"from math import ceil\\n\\nM=[31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\ntemp=input().split()\\nm=int(temp[0])\\nd=int(temp[1])\\nt=M[m-1]+d-1\\nprint(ceil(t/7))\", \"import sys\\n#sys.stdin = open(\\\"in.txt\\\" , \\\"r\\\")\\n#sys.stdout = open(\\\"out.txt\\\" , \\\"w\\\")\\nfrom math import ceil\\ndays = [0,31,28,31,30,31,30,31,31,30,31,30,31]\\n\\nm,d = list(map(int,input().split()))\\ndays = d - 1 + days[m] \\nprint(ceil(days/7))\\n\", \"m,d= list(map(int,input().split()))\\nc = [0,31,28,31,30,31,30,31,31,30,31,30,31]\\nnum = d - 1 + c[m]\\ncol = num // 7;\\nif num % 7 != 0:\\n    col+=1\\nprint(col)\\n\", \"mm = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31, 30, 31]\\nm, d = list(map(int, input().split()))\\nprint((mm[m-1]+d-2)//7+1)\\n\", \"m, d = list(map(int, input().split()))\\nl = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\n\\nm -= 1\\nt = l[m]\\nfirst_col = 8 - d\\nt -= first_col\\nc = 1\\nwhile t > 0:\\n    t -= 7\\n    c += 1\\nprint(c)\\n\\n\", \"from sys import stdin, stdout\\nn, k = map(int, stdin.readline().split())\\n\\ncnt = k - 8\\nif (n == 1 or n == 3 or n == 5 or n == 7 or n == 8 or n == 10 or n == 12):\\n    cnt += 31\\nelif n == 2:\\n    cnt += 28\\nelse:\\n    cnt += 30\\n\\nif cnt % 7:\\n    ans = 2 + cnt // 7\\nelse:\\n    ans = 1 + cnt // 7\\n    \\nstdout.write(str(ans))\", \"m, first_day = list(map(int, input().split()))\\nyear = [31,28,31,30,31,30,31,31,30,31,30,31]\\ndays_num = year[m-1]\\nleft = days_num - (7 - first_day + 1)\\nif(left % 7 == 0):\\n    print(1 + left//7)\\nelse:\\n    print(2 + left//7)\\n\", \"import sys\\n\\ndef main():\\n    m,d = map(int,sys.stdin.readline().split())\\n    x = [31,28,31,30,31,30,31,31,30,31,30,31]\\n    y = x[m-1] + d-1\\n    res = y/7\\n    if res > int(res):\\n        res = int(res)+1\\n    print(int(res))\\n\\nmain()\", \"days = [\\n\\t31,\\n\\t28,\\n\\t31,\\n\\t30,\\n\\t31,\\n\\t30,\\n\\t31,\\n\\t31,\\n\\t30,\\n\\t31,\\n\\t30,\\n\\t31,\\n]\\n\\nmonth, first = map(int, input().split())\\nfirst -= 1\\n\\ncnt = 1\\nx = days[month - 1] - (7 - first)\\ncnt += x // 7\\nif x % 7 != 0:\\n\\tcnt += 1\\nprint(cnt) \", \"q,w=list(map(int,input().split()))\\na=[0,31,28,31,30,31,30,31,31,30,31,30,31]\\nans=1\\nt=a[q]-(8-w)\\nwhile t>0:\\n    ans+=1\\n    t-=7\\nprint(ans)\\n\", \"m, d = list(map(int, input().split()))\\n\\ndays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\\nimport math\\nday = days[m-1]\\nprint(math.ceil((day + d-1)/7))\\n\"]",
  "input_output": "{\n  \"inputs\": [\n    \"1 7\\n\",\n    \"1 1\\n\",\n    \"11 6\\n\",\n    \"2 7\\n\",\n    \"2 1\\n\",\n    \"8 6\\n\",\n    \"1 1\\n\",\n    \"1 2\\n\",\n    \"1 3\\n\",\n    \"1 4\\n\",\n    \"1 5\\n\",\n    \"1 6\\n\",\n    \"1 7\\n\",\n    \"2 1\\n\",\n    \"2 2\\n\",\n    \"2 3\\n\",\n    \"2 4\\n\",\n    \"2 5\\n\",\n    \"2 6\\n\",\n    \"2 7\\n\",\n    \"3 1\\n\",\n    \"3 2\\n\",\n    \"3 3\\n\",\n    \"3 4\\n\",\n    \"3 5\\n\",\n    \"3 6\\n\",\n    \"3 7\\n\",\n    \"4 1\\n\",\n    \"4 2\\n\",\n    \"4 3\\n\",\n    \"4 4\\n\",\n    \"4 5\\n\",\n    \"4 6\\n\",\n    \"4 7\\n\",\n    \"5 1\\n\",\n    \"5 2\\n\",\n    \"5 3\\n\",\n    \"5 4\\n\",\n    \"5 5\\n\",\n    \"5 6\\n\",\n    \"5 7\\n\",\n    \"6 1\\n\",\n    \"6 2\\n\",\n    \"6 3\\n\",\n    \"6 4\\n\",\n    \"6 5\\n\",\n    \"6 6\\n\",\n    \"6 7\\n\",\n    \"7 1\\n\",\n    \"7 2\\n\",\n    \"7 3\\n\",\n    \"7 4\\n\",\n    \"7 5\\n\",\n    \"7 6\\n\",\n    \"7 7\\n\",\n    \"8 1\\n\",\n    \"8 2\\n\",\n    \"8 3\\n\",\n    \"8 4\\n\",\n    \"8 5\\n\",\n    \"8 6\\n\",\n    \"8 7\\n\",\n    \"9 1\\n\",\n    \"9 2\\n\",\n    \"9 3\\n\",\n    \"9 4\\n\",\n    \"9 5\\n\",\n    \"9 6\\n\",\n    \"9 7\\n\",\n    \"10 1\\n\",\n    \"10 2\\n\",\n    \"10 3\\n\",\n    \"10 4\\n\",\n    \"10 5\\n\",\n    \"10 6\\n\",\n    \"10 7\\n\",\n    \"11 1\\n\",\n    \"11 2\\n\",\n    \"11 3\\n\",\n    \"11 4\\n\",\n    \"11 5\\n\",\n    \"11 6\\n\",\n    \"11 7\\n\",\n    \"12 1\\n\",\n    \"12 2\\n\",\n    \"12 3\\n\",\n    \"12 4\\n\",\n    \"12 5\\n\",\n    \"12 6\\n\",\n    \"12 7\\n\",\n    \"1 4\\n\",\n    \"1 5\\n\",\n    \"9 7\\n\",\n    \"2 6\\n\",\n    \"1 6\\n\",\n    \"2 2\\n\",\n    \"4 7\\n\",\n    \"12 6\\n\",\n    \"12 3\\n\",\n    \"3 6\\n\",\n    \"9 6\\n\",\n    \"7 6\\n\",\n    \"11 7\\n\",\n    \"6 6\\n\"\n  ],\n  \"outputs\": [\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"4\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"4\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"5\\n\",\n    \"6\\n\",\n    \"6\\n\",\n    \"5\\n\"\n  ]\n}",
  "difficulty": "interview",
  "url": "https://codeforces.com/problemset/problem/760/A",
  "starter_code": ""
}