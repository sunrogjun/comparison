{
  "task_id": "MBPP/164",
  "prompt": "Write a python function to check whether the sum of divisors are same or not.",
  "canonical_solution": "import math \r\ndef divSum(n): \r\n    sum = 1; \r\n    i = 2; \r\n    while(i * i <= n): \r\n        if (n % i == 0): \r\n            sum = (sum + i +math.floor(n / i)); \r\n        i += 1; \r\n    return sum; \r\ndef areEquivalent(num1,num2): \r\n    return divSum(num1) == divSum(num2); ",
  "test_list": [
    "assert areEquivalent(36,57) == False",
    "assert areEquivalent(2,4) == False",
    "assert areEquivalent(23,47) == True"
  ],
  "challenge_test_list": [],
  "problem_id": 153
}