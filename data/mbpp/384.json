{
  "task_id": "MBPP/395",
  "prompt": "Write a python function to find the first non-repeated character in a given string.",
  "canonical_solution": "def first_non_repeating_character(str1):\r\n  char_order = []\r\n  ctr = {}\r\n  for c in str1:\r\n    if c in ctr:\r\n      ctr[c] += 1\r\n    else:\r\n      ctr[c] = 1 \r\n      char_order.append(c)\r\n  for c in char_order:\r\n    if ctr[c] == 1:\r\n      return c\r\n  return None",
  "test_list": [
    "assert first_non_repeating_character(\"abcabc\") == None",
    "assert first_non_repeating_character(\"abc\") == \"a\"",
    "assert first_non_repeating_character(\"ababc\") == \"c\""
  ],
  "challenge_test_list": [],
  "problem_id": 384
}