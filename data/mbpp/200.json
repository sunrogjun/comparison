{
  "task_id": "MBPP/211",
  "prompt": "Write a python function to count numbers whose oth and nth bits are set.",
  "canonical_solution": "def count_Num(n): \r\n    if (n == 1): \r\n        return 1\r\n    count = pow(2,n - 2) \r\n    return count ",
  "test_list": [
    "assert count_Num(2) == 1",
    "assert count_Num(3) == 2",
    "assert count_Num(1) == 1"
  ],
  "challenge_test_list": [],
  "problem_id": 200
}