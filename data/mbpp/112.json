{
  "task_id": "MBPP/123",
  "prompt": "Write a function to sum all amicable numbers from 1 to a specified number.",
  "canonical_solution": "def amicable_numbers_sum(limit):\r\n    if not isinstance(limit, int):\r\n        return \"Input is not an integer!\"\r\n    if limit < 1:\r\n        return \"Input must be bigger than 0!\"\r\n    amicables = set()\r\n    for num in range(2, limit+1):\r\n        if num in amicables:\r\n            continue\r\n        sum_fact = sum([fact for fact in range(1, num) if num % fact == 0])\r\n        sum_fact2 = sum([fact for fact in range(1, sum_fact) if sum_fact % fact == 0])\r\n        if num == sum_fact2 and num != sum_fact:\r\n            amicables.add(num)\r\n            amicables.add(sum_fact2)\r\n    return sum(amicables)",
  "test_list": [
    "assert amicable_numbers_sum(999)==504",
    "assert amicable_numbers_sum(9999)==31626",
    "assert amicable_numbers_sum(99)==0"
  ],
  "challenge_test_list": [],
  "problem_id": 112
}