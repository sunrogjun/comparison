{
  "task_id": "MBPP/231",
  "prompt": "Write a function to find the maximum sum in the given right triangle of numbers.",
  "canonical_solution": "def max_sum(tri, n): \r\n\tif n > 1: \r\n\t\ttri[1][1] = tri[1][1]+tri[0][0] \r\n\t\ttri[1][0] = tri[1][0]+tri[0][0] \r\n\tfor i in range(2, n): \r\n\t\ttri[i][0] = tri[i][0] + tri[i-1][0] \r\n\t\ttri[i][i] = tri[i][i] + tri[i-1][i-1] \r\n\t\tfor j in range(1, i): \r\n\t\t\tif tri[i][j]+tri[i-1][j-1] >= tri[i][j]+tri[i-1][j]: \r\n\t\t\t\ttri[i][j] = tri[i][j] + tri[i-1][j-1] \r\n\t\t\telse: \r\n\t\t\t\ttri[i][j] = tri[i][j]+tri[i-1][j] \r\n\treturn (max(tri[n-1]))",
  "test_list": [
    "assert max_sum([[1], [2,1], [3,3,2]], 3) == 6",
    "assert max_sum([[1], [1, 2], [4, 1, 12]], 3) == 15 ",
    "assert max_sum([[2], [3,2], [13,23,12]], 3) == 28"
  ],
  "challenge_test_list": [],
  "problem_id": 220
}