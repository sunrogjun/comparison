{
  "task_id": "MBPP/71",
  "prompt": "Write a function to sort a list of elements using comb sort.",
  "canonical_solution": "def comb_sort(nums):\r\n    shrink_fact = 1.3\r\n    gaps = len(nums)\r\n    swapped = True\r\n    i = 0\r\n    while gaps > 1 or swapped:\r\n        gaps = int(float(gaps) / shrink_fact)\r\n        swapped = False\r\n        i = 0\r\n        while gaps + i < len(nums):\r\n            if nums[i] > nums[i+gaps]:\r\n                nums[i], nums[i+gaps] = nums[i+gaps], nums[i]\r\n                swapped = True\r\n            i += 1\r\n    return nums",
  "test_list": [
    "assert comb_sort([5, 15, 37, 25, 79]) == [5, 15, 25, 37, 79]",
    "assert comb_sort([41, 32, 15, 19, 22]) == [15, 19, 22, 32, 41]",
    "assert comb_sort([99, 15, 13, 47]) == [13, 15, 47, 99]"
  ],
  "challenge_test_list": [],
  "problem_id": 60
}