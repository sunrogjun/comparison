{
  "task_id": "MBPP/485",
  "prompt": "Write a function to find the largest palindromic number in the given array.",
  "canonical_solution": "def is_palindrome(n) : \r\n\tdivisor = 1\r\n\twhile (n / divisor >= 10) : \r\n\t\tdivisor *= 10\r\n\twhile (n != 0) : \r\n\t\tleading = n // divisor \r\n\t\ttrailing = n % 10\r\n\t\tif (leading != trailing) : \r\n\t\t\treturn False\r\n\t\tn = (n % divisor) // 10\r\n\t\tdivisor = divisor // 100\r\n\treturn True\r\ndef largest_palindrome(A, n) : \r\n\tA.sort() \r\n\tfor i in range(n - 1, -1, -1) : \r\n\t\tif (is_palindrome(A[i])) : \r\n\t\t\treturn A[i] \r\n\treturn -1",
  "test_list": [
    "assert largest_palindrome([1, 232, 54545, 999991], 4) == 54545",
    "assert largest_palindrome([1, 2, 3, 4, 5, 50], 6) == 5",
    "assert largest_palindrome([1, 3, 7, 9, 45], 5)  == 9"
  ],
  "challenge_test_list": [],
  "problem_id": 474
}