{
  "task_id": "MBPP/78",
  "prompt": "Write a python function to find number of integers with odd number of set bits.",
  "canonical_solution": "def count_With_Odd_SetBits(n): \r\n    if (n % 2 != 0): \r\n        return (n + 1) / 2\r\n    count = bin(n).count('1') \r\n    ans = n / 2\r\n    if (count % 2 != 0): \r\n        ans += 1\r\n    return ans ",
  "test_list": [
    "assert count_With_Odd_SetBits(5) == 3",
    "assert count_With_Odd_SetBits(10) == 5",
    "assert count_With_Odd_SetBits(15) == 8"
  ],
  "challenge_test_list": [],
  "problem_id": 67
}