{
  "task_id": "MBPP/286",
  "prompt": "Write a function to find the largest sum of contiguous array in the modified array which is formed by repeating the given array k times.",
  "canonical_solution": "def max_sub_array_sum_repeated(a, n, k): \r\n\tmax_so_far = -2147483648\r\n\tmax_ending_here = 0\r\n\tfor i in range(n*k): \r\n\t\tmax_ending_here = max_ending_here + a[i%n] \r\n\t\tif (max_so_far < max_ending_here): \r\n\t\t\tmax_so_far = max_ending_here \r\n\t\tif (max_ending_here < 0): \r\n\t\t\tmax_ending_here = 0\r\n\treturn max_so_far",
  "test_list": [
    "assert max_sub_array_sum_repeated([10, 20, -30, -1], 4, 3) == 30",
    "assert max_sub_array_sum_repeated([-1, 10, 20], 3, 2) == 59",
    "assert max_sub_array_sum_repeated([-1, -2, -3], 3, 3) == -1"
  ],
  "challenge_test_list": [],
  "problem_id": 275
}