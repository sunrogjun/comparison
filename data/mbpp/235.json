{
  "task_id": "MBPP/246",
  "prompt": "Write a function for computing square roots using the babylonian method.",
  "canonical_solution": "def babylonian_squareroot(number):\r\n    if(number == 0):\r\n        return 0;\r\n    g = number/2.0;\r\n    g2 = g + 1;\r\n    while(g != g2):\r\n        n = number/ g;\r\n        g2 = g;\r\n        g = (g + n)/2;\r\n    return g;",
  "test_list": [
    "assert babylonian_squareroot(10)==3.162277660168379",
    "assert babylonian_squareroot(2)==1.414213562373095",
    "assert babylonian_squareroot(9)==3.0"
  ],
  "challenge_test_list": [],
  "problem_id": 235
}