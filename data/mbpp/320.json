{
  "task_id": "MBPP/331",
  "prompt": "Write a python function to count unset bits of a given number.",
  "canonical_solution": "def count_unset_bits(n): \r\n    count = 0\r\n    x = 1\r\n    while(x < n + 1): \r\n        if ((x & n) == 0): \r\n            count += 1\r\n        x = x << 1\r\n    return count  ",
  "test_list": [
    "assert count_unset_bits(2) == 1",
    "assert count_unset_bits(4) == 2",
    "assert count_unset_bits(6) == 1"
  ],
  "challenge_test_list": [],
  "problem_id": 320
}