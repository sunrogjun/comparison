{
  "task_id": "MBPP/34",
  "prompt": "Write a python function to find the missing number in a sorted array.",
  "canonical_solution": "def find_missing(ar,N): \r\n    l = 0\r\n    r = N - 1\r\n    while (l <= r):  \r\n        mid = (l + r) / 2\r\n        mid= int (mid) \r\n        if (ar[mid] != mid + 1 and ar[mid - 1] == mid): \r\n            return (mid + 1)  \r\n        elif (ar[mid] != mid + 1): \r\n            r = mid - 1 \r\n        else: \r\n            l = mid + 1\r\n    return (-1) ",
  "test_list": [
    "assert find_missing([1,2,3,5],4) == 4",
    "assert find_missing([1,3,4,5],4) == 2",
    "assert find_missing([1,2,3,5,6,7],5) == 4"
  ],
  "challenge_test_list": [],
  "problem_id": 23
}