{
  "task_id": "MBPP/325",
  "prompt": "Write a python function to find the minimum number of squares whose sum is equal to a given number.",
  "canonical_solution": "def get_Min_Squares(n):\r\n    if n <= 3:\r\n        return n;\r\n    res = n \r\n    for x in range(1,n + 1):\r\n        temp = x * x;\r\n        if temp > n:\r\n            break\r\n        else:\r\n            res = min(res,1 + get_Min_Squares(n  - temp)) \r\n    return res;",
  "test_list": [
    "assert get_Min_Squares(6) == 3",
    "assert get_Min_Squares(2) == 2",
    "assert get_Min_Squares(4) == 1"
  ],
  "challenge_test_list": [],
  "problem_id": 314
}