{
  "task_id": "MBPP/236",
  "prompt": "Write a python function to count the maximum number of equilateral triangles that can be formed within a given equilateral triangle.",
  "canonical_solution": "def No_of_Triangle(N,K):\r\n    if (N < K):\r\n        return -1;\r\n    else:\r\n        Tri_up = 0;\r\n        Tri_up = ((N - K + 1) *(N - K + 2)) // 2;\r\n        Tri_down = 0;\r\n        Tri_down = ((N - 2 * K + 1) *(N - 2 * K + 2)) // 2;\r\n        return Tri_up + Tri_down;",
  "test_list": [
    "assert No_of_Triangle(4,2) == 7",
    "assert No_of_Triangle(4,3) == 3",
    "assert No_of_Triangle(1,3) == -1"
  ],
  "challenge_test_list": [],
  "problem_id": 225
}