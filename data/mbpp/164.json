{
  "task_id": "MBPP/175",
  "prompt": "Write a function to verify validity of a string of parentheses.",
  "canonical_solution": "def is_valid_parenthese( str1):\r\n        stack, pchar = [], {\"(\": \")\", \"{\": \"}\", \"[\": \"]\"}\r\n        for parenthese in str1:\r\n            if parenthese in pchar:\r\n                stack.append(parenthese)\r\n            elif len(stack) == 0 or pchar[stack.pop()] != parenthese:\r\n                return False\r\n        return len(stack) == 0",
  "test_list": [
    "assert is_valid_parenthese(\"(){}[]\")==True",
    "assert is_valid_parenthese(\"()[{)}\")==False",
    "assert is_valid_parenthese(\"()\")==True"
  ],
  "challenge_test_list": [],
  "problem_id": 164
}