{
  "task_id": "MBPP/129",
  "prompt": "Write a function to calculate magic square.",
  "canonical_solution": "def magic_square_test(my_matrix):\r\n    iSize = len(my_matrix[0])\r\n    sum_list = []\r\n    sum_list.extend([sum (lines) for lines in my_matrix])   \r\n    for col in range(iSize):\r\n        sum_list.append(sum(row[col] for row in my_matrix))\r\n    result1 = 0\r\n    for i in range(0,iSize):\r\n        result1 +=my_matrix[i][i]\r\n    sum_list.append(result1)      \r\n    result2 = 0\r\n    for i in range(iSize-1,-1,-1):\r\n        result2 +=my_matrix[i][i]\r\n    sum_list.append(result2)\r\n    if len(set(sum_list))>1:\r\n        return False\r\n    return True",
  "test_list": [
    "assert magic_square_test([[7, 12, 1, 14], [2, 13, 8, 11], [16, 3, 10, 5], [9, 6, 15, 4]])==True",
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 8]])==True",
    "assert magic_square_test([[2, 7, 6], [9, 5, 1], [4, 3, 7]])==False"
  ],
  "challenge_test_list": [],
  "problem_id": 118
}