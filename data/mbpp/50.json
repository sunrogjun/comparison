{
  "task_id": "MBPP/61",
  "prompt": "Write a python function to count number of substrings with the sum of digits equal to their length.",
  "canonical_solution": "from collections import defaultdict\r\ndef count_Substrings(s,n):\r\n    count,sum = 0,0\r\n    mp = defaultdict(lambda : 0)\r\n    mp[0] += 1\r\n    for i in range(n):\r\n        sum += ord(s[i]) - ord('0')\r\n        count += mp[sum - (i + 1)]\r\n        mp[sum - (i + 1)] += 1\r\n    return count",
  "test_list": [
    "assert count_Substrings('112112',6) == 6",
    "assert count_Substrings('111',3) == 6",
    "assert count_Substrings('1101112',7) == 12"
  ],
  "challenge_test_list": [],
  "problem_id": 50
}