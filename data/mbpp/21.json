{
  "task_id": "MBPP/32",
  "prompt": "Write a python function to find the largest prime factor of a given number.",
  "canonical_solution": "import math \r\ndef max_Prime_Factors (n): \r\n    maxPrime = -1 \r\n    while n%2 == 0: \r\n        maxPrime = 2\r\n        n >>= 1    \r\n    for i in range(3,int(math.sqrt(n))+1,2): \r\n        while n % i == 0: \r\n            maxPrime = i \r\n            n = n / i \r\n    if n > 2: \r\n        maxPrime = n  \r\n    return int(maxPrime)",
  "test_list": [
    "assert max_Prime_Factors(15) == 5",
    "assert max_Prime_Factors(6) == 3",
    "assert max_Prime_Factors(2) == 2"
  ],
  "challenge_test_list": [],
  "problem_id": 21
}