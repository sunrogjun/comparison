{
  "task_id": "MBPP/109",
  "prompt": "Write a python function to find the count of rotations of a binary string with odd value.",
  "canonical_solution": "def odd_Equivalent(s,n): \r\n    count=0\r\n    for i in range(0,n): \r\n        if (s[i] == '1'): \r\n            count = count + 1\r\n    return count ",
  "test_list": [
    "assert odd_Equivalent(\"011001\",6) == 3",
    "assert odd_Equivalent(\"11011\",5) == 4",
    "assert odd_Equivalent(\"1010\",4) == 2"
  ],
  "challenge_test_list": [],
  "problem_id": 98
}