{
  "task_id": "MBPP/245",
  "prompt": "Write a function to find the maximum sum of bi-tonic sub-sequence for the given array.",
  "canonical_solution": "def max_sum(arr, n): \r\n\tMSIBS = arr[:] \r\n\tfor i in range(n): \r\n\t\tfor j in range(0, i): \r\n\t\t\tif arr[i] > arr[j] and MSIBS[i] < MSIBS[j] + arr[i]: \r\n\t\t\t\tMSIBS[i] = MSIBS[j] + arr[i] \r\n\tMSDBS = arr[:] \r\n\tfor i in range(1, n + 1): \r\n\t\tfor j in range(1, i): \r\n\t\t\tif arr[-i] > arr[-j] and MSDBS[-i] < MSDBS[-j] + arr[-i]: \r\n\t\t\t\tMSDBS[-i] = MSDBS[-j] + arr[-i] \r\n\tmax_sum = float(\"-Inf\") \r\n\tfor i, j, k in zip(MSIBS, MSDBS, arr): \r\n\t\tmax_sum = max(max_sum, i + j - k) \r\n\treturn max_sum",
  "test_list": [
    "assert max_sum([1, 15, 51, 45, 33, 100, 12, 18, 9], 9) == 194",
    "assert max_sum([80, 60, 30, 40, 20, 10], 6) == 210",
    "assert max_sum([2, 3 ,14, 16, 21, 23, 29, 30], 8) == 138"
  ],
  "challenge_test_list": [],
  "problem_id": 234
}