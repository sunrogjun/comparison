{
  "task_id": "MBPP/468",
  "prompt": "Write a function to find the maximum product formed by multiplying numbers of an increasing subsequence of that array.",
  "canonical_solution": "def max_product(arr, n ): \r\n\tmpis =[0] * (n) \r\n\tfor i in range(n): \r\n\t\tmpis[i] = arr[i] \r\n\tfor i in range(1, n): \r\n\t\tfor j in range(i): \r\n\t\t\tif (arr[i] > arr[j] and\r\n\t\t\t\t\tmpis[i] < (mpis[j] * arr[i])): \r\n\t\t\t\t\t\tmpis[i] = mpis[j] * arr[i] \r\n\treturn max(mpis)",
  "test_list": [
    "assert max_product([3, 100, 4, 5, 150, 6], 6) == 45000 ",
    "assert max_product([4, 42, 55, 68, 80], 5) == 50265600",
    "assert max_product([10, 22, 9, 33, 21, 50, 41, 60], 8) == 21780000 "
  ],
  "challenge_test_list": [],
  "problem_id": 457
}