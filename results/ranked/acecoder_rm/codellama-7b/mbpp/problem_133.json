{
  "problem": {
    "task_id": "MBPP/144",
    "prompt": "Write a python function to find the sum of absolute differences in all pairs of the given array.",
    "canonical_solution": "def sum_Pairs(arr,n): \r\n    sum = 0\r\n    for i in range(n - 1,-1,-1): \r\n        sum += i*arr[i] - (n-1-i) * arr[i] \r\n    return sum",
    "test_list": [
      "assert sum_Pairs([1,8,9,15,16],5) == 74",
      "assert sum_Pairs([1,2,3,4],4) == 10",
      "assert sum_Pairs([1,2,3,4,5,7,9,11,14],9) == 188"
    ],
    "challenge_test_list": [],
    "problem_id": 133
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def sum_of_absolute_diff(arr: list) -> int:\n    \"\"\"\n    >>> sum_of_absolute_diff([1, 2, 3, 4])\n    14\n    >>> sum_of_absolute_diff([-1, -2, -3, -4])\n    14\n    >>> sum_of_absolute_diff([0, 0, 0, 0])\n    0\n    \"\"\"\n    return sum(abs(arr[i] - arr[j]) for i in range(len(arr)) for j in range(i + 1, len(arr)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      14.375
    ],
    [
      "def sum_abs_diff(input_list: list) -> int:\n    \"\"\"\n    >>> sum_abs_diff([1, 2, 3, 4, 5])\n    10\n    >>> sum_abs_diff([1, 1, 1, 1])\n    0\n    >>> sum_abs_diff([1, 2, 3, 0])\n    7\n    >>> sum_abs_diff([-1, 2, 3, 0])\n    10\n    >>> sum_abs_diff([1, 2, 3, 0, 1, 1, 1, 1])\n    20\n    >>> sum_abs_diff([1, 2, 3, 0, 1, 1, 1, 1, 1])\n    21\n    \"\"\"\n    sum_diff = 0\n    for i in range(len(input_list)):\n        for j in range(i + 1, len(input_list)):\n            sum_diff += abs(input_list[i] - input_list[j])\n    return sum_diff\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      14.140625
    ],
    [
      "def absolute_difference_pairs(a: list) -> int:\n    \"\"\"\n    >>> absolute_difference_pairs([1, 2, 3, 4])\n    20\n    >>> absolute_difference_pairs([2, 7, 11, 15])\n    60\n    >>> absolute_difference_pairs([])\n    0\n    \"\"\"\n    # initialize sum\n    sum_of_diff = 0\n\n    # iterate over list to get all pairs\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            # add absolute difference to sum\n            sum_of_diff += abs(a[i] - a[j])\n    return sum_of_diff\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      12.109375
    ],
    [
      "from itertools import combinations\n\n\ndef find_sum_of_absolute_differences(lst):\n    \"\"\"\n    >>> find_sum_of_absolute_differences([3, 1, 4, 1, 5])\n    16\n    >>> find_sum_of_absolute_differences([1, 1, 1, 1])\n    0\n    >>> find_sum_of_absolute_differences([1, 2, 3, 4])\n    4\n    \"\"\"\n    # your code goes here\n    sum = 0\n\n    for i, j in combinations(lst, 2):\n        sum += abs(i - j)\n\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      11.7265625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    if len(array) < 2:\n        return 0\n\n    sum_of_absolute_difference: int = 0\n\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            sum_of_absolute_difference += abs(array[i] - array[j])\n\n    return sum_of_absolute_difference\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_difference([1, 2, 3, 4, 5]))",
      8.75
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_difference(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n^2)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_of_abs_diff = 0\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            sum_of_abs_diff += abs(nums[i] - nums[j])\n\n    return sum_of_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_abs_difference([1, 2, 3, 4]))  # 10\n    print(sum_of_abs_difference([1, 1, 1, 1]))  # 0\n    print(sum_of_abs_difference([-3, -1, 1, 2]))  # 6\n    print(sum_of_abs_difference([-3, 0, 0, 3]))  # 6",
      7.921875
    ],
    [
      "def sum_of_abs_diff(arr):\n    # Initializing the result variable\n    result = 0\n\n    # Iterating through the array\n    for i in range(len(arr)):\n        for j in range(len(arr)):\n            # If i is not equal to j, then calculate the absolute difference\n            if i != j:\n                result += abs(arr[i] - arr[j])\n\n    return result\n\n\ndef main():\n    # Driver code\n    print(sum_of_abs_diff([1, 2, 3, 4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()",
      7.859375
    ],
    [
      "from typing import List\n\n\ndef absolute_difference(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n^2)\n    Space Complexity: O(1)\n    \"\"\"\n    length = len(array)\n    sum_abs_diff = 0\n\n    for i in range(length):\n        for j in range(length):\n            if i != j:\n                sum_abs_diff += abs(array[i] - array[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(absolute_difference([1, 2, 3, 4]))  # 10\n    print(absolute_difference([1, 4, 0, 10]))  # 15",
      7.38671875
    ],
    [
      "def absolute_difference_pairs(nums):\n    result = []\n    for i in range(len(nums)):\n        for j in range(i+1, len(nums)):\n            result.append(abs(nums[i] - nums[j]))\n    return sum(result)\n\n\nprint(absolute_difference_pairs([1, 2, 2, 5, 3]))\nprint(absolute_difference_pairs([1, 1, 1, 1]))\nprint(absolute_difference_pairs([1, 2, 3]))\nprint(absolute_difference_pairs([-1, -2, -3]))",
      7.26953125
    ],
    [
      "def sum_of_abs_diff(array):\n    # The idea is to find all the pairs and find the absolute difference between them\n    # and then sum it up\n\n    # First find all the pairs of the given array\n    # For example: 1, 2, 3, 4, 5, 6\n    # The pairs will be (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (2, 3), (2, 4), (2, 5), (2, 6), (3, 4), (3, 5), (3, 6), (4, 5), (4, 6), (5, 6)\n    # Now find the absolute difference between each pair and sum it up\n\n    # The complexity will be O(n^2)\n\n    # Create a copy of the original array\n    array_copy = array[:]\n    pairs = []\n\n    for i in range(len(array)):\n        for j in range(i+1, len(array)):\n            pairs.append((array[i], array[j]))\n\n    # Now find the absolute difference between each pair\n    abs_diff = 0\n    for pair in pairs:\n        abs_diff += abs(pair[0] - pair[1])\n\n    return abs_diff\n\n\nprint(sum_of_abs_diff([1, 2, 3, 4, 5, 6]))\nprint(sum_of_abs_diff([1, 1, 1, 1]))",
      6.3125
    ],
    [
      "def sum_of_absolute_differences(array):\n    sum = 0\n    for i in range(len(array)):\n        for j in range(len(array)):\n            sum += abs(array[i] - array[j])\n    return sum\n\n\nprint(sum_of_absolute_differences([1, 2, 3, 4, 5]))\nprint(sum_of_absolute_differences([-1, -2, -3, -4, -5]))\nprint(sum_of_absolute_differences([0, 0, 0, 0, 0]))\nprint(sum_of_absolute_differences([-10, -20, -30, -40, -50]))",
      5.953125
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_differences(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    result = 0\n\n    for i in range(len(array)):\n        for j in range(len(array)):\n            result += abs(array[i] - array[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_differences([1, 2, 3, 4]))",
      5.09375
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_difference(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    n = len(nums)\n    sum_of_abs_diff = 0\n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            sum_of_abs_diff += abs(nums[i] - nums[j])\n\n    return sum_of_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_abs_difference([1, 2, 3, 4, 5]))",
      4.58203125
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    total = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            total += abs(arr[i] - arr[j])\n\n    return total\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([1, 2, 3, 4, 5]) == 14",
      4.5234375
    ],
    [
      "def sum_of_absolute_diff(arr):\n    result = 0\n    n = len(arr)\n\n    for i in range(n):\n        for j in range(i+1, n):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\nprint(sum_of_absolute_diff([1, 2, 3, 4, 5]))\nprint(sum_of_absolute_diff([1, 2, 3, 4, 5, 6]))\nprint(sum_of_absolute_diff([1, 2, 3, 4, 5, 6, 7]))\nprint(sum_of_absolute_diff([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(sum_of_absolute_diff([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(sum_of_absolute_diff([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      4.234375
    ],
    [
      "from typing import List\n\n\ndef sum_abs_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    \"\"\"\n    n = len(arr)\n    sum_abs_diff = 0\n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            sum_abs_diff += abs(arr[i] - arr[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    assert sum_abs_diff([1, 2, 3, 4, 5]) == 14",
      4.04296875
    ],
    [
      "from typing import List\n\n\ndef absolute_diff(a: List) -> int:\n    \"\"\"\n    Time Complexity: O(n^2)\n    Space Complexity: O(1)\n    \"\"\"\n    length = len(a)\n\n    sum_of_diff = 0\n\n    for i in range(length):\n        for j in range(i + 1, length):\n            sum_of_diff += abs(a[i] - a[j])\n\n    return sum_of_diff\n\n\nif __name__ == \"__main__\":\n    assert absolute_diff([1, 2, 3, 4, 5]) == 14",
      3.716796875
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    \"\"\"\n    n = len(arr)\n\n    # Initialize result\n    result = 0\n\n    # Iterate over all pairs\n    for i in range(n):\n        for j in range(i + 1, n):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([1, 2, 3, 4, 5]) == 14",
      3.623046875
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(n*n)\n    \"\"\"\n    sum_abs_diff = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            sum_abs_diff += abs(arr[i] - arr[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_difference([1, 2, 3, 4, 5]))  # 14",
      3.509765625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    nums.sort()\n\n    sum_of_abs_diff = 0\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            sum_of_abs_diff += abs(nums[i] - nums[j])\n\n    return sum_of_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_difference([1, 2, 3, 4, 5, 6, 7]))\n    print(sum_of_absolute_difference([1, 5, 3, 4, 8, 7, 2]))",
      3.36328125
    ],
    [
      "def sum_abs_diff(array):\n    n = len(array)\n    array = sorted(array)\n    diff = 0\n    for i in range(n-1):\n        diff += abs(array[i+1] - array[i])\n    return diff\n\n\nif __name__ == \"__main__\":\n    array = [3, -4, 2, 1, 6, -3]\n    print(sum_abs_diff(array))",
      3.234375
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_differences(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_of_absolute_diff = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            sum_of_absolute_diff += abs(arr[i] - arr[j])\n\n    return sum_of_absolute_diff\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_differences([1, 2, 3, 4, 5]) == 14",
      3.16015625
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_of_abs_diff = 0\n\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            sum_of_abs_diff += abs(nums[i] - nums[j])\n\n    return sum_of_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_abs_diff([1, 2, 4, 8, 16]))",
      2.8984375
    ],
    [
      "def sum_of_absolute_differences(arr):\n    result = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\ndef main():\n    print(\"Sum of absolute differences in all pairs of the given array: \" +\n          str(sum_of_absolute_differences([3, -7, 0, -15, 20, -1])))\n    print(\"Sum of absolute differences in all pairs of the given array: \" +\n          str(sum_of_absolute_differences([-3, 7, 0, 15, -20, 1])))\n    print(\"Sum of absolute differences in all pairs of the given array: \" +\n          str(sum_of_absolute_differences([-3, 7, 0, 15, -20, 1, 12])))\n\n\nif __name__ == \"__main__\":\n    main()",
      2.728515625
    ],
    [
      "from typing import List\n\n\ndef sum_abs_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*log(n))\n    \"\"\"\n    arr.sort()\n    length = len(arr)\n    sum_abs = 0\n    for i in range(length - 1):\n        sum_abs += abs(arr[i] - arr[i + 1])\n\n    return sum_abs\n\n\nif __name__ == \"__main__\":\n    assert sum_abs_diff([1, 2, 4, 8, 5]) == 8",
      2.7265625
    ],
    [
      "def sum_of_abs_diff(arr):\n    n = len(arr)\n    result = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            result += abs(arr[i] - arr[j])\n    return result\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5]\n    print(sum_of_abs_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      2.7265625
    ],
    [
      "from itertools import combinations\n\n\ndef absolute_difference(input_list: list) -> int:\n    \"\"\"\n    >>> absolute_difference([1, 2, 3, 4])\n    4\n    >>> absolute_difference([-1, 2, -3, 4])\n    10\n    >>> absolute_difference([-1, 2, 3, 4])\n    10\n    >>> absolute_difference([1, 2, -3, 4])\n    10\n    >>> absolute_difference([1, 2, 3, -4])\n    10\n    >>> absolute_difference([1, -2, 3, 4])\n    10\n    \"\"\"\n    sum_of_abs_diff = 0\n\n    for i in range(len(input_list)):\n        for j in range(i + 1, len(input_list)):\n            sum_of_abs_diff += abs(input_list[i] - input_list[j])\n\n    return sum_of_abs_diff\n\n\ndef absolute_difference_combination(input_list: list) -> int:\n    \"\"\"\n    >>> absolute_difference_combination([1, 2, 3, 4])\n    4\n    >>> absolute_difference_combination([-1, 2, -3, 4])\n    10\n    >>> absolute_difference_combination([-1, 2, 3, 4])\n    10\n    >>> absolute_difference_combination([1, 2, -3, 4])\n    10\n    >>> absolute_difference_combination([1, 2, 3, -4])\n    10\n    >>> absolute_difference_combination([1, -2, 3, 4])\n    10\n    \"\"\"\n    sum_of_abs_diff = 0\n\n    for i in range(len(input_list)):\n        for j in range(i + 1, len(input_list)):\n            sum_of_abs_diff += abs(input_list[i] - input_list[j])\n\n    return",
      2.63671875
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    \"\"\"\n    n = len(arr)\n    sum_ = 0\n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            sum_ += abs(arr[i] - arr[j])\n\n    return sum_\n\n\nif __name__ == \"__main__\":\n    assert sum_of_abs_diff([1, 2, 3, 4]) == 10",
      2.6328125
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    result: int = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([3, 2, 1]) == 6",
      2.458984375
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff(array: List) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    total = 0\n\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            total += abs(array[i] - array[j])\n\n    return total\n\n\nif __name__ == \"__main__\":\n    assert sum_of_abs_diff([1, 2, 3, 4, 5]) == 14",
      2.384765625
    ],
    [
      "def sum_of_abs_diff(arr):\n    sum_abs_diff = 0\n    for i in range(len(arr)):\n        for j in range(len(arr)):\n            if i!=j:\n                sum_abs_diff += abs(arr[i]-arr[j])\n    return sum_abs_diff\n\nif __name__ == '__main__':\n    arr = [3, 4, 6, 7, 10, 12, 13]\n    print(sum_of_abs_diff(arr))",
      2.302734375
    ],
    [
      "from typing import List\n\n\ndef absolute_diff(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n\n    result = 0\n\n    for i in range(len(array) - 1):\n        for j in range(i + 1, len(array)):\n            result += abs(array[i] - array[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    print(absolute_diff([1, 2, 3, 4, 5]))",
      2.205078125
    ],
    [
      "def sum_abs_diff(arr):\n    return sum([abs(x-y) for x in arr for y in arr if x != y])\n\n\"\"\"\nWrite a python program to find the maximum sum of contiguous subarray from a given array of numbers.\n\"\"\"\ndef max_sum_subarr(arr):\n    max_sum = 0\n    curr_sum = 0\n    for i in range(len(arr)):\n        curr_sum += arr[i]\n        max_sum = max(curr_sum, max_sum)\n        if curr_sum < 0:\n            curr_sum = 0\n    return max_sum\n\n\"\"\"\nWrite a python function to find the number of subarrays having their sum equal to 0.\n\"\"\"\ndef count_zero_sum_subarr(arr):\n    prefix_sum = [0]\n    for i in range(len(arr)):\n        prefix_sum.append(prefix_sum[-1] + arr[i])\n\n    count = 0\n    for i in range(len(prefix_sum)):\n        for j in range(i+1, len(prefix_sum)):\n            if prefix_sum[j] - prefix_sum[i] == 0:\n                count += 1\n    return count\n\n\"\"\"\nWrite a python program to find the maximum sum of contiguous subarray from a given array of numbers.\n\"\"\"\ndef max_sum_subarr(arr):\n    max_sum = arr[0]\n    curr_sum = arr[0]\n    for i in range(1, len(arr)):\n        curr_sum = max(curr_sum + arr[i], arr[i])\n        max_sum = max(max_sum, curr_sum)\n    return max_sum\n\n\"\"\"\nWrite a python function to find the maximum sum of contiguous subarray from a given array of numbers.\n\"\"\"\ndef max_sum_subarr(arr):\n    max_sum = arr[0]\n    curr_sum = arr[0]\n    for i in range(1, len(arr)):\n        curr_sum = max(curr_sum + arr[i], arr[i])\n        max",
      2.138671875
    ],
    [
      "def absolute_sum_pairs(arr):\n    arr.sort()\n    result = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            result += abs(arr[i] - arr[j])\n    return result\n\n\ndef main():\n    print(absolute_sum_pairs([1, 2, 2, 5, 2]))\n    print(absolute_sum_pairs([1, 3, 100, 4]))\n\n\nif __name__ == '__main__':\n    main()",
      2.12890625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_differences(numbers: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(n)\n    \"\"\"\n    total_sum = 0\n\n    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n            total_sum += abs(numbers[i] - numbers[j])\n\n    return total_sum\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_differences([-1, 3, 5, -3, 9, -2, 7]))",
      1.9931640625
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_differences(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    length = len(arr)\n\n    # sum of abs difference\n    sum_abs_diff = 0\n\n    # calculate all possible pairwise difference\n    for i in range(length):\n        for j in range(length):\n            # sum absolute difference of all pairwise difference\n            sum_abs_diff += abs(arr[i] - arr[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_abs_differences([1, 2, 3, 4, 5, 6]))",
      1.7041015625
    ],
    [
      "def sum_abs_diff(arr):\n    sum = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            sum += abs(arr[i] - arr[j])\n    return sum\n\n\narr = [3, 6, 7, 4, 3, 6, 8, 2]\nprint(sum_abs_diff(arr))",
      1.6669921875
    ],
    [
      "def absolute_difference(arr):\n    sum = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            sum += abs(arr[i] - arr[j])\n    return sum\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5]\n    result = absolute_difference(arr)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()",
      1.6357421875
    ],
    [
      "def absolute_difference(arr):\n    sum_abs_diff = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            sum_abs_diff += abs(arr[i] - arr[j])\n\n    return sum_abs_diff\n\n\ndef test_absolute_difference():\n    assert absolute_difference([1, 3, 2, 6, 10, 5]) == 17\n    assert absolute_difference([-1, -2, -3, -4, -5]) == 15\n    assert absolute_difference([-1, 2, -3, 4, -5]) == 10\n    assert absolute_difference([-1, -2, -3, -4, -5]) == 15",
      1.5537109375
    ],
    [
      "def sum_of_absolute_difference(array):\n    sum = 0\n    for i in range(len(array) - 1):\n        for j in range(i + 1, len(array)):\n            sum += abs(array[i] - array[j])\n    return sum\n\n\ndef main():\n    nums = [1, 2, 3, 4, 5, 6, 7, 8]\n    print(sum_of_absolute_difference(nums))\n\n\nif __name__ == \"__main__\":\n    main()",
      1.4833984375
    ],
    [
      "def sum_of_absolute_differences(arr):\n    sum = 0\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            sum += abs(arr[i] - arr[j])\n    return sum\n\n\ndef main():\n    arr = list(map(int, input(\"Enter an array: \").split()))\n    print(sum_of_absolute_differences(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      1.4091796875
    ],
    [
      "from itertools import combinations\n\n\ndef sum_of_absolute_difference(input_list):\n    result = 0\n    for i, j in combinations(input_list, 2):\n        result += abs(i - j)\n    return result\n\n\ndef test_function(test_case):\n    output = sum_of_absolute_difference(test_case[0])\n    if output == test_case[1]:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function([[1, 2, 3, 4], 10])\ntest_function([[1, 1, 1], 0])\ntest_function([[1, 2, 3], 6])",
      1.28125
    ],
    [
      "def sum_of_abs_diff(l):\n    result = 0\n    for i in range(len(l)):\n        for j in range(i+1, len(l)):\n            result += abs(l[i] - l[j])\n    return result\n\n\nprint(sum_of_abs_diff([1, 2, 3, 4, 5]))",
      1.2509765625
    ],
    [
      "def absolute_diff(array):\n    return sum(abs(array[i] - array[i+1]) for i in range(len(array)-1))\n\n\na = [1, 2, 3, 4, 5]\nprint(absolute_diff(a))",
      1.16015625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(numbers: List[int]) -> int:\n    \"\"\"\n    >>> sum_of_absolute_difference([1, 2, 3, 4, 5])\n    14\n    \"\"\"\n\n    if len(numbers) < 2:\n        raise ValueError(\"The array should have at least two elements\")\n\n    return sum(abs(a - b) for a in numbers for b in numbers if a != b) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.0556640625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*log(n))\n    Space Complexity: O(1)\n    \"\"\"\n    arr.sort()\n\n    total = 0\n\n    for i in range(len(arr) - 1):\n        total += abs(arr[i] - arr[i + 1])\n\n    return total\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([1, 2, 3, 4, 5, 6]) == 20\n    assert sum_of_absolute_difference([1, 1, 1, 1]) == 0\n    assert sum_of_absolute_difference([1, 2, 3, 4, 5, 6, 7]) == 28",
      0.982421875
    ],
    [
      "def absolute_difference(a):\n    a.sort()\n    sum = 0\n    for i in range(len(a) - 1):\n        sum += abs(a[i] - a[i + 1])\n    return sum\n\n\na = [1, 2, 3, 4, 5]\nprint(absolute_difference(a))",
      0.9111328125
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_differences(a: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    total = 0\n\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            total += abs(a[i] - a[j])\n\n    return total\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_differences([1, 2, 3, 4, 5]) == 14",
      0.8271484375
    ],
    [
      "from typing import List\n\n\ndef sum_absolute_diff(a: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    \"\"\"\n    total_sum = 0\n\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            total_sum += abs(a[i] - a[j])\n\n    return total_sum\n\n\nif __name__ == \"__main__\":\n    assert sum_absolute_diff([1, 2, 3, 4, 5]) == 14",
      0.82470703125
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*log(n))\n    \"\"\"\n    arr.sort()\n\n    total_sum: int = 0\n\n    for i in range(len(arr) - 1):\n        total_sum += abs(arr[i + 1] - arr[i])\n\n    return total_sum\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_difference([2, 7, 11, 15]))",
      0.66357421875
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(n)\n    \"\"\"\n    result = 0\n\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            result += abs(array[i] - array[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([1, 2, 3, 4]) == 10",
      0.57080078125
    ],
    [
      "def sum_of_absolute_difference(arr):\n    sum = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i + 1, n):\n            sum += abs(arr[i] - arr[j])\n\n    return sum\n\n\ndef main():\n    arr_input = [1, 2, 3, 4]\n    result = sum_of_absolute_difference(arr_input)\n    print(\"Sum of absolute difference: \", result)\n\n\nif __name__ == \"__main__\":\n    main()",
      0.52197265625
    ],
    [
      "from typing import List\n\n\ndef sum_abs_diff(arr: List) -> int:\n    \"\"\"\n    Time Complexity: O(n^2)\n    Space Complexity: O(1)\n    \"\"\"\n    n = len(arr)\n    diff = 0\n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            diff += abs(arr[i] - arr[j])\n\n    return diff\n\n\nif __name__ == \"__main__\":\n    assert sum_abs_diff([1, 2, 3, 4, 5]) == 14",
      0.52099609375
    ],
    [
      "def sum_abs_diff(arr):\n    sum = 0\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            sum += abs(arr[i] - arr[j])\n    return sum\n\n\ndef main():\n    arr = [1, 3, 2, 7, 10]\n    print(sum_abs_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.51416015625
    ],
    [
      "def sum_of_abs_diff(arr):\n    result = 0\n    for i in range(len(arr)):\n        for j in range(len(arr)):\n            result += abs(arr[i] - arr[j])\n    return result\n\n\ndef main():\n    arr = [1, 6, 4, 3, 2]\n    print(sum_of_abs_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.39453125
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff_pairs(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    \"\"\"\n    result = 0\n\n    for i in range(len(arr)):\n        for j in range(len(arr)):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    assert sum_of_abs_diff_pairs([1, 2, 3, 4]) == 20",
      0.28466796875
    ],
    [
      "def absolute_difference_pairs(arr):\n    result = []\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            result.append(abs(arr[i] - arr[j]))\n    return sum(result)\n\n\ndef main():\n    print(absolute_difference_pairs([1, 2, 3, 4]))\n    print(absolute_difference_pairs([1, 4, 0, 10]))\n\n\nif __name__ == '__main__':\n    main()",
      0.2464599609375
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff(arr: List) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_abs_diff = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            sum_abs_diff += abs(arr[i] - arr[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    assert sum_of_abs_diff([1, 2, 3, 4, 5]) == 14",
      0.1693115234375
    ],
    [
      "def sum_abs_diff(arr):\n    res = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            res += abs(arr[i] - arr[j])\n    return res\n\n\narr = [1, 2, 3, 4, 5]\nprint(sum_abs_diff(arr))",
      0.0980224609375
    ],
    [
      "from itertools import combinations\nfrom typing import List\n\n\n# Time complexity: O(n^2)\ndef sum_of_absolute_differences(array: List[int]) -> int:\n    \"\"\"Return the sum of absolute differences in all pairs of the given array.\n\n    >>> assert sum_of_absolute_differences([1, 2, 3, 4]) == 17\n    \"\"\"\n    return sum(abs(diff) for diff in combinations(array, 2))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.02838134765625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_diff(numbers: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*n)\n    Space Complexity: O(1)\n    \"\"\"\n    total = 0\n\n    for i in range(len(numbers)):\n        for j in range(len(numbers)):\n            total += abs(numbers[i] - numbers[j])\n\n    return total\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_diff([1, 2, 3, 4, 5, 6]) == 27",
      0.007442474365234375
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_diff_pairs(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n\n    total = 0\n\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            total += abs(nums[i] - nums[j])\n\n    return total\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_diff_pairs([1, 2, 3, 4, 5]))",
      -0.01247406005859375
    ],
    [
      "def sum_of_absolute_differences(array):\n    result = 0\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            result += abs(array[i] - array[j])\n    return result\n\nprint(sum_of_absolute_differences([1, 2, 3, 4, 5]))",
      -0.045257568359375
    ],
    [
      "def sum_abs_diff(l):\n    sum = 0\n    for i in range(len(l)):\n        for j in range(len(l)):\n            sum += abs(l[i] - l[j])\n\n    return sum\n\n\nprint(sum_abs_diff([1, 2, 3, 4, 5, 6, 7, 8]))",
      -0.07061767578125
    ],
    [
      "def sum_of_abs_diff(arr):\n    n = len(arr)\n    res = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            res += abs(arr[i] - arr[j])\n    return res\n\n\ndef main():\n    arr = [1, 2, 3, 4]\n    print(sum_of_abs_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.14453125
    ],
    [
      "def sum_of_abs_diff(arr):\n    arr.sort()\n    n = len(arr)\n    return sum(abs(arr[i] - arr[i + 1]) for i in range(n - 1))\n\n\ndef main():\n    print(\"The sum of absolute differences in all pairs of the given array is :\" +\n          str(sum_of_abs_diff([1, 2, 3, 4, 5])))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.145263671875
    ],
    [
      "def sum_abs_diff(arr):\n    # First sort the array\n    arr.sort()\n    # Initialize a variable to store the sum of absolute differences\n    sum_abs_diff = 0\n    # Iterate through all pairs of the array\n    for i in range(len(arr) - 1):\n        # Add the absolute difference to the sum\n        sum_abs_diff += abs(arr[i + 1] - arr[i])\n    return sum_abs_diff\n\n\nprint(sum_abs_diff([1, 3, 10, 5, 6, 3]))",
      -0.244384765625
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_abs_diff: int = 0\n\n    for i in range(len(nums)):\n        for j in range(i + 1, len(nums)):\n            sum_abs_diff += abs(nums[i] - nums[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    print(sum_of_abs_diff([1, 2, 3]))",
      -0.261962890625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_differences(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_abs_diff = 0\n    for i in range(1, len(array)):\n        sum_abs_diff += abs(array[i] - array[i - 1])\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_differences([1, 2, 3, 4, 5]) == 14",
      -0.317138671875
    ],
    [
      "def sum_abs_diff(arr):\n    arr.sort()\n    return sum([abs(arr[i] - arr[i - 1]) for i in range(1, len(arr))])\n\n\nprint(sum_abs_diff([1, 6, 2, 4, 5]))",
      -0.36572265625
    ],
    [
      "def sum_of_abs_diff(arr):\n    res = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            res += abs(arr[i] - arr[j])\n    return res\n\n\nprint(sum_of_abs_diff([1, 6, 9, 8]))\nprint(sum_of_abs_diff([1, 3, 7, 10]))\nprint(sum_of_abs_diff([2, 3, 4, 5, 6]))",
      -0.370361328125
    ],
    [
      "def sum_of_abs_diff(arr):\n    sum = 0\n    for i in range(len(arr)-1):\n        for j in range(i+1, len(arr)):\n            sum += abs(arr[i] - arr[j])\n    return sum\n\nprint(sum_of_abs_diff([1, 2, 3, 4]))\nprint(sum_of_abs_diff([2, 5, 7, 8]))\nprint(sum_of_abs_diff([1, 2, 3, 4, 5, 6]))",
      -0.488525390625
    ],
    [
      "def sum_of_absolute_differences(arr):\n    diff = 0\n    for i in range(len(arr)):\n        for j in range(len(arr)):\n            if i != j:\n                diff += abs(arr[i] - arr[j])\n    return diff\n\n\narr = [1, 2, 7, 8, 5]\nprint(sum_of_absolute_differences(arr))",
      -0.60693359375
    ],
    [
      "def sum_of_absolute_difference(arr):\n    result = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i+1, n):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\ndef main():\n    arr = [1, 2, 3, 4]\n    result = sum_of_absolute_difference(arr)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.61767578125
    ],
    [
      "def absolute_difference(array):\n    sum_abs_diff = 0\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            sum_abs_diff += abs(array[i] - array[j])\n\n    return sum_abs_diff\n\n\nprint(absolute_difference([1, 2, 3, 4, 5]))",
      -0.65185546875
    ],
    [
      "def sum_of_abs_diff(arr):\n    total = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            total += abs(arr[i] - arr[j])\n    return total\n\n\nprint(sum_of_abs_diff([1, 6, 2, 3, 4]))\nprint(sum_of_abs_diff([1, 6, 2, 3, 4, 5]))",
      -0.65380859375
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_differences(array: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    sum_abs_diff: int = 0\n\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            sum_abs_diff += abs(array[i] - array[j])\n\n    return sum_abs_diff\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_differences([1, 2, 3, 4, 5]) == 10\n    assert sum_of_absolute_differences([1, 2, 3, 4, 5, 6]) == 18",
      -0.7060546875
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(nlogn)\n    Space Complexity: O(1)\n    \"\"\"\n    arr.sort()\n\n    sum_of_absolute_difference = 0\n\n    for i in range(len(arr) - 1):\n        sum_of_absolute_difference += abs(arr[i + 1] - arr[i])\n\n    return sum_of_absolute_difference\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([1, 2, 3, 4, 5]) == 14",
      -0.78857421875
    ],
    [
      "from typing import List\n\n\ndef sum_of_abs_diff(arr: List) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    result = 0\n\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            result += abs(arr[i] - arr[j])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    print(sum_of_abs_diff([1, 2, 3, 4, 5]))",
      -0.85595703125
    ],
    [
      "def sum_of_absolute_differences(array):\n    return sum(abs(array[i] - array[i+1]) for i in range(len(array)-1))\n\n\ndef test_sum_of_absolute_differences():\n    assert sum_of_absolute_differences([1, 2, 3, 4]) == 9\n\n\nif __name__ == \"__main__\":\n    test_sum_of_absolute_differences()",
      -0.85595703125
    ],
    [
      "def sum_abs_diff(arr):\n    n = len(arr)\n    diff = []\n    for i in range(n-1):\n        for j in range(i+1, n):\n            diff.append(abs(arr[i] - arr[j]))\n    return sum(diff)\n\n\nprint(sum_abs_diff([1, 2, 3, 4, 5, 6, 7]))",
      -0.85693359375
    ],
    [
      "def sum_absolute_diff(array):\n    sum = 0\n    for i in range(len(array)):\n        for j in range(len(array)):\n            if i != j:\n                sum += abs(array[i] - array[j])\n    return sum\n\n\nprint(sum_absolute_diff([1,2,3,4,5,6]))",
      -0.85693359375
    ],
    [
      "def sum_abs_diff_pairs(arr):\n    sum_ = 0\n\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            sum_ += abs(arr[i] - arr[j])\n    return sum_\n\n\nprint(sum_abs_diff_pairs([1, 2, 3, 4, 5]))\nprint(sum_abs_diff_pairs([1, 1, 1, 1]))",
      -0.8583984375
    ],
    [
      "def sum_of_abs_diff(l):\n    n = len(l)\n    # using brute force\n    # for i in range(n-1):\n    #     for j in range(i+1, n):\n    #         if i != j:\n    #             print(abs(l[i]-l[j]), end=' ')\n    # brute force ends\n\n    # using combinations\n    from itertools import combinations\n    for i in combinations(l, 2):\n        print(abs(i[0]-i[1]), end=' ')\n\n\nl = [1, 2, 3, 4, 5, 6]\nsum_of_abs_diff(l)",
      -0.8583984375
    ],
    [
      "def absolute_difference_pairs(arr):\n    sum_of_pairs = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            sum_of_pairs += abs(arr[i] - arr[j])\n\n    return sum_of_pairs",
      -0.8583984375
    ],
    [
      "def sum_of_absolute_difference(arr):\n    sum = 0\n    n = len(arr)\n    for i in range(n):\n        for j in range(i+1, n):\n            sum += abs(arr[i]-arr[j])\n\n    return sum\n\n\nprint(sum_of_absolute_difference([1, 2, 3, 4, 5]))\nprint(sum_of_absolute_difference([1, 1, 1, 1]))\nprint(sum_of_absolute_difference([-2, 2, -2, 2]))",
      -0.8583984375
    ],
    [
      "def absolute_sums(arr):\n    return sum(abs(x - y) for x in arr for y in arr if x != y)\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = absolute_sums(test_input)\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function(([1, 2, 3, 4, 5], 10))\ntest_function(([1, 2, 3, 4, 5, 6], 21))\ntest_function(([1, 2, 3, 4, 5, 6, 7], 36))\ntest_function(([1, 2, 3, 4, 5, 6, 7, 8], 49))\ntest_function(([1, 2, 3, 4, 5, 6, 7, 8, 9], 64))\ntest_function(([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 81))",
      -0.92626953125
    ],
    [
      "def sum_of_abs_diff(arr):\n    arr.sort()\n    sum = 0\n    for i in range(len(arr)-1):\n        sum += (arr[i+1] - arr[i])\n    return sum\n\nprint(sum_of_abs_diff([1, 4, 6, 7, 2]))\nprint(sum_of_abs_diff([1, 2, 3, 4, 5, 6, 7, 8]))",
      -1.0517578125
    ],
    [
      "def absolute_difference(arr):\n    arr.sort()\n    n = len(arr)\n    total = 0\n    for i in range(n - 1):\n        total += (arr[i + 1] - arr[i])\n    return total\n\n\ndef main():\n    arr = [1, 5, 6, 8, 3]\n    print(absolute_difference(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.0537109375
    ],
    [
      "from typing import List\n\n\ndef sum_abs_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*log(n))\n    Space Complexity: O(1)\n    \"\"\"\n\n    arr.sort()\n\n    total = 0\n\n    for i in range(len(arr) - 1):\n        total += arr[i + 1] - arr[i]\n\n    return total\n\n\nif __name__ == \"__main__\":\n    assert sum_abs_diff([1, 5, 9, 11, 16]) == 22",
      -1.205078125
    ],
    [
      "from typing import List\n\n\ndef absolute_sum(arr: List) -> int:\n    sum = 0\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            sum += abs(arr[i] - arr[j])\n\n    return sum\n\n\ndef main():\n    print(absolute_sum([1, 2, 3, 4, 5]))\n    print(absolute_sum([1, 2, 3, 4, 5, 6, 7]))\n    print(absolute_sum([-1, -2, -3, -4, -5]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.3447265625
    ],
    [
      "def absolute_difference(array):\n    total = 0\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            total += abs(array[i] - array[j])\n    return total\n\n\ndef main():\n    print(absolute_difference([1, 2, 3, 4]))\n    print(absolute_difference([1, 2, 3, 4, 5]))\n    print(absolute_difference([1, 2, 3, 4, 5, 6]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.345703125
    ],
    [
      "from typing import List\n\n\ndef absolute_sum_pairs(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*log(n))\n    Space Complexity: O(1)\n    \"\"\"\n\n    arr.sort()\n    sum_absolute_difference = 0\n    for i in range(len(arr) - 1):\n        diff = arr[i + 1] - arr[i]\n        if diff > 0:\n            sum_absolute_difference += diff\n        else:\n            sum_absolute_difference += -diff\n\n    return sum_absolute_difference\n\n\nif __name__ == \"__main__\":\n    assert absolute_sum_pairs([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 24",
      -1.3857421875
    ],
    [
      "from typing import List\n\n\ndef absolute_difference_sum(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(nlogn)\n    \"\"\"\n    arr.sort()\n\n    result = 0\n    for i in range(len(arr) - 1):\n        result += (arr[i + 1] - arr[i])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    assert absolute_difference_sum([1, 2, 4, 8, 5]) == 16\n    assert absolute_difference_sum([5, 4, 3, 2, 1]) == 10",
      -1.390625
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    total_sum: int = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            total_sum += abs(arr[i] - arr[j])\n    return total_sum\n\n\nif __name__ == \"__main__\":\n    print(sum_of_absolute_difference([-5, 2, 3, -2, 1]))\n    print(sum_of_absolute_difference([1, 2, 3, 4, 5]))",
      -1.49609375
    ],
    [
      "def sum_abs_diff(array):\n    array.sort()\n    result = 0\n    for i in range(1, len(array)):\n        result += (array[i] - array[i-1])\n    return result\n\n\ndef main():\n    array = [1, 5, 4, 7, 9, 2]\n    print(sum_abs_diff(array))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.7001953125
    ],
    [
      "from typing import List\n\n\ndef sum_of_absolute_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n*log(n))\n    \"\"\"\n    arr.sort()\n    n = len(arr)\n    sum = 0\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            sum += abs(arr[i] - arr[j])\n\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert sum_of_absolute_difference([1, 4, 6, 9, 10]) == 54",
      -1.74609375
    ],
    [
      "def sum_of_abs_diff(arr):\n    arr.sort()\n    return sum([abs(arr[i] - arr[i+1]) for i in range(len(arr)-1)])\n\n\ndef main():\n    arr = [5, 6, 7, 8, 9]\n    print(\"Sum of absolute differences in all pairs of the given array:\")\n    print(sum_of_abs_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.822265625
    ],
    [
      "def sum_abs_diff(arr):\n    arr.sort()\n    return sum(abs(x-y) for x in arr for y in arr[arr.index(x)+1:])\n\n\ndef main():\n    print(sum_abs_diff([1, 5, 3, 6, 2, 7]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.162109375
    ],
    [
      "def sum_of_abs_diff(l):\n    return sum(abs(l[i]-l[j]) for i in range(len(l)) for j in range(i+1, len(l)))\n\n\ndef sum_of_abs_diff_eff(l):\n    return sum(abs(l[i]-l[j]) for i in range(len(l)) for j in range(i))\n\n\nif __name__ == '__main__':\n    l = [1, 2, 3, 4, 5, 6]\n    print(sum_of_abs_diff(l))\n    print(sum_of_abs_diff_eff(l))",
      -2.173828125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}