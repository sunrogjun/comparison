{
  "problem": {
    "task_id": "MBPP/145",
    "prompt": "Write a python function to find the maximum difference between any two elements in a given array.",
    "canonical_solution": "def max_Abs_Diff(arr,n): \r\n    minEle = arr[0] \r\n    maxEle = arr[0] \r\n    for i in range(1, n): \r\n        minEle = min(minEle,arr[i]) \r\n        maxEle = max(maxEle,arr[i]) \r\n    return (maxEle - minEle) ",
    "test_list": [
      "assert max_Abs_Diff((2,1,5,3),4) == 4",
      "assert max_Abs_Diff((9,3,2,5,1),5) == 8",
      "assert max_Abs_Diff((3,2,1),3) == 2"
    ],
    "challenge_test_list": [],
    "problem_id": 134
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def max_difference(arr):\n    if len(arr) < 2:\n        return 0\n\n    min_value = arr[0]\n    max_diff = 0\n\n    for i in range(1, len(arr)):\n        if arr[i] - min_value > max_diff:\n            max_diff = arr[i] - min_value\n\n        if arr[i] < min_value:\n            min_value = arr[i]\n\n    return max_diff\n\n\ndef main():\n    print(max_difference([10, 5, 2, 3, 7]))\n    print(max_difference([10, 5, 2, 3, 7, 1, 100, 100, 10]))\n\n\nif __name__ == '__main__':\n    main()",
      17.25
    ],
    [
      "def find_max_diff(array):\n    \"\"\"\n    >>> find_max_diff([2, 3, 10, 1, 4, 8, 1])\n    7\n    >>> find_max_diff([2, 9, 10, 1, 4, 8, 1])\n    7\n    >>> find_max_diff([1, 2, 3, 4, 5, 6, 7])\n    6\n    \"\"\"\n    max_diff = 0\n    for i in range(len(array) - 1):\n        if array[i + 1] - array[i] > max_diff:\n            max_diff = array[i + 1] - array[i]\n    return max_diff\n\n\ndef find_max_diff2(array):\n    \"\"\"\n    >>> find_max_diff2([2, 3, 10, 1, 4, 8, 1])\n    7\n    >>> find_max_diff2([2, 9, 10, 1, 4, 8, 1])\n    7\n    >>> find_max_diff2([1, 2, 3, 4, 5, 6, 7])\n    6\n    \"\"\"\n    max_diff = 0\n    min_val = array[0]\n    for i in range(len(array)):\n        if array[i] - min_val > max_diff:\n            max_diff = array[i] - min_val\n        if array[i] < min_val:\n            min_val = array[i]\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      15.4296875
    ],
    [
      "def max_difference(arr: list) -> int:\n    \"\"\"\n    >>> max_difference([1,2,3,4,5])\n    4\n    >>> max_difference([5,4,3,2,1])\n    4\n    >>> max_difference([1,2,3,4,1])\n    3\n    >>> max_difference([1,2,2,2,1])\n    1\n    >>> max_difference([-5,-6,-1,0,1,2,3,4,5,6,7])\n    7\n    \"\"\"\n    return max(arr) - min(arr)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      15.4296875
    ],
    [
      "def max_diff(nums):\n    \"\"\"\n    The function takes a list of integers as a parameter and returns the maximum difference between any two elements.\n    >>> max_diff([1,2,3,5,4,6,7,8,9,10])\n    8\n    >>> max_diff([1,2,3,5,6,7,8,9,10])\n    7\n    >>> max_diff([1,2,3,5,6,7,8,9])\n    7\n    >>> max_diff([1,2,3,5,6,7,8])\n    6\n    >>> max_diff([1,2,3,5,6,7])\n    5\n    >>> max_diff([1,2,3,5,6])\n    4\n    >>> max_diff([1,2,3,5])\n    3\n    >>> max_diff([1,2,3])\n    2\n    >>> max_diff([1,2])\n    1\n    >>> max_diff([1])\n    0\n    >>> max_diff([])\n    0\n    \"\"\"\n    if not nums:\n        return 0\n    return max(nums) - min(nums)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      13.234375
    ],
    [
      "def max_difference(arr):\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n\n    max_diff = 0\n    min_value = float(\"inf\")\n\n    for value in arr:\n        if value < min_value:\n            min_value = value\n\n        max_diff = max(max_diff, value - min_value)\n\n    return max_diff\n\n\ndef test_function(test_case):\n    arr = test_case[0]\n    solution = test_case[1]\n    output = max_difference(arr)\n\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\narr = [1, 6, 0, 10, 12, 2, 5]\nsolution = 12\ntest_case = [arr, solution]\ntest_function(test_case)\n\narr = [1, 5, 0, 10, 2, 3]\nsolution = 9\ntest_case = [arr, solution]\ntest_function(test_case)\n\narr = [1, 5, 0, 10, -12, -2, -5]\nsolution = 13\ntest_case = [arr, solution]\ntest_function(test_case)",
      11.640625
    ],
    [
      "from typing import List\n\n\ndef max_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    if len(arr) <= 1:\n        raise ValueError(\"Array must contain at least 2 elements\")\n\n    max_diff = 0\n    min_value = arr[0]\n\n    for i in range(1, len(arr)):\n        max_diff = max(max_diff, arr[i] - min_value)\n        min_value = min(min_value, arr[i])\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 2, 3, 4, 5, 6, 7]))",
      10.3828125
    ],
    [
      "from typing import List\n\n\ndef max_difference(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n\n    if len(arr) <= 1:\n        return 0\n\n    min_val = float(\"inf\")\n    max_diff = -1\n\n    for i in arr:\n        if i < min_val:\n            min_val = i\n        else:\n            max_diff = max(max_diff, i - min_val)\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    assert max_difference([1, 2, 3, 4, 5]) == 4\n    assert max_difference([1, 2, 3, 4, 5, 10]) == 9",
      10.0078125
    ],
    [
      "def max_diff(arr):\n    \"\"\"\n    A simple solution would be to sort the array and then find the max difference.\n    Time Complexity: O(nlogn)\n    Space Complexity: O(1)\n    \"\"\"\n    arr.sort()\n    return max(arr[i]-arr[i-1] for i in range(1,len(arr)))\n\ndef max_diff_2(arr):\n    \"\"\"\n    A better solution would be to create a variable to keep track of the current max diff.\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    curr_max_diff = 0\n    prev_elem = arr[0]\n    for elem in arr:\n        curr_max_diff = max(curr_max_diff, elem-prev_elem)\n        prev_elem = min(prev_elem, elem)\n    return curr_max_diff\n\n\nprint(max_diff([2,3,10,2,4,8,1]))\nprint(max_diff_2([2,3,10,2,4,8,1]))",
      8.09375
    ],
    [
      "def maximum_difference(input_list):\n    \"\"\"\n    Find the maximum difference between any two elements in a given array.\n\n    Args:\n       input_list(list): Input List\n    Returns:\n       (int): Maximum Difference\n    \"\"\"\n\n    if len(input_list) < 2:\n        return -1\n\n    max_diff = -1\n\n    for i in range(len(input_list) - 1):\n        for j in range(i + 1, len(input_list)):\n            max_diff = max(max_diff, abs(input_list[i] - input_list[j]))\n\n    return max_diff\n\n\ndef test_function(test_case):\n    output = maximum_difference(test_case[0])\n    if output == test_case[1]:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function([[1, 5, 2, 10], 9])\ntest_function([[1, 5, 2, 10, 11, 1], 10])\ntest_function([[], -1])\ntest_function([[-1], -1])\ntest_function([[1], -1])",
      6.65625
    ],
    [
      "def max_diff(l):\n    diff = 0\n    for i in range(len(l)):\n        for j in range(len(l)):\n            if abs(l[i] - l[j]) > diff:\n                diff = abs(l[i] - l[j])\n    return diff\n\n\nprint(max_diff([1, 2, 3, 4, 5]))\nprint(max_diff([1, 2, 3, 4, 5, 6]))\nprint(max_diff([5, 2, 3, 4, 5, 6]))\nprint(max_diff([5, 2, 3, 4, 5, 6, 1]))",
      6.65625
    ],
    [
      "def max_diff(arr):\n    \"\"\"\n    Time complexity: O(n).\n    Space complexity: O(1).\n    \"\"\"\n\n    max_diff = -float('inf')\n\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            max_diff = max(max_diff, abs(arr[i] - arr[j]))\n\n    return max_diff\n\n\ndef max_diff2(arr):\n    \"\"\"\n    Time complexity: O(n).\n    Space complexity: O(n).\n    \"\"\"\n\n    max_diff = -float('inf')\n    min_val = arr[0]\n\n    for i in range(1, len(arr)):\n        max_diff = max(max_diff, abs(min_val - arr[i]))\n        min_val = min(min_val, arr[i])\n\n    return max_diff\n\n\ndef main():\n\n    arr = [5, 10, 100, 3, 50, 30]\n    print(max_diff(arr))\n    print(max_diff2(arr))\n\n\nif __name__ == '__main__':\n    main()",
      6.1796875
    ],
    [
      "def max_difference(lst):\n    max_diff = 0\n    for i in range(0, len(lst)):\n        for j in range(i + 1, len(lst)):\n            if abs(lst[i] - lst[j]) > max_diff:\n                max_diff = abs(lst[i] - lst[j])\n    return max_diff\n\n\ndef main():\n    lst = [1, 10, 100, 1000]\n    lst = [1, 2, 3, 4, 5]\n    lst = [1, 4, 10, 100]\n    print(max_difference(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
      5.875
    ],
    [
      "from typing import List\n\n\ndef find_max_diff(input_list: List[int]) -> int:\n    \"\"\"\n    >>> find_max_diff([1, 2, 3])\n    2\n    >>> find_max_diff([1, 2, 3, 4, 5])\n    4\n    >>> find_max_diff([-1, 2, 3, 4, 5])\n    5\n    >>> find_max_diff([1, 2, -1, 4, 5])\n    5\n    >>> find_max_diff([1, 2, 3, 4, 1])\n    3\n    \"\"\"\n\n    input_list.sort()\n    max_diff = 0\n\n    for i in range(len(input_list) - 1):\n        if input_list[i + 1] - input_list[i] > max_diff:\n            max_diff = input_list[i + 1] - input_list[i]\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      5.3828125
    ],
    [
      "def max_diff(arr):\n    n = len(arr)\n    arr.sort()\n    diff = arr[1] - arr[0]\n    for i in range(1, n - 1):\n        if diff < arr[i + 1] - arr[i]:\n            diff = arr[i + 1] - arr[i]\n    return diff\n\n\ndef main():\n    arr = [2, 1, 3, 6, 4, 5]\n    print(\"Original array is :\", arr)\n    print(\"Max difference is :\", max_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      5.22265625
    ],
    [
      "def max_diff(arr):\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            diff = abs(arr[i] - arr[j])\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef test_function(test_case):\n    arr = test_case[0]\n    solution = test_case[1]\n    output = max_diff(arr)\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\narr = [1, 2, 1, 5, 3, 7, 8, 1]\nsolution = 6\ntest_case = [arr, solution]\ntest_function(test_case)\n\narr = [1, 2, 1, 5, 3, 7, 8, 1, 10]\nsolution = 9\ntest_case = [arr, solution]\ntest_function(test_case)",
      5.140625
    ],
    [
      "def max_diff(arr):\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    arr = list(map(int, input(\"Enter the array elements: \").split()))\n    print(max_diff(arr))",
      4.7578125
    ],
    [
      "def max_diff(arr: list) -> int:\n    \"\"\"\n    Time complexity: O(n)\n    Space complexity: O(1)\n    \"\"\"\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            max_diff = max(max_diff, abs(arr[i] - arr[j]))\n\n    return max_diff\n\n\nprint(max_diff([5, 10, 10, 5]))\nprint(max_diff([5, 10, 10, 10, 5]))",
      4.4375
    ],
    [
      "def max_diff(array):\n    # Write your code here.\n\tif len(array) == 0:\n\t\treturn None\n\tif len(array) == 1:\n\t\treturn 0\n\tif len(array) == 2:\n\t\treturn abs(array[0] - array[1])\n\tmax_diff = 0\n\tfor i in range(len(array)):\n\t\tfor j in range(len(array)):\n\t\t\tif i != j:\n\t\t\t\tdiff = abs(array[i] - array[j])\n\t\t\t\tif diff > max_diff:\n\t\t\t\t\tmax_diff = diff\n\treturn max_diff\n\n\narray = [1, 2, 3, 4, 5, 6, 7]\nmax_diff(array)",
      3.728515625
    ],
    [
      "def find_max_diff(arr):\n    min_num = arr[0]\n    max_diff = 0\n    for i in range(1, len(arr)):\n        max_diff = max(max_diff, arr[i] - min_num)\n        min_num = min(min_num, arr[i])\n    return max_diff\n\n\ndef main():\n    arr = [1, 6, 8, 3, 4, 8, 5]\n    print(\"Original array is : \" + str(arr))\n    print(\"Maximum difference between two elements is : \" + str(find_max_diff(arr)))\n\n\nif __name__ == '__main__':\n    main()",
      3.38671875
    ],
    [
      "def max_diff(arr):\n    min_val = arr[0]\n    max_diff = arr[1] - arr[0]\n\n    for i in range(1, len(arr)):\n        diff = arr[i] - min_val\n        if diff > max_diff:\n            max_diff = diff\n        if arr[i] < min_val:\n            min_val = arr[i]\n\n    return max_diff\n\n\ndef main():\n    print(max_diff([1, 2, 4, 7, 8, 5]))\n    print(max_diff([1, 2, 4, 5, 6]))\n\n\nif __name__ == \"__main__\":\n    main()",
      3.318359375
    ],
    [
      "from typing import List\n\n\ndef max_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    diff = 0\n    min_el = arr[0]\n\n    for el in arr:\n        diff = max(diff, el - min_el)\n        min_el = min(min_el, el)\n\n    return diff\n\n\nif __name__ == \"__main__\":\n    assert max_diff([1, 5, 2, 2, 4, 7, 10, 9, 4, 3]) == 7",
      3.00390625
    ],
    [
      "def max_diff(arr):\n    max_diff = -1\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\n\ndef main():\n    print(max_diff([1, 2, 3, 4, 5]))\n    print(max_diff([1, 2, 3, 4, 5, 6]))\n\n\nif __name__ == \"__main__\":\n    main()",
      2.88671875
    ],
    [
      "def max_diff(arr):\n    return max(arr) - min(arr)\n\n\ndef max_diff2(arr):\n    return max(arr) - min(arr[i + 1:] for i, _ in enumerate(arr))\n\n\ndef max_diff3(arr):\n    min_val = float('inf')\n    max_val = float('-inf')\n    for i in arr:\n        min_val = min(i, min_val)\n        max_val = max(i, max_val)\n    return max_val - min_val\n\n\ndef max_diff4(arr):\n    return max(a - min(arr) for a in arr)\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5]\n    assert max_diff(arr) == 4\n    assert max_diff2(arr) == 4\n    assert max_diff3(arr) == 4\n    assert max_diff4(arr) == 4\n\n    arr = [1, 2, 3, 4, 1, 2]\n    assert max_diff(arr) == 3\n    assert max_diff2(arr) == 3\n    assert max_diff3(arr) == 3\n    assert max_diff4(arr) == 3",
      2.53515625
    ],
    [
      "def maximum_difference(arr: list) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    min_value = float(\"inf\")\n    max_diff = float(\"-inf\")\n    for i in arr:\n        if i < min_value:\n            min_value = i\n        else:\n            max_diff = max(max_diff, i - min_value)\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(maximum_difference([1, 6, 8, 3, 5, 4, 2]))",
      2.35546875
    ],
    [
      "def maximum_difference(array):\n    \"\"\"\n    >>> maximum_difference([1, 3, 8, 6, 3, 5])\n    7\n    \"\"\"\n    # sort the array\n    array.sort()\n    # find the difference between the last and the first element\n    return array[-1] - array[0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      2.12890625
    ],
    [
      "def maximumDifference(a):\n    # Write your code here.\n\tmax_diff = abs(a[0] - a[1])\n\tfor i in range(len(a)-1):\n\t\tif abs(a[i] - a[i+1]) > max_diff:\n\t\t\tmax_diff = abs(a[i] - a[i+1])\n\treturn max_diff",
      1.4345703125
    ],
    [
      "def max_diff(arr):\n    n = len(arr)\n    if n < 2:\n        return None\n    arr.sort()\n    diff = arr[n-1] - arr[0]\n    for i in range(1, n-1):\n        if arr[i+1] - arr[i] > diff:\n            diff = arr[i+1] - arr[i]\n    return diff\n\n\nprint(max_diff([2, 4, 1, 7, 9]))\nprint(max_diff([1, 1, 1, 1]))\nprint(max_diff([5, 10, 10, 2, 7]))",
      1.4326171875
    ],
    [
      "def max_diff(arr):\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            diff = abs(arr[j] - arr[i])\n            if diff > max_diff:\n                max_diff = diff\n\n    return max_diff\n\n\nprint(max_diff([1, 2, 3, 4, 5]))\nprint(max_diff([1, 2, 3, 4, 5, 6]))\nprint(max_diff([1, 2, 3, 4, 5, 6, 7]))",
      1.365234375
    ],
    [
      "def find_max_diff(arr):\n    max_diff = -1\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\n\nprint(find_max_diff([10, 100, 1000, 10000, 100000]))",
      1.240234375
    ],
    [
      "def max_diff(arr):\n    if len(arr) < 2:\n        return 0\n    elif len(arr) == 2:\n        return abs(arr[0] - arr[1])\n    else:\n        max_diff = 0\n        for i in range(len(arr)-1):\n            max_diff = max(max_diff, abs(arr[i]-arr[i+1]))\n        return max_diff",
      1.11328125
    ],
    [
      "def max_diff(arr):\n    \"\"\"\n    Time complexity: O(n)\n    Space complexity: O(1)\n    \"\"\"\n    if not arr:\n        return None\n\n    max_diff = 0\n    min_val = arr[0]\n\n    for i in range(len(arr)):\n        max_diff = max(max_diff, arr[i] - min_val)\n        min_val = min(min_val, arr[i])\n\n    return max_diff",
      1.080078125
    ],
    [
      "def max_diff(l):\n    return max(l) - min(l)\n\ndef test_cases():\n    assert max_diff([1, 2, 3, 4, 5]) == 4\n    assert max_diff([1, 2, 3, 4, 10]) == 8\n    assert max_diff([1, 2, 3, 4, 100]) == 98\n    print(\"Test Success!\")\n\ntest_cases()",
      0.990234375
    ],
    [
      "def max_diff(arr):\n    return max(arr) - min(arr)\n\n\ndef max_diff2(arr):\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            diff = abs(arr[i] - arr[j])\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef max_diff3(arr):\n    arr.sort()\n    return max(arr[len(arr) - 1] - arr[0], arr[len(arr) - 1] - arr[len(arr) - 2])\n\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 4, 2, 5, 9, 3, 4]))\n    print(max_diff2([1, 4, 2, 5, 9, 3, 4]))\n    print(max_diff3([1, 4, 2, 5, 9, 3, 4]))",
      0.85107421875
    ],
    [
      "def maximumDifference(array):\n    min_val = array[0]\n    max_diff = 0\n    for i in array:\n        if i < min_val:\n            min_val = i\n        else:\n            if max_diff < i - min_val:\n                max_diff = i - min_val\n    return max_diff",
      0.82666015625
    ],
    [
      "def max_difference(arr):\n    \"\"\"\n    Find the maximum difference between any two elements in a given array.\n\n    Args:\n       arr(array): Input array\n    Returns:\n       int: Maximum difference\n    \"\"\"\n    if len(arr) == 0:\n        return None\n\n    max_diff = abs(arr[1] - arr[0])\n    min_el = arr[0]\n\n    for el in arr:\n        if el < min_el:\n            min_el = el\n        elif el - min_el > max_diff:\n            max_diff = el - min_el\n\n    return max_diff\n\n\ndef test_function(test_case):\n    arr = test_case[0]\n    solution = test_case[1]\n    output = max_difference(arr)\n\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function([[1, 6, 14, 4], 10])\ntest_function([[1, 5, 14, 18, 19], 8])\ntest_function([[1, 2, 3, 4], 0])\ntest_function([[5, 4, 3, 2, 1], 0])\ntest_function([[], None])\ntest_function([[1], None])\ntest_function([[1, 2], None])\ntest_function([[1, 2, 3], 2])",
      0.82470703125
    ],
    [
      "def max_difference(arr):\n    \"\"\"\n    This function takes a list as an argument and returns the maximum difference between any two elements in the list.\n    \"\"\"\n    arr.sort()\n    return arr[-1] - arr[0]\n\n# print(max_difference([1, 2, 3, 4, 5]))\n# print(max_difference([10, 15, 3, 7, 12, 23]))",
      0.76171875
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    max_diff = arr[1] - arr[0]\n    for i in range(len(arr) - 1):\n        if arr[i + 1] - arr[i] > max_diff:\n            max_diff = arr[i + 1] - arr[i]\n    return max_diff\n\n\ndef main():\n    arr = [int(i) for i in input(\"Enter the numbers: \").split()]\n    print(max_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.75146484375
    ],
    [
      "def max_diff(nums):\n    return max(nums) - min(nums)\n\n\ndef main():\n    print(max_diff([1, 2, 4, 7, 8]))\n    print(max_diff([1, 2, 4, 8]))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.73095703125
    ],
    [
      "def max_difference(arr):\n    max_diff = -1\n    for i in range(0, len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_difference([10, 3, 5, 6, 20, 18, 1]))",
      0.62255859375
    ],
    [
      "from typing import List\n\n\ndef max_diff(arr: List) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    if len(arr) < 2:\n        raise ValueError(\"Array should be of length atleast 2\")\n\n    max_diff = -float(\"inf\")\n\n    for i in range(len(arr) - 1):\n        max_diff = max(max_diff, arr[i + 1] - arr[i])\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 2, 3, 4, 5, 6]))\n    print(max_diff([1, 2, 3, 4, 5, 4, 3, 2, 1]))",
      0.6220703125
    ],
    [
      "from nose.tools import assert_equal\n\n\ndef max_diff(lst):\n    \"\"\"\n    >>> max_diff([1, 5, 3, 4, 6, 8, 10, 7])\n    7\n    \"\"\"\n    return max(abs(i - j) for i in lst for j in lst if i != j)\n\n\ndef max_diff2(lst):\n    \"\"\"\n    >>> max_diff2([1, 5, 3, 4, 6, 8, 10, 7])\n    7\n    \"\"\"\n    return max(lst[i] - lst[j] for i in range(len(lst)) for j in range(i))\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      0.61279296875
    ],
    [
      "def max_difference(nums):\n    diff = []\n    for i in range(0, len(nums)):\n        for j in range(i+1, len(nums)):\n            diff.append(abs(nums[i] - nums[j]))\n    return max(diff)\n\nnums = [1, 2, 3, 4, 5]\nprint(max_difference(nums))",
      0.609375
    ],
    [
      "def max_diff(arr):\n    if len(arr) <= 1:\n        return None\n\n    if len(arr) == 2:\n        return abs(arr[0] - arr[1])\n\n    arr.sort()\n    return max(arr[-1] - arr[1], arr[-2] - arr[2])\n\n\nprint(max_diff([1, 2, 3, 4, 5]))\nprint(max_diff([1, 2, 4, 7, 8]))",
      0.57861328125
    ],
    [
      "def max_diff(arr):\n    min_val = min(arr)\n    max_val = max(arr)\n    diff = max_val - min_val\n    return diff\n\n\ndef main():\n    print(max_diff([1, 2, 3, 4, 5]))\n    print(max_diff([1, 2, 3, 4, 5, 6, 7, 8]))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.53759765625
    ],
    [
      "def max_diff(arr):\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\n\na = [1, 2, 3, 4, 5, 6, 7, 8]\n\nprint(max_diff(a))\n\n# Time Complexity: O(n^2)\n# Space Complexity: O(1)",
      0.48974609375
    ],
    [
      "def find_max_diff(arr):\n    max_difference = arr[1] - arr[0]\n    min_element = arr[0]\n\n    for i in range(len(arr)):\n        if min_element > arr[i]:\n            min_element = arr[i]\n        if max_difference < arr[i] - min_element:\n            max_difference = arr[i] - min_element\n\n    return max_difference\n\n\ndef main():\n    arr = [int(i) for i in input(\"Enter a list of numbers: \").split()]\n    max_difference = find_max_diff(arr)\n    print(f\"Maximum difference between any two elements is {max_difference}\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.200439453125
    ],
    [
      "def maximumDifference(arr):\n    arr.sort()\n    maxDiff = arr[1] - arr[0]\n\n    for i in range(len(arr) - 1):\n        if arr[i + 1] - arr[i] > maxDiff:\n            maxDiff = arr[i + 1] - arr[i]\n\n    return maxDiff",
      0.1904296875
    ],
    [
      "def max_diff(arr: list) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    max_difference = 0\n\n    for i in range(len(arr) - 1):\n        if arr[i + 1] - arr[i] > max_difference:\n            max_difference = arr[i + 1] - arr[i]\n\n    return max_difference\n\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 2, 3, 4]))",
      0.05731201171875
    ],
    [
      "def maxDiff(arr):\n    arr.sort()\n    min = arr[0]\n    max = arr[-1]\n    return max - min\n\narr = list(map(int, input().split()))\nprint(maxDiff(arr))",
      0.0158538818359375
    ],
    [
      "def max_diff(arr):\n    return max([abs(i - j) for i in arr for j in arr])\n\n\nprint(max_diff([1, 10, 5]))\nprint(max_diff([1, 4, 9, 3, 20, 12, 4, 1, 10]))\nprint(max_diff([1, 2, 3, 4]))",
      -0.0338134765625
    ],
    [
      "def find_max_diff(array):\n    array.sort()\n    max_diff = 0\n    for i in range(len(array)-1):\n        if array[i+1] - array[i] > max_diff:\n            max_diff = array[i+1] - array[i]\n    return max_diff",
      -0.036865234375
    ],
    [
      "def maxDiff(arr):\n    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 0\n    else:\n        max_diff = abs(arr[0] - arr[1])\n        for i in range(len(arr) - 1):\n            diff = abs(arr[i] - arr[i + 1])\n            if diff > max_diff:\n                max_diff = diff\n        return max_diff\n\n\narr = [1, 2, 3, 4, 5]\nprint(maxDiff(arr))\n\narr = [1, 2, 4, 9, 12, 19, 39, 100]\nprint(maxDiff(arr))",
      -0.0670166015625
    ],
    [
      "def max_diff(nums):\n    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 0\n    else:\n        max_diff = abs(nums[0] - nums[1])\n        for i in range(len(nums) - 1):\n            if abs(nums[i] - nums[i + 1]) > max_diff:\n                max_diff = abs(nums[i] - nums[i + 1])\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    nums = [1, 5, 3, 7, 8, 10, 9, 11, 5]\n    print(max_diff(nums))",
      -0.08282470703125
    ],
    [
      "def max_diff(arr):\n    diff = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            diff = max(diff, abs(arr[i]-arr[j]))\n\n    return diff\n\n\nif __name__ == \"__main__\":\n    arr = [1, 4, 3, 6, 7, 10]\n    print(max_diff(arr))",
      -0.08966064453125
    ],
    [
      "def maximumDifference(a):\n    # Base case\n    if len(a) == 2:\n        return abs(a[0] - a[1])\n    \n    # Recursive case\n    else:\n        # Find the maximum difference between the first element and the rest of the array\n        maxDifference = maximumDifference(a[1:])\n\n        # Find the maximum difference between the first element and the last element\n        difference = abs(a[0] - a[-1])\n\n        # Return the maximum of the two\n        return max(maxDifference, difference)\n\nprint(maximumDifference([1, 2, 3, 4]))\nprint(maximumDifference([1, 2, 3, 4, 5]))\nprint(maximumDifference([1, 2, 3, 4, 5, 6]))",
      -0.2388916015625
    ],
    [
      "def max_diff(arr):\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            max_diff = max(max_diff, arr[j] - arr[i])\n    return max_diff\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5]\n    print(max_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.25732421875
    ],
    [
      "def maximum_difference(arr):\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    min_value = arr[0]\n    max_difference = 0\n\n    for i in range(1, len(arr)):\n        max_difference = max(max_difference, arr[i] - min_value)\n        min_value = min(min_value, arr[i])\n\n    return max_difference",
      -0.259765625
    ],
    [
      "def find_max_diff(arr):\n    if len(arr) < 2:\n        return -1\n    max_diff = -1\n    for i in range(len(arr)-1):\n        for j in range(i+1, len(arr)):\n            diff = abs(arr[i] - arr[j])\n            if diff > max_diff:\n                max_diff = diff\n    return max_diff\n\n\ndef main():\n    arr = [1, 5, 4, 8, 10, 12, 6, 13, 14]\n    print(find_max_diff(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.3037109375
    ],
    [
      "def max_diff(array):\n    # 1. Find the maximum value in the array\n    # 2. Find the minimum value in the array\n    # 3. Find the difference between the two\n\n    max_value = max(array)\n    min_value = min(array)\n    return max_value - min_value\n\n\narr = [1, 2, 3, 4, 5]\nprint(max_diff(arr))",
      -0.50439453125
    ],
    [
      "def max_difference(arr):\n    max_diff = 0\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            if abs(arr[i] - arr[j]) > max_diff:\n                max_diff = abs(arr[i] - arr[j])\n    return max_diff\n\n\narr = [1, 5, 7, 8, 9, 2, 1, 10]\nprint(max_difference(arr))",
      -0.54345703125
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    max_dif = arr[1] - arr[0]\n\n    for i in range(len(arr) - 1):\n        if arr[i + 1] - arr[i] > max_dif:\n            max_dif = arr[i + 1] - arr[i]\n\n    return max_dif",
      -0.59130859375
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    return arr[-1] - arr[0]\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 2, 3, 4, 5]))",
      -0.61865234375
    ],
    [
      "def maximum_difference(arr):\n    maximum = float('-inf')\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            diff = arr[j] - arr[i]\n            if diff > maximum:\n                maximum = diff\n    return maximum\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(maximum_difference(arr))",
      -0.73876953125
    ],
    [
      "def max_diff(arr):\n    diff = -1\n\n    for i in range(0, len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            if arr[j] - arr[i] > diff:\n                diff = arr[j] - arr[i]\n\n    return diff\n\ndef main():\n    print(max_diff([2, 3, 10, 7, 4, 8, 1, 5]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.75048828125
    ],
    [
      "def max_diff(arr):\n    max_val = -float(\"inf\")\n    min_val = float(\"inf\")\n    for i in arr:\n        if i > max_val:\n            max_val = i\n        if i < min_val:\n            min_val = i\n    return max_val - min_val",
      -0.85693359375
    ],
    [
      "def max_difference(arr):\n    max_diff = arr[1] - arr[0]\n    for i in range(len(arr) - 1):\n        if max_diff < arr[i + 1] - arr[i]:\n            max_diff = arr[i + 1] - arr[i]\n    return max_diff",
      -0.85693359375
    ],
    [
      "def max_diff(array):\n    return max(array) - min(array)\n\n\ndef main():\n    array = [2, 10, 4, 3, 1]\n    print(\"The maximum difference between any two elements in the array is: \", max_diff(array))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    return max(arr[i]-arr[i+1] for i in range(len(arr)-1))\n\nprint(max_diff([1, 3, 5, 2, 4]))\nprint(max_diff([1, 5, 10, 4, 2]))",
      -0.85693359375
    ],
    [
      "def max_diff(arr):\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 0\n\n    max_diff = -99999999999999\n\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    data = [1, 2, 3, 4, 5, 6]\n    print(max_diff(data))",
      -0.85693359375
    ],
    [
      "def maximum_difference(arr):\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    max_diff = 0\n    for i in range(len(arr)):\n        for j in range(i + 1, len(arr)):\n            max_diff = max(max_diff, abs(arr[i] - arr[j]))\n    return max_diff",
      -0.85693359375
    ],
    [
      "def max_difference(arr):\n    return max(arr) - min(arr)\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5]\n    print(max_difference(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def max_diff(a):\n    return max(abs(i - j) for i in a for j in a if i != j)\n\n\nprint(max_diff([1, 2, 4, 5, 7, 11, 12]))",
      -0.85693359375
    ],
    [
      "def maximumDifference(arr):\n    maximum = -float(\"inf\")\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            maximum = max(maximum, arr[j] - arr[i])\n    return maximum\n\n\nprint(maximumDifference([1, 5, 2, 10]))",
      -0.85693359375
    ],
    [
      "def max_diff(arr):\n    return max(arr) - min(arr)\n\n\nprint(max_diff([2, 1, 4, 5]))",
      -0.857421875
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    return arr[-1]-arr[0]\n\n\narr = [5, 10, 15, 20, 25, 30, 35, 40]\nprint(max_diff(arr))",
      -0.85791015625
    ],
    [
      "def max_diff(arr):\n    return max(arr) - min(arr)\n\n\nprint(max_diff([1, 2, 3, 4, 5, 6]))",
      -0.85791015625
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    return arr[-1] - arr[0]\n\n\nprint(max_diff([1, 10, 2, 9, 4, 8, 5]))",
      -0.85791015625
    ],
    [
      "def max_diff(arr):\n    if len(arr) < 2:\n        return 0\n    arr = sorted(arr)\n    return arr[-1] - arr[0]",
      -0.85791015625
    ],
    [
      "def max_diff(arr):\n    \"\"\"\n    :param arr: list - a list of integers\n    :return: int - Maximum difference between any two elements in the array.\n    \"\"\"\n    arr.sort()\n    return max(arr) - min(arr)",
      -0.86083984375
    ],
    [
      "def max_diff(arr):\n    max_diff = 0\n    for i in range(0, len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[j] - arr[i] > max_diff:\n                max_diff = arr[j] - arr[i]\n    return max_diff\n\na = [1, 2, 5, 6, 8, 3]\nprint(max_diff(a))",
      -0.86083984375
    ],
    [
      "def max_diff(arr):\n    max_diff = abs(arr[0]-arr[1])\n    for i in range(len(arr)):\n        for j in range(i+1,len(arr)):\n            if abs(arr[i]-arr[j]) > max_diff:\n                max_diff = abs(arr[i]-arr[j])\n    return max_diff\n\n\nprint(max_diff([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -0.86083984375
    ],
    [
      "def max_diff(arr):\n    return max(arr)-min(arr)",
      -0.86083984375
    ],
    [
      "def max_diff(nums):\n    max_diff = 0\n    for i in range(len(nums)):\n        for j in range(i+1, len(nums)):\n            max_diff = max(max_diff, abs(nums[i] - nums[j]))\n\n    return max_diff\n\n\ndef main():\n    nums = [1, 3, 8, 7, 5]\n    print(max_diff(nums))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.9560546875
    ],
    [
      "def max_diff(array: list) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    max_diff = 0\n    for i in range(len(array) - 1):\n        diff = abs(array[i] - array[i + 1])\n        if diff > max_diff:\n            max_diff = diff\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    assert max_diff([1, 2, 3, 4, 5]) == 4\n    assert max_diff([5, 4, 3, 2, 1]) == 4",
      -0.99462890625
    ],
    [
      "from typing import List\n\n\ndef max_diff(lst: List) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    if len(lst) < 2:\n        return None\n\n    max_diff = 0\n\n    for i in range(len(lst)):\n        for j in range(i + 1, len(lst)):\n            max_diff = max(max_diff, abs(lst[i] - lst[j]))\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    assert max_diff([1, 2, 3, 4]) == 3\n    assert max_diff([1, 2, 3, 4, 5, 6, 8]) == 7",
      -1.078125
    ],
    [
      "from typing import List\n\n\ndef max_diff(nums: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    max_diff = float(\"-inf\")\n\n    for i in range(len(nums) - 1):\n        max_diff = max(max_diff, nums[i + 1] - nums[i])\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 2, 3, 4, 5]))\n    print(max_diff([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -1.3408203125
    ],
    [
      "def max_diff(input_list):\n    max_diff = 0\n    for i in range(len(input_list) - 1):\n        if abs(input_list[i] - input_list[i + 1]) > max_diff:\n            max_diff = abs(input_list[i] - input_list[i + 1])\n\n    return max_diff\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5]\n    print(max_diff(list1))\n    list2 = [1, 2, 3, 4]\n    print(max_diff(list2))\n    list3 = [1, 2, 3, 4, 5, 100]\n    print(max_diff(list3))\n    list4 = [1, 2, 3, 4, 5, 100, 1000]\n    print(max_diff(list4))\n    list5 = [1, 1, 1, 1, 1, 1, 1]\n    print(max_diff(list5))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.361328125
    ],
    [
      "def max_diff(arr: list) -> int:\n    \"\"\"\n    >>> max_diff([1,2,3,4])\n    3\n    >>> max_diff([1,2,3,4,5])\n    4\n    \"\"\"\n    arr = sorted(arr)\n    return max(\n        arr[-1] - arr[0],\n        arr[-1] - arr[-2],\n        arr[-2] - arr[1],\n        arr[-2] - arr[0],\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.552734375
    ],
    [
      "def max_diff(arr):\n    arr.sort()\n    return max(arr[i] - arr[i+1] for i in range(len(arr)-1))\n\n\ndef main():\n    print(max_diff([1, 2, 3, 4, 5, 6]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.8251953125
    ],
    [
      "def max_diff(arr):\n    if len(arr) < 2:\n        return None\n    max_diff = abs(arr[0] - arr[1])\n    for i in range(len(arr) - 1):\n        if abs(arr[i] - arr[i + 1]) > max_diff:\n            max_diff = abs(arr[i] - arr[i + 1])\n    return max_diff\n\n\ndef main():\n    print(max_diff([1, 4, 2, 10, 3]))\n    print(max_diff([1, 10, 2, 9, 11]))\n    print(max_diff([1, 4, 2, 10, 3, 2, 1, 3]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.99609375
    ],
    [
      "def max_difference(l):\n    max_diff = abs(l[0] - l[1])\n    for i in range(len(l) - 1):\n        if l[i] - l[i + 1] > max_diff:\n            max_diff = l[i] - l[i + 1]\n    return max_diff\n\n\ndef main():\n    l = [1, 5, 4, 3, 8, 7, 6, 2, 9]\n    print(max_difference(l))\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.12890625
    ],
    [
      "def max_diff(arr):\n    return max(arr)-min(arr)\n\n\ndef test_function(test_case):\n    arr = test_case[0]\n    solution = test_case[1]\n    output = max_diff(arr)\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\narr = [1, 2, 3, 4, 5]\nsolution = 4\ntest_case = [arr, solution]\ntest_function(test_case)\n\narr = [1, 2, 3, 4, 5, 6]\nsolution = 5\ntest_case = [arr, solution]\ntest_function(test_case)",
      -2.16796875
    ],
    [
      "def max_diff(arr):\n    \"\"\"\n    >>> max_diff([1,2,3,4,5,6,7,8,9,10])\n    8\n    >>> max_diff([1,2,3,4,5,6,7,8,9])\n    8\n    >>> max_diff([1,2,3,4,5,6,7,8,10])\n    8\n    >>> max_diff([1,2,3,4,5,6,7,8,11])\n    8\n    \"\"\"\n    if len(arr) <= 1:\n        return 0\n\n    max_diff = 0\n    min_val = min(arr)\n    max_val = max(arr)\n    for i in range(len(arr)):\n        max_diff = max(max_diff, max_val - arr[i])\n        max_diff = max(max_diff, arr[i] - min_val)\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -2.24609375
    ],
    [
      "def max_diff(arr):\n    arr_sorted = sorted(arr)\n    max_diff = arr_sorted[-1] - arr_sorted[0]\n\n    for i in range(1, len(arr_sorted)):\n        diff = arr_sorted[i] - arr_sorted[i - 1]\n        if diff > max_diff:\n            max_diff = diff\n    return max_diff\n\n\nprint(max_diff([1, 5, 6, 8, 10, 3]))\nprint(max_diff([1, 100, 5, 6, 8, 10, 3]))\nprint(max_diff([1, 10, 5, 6, 8, 10, 3]))\nprint(max_diff([1, 100, 1000, 5, 6, 8, 10, 3]))\nprint(max_diff([1, 100, 1000, 10000, 5, 6, 8, 10, 3]))",
      -2.4609375
    ],
    [
      "def max_diff(arr):\n    if len(arr) < 2:\n        return 0\n\n    max_diff = 0\n    max_so_far = -1000\n\n    for num in arr:\n        if num > max_so_far:\n            max_so_far = num\n\n        max_diff = max(max_diff, num - max_so_far)\n\n    return max_diff\n\n\ndef main():\n    print(max_diff([1, 10, 3, 4, 9, 7, 10, 9]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.482421875
    ],
    [
      "def max_diff(arr):\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    arr.sort()\n    return max(arr[i] - arr[i-1] for i in range(1, len(arr)))\n\nif __name__ == \"__main__\":\n    print(max_diff([1, 3, 5, 6, 7, 8, 10, 20, 25]))",
      -2.8203125
    ],
    [
      "def max_diff(arr):\n    if len(arr) == 1:\n        return 0\n    elif len(arr) == 2:\n        return abs(arr[0] - arr[1])\n    else:\n        return max(max_diff(arr[1:]), abs(arr[0] - arr[len(arr)-1]), max_diff(arr[1:len(arr)-1]))\n\nprint(max_diff([1, 1000, 100, 900]))",
      -3.09765625
    ],
    [
      "def max_diff(arr):\n    diff = arr[0]\n    for i in range(1, len(arr)):\n        if abs(arr[i] - arr[i-1]) > diff:\n            diff = abs(arr[i] - arr[i-1])\n    return diff\n\n\ndef test_case(arr, solution, test_func):\n\n    output = test_func(arr)\n    if output == solution:\n        print(\"Passed\")\n    else:\n        print(f\"Failed, expected {solution}, got {output}\")\n\n\ntest_case([1, 2, 10, 20, 14], 8, max_diff)\ntest_case([1, 2, 10, 20, 14, 6], 18, max_diff)",
      -3.345703125
    ],
    [
      "from typing import List\n\n\ndef find_max_diff(arr: List[int]) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    max_diff = 0\n\n    for i in range(len(arr) - 1):\n        max_diff = max(max_diff, abs(arr[i] - arr[i + 1]))\n\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    assert find_max_diff([1, 2, 3, 4, 5]) == 4\n    assert find_max_diff([1, 1, 1, 1, 1]) == 0\n    assert find_max_diff([1, 2, 3, 4, 5, 6]) == 5",
      -3.689453125
    ],
    [
      "def max_diff(arr):\n    arr_sorted = sorted(arr)\n    max_diff = arr_sorted[-1] - arr_sorted[0]\n\n    for i in range(1, len(arr_sorted)):\n        if arr_sorted[i] - arr_sorted[i - 1] > max_diff:\n            max_diff = arr_sorted[i] - arr_sorted[i - 1]\n\n    return max_diff\n\n\nprint(max_diff([1, 2, 3, 4]))\nprint(max_diff([2, 1, 3, 4]))\nprint(max_diff([1, 2, 4, 3]))\nprint(max_diff([1, 2, 3, 5, 10]))",
      -4.3203125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}