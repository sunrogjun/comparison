{
  "problem": {
    "task_id": "MBPP/66",
    "prompt": "Write a python function to count positive numbers in a list.",
    "canonical_solution": "def pos_count(list):\r\n  pos_count= 0\r\n  for num in list: \r\n    if num >= 0: \r\n      pos_count += 1\r\n  return pos_count ",
    "test_list": [
      "assert pos_count([1,-2,3,-4]) == 2",
      "assert pos_count([3,4,5,-1]) == 3",
      "assert pos_count([1,2,3,4]) == 4"
    ],
    "challenge_test_list": [],
    "problem_id": 55
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def count_positive(nums: list) -> int:\n    \"\"\"\n    >>> count_positive([1, 2, 3, -4, -5])\n    3\n    \"\"\"\n    return sum(1 for num in nums if num > 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      22.796875
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    nums = [-1, -2, 0, 1, 2, 3]\n    print(f\"The number of positive numbers in {nums} is {count_positive(nums)}\")\n\n\nif __name__ == \"__main__\":\n    main()",
      21.046875
    ],
    [
      "def count_positive(numbers):\n    count = 0\n    for number in numbers:\n        if number > 0:\n            count += 1\n    return count\n\n\ndef test_count_positive():\n    numbers = [1, 2, 3, 4, 5]\n    assert count_positive(numbers) == 5\n\n    numbers = [-1, -2, -3, -4, -5]\n    assert count_positive(numbers) == 0\n\n    numbers = [1, -2, 3, -4, 5]\n    assert count_positive(numbers) == 3\n\n\nif __name__ == '__main__':\n    test_count_positive()",
      19.828125
    ],
    [
      "def count_positive(lst):\n    count = 0\n    for item in lst:\n        if item > 0:\n            count += 1\n    return count\n\n\ndef main():\n    lst = [1, 2, -1, 3, 4]\n    assert count_positive(lst) == 3\n    print(\"OK\")\n\n\nif __name__ == '__main__':\n    main()",
      19.359375
    ],
    [
      "def count_positive(lst):\n    cnt = 0\n    for i in lst:\n        if i > 0:\n            cnt += 1\n    return cnt\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, -10]\n    print(count_positive(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
      18.5625
    ],
    [
      "def count_positives(nums):\n    count = 0\n    for i in nums:\n        if i > 0:\n            count += 1\n    return count\n\n\ndef main():\n    nums = [1, 2, 3, 4, 5, 6, -1, -2]\n    print(count_positives(nums))\n\n\nif __name__ == \"__main__\":\n    main()",
      17.859375
    ],
    [
      "def count_positives(lst):\n    count = 0\n    for i in lst:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positives([1, 2, 3, -4, 5]))\nprint(count_positives([1, -2, 3, -4, 5]))\nprint(count_positives([-1, -2, -3, -4, -5]))",
      17.671875
    ],
    [
      "def count_positives(lst):\n    count = 0\n    for i in lst:\n        if i > 0:\n            count += 1\n    return count\n\nprint(count_positives([1,2,3,4,5]))\nprint(count_positives([1,-2,3,4,5]))\nprint(count_positives([-1,-2,-3,-4,-5]))",
      17.53125
    ],
    [
      "def count_positive(input_list):\n    return len([x for x in input_list if x > 0])\n\n\ndef main():\n    list1 = [-3, -4, 5, -10, 12, -1, 0, -2]\n    list2 = [-3, -4, -5, -10, -12, -1, 0, -2]\n    list3 = [3, 4, 5, 10, 12, 1, 0, 2]\n    print(\"Number of positive numbers in list1 is: \", count_positive(list1))\n    print(\"Number of positive numbers in list2 is: \", count_positive(list2))\n    print(\"Number of positive numbers in list3 is: \", count_positive(list3))\n\n\nif __name__ == \"__main__\":\n    main()",
      17.46875
    ],
    [
      "def count_positive_numbers(numbers):\n    count = 0\n    for i in numbers:\n        if i > 0:\n            count += 1\n    return count\n\n\ndef main():\n    print(count_positive_numbers([1, 2, 3, 4, 5, 6, -1, -2]))\n    print(count_positive_numbers([1, -2, 3, 4, -5, 6, 7, -8]))\n\n\nif __name__ == \"__main__\":\n    main()",
      16.515625
    ],
    [
      "def count_positives(lst):\n    count = 0\n    for num in lst:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef test_count_positives():\n    assert count_positives([1, 2, 3, -4, 5]) == 3\n    assert count_positives([1, -2, 3, -4, 5]) == 3\n    assert count_positives([-1, -2, -3, -4, -5]) == 0\n    assert count_positives([]) == 0\n    assert count_positives([-1]) == 0\n    assert count_positives([-1, 2]) == 1\n    assert count_positives([-1, 2, 3]) == 2\n\n\nif __name__ == \"__main__\":\n    test_count_positives()",
      16.375
    ],
    [
      "def positive_count(nums):\n    # init a counter\n    pos_count = 0\n\n    # iterate over the list\n    for num in nums:\n        # check if num is positive\n        if num > 0:\n            # increment the counter\n            pos_count += 1\n\n    # return the counter\n    return pos_count\n\nprint(positive_count([1, 2, 3, -4, 5]))",
      16.21875
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5]))",
      16.140625
    ],
    [
      "# Solution\n\ndef count_positive(nums):\n    \"\"\"\n    Counts the number of positive numbers in the list\n\n    Args:\n       nums(list): List of integers containing one or more 0's,\n       positive numbers and negative numbers\n    Returns:\n       int: Count of how many numbers are positive\n    \"\"\"\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\n# Test cases\nprint(count_positive([1, 2, 3, -4, 0, 6]))\nprint(count_positive([1, -2, 0, -4, 0, 6]))\nprint(count_positive([0, 0, 0, 0, 0]))",
      15.1875
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    nums = [1, -2, 3, -4, 5, -6, -7, 8, -9, -10]\n    print(count_positive(nums))\n\n\nif __name__ == \"__main__\":\n    main()",
      15.0390625
    ],
    [
      "def count_positive(list):\n    count = 0\n    for item in list:\n        if item > 0:\n            count = count + 1\n    return count\n\n\nlist = [1, 2, -1, 3, 4, 5, -6, -7, 8]\nprint(count_positive(list))",
      14.9921875
    ],
    [
      "def positive_numbers(numbers):\n    count = 0\n    for num in numbers:\n        if num > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    numbers = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, 11, 12, 13, 14, 15]\n    print(positive_numbers(numbers))",
      14.0625
    ],
    [
      "def positive_count(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    nums = [1, 2, 3, 4, 5, 6, -1, -2, -3, -4, -5, -6]\n    count = positive_count(nums)\n    print(f\"{count} positive numbers in the list.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      13.6328125
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for i in nums:\n        if i > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    nums = [-1, -2, -3, -4, -5]\n    print(count_positive(nums))\n    nums = [-1, -2, -3, -4, -5, 6, 7, 8, 9, 10]\n    print(count_positive(nums))",
      12.5546875
    ],
    [
      "# solution with lambda function\ndef count_positive(arr):\n    return len(list(filter(lambda x: x > 0, arr)))\n\n\n# solution with lambda function\ndef count_positive(arr):\n    return len([x for x in arr if x > 0])\n\n\n# solution with map\ndef count_positive(arr):\n    return len(list(map(lambda x: x > 0, arr)))\n\n\n# solution with list comprehension\ndef count_positive(arr):\n    return len([x for x in arr if x > 0])\n\n\n# solution with filter\ndef count_positive(arr):\n    return len(list(filter(lambda x: x > 0, arr)))",
      10.7734375
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, -1, -2, -3, -4, 5, -6]))",
      10.5
    ],
    [
      "def count_positive(l):\n    return sum(1 for i in l if i > 0)\n\nif __name__ == \"__main__\":\n    l = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]\n    print(count_positive(l))\n\n    l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(count_positive(l))\n\n    l = [1, -2, 3, -4, 5, -6, 7, -8, 9, -10]\n    print(count_positive(l))\n\n    l = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]\n    print(count_positive(l))",
      9.4296875
    ],
    [
      "def count_positive(numbers):\n    \"\"\"\n    Return the number of positive numbers in a list.\n\n    :param numbers: list of numbers\n    :return: number of positive numbers\n    \"\"\"\n    positive_count = 0\n\n    for number in numbers:\n        if number > 0:\n            positive_count += 1\n\n    return positive_count\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = count_positive(test_input)\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, 4, 5], 5))\ntest_function(([1, -2, 3, 4, -5], 3))\ntest_function(([1, -2, 3, -4, -5], 1))\ntest_function(([1, 2, 3, -4, 5, -6], 4))\ntest_function(([-1, -2, -3, -4, -5], 0))\ntest_function(([], 0))\ntest_function(([-1, -2, -3, -4, -5], 0))",
      9.328125
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef test_count_positive():\n    assert count_positive([1, 2, 3, -4, 5]) == 3\n    assert count_positive([1, -2, 3, 4, 5]) == 3\n    assert count_positive([-1, -2, -3, -4, -5]) == 0\n    assert count_positive([0, 0, 0, 0, 0]) == 0\n    assert count_positive([0, 1, 2, 3, 4]) == 5\n    assert count_positive([-1, -2, -3, -4, -5]) == 0\n    assert count_positive([1, 2, 3, 4, 5]) == 5\n    assert count_positive([-1, -2, -3, -4, -5]) == 0\n    assert count_positive([0, 0, 0, 0, 0]) == 0\n    assert count_positive([1, 2, 3, 4, 5]) == 5",
      8.65625
    ],
    [
      "def positive_number_count(numbers):\n    count = 0\n    for num in numbers:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(positive_number_count([1, -2, 3, 4, 5, -6, -7, -8, 9, 10]))",
      8.6015625
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    nums = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]\n    ans = count_positive(nums)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()",
      7.6171875
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([-1, -2, -3, -4, -5]))\nprint(count_positive([1, 2, 3, 4, 5]))\nprint(count_positive([1, -2, 3, -4, 5]))\nprint(count_positive([-1, -2, -3, -4, -5]))",
      6.3203125
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([3, 2, -1, 4, 5]))",
      6.19140625
    ],
    [
      "def count_positive(list1):\n    \"\"\"\n    >>> count_positive([1, 2, 3, -4, 5])\n    3\n    \"\"\"\n\n    return sum(1 for num in list1 if num > 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      6.07421875
    ],
    [
      "def count_positive(list_of_num):\n    count = 0\n    for i in list_of_num:\n        if i > 0:\n            count += 1\n    return count\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = count_positive(test_input)\n    if test_actual == test_expected:\n        return True\n    else:\n        return False\n\n\ntest_cases = [\n    ([1, 2, 3, -4, 5], 3),\n    ([-5, -6, -7, -8, -9], 0),\n    ([1, -2, 3, 4, -5], 3),\n    ([0, -1, 2, -3, 4], 2),\n    ([-1, -2, -3, -4, -5], 0),\n    ([5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5], 5),\n]\n\n\ndef test_cases():\n    for test_case in test_cases:\n        result = test_function(test_case)\n        if result is False:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    if test_cases():\n        print(\"All test cases passed\")\n    else:\n        print(\"At least one test cases failed\")",
      5.98828125
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, -4, 5]))\nprint(count_positive([-1, -2, -3, -4, -5]))",
      5.9140625
    ],
    [
      "def count_positive_numbers(lst):\n    count = 0\n    for i in lst:\n        if i > 0:\n            count += 1\n    return count\n\n\ndef main():\n    lst = [-1, -2, 0, 1, 2, 3]\n    print(\"List:\", lst)\n    print(\"Number of positive numbers in the list:\", count_positive_numbers(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
      5.8828125
    ],
    [
      "def count_positive(lst):\n    count = 0\n    for i in lst:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, 4, -5]))",
      5.3046875
    ],
    [
      "def count_positive(lst):\n    count = 0\n    for i in lst:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, -1, 0, 3]))",
      5.1796875
    ],
    [
      "def count_positive(list):\n    count = 0\n    for x in list:\n        if x > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, 4, -4, -3, 0]))",
      5.1640625
    ],
    [
      "def count_positive(numbers):\n    count = 0\n    for number in numbers:\n        if number > 0:\n            count += 1\n    return count\n\n\ndef test_count_positive():\n    numbers = [1, -2, 3, -4, 5, -6, 7]\n    assert count_positive(numbers) == 4",
      5.07421875
    ],
    [
      "def count_positive(lst):\n    count = 0\n    for i in lst:\n        if i >= 0:\n            count += 1\n    return count\n\nlst = [-1,-2,-3,-4,-5]\nprint(count_positive(lst))",
      4.984375
    ],
    [
      "def count_positive(nums):\n    positive = 0\n    for num in nums:\n        if num > 0:\n            positive += 1\n    return positive",
      4.80859375
    ],
    [
      "def count_positive(list_of_num):\n    count = 0\n    for num in list_of_num:\n        if num > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, -4, 5]))\nprint(count_positive([1, -2, 3, -4, 5]))\nprint(count_positive([-1, -2, -3, -4, -5]))",
      4.48828125
    ],
    [
      "def countPositiveNumbers(inputList):\n    positiveNumberCount = 0\n\n    for number in inputList:\n        if number > 0:\n            positiveNumberCount += 1\n\n    return positiveNumberCount",
      4.48828125
    ],
    [
      "def count_positive(numbers):\n    positive = 0\n    for number in numbers:\n        if number > 0:\n            positive += 1\n    return positive\n\n\nprint(count_positive([1, 2, 3, -4, 5]))",
      4.40234375
    ],
    [
      "def count_positive(list_of_number):\n    count = 0\n    for i in list_of_number:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, -2, 3, 4, 5, -6, -7]))",
      4.15625
    ],
    [
      "def count_positive(list_of_numbers):\n    count = 0\n    for number in list_of_numbers:\n        if number > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, -4, 5, -6, 7, -8, 9, -10]))",
      3.708984375
    ],
    [
      "def positive_count(input_list):\n    pos_count = 0\n    for i in input_list:\n        if i > 0:\n            pos_count += 1\n    return pos_count\n\nprint(positive_count([1,2,3,4,-4]))",
      3.677734375
    ],
    [
      "def positive_count(nums):\n    positive_count = 0\n    for num in nums:\n        if num > 0:\n            positive_count += 1\n    return positive_count\n\nif __name__ == '__main__':\n    print(positive_count([1, 2, 3, -4, 5]))",
      3.55078125
    ],
    [
      "def count_positive(mylist):\n    \"\"\"\n    Counts the number of positive integers in a list.\n\n    Parameters:\n    mylist (list): A list of integers.\n\n    Returns:\n    int: The number of positive integers in the list.\n    \"\"\"\n    return sum(1 for x in mylist if x > 0)",
      3.40625
    ],
    [
      "def positive_numbers(list1):\n    count = 0\n    for i in list1:\n        if i > 0:\n            count += 1\n    return count\n\nprint(positive_numbers([3, 2, 4, 6, 7, 10, 5, 2]))",
      3.228515625
    ],
    [
      "def count_positive(numbers):\n    count = 0\n    for i in numbers:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
      3.208984375
    ],
    [
      "def count_positive(list_of_nums):\n    positive_count = 0\n    for num in list_of_nums:\n        if num > 0:\n            positive_count += 1\n    return positive_count\n\n\nprint(count_positive([1, -2, 3, 1]))\nprint(count_positive([-1, 2, -3, 1]))\nprint(count_positive([0, 0, 0, 0]))",
      3.1953125
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    print(count_positive([1, 2, 3, -4, 5]))\n    print(count_positive([-1, -2, -3, -4, -5]))\n    print(count_positive([1, -2, 0, 0, 3]))\n\n\nif __name__ == \"__main__\":\n    main()",
      3.16796875
    ],
    [
      "def countPositiveNumbers(numbers):\n    count = 0\n    for number in numbers:\n        if number > 0:\n            count += 1\n\n    return count\n\n\nprint(countPositiveNumbers([1, -2, 3, -4, 5]))",
      3.09765625
    ],
    [
      "def count_positives(arr):\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n    return count\n\nprint(count_positives([1,2,3,4,5,6,7,8,9,-10]))",
      3.029296875
    ],
    [
      "def count_positive(input_list):\n    count = 0\n    for num in input_list:\n        if num > 0:\n            count += 1\n    return count\n\n\ninput_list = [-1, -2, -3, -4, -5]\nprint(count_positive(input_list))",
      2.98828125
    ],
    [
      "def count_positive(numbers):\n    count = 0\n    for num in numbers:\n        if num > 0:\n            count += 1\n    return count\n\n\nnumbers = [-5, -1, 0, 3, 10, 12]\nprint(\"Number of positive numbers in the list: \", count_positive(numbers))",
      2.96484375
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    nums = [-1, -2, 0, 1, 2, 3]\n    print(count_positive(nums))\n\n\nif __name__ == \"__main__\":\n    main()",
      2.8984375
    ],
    [
      "def count_positive_numbers(list):\n    return len([x for x in list if x > 0])\n\nif __name__ == '__main__':\n    print(count_positive_numbers([1, 2, 3, -4, 5]))",
      2.44140625
    ],
    [
      "def positive_count(input_list):\n    count = 0\n    for i in input_list:\n        if i > 0:\n            count += 1\n    return count\n\n\ninput_list = [-1, -2, 0, 1, 2, 3]\nprint(positive_count(input_list))",
      2.42578125
    ],
    [
      "def count_positive(a):\n    pos = 0\n    for i in a:\n        if i > 0:\n            pos += 1\n    return pos\n\n\na = [-1, 2, -3, 4, 5, -6, 7, -8, 9]\nprint(count_positive(a))",
      2.26953125
    ],
    [
      "def count_positive_numbers(list):\n    counter = 0\n    for num in list:\n        if num > 0:\n            counter += 1\n    return counter\n\n\n\nif __name__ == \"__main__\":\n    print(count_positive_numbers([1, 2, 3, -4, 5, -6]))\n    print(count_positive_numbers([1, -2, 3, 4, 5, -6]))\n    print(count_positive_numbers([-1, -2, -3, -4, -5, -6]))\n    print(count_positive_numbers([]))\n    print(count_positive_numbers([-1, -2, -3, -4, -5, -6]))",
      2.052734375
    ],
    [
      "def count_positive(list_of_number):\n    count = 0\n    for num in list_of_number:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef main():\n    list_of_number = [-1, 2, 3, 4, 5, 6, -8]\n    count = count_positive(list_of_number)\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()",
      2.00390625
    ],
    [
      "def positive_count(list_of_numbers):\n    positive_numbers = 0\n    for number in list_of_numbers:\n        if number > 0:\n            positive_numbers += 1\n    return positive_numbers\n\n\nprint(positive_count([1, 2, 3, -4, 5, 6, -7]))",
      1.685546875
    ],
    [
      "def positive_numbers(arr):\n    count = 0\n    for i in arr:\n        if i >= 0:\n            count += 1\n    return count\n\n\narr = [-1, -2, -3, -4, -5, -6]\nprint(positive_numbers(arr))",
      1.662109375
    ],
    [
      "def count_positive_numbers(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = count_positive_numbers(test_input)\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 0, -4, 5], 2))\ntest_function(([1, -2, 0, -4, 5], 1))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function(([1, 2, 3, -4, 5], 3))\ntest_function((",
      1.5830078125
    ],
    [
      "def countPositive(input_list):\n    count = 0\n    for i in input_list:\n        if i > 0:\n            count += 1\n    return count\n\nprint(countPositive([1,-2,3,-4,5]))",
      1.5673828125
    ],
    [
      "def positive_number(list):\n    positive = 0\n    for i in list:\n        if i > 0:\n            positive += 1\n    return positive\n\nprint(positive_number([1, 2, 3, -4, 5, -6]))",
      1.5537109375
    ],
    [
      "def count_positive(input_list):\n    count = 0\n    for i in input_list:\n        if i > 0:\n            count += 1\n    return count\n\ndef main():\n    print(count_positive([1,2,3,4,5,-1]))\n\nif __name__ == '__main__':\n    main()",
      1.5380859375
    ],
    [
      "def count_positive(list1):\n    count = 0\n    for i in list1:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positive([1, -2, 3, 4, -5]))\nprint(count_positive([1, 2, 3, 4, 5]))",
      1.5341796875
    ],
    [
      "def positive_numbers(nums):\n    positive = 0\n    for n in nums:\n        if n > 0:\n            positive += 1\n    return positive\n\n\nnums = [1, 2, 3, -4, 5, 6, -7, 8, 9]\nprint(positive_numbers(nums))",
      1.3876953125
    ],
    [
      "def count_positive(numbers):\n    count = 0\n    for number in numbers:\n        if number > 0:\n            count += 1\n    return count\n\n\ndef main():\n    list = [1, 2, 3, 4, 5, -5, 6, -6, -7, 8, 9, -9, -10]\n    count = count_positive(list)\n    print(f\"There are {count} positive numbers in the list\")\n\n\nif __name__ == \"__main__\":\n    main()",
      1.302734375
    ],
    [
      "def count_positive(list_of_nums):\n    \"\"\"\n    Return the number of positive numbers in a list\n    >>> count_positive([1, 2, 3, -4, -5])\n    3\n    \"\"\"\n    # initialize a counter\n    counter = 0\n    # iterate through the list\n    for num in list_of_nums:\n        # check if the number is positive\n        if num > 0:\n            # if the number is positive, increment the counter\n            counter += 1\n    # return the counter\n    return counter\n\n\ndef main():\n    print(count_positive([1, 2, 3, -4, -5]))\n\n\nif __name__ == \"__main__\":\n    main()",
      1.302734375
    ],
    [
      "def count_positive(nums: list) -> int:\n    \"\"\"\n    >>> count_positive([1, 2, 3, -4, 5])\n    3\n    >>> count_positive([-1, -2, -3, -4, -5])\n    0\n    >>> count_positive([0, 0, 0, 0, 0])\n    0\n    >>> count_positive([-1, 0, 1, 2, 3, 4])\n    5\n    \"\"\"\n    return sum(1 for num in nums if num > 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.0146484375
    ],
    [
      "def positive_numbers(numbers):\n    count = 0\n    for num in numbers:\n        if num > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(positive_numbers([1,2,3,-4,5]))",
      0.97900390625
    ],
    [
      "def count_positive(input_list):\n    return len([num for num in input_list if num > 0])",
      0.9091796875
    ],
    [
      "def count_positives(list):\n    positive = 0\n    for num in list:\n        if num > 0:\n            positive += 1\n    return positive\n\nprint(count_positives([1,2,3,4,-5]))",
      0.53662109375
    ],
    [
      "def count_positive(nums):\n    return len(list(filter(lambda x: x > 0, nums)))\n\n\ndef main():\n    nums = [-1, -2, -3, -4, -5]\n    print(f\"The number of positive numbers in the list are {count_positive(nums)}\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.411865234375
    ],
    [
      "def count_positive_numbers(numbers: list) -> int:\n    \"\"\"\n    >>> count_positive_numbers([1, 2, 3, 4, 5])\n    5\n    \"\"\"\n    count = 0\n    for num in numbers:\n        if num >= 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.259033203125
    ],
    [
      "def count_positive(list):\n    counter = 0\n    for i in list:\n        if i > 0:\n            counter += 1\n    return counter\n\nif __name__ == \"__main__\":\n    list = [1, 2, 3, -4, 5, -6, -7, 8, -9, -10]\n    print(count_positive(list))",
      0.188232421875
    ],
    [
      "def count_positive(input_list):\n    return sum(1 for num in input_list if num > 0)\n\n\ninput_list = [-1, 2, 0, 3, 4, -1, 5, 6, -1, -1, -1, 7, 8, 9, -1]\nprint(\"Input list: \", input_list)\nprint(\"Positive numbers in the list: \", count_positive(input_list))",
      0.059173583984375
    ],
    [
      "def count_positive(list):\n    positive = 0\n    for x in list:\n        if x > 0:\n            positive += 1\n    return positive\n\nif __name__ == '__main__':\n    print(count_positive([1, 2, -3, 4, 5]))\n    print(count_positive([1, -2, -3, -4, -5]))\n    print(count_positive([0, 0, 0, 0, 0]))",
      -0.038421630859375
    ],
    [
      "def positive_count(numbers):\n    positive = 0\n    for num in numbers:\n        if num >= 0:\n            positive += 1\n    return positive",
      -0.040008544921875
    ],
    [
      "def count_positive_numbers(list):\n    count = 0\n    for i in list:\n        if i > 0:\n            count += 1\n    return count\n\n\nprint(count_positive_numbers([1, 2, 3, -4, 5, -6]))",
      -0.65283203125
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count",
      -0.65380859375
    ],
    [
      "def positive_numbers(arr):\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n    return count\n\narr = [-2, 1, 2, 3, -1, 4, -5, 6, 7]\nprint(positive_numbers(arr))",
      -0.85693359375
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count",
      -0.85693359375
    ],
    [
      "def count_positive(nums):\n    positive = 0\n    for num in nums:\n        if num > 0:\n            positive += 1\n    return positive\n\nprint(count_positive([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -0.85791015625
    ],
    [
      "def positive_num(num_list):\n    return sum(1 for i in num_list if i > 0)\n\n\ndef main():\n    print(positive_num([1, 2, 3, -4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def positive_num(arr):\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n    return count\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5, 6, -1, -2, -3, -4, -5, -6]\n    print(positive_num(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def count_positive(nums):\n    return len([i for i in nums if i > 0])\n\n\ndef main():\n    print(count_positive([-1, -2, -3, -4, -5]))\n    print(count_positive([1, 2, 3, 4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def count_positive_nums(nums: list) -> int:\n    \"\"\"\n    >>> count_positive_nums([1, 2, 3, -4, 5])\n    3\n    \"\"\"\n    return sum(1 for i in nums if i > 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "def positive_numbers(numbers):\n    count = 0\n    for i in numbers:\n        if i > 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    numbers = [-1, 0, 1, 2, 3]\n    print(positive_numbers(numbers))",
      -0.8583984375
    ],
    [
      "def count_positive(numbers: list) -> int:\n    \"\"\"\n    >>> count_positive([1, 2, 3, -4, 5])\n    3\n    \"\"\"\n    return sum(1 for x in numbers if x > 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "def count_positive(numbers):\n    count = 0\n    for number in numbers:\n        if number > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    numbers = [-1, -3, 0, 4, 5]\n    print(count_positive(numbers))",
      -0.8583984375
    ],
    [
      "def count_positives(lst):\n    count = 0\n    for i in lst:\n        if i > 0:\n            count += 1\n    return count\n\nlst = [-1, -2, -3, -4, -5, -6]\nprint(count_positives(lst))",
      -0.86083984375
    ],
    [
      "def count_positive(nums):\n    return len(list(filter(lambda x: x > 0, nums)))\n\n\nif __name__ == \"__main__\":\n    nums = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]\n    print(count_positive(nums))",
      -0.86083984375
    ],
    [
      "def count_positive_numbers(numbers):\n    count = 0\n    for number in numbers:\n        if number > 0:\n            count += 1\n    return count\n\n\ndef main():\n    numbers = [-1, -2, -3, -4, -5]\n    assert count_positive_numbers(numbers) == 0\n    numbers = [1, 2, 3, 4, 5]\n    assert count_positive_numbers(numbers) == 5\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.86083984375
    ],
    [
      "def count_positive(lst):\n    return len([num for num in lst if num > 0])\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5]\n    print(count_positive(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.88671875
    ],
    [
      "def count_positive(nums):\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    return count",
      -0.921875
    ],
    [
      "def positive_numbers(my_list):\n    positive_count = 0\n    for num in my_list:\n        if num > 0:\n            positive_count += 1\n    return positive_count\n\nif __name__ == '__main__':\n    my_list = [-1, -2, -3, -4, 5, 6, 7, 8, 9, 10]\n    print(positive_numbers(my_list))",
      -0.98779296875
    ],
    [
      "def countPositive(list):\n    positive = 0\n    for x in list:\n        if x > 0:\n            positive += 1\n    return positive\n\nprint(countPositive([1,2,3,-4,5]))",
      -1.4306640625
    ],
    [
      "def count_positive(input_list):\n    return len(list(filter(lambda x: x > 0, input_list)))\n\n\ndef test_function(test_case):\n    output = count_positive(test_case)\n    if output == 6:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_case = [1, 2, 3, -4, 5, -1, 6, 7, -8, 9, -10]\ntest_function(test_case)",
      -1.4951171875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}