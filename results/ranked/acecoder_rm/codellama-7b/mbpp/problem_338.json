{
  "problem": {
    "task_id": "MBPP/349",
    "prompt": "Write a python function to check whether the given string is a binary string or not.",
    "canonical_solution": "def check(string) :\r\n    p = set(string) \r\n    s = {'0', '1'} \r\n    if s == p or p == {'0'} or p == {'1'}: \r\n        return (\"Yes\") \r\n    else : \r\n        return (\"No\") ",
    "test_list": [
      "assert check(\"01010101010\") == \"Yes\"",
      "assert check(\"name0\") == \"No\"",
      "assert check(\"101\") == \"Yes\""
    ],
    "challenge_test_list": [],
    "problem_id": 338
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def is_binary_string(s):\n    for c in s:\n        if c not in (\"0\", \"1\"):\n            return False\n    return True\n\n\ndef main():\n    s = input(\"Enter a string: \")\n    if is_binary_string(s):\n        print(\"Yes, the string is a binary string.\")\n    else:\n        print(\"No, the string is not a binary string.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      19.828125
    ],
    [
      "def is_binary(string):\n    for i in string:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\ndef main():\n    str = input(\"Enter a string: \")\n    if is_binary(str):\n        print(\"It is a binary string\")\n    else:\n        print(\"It is not a binary string\")\n\n\nif __name__ == \"__main__\":\n    main()",
      17.359375
    ],
    [
      "def is_binary_string(str1: str) -> bool:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n\n    for char in str1:\n        if char != \"0\" and char != \"1\":\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    print(is_binary_string(\"1010011\"))\n    print(is_binary_string(\"0101\"))\n    print(is_binary_string(\"0102\"))",
      14.6328125
    ],
    [
      "def is_binary(input_str):\n    for char in input_str:\n        if char != '0' and char != '1':\n            return False\n    return True\n\n\nprint(is_binary(\"1011011\"))\nprint(is_binary(\"1011012\"))",
      12.296875
    ],
    [
      "def is_binary(string):\n    for i in string:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\n\ndef main():\n    str1 = \"101010\"\n    str2 = \"101011\"\n    str3 = \"1010101\"\n    str4 = \"10101010\"\n    str5 = \"101010101\"\n    str6 = \"1010101010\"\n    str7 = \"10101010101\"\n    str8 = \"101010101010\"\n    str9 = \"1010101010101\"\n    str10 = \"10101010101010\"\n\n    print(is_binary(str1))\n    print(is_binary(str2))\n    print(is_binary(str3))\n    print(is_binary(str4))\n    print(is_binary(str5))\n    print(is_binary(str6))\n    print(is_binary(str7))\n    print(is_binary(str8))\n    print(is_binary(str9))\n    print(is_binary(str10))\n\n\nif __name__ == \"__main__\":\n    main()",
      11.984375
    ],
    [
      "def checkBinary(input_str):\n    for i in input_str:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\ndef main():\n    str1 = input(\"Enter string: \")\n    if checkBinary(str1):\n        print(\"The given string is a binary string.\")\n    else:\n        print(\"The given string is not a binary string.\")\n\nif __name__ == \"__main__\":\n    main()",
      11.46875
    ],
    [
      "def is_binary(string):\n    for i in string:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    print(is_binary(\"110101101011\"))\n    print(is_binary(\"1101011010111\"))",
      11.2578125
    ],
    [
      "def is_binary_string(test_str):\n    for char in test_str:\n        if char != '0' and char != '1':\n            return False\n    return True\n\n\nprint(is_binary_string('10101'))\nprint(is_binary_string('101010101010'))\nprint(is_binary_string('10101010101010'))\nprint(is_binary_string('101010101010101'))\nprint(is_binary_string('1010101010101010'))\nprint(is_binary_string('10101010101010101'))\nprint(is_binary_string('101010101010101010'))\nprint(is_binary_string('1010101010101010101'))\nprint(is_binary_string('10101010101010101010'))\nprint(is_binary_string('101010101010101010101'))\nprint(is_binary_string('1010101010101010101010'))\nprint(is_binary_string('10101010101010101010101'))\nprint(is_binary_string('101010101010101010101010'))\nprint(is_binary_string('1010101010101010101010101'))\nprint(is_binary_string('10101010101010101010101010'))\nprint(is_binary_string('101010101010101010101010101'))",
      10.953125
    ],
    [
      "def is_binary(input_str):\n    for char in input_str:\n        if char not in [\"0\", \"1\"]:\n            return False\n    return True\n\n\ndef main():\n    result = is_binary(\"1010\")\n    print(result)\n    result = is_binary(\"10101010101010\")\n    print(result)\n    result = is_binary(\"101010101010101\")\n    print(result)\n    result = is_binary(\"01010101010101\")\n    print(result)\n    result = is_binary(\"010101010101010\")\n    print(result)\n    result = is_binary(\"1010101010101010\")\n    print(result)\n    result = is_binary(\"123456789\")\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()",
      10.484375
    ],
    [
      "def is_binary(str1):\n    for i in str1:\n        if i != '0' and i != '1':\n            return False\n    return True\n\nprint(is_binary(\"010101\"))\nprint(is_binary(\"1010101\"))\nprint(is_binary(\"0101011\"))",
      9.234375
    ],
    [
      "def check_binary(string: str) -> bool:\n    \"\"\"\n    Check whether the given string is a binary string or not.\n    >>> check_binary(\"1010\")\n    True\n    >>> check_binary(\"101\")\n    False\n    >>> check_binary(\"10110\")\n    False\n    >>> check_binary(\"101101101101\")\n    True\n    >>> check_binary(\"10110110110101\")\n    False\n    >>> check_binary(\"1011011011010\")\n    True\n    >>> check_binary(\"11001101100101\")\n    False\n    >>> check_binary(\"1011011011010\")\n    True\n    \"\"\"\n    for s in string:\n        if s not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      7.87890625
    ],
    [
      "def is_binary(input_string):\n    for i in input_string:\n        if i == \"1\" or i == \"0\":\n            continue\n        else:\n            return False\n    return True\n\nprint(is_binary(\"1010\"))\nprint(is_binary(\"10101110111101001100110011011010101101010101000110110101101010101010110101010100011011010110101010101101010101000110110101101010101011010101010\"))",
      6.3046875
    ],
    [
      "def is_binary(str):\n    for i in str:\n        if i!='0' and i!='1':\n            return False\n    return True\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n\n    if is_binary(string):\n        print(\"{} is a binary string\".format(string))\n    else:\n        print(\"{} is not a binary string\".format(string))",
      5.9453125
    ],
    [
      "def is_binary_string(input_string):\n    for i in input_string:\n        if i != '0' and i != '1':\n            return False\n    return True\n\nif __name__ == '__main__':\n    input_string = input()\n    result = is_binary_string(input_string)\n    print(result)",
      5.49609375
    ],
    [
      "def is_binary_string(string):\n    for i in string:\n        if i not in \"01\":\n            return False\n    return True\n\n\nprint(is_binary_string(\"101000110001011011100111011010111010101111011010101110110111001101001011101001100101110101101011110100110110101110111011010111010110111011010111101101110110111011101011011101011101101101110101101110101101101011101110110101110101110110110111011010111010111011011011101011011101011011010111011101101011101011101101101110110101110101110110110111011010111010111011011011101101011101011101101101110110101110101110110110111011010111010111011011011101101011101011101101101",
      5.2578125
    ],
    [
      "def is_binary(input_str):\n    for char in input_str:\n        if char != '0' and char != '1':\n            return False\n    return True\n\n\ninput_str = input()\nif is_binary(input_str):\n    print(\"The string is a binary string\")\nelse:\n    print(\"The string is not a binary string\")",
      4.40625
    ],
    [
      "def is_binary_string(input_str: str) -> bool:\n    \"\"\"\n    :param input_str: string to check\n    :return: True if string is a binary string, False otherwise\n    \"\"\"\n    if not input_str:\n        return False\n    for char in input_str:\n        if char not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert is_binary_string(\"101\") is True\n    assert is_binary_string(\"1010101\") is True\n    assert is_binary_string(\"1010\") is True\n    assert is_binary_string(\"101010\") is True\n    assert is_binary_string(\"0\") is True\n    assert is_binary_string(\"1\") is True\n    assert is_binary_string(\"00\") is True\n    assert is_binary_string(\"01\") is True\n    assert is_binary_string(\"10\") is True\n    assert is_binary_string(\"0101\") is True\n    assert is_binary_string(\"10101\") is True\n    assert is_binary_string(\"0000\") is True\n    assert is_binary_string(\"0001\") is True\n    assert is_binary_string(\"0010\") is True\n    assert is_binary_string(\"0011\") is True\n    assert is_binary_string(\"0100\") is True\n    assert is_binary_string(\"0101\") is True\n    assert is_binary_string(\"0110\") is True\n    assert is_binary_string(\"0111\") is True\n    assert is_binary_string(\"1000\") is True\n    assert is_binary_string(\"1001\") is True\n    assert is_binary_string(\"1010\") is True\n    assert is_binary_string(\"1011\") is True\n    assert is_binary_string(\"1100\") is True\n    assert is_binary_string(\"1101\") is True\n    assert is_binary_string(\"1110\")",
      3.927734375
    ],
    [
      "def is_binary_string(string):\n    for i in string:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nprint(is_binary_string(\"10101\"))\nprint(is_binary_string(\"abc\"))",
      3.896484375
    ],
    [
      "def is_binary_string(input_str):\n    for char in input_str:\n        if char != \"0\" and char != \"1\":\n            return False\n    return True\n\nprint(is_binary_string(\"1010101010\"))\nprint(is_binary_string(\"01011010101\"))\nprint(is_binary_string(\"010110101011\"))\nprint(is_binary_string(\"0101101010111\"))",
      3.8359375
    ],
    [
      "def is_binary_string(input_str):\n    for char in input_str:\n        if char not in (\"0\", \"1\"):\n            return False\n    return True\n\n\ndef main():\n    result = is_binary_string(\"10100111\")\n    print(\"Binary String\" if result else \"Not Binary String\")\n    result = is_binary_string(\"1010011a\")\n    print(\"Binary String\" if result else \"Not Binary String\")\n\n\nif __name__ == \"__main__\":\n    main()",
      3.830078125
    ],
    [
      "def isBinary(str):\n\tfor i in str:\n\t\tif i!=\"0\" and i!=\"1\":\n\t\t\treturn False\n\treturn True\nprint(isBinary(\"101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
      3.357421875
    ],
    [
      "def is_binary_string(string):\n    for i in string:\n        if i not in ('0', '1'):\n            return False\n    return True\n\nprint(is_binary_string('011101'))\nprint(is_binary_string('11101'))\nprint(is_binary_string('1110111011101'))\nprint(is_binary_string('11101110111011101'))",
      3.205078125
    ],
    [
      "def is_binary(string):\n    for c in string:\n        if c not in (\"0\", \"1\"):\n            return False\n    return True\n\n\ndef main():\n    str_input = input(\"Enter the string: \")\n    if is_binary(str_input):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      2.87890625
    ],
    [
      "def is_binary_string(input_str):\n    for char in input_str:\n        if char not in \"01\":\n            return False\n    return True\n\n\nprint(is_binary_string(\"10101\"))\nprint(is_binary_string(\"10101010\"))\nprint(is_binary_string(\"10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
      2.693359375
    ],
    [
      "def is_binary(input_str):\n    for i in input_str:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\nprint(is_binary(\"1010\"))\nprint(is_binary(\"0000\"))\nprint(is_binary(\"10110\"))\nprint(is_binary(\"00010000\"))\nprint(is_binary(\"00010001\"))\nprint(is_binary(\"10100101\"))\nprint(is_binary(\"10101010110101010110101010101\"))",
      2.673828125
    ],
    [
      "def check_binary_string(input_str: str) -> bool:\n    \"\"\"\n    >>> check_binary_string(\"110011\")\n    True\n    >>> check_binary_string(\"111111\")\n    True\n    >>> check_binary_string(\"000000\")\n    True\n    >>> check_binary_string(\"100001\")\n    False\n    >>> check_binary_string(\"010001\")\n    False\n    >>> check_binary_string(\"100001\")\n    False\n    >>> check_binary_string(\"010001\")\n    False\n    \"\"\"\n    if input_str[0] in (\"0\", \"1\"):\n        return all(digit in (\"0\", \"1\") for digit in input_str)\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      2.58203125
    ],
    [
      "def is_binary(str):\n    return all(c in \"01\" for c in str)\n\nprint(is_binary(\"101010101010101011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
      2.55078125
    ],
    [
      "def is_binary_string(string):\n    for i in string:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\nprint(is_binary_string(\"101010101010\"))\nprint(is_binary_string(\"abcde\"))",
      2.439453125
    ],
    [
      "def isBinaryString(input_str):\n    for i in input_str:\n        if i not in \"01\":\n            return False\n    return True\n\nprint(isBinaryString(\"10101\"))\nprint(isBinaryString(\"1010101\"))\nprint(isBinaryString(\"10101010\"))\nprint(isBinaryString(\"1111111111111111\"))\nprint(isBinaryString(\"0000000000000000\"))\nprint(isBinaryString(\"101010101010101\"))\nprint(isBinaryString(\"1010101010101010\"))\nprint(isBinaryString(\"10101010101010101\"))\nprint(isBinaryString(\"101010101010101010\"))\nprint(isBinaryString(\"1010101010101010101\"))\nprint(isBinaryString(\"10101010101010101010\"))\nprint(isBinaryString(\"101010101010101010101\"))\nprint(isBinaryString(\"1010101010101010101010\"))\nprint(isBinaryString(\"10101010101010101010101\"))\nprint(isBinaryString(\"101010101010101010101010\"))\nprint(isBinaryString(\"1010101010101010101010101\"))\nprint(isBinaryString(\"10101010101010101010101010\"))\nprint(isBinaryString(\"101010101010101010101010101\"))\nprint(isBinaryString",
      2.1171875
    ],
    [
      "def check_binary(str):\n    for i in str:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\nprint(check_binary(\"1010\"))\nprint(check_binary(\"10101011\"))\nprint(check_binary(\"10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
      1.5869140625
    ],
    [
      "def is_binary_string(strg: str) -> bool:\n    \"\"\"Return True if the given string is a binary string.\n\n    Args:\n        strg (str): The string to check.\n\n    Examples:\n        >>> assert is_binary_string('11010')\n        >>> assert not is_binary_string('abcdefg')\n    \"\"\"\n    return all(char in \"01\" for char in strg)\n\n\ndef is_binary_string_alt(strg: str) -> bool:\n    \"\"\"Return True if the given string is a binary string.\n\n    Args:\n        strg (str): The string to check.\n\n    Examples:\n        >>> assert is_binary_string_alt('11010')\n        >>> assert not is_binary_string_alt('abcdefg')\n    \"\"\"\n    return strg.isascii() and strg.isalnum() and all(char in \"01\" for char in strg)\n\n\ndef is_binary_string_alt_1(strg: str) -> bool:\n    \"\"\"Return True if the given string is a binary string.\n\n    Args:\n        strg (str): The string to check.\n\n    Examples:\n        >>> assert is_binary_string_alt_1('11010')\n        >>> assert not is_binary_string_alt_1('abcdefg')\n    \"\"\"\n    return strg.isascii() and strg.isalnum() and all(\n        int(char) in (0, 1) for char in strg\n    )\n\n\nif __name__ == \"__main__\":\n    print(is_binary_string(\"11010\"))\n    print(is_binary_string(\"abcdefg\"))",
      1.431640625
    ],
    [
      "def check_binary(str1):\n    for i in str1:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\nstr1 = \"10101\"\nprint(check_binary(str1))",
      1.318359375
    ],
    [
      "def binary_check(input_str):\n    for i in input_str:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\n\ndef main():\n    print(binary_check(\"1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",
      0.97314453125
    ],
    [
      "def check_binary(input_string: str) -> bool:\n    \"\"\"\n    >>> check_binary(\"0110101\")\n    True\n    >>> check_binary(\"11110101\")\n    True\n    >>> check_binary(\"10011010\")\n    False\n    >>> check_binary(\"01110101\")\n    False\n    >>> check_binary(\"11010101\")\n    False\n    \"\"\"\n    for character in input_string:\n        if character not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.9033203125
    ],
    [
      "def is_binary(input_str):\n    for char in input_str:\n        if char not in (\"0\", \"1\"):\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    input_str = input(\"Enter a string: \")\n    if is_binary(input_str):\n        print(\"Given string is a binary string\")\n    else:\n        print(\"Given string is not a binary string\")",
      0.80908203125
    ],
    [
      "def is_binary(input_string):\n    for i in input_string:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\nprint(is_binary('0101'))\nprint(is_binary('0102'))\nprint(is_binary('0112'))\nprint(is_binary('1111'))",
      0.439208984375
    ],
    [
      "def is_binary(string):\n    for i in string:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    if is_binary(string):\n        print(\"Yes, it is a binary string.\")\n    else:\n        print(\"No, it is not a binary string.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.4365234375
    ],
    [
      "def check_binary(s: str) -> bool:\n    \"\"\"\n    Return True if the given string is a binary string,\n    else return False.\n    >>> check_binary(\"1010\")\n    True\n    >>> check_binary(\"10101\")\n    True\n    >>> check_binary(\"101010\")\n    True\n    >>> check_binary(\"1010101\")\n    True\n    >>> check_binary(\"10101010\")\n    True\n    >>> check_binary(\"101010101\")\n    True\n    >>> check_binary(\"1010101010\")\n    True\n    >>> check_binary(\"10101010101\")\n    True\n    >>> check_binary(\"101010101010\")\n    True\n    >>> check_binary(\"1010101010101\")\n    True\n    >>> check_binary(\"10101010101010\")\n    True\n    >>> check_binary(\"101010101010101\")\n    True\n    >>> check_binary(\"1010101010101010\")\n    True\n    >>> check_binary(\"10101010101010101\")\n    True\n    >>> check_binary(\"101010101010101010\")\n    True\n    >>> check_binary(\"1010101010101010101\")\n    True\n    >>> check_binary(\"10101010101010101010\")\n    True\n    >>> check_binary(\"101010101010101010101\")\n    True\n    >>> check_binary(\"1010101010101010101010\")\n    True\n    >>> check_binary(\"1010101010101",
      0.306640625
    ],
    [
      "def check_binary(input_str):\n    for i in input_str:\n        if i not in \"01\":\n            return False\n    return True\n\n\ndef main():\n    str1 = \"101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
      0.226318359375
    ],
    [
      "def is_binary(s):\n    for i in s:\n        if i not in '01':\n            return False\n    return True",
      0.09881591796875
    ],
    [
      "def binary(str1):\n    if str1 == '':\n        return True\n    else:\n        return str1.isdigit() and int(str1) in [0,1]\n\nprint(binary('0101'))\nprint(binary('0000'))\nprint(binary('1010'))\nprint(binary('1011'))\nprint(binary('0001'))",
      0.0178985595703125
    ],
    [
      "def isBinaryString(input_string):\n    for i in input_string:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\nprint(isBinaryString(\"10101\"))\nprint(isBinaryString(\"00110\"))",
      -0.149169921875
    ],
    [
      "def isBinary(s):\n    for i in s:\n        if i not in \"01\":\n            return False\n    return True\nprint(isBinary(\"0110\"))\nprint(isBinary(\"1110\"))\nprint(isBinary(\"11101\"))",
      -0.1937255859375
    ],
    [
      "def is_binary(s):\n    return s in [\"0\", \"1\"]\n\n\nif __name__ == \"__main__\":\n    s = \"01010101\"\n    print(is_binary(s))",
      -0.33154296875
    ],
    [
      "def is_binary(input_str):\n    for i in input_str:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\nprint(is_binary(\"10101\"))\nprint(is_binary(\"11010\"))\nprint(is_binary(\"1010G\"))",
      -0.453857421875
    ],
    [
      "def check_binary(input_str):\n    for i in input_str:\n        if i not in ['0','1']:\n            return False\n    return True\n\nprint(check_binary('10101110110011'))\nprint(check_binary('101011101100111'))",
      -0.6396484375
    ],
    [
      "def check_binary(string):\n    if string.isdigit():\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    print(check_binary(input()))",
      -0.85693359375
    ],
    [
      "def is_binary(str1):\n    for i in str1:\n        if i != '0' and i != '1':\n            return False\n    return True\n\n\nprint(is_binary('101010101'))\nprint(is_binary('1010101010'))",
      -0.85693359375
    ],
    [
      "def is_binary_string(s):\n    for i in s:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\nprint(is_binary_string(\"1111\"))\nprint(is_binary_string(\"11111111\"))\nprint(is_binary_string(\"01010101010101010101010101010101\"))\nprint(is_binary_string(\"010101010101010101010101010101011\"))",
      -0.85693359375
    ],
    [
      "def is_binary(s):\n    for c in s:\n        if c not in \"01\":\n            return False\n    return True\n\nprint(is_binary(\"10101\"))\nprint(is_binary(\"10102\"))",
      -0.85693359375
    ],
    [
      "def is_binary(input_string):\n    for char in input_string:\n        if char != '0' and char != '1':\n            return False\n    return True\n\nprint(is_binary('0110'))\nprint(is_binary('0121'))",
      -0.85693359375
    ],
    [
      "def isBinaryString(str):\n    for char in str:\n        if char != '0' and char != '1':\n            return False\n    return True\n\n\nprint(isBinaryString('101011001'))\nprint(isBinaryString('10101100111'))\nprint(isBinaryString('111'))\nprint(isBinaryString('10101100111111'))",
      -0.85693359375
    ],
    [
      "def is_binary(strg):\n    for i in strg:\n        if i not in \"01\":\n            return False\n    return True\n\n\ndef main():\n    strg = \"01001010111011101\"\n    print(\"Is the string binary?\")\n    print(is_binary(strg))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def is_binary(string):\n    for i in string:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nstring = \"01100001\"\nprint(\"Is the given string a binary string?\")\nprint(is_binary(string))",
      -0.85693359375
    ],
    [
      "def check_binary_string(str1):\n    for i in str1:\n        if i not in \"01\":\n            return False\n    return True\n\n\nstr1 = input()\nprint(check_binary_string(str1))",
      -0.85693359375
    ],
    [
      "def binary_check(str1):\n    for i in str1:\n        if i not in \"01\":\n            return False\n    return True\n\nprint(binary_check(\"01010101\"))\nprint(binary_check(\"01010102\"))",
      -0.85693359375
    ],
    [
      "def is_binary_string(input_str):\n    for i in input_str:\n        if i not in ['0', '1']:\n            return False\n\n    return True\n\nif __name__ == '__main__':\n    input_str = '0101'\n    print(is_binary_string(input_str))\n\n    input_str = '01010'\n    print(is_binary_string(input_str))\n\n    input_str = '01010101'\n    print(is_binary_string(input_str))\n\n    input_str = '010101010'\n    print(is_binary_string(input_str))",
      -0.85791015625
    ],
    [
      "def check_binary(input_str: str) -> bool:\n    \"\"\"\n    >>> check_binary(\"101010\")\n    True\n    >>> check_binary(\"101011\")\n    False\n    \"\"\"\n    for ch in input_str:\n        if ch not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "def is_binary(string):\n    for i in string:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    if is_binary(string):\n        print(\"The string is a binary string\")\n    else:\n        print(\"The string is not a binary string\")",
      -0.85791015625
    ],
    [
      "def check_binary(input_str):\n    for i in input_str:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    print(check_binary(\"110010101001011\"))\n    print(check_binary(\"110010101001012\"))",
      -0.85791015625
    ],
    [
      "def is_binary(string):\n    for s in string:\n        if s not in ('0', '1'):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    print(is_binary('101001111'))\n    print(is_binary('10101'))",
      -0.85791015625
    ],
    [
      "def is_binary(str1):\n    for i in str1:\n        if i not in \"01\":\n            return False\n    return True\n\n\nprint(is_binary(\"1101\"))\nprint(is_binary(\"11101\"))\nprint(is_binary(\"11101111\"))",
      -0.85791015625
    ],
    [
      "def is_binary(str):\n    for i in str:\n        if i != '0' and i != '1':\n            return False\n    return True\n\nprint(is_binary('101'))\nprint(is_binary('0101'))\nprint(is_binary('01011'))\nprint(is_binary('a101'))\nprint(is_binary('0101a'))",
      -0.85791015625
    ],
    [
      "def is_binary_string(text: str) -> bool:\n    \"\"\"Returns true if the given string is a binary string, else returns false.\"\"\"\n    return all(char in ('0', '1') for char in text)\n\n\ndef main():\n    text = '1010'\n    print(\"Is the given string a binary string?\")\n    print(is_binary_string(text))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def is_binary_string(input_string):\n    for i in input_string:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\n\ninput_string = input(\"Enter the string: \")\nprint(is_binary_string(input_string))",
      -0.85791015625
    ],
    [
      "def isBinary(input):\n    for i in input:\n        if i != '0' and i != '1':\n            return False\n    return True\n\nprint(isBinary(\"10101\"))\nprint(isBinary(\"11110\"))\nprint(isBinary(\"01011\"))\nprint(isBinary(\"11010\"))",
      -0.85791015625
    ],
    [
      "def binary_check(string: str) -> bool:\n    \"\"\"\n    >>> binary_check(\"10101010101010\")\n    True\n    >>> binary_check(\"101010101010101\")\n    False\n    \"\"\"\n    return all(x in (\"0\", \"1\") for x in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "def check_binary(input_str):\n    for i in input_str:\n        if i not in [\"0\", \"1\"]:\n            return False\n    return True\n\n\nprint(check_binary(\"10101\"))\nprint(check_binary(\"101011\"))",
      -0.85791015625
    ],
    [
      "def is_binary(string):\n    for char in string:\n        if char not in ('0','1'):\n            return False\n    return True\n\nprint(is_binary(\"1010\"))\nprint(is_binary(\"1101\"))",
      -0.85791015625
    ],
    [
      "def is_binary_string(string):\n    for i in string:\n        if i != '0' and i != '1':\n            return False\n    return True\n\ndef main():\n    str1 = '0110011'\n    str2 = '010101'\n    if is_binary_string(str1):\n        print(\"The given string is a binary string.\")\n    else:\n        print(\"The given string is not a binary string.\")\n    if is_binary_string(str2):\n        print(\"The given string is a binary string.\")\n    else:\n        print(\"The given string is not a binary string.\")\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def check_binary(input_string):\n    for i in input_string:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\nprint(check_binary(\"1010101010\"))\nprint(check_binary(\"10101010101\"))\nprint(check_binary(\"10101010\"))\n\n\"\"\"\nTime complexity: O(N), where N is the length of the string.\nSpace complexity: O(1)\n\"\"\"",
      -0.85791015625
    ],
    [
      "def is_binary_string(s):\n    if s[0] == \"0\":\n        return False\n\n    for i in range(1, len(s)):\n        if s[i] == \"1\" and s[i-1] == \"0\":\n            continue\n        elif s[i] == \"0\" and s[i-1] == \"1\":\n            return False\n        else:\n            return False\n\n    return True\n\nif __name__ == \"__main__\":\n    print(is_binary_string(\"0000\"))\n    print(is_binary_string(\"101010101010\"))\n    print(is_binary_string(\"1010101010101\"))\n    print(is_binary_string(\"000101101\"))",
      -0.85791015625
    ],
    [
      "def is_binary_string(str):\n    return str.isalnum() and str.isascii() and set(str).issubset({'0','1'})\n\nprint(is_binary_string(\"10001100111\"))\nprint(is_binary_string(\"100011001111\"))",
      -0.85791015625
    ],
    [
      "def is_binary(s):\n    for i in s:\n        if i not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    input_string = input(\"Enter string: \")\n    print(\"The string is binary: \" + str(is_binary(input_string)))",
      -0.85791015625
    ],
    [
      "def is_binary(s):\n    return s.isdigit() and int(s) in (0, 1)\n\n\ndef is_binary_alt(s):\n    return s.isdigit() and s in (\"0\", \"1\")\n\n\ndef main():\n    str_val = input(\"Enter a string: \")\n    print(is_binary(str_val))\n    print(is_binary_alt(str_val))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def check_binary(input_str):\n    for char in input_str:\n        if char != \"0\" and char != \"1\":\n            return False\n    return True\n\n\nprint(check_binary(\"0110\"))\nprint(check_binary(\"1110\"))\nprint(check_binary(\"11101210\"))",
      -0.85791015625
    ],
    [
      "def is_binary(string):\n    for c in string:\n        if c not in '01':\n            return False\n    return True\n\n\ndef test_function(test_case):\n    string = test_case[0]\n    solution = test_case[1]\n    output = is_binary(string)\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\nstring = '01010101'\nsolution = True\ntest_case = [string, solution]\ntest_function(test_case)",
      -0.85791015625
    ],
    [
      "def check_binary(string):\n    for i in string:\n        if i not in [\"0\", \"1\"]:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    print(check_binary(\"1010101010101010\"))\n    print(check_binary(\"1010101010101010101\"))\n    print(check_binary(\"10101010101010101010\"))",
      -0.85791015625
    ],
    [
      "def binary_string(test: str) -> bool:\n    \"\"\"\n    :param test: string to check\n    :return: True if string is a binary string, else False\n    >>> binary_string('1011')\n    True\n    >>> binary_string('123')\n    False\n    >>> binary_string('abc')\n    False\n    \"\"\"\n    return bool(test) and all(char in \"01\" for char in test)\n\n\ndef main():\n    assert binary_string(\"1011\") is True\n    assert binary_string(\"123\") is False\n    assert binary_string(\"abc\") is False\n    print(\"Passed\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def binary_check(str1):\n    for i in str1:\n        if i not in ('0', '1'):\n            return False\n    return True\n\nprint(binary_check('0101'))\nprint(binary_check('0101010101'))\nprint(binary_check('0011'))\nprint(binary_check('0110111'))",
      -0.85791015625
    ],
    [
      "def is_binary(str):\n    for i in str:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\n\nstr1 = \"10100101\"\nprint(is_binary(str1))\nstr2 = \"101001011\"\nprint(is_binary(str2))\nstr3 = \"0001\"\nprint(is_binary(str3))\nstr4 = \"000\"\nprint(is_binary(str4))\nstr5 = \"00010001\"\nprint(is_binary(str5))\nstr6 = \"000100011\"\nprint(is_binary(str6))",
      -0.85791015625
    ],
    [
      "def is_binary(input_str):\n    for i in input_str:\n        if i not in ('0', '1'):\n            return False\n    return True\n\nif __name__ == '__main__':\n    input_str = input()\n    print(is_binary(input_str))",
      -0.85791015625
    ],
    [
      "def is_binary_string(input_string):\n    for i in input_string:\n        if i not in [\"0\", \"1\"]:\n            return False\n    return True\n\nprint(is_binary_string(\"10101010\"))\nprint(is_binary_string(\"1010101G\"))",
      -0.85791015625
    ],
    [
      "def check_binary(input_str):\n    for char in input_str:\n        if char not in (\"0\", \"1\"):\n            return False\n    return True\n\nprint(check_binary(\"1101011\"))\nprint(check_binary(\"11010102\"))\nprint(check_binary(\"10101010\"))",
      -0.85888671875
    ],
    [
      "def isBinary(s):\n    for i in s:\n        if i not in [\"0\", \"1\"]:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    s = input()\n    if isBinary(s):\n        print(\"Yes\")\n    else:\n        print(\"No\")",
      -0.85888671875
    ],
    [
      "def check_binary(input_string):\n    return all(c in \"01\" for c in input_string)\n\n\ndef main():\n    input_string = input()\n\n    if check_binary(input_string):\n        print(\"Given string is a binary string.\")\n    else:\n        print(\"Given string is not a binary string.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85888671875
    ],
    [
      "def check_binary(str):\n    for i in str:\n        if i != '0' and i != '1':\n            return False\n    return True\n\nprint(check_binary(\"10101\"))\nprint(check_binary(\"1111\"))",
      -0.85888671875
    ],
    [
      "def is_binary_string(input_str: str) -> bool:\n    for char in input_str:\n        if char != '0' and char != '1':\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert is_binary_string(\"1010101010101010\") is True\n    assert is_binary_string(\"10101010101010101\") is False",
      -0.85888671875
    ],
    [
      "def is_binary(input_str):\n    for ch in input_str:\n        if ch not in \"01\":\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    input_str = input(\"Enter the string: \")\n    if is_binary(input_str):\n        print(\"The string is a binary string.\")\n    else:\n        print(\"The string is not a binary string.\")",
      -0.85888671875
    ],
    [
      "def is_binary_string(text: str) -> bool:\n    \"\"\"\n    Return True if the given text is a binary string, else return False.\n    >>> is_binary_string('0101')\n    True\n    >>> is_binary_string('01001')\n    True\n    >>> is_binary_string('010101001')\n    True\n    >>> is_binary_string('0101010101001')\n    True\n    >>> is_binary_string('01010101010011')\n    False\n    \"\"\"\n    for char in text:\n        if char not in (\"0\", \"1\"):\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85888671875
    ],
    [
      "def isBinary(str):\n    for i in str:\n        if i != \"0\" and i != \"1\":\n            return False\n    return True\n\nprint(isBinary(\"1010\"))\nprint(isBinary(\"10101\"))\nprint(isBinary(\"1010101\"))\nprint(isBinary(\"10101010101010101\"))\nprint(isBinary(\"1010101010101010\"))",
      -0.85888671875
    ],
    [
      "def is_binary_string(input_str):\n    for i in input_str:\n        if i != '0' and i != '1':\n            return False\n    return True\n\nprint(is_binary_string(\"1010101\"))\nprint(is_binary_string(\"11000\"))",
      -0.86083984375
    ],
    [
      "def check_binary(string):\n    for char in string:\n        if char not in [\"0\", \"1\"]:\n            return False\n    return True\n\nprint(check_binary(\"10001011\"))",
      -0.86083984375
    ],
    [
      "def binary_check(input_string: str) -> bool:\n    \"\"\"Return True if the input string is a binary string or False otherwise.\"\"\"\n    for char in input_string:\n        if char != '0' and char != '1':\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert binary_check(\"01010101\") == True\n    assert binary_check(\"00000\") == True\n    assert binary_check(\"11111\") == True\n    assert binary_check(\"00011\") == False\n    assert binary_check(\"0001\") == False\n    assert binary_check(\"0010\") == False\n    assert binary_check(\"1100\") == False\n    assert binary_check(\"110\") == False\n    assert binary_check(\"11\") == False",
      -1.8115234375
    ],
    [
      "def binary_string(test_string: str) -> bool:\n    \"\"\"\n    Checks whether the given string is a binary string or not.\n    >>> binary_string('1010')\n    True\n    >>> binary_string('10101')\n    True\n    >>> binary_string('1010101010101010101010')\n    True\n    >>> binary_string('10101010101010101010101010101010')\n    True\n    >>> binary_string('1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
      -2.466796875
    ],
    [
      "def is_binary_string(input_str: str) -> bool:\n    \"\"\"\n    >>> is_binary_string('10101')\n    True\n    >>> is_binary_string('010101010101')\n    True\n    >>> is_binary_string('01010101010101')\n    False\n    >>> is_binary_string('1010101010101')\n    False\n    >>> is_binary_string('01010101010101')\n    True\n    \"\"\"\n    return all(char in (\"0\", \"1\") for char in input_str)\n\n\ndef main():\n    assert is_binary_string(\"010101010101\") == False\n    assert is_binary_string(\"01010101010101\") == False\n    assert is_binary_string(\"10101\") == True\n    assert is_binary_string(\"01010101010101\") == True\n    assert is_binary_string(\"1010101010101\") == False\n    assert is_binary_string(\"01010101010101\") == True\n    print(\"Passed\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.533203125
    ],
    [
      "def is_binary_string(input_string: str) -> bool:\n    \"\"\"\n    Return True if the given string is a binary string, else return False.\n    >>> is_binary_string('0000010101')\n    True\n    >>> is_binary_string('0000010102')\n    False\n    >>> is_binary_string('123')\n    False\n    >>> is_binary_string('0123')\n    False\n    >>> is_binary_string('0123456789')\n    False\n    >>> is_binary_string('01234567890')\n    False\n    >>> is_binary_string('101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",
      -3.04296875
    ],
    [
      "def check_binary(input_str):\n    if input_str.isalnum():\n        return False\n    return True\n\n\nprint(check_binary(\"101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010",
      -6.21875
    ],
    [
      "def is_binary(input_str):\n    if input_str == \"\":\n        return True\n\n    if len(input_str) == 1 and input_str[0] == \"0\":\n        return True\n\n    if len(input_str) == 1 and input_str[0] == \"1\":\n        return True\n\n    return input_str[0] == \"0\" and input_str[1] == \"1\"\n\nprint(is_binary(\"00\"))\nprint(is_binary(\"11\"))\nprint(is_binary(\"10\"))\nprint(is_binary(\"01\"))\nprint(is_binary(\"101\"))\nprint(is_binary(\"111\"))\nprint(is_binary(\"10110\"))\nprint(is_binary(\"10101\"))\nprint(is_binary(\"01111\"))\nprint(is_binary(\"11111\"))\nprint(is_binary(\"00000\"))\nprint(is_binary(\"1111111\"))\nprint(is_binary(\"1010101\"))",
      -6.51171875
    ],
    [
      "def is_binary(input_str):\n    return input_str.isalnum()\n\ndef is_binary_1(input_str):\n    return input_str.isalnum()\n\nprint(is_binary(\"101011100110101101010101011100110101011001010010101011100101010110010100101010111001010101100101001010101110010101011001010010101011100101010110010100101010111001010101100101001010101110010101011001010010101011100101010110010100101010111001010101100101001010101110010101011001010010101011100101010110010100101010111001010101100101001010101110010101011001010010101011100101010110010100101010111001010101100101001010101110010101011001010010101011100101010110010",
      -6.6953125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}