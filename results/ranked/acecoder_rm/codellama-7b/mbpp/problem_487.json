{
  "problem": {
    "task_id": "MBPP/498",
    "prompt": "Write a python function to find gcd of two positive integers.",
    "canonical_solution": "def gcd(x, y):\r\n    gcd = 1\r\n    if x % y == 0:\r\n        return y\r\n    for k in range(int(y / 2), 0, -1):\r\n        if x % k == 0 and y % k == 0:\r\n            gcd = k\r\n            break  \r\n    return gcd",
    "test_list": [
      "assert gcd(12, 17) == 1",
      "assert gcd(4,6) == 2",
      "assert gcd(2,9) == 1"
    ],
    "challenge_test_list": [],
    "problem_id": 487
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def gcd(a, b):\n    \"\"\"\n    Finds the greatest common divisor of two positive integers.\n\n    >>> gcd(24, 36)\n    12\n    >>> gcd(4, 6)\n    2\n    >>> gcd(25, 15)\n    5\n    >>> gcd(23, 12)\n    1\n    \"\"\"\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      18.03125
    ],
    [
      "def gcd(x: int, y: int) -> int:\n    \"\"\"\n    GCD of two integers.\n    >>> gcd(18, 48)\n    6\n    \"\"\"\n    if x < 0 or y < 0:\n        raise ValueError(\"x and y must be positive\")\n    if x == 0:\n        return y\n    return gcd(y % x, x)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      16.3125
    ],
    [
      "def gcd(x, y):\n    \"\"\"\n    Return the greatest common divisor of x and y\n\n    >>> gcd(12, 8)\n    4\n    >>> gcd(12, 18)\n    6\n    >>> gcd(23, 12)\n    1\n    \"\"\"\n    while y:\n        x, y = y, x % y\n    return x\n\n\ndef gcd2(x, y):\n    \"\"\"\n    Return the greatest common divisor of x and y\n\n    >>> gcd2(12, 8)\n    4\n    >>> gcd2(12, 18)\n    6\n    >>> gcd2(23, 12)\n    1\n    \"\"\"\n    return x if y == 0 else gcd2(y, x % y)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      14.25
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x == y:\n        return x\n    if x > y:\n        return gcd(x - y, y)\n    return gcd(x, y - x)\n\n\nprint(gcd(18, 27))\nprint(gcd(18, 0))\nprint(gcd(0, 18))\nprint(gcd(18, 18))\nprint(gcd(10, 15))",
      13.0703125
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef main():\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(gcd(a, b))\n\n\nif __name__ == \"__main__\":\n    main()",
      13.0078125
    ],
    [
      "def gcd(x, y):\n    \"\"\"\n    Return the greatest common divisor of x and y using Euclid's Algorithm.\n\n    >>> gcd(4, 6)\n    2\n    >>> gcd(2, 5)\n    1\n    >>> gcd(12, 8)\n    4\n    >>> gcd(7, 9)\n    1\n    >>> gcd(17, 12)\n    1\n    \"\"\"\n    if x < y:\n        x, y = y, x\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      12.640625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x > y:\n        return gcd(x % y, y)\n    else:\n        return gcd(y % x, x)\n\n\nprint(gcd(18, 24))\nprint(gcd(35, 15))",
      12.5
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    This function will find the GCD of two numbers\n\n    >>> gcd(12, 4)\n    4\n\n    >>> gcd(5, 25)\n    5\n\n    >>> gcd(10, 20)\n    10\n\n    >>> gcd(5, 20)\n    5\n\n    >>> gcd(100, 200)\n    100\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      12.3671875
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    Return the Greatest Common Divisor of a and b using Euclid's algorithm\n    \"\"\"\n    while b > 0:\n        a, b = b, a % b\n    return a\n\n\ndef gcd_recursive(a, b):\n    if b == 0:\n        return a\n    return gcd_recursive(b, a % b)\n\n\ndef gcd_recursive_v2(a, b):\n    if b == 0:\n        return a\n    if a == 0:\n        return b\n    return gcd_recursive_v2(min(a, b), max(a, b) % min(a, b))\n\n\nif __name__ == \"__main__\":\n    a = 36\n    b = 64\n    print(gcd(a, b))\n    print(gcd_recursive(a, b))\n    print(gcd_recursive_v2(a, b))",
      11.9765625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd(x - y, y)\n\n    return gcd(x, y - x)\n\n\nif __name__ == \"__main__\":\n    print(gcd(18, 48))",
      11.28125
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef gcd_efficient(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        return gcd_efficient(a - b, b)\n    else:\n        return gcd_efficient(a, b - a)\n\n\nif __name__ == \"__main__\":\n    print(gcd(5, 6))\n    print(gcd_efficient(5, 6))",
      11.2265625
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n\n    if a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\nprint(gcd(18, 45))",
      11.1015625
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\n\ndef gcd_euclidean(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        return gcd_euclidean(a - b, b)\n    return gcd_euclidean(a, b - a)\n\n\nprint(gcd(4, 6))\nprint(gcd(10, 20))\nprint(gcd(100, 120))\nprint(gcd_euclidean(4, 6))\nprint(gcd_euclidean(10, 20))\nprint(gcd_euclidean(100, 120))",
      10.3671875
    ],
    [
      "def gcd(num1, num2):\n    while num2 != 0:\n        num1, num2 = num2, num1 % num2\n    return num1\n\ndef gcd_recursive(num1, num2):\n    if num2 == 0:\n        return num1\n    else:\n        return gcd_recursive(num2, num1 % num2)\n\ndef gcd_recursive_with_dict(num1, num2):\n    if num2 == 0:\n        return num1\n    else:\n        return gcd_recursive_with_dict(num2, num1 % num2)",
      9.0234375
    ],
    [
      "def gcd(x, y):\n    while y:\n        x, y = y, x % y\n    return x\n\n\ndef gcd_recursion(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\n\ndef gcd_euclid(x, y):\n    if x > y:\n        x, y = y, x\n    if y % x == 0:\n        return x\n    else:\n        return gcd_euclid(y % x, x)\n\n\ndef gcd_euclid_recursion(x, y):\n    if x > y:\n        x, y = y, x\n    if y % x == 0:\n        return x\n    else:\n        return gcd_euclid_recursion(y, x % y)\n\n\nif __name__ == \"__main__\":\n    print(gcd(10, 5))\n    print(gcd_recursion(10, 5))\n    print(gcd_euclid(10, 5))\n    print(gcd_euclid_recursion(10, 5))",
      8.28125
    ],
    [
      "def gcd(x: int, y: int) -> int:\n    \"\"\"\n    Using Euclid's Algorithm\n    \"\"\"\n    while y:\n        x, y = y, x % y\n    return x\n\n\nif __name__ == \"__main__\":\n    assert gcd(20, 40) == 20",
      8.1796875
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x > y:\n        return gcd(x % y, y)\n    else:\n        return gcd(x, y % x)\n\n\nprint(gcd(18, 24))\nprint(gcd(36, 18))",
      8.140625
    ],
    [
      "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef gcd_recursive(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd_recursive(b, a % b)\n\n\ndef gcd_iterative(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\nprint(gcd_iterative(10, 15))",
      7.359375
    ],
    [
      "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\ndef gcd_recursive(a, b):\n    if a < b:\n        a, b = b, a\n    if a == b:\n        return a\n    return gcd_recursive(b, a % b)\n\n\nif __name__ == \"__main__\":\n    print(gcd(20, 40))\n    print(gcd_recursive(20, 40))",
      7.03125
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    elif a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\nprint(gcd(100, 30))\nprint(gcd(20, 10))\nprint(gcd(20, 30))\nprint(gcd(100, 100))",
      6.734375
    ],
    [
      "def gcd(x, y):\n    \"\"\"\n    GCD = Greatest Common Divisor\n    \"\"\"\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd(y, x)\n\n    if x % y == 0:\n        return y\n\n    return gcd(y, x % y)\n\n\nif __name__ == \"__main__\":\n    print(gcd(12, 6))",
      6.73046875
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    >>> gcd(24, 36)\n    12\n    >>> gcd(21, 12)\n    3\n    >>> gcd(4, 6)\n    2\n    >>> gcd(4, 3)\n    1\n    >>> gcd(5, 3)\n    1\n    >>> gcd(10, 0)\n    10\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"a and b should be positive\")\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    if a > b:\n        return gcd(b, a % b)\n    else:\n        return gcd(a, b % a)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      6.3125
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\na = int(input(\"Enter first number: \"))\nb = int(input(\"Enter second number: \"))\nprint(\"GCD is: \", gcd(a, b))",
      6.10546875
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    elif a > b:\n        return gcd(a-b, b)\n    else:\n        return gcd(a, b-a)\n\n\na = int(input(\"Enter first number: \"))\nb = int(input(\"Enter second number: \"))\nprint(\"GCD of %d and %d is: %d\" % (a, b, gcd(a, b)))",
      5.6875
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    elif a > b:\n        return gcd(a - b, b)\n    elif a < b:\n        return gcd(a, b - a)\n\n\nif __name__ == \"__main__\":\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(f\"GCD of {a} and {b} is {gcd(a, b)}\")",
      5.62890625
    ],
    [
      "def gcd(num1, num2):\n    if num1 == 0:\n        return num2\n    elif num2 == 0:\n        return num1\n    elif num1 > num2:\n        return gcd(num2, num1 % num2)\n    else:\n        return gcd(num1, num2 % num1)\n\n\nprint(gcd(30, 40))\nprint(gcd(60, 80))\nprint(gcd(20, 30))\nprint(gcd(15, 20))",
      5.30859375
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nprint(\"The GCD of %d and %d is %d.\" % (a, b, gcd(a, b)))",
      5.2734375
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x == y:\n        return x\n    if x > y:\n        return gcd(x - y, y)\n    return gcd(x, y - x)\n\n\nprint(gcd(18, 12))",
      5.2578125
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    if a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\nprint(gcd(20, 10))\nprint(gcd(10, 20))\nprint(gcd(40, 60))\nprint(gcd(100, 50))\nprint(gcd(3, 5))",
      5.12890625
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\nprint(gcd(100, 12))\nprint(gcd(200, 120))\nprint(gcd(10, 30))\nprint(gcd(15, 45))",
      5.109375
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\na = 12\nb = 4\nprint(gcd(a, b))",
      5.10546875
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    The Euclidean algorithm\n    \"\"\"\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nif __name__ == \"__main__\":\n    print(gcd(50, 20))",
      4.421875
    ],
    [
      "def gcd(num1, num2):\n    if num1 == 0:\n        return num2\n    if num2 == 0:\n        return num1\n\n    if num1 > num2:\n        return gcd(num1 - num2, num2)\n    else:\n        return gcd(num1, num2 - num1)\n\n\nif __name__ == \"__main__\":\n    num1 = 18\n    num2 = 45\n    print(gcd(num1, num2))",
      3.970703125
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\ndef gcd_with_while(a, b):\n    if b == 0:\n        return a\n\n    while b != 0:\n        a, b = b, a % b\n\n    return a\n\n\nif __name__ == \"__main__\":\n    print(gcd(10, 100))\n    print(gcd_with_while(10, 100))",
      3.931640625
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    if a == b:\n        return a\n\n    if a > b:\n        return gcd(a - b, b)\n\n    return gcd(a, b - a)\n\n\nif __name__ == \"__main__\":\n    print(gcd(2, 6))",
      3.927734375
    ],
    [
      "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n\n    if a % b == 0:\n        return b\n\n    return gcd(b, a % b)\n\n\nif __name__ == \"__main__\":\n    print(gcd(20, 40))\n    print(gcd(5, 10))\n    print(gcd(10, 5))",
      3.455078125
    ],
    [
      "def gcd(a, b):\n    if a < 0 or b < 0:\n        return \"Invalid Input\"\n\n    if a == 0:\n        return b\n\n    return gcd(b % a, a)\n\n\na = int(input(\"Enter First Number: \"))\nb = int(input(\"Enter Second Number: \"))\nprint(\"GCD of {0} and {1} is {2}\".format(a, b, gcd(a, b)))",
      3.328125
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nprint(gcd(20, 10))",
      3.244140625
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nprint(gcd(18, 12))",
      3.2109375
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\nprint(gcd(18, 12))",
      3.19140625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x > y:\n        return gcd(x - y, y)\n    return gcd(x, y - x)\n\n\nprint(gcd(18, 48))",
      3.119140625
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a < b:\n        return gcd(a, b % a)\n    else:\n        return gcd(a % b, b)\n\n\nprint(gcd(15, 5))",
      3.11328125
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\ndef main():\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(gcd(a, b))\n\n\nif __name__ == \"__main__\":\n    main()",
      3.029296875
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nprint(gcd(18, 24))",
      2.9375
    ],
    [
      "def gcd(x,y):\n    if x == 0:\n        return y\n    elif y == 0:\n        return x\n    else:\n        if x > y:\n            return gcd(x%y,y)\n        else:\n            return gcd(x,y%x)\n\nprint(gcd(21,34))",
      2.810546875
    ],
    [
      "def gcd(a,b):\n    if a==0:\n        return b\n    return gcd(b%a,a)\n\n\nif __name__ == \"__main__\":\n    print(gcd(10,20))\n    print(gcd(12,18))\n    print(gcd(123,456))",
      2.7421875
    ],
    [
      "def gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\n\nprint(gcd(12, 15))\nprint(gcd(12, 12))\nprint(gcd(12, 0))",
      2.724609375
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    >>> gcd(5, 15)\n    5\n    >>> gcd(10, 20)\n    10\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      2.712890625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x == y:\n        return x\n    if x > y:\n        return gcd(x - y, y)\n    return gcd(x, y - x)\n\n\nprint(gcd(10, 15))\nprint(gcd(15, 10))",
      2.626953125
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd(x - y, y)\n    else:\n        return gcd(x, y - x)\n\n\nprint(gcd(18, 48))\nprint(gcd(24, 60))",
      2.603515625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x > y:\n        return gcd(x % y, y)\n    return gcd(y, x % y)\n\n\nprint(gcd(24, 60))",
      2.546875
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        if a > b:\n            return gcd(a % b, b)\n        else:\n            return gcd(b % a, a)\n\n\na = int(input(\"Enter first number: \"))\nb = int(input(\"Enter second number: \"))\nprint(\"GCD of {} and {} is {}\".format(a, b, gcd(a, b)))",
      2.453125
    ],
    [
      "def gcd(x, y):\n    if x > y:\n        small = y\n    else:\n        small = x\n\n    for i in range(1, small+1):\n        if (x % i == 0) and (y % i == 0):\n            gcd = i\n\n    return gcd\n\n\na = int(input())\nb = int(input())\nprint(gcd(a, b))",
      2.42578125
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd(y, x)\n\n    if x % y == 0:\n        return y\n    return gcd(y, x % y)\n\n\nprint(gcd(5, 10))\nprint(gcd(10, 5))\nprint(gcd(10, 10))\nprint(gcd(10, 11))",
      2.248046875
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\n\nprint(gcd(6, 12))",
      2.125
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nprint(gcd(20, 10))\nprint(gcd(12, 6))\nprint(gcd(39, 56))",
      2.123046875
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd(x - y, y)\n\n    return gcd(x, y - x)\n\n\ndef gcd_recursive(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd_recursive(x - y, y)\n\n    return gcd_recursive(x, y - x)\n\n\nprint(gcd(18, 24))\nprint(gcd_recursive(18, 24))",
      2.103515625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    elif y == 0:\n        return x\n    elif x > y:\n        return gcd(x - y, y)\n    else:\n        return gcd(x, y - x)\n\n\nprint(gcd(18, 48))",
      2.005859375
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nif __name__ == \"__main__\":\n    a = 10\n    b = 15\n    print(gcd(a, b))",
      1.9384765625
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    elif a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\na = 50\nb = 20\nprint(gcd(a, b))",
      1.93359375
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    This function returns the GCD of two numbers.\n    \"\"\"\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\ndef gcd2(a, b):\n    \"\"\"\n    This function returns the GCD of two numbers.\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\n\ndef gcd3(a, b):\n    \"\"\"\n    This function returns the GCD of two numbers.\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    if a > b:\n        return gcd3(b, a)\n\n    if a < b:\n        return gcd3(a, b)\n\n    if a == b:\n        return a\n\n\ndef main():\n    \"\"\"\n    Main function for the program.\n    \"\"\"\n    a = int(input(\"Enter a: \"))\n    b = int(input(\"Enter b: \"))\n    print(gcd(a, b))\n    print(gcd2(a, b))\n    print(gcd3(a, b))\n\n\nif __name__ == '__main__':\n    main()",
      1.8955078125
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    GCD of two integers\n    :param a: int\n    :param b: int\n    :return: int\n    \"\"\"\n    if a < 0 or b < 0:\n        return \"Invalid input\"\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\nprint(gcd(12, 16))",
      1.45703125
    ],
    [
      "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\nprint(gcd(32, 12))",
      1.236328125
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\n\nprint(gcd(20, 10))\nprint(gcd(10, 20))\nprint(gcd(10, 40))",
      1.0966796875
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nprint(gcd(10, 20))\nprint(gcd(20, 10))\nprint(gcd(10, 0))\nprint(gcd(10, 10))",
      1.052734375
    ],
    [
      "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\n\nprint(gcd(12, 8))",
      0.984375
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nprint(gcd(12, 20))",
      0.97998046875
    ],
    [
      "def gcd(x, y):\n    \"\"\"\n    GCD of two integers.\n    \"\"\"\n    if x > y:\n        smaller = y\n    else:\n        smaller = x\n\n    for i in range(1, smaller + 1):\n        if (x % i == 0) and (y % i == 0):\n            gcd = i\n\n    return gcd\n\n\nif __name__ == \"__main__\":\n    print(gcd(12, 16))",
      0.77099609375
    ],
    [
      "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\n\nprint(gcd(12, 4))\nprint(gcd(21, 3))\nprint(gcd(100, 30))\nprint(gcd(100, 120))",
      0.67626953125
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    else:\n        return gcd(a, b - a)\n\n\nif __name__ == \"__main__\":\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(f\"GCD of {a} and {b} is {gcd(a, b)}\")",
      0.63232421875
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    Returns the GCD of two numbers.\n    \"\"\"\n    if a == 0:\n        return b\n    return gcd(b % a, a)\n\nprint(gcd(12, 16))\nprint(gcd(13, 13))\nprint(gcd(13, 14))",
      0.501953125
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    elif a > b:\n        return gcd(a - b, b)\n    elif a < b:\n        return gcd(a, b - a)\n\n\nprint(gcd(10, 20))\nprint(gcd(10, 20))",
      0.444580078125
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\n\ndef main():\n    print(gcd(10, 15))\n    print(gcd(20, 30))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.44091796875
    ],
    [
      "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n\n\na = 15\nb = 20\nprint(gcd(a, b))",
      0.356201171875
    ],
    [
      "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n\n    if a % b == 0:\n        return b\n    else:\n        return gcd(b, a % b)\n\n\ndef gcd_recursive(a, b):\n    if a < b:\n        a, b = b, a\n\n    return gcd_recursive(b, a % b) if a % b != 0 else b\n\n\ndef main():\n    a, b = 100, 20\n    print(gcd(a, b))\n    print(gcd_recursive(a, b))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.2181396484375
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    TC: O(log(a+b))\n    SC: O(1)\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nif __name__ == \"__main__\":\n    print(gcd(18, 45))",
      0.1365966796875
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b%a, a)\n\nprint(gcd(12, 16))",
      0.1329345703125
    ],
    [
      "def gcd(x, y):\n    if y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\n\nprint(gcd(18, 24))",
      0.129150390625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n\n    if x > y:\n        return gcd(x - y, y)\n    else:\n        return gcd(x, y - x)\n\n\nif __name__ == \"__main__\":\n    print(gcd(20, 40))",
      0.0364990234375
    ],
    [
      "def gcd(a, b):\n    \"\"\"\n    This function returns the greatest common divisor of two numbers.\n    \"\"\"\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a-b, b)\n    return gcd(a, b-a)\n\nprint(gcd(24, 48))",
      0.0156402587890625
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nprint(gcd(18, 24))",
      -0.6533203125
    ],
    [
      "def gcd(x, y):\n    while y != 0:\n        x, y = y, x % y\n    return x\n\n\nprint(gcd(24, 60))",
      -0.75
    ],
    [
      "def gcd(x,y):\n\tif x == 0:\n\t\treturn y\n\tif y == 0:\n\t\treturn x\n\tif x%y == 0:\n\t\treturn y\n\tif y%x == 0:\n\t\treturn x\n\tif x%y > 0:\n\t\treturn gcd(y,x%y)\n\telse:\n\t\treturn gcd(x,y%x)\n\nprint(gcd(20,16))\nprint(gcd(16,20))\nprint(gcd(12,4))\nprint(gcd(4,12))",
      -0.75048828125
    ],
    [
      "def gcd(a, b):\n    while b != 0:\n        a, b = b, a % b\n    return a\n\nprint(gcd(24, 40))",
      -0.75244140625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    elif y == 0:\n        return x\n    else:\n        return gcd(y, x % y)\n\n\nprint(gcd(54, 24))",
      -0.85693359375
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nprint(gcd(10, 20))\nprint(gcd(10, 20))\nprint(gcd(10, 0))",
      -0.85693359375
    ],
    [
      "def gcd(x, y):\n    if x > y:\n        smaller = y\n    else:\n        smaller = x\n    for i in range(1, smaller+1):\n        if (x % i == 0) and (y % i == 0):\n            gcd = i\n    return gcd\n\n\nprint(gcd(20, 12))",
      -0.85693359375
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\n\nprint(gcd(5, 7))",
      -0.85693359375
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\n\nprint(gcd(24, 36))\nprint(gcd(24, 12))\nprint(gcd(24, 48))",
      -0.85693359375
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nprint(gcd(12, 8))\nprint(gcd(12, 12))",
      -0.85693359375
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    return gcd(b % a, a)",
      -0.857421875
    ],
    [
      "def gcd(x, y):\n    while x != y:\n        if x > y:\n            x = x - y\n        else:\n            y = y - x\n    return x\n\n\nprint(gcd(12, 8))",
      -0.85791015625
    ],
    [
      "def gcd(a, b):\n    if b == 0:\n        return a\n    else:\n        return gcd(b, a % b)\n\n\nprint(gcd(20, 10))",
      -0.85791015625
    ],
    [
      "def gcd(x, y):\n    if x == 0:\n        return y\n    return gcd(y%x, x)\n\ngcd(24, 30)\n\n# Time complexity: O(log(max(x, y)))\n# Space complexity: O(1)",
      -0.85791015625
    ],
    [
      "def gcd(x, y):\n    while(y):\n        x, y = y, x % y\n    return x",
      -0.85791015625
    ],
    [
      "def gcd(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return a\n    if a > b:\n        return gcd(a - b, b)\n    return gcd(a, b - a)\n\n\nprint(gcd(18, 27))",
      -0.88671875
    ],
    [
      "def gcd(x, y):\n    if x > y:\n        small = y\n    else:\n        small = x\n\n    for i in range(1, small+1):\n        if((x % i == 0) and (y % i == 0)):\n            gcd = i\n\n    return gcd\n\n\nprint(gcd(12, 16))",
      -1.3056640625
    ],
    [
      "def gcd(x: int, y: int) -> int:\n    \"\"\"\n    Calculate the Greatest Common Denominator of two positive integers\n\n    Args:\n        x (int): first integer\n        y (int): second integer\n\n    Returns:\n        int: the Greatest Common Denominator of two positive integers\n    \"\"\"\n    if x == 0:\n        return y\n    if y == 0:\n        return x\n    if x < 0:\n        x = -x\n    if y < 0:\n        y = -y\n    while x != y:\n        if x > y:\n            x = x - y\n        else:\n            y = y - x\n    return x\n\n\ndef main():\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(f\"The GCD of {a} and {b} is {gcd(a, b)}\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -1.3720703125
    ],
    [
      "def gcd(a, b):\n    if a < b:\n        a, b = b, a\n    if a % b == 0:\n        return b\n    return gcd(b, a % b)\n\ndef gcd_euclidean(a, b):\n    return gcd(max(a, b), min(a, b))\n\nprint(gcd(10, 20))\nprint(gcd_euclidean(10, 20))",
      -1.4560546875
    ],
    [
      "def gcd(a, b):\n    if a == b:\n        return a\n    elif a < b:\n        return gcd(a, b - a)\n    else:\n        return gcd(a - b, b)\n\n\ndef gcd2(a, b):\n    while a != b:\n        if a > b:\n            a = a - b\n        else:\n            b = b - a\n    return a\n\n\nprint(gcd(6, 8))\nprint(gcd2(6, 8))",
      -6.61328125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}