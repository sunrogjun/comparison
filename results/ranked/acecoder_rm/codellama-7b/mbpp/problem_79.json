{
  "problem": {
    "task_id": "MBPP/90",
    "prompt": "Write a python function to find the length of the longest word.",
    "canonical_solution": "def len_log(list1):\r\n    max=len(list1[0])\r\n    for i in list1:\r\n        if len(i)>max:\r\n            max=len(i)\r\n    return max",
    "test_list": [
      "assert len_log([\"python\",\"PHP\",\"bigdata\"]) == 7",
      "assert len_log([\"a\",\"ab\",\"abc\"]) == 3",
      "assert len_log([\"small\",\"big\",\"tall\"]) == 5"
    ],
    "challenge_test_list": [],
    "problem_id": 79
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def length_of_longest_word(words):\n    \"\"\"\n    This function takes in a list of words and returns the length of the longest word in the list.\n    \"\"\"\n    if words == []:\n        return 0\n    else:\n        longest_word = 0\n        for word in words:\n            if len(word) > longest_word:\n                longest_word = len(word)\n        return longest_word\n\ndef main():\n    print(length_of_longest_word([\"this\", \"is\", \"a\", \"test\", \"to\", \"find\", \"the\", \"longest\", \"word\"]))\n\nif __name__ == \"__main__\":\n    main()",
      21.375
    ],
    [
      "def find_longest_word(words):\n    \"\"\"\n    >>> find_longest_word(['a', 'b', 'ccc', 'd', 'eeee'])\n    4\n    \"\"\"\n    longest_word = 0\n    for word in words:\n        if len(word) > longest_word:\n            longest_word = len(word)\n    return longest_word\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      19.4375
    ],
    [
      "def length_of_longest_word(sentence):\n    \"\"\"\n    Return the length of the longest word in the given sentence.\n    >>> length_of_longest_word(\"The quick brown fox jumps over the lazy dog\")\n    6\n    >>> length_of_longest_word(\"May the force be with you\")\n    5\n    \"\"\"\n    words = sentence.split()\n    return max(len(word) for word in words)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      18.046875
    ],
    [
      "def longest_word(str):\n    words = str.split()\n    max = 0\n    for i in words:\n        if len(i) > max:\n            max = len(i)\n    return max\n\n\ndef longest_word_with_len(str):\n    words = str.split()\n    return max(len(i) for i in words)\n\n\nif __name__ == \"__main__\":\n    str = \"The quick brown fox jumps over the lazy dog\"\n    print(\"Original String: \", str)\n    print(\"Length of the longest word: \", longest_word(str))\n    print(\"Length of the longest word: \", longest_word_with_len(str))",
      16.875
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    >>> longest_word(['apple', 'cat', 'dog', 'house'])\n    5\n    >>> longest_word(['apple', 'cat', 'dog', 'house', 'long'])\n    5\n    >>> longest_word(['apple', 'cat', 'dog', 'house', 'long', 'longer'])\n    6\n    \"\"\"\n    return len(max(words, key=len))\n\n\ndef longest_word_v2(words):\n    \"\"\"\n    >>> longest_word_v2(['apple', 'cat', 'dog', 'house'])\n    5\n    >>> longest_word_v2(['apple', 'cat', 'dog', 'house', 'long'])\n    5\n    >>> longest_word_v2(['apple', 'cat', 'dog', 'house', 'long', 'longer'])\n    6\n    \"\"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      16.84375
    ],
    [
      "def longest_word(words: list) -> int:\n    \"\"\"\n    Return the length of the longest word\n    >>> longest_word([\"I\", \"am\", \"a\", \"man\", \"of\", \"words\"])\n    6\n    >>> longest_word([\"Hell\", \"o\", \"world\"])\n    4\n    >>> longest_word([\"Ali\", \"has\", \"a\", \"little\", \"lamb\"])\n    5\n    >>> longest_word([\"Ali\", \"has\", \"a\", \"little\", \"lamb\"])\n    5\n    \"\"\"\n    return max(len(word) for word in words)\n\n\ndef main():\n    \"\"\"\n    Print the length of the longest word\n    \"\"\"\n    print(longest_word([\"I\", \"am\", \"a\", \"man\", \"of\", \"words\"]))  # 6\n    print(longest_word([\"Hell\", \"o\", \"world\"]))  # 4\n    print(longest_word([\"Ali\", \"has\", \"a\", \"little\", \"lamb\"]))  # 5\n    print(longest_word([\"Ali\", \"has\", \"a\", \"little\", \"lamb\"]))  # 5\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()",
      16.625
    ],
    [
      "def length_of_longest_word(s):\n    words = s.split()\n    longest_word = \"\"\n    for word in words:\n        if len(word) > len(longest_word):\n            longest_word = word\n    return len(longest_word)\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    print(length_of_longest_word(string))",
      15.515625
    ],
    [
      "def longest_word(text):\n    words = text.split()\n    if len(words) == 0:\n        return 0\n    max_len = len(words[0])\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\nif __name__ == \"__main__\":\n    text = \"This is the sample text for testing\"\n    print(longest_word(text))",
      14.65625
    ],
    [
      "def find_length_of_longest_word(words):\n    \"\"\"\n    This function takes a list of words and returns the length of the longest word\n    \"\"\"\n    if len(words) < 1:\n        return 0\n\n    longest_word = words[0]\n    for word in words:\n        if len(word) > len(longest_word):\n            longest_word = word\n\n    return len(longest_word)\n\ndef main():\n    \"\"\"\n    This is the main function which will call other functions and test them\n    \"\"\"\n    words = [\"hello\", \"world\", \"hi\", \"I\", \"am\", \"learning\", \"python\", \"the\", \"hard\", \"way\"]\n    print(\"The word with the longest length is:\", find_length_of_longest_word(words))\n\nmain()",
      13.8671875
    ],
    [
      "def length_longest_word(words):\n    # TODO: Write a python function to find the length of the longest word\n    words = words.split()\n    length = 0\n    for word in words:\n        if len(word) > length:\n            length = len(word)\n\n    return length\n\n\nassert length_longest_word(\"I love data\") == 5, \"The length of the longest word is 5\"\nassert length_longest_word(\"I love data science\") == 8, \"The length of the longest word is 8\"",
      12.890625
    ],
    [
      "def length_of_longest_word(words):\n    \"\"\"\n    Return the length of the longest word in the input string.\n    \"\"\"\n    if not words:\n        return 0\n\n    longest_length = 0\n    for word in words.split():\n        if len(word) > longest_length:\n            longest_length = len(word)\n\n    return longest_length",
      12.3984375
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    Find the length of the longest word.\n\n    >>> longest_word(['apple', 'cat', 'dog', 'house'])\n    5\n    \"\"\"\n    return max(map(len, words))\n\n\ndef longest_word_inplace(words):\n    \"\"\"\n    Find the length of the longest word.\n\n    >>> longest_word_inplace(['apple', 'cat', 'dog', 'house'])\n    5\n    \"\"\"\n    longest_word = 0\n    for word in words:\n        word_length = 0\n        for _ in word:\n            word_length += 1\n        if word_length > longest_word:\n            longest_word = word_length\n    return longest_word\n\n\ndef longest_word_reduce(words):\n    \"\"\"\n    Find the length of the longest word.\n\n    >>> longest_word_reduce(['apple', 'cat', 'dog', 'house'])\n    5\n    \"\"\"\n    return max(map(len, words))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      11.5859375
    ],
    [
      "def find_longest_word(input_str):\n    words = input_str.split()\n    longest_word = max(words, key=len)\n    return len(longest_word)\n\n\nif __name__ == \"__main__\":\n    input_str = \"Hello world. I am a string\"\n    print(find_longest_word(input_str))",
      10.921875
    ],
    [
      "def length_of_longest_word(str):\n    list = str.split()\n    max_length = 0\n    for i in list:\n        if len(i) > max_length:\n            max_length = len(i)\n    return max_length\n\nprint(length_of_longest_word('The quick brown fox jumped over the lazy dog.'))",
      10.6640625
    ],
    [
      "def longestWord(words):\n    max_word = 0\n    for word in words:\n        if len(word) > max_word:\n            max_word = len(word)\n\n    return max_word\n\nif __name__ == '__main__':\n    print(longestWord([\"Python\", \"is\", \"a\", \"programming\", \"language\"]))\n    print(longestWord([\"This\", \"is\", \"a\", \"programming\", \"language\"]))\n    print(longestWord([\"This\", \"is\", \"a\", \"programming\", \"language\", \"in\", \"Python\"]))\n    print(longestWord([\"This\", \"is\", \"a\", \"programming\", \"language\", \"in\", \"Python\", \"3.6\"]))",
      9.5390625
    ],
    [
      "def find_length(words):\n    # Split the sentence into a list of words.\n    word_list = words.split(\" \")\n    # Find the length of the longest word.\n    length = len(max(word_list, key=len))\n    return length\n\nprint(find_length(\"The quick brown fox jumped over the lazy dog.\"))",
      9.2734375
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    >>> longest_word([\"a\", \"banana\", \"artichoke\", \"mango\"])\n    6\n    >>> longest_word([\"a\", \"banana\", \"artichoke\", \"mango\", \"maple\"])\n    5\n    \"\"\"\n    return max(len(w) for w in words)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      8.640625
    ],
    [
      "def longest_word(words):\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\nif __name__ == \"__main__\":\n    print(longest_word([\"cat\", \"dog\", \"fish\", \"horse\", \"bird\"]))",
      8.5390625
    ],
    [
      "def longest_word(words):\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = longest_word(test_input)\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function(([\"cat\", \"dog\", \"house\"], 4))\ntest_function(([\"cat\", \"dog\", \"house\", \"bear\"], 5))\ntest_function(([], 0))\ntest_function(([\"This\", \"is\", \"a\", \"test\", \"sentence\"], 8))\ntest_function(([\"This\", \"is\", \"a\", \"test\"], 5))",
      8.4140625
    ],
    [
      "def find_longest_word(words):\n    word_lengths = []\n    for word in words:\n        word_lengths.append(len(word))\n    return max(word_lengths)\n\n\nif __name__ == \"__main__\":\n    words = [\"hello\", \"world\", \"python\"]\n    print(f\"The longest word is {find_longest_word(words)}\")",
      8.3828125
    ],
    [
      "def length_of_longest_word(sentence):\n    \"\"\"\n    Finds the length of the longest word in a sentence.\n\n    >>> length_of_longest_word('This is my first sentence.')\n    11\n    >>> length_of_longest_word('This is my second sentence.')\n    11\n    >>> length_of_longest_word('This is my third sentence.')\n    11\n    >>> length_of_longest_word('This is my fourth sentence.')\n    11\n    \"\"\"\n    words = sentence.split()\n    longest_word = max(words, key=len)\n    return len(longest_word)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      8.265625
    ],
    [
      "def longestWord(words):\n    \"\"\"\n    words: list of strings\n    \n    returns: integer\n    \"\"\"\n    # Your code here\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len",
      7.7890625
    ],
    [
      "def find_longest_word(word_list):\n    longest_word = \"\"\n    for word in word_list:\n        if len(word) > len(longest_word):\n            longest_word = word\n    return longest_word\n\n\nprint(find_longest_word([\"one\", \"two\", \"three\", \"four\", \"five\"]))",
      7.5078125
    ],
    [
      "def longest_word(lst):\n    \"\"\"\n    Return the length of the longest word in a list.\n\n    >>> longest_word(['apple', 'cat', 'dog', 'google', 'facebook'])\n    6\n    >>> longest_word(['a', 'b', 'c'])\n    1\n    >>> longest_word([''])\n    1\n    >>> longest_word([])\n    Traceback (most recent call last):\n        ...\n    ValueError: Please provide a non-empty list.\n    \"\"\"\n    if not lst:\n        raise ValueError(\"Please provide a non-empty list.\")\n\n    return len(max(lst, key=len))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      6.87890625
    ],
    [
      "def length_of_longest_word(sentence):\n    words = sentence.split()\n    max_length = 0\n\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n\n    return max_length\n\n\nprint(length_of_longest_word('The quick brown fox jumped over the lazy dog.'))\nprint(length_of_longest_word('Google is the most popular company in the world.'))",
      6.78515625
    ],
    [
      "def find_length(sentence):\n    # This function will find the longest word in a sentence.\n    sentence = sentence.split()\n    max_length = 0\n    for i in sentence:\n        if len(i) > max_length:\n            max_length = len(i)\n    return max_length\n\n\ndef main():\n    # This is the main function which will call the other functions and compute the result.\n    sentence = \"The quick brown fox jumps over the lazy dog.\"\n    print(find_length(sentence))\n\n\nif __name__ == '__main__':\n    main()",
      6.578125
    ],
    [
      "def longest_word(s):\n    words = s.split()\n    longest = 0\n    for word in words:\n        if len(word) > longest:\n            longest = len(word)\n    return longest\n\n\ndef test_function(test_case):\n    s = test_case[0]\n    solution = test_case[1]\n    output = longest_word(s)\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ns = \"What is up doc?\"\nsolution = 4\ntest_case = [s, solution]\ntest_function(test_case)\n\ns = \"What is up, doc?\"\nsolution = 4\ntest_case = [s, solution]\ntest_function(test_case)\n\ns = \"What is up, doc???\"\nsolution = 4\ntest_case = [s, solution]\ntest_function(test_case)",
      6.390625
    ],
    [
      "def find_length_of_longest_word(text):\n    words = text.split()\n    longest_word = max(words, key=len)\n    return len(longest_word)\n\n\ntext = \"The quick brown fox jumps over the lazy dog\"\nprint(find_length_of_longest_word(text))",
      6.08203125
    ],
    [
      "def find_longest_word(string: str) -> int:\n    \"\"\"\n    This function returns the length of the longest word in a string.\n    >>> find_longest_word(\"The quick brown fox jumps over the lazy dog.\")\n    6\n    \"\"\"\n    words = string.split()\n    return max(len(word) for word in words)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
      5.90234375
    ],
    [
      "def longest_word(words):\n    words = words.split()\n    longest = 0\n    for word in words:\n        if len(word) > longest:\n            longest = len(word)\n    return longest\n\nprint(longest_word(\"The quick brown fox jumped over the lazy dog.\"))",
      4.734375
    ],
    [
      "def longest_word(lst):\n    longest_word = 0\n    for word in lst:\n        if len(word) > longest_word:\n            longest_word = len(word)\n    return longest_word\n\n\ndef main():\n    lst = ['hello', 'world', 'lol', 'k', 'p']\n    print(longest_word(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
      4.671875
    ],
    [
      "def longestWord(words):\n    max = 0\n    for word in words:\n        if len(word) > max:\n            max = len(word)\n    return max\n\n\nprint(longestWord([\"a\", \"bc\", \"abc\"]))\nprint(longestWord([\"a\", \"bc\", \"abc\", \"abcd\"]))",
      4.609375
    ],
    [
      "def longest_word(sentence):\n    word_list = sentence.split(\" \")\n    word_list.sort(key=len, reverse=True)\n    return len(word_list[0])\n\n\ndef main():\n    sentence = \"This is a very long sentence.\"\n    print(\"Length of the longest word: {}\".format(longest_word(sentence)))\n\n\nif __name__ == \"__main__\":\n    main()",
      4.3828125
    ],
    [
      "def longest_word(sentence):\n    words = sentence.split()\n    max_length = 0\n\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n\n    return max_length\n\n\ndef main():\n    sentence = input(\"Enter a sentence: \")\n    length = longest_word(sentence)\n    print(f\"The longest word in the sentence is {length} letters long.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      4.359375
    ],
    [
      "from typing import List\n\n\ndef longest_word(lst: List[str]) -> int:\n    \"\"\"\n    Return length of the longest word.\n    >>> longest_word(['a', 'bc', 'abc', 'abcd'])\n    4\n    \"\"\"\n    return len(sorted(lst, key=len)[-1])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      4.0546875
    ],
    [
      "def longestWord(sentence):\n    \"\"\"\n    >>> longestWord(\"The quick brown fox jumped over the lazy dog.\")\n    6\n    >>> longestWord(\"apple\")\n    4\n    >>> longestWord(\"a b c d e f g\")\n    1\n    >>> longestWord(\"\")\n    0\n    \"\"\"\n    return len(max(sentence.split(), key=len))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      3.697265625
    ],
    [
      "def findLongestWord(words):\n    # find the length of the longest word\n    return max([len(x) for x in words])\n\n\nprint(findLongestWord([\"apple\", \"papaya\", \"paparazzi\"]))",
      3.666015625
    ],
    [
      "def longest_word(words):\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\ndef main():\n    words = [\"hello\", \"world\", \"my\", \"name\", \"is\", \"jonathan\"]\n    assert longest_word(words) == 6\n    print(\"Pass\")\n\n\nif __name__ == \"__main__\":\n    main()",
      3.337890625
    ],
    [
      "def longest_word(text):\n    \"\"\"\n    Find the length of the longest word.\n    :param text: string\n    :return: integer\n    \"\"\"\n    if text is None:\n        return 0\n    return max([len(x) for x in text.split(\" \")])",
      3.2109375
    ],
    [
      "def longest_word(words):\n    words = words.split()\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\ndef main():\n    print(longest_word(\"The quick brown fox jumped over the lazy dog.\"))\n    print(longest_word(\"May the force be with you\"))\n    print(longest_word(\"Google do a roll\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      3.17578125
    ],
    [
      "def longest_word(words):\n    words = words.split()\n    words_length = []\n\n    for word in words:\n        words_length.append(len(word))\n\n    return max(words_length)\n\n\nprint(longest_word(\"I am doing fine how are you\"))",
      2.640625
    ],
    [
      "def longest_word(sentence):\n    words = sentence.split()\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\nsentence = \"I am a programmer and I love programming\"\nprint(longest_word(sentence))",
      2.4609375
    ],
    [
      "def longest_word(words):\n    max_word = words[0]\n    for word in words:\n        if len(word) > len(max_word):\n            max_word = word\n    return max_word\n\n\nprint(longest_word([\"a\", \"bc\", \"ab\", \"abcd\"]))",
      2.419921875
    ],
    [
      "def longest_word(lst):\n    longest = \"\"\n    for word in lst:\n        if len(word) > len(longest):\n            longest = word\n    return longest\n\n\nlst = input(\"Enter some words: \").split()\nprint(\"Longest word is: \", longest_word(lst))",
      2.29296875
    ],
    [
      "def find_length_of_longest_word(string):\n    \"\"\"\n    This function takes in a string and returns the length of the longest word in the string\n    \"\"\"\n    words = string.split()\n    lengths = [len(word) for word in words]\n    return max(lengths)",
      2.26171875
    ],
    [
      "def longest_word(s):\n    # split the string into words\n    words = s.split()\n    # get the length of the longest word\n    longest_word_length = len(max(words, key=len))\n    return longest_word_length\n\n\nprint(longest_word(\"This is a simple function to find the length of the longest word in a string\"))",
      2.1328125
    ],
    [
      "def longest_word(sentence):\n    words = sentence.split()\n    longest_word = words[0]\n    for word in words:\n        if len(word) > len(longest_word):\n            longest_word = word\n    return longest_word\n\n\nprint(longest_word(\"Hello my name is John\"))\nprint(longest_word(\"Aliens are coming\"))\nprint(longest_word(\"I like tacos\"))",
      1.8720703125
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    Return the length of the longest word in the string.\n    \"\"\"\n    if not words:\n        return 0\n    else:\n        return max(len(x) for x in words.split())",
      1.8427734375
    ],
    [
      "def longest_word(words):\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\nprint(longest_word([\"Python\", \"is\", \"awesome\"]))",
      1.6181640625
    ],
    [
      "def longest_word(words):\n    words = words.split()\n    words.sort(key=len, reverse=True)\n    return len(words[0])\n\n\ndef longest_word_v2(words):\n    words = words.split()\n    words.sort(key=len, reverse=True)\n    return words[0]",
      1.482421875
    ],
    [
      "def find_longest_word(input_string):\n    \"\"\"\n    Find the length of the longest word in a string.\n    \"\"\"\n    input_string = input_string.split()\n    max_len = 0\n    for word in input_string:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\ndef main():\n    \"\"\"\n    Print the longest word in the following strings.\n    \"\"\"\n    print(find_longest_word(\"I like pie.\"))\n    print(find_longest_word(\"I like pies.\"))\n    print(find_longest_word(\"I like pie\"))\n\nif __name__ == \"__main__\":\n    main()",
      1.3515625
    ],
    [
      "from functools import reduce\n\n\ndef longest_word(words):\n    return reduce(lambda x, y: x if len(x) > len(y) else y, words)\n\n\nprint(longest_word([\"one\", \"two\", \"three\", \"four\"]))",
      1.2822265625
    ],
    [
      "def longest_word(words: list) -> int:\n    \"\"\"Returns the length of the longest word.\"\"\"\n    return max(len(word) for word in words)",
      1.1357421875
    ],
    [
      "def find_max_word_len(words):\n    if words == []:\n        return 0\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\ndef main():\n    print(find_max_word_len([\"python\", \"java\", \"kotlin\", \"c#\", \"javascript\"]))\n\n\nif __name__ == \"__main__\":\n    main()",
      1.134765625
    ],
    [
      "def length_of_longest_word(words):\n    \"\"\"\n    >>> length_of_longest_word([\"The\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\"])\n    6\n    \"\"\"\n    return len(max(words, key=len))\n\nprint(length_of_longest_word([\"The\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\"]))",
      0.98193359375
    ],
    [
      "def max_length(words):\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length",
      0.213623046875
    ],
    [
      "def longest_word(words):\n    words = words.split()\n    words.sort(key=lambda x: len(x), reverse=True)\n    return words[0]\n\n\nprint(longest_word(\"The quick brown fox jumped over the lazy dog\"))",
      0.1383056640625
    ],
    [
      "def find_longest_word(string):\n    words = string.split(' ')\n    longest_word = words[0]\n\n    for word in words:\n        if len(word) > len(longest_word):\n            longest_word = word\n\n    return longest_word\n\n\ndef find_longest_word_with_len(string):\n    words = string.split(' ')\n    longest_word = words[0]\n\n    for word in words:\n        if len(word) > len(longest_word):\n            longest_word = word\n\n    return len(longest_word)\n\n\nif __name__ == '__main__':\n    string = 'The quick brown fox jumps over the lazy dog'\n    print(find_longest_word(string))\n    print(find_longest_word_with_len(string))",
      0.1358642578125
    ],
    [
      "def length_of_longest_word(words):\n    \"\"\"\n    Return the length of the longest word in the list.\n\n    >>> length_of_longest_word([\"Hello\", \"World\"])\n    5\n    >>> length_of_longest_word([\"Water\", \"Bamboozle\"])\n    8\n    >>> length_of_longest_word([\"Apple\", \"Pie\", \"Eye\"])\n    4\n    >>> length_of_longest_word([\"A\", \"B\", \"C\"])\n    1\n    >>> length_of_longest_word([\"a\", \"b\", \"c\"])\n    1\n    >>> length_of_longest_word([\"A\"])\n    1\n    >>> length_of_longest_word([\"\"])\n    0\n    >>> length_of_longest_word([\" \"])\n    1\n    >>> length_of_longest_word([\"\\t\"])\n    1\n    >>> length_of_longest_word([\"\\n\"])\n    1\n    \"\"\"\n    return len(max(words, key=len))\n\n\ndef main():\n    assert length_of_longest_word([\"Hello\", \"World\"]) == 5\n    assert length_of_longest_word([\"Water\", \"Bamboozle\"]) == 8\n    assert length_of_longest_word([\"Apple\", \"Pie\", \"Eye\"]) == 4\n    assert length_of_longest_word([\"A\", \"B\", \"C\"]) == 1\n    assert length_of_longest_word([\"A\", \"B\"]) == 1\n    assert length_of_longest_word([\"A\", \"B\", \"C\", \"D\"]) == 1\n    assert length_of_longest_word([\"A\", \"\", \"B\", \"C\"]) == 1\n    assert length_of_longest_word([\"A\", \"B\", \"C\", \"D\", \"E\"]) == 1\n    assert length_of_longest_word([\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"]) == 1\n    assert length_of_longest_word(",
      0.08563232421875
    ],
    [
      "def longest_word(sentence):\n    \"\"\"\n    Calculate the length of the longest word in the sentence.\n\n    :param sentence: str -- string to check\n    :return: int -- longest word length\n    \"\"\"\n    return max([len(word) for word in sentence.split()])",
      0.05419921875
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    find the length of the longest word\n    \"\"\"\n    if words:\n        return len(max(words.split(), key=len))\n    return 0",
      -0.039276123046875
    ],
    [
      "def length_of_longest_word(sentence):\n    words = sentence.split()\n    longest_word = max(words, key=len)\n    return len(longest_word)\n\n\ndef main():\n    print(length_of_longest_word(\"The quick brown fox jumped over the lazy dog.\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.258544921875
    ],
    [
      "def length_of_longest_word(sentence):\n    \"\"\"\n    >>> length_of_longest_word('The quick brown fox jumped over the lazy dog.')\n    6\n\n    >>> length_of_longest_word('May the Force be with you')\n    5\n\n    >>> length_of_longest_word('Google do a barrel roll')\n    7\n    \"\"\"\n    words = sentence.split(\" \")\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.313232421875
    ],
    [
      "def max_length(words):\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\nwords = [\"dog\", \"cat\", \"mouse\", \"lion\", \"elephant\"]\nprint(max_length(words))",
      -0.361572265625
    ],
    [
      "from collections import OrderedDict\n\n\ndef longest_word(sentence):\n    \"\"\"\n    >>> longest_word(\"The quick brown fox jumped over the lazy dog\")\n    6\n    \"\"\"\n    return len(max(sentence.split(), key=len))\n\n\ndef longest_word_v2(sentence):\n    \"\"\"\n    >>> longest_word_v2(\"The quick brown fox jumped over the lazy dog\")\n    6\n    \"\"\"\n    return max(OrderedDict((w, len(w)) for w in sentence.split()).keys(), key=len)\n\n\ndef longest_word_v3(sentence):\n    \"\"\"\n    >>> longest_word_v3(\"The quick brown fox jumped over the lazy dog\")\n    6\n    \"\"\"\n    return max(\n        {w: len(w) for w in sentence.split()}.items(), key=lambda x: x[1]\n    ).__getitem__(0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.482666015625
    ],
    [
      "def longest_word(string):\n    \"\"\"\n    This function takes a string as an argument and returns the length of the longest word in the string.\n    \"\"\"\n    if not string:\n        return 0\n    return max([len(word) for word in string.split(\" \")])",
      -0.51708984375
    ],
    [
      "def longest_word(s):\n    return max(s.split(), key=len)\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = longest_word(test_input)\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function((\"\", \"\"))\ntest_function((\"The quick brown fox jumped over the lazy dog\", \"quick\"))\ntest_function((\"apple\", \"apple\"))\ntest_function((\"chopper onion\", \"onion\"))\ntest_function((\"broccoli\", \"broccoli\"))\ntest_function((\"broccoli cheese\", \"broccoli\"))",
      -0.53271484375
    ],
    [
      "def longest_word(s):\n    words = s.split()\n    longest = \"\"\n    for word in words:\n        if len(word) > len(longest):\n            longest = word\n    return len(longest)",
      -0.53759765625
    ],
    [
      "def longest_word(sentence):\n    \"\"\"Return the length of the longest word in the sentence.\"\"\"\n    if sentence == '':\n        return 0\n    longest = 0\n    for word in sentence.split():\n        if len(word) > longest:\n            longest = len(word)\n    return longest",
      -0.544921875
    ],
    [
      "def longest_word(lst):\n    return len(max(lst, key=len))\n\n\nprint(longest_word([\"Hello\", \"World\", \"Python\", \"C\", \"Java\"]))",
      -0.65283203125
    ],
    [
      "def longest_word(lst):\n    return max(lst, key=len)\n\n\nif __name__ == '__main__':\n    lst = ['abc', 'python', 'def', 'java']\n    print(longest_word(lst))",
      -0.74853515625
    ],
    [
      "def find_longest_word(words):\n    length = 0\n    for word in words:\n        if length < len(word):\n            length = len(word)\n    return length\n\n\nprint(find_longest_word([\"Python\", \"is\", \"awesome\"]))\nprint(find_longest_word([\"Java\", \"is\", \"awesome\"]))\nprint(find_longest_word([\"PHP\", \"is\", \"awesome\"]))",
      -0.74951171875
    ],
    [
      "def find_length(input_list):\n    max_len = 0\n    for i in input_list:\n        if len(i) > max_len:\n            max_len = len(i)\n    return max_len\n\n\ndef main():\n    list1 = [\"Python\", \"Programming\", \"is\", \"fun\"]\n    assert find_length(list1) == 6\n    print(\"Done\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.77197265625
    ],
    [
      "def longest_word(words):\n    words = words.split(\" \")\n    word_len = []\n    for i in words:\n        word_len.append(len(i))\n    return max(word_len)",
      -0.8447265625
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    Finds the length of the longest word in the list.\n\n    Args:\n        words (list): list of strings\n\n    Returns:\n        int: length of the longest word\n    \"\"\"\n    return max(len(word) for word in words)",
      -0.85693359375
    ],
    [
      "def longest_word(string):\n    string = string.split()\n    length = 0\n    for i in string:\n        if len(i) > length:\n            length = len(i)\n    return length\n\n\nprint(longest_word(\"I am a weak person\"))\nprint(longest_word(\"This is a very long sentence\"))",
      -0.85693359375
    ],
    [
      "def longest_word(words):\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\nwords = ['a', 'bb', 'ccc']\nprint(longest_word(words))",
      -0.85693359375
    ],
    [
      "def max_length(arr):\n    max_len = 0\n    for word in arr:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len\n\n\ndef main():\n    arr = [\"hello\", \"world\", \"nice\"]\n    print(\"The longest word is:\", max_length(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def find_max_word_len(string):\n    max_word_len = 0\n    for word in string.split():\n        if len(word) > max_word_len:\n            max_word_len = len(word)\n    return max_word_len",
      -0.85693359375
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    Find the length of the longest word.\n\n    Args:\n        words(list): words\n\n    Returns:\n        int: length of the longest word\n    \"\"\"\n    return max([len(word) for word in words])",
      -0.85693359375
    ],
    [
      "def longest_word(words):\n    return max([len(word) for word in words.split()])\n\n\nprint(longest_word(\"The quick brown fox jumps over the lazy dog\"))",
      -0.857421875
    ],
    [
      "def max_length(string):\n    string = string.split()\n    string_length = [len(x) for x in string]\n    return max(string_length)",
      -0.857421875
    ],
    [
      "def find_longest_word(words):\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n    return max_len",
      -0.85791015625
    ],
    [
      "def longest_word(sentence):\n    words = sentence.split(' ')\n    longest_word = words[0]\n    for word in words:\n        if len(word) > len(longest_word):\n            longest_word = word\n    return longest_word",
      -0.85791015625
    ],
    [
      "def longest_word(sentence):\n    words = sentence.split()\n    if len(words) == 0:\n        return 0\n    else:\n        return max(len(word) for word in words)\n\n\n# print(longest_word(\"The quick brown fox jumped over the lazy dog.\"))",
      -0.85791015625
    ],
    [
      "def length_of_longest_word(word):\n    return max(len(word) for word in word.split())\n\n\nif __name__ == \"__main__\":\n    print(length_of_longest_word(\"The quick brown fox jumps over the lazy dog\"))",
      -0.85791015625
    ],
    [
      "def longest_word(words):\n    if len(words) == 0:\n        return 0\n    else:\n        return max([len(word) for word in words])",
      -0.85791015625
    ],
    [
      "def length_of_longest_word(words):\n    if len(words) == 0:\n        return 0\n    else:\n        return max([len(w) for w in words])\n\n\ndef test_length_of_longest_word():\n    \"\"\"\n    >>> test_length_of_longest_word()\n    \"\"\"\n    assert length_of_longest_word([\"Hello\", \"World\"]) == 5\n    assert length_of_longest_word([\"Python\"]) == 6\n    assert length_of_longest_word([\"\"]) == 0\n    assert length_of_longest_word([\" \"]) == 1\n    assert length_of_longest_word([\"a\", \"b\"]) == 1\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
      -0.8583984375
    ],
    [
      "def max_length(words):\n    \"\"\"\n    Find the length of the longest word.\n    \"\"\"\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_length = len(word)\n    return max_length\n\n\nprint(max_length([\"hello\", \"world\", \"hi\", \"everybody\", \"bye\"]))",
      -0.8583984375
    ],
    [
      "from collections import Counter\n\ndef longest_word(words):\n    \"\"\"\n    :param words: list of words\n    :return: length of longest word\n    \"\"\"\n    return max(len(word) for word in words)\n\n\ndef main():\n    print(longest_word([\"hello\", \"world\"]))\n    print(longest_word([\"dog\", \"race\", \"car\"]))\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "def length_of_longest_word(words):\n    \"\"\"\n    Takes in a list of strings and returns the length of the longest string\n    \"\"\"\n    return max([len(word) for word in words])",
      -1.0546875
    ],
    [
      "def longest_word(text):\n    text_list = text.split()\n    longest_word = max(text_list, key=len)\n    return len(longest_word)\n\nprint(longest_word(\"Python\"))",
      -1.17578125
    ],
    [
      "def longest_word(words):\n    \"\"\"\n    :param words: list - list of words to determine the longest word from.\n    :return: str - the longest word in the list.\n    \"\"\"\n    return max(words, key=len)",
      -1.408203125
    ],
    [
      "def length_of_longest_word(str):\n    return len(max(str.split(), key=len))\n\n\nif __name__ == \"__main__\":\n    print(\"Enter a string: \")\n    str = input()\n    print(length_of_longest_word(str))",
      -1.4326171875
    ],
    [
      "def longestWord(words):\n    word_length = []\n    for word in words:\n        word_length.append(len(word))\n    return max(word_length)\n\nprint(longestWord([\"long\", \"longer\", \"longest\"]))\nprint(longestWord([\"hello\", \"world\"]))\nprint(longestWord([\"long\", \"word\", \"hello\", \"world\"]))",
      -1.4580078125
    ],
    [
      "def length_of_longest_word(sentence):\n    \"\"\"\n    This function takes a string as an input and returns the length of the longest word in it.\n\n    >>> length_of_longest_word(\"The quick brown fox jumps over the lazy dog.\")\n    6\n    >>> length_of_longest_word(\"May the force be with you.\")\n    5\n    >>> length_of_longest_word(\"Google do a barrel roll.\")\n    7\n    >>> length_of_longest_word(\"I am your father.\")\n    7\n    \"\"\"\n    return max([len(word) for word in sentence.split(\" \")])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.5126953125
    ],
    [
      "def find_longest_word(sentence):\n    word_list = sentence.split(\" \")\n    length_list = []\n\n    for word in word_list:\n        length_list.append(len(word))\n    return max(length_list)\n\n\nif __name__ == \"__main__\":\n    print(find_longest_word(\"This is a long sentence\"))",
      -1.552734375
    ],
    [
      "def find_length(words):\n    return max([len(word) for word in words.split()])\n\n\nprint(find_length(\"I love you\"))\nprint(find_length(\"I love you and you love me\"))",
      -1.5546875
    ],
    [
      "def longestWord(words):\n    max_word = words[0]\n    for word in words:\n        if len(word) > len(max_word):\n            max_word = word\n    return len(max_word)",
      -1.5546875
    ],
    [
      "def longest_word(string):\n    string = string.split()\n    longest = []\n\n    for word in string:\n        if len(word) > len(longest):\n            longest = word\n    return longest\n\n\nprint(longest_word(\"I am learning Python\"))",
      -3.8828125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}