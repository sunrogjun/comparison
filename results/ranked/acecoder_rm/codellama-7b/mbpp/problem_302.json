{
  "problem": {
    "task_id": "MBPP/313",
    "prompt": "Write a python function to print positive numbers in a list.",
    "canonical_solution": "def pos_nos(list1):\r\n  for num in list1: \r\n    if num >= 0: \r\n       return num ",
    "test_list": [
      "assert pos_nos([-1,-2,1,2]) == 1,2",
      "assert pos_nos([3,4,-5]) == 3,4",
      "assert pos_nos([-2,-3,1]) == 1"
    ],
    "challenge_test_list": [],
    "problem_id": 302
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def print_positive_numbers(list_of_numbers: list) -> list:\n    \"\"\"\n    Print positive numbers in a list\n    :param list_of_numbers: list of numbers\n    :return: list of positive numbers\n    >>> print_positive_numbers([1, 2, 3, -4, 5, -6])\n    [1, 2, 3, 5]\n    \"\"\"\n    positive_numbers = []\n    for number in list_of_numbers:\n        if number > 0:\n            positive_numbers.append(number)\n    return positive_numbers\n\n\nif __name__ == \"__main__\":\n    print(print_positive_numbers([1, 2, 3, -4, 5, -6]))",
      15.96875
    ],
    [
      "def print_positive(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\ndef print_positive_list(nums):\n    return [num for num in nums if num > 0]\n\n\ndef main():\n    nums = [-1, -2, -3, 0, 1, 2, 3]\n    print_positive(nums)\n    print(print_positive_list(nums))\n\n\nif __name__ == \"__main__\":\n    main()",
      14.4453125
    ],
    [
      "def print_positive_numbers(input_list):\n    for num in input_list:\n        if num > 0:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    print_positive_numbers([1, 2, 3, -4, 5, -6, 7])",
      13.9140625
    ],
    [
      "def positive_numbers(list):\n    for i in list:\n        if i > 0:\n            print(i)\n\n\nif __name__ == '__main__':\n    list = [-1, -2, 1, 2, -4, 5, 6]\n    positive_numbers(list)",
      13.7578125
    ],
    [
      "def printPositiveNumbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\nif __name__ == \"__main__\":\n    printPositiveNumbers([1, 2, 3, -4, 5, -6, 7, -8, 9, -10])",
      13.140625
    ],
    [
      "def positive_num(nums):\n    for i in nums:\n        if i > 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    positive_num([1, 2, 3, -4, 5, 6, -7, 8, -9, 10])",
      12.6875
    ],
    [
      "def positive_number(nums):\n    for i in nums:\n        if i > 0:\n            print(i)\n\n\n\nif __name__ == \"__main__\":\n    nums = [-1, 2, -3, 4, -5]\n    positive_number(nums)",
      12.671875
    ],
    [
      "def positive_numbers(numbers):\n    result = []\n    for num in numbers:\n        if num > 0:\n            result.append(num)\n    return result\n\n\ndef main():\n    print(positive_numbers([1, -5, 8, 11, -14]))  # [1, 8, 11]\n    print(positive_numbers([-5, 8, 11, -14]))  # [8, 11]\n\n\nif __name__ == \"__main__\":\n    main()",
      11.96875
    ],
    [
      "def print_positive(input_list):\n    for i in range(len(input_list)):\n        if input_list[i] > 0:\n            print(input_list[i], end=\" \")\n\n\ninput_list = [-1, -2, 3, 4, 5]\nprint_positive(input_list)",
      11.546875
    ],
    [
      "def positive_numbers(list_of_numbers):\n    positive_list = []\n    for num in list_of_numbers:\n        if num > 0:\n            positive_list.append(num)\n    return positive_list\n\n\ndef main():\n    list_of_numbers = [2, -1, 3, 5, -2, 6, -5]\n    result = positive_numbers(list_of_numbers)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()",
      11.203125
    ],
    [
      "def print_positive(list):\n    for num in list:\n        if num > 0:\n            print(num)\n\n\n\nif __name__ == '__main__':\n    list = [-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 6]\n    print_positive(list)",
      10.5078125
    ],
    [
      "def print_positive(nums):\n    for i in nums:\n        if i > 0:\n            print(i)\n\n\nprint_positive([1, 2, 3, -4, 5])",
      9.640625
    ],
    [
      "def positive_numbers(arr):\n    positive = []\n    for i in arr:\n        if i > 0:\n            positive.append(i)\n    return positive\n\n\nprint(positive_numbers([1, 2, 3, 4, 5, -6, -7, 8, 9, 10]))",
      8.875
    ],
    [
      "# Solution\n\ndef print_positive_numbers(nums):\n    for n in nums:\n        if n > 0:\n            print(n)\n\n\n# Tests\nprint_positive_numbers([3, -4, 0, 5, 7, 2])\nprint_positive_numbers([-3, -4, -5, -6])",
      8.59375
    ],
    [
      "def positive_number(nums):\n    positive_nums = []\n    for i in nums:\n        if i > 0:\n            positive_nums.append(i)\n    return positive_nums\n\nif __name__ == \"__main__\":\n    nums = [1, 2, -3, 4, 5, -6]\n    print(positive_number(nums))",
      8.15625
    ],
    [
      "def positive_numbers(list):\n    for num in list:\n        if num > 0:\n            print(num)\n\nif __name__ == '__main__':\n    l = [1, 2, -5, 10, -20, 100]\n    positive_numbers(l)",
      8.109375
    ],
    [
      "def printPositive(input_list):\n    for i in input_list:\n        if i > 0:\n            print(i, end=' ')\n\nprint(\"Input list:\")\ninput_list = [12, -7, 5, 64, -14]\nprint(input_list)\nprint(\"Positive numbers:\")\nprintPositive(input_list)",
      7.97265625
    ],
    [
      "def print_positive_numbers(arr):\n    for i in arr:\n        if i > 0:\n            print(i)\n\n\nprint_positive_numbers([-1, 2, 0, -3, 5])",
      7.38671875
    ],
    [
      "# Solution\n\ndef positive_numbers(arr):\n    result = []\n    for num in arr:\n        if num > 0:\n            result.append(num)\n    return result\n\n\n# Test Cases\nprint(positive_numbers([3, -4, 0, 5, 7]))\nprint(positive_numbers([-3, -4, -5]))\nprint(positive_numbers([]))",
      7.17578125
    ],
    [
      "def print_positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nprint_positive_numbers([1, 2, 3, -4, 5, -6, -7, -8, 9, -10])",
      7.15234375
    ],
    [
      "# Solution\n\ndef positive_numbers(arr):\n    for num in arr:\n        if num >= 0:\n            print(num, end=\" \")\n\n\n# Testing\narr = [-1, 2, 3, 4, 5, -6, 7, 8, -9]\npositive_numbers(arr)",
      6.90234375
    ],
    [
      "def positive_numbers(lst):\n    for i in lst:\n        if i > 0:\n            print(i)\n\n\ndef main():\n    lst = [-5, -3, -1, 0, 1, 3, 5]\n    print(positive_numbers(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
      6.75
    ],
    [
      "def print_positive_numbers(list1):\n    for i in list1:\n        if i > 0:\n            print(i)\n\n\nprint_positive_numbers([1, 2, 3, -4, 5])",
      6.51953125
    ],
    [
      "def print_positive(num_list):\n    for num in num_list:\n        if num > 0:\n            print(num)\n\n\nprint_positive([-1, 2, 0, 4, 5])",
      6.44140625
    ],
    [
      "def print_positive_numbers(input_list):\n    for x in input_list:\n        if x > 0:\n            print(x)\n\n\nprint_positive_numbers([-1, 2, 0, 4, 5])",
      6.3984375
    ],
    [
      "# Solution\n\ndef positive_numbers(nums):\n    return [num for num in nums if num > 0]\n\n\n# Tests\nprint(positive_numbers([3, -4, 0, 5, 8]))  # [3, 5, 8]\nprint(positive_numbers([-3, -4, -5]))  # []\nprint(positive_numbers([]))  # []",
      6.3046875
    ],
    [
      "def print_positive(arr):\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            print(arr[i])\n\n\nprint_positive([1, -2, 3, -4, 5])",
      6.16796875
    ],
    [
      "def printPositive(nums):\n    # your code goes here\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nif __name__ == '__main__':\n    nums = [-1, -2, -3, 0, 1, 2, -4, -5, -6]\n\n    printPositive(nums)",
      6.05078125
    ],
    [
      "def positive_numbers(list_of_num):\n    for num in list_of_num:\n        if num > 0:\n            print(num)\n\npositive_numbers([1,2,3,4,-7,8,-6,9])",
      5.4375
    ],
    [
      "def print_positive(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\nprint_positive([1, -2, 3, -4, 5])",
      5.3671875
    ],
    [
      "def print_positive_number(nums):\n    for i in range(len(nums)):\n        if nums[i] > 0:\n            print(nums[i], end=' ')\n\n\nprint_positive_number([-1, 2, 0, 4, 5])",
      4.98828125
    ],
    [
      "def positive_number(lst):\n    for num in lst:\n        if num > 0:\n            print(num)\n\n\npositive_number([-5, -2, 1, 0, 6, 13])",
      4.51953125
    ],
    [
      "def print_positive_numbers(arr):\n    for num in arr:\n        if num > 0:\n            print(num)\n\n\nprint_positive_numbers([1, 2, 3, -4, -5, 6])",
      4.4765625
    ],
    [
      "def positive(nums):\n    \"\"\"Print positive numbers\"\"\"\n    for num in nums:\n        if num > 0:\n            print(num)\n\npositive([1,2,3,-4,5])",
      4.40625
    ],
    [
      "def print_positives(numbers):\n    for number in numbers:\n        if number >= 0:\n            print(number)\n\n\n\nnumbers = [-2,-1,0,1,2]\nprint_positives(numbers)",
      4.39453125
    ],
    [
      "def positive_numbers(list):\n    for num in list:\n        if num > 0:\n            print(num)\n\npositive_numbers([-1, 2, 0, 5, -3])",
      4.30078125
    ],
    [
      "def print_positive_numbers(numbers):\n    for num in numbers:\n        if num > 0:\n            print(num)\n\n\nprint_positive_numbers([-1, 2, 0, 6, -4])",
      4.1171875
    ],
    [
      "def print_positive(l):\n    positive = []\n    for i in l:\n        if i > 0:\n            positive.append(i)\n    return positive\n\n\nprint(print_positive([-1, -2, -3, -4, 5, 6, 7, 8, 9, 10]))",
      4.0859375
    ],
    [
      "# Solution\n\ndef positive_numbers(nums):\n    \"\"\"Returns a list with only the positive numbers in a list.\"\"\"\n    return [x for x in nums if x > 0]\n\n\n# Tests\n\nprint(positive_numbers([1, -5, 7, 2, -4, 0]))     # [1, 7, 2]\nprint(positive_numbers([-5, 7, -2, 4, 0]))        # [7]\nprint(positive_numbers([0, 0, 0]))                # []",
      3.849609375
    ],
    [
      "def print_positive(nums):\n    for i in nums:\n        if i > 0:\n            print(i)\n\n\nprint_positive([1, -2, 3, -4, 5])",
      3.75
    ],
    [
      "def positive_num(l):\n    return [i for i in l if i > 0]\n\nl = [1, 2, -3, 4, -5, 6, -7, 8]\nprint(positive_num(l))",
      3.462890625
    ],
    [
      "def positive_number(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\npositive_number([2, -1, 0, 4])",
      3.396484375
    ],
    [
      "def positive_nums(nums: list):\n    return [num for num in nums if num > 0]\n\n\nif __name__ == \"__main__\":\n    nums = [-1, -3, 0, 4, 5]\n    print(positive_nums(nums))",
      3.396484375
    ],
    [
      "def print_positive_numbers(lst):\n    for i in lst:\n        if i > 0:\n            print(i)\n\nprint_positive_numbers([1,2,3,-4,5,6,-7,8,-9,-10])",
      3.22265625
    ],
    [
      "def positive_numbers(list_of_numbers):\n    for number in list_of_numbers:\n        if number > 0:\n            print(number)\n\n\ndef main():\n    list_of_numbers = [1, -2, 3, -4, 5, -6]\n    positive_numbers(list_of_numbers)\n\n\nif __name__ == \"__main__\":\n    main()",
      3.14453125
    ],
    [
      "def positive_numbers(nums: list):\n    return [x for x in nums if x > 0]\n\n\nprint(positive_numbers([1, -2, 3, -4, 5]))",
      3.12890625
    ],
    [
      "def positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nprint(\"Positive numbers are: \")\npositive_numbers([1, -2, 3, -4, 5, -6, -7, 8, -9, -10])",
      3.0703125
    ],
    [
      "def print_positive_numbers(numbers):\n    for number in numbers:\n        if number > 0:\n            print(number)\n\nprint_positive_numbers([2, 3, 4, 5, -1, -4, -5])",
      3.00390625
    ],
    [
      "# solution 1\ndef print_positive_numbers(arr):\n    for num in arr:\n        if num > 0:\n            print(num)\n\n\nprint_positive_numbers([1, 2, -3, 4, -5, 6])\n\n\n# solution 2\ndef print_positive_numbers(arr):\n    for num in arr:\n        if num >= 0:\n            print(num)\n\n\nprint_positive_numbers([1, 2, -3, 4, -5, 6])",
      2.810546875
    ],
    [
      "def print_positive_numbers(lst):\n    for i in lst:\n        if i >= 0:\n            print(i)\n\n\ndef main():\n    lst = [-1, -2, 3, 4, 5, 6]\n    print_positive_numbers(lst)\n\n\nif __name__ == \"__main__\":\n    main()",
      2.66796875
    ],
    [
      "def print_positive(list):\n    for num in list:\n        if num > 0:\n            print(num)\n\n\nprint_positive([1, -2, 3, -4, 5])",
      2.609375
    ],
    [
      "def positive_num(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\npositive_num([1, 2, -3, 4, -5, -6])",
      2.556640625
    ],
    [
      "def print_positive(nums):\n    for i in range(len(nums)):\n        if nums[i] >= 0:\n            print(nums[i])\n\n\nprint_positive([3, 4, -1, 5, -2])",
      2.552734375
    ],
    [
      "def positive_nums(list_of_nums):\n    for num in list_of_nums:\n        if num >= 0:\n            print(num)\n\n\nlist_of_nums = [-1, -2, -3, 4, 5, 6]\npositive_nums(list_of_nums)",
      2.525390625
    ],
    [
      "def print_positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    print_positive_numbers([1, 2, 3, -4, -5, -6, 7])",
      2.4453125
    ],
    [
      "def positive_number(numbers):\n    for number in numbers:\n        if number > 0:\n            print(number)\n\n\nprint(positive_number([1, 2, -1, 3, 4]))",
      2.3046875
    ],
    [
      "def positive_nums(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\npositive_nums([1,2,3,-4,5])",
      2.291015625
    ],
    [
      "def positive_numbers(numbers):\n    for number in numbers:\n        if number > 0:\n            print(number)\n\n\npositive_numbers([-1, -2, -3, 4, 5, 6, 7])",
      2.11328125
    ],
    [
      "# Solution\n\ndef positive_nums(nums):\n    return [num for num in nums if num > 0]\n\n\n# Tests\nprint(positive_nums([3, -4, 0, 5, 7]))  # [3, 5, 7]\nprint(positive_nums([-3, -4, 0, -5, 7]))  # [7]\nprint(positive_nums([-3, -4, 0, -5, -7]))  # []",
      2.072265625
    ],
    [
      "def positive_numbers(arr):\n    for i in arr:\n        if i >= 0:\n            print(i)\n\n\npositive_numbers([1, 2, -1, 0, 3, 4])",
      1.9609375
    ],
    [
      "def positive_numbers(list):\n    for i in list:\n        if i > 0:\n            print(i)\n\nlist = [1, -1, 2, 0, -3, 4, -5, 6]\npositive_numbers(list)",
      1.8408203125
    ],
    [
      "def positive_num(nums):\n    for i in range(len(nums)):\n        if nums[i] > 0:\n            print(nums[i])\n\npositive_num([1, 2, 3, -4, -5, -6, 7, 8, 9])",
      1.791015625
    ],
    [
      "def print_positive(numbers: list):\n    for num in numbers:\n        if num > 0:\n            print(num)\n\n\nprint_positive([1, 2, 3, 4, -1, -2, -3, -4])",
      1.345703125
    ],
    [
      "def print_positive(l):\n    for num in l:\n        if num >= 0:\n            print(num)\n\nif __name__ == '__main__':\n    l = [-1, -2, 1, 2]\n    print_positive(l)",
      1.328125
    ],
    [
      "def positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\npositive_numbers([1, 2, 3, 4, -5, -6, 7, 8, -9, -10])",
      1.267578125
    ],
    [
      "def print_positive(list):\n    for i in list:\n        if i > 0:\n            print(i)\n\nprint_positive([1,2,3,4,5,-6,-7,-8,9])",
      1.2587890625
    ],
    [
      "def print_positive_numbers(list1):\n    for i in list1:\n        if i >= 0:\n            print(i)\n\n\nlist1 = [-2, -4, 1, -1, 0, 3]\nprint_positive_numbers(list1)",
      1.2353515625
    ],
    [
      "def positive_numbers(nums):\n    return [i for i in nums if i > 0]\n\n\nprint(positive_numbers([1, 2, 3, -4, 5]))",
      1.228515625
    ],
    [
      "def print_positive(list1):\n    for i in list1:\n        if i > 0:\n            print(i)\n\n\nlist1 = [-1, -2, 3, 4, 5, 6]\nprint_positive(list1)",
      1.1875
    ],
    [
      "def print_positive_numbers(lst):\n    for num in lst:\n        if num >= 0:\n            print(num)\n\n\nprint_positive_numbers([1, 2, -3, 4, -5, 6])",
      1.1181640625
    ],
    [
      "def print_positive_numbers(list1):\n    for i in list1:\n        if i > 0:\n            print(i, end=\" \")\n\n\nprint_positive_numbers([1, 2, 3, 4, -1, 5, -2])",
      1.021484375
    ],
    [
      "def print_positive(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nnums = [1, 2, -3, 4, -5, 6]\nprint_positive(nums)",
      0.8408203125
    ],
    [
      "def positive_number(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nprint(positive_number([-1, 2, 0, 4, 5]))",
      0.8271484375
    ],
    [
      "def positive_numbers(numbers):\n    for number in numbers:\n        if number >= 0:\n            print(number, end=\" \")\n    print()\n\n\ndef main():\n    list_of_numbers = [-3, -2, 0, 2, 3]\n    positive_numbers(list_of_numbers)\n\n\nif __name__ == \"__main__\":\n    main()",
      0.8173828125
    ],
    [
      "def positiveNumbers(numbers):\n    for i in numbers:\n        if i > 0:\n            print(i)\n\npositiveNumbers([1, 2, 3, -4, 5, 6, -7, 8])",
      0.74755859375
    ],
    [
      "# Solution\ndef positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num, end=\" \")\n\n\n# Testing\nprint(\"List of numbers:\")\nnums = [1, -2, 3, -4, 5, -6]\nprint(nums)\nprint(\"Positive numbers:\")\npositive_numbers(nums)",
      0.7412109375
    ],
    [
      "def positive_numbers(lst):\n    result = []\n    for i in lst:\n        if i > 0:\n            result.append(i)\n    return result\n\n\nprint(positive_numbers([1, 2, 3, -4, -5, -6, 7, 8, 9, 10]))",
      0.479248046875
    ],
    [
      "def printPositiveNumbers(list):\n    for i in list:\n        if i>=0:\n            print(i)\n\nlist = [-1, -2, -3, -4, -5]\nprintPositiveNumbers(list)",
      0.286865234375
    ],
    [
      "def print_positive(numbers):\n    positive_nums = []\n    for num in numbers:\n        if num >= 0:\n            positive_nums.append(num)\n    print(positive_nums)\n\n\nprint_positive([3, 7, -2, 5, 12, -9])",
      0.2200927734375
    ],
    [
      "def print_positive(list):\n    for i in list:\n        if i > 0:\n            print(i)\n\n\nprint_positive([-1, 2, 0, 5, -12])",
      -0.27392578125
    ],
    [
      "def positive_num(nums):\n    result = []\n    for num in nums:\n        if num > 0:\n            result.append(num)\n    return result\n\n\ndef main():\n    print(positive_num([1, -5, 6, 2, -4, 3]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.366455078125
    ],
    [
      "def printPositiveNumbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\nnums = [2, 3, -4, 5, -6, 7, -8, 9, 10]\nprintPositiveNumbers(nums)",
      -0.67138671875
    ],
    [
      "# Solution\n\ndef positive_numbers(arr):\n    for num in arr:\n        if num > 0:\n            print(num)\n\n\n# Tests\nprint(\"positive_numbers([1,-4,7,12])\")\nprint(\"Expected:\")\nprint(\"1\")\nprint(\"7\")\nprint(\"12\")\nprint(\"Actual:\")\npositive_numbers([1,-4,7,12])\nprint(\"--------------------\")\nprint(\"positive_numbers([-1,-4,-7,-12])\")\nprint(\"Expected:\")\nprint(\"\")\nprint(\"Actual:\")\npositive_numbers([-1,-4,-7,-12])\nprint(\"--------------------\")\nprint(\"positive_numbers([0,-4,7,12])\")\nprint(\"Expected:\")\nprint(\"7\")\nprint(\"12\")\nprint(\"Actual:\")\npositive_numbers([0,-4,7,12])",
      -0.85693359375
    ],
    [
      "def positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\nnums = [-1, 2, 0, 4, 5]\npositive_numbers(nums)",
      -0.85693359375
    ],
    [
      "def positive_nums(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    nums = [-3, 0, 2, 4, 5, -1]\n    positive_nums(nums)",
      -0.85693359375
    ],
    [
      "def positive(lst):\n    return list(filter(lambda x: x>0, lst))\n\nprint(positive([1,2,-3,4,-5]))",
      -0.857421875
    ],
    [
      "def positive_num(lst):\n    for i in lst:\n        if i > 0:\n            print(i)\n\npositive_num([1,2,3,-4,5,-6])",
      -0.85791015625
    ],
    [
      "def positive(numbers):\n    for num in numbers:\n        if num > 0:\n            print(num)\n\n\nnumbers = [-1, 2, 0, 4, 5]\npositive(numbers)",
      -0.85791015625
    ],
    [
      "def printPositiveNumbers(list):\n    for number in list:\n        if number > 0:\n            print(number)\n\nlist = [-1, 2, 0, 4, -3]\nprintPositiveNumbers(list)",
      -0.8583984375
    ],
    [
      "def positive_numbers(list_numbers):\n    return [number for number in list_numbers if number > 0]\n\n\nprint(positive_numbers([1, 2, 3, 4, -1, -2, -3, -4]))",
      -0.8583984375
    ],
    [
      "def positive_num(list):\n    for i in list:\n        if i >= 0:\n            print(i)\n\nnum = [1,2,-3,-4,5]\npositive_num(num)",
      -0.8583984375
    ],
    [
      "def print_positive_nums(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\nnums = [-2, -5, -1, 0, 5, 10, 7]\nprint_positive_nums(nums)",
      -1.3134765625
    ],
    [
      "# Solution\n\ndef positive_numbers(nums):\n    for num in nums:\n        if num > 0:\n            print(num)\n\n\n# Tests\nprint(\"positive_numbers:\")\nprint(\"Test 1\")\nprint(\"Expected:\", [1, 3])\nprint(\"Actual:\", positive_numbers([1, -2, 3, -5]))\nprint(\"---------------------------------------\")\nprint(\"Test 2\")\nprint(\"Expected:\", [])\nprint(\"Actual:\", positive_numbers([-4, -5, -6]))\nprint(\"---------------------------------------\")\nprint(\"Test 3\")\nprint(\"Expected:\", [1])\nprint(\"Actual:\", positive_numbers([1]))\nprint(\"---------------------------------------\")",
      -1.3173828125
    ],
    [
      "def print_positive_num(list):\n    for i in list:\n        if i>0:\n            print(i)\n            \nprint_positive_num([1,2,-4,-5,6,-7,8])",
      -1.431640625
    ],
    [
      "def positive_numbers(my_list):\n    for i in my_list:\n        if i >= 0:\n            print(i)\n\nmy_list = [1,2,3,4,-1,-2,5,6,7,8,-3,-4,-5]\npositive_numbers(my_list)",
      -1.546875
    ],
    [
      "def print_positive(lst):\n    for num in lst:\n        if num >= 0:\n            print(num, end=\" \")\n\n\nlst = [-2, 1, 3, -4, 5]\nprint_positive(lst)",
      -1.9150390625
    ],
    [
      "# solution 1\ndef positive_numbers(input_list):\n    for num in input_list:\n        if num > 0:\n            print(num)\n\n\n# solution 2\ndef positive_numbers_2(input_list):\n    for num in input_list:\n        if num > 0:\n            yield num\n\n\n# solution 3\ndef positive_numbers_3(input_list):\n    return [num for num in input_list if num > 0]\n\n\n# solution 4\ndef positive_numbers_4(input_list):\n    return [num for num in input_list if num > 0]\n\n\nif __name__ == '__main__':\n    print(\"Positive numbers in list:\")\n    positive_numbers([1, 2, 3, 4, -1, 5, 6, -2, 7, 8, 9, 10, -3, 11, 12, 13, 14, -4, 15, 16, -5, 17, -6, 18, -7, 19])\n    print(\"Positive numbers in list:\")\n    positive_numbers_2([1, 2, 3, 4, -1, 5, 6, -2, 7, 8, 9, 10, -3, 11, 12, 13, 14, -4, 15, 16, -5, 17, -6, 18, -7, 19])\n    print(\"Positive numbers in list:\")\n    positive_numbers_3([1, 2, 3, 4, -1, 5, 6, -2, 7, 8, 9, 10, -3, 11, 12, 13, 14, -4, 15, 16, -5, 17, -6, 18, -7, 19])\n    print(\"Positive numbers in list:\")\n    positive_numbers_4([1, 2, 3, 4, -1",
      -2.298828125
    ],
    [
      "def print_positive(list):\n    for num in list:\n        if num > 0:\n            print(num)\n\nlist1 = [1, 2, -3, 4, 5, -6, -7, 8]\nprint_positive(list1)\n\n\"\"\"\nWrite a python program to print the numbers in a list in reverse order.\n\"\"\"\n\ndef reverse_print(list):\n    for num in reversed(list):\n        print(num)\n\nlist2 = [1, 2, -3, 4, 5, -6, -7, 8]\nreverse_print(list2)\n\n\"\"\"\nWrite a python function to check whether a list is sorted.\n\"\"\"\n\ndef is_sorted(list):\n    return list == sorted(list)\n\nlist3 = [1, 2, -3, 4, 5, -6, -7, 8]\nprint(is_sorted(list3))\n\nlist4 = [1, 2, 3, 4, 5, 6, 7, 8]\nprint(is_sorted(list4))\n\n\"\"\"\nWrite a python function to find the number of elements in a list.\n\"\"\"\n\ndef list_length(list):\n    return len(list)\n\nlist5 = [1, 2, -3, 4, 5, -6, -7, 8]\nprint(list_length(list5))\n\n\"\"\"\nWrite a python function to find the sum of numbers in a list.\n\"\"\"\n\ndef list_sum(list):\n    return sum(list)\n\nlist6 = [1, 2, -3, 4, 5, -6, -7, 8]\nprint(list_sum(list6))\n\n\"\"\"\nWrite a python function to remove duplicates from a list.\n\"\"\"\n\ndef remove_duplicate(list):\n    return list(set(list))\n\nlist7 = [1, 2, -3, 4, 5, -6, -7, 8, 1]\nprint(remove_duplicate(list7))\n\n\"\"\"\nWrite a python",
      -2.78125
    ],
    [
      "# solution 1\n\ndef print_positives(numbers):\n    for num in numbers:\n        if num > 0:\n            print(num)\n\n\nprint_positives([-2, -8, -5, -1])\n\n\n# solution 2\n\ndef print_positives(numbers):\n    for num in numbers:\n        if num < 0:\n            break\n        print(num)\n\n\nprint_positives([-2, -8, -5, -1])",
      -3.109375
    ],
    [
      "def print_positive(nums):\n    for i in nums:\n        if i > 0:\n            print(i)\n\n\nprint_positive([-1, -2, -3, -4, -5])\nprint_positive([-1, -2, -3, 4, -5])",
      -3.271484375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}