{
  "problem": {
    "task_id": "MBPP/79",
    "prompt": "Write a python function to check whether the length of the word is odd or not.",
    "canonical_solution": "def word_len(s): \r\n    s = s.split(' ')   \r\n    for word in s:    \r\n        if len(word)%2!=0: \r\n            return True  \r\n        else:\r\n          return False",
    "test_list": [
      "assert word_len(\"Hadoop\") == False",
      "assert word_len(\"great\") == True",
      "assert word_len(\"structure\") == True"
    ],
    "challenge_test_list": [],
    "problem_id": 68
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def check_odd(word):\n    return len(word) % 2 != 0\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    if check_odd(word):\n        print(\"The length of the word is odd.\")\n    else:\n        print(\"The length of the word is even.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      22.40625
    ],
    [
      "def odd_or_even(word):\n    if len(word) % 2 == 0:\n        return \"Even\"\n    else:\n        return \"Odd\"\nprint(odd_or_even(\"abcd\"))\nprint(odd_or_even(\"abcde\"))\nprint(odd_or_even(\"ab\"))\nprint(odd_or_even(\"abc\"))",
      17.21875
    ],
    [
      "def check_odd_or_even(word):\n    if len(word)%2==0:\n        return \"Even\"\n    else:\n        return \"Odd\"\n\nword = input(\"Enter the word: \")\nprint(check_odd_or_even(word))",
      17.1875
    ],
    [
      "def check(word: str) -> bool:\n    \"\"\"\n    >>> check('abc')\n    False\n    >>> check('abcd')\n    True\n    \"\"\"\n    return len(word) % 2 != 0\n\n\ndef check_ver_2(word: str) -> bool:\n    \"\"\"\n    >>> check_ver_2('abc')\n    False\n    >>> check_ver_2('abcd')\n    True\n    \"\"\"\n    return len(word) & 1 == 1\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
      15.9140625
    ],
    [
      "def odd_or_even(word):\n    if len(word) % 2 == 0:\n        return \"even\"\n    else:\n        return \"odd\"\n\n\nprint(odd_or_even(\"word\"))\nprint(odd_or_even(\"wordss\"))",
      15.7578125
    ],
    [
      "def check_odd_or_even(word):\n    return len(word) % 2 == 0\n\n\nif __name__ == \"__main__\":\n    word = input(\"Enter the word to check odd or even: \")\n    if check_odd_or_even(word):\n        print(\"The length of the word is even\")\n    else:\n        print(\"The length of the word is odd\")",
      15.59375
    ],
    [
      "def check_odd_or_even(word: str) -> bool:\n    \"\"\"\n    Check whether the length of the word is odd or not.\n    >>> check_odd_or_even(\"Python\")\n    True\n    >>> check_odd_or_even(\"Javascript\")\n    False\n    >>> check_odd_or_even(\"Java\")\n    True\n    >>> check_odd_or_even(\"C\")\n    False\n    >>> check_odd_or_even(\"C++\")\n    True\n    >>> check_odd_or_even(\"Go\")\n    True\n    >>> check_odd_or_even(\"Javascript\")\n    False\n    \"\"\"\n    return len(word) % 2 != 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      15.2890625
    ],
    [
      "def word_length(word: str) -> bool:\n    \"\"\"\n    >>> word_length(\"Hello\")\n    False\n    >>> word_length(\"H\")\n    True\n    >>> word_length(\"Hello World\")\n    False\n    \"\"\"\n    return len(word) % 2 == 1\n\n\ndef word_length_v2(word: str) -> bool:\n    \"\"\"\n    >>> word_length_v2(\"Hello\")\n    False\n    >>> word_length_v2(\"H\")\n    True\n    >>> word_length_v2(\"Hello World\")\n    False\n    \"\"\"\n    return len(word) & 1 == 1\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
      14.8046875
    ],
    [
      "def check(word):\n    if len(word) % 2 == 1:\n        return True\n    else:\n        return False\n\n\nword = input(\"Enter the word: \")\nif check(word):\n    print(\"Word is of odd length\")\nelse:\n    print(\"Word is of even length\")",
      14.625
    ],
    [
      "def check_length(word):\n    if len(word) % 2 == 0:\n        return \"even\"\n    else:\n        return \"odd\"\n\n\nprint(check_length(\"cat\"))\nprint(check_length(\"dog\"))",
      14.5703125
    ],
    [
      "def word_length(word):\n    return len(word) % 2 != 0\n\n\nassert word_length(\"abc\") == False, \"Should be False\"\nassert word_length(\"abcdef\") == True, \"Should be True\"",
      13.7109375
    ],
    [
      "def check_length(word: str) -> str:\n    \"\"\"\n    >>> check_length(\"hello\")\n    'Odd'\n    >>> check_length(\"world\")\n    'Even'\n    >>> check_length(\"\")\n    'Even'\n    \"\"\"\n    return \"Odd\" if len(word) % 2 != 0 else \"Even\"\n\n\ndef main():\n    \"\"\"\n    >>> check_length(\"hello\")\n    'Odd'\n    >>> check_length(\"world\")\n    'Even'\n    >>> check_length(\"\")\n    'Even'\n    \"\"\"\n    print(check_length(input(\"Enter the word: \")))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      13.4609375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    ans = word_length(word)\n    if ans:\n        print(\"The length of the word is even.\")\n    else:\n        print(\"The length of the word is odd.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      12.9296875
    ],
    [
      "def word_len(word: str) -> bool:\n    \"\"\"\n    This function takes a word as an argument and checks if the length of the word is odd or not.\n\n    >>> word_len(\"python\")\n    False\n    >>> word_len(\"\")\n    False\n    >>> word_len(\"pythonrocks\")\n    True\n    >>> word_len(\"py\")\n    False\n    >>> word_len(\"p\")\n    False\n    >>> word_len(\"pyt\")\n    False\n    \"\"\"\n    if len(word) % 2 != 0:\n        return True\n    return False\n\n\ndef main():\n    \"\"\"\n    This is the main function which we use to read\n    the word entered by the user and check if the length is odd or not.\n    \"\"\"\n    word = input(\"Enter the word: \")\n    if word_len(word):\n        print(f\"The length of the word '{word}' is odd\")\n    else:\n        print(f\"The length of the word '{word}' is even\")\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()",
      12.5625
    ],
    [
      "def check_odd(word):\n    \"\"\"\n    >>> check_odd('word')\n    False\n    >>> check_odd('word1')\n    True\n    \"\"\"\n    return len(word) % 2 == 1\n\ndef check_odd_s(word):\n    \"\"\"\n    >>> check_odd_s('word')\n    False\n    >>> check_odd_s('word1')\n    True\n    \"\"\"\n    return len(word) & 1\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      12.359375
    ],
    [
      "def check_odd(word):\n    return len(word) % 2 != 0\n\ndef main():\n    word = input(\"Enter a word: \")\n    if check_odd(word):\n        print(\"The length of the word is odd\")\n    else:\n        print(\"The length of the word is even\")\n\nif __name__ == \"__main__\":\n    main()",
      12.234375
    ],
    [
      "def check_odd(word):\n    return len(word) % 2 != 0\n\n\ndef main():\n    print(check_odd(\"abc\"))\n    print(check_odd(\"abcd\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      12.2265625
    ],
    [
      "def check_odd(word: str) -> bool:\n    \"\"\"\n    This function takes a word as a parameter and checks whether the length of the word is odd or not.\n    >>> check_odd('hello')\n    True\n    >>> check_odd('world')\n    False\n    >>> check_odd('hello world')\n    False\n    >>> check_odd('123456789')\n    False\n    >>> check_odd('abc')\n    False\n    >>> check_odd('')\n    False\n    \"\"\"\n    return len(word) % 2 != 0\n\n\ndef main():\n    assert check_odd(\"hello\") == True\n    assert check_odd(\"world\") == False\n    assert check_odd(\"hello world\") == False\n    assert check_odd(\"123456789\") == False\n    assert check_odd(\"abc\") == False\n    assert check_odd(\"\") == False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()",
      12.109375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    word = input(\"Enter word: \")\n    result = word_length(word)\n    if result:\n        print(\"Length of the word is even\")\n    else:\n        print(\"Length of the word is odd\")\n\n\nif __name__ == \"__main__\":\n    main()",
      11.7421875
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\n\nword = input(\"Enter the word: \")\nif word_length(word):\n    print(\"The word is of even length.\")\nelse:\n    print(\"The word is of odd length.\")",
      10.375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\nword = input(\"Enter a word: \")\n\nif word_length(word):\n    print(\"The word has even length.\")\nelse:\n    print(\"The word has odd length.\")",
      9.9765625
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 1:\n        return True\n    else:\n        return False\n\n\nprint(word_length(\"hello\"))",
      9.453125
    ],
    [
      "def check_word(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\nword = input()\nprint(check_word(word))\n\n\"\"\"\nWrite a python function to check whether a given number is even or odd.\n\"\"\"\n\ndef check_even_odd(number):\n    if number % 2 == 0:\n        return \"even\"\n    else:\n        return \"odd\"\n\nnumber = int(input())\nprint(check_even_odd(number))\n\n\"\"\"\nWrite a python function to check whether a given number is positive or negative or zero.\n\"\"\"\n\ndef check_positive_negative(number):\n    if number > 0:\n        return \"positive\"\n    elif number < 0:\n        return \"negative\"\n    else:\n        return \"zero\"\n\nnumber = int(input())\nprint(check_positive_negative(number))\n\n\"\"\"\nWrite a python function to check whether a given number is positive or negative or zero.\n\"\"\"\n\ndef check_number(number):\n    if number > 0:\n        return \"positive\"\n    elif number < 0:\n        return \"negative\"\n    elif number == 0:\n        return \"zero\"\n    else:\n        return \"invalid\"\n\nnumber = int(input())\nprint(check_number(number))\n\n\"\"\"\nWrite a python function to check whether a given number is positive or negative or zero.\n\"\"\"\n\ndef check_number(number):\n    if number > 0:\n        return \"positive\"\n    elif number < 0:\n        return \"negative\"\n    elif number == 0:\n        return \"zero\"\n    else:\n        return \"invalid\"\n\nnumber = int(input())\nprint(check_number(number))\n\n\"\"\"\nWrite a python program to check whether a given number is positive or negative or zero.\n\"\"\"\n\ndef check_number(number):\n    if number > 0:\n        return \"positive\"\n    elif number < 0:\n        return \"negative\"\n    elif number == 0:\n        return \"zero\"",
      7.91015625
    ],
    [
      "def word_odd_or_even(word):\n    return len(word) % 2 == 0\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    print(word_odd_or_even(word))\n\n\nif __name__ == \"__main__\":\n    main()",
      7.48828125
    ],
    [
      "def word_length(word):\n    return len(word) % 2 != 0\n\n\nif __name__ == \"__main__\":\n    print(word_length(\"word\"))\n    print(word_length(\"odd\"))",
      7.46484375
    ],
    [
      "def check_odd_or_even(string):\n    if len(string) % 2 == 0:\n        return \"Even\"\n    else:\n        return \"Odd\"\n\n\nprint(check_odd_or_even(\"abcde\"))",
      7.1328125
    ],
    [
      "def check_odd_length(string):\n    if len(string) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    if check_odd_length(word):\n        print(\"The word has an odd length.\")\n    else:\n        print(\"The word has an even length.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      6.7890625
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    if word_length(word):\n        print(\"Length of the word is an odd number\")\n    else:\n        print(\"Length of the word is an even number\")\n\n\nif __name__ == \"__main__\":\n    main()",
      6.140625
    ],
    [
      "def check_odd_length(word):\n    if len(word) % 2 == 0:\n        return \"Even\"\n    else:\n        return \"Odd\"\n\n\nprint(check_odd_length(\"python\"))\nprint(check_odd_length(\"java\"))",
      6.05078125
    ],
    [
      "def check_length(word):\n    return len(word) % 2 == 1\n\n\nif __name__ == \"__main__\":\n    print(check_length(\"word\"))\n    print(check_length(\"wordword\"))",
      5.953125
    ],
    [
      "def check_odd_length(word):\n    if len(word) % 2 != 0:\n        return True\n    return False\n\n\ndef main():\n    word = input(\"Enter the word: \")\n    result = check_odd_length(word)\n    if result:\n        print(\"The word length is odd.\")\n    else:\n        print(\"The word length is even.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      5.9375
    ],
    [
      "def odd_word_checker(word):\n    return (len(word)%2!=0)\n\n#print(odd_word_checker(\"python\"))\n#print(odd_word_checker(\"hello\"))",
      5.6796875
    ],
    [
      "def check_odd(word):\n    if len(word) % 2 == 0:\n        return False\n    else:\n        return True\n\n\nprint(check_odd(\"hello\"))\nprint(check_odd(\"world\"))",
      5.6328125
    ],
    [
      "def check_odd_or_even(word):\n    if len(word) % 2 == 0:\n        return \"even\"\n    else:\n        return \"odd\"\n\nprint(check_odd_or_even(\"python\"))\nprint(check_odd_or_even(\"java\"))",
      5.015625
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return \"The length of the word is even.\"\n    return \"The length of the word is odd.\"\n\n\nprint(word_length(\"python\"))\nprint(word_length(\"java\"))",
      4.91796875
    ],
    [
      "def check_word(word):\n    return True if len(word) % 2 else False\n\nprint(check_word(\"Hello\"))\nprint(check_word(\"World\"))\nprint(check_word(\"Python\"))\nprint(check_word(\"Java\"))\nprint(check_word(\"Javascript\"))",
      4.83984375
    ],
    [
      "def word_length(word):\n    return len(word) % 2 != 0\n\n\nprint(word_length(\"apple\"))\nprint(word_length(\"orange\"))",
      4.734375
    ],
    [
      "def odd_or_even(word):\n    if len(word) % 2 == 0:\n        return \"Even\"\n    return \"Odd\"\n\n\nprint(odd_or_even(\"Hello\"))\nprint(odd_or_even(\"World\"))",
      4.6875
    ],
    [
      "def odd_word_length(string):\n    length = len(string)\n    if length % 2 == 0:\n        return False\n    else:\n        return True\n\nprint(odd_word_length(\"abc\"))\nprint(odd_word_length(\"abcdef\"))",
      4.59765625
    ],
    [
      "def check_odd_or_even(word):\n    if len(word) % 2 == 0:\n        print(word, \"is even\")\n    else:\n        print(word, \"is odd\")\n\n\ncheck_odd_or_even(\"python\")\ncheck_odd_or_even(\"java\")",
      4.5234375
    ],
    [
      "def word_len(string):\n    if len(string) % 2 == 0:\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    print(\"Word length is odd or not: \", word_len(\"python\"))\n    print(\"Word length is odd or not: \", word_len(\"java\"))",
      4.484375
    ],
    [
      "def is_odd(word):\n    return len(word) % 2 == 1\n\n\nif __name__ == \"__main__\":\n    print(is_odd(\"odd\"))\n    print(is_odd(\"even\"))",
      4.21484375
    ],
    [
      "def word_length(word):\n    return len(word) % 2 == 1\n\nprint(word_length(\"dog\"))\nprint(word_length(\"cat\"))",
      4.12890625
    ],
    [
      "def word_length(word):\n    return len(word) % 2 != 0\n\n\nprint(word_length(\"abc\"))\nprint(word_length(\"abcd\"))",
      4.08203125
    ],
    [
      "def check_odd(word):\n    if len(word)%2 == 1:\n        return True\n    else:\n        return False\n\nprint(check_odd(\"hello\"))",
      3.978515625
    ],
    [
      "def word_length(word):\n    return len(word) % 2\n\nword = input(\"Enter the word: \")\nif word_length(word):\n    print(\"The word is an odd word\")\nelse:\n    print(\"The word is an even word\")",
      3.86328125
    ],
    [
      "def odd_or_even(s):\n    if len(s) % 2 == 0:\n        return True\n    else:\n        return False\n\nprint(odd_or_even(\"Python\"))\nprint(odd_or_even(\"javaScript\"))\nprint(odd_or_even(\"SQL\"))\nprint(odd_or_even(\"Java\"))\nprint(odd_or_even(\"C++\"))",
      3.61328125
    ],
    [
      "def odd_or_even(word):\n    if len(word) % 2 == 0:\n        return \"Even\"\n    else:\n        return \"Odd\"\n\n\nprint(odd_or_even(\"hello\"))",
      3.572265625
    ],
    [
      "def word_length(word):\n    return True if len(word) % 2 == 1 else False\n\n\nprint(word_length(\"word\"))\nprint(word_length(\"wordss\"))",
      3.5703125
    ],
    [
      "def check_odd(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\nprint(check_odd(\"python\"))\nprint(check_odd(\"java\"))\n\n\n\n\"\"\"\nWrite a python function to check whether the word is a pangram or not.\n\"\"\"\ndef check_pangram(word):\n    alphabet = \"abcdefghijklmnopqrstuvwxyz\"\n    for i in alphabet:\n        if i not in word.lower():\n            return False\n    return True\n\nprint(check_pangram(\"The quick brown fox jumps over the lazy dog\"))\nprint(check_pangram(\"Python\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is a palindrome or not.\n\"\"\"\ndef check_palindrome(word):\n    return word.lower() == word.lower()[::-1]\n\nprint(check_palindrome(\"Python\"))\nprint(check_palindrome(\"aba\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is a anagram of other or not.\n\"\"\"\ndef check_anagram(word1, word2):\n    return sorted(word1.lower()) == sorted(word2.lower())\n\nprint(check_anagram(\"anagram\",\"nagaram\"))\nprint(check_anagram(\"anagram\",\"nagraam\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is a vowel or not.\n\"\"\"\ndef check_vowel(word):\n    vowels = \"aeiou\"\n    for i in vowels:\n        if i in word.lower():\n            return True\n    return False\n\nprint(check_vowel(\"Python\"))\nprint(check_vowel(\"Java\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is a consonant or not.\n\"\"\"\ndef check_consonant(word):\n    vowels = \"aeiou\"\n    for i in vowels:\n        if i in word.lower():\n            return False\n    return True\n\nprint(check_consonant(\"Python\"))\nprint(",
      3.34765625
    ],
    [
      "def word_length(string):\n    if len(string) % 2 == 1:\n        return True\n    else:\n        return False\n\nprint(word_length(\"hello\"))\nprint(word_length(\"world\"))",
      2.818359375
    ],
    [
      "def check_odd(word):\n    if len(word) % 2 != 0:\n        return True\n    else:\n        return False\n\n\nprint(check_odd(\"dog\"))\nprint(check_odd(\"cat\"))",
      2.771484375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        print(\"Even\")\n    else:\n        print(\"Odd\")\n\n\nword_length(\"abc\")",
      2.736328125
    ],
    [
      "def check_odd_even(word):\n    if len(word)%2==0:\n        return True\n    return False\n\nprint(check_odd_even(\"abc\"))\nprint(check_odd_even(\"abcdef\"))",
      2.58203125
    ],
    [
      "def is_odd(word):\n    if len(word) % 2 != 0:\n        return True\n    else:\n        return False\n\nprint(is_odd(\"word\"))",
      2.455078125
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        print(\"The length of the word is even\")\n    else:\n        print(\"The length of the word is odd\")\n\nword = input(\"Enter a word: \")\nword_length(word)",
      2.060546875
    ],
    [
      "def is_odd(word):\n    return len(word) % 2 != 0\n\ndef main():\n    word = input(\"Enter a word: \")\n    if is_odd(word):\n        print(\"The length of the word is odd.\")\n    else:\n        print(\"The length of the word is even.\")\n\nif __name__ == \"__main__\":\n    main()",
      1.8974609375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\nprint(word_length('word'))",
      1.6025390625
    ],
    [
      "def check_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\n\nprint(check_length(\"apple\"))\nprint(check_length(\"orange\"))",
      1.2783203125
    ],
    [
      "def check_length(string):\n    return len(string)%2\n\nprint(check_length(\"abc\"))\nprint(check_length(\"abcd\"))",
      1.1337890625
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\nword_length(\"hello\")",
      0.99365234375
    ],
    [
      "def check_odd_or_even(word):\n    if len(word) % 2 == 0:\n        return True\n    return False\n\nprint(check_odd_or_even(\"python\"))\nprint(check_odd_or_even(\"java\"))",
      0.7978515625
    ],
    [
      "def check_odd(str):\n    return True if len(str)%2 != 0 else False\n\nif __name__ == '__main__':\n    print(\"String is Odd or not\")\n    print(check_odd(\"Python\"))",
      0.55078125
    ],
    [
      "def check_odd_word(word):\n    if len(word) % 2 != 0:\n        print(\"The word is odd\")\n    else:\n        print(\"The word is even\")\n\ncheck_odd_word(\"helloworld\")",
      0.242431640625
    ],
    [
      "def check(word):\n    if len(word) % 2 != 0:\n        return True\n    else:\n        return False\n\n\nprint(check(\"hello\"))\nprint(check(\"\"))",
      0.23828125
    ],
    [
      "def check_odd(str):\n    return len(str)%2!=0\n\nprint(check_odd(\"abc\"))\nprint(check_odd(\"abcd\"))\nprint(check_odd(\"abcde\"))",
      0.2259521484375
    ],
    [
      "def word_length(word):\n    return bool(len(word) % 2)\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    print(word_length(word))\n\n\nif __name__ == \"__main__\":\n    main()",
      0.2034912109375
    ],
    [
      "def word_length(word):\n    return len(word) % 2 == 1\n\n\nprint(word_length(\"python\"))",
      0.1312255859375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return \"Word has even length\"\n    else:\n        return \"Word has odd length\"\n\n\nword = input(\"Enter word: \")\nprint(word_length(word))",
      0.08660888671875
    ],
    [
      "def check_odd(word):\n    if len(word) % 2 != 0:\n        return True\n    else:\n        return False\n\nprint(check_odd(\"dog\"))\nprint(check_odd(\"cat\"))\nprint(check_odd(\"elephant\"))",
      0.016021728515625
    ],
    [
      "def word_len(word):\n    return len(word) % 2 != 0\n\n\nword = input(\"Enter a word: \")\nprint(word_len(word))",
      -0.185546875
    ],
    [
      "def check_length(string: str) -> bool:\n    return bool(len(string) % 2)\n\n\nif __name__ == \"__main__\":\n    print(check_length(\"python\"))\n    print(check_length(\"java\"))",
      -0.197509765625
    ],
    [
      "def check_odd(word):\n    if len(word)%2==1:\n        return True\n    else:\n        return False\n\nprint(check_odd(\"abc\"))\nprint(check_odd(\"abcd\"))",
      -0.2020263671875
    ],
    [
      "def odd_or_even(word):\n    return len(word) % 2\n\n\nprint(odd_or_even(\"Hello\"))\nprint(odd_or_even(\"World\"))",
      -0.203369140625
    ],
    [
      "def word_len(word):\n    if len(word) % 2 == 0:\n        print(\"The length of the word is even\")\n    else:\n        print(\"The length of the word is odd\")\n\n\nword_len(\"python\")",
      -0.270751953125
    ],
    [
      "def word_length(word):\n    return True if len(word) % 2 != 0 else False\n\n\nif __name__ == '__main__':\n    print(word_length(\"word\"))\n    print(word_length(\"hello\"))",
      -0.33154296875
    ],
    [
      "def check_odd_or_even(word):\n    return len(word) % 2 != 0\n\nprint(check_odd_or_even(\"hello\"))\nprint(check_odd_or_even(\"world\"))\nprint(check_odd_or_even(\"hello world\"))",
      -0.61865234375
    ],
    [
      "def check_odd_word(word):\n    if len(word) % 2 == 1:\n        return True\n    else:\n        return False\n\nprint(check_odd_word('hello'))\nprint(check_odd_word('world'))",
      -0.7509765625
    ],
    [
      "def check_odd_length(string):\n    return len(string) % 2 != 0\n\n\ndef main():\n    print(check_odd_length(\"test\"))\n    print(check_odd_length(\"\"))\n    print(check_odd_length(\"abc\"))\n    print(check_odd_length(\"abcd\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def word_length(word):\n    return len(word) % 2 == 0\n\nprint(word_length(\"abc\"))\nprint(word_length(\"abcd\"))",
      -0.85693359375
    ],
    [
      "def check_odd(word):\n    if len(word) % 2 == 0:\n        return True\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    word = input(\"Enter a word: \")\n    result = check_odd(word)\n    if result:\n        print(\"The length of the word is odd.\")\n    else:\n        print(\"The length of the word is even.\")",
      -0.85693359375
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 0:\n        return \"Even\"\n    else:\n        return \"Odd\"\n\n\nprint(word_length(\"abc\"))",
      -0.85693359375
    ],
    [
      "def check_length(word):\n    return True if len(word) % 2 != 0 else False\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    result = check_length(word)\n    print(\"Length of the word is odd: {}\".format(result))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def check_odd_length(word):\n    if len(word) % 2 == 1:\n        print(\"The length of the word is odd\")\n    else:\n        print(\"The length of the word is even\")\n\ncheck_odd_length(\"Test\")\ncheck_odd_length(\"Testing\")",
      -0.85693359375
    ],
    [
      "def word_length(word):\n    return len(word) % 2 != 0\n\n\nprint(word_length(\"abc\"))",
      -0.857421875
    ],
    [
      "def check_odd(word: str) -> bool:\n    \"\"\"Returns True if the length of the word is odd, False otherwise.\"\"\"\n    return len(word) % 2 != 0",
      -0.857421875
    ],
    [
      "def word_length(word):\n    return len(word) % 2 == 1\n\n\nprint(word_length(\"Hello\"))",
      -0.85791015625
    ],
    [
      "def word_len(word):\n    return True if len(word) % 2 else False\n\n\nprint(word_len(\"hello\"))",
      -0.85791015625
    ],
    [
      "def check_odd_length(str):\n    if len(str)%2!=0:\n        return True\n    else:\n        return False\n\nprint(check_odd_length(\"Python\"))\nprint(check_odd_length(\"Java\"))",
      -0.85791015625
    ],
    [
      "def check_odd_or_even(word):\n    \"\"\"\n    This function takes a word and checks if the word length is odd or even.\n\n    >>> check_odd_or_even(\"Hello\")\n    Odd\n    >>> check_odd_or_even(\"Bye\")\n    Even\n    >>> check_odd_or_even(\"Yeah\")\n    Odd\n    \"\"\"\n    if len(word) % 2 == 0:\n        return \"Even\"\n    else:\n        return \"Odd\"\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "def word_length(word):\n    if len(word) % 2 == 1:\n        return True\n    else:\n        return False\n\n\nprint(word_length(\"hello\"))\nprint(word_length(\"world\"))",
      -0.85791015625
    ],
    [
      "def check_odd(word):\n    return len(word) % 2 == 1\n\n\ndef main():\n    word = input(\"Enter a word: \")\n    if check_odd(word):\n        print(\"The word has odd length\")\n    else:\n        print(\"The word has even length\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def check_odd_even(string: str) -> bool:\n    \"\"\"\n    Checks whether the length of the word is odd or not.\n    >>> check_odd_even(\"Python\")\n    True\n    \"\"\"\n    return len(string) % 2 != 0\n\n\ndef main():\n    \"\"\"\n    Driver code to test the above function\n    \"\"\"\n    print(check_odd_even(\"Python\"))\n    print(check_odd_even(\"Java\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def check_odd_length(word):\n    return len(word) % 2 != 0\n\n\nif __name__ == \"__main__\":\n    print(check_odd_length(\"word\"))\n    print(check_odd_length(\"wordword\"))",
      -0.8583984375
    ],
    [
      "def odd_word(word):\n    if len(word) % 2 == 0:\n        return False\n    else:\n        return True\n\nprint(odd_word(\"hello\"))\nprint(odd_word(\"world\"))\nprint(odd_word(\"test\"))\nprint(odd_word(\"python\"))",
      -0.8583984375
    ],
    [
      "def word_len(string: str) -> bool:\n    \"\"\"\n    >>> word_len('hello')\n    False\n    >>> word_len('world')\n    True\n    \"\"\"\n    return len(string) % 2 == 1\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "def check_odd_length(word: str) -> bool:\n    \"\"\"\n    >>> check_odd_length(\"Python\")\n    True\n    \"\"\"\n    return len(word) % 2 == 1\n\n\ndef main():\n    print(check_odd_length(\"Python\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def odd_or_even(string):\n    if len(string)%2==0:\n        print(\"The word is even\")\n    else:\n        print(\"The word is odd\")\n\nodd_or_even(\"hello\")",
      -0.9775390625
    ],
    [
      "def check_odd_or_even(word: str) -> bool:\n    \"\"\"\n    This function takes in the word as a parameter and check whether the length of the word is odd or not.\n\n    >>> check_odd_or_even(\"Apple\")\n    False\n    >>> check_odd_or_even(\"Orange\")\n    True\n    >>> check_odd_or_even(\"Pear\")\n    True\n    >>> check_odd_or_even(\"Banana\")\n    False\n    >>> check_odd_or_even(\"Kiwi\")\n    True\n    >>> check_odd_or_even(\"Cherry\")\n    True\n    >>> check_odd_or_even(\"Pineapple\")\n    False\n    >>> check_odd_or_even(\"Mango\")\n    True\n    >>> check_odd_or_even(\"Papaya\")\n    True\n    >>> check_odd_or_even(\"Avocado\")\n    True\n    >>> check_odd_or_even(\"Grapes\")\n    True\n    >>> check_odd_or_even(\"Cherry\")\n    True\n    >>> check_odd_or_even(\"Tomato\")\n    True\n    \"\"\"\n    if len(word) % 2 == 0:\n        return True\n    return False\n\n\ndef main():\n    \"\"\"\n    This is the main function used to call the other functions and calculate the runtime.\n    \"\"\"\n    import datetime\n    import sys\n    start = datetime.datetime.now()\n    print(\"The length of the word is: \", check_odd_or_even(sys.argv[1]))\n    end = datetime.datetime.now()\n    print(\"The runtime of the program is \", (end - start))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod(verbose=True)\n    main()",
      -1.1845703125
    ],
    [
      "def is_odd(word):\n    if len(word)%2 != 0:\n        return True\n    return False\n\nprint(is_odd(\"word\"))\nprint(is_odd(\"apple\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is palindrome or not.\n\"\"\"\ndef is_palindrome(word):\n    if word == word[::-1]:\n        return True\n    return False\n\nprint(is_palindrome(\"word\"))\nprint(is_palindrome(\"apple\"))\nprint(is_palindrome(\"madam\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is a pangram or not.\n\"\"\"\ndef is_pangram(word):\n    return len(set(word)) == 26\n\nprint(is_pangram(\"The quick brown fox jumps over the lazy dog\"))\nprint(is_pangram(\"Python\"))\nprint(is_pangram(\"Practice makes perfect\"))\nprint(is_pangram(\"The quick brown fox jumps over the lazy dog\"))\n\n\n\"\"\"\nWrite a python function to check whether the word is an anagram or not.\n\"\"\"\ndef is_anagram(word1, word2):\n    if sorted(word1) == sorted(word2):\n        return True\n    return False\n\nprint(is_anagram(\"Python\", \"Typhon\"))\nprint(is_anagram(\"Python\", \"Java\"))\nprint(is_anagram(\"Python\", \"Python\"))\n\n\n\"\"\"\nWrite a python program to check whether the given year is a leap year or not.\n\"\"\"\ndef is_leap(year):\n    if year%4 == 0:\n        if year%100 == 0:\n            if year%400 == 0:\n                return True\n            return False\n        return True\n    return False\n\nprint(is_leap(2019))\nprint(is_leap(2020))\nprint(is_leap(2000))\nprint(is_leap(2015))\n\n\n\"\"\"\nWrite a python function to check whether the given year is a",
      -3.896484375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}