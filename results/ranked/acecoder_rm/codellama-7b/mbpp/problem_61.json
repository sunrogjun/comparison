{
  "problem": {
    "task_id": "MBPP/72",
    "prompt": "Write a python function to check whether the given number can be represented as difference of two squares or not.",
    "canonical_solution": "def dif_Square(n): \r\n    if (n % 4 != 2): \r\n        return True\r\n    return False",
    "test_list": [
      "assert dif_Square(5) == True",
      "assert dif_Square(10) == False",
      "assert dif_Square(15) == True"
    ],
    "challenge_test_list": [],
    "problem_id": 61
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def is_difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(13)\n    False\n    >>> is_difference_of_two_squares(25)\n    True\n    \"\"\"\n    for i in range(1, int(num ** 0.5)):\n        if num - i ** 2 == int((num - i ** 2) ** 0.5) ** 2:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      5.58984375
    ],
    [
      "def is_diff_of_two_squares(n):\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            if i * i + j * j == n:\n                return True\n    return False",
      2.896484375
    ],
    [
      "def diff_of_two_squares(num):\n    for i in range(1, int(num / 2) + 1):\n        if i * i + (num - i * i) * (num - i * i) == num:\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if diff_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      2.123046875
    ],
    [
      "def is_diff_of_two_squares(num: int) -> bool:\n    for i in range(1, num // 2 + 1):\n        j: int = (num - i * i) ** 0.5\n        if j.is_integer():\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_diff_of_two_squares(100))\n    print(is_diff_of_two_squares(101))",
      1.78125
    ],
    [
      "def is_difference_of_two_squares(num):\n    \"\"\"\n    >>> is_difference_of_two_squares(1)\n    False\n    >>> is_difference_of_two_squares(2)\n    False\n    >>> is_difference_of_two_squares(3)\n    True\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(5)\n    False\n    >>> is_difference_of_two_squares(6)\n    True\n    >>> is_difference_of_two_squares(7)\n    False\n    >>> is_difference_of_two_squares(8)\n    True\n    >>> is_difference_of_two_squares(9)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(11)\n    False\n    >>> is_difference_of_two_squares(12)\n    True\n    >>> is_difference_of_two_squares(13)\n    False\n    >>> is_difference_of_two_squares(14)\n    True\n    >>> is_difference_of_two_squares(15)\n    False\n    >>> is_difference_of_two_squares(16)\n    True\n    >>> is_difference_of_two_squares(17)\n    False\n    >>> is_difference_of_two_squares(18)\n    True\n    >>> is_difference_of_two_squares(19)\n    False\n    >>> is_difference_of_two_squares(20)\n    True\n    >>> is_difference_of_two_squares(21)\n    False\n    >>> is_difference_of_two_squares(22)\n    True\n    >>> is_difference_of_two_squares(23)\n    False\n    >>> is_difference_of_two_squares(24)",
      1.70703125
    ],
    [
      "def check_diff_of_two_squares(n):\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if i*i - j*j == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(\"Enter the number:\")\n    n = int(input())\n    if check_diff_of_two_squares(n):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number can not be represented as difference of two squares\")",
      1.314453125
    ],
    [
      "def is_diff_of_two_square(num):\n    i = 1\n    while i * i < num:\n        j = 1\n        while j * j < num:\n            if i * i + j * j == num:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_diff_of_two_square(121))\n    print(is_diff_of_two_square(27))",
      1.041015625
    ],
    [
      "def check_diff_of_squares(num):\n    for i in range(1, int(num/2)+1):\n        j = int((num - i*i)/2)\n        if i*i + j*j == num:\n            return True\n    return False\n\n\nprint(check_diff_of_squares(17))\nprint(check_diff_of_squares(18))\nprint(check_diff_of_squares(25))\nprint(check_diff_of_squares(36))\nprint(check_diff_of_squares(45))\nprint(check_diff_of_squares(57))\nprint(check_diff_of_squares(67))\nprint(check_diff_of_squares(76))\nprint(check_diff_of_squares(85))\nprint(check_diff_of_squares(100))",
      0.994140625
    ],
    [
      "def check(n):\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            if i*i+j*j==n:\n                return True\n    return False\nprint(check(3))",
      0.97802734375
    ],
    [
      "def check_diff_of_two_squares(num):\n    for i in range(1, int(num**0.5)+1):\n        for j in range(1, int(num**0.5)+1):\n            if i**2+j**2 == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.9375
    ],
    [
      "def difference_of_squares(n):\n    for i in range(1, n + 1):\n        for j in range(1, i):\n            if i * i - j * j == n:\n                return True\n    return False\n\n\ndef main():\n    val = int(input(\"Enter a number: \"))\n    if difference_of_squares(val):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.84033203125
    ],
    [
      "def check(n):\n    for i in range(1, int(n ** 0.5) + 1):\n        for j in range(1, int(i ** 0.5) + 1):\n            if (i + j) ** 2 == n or (i - j) ** 2 == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.397216796875
    ],
    [
      "def difference_of_two_squares(number):\n    i = 1\n    while i * i < number:\n        j = 1\n        while j * j < number:\n            if (i * i + j * j) == number:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\nprint(difference_of_two_squares(3))\nprint(difference_of_two_squares(5))\nprint(difference_of_two_squares(13))\nprint(difference_of_two_squares(15))\nprint(difference_of_two_squares(17))",
      0.2491455078125
    ],
    [
      "def is_diff_of_two_squares(num):\n    for i in range(1, int(num/2)):\n        if (i*i + (num - i*i)) ** 0.5 == int((i*i + (num - i*i)) ** 0.5):\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if is_diff_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number can't be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.189697265625
    ],
    [
      "def diff_of_two_square(num):\n    for i in range(1, int(num/2)+1):\n        for j in range(1, int((num-i*i)/2)+1):\n            if (i*i+j*j) == num:\n                return True\n    return False\n\n\ndef main():\n    val1 = int(input(\"Enter first number: \"))\n    val2 = int(input(\"Enter second number: \"))\n    if diff_of_two_square(val1) and diff_of_two_square(val2):\n        print(f\"{val1} and {val2} are difference of two squares\")\n    else:\n        print(f\"{val1} and {val2} are not difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      0.0975341796875
    ],
    [
      "from __future__ import annotations\n\n\ndef check_diff_of_two_squares(number: int) -> bool:\n    \"\"\"\n    Return if the given number can be represented as difference of two squares or not\n    >>> check_diff_of_two_squares(3)\n    True\n    >>> check_diff_of_two_squares(13)\n    True\n    >>> check_diff_of_two_squares(10)\n    False\n    >>> check_diff_of_two_squares(15)\n    False\n    >>> check_diff_of_two_squares(2)\n    False\n    >>> check_diff_of_two_squares(1)\n    False\n    >>> check_diff_of_two_squares(0)\n    True\n    >>> check_diff_of_two_squares(-1)\n    False\n    >>> check_diff_of_two_squares(-2)\n    False\n    >>> check_diff_of_two_squares(-3)\n    False\n    >>> check_diff_of_two_squares(-4)\n    False\n    >>> check_diff_of_two_squares(-5)\n    False\n    >>> check_diff_of_two_squares(-6)\n    False\n    >>> check_diff_of_two_squares(-7)\n    False\n    >>> check_diff_of_two_squares(-8)\n    False\n    >>> check_diff_of_two_squares(-9)\n    False\n    >>> check_diff_of_two_squares(-10)\n    False\n    >>> check_diff_of_two_squares(-11)\n    False\n    >>> check_diff_of_two_squares(-12)\n    False\n    >>> check_diff_of_two_squares(-13)\n    False\n    >>> check_diff_of_two_squares(-14)\n    False\n    >>> check_diff_of_two_squares(-15)\n    False\n    >>> check_diff_of_two_squares(-16)\n    False\n    >>> check_diff_of_two_squares(-17",
      0.078369140625
    ],
    [
      "def check_difference_of_two_squares(n):\n    for i in range(int(n**0.5)+1):\n        for j in range(i, int(n**0.5)+1):\n            if i*i+j*j == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(check_difference_of_two_squares(100))",
      0.06524658203125
    ],
    [
      "def differenceOfSquares(n):\n    i = 1\n    while i * i <= n:\n        k = n - i * i\n        if k >= 0 and k <= n and (i * i + k) == n:\n            return True\n        i += 1\n    return False\n\n\ndef main():\n    n = int(input(\"Enter number: \"))\n    if differenceOfSquares(n):\n        print(\"Number can be represented as difference of two squares\")\n    else:\n        print(\"Number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.047088623046875
    ],
    [
      "def diff_of_squares(n):\n    for i in range(1, n):\n        for j in range(1, n):\n            if i*i + j*j == n:\n                return True\n    return False\n\nif __name__ == '__main__':\n    n = int(input(\"Enter a number: \"))\n    if diff_of_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")",
      -0.07757568359375
    ],
    [
      "def differenceOfSquares(number):\n    for i in range(1, number):\n        for j in range(1, number):\n            if i*i + j*j == number:\n                return True\n    return False",
      -0.0794677734375
    ],
    [
      "from math import sqrt\n\n\ndef check_diff_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> check_diff_of_two_squares(1)\n    False\n    >>> check_diff_of_two_squares(5)\n    True\n    >>> check_diff_of_two_squares(11)\n    False\n    >>> check_diff_of_two_squares(3)\n    True\n    >>> check_diff_of_two_squares(4)\n    False\n    >>> check_diff_of_two_squares(6)\n    True\n    >>> check_diff_of_two_squares(25)\n    True\n    >>> check_diff_of_two_squares(36)\n    False\n    >>> check_diff_of_two_squares(15)\n    True\n    >>> check_diff_of_two_squares(31)\n    False\n    >>> check_diff_of_two_squares(10)\n    True\n    \"\"\"\n    for i in range(1, int(sqrt(n)) + 1):\n        if i * i + (n - i * i) ** 2 == n:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.08087158203125
    ],
    [
      "def check_diff_of_two_squares(num):\n    for i in range(1, int(num**0.5)+1):\n        if num - i**2 > 0 and (num - i**2)**0.5 % 1 == 0:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter the number: \"))\n    if check_diff_of_two_squares(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")",
      -0.283447265625
    ],
    [
      "def is_diff_of_two_squares(n):\n    for i in range(int(n ** 0.5)):\n        for j in range(int(n ** 0.5)):\n            if i ** 2 - j ** 2 == n:\n                return True\n    return False\n\n\nprint(is_diff_of_two_squares(3))\nprint(is_diff_of_two_squares(4))\nprint(is_diff_of_two_squares(5))\nprint(is_diff_of_two_squares(11))",
      -0.298828125
    ],
    [
      "def check_diff_of_two_squares(num):\n    if num < 0:\n        return False\n\n    for i in range(1, int(num**0.5)+1):\n        if num - i*i == 0:\n            return True\n        elif num - i*i < 0:\n            break\n    return False\n\n\nprint(check_diff_of_two_squares(10))\nprint(check_diff_of_two_squares(15))\nprint(check_diff_of_two_squares(27))\nprint(check_diff_of_two_squares(121))\nprint(check_diff_of_two_squares(144))\nprint(check_diff_of_two_squares(169))\nprint(check_diff_of_two_squares(170))\nprint(check_diff_of_two_squares(171))\nprint(check_diff_of_two_squares(172))\nprint(check_diff_of_two_squares(173))\nprint(check_diff_of_two_squares(174))\nprint(check_diff_of_two_squares(175))\nprint(check_diff_of_two_squares(176))\nprint(check_diff_of_two_squares(177))\nprint(check_diff_of_two_squares(178))\nprint(check_diff_of_two_squares(179))\nprint(check_diff_of_two_squares(180))\nprint(check_diff_of_two_squares(181))\nprint(check_diff_of_two_squares(182))\nprint(check_diff_of_two_squares(183))\nprint(check_diff_of_two_squares(184))\nprint(check_diff_of_two_squares(185))\nprint(check_diff_of_two_squares(186))\nprint(check_diff_of_two_squares(187",
      -0.33447265625
    ],
    [
      "from math import sqrt\n\n\ndef is_difference_of_two_squares(num):\n    for i in range(1, int(sqrt(num)) + 1):\n        j = sqrt(num - i * i)\n        if j.is_integer():\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if is_difference_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.658203125
    ],
    [
      "def check_diff(num):\n    for i in range(int((num**0.5)+1)):\n        for j in range(int((num**0.5)+1)):\n            if (i*i + j*j) == num:\n                return True\n    return False\n\nprint(check_diff(10))\nprint(check_diff(5))\nprint(check_diff(13))",
      -0.78564453125
    ],
    [
      "def check_diff_of_two_square(n):\n    i = 0\n    while i * i <= n:\n        diff = n - i * i\n        if diff >= 0:\n            j = 0\n            while j * j <= diff:\n                if diff == j * j:\n                    return True\n                j += 1\n        i += 1\n    return False\n\nif __name__ == \"__main__\":\n    print(check_diff_of_two_square(121))\n    print(check_diff_of_two_square(4))\n    print(check_diff_of_two_square(22))\n    print(check_diff_of_two_square(3))\n    print(check_diff_of_two_square(13))",
      -0.85693359375
    ],
    [
      "from math import sqrt\n\n\ndef is_diff_of_2_squares(n):\n    for i in range(1, int(sqrt(n)) + 1):\n        if n - i * i > 0:\n            j = sqrt(n - i * i)\n            if j == int(j):\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_diff_of_2_squares(1))\n    print(is_diff_of_2_squares(2))\n    print(is_diff_of_2_squares(3))\n    print(is_diff_of_2_squares(13))",
      -0.85693359375
    ],
    [
      "def check_diff_of_two_squares(number):\n    for i in range(int(number / 2) + 1):\n        a = i ** 2\n        b = (number - a) ** 0.5\n        if b == int(b):\n            return True\n    return False\n\n\nprint(check_diff_of_two_squares(10))\nprint(check_diff_of_two_squares(17))",
      -0.85693359375
    ],
    [
      "def check_diff_of_squares(n):\n    for a in range(1, int(n**0.5)+1):\n        b = (n - a**2)**0.5\n        if b == int(b):\n            return True\n    return False",
      -0.85693359375
    ],
    [
      "def check_squares(num):\n    for i in range(1, int(num/2)+1):\n        if i*i > num:\n            break\n        for j in range(1, int(num/2)+1):\n            if (i*i+j*j) == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if check_squares(num):\n        print(f\"{num} can be represented as difference of two squares\")\n    else:\n        print(f\"{num} can not be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def isDifferenceOfSquares(n):\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            if i*i - j*j == n:\n                return True\n    return False",
      -0.85693359375
    ],
    [
      "def check_difference_of_two_squares(number):\n    for i in range(1, int(number ** 0.5) + 1):\n        for j in range(1, int(number ** 0.5) + 1):\n            if i * i + j * j == number:\n                return True\n    return False\n\n\nprint(check_difference_of_two_squares(12))\nprint(check_difference_of_two_squares(37))\nprint(check_difference_of_two_squares(52))\nprint(check_difference_of_two_squares(69))\nprint(check_difference_of_two_squares(144))",
      -0.85693359375
    ],
    [
      "def is_difference_of_two_squares(number: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(25)\n    True\n    >>> is_difference_of_two_squares(4)\n    False\n    >>> is_difference_of_two_squares(1)\n    False\n    \"\"\"\n\n    for i in range(int(number ** 0.5) + 1):\n        j = number - i * i\n        if j > 0 and j <= int(j ** 0.5) + 1:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85693359375
    ],
    [
      "def check_difference_of_two_squares(num):\n    for i in range(1, int(num/2)+1):\n        if i*i > num:\n            break\n        for j in range(i+1, int((num-i*i)/2)+1):\n            if j*j+i*i == num:\n                return True\n    return False\n\nprint(check_difference_of_two_squares(13))\nprint(check_difference_of_two_squares(25))\nprint(check_difference_of_two_squares(4))\nprint(check_difference_of_two_squares(100))\nprint(check_difference_of_two_squares(101))",
      -0.85693359375
    ],
    [
      "def difference_of_two_square(num):\n    for i in range(1, int(num/2)+1):\n        if (i*i + (num - i*i)) ** 0.5 == int((i*i + (num - i*i)) ** 0.5):\n            return True\n    return False\n\n\nprint(difference_of_two_square(20))\nprint(difference_of_two_square(21))",
      -0.85693359375
    ],
    [
      "def difference_of_two_squares(number):\n    for i in range(1, int(number/2)+1):\n        if i*i > number:\n            break\n        for j in range(i, int(number/2)+1):\n            if (i*i + j*j == number):\n                return True\n    return False\n\n\ndef main():\n    number = int(input(\"Please Enter a number: \"))\n    if difference_of_two_squares(number):\n        print(f\"{number} can be represented as difference of two squares.\")\n    else:\n        print(f\"{number} cannot be represented as difference of two squares.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def check_difference_of_two_square(num):\n    for i in range(1, num):\n        for j in range(1, num):\n            if i * i + j * j == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number : \"))\n    if check_difference_of_two_square(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def difference_of_two_squares(number):\n    for i in range(1, int(number ** 0.5)):\n        for j in range(1, int(number ** 0.5)):\n            if i ** 2 + j ** 2 == number:\n                return True\n    return False\n\n\nprint(difference_of_two_squares(25))\nprint(difference_of_two_squares(26))",
      -0.85693359375
    ],
    [
      "def check(n):\n    for i in range(1, int(n/2)+1):\n        if i*i + (n - i*i)**2 == n:\n            return True\n    return False",
      -0.85791015625
    ],
    [
      "def check_difference_of_two_square(n):\n    # if n < 0:\n    #     return False\n    # for i in range(1, n+1):\n    #     for j in range(i+1, n+1):\n    #         if i*i + j*j == n:\n    #             return True\n    # return False\n\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            if i*i + j*j == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(check_difference_of_two_square(10))\n    print(check_difference_of_two_square(12))\n    print(check_difference_of_two_square(15))",
      -0.85791015625
    ],
    [
      "def is_difference_of_two_squares(num):\n    for i in range(1, int(num ** 0.5) + 1):\n        for j in range(1, int(i ** 0.5) + 1):\n            if i ** 2 - j ** 2 == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if is_difference_of_two_squares(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def isDifferenceOfSquares(n):\n    for i in range(1,int(n**0.5)+1):\n        if ((i*i+n-(i+1)*(i+1))>0) and ((i*i+n-(i+1)*(i+1))==0 or (i*i+n-(i+1)*(i+1))<0):\n            return True\n    return False",
      -0.85791015625
    ],
    [
      "def difference_of_squares(num):\n    squares = []\n    i = 1\n    while i*i <= num:\n        squares.append(i*i)\n        i += 1\n    for i in range(len(squares)):\n        for j in range(i+1, len(squares)):\n            if squares[i] + squares[j] == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if difference_of_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def check(n):\n    for i in range(1, n):\n        for j in range(1, i):\n            if i*i - j*j == n:\n                return True\n    return False",
      -0.85791015625
    ],
    [
      "def check_diff(num):\n    for i in range(1, num+1):\n        if i*i > num:\n            return False\n        for j in range(i+1, num+1):\n            if i*i + j*j == num:\n                return True\n    return False\n\nprint(check_diff(25))\nprint(check_diff(15))",
      -0.85791015625
    ],
    [
      "def difference_of_two_squares(n):\n    for i in range(1, n):\n        for j in range(i, n):\n            if i*i + j*j == n:\n                return True\n    return False\n\n\ndef main():\n    print(difference_of_two_squares(17))\n    print(difference_of_two_squares(25))\n    print(difference_of_two_squares(40))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def check_difference_of_two_square(n: int) -> bool:\n    \"\"\"\n    >>> check_difference_of_two_square(10)\n    True\n    >>> check_difference_of_two_square(11)\n    False\n    >>> check_difference_of_two_square(12)\n    True\n    >>> check_difference_of_two_square(15)\n    False\n    >>> check_difference_of_two_square(16)\n    True\n    \"\"\"\n    for i in range(1, n):\n        for j in range(1, n):\n            if i * i + j * j == n:\n                return True\n    return False\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def is_square_diff(num):\n    for i in range(1, num):\n        for j in range(1, num):\n            if i*i + j*j == num:\n                return True\n    return False\n\n\nprint(is_square_diff(4))\nprint(is_square_diff(13))\nprint(is_square_diff(10))\nprint(is_square_diff(11))\nprint(is_square_diff(25))\nprint(is_square_diff(26))",
      -0.85791015625
    ],
    [
      "from math import sqrt\n\n\ndef check_difference_of_two_squares(number):\n    if number <= 0:\n        return False\n    else:\n        for i in range(1, int(sqrt(number)) + 1):\n            for j in range(1, int(sqrt(number)) + 1):\n                if i ** 2 - j ** 2 == number:\n                    return True\n    return False\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    if check_difference_of_two_squares(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def is_difference_of_two_squares(number):\n    for i in range(1, int(number**0.5)+1):\n        j = (number - i**2)**0.5\n        if i**2 + j**2 == number:\n            return True\n    return False\n\n\nprint(is_difference_of_two_squares(12))\nprint(is_difference_of_two_squares(13))",
      -0.8583984375
    ],
    [
      "def is_square_difference(num):\n    for i in range(1, int(num**0.5)+1):\n        if num - i**2 == int((num - i**2)**0.5)**2:\n            return True\n    return False\n\n\nprint(is_square_difference(17))\nprint(is_square_difference(12))",
      -0.8583984375
    ],
    [
      "def check_diff_of_two_squares(number):\n    for i in range(1, int(number ** 0.5) + 1):\n        j = i ** 2 - number\n        if j >= 0 and j ** 0.5 == int(j ** 0.5):\n            return True\n    return False\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def check_diff_of_squares(num):\n    for i in range(0, int(num/2)+1):\n        for j in range(i+1, int(num/2)+1):\n            if i*i + j*j == num:\n                return True\n    return False\n\n\nprint(check_diff_of_squares(15))\nprint(check_diff_of_squares(16))",
      -0.86083984375
    ],
    [
      "def is_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(2)\n    False\n    >>> is_difference_of_two_squares(3)\n    False\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(5)\n    True\n    >>> is_difference_of_two_squares(6)\n    False\n    >>> is_difference_of_two_squares(7)\n    False\n    >>> is_difference_of_two_squares(8)\n    True\n    >>> is_difference_of_two_squares(9)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(11)\n    False\n    >>> is_difference_of_two_squares(12)\n    True\n    >>> is_difference_of_two_squares(13)\n    False\n    >>> is_difference_of_two_squares(14)\n    False\n    >>> is_difference_of_two_squares(15)\n    False\n    >>> is_difference_of_two_squares(16)\n    True\n    >>> is_difference_of_two_squares(17)\n    True\n    >>> is_difference_of_two_squares(18)\n    False\n    >>> is_difference_of_two_squares(19)\n    False\n    >>> is_difference_of_two_squares(20)\n    True\n    >>> is_difference_of_two_squares(21)\n    False\n    >>> is_difference_of_two_squares(22)\n    False\n    >>> is_difference_of_two_squares(23)\n    False\n    >>> is_difference_of_two_squares(24)\n    True\n    >>> is_difference_of_two_",
      -0.96142578125
    ],
    [
      "def can_represent(number: int) -> bool:\n    \"\"\"\n    Check whether the given number can be represented as difference of two squares or not.\n    >>> can_represent(1)\n    True\n    >>> can_represent(2)\n    True\n    >>> can_represent(3)\n    False\n    >>> can_represent(4)\n    True\n    >>> can_represent(5)\n    True\n    >>> can_represent(6)\n    True\n    >>> can_represent(7)\n    False\n    >>> can_represent(8)\n    True\n    >>> can_represent(10)\n    True\n    >>> can_represent(11)\n    False\n    >>> can_represent(12)\n    True\n    >>> can_represent(13)\n    False\n    >>> can_represent(14)\n    True\n    >>> can_represent(15)\n    True\n    >>> can_represent(16)\n    True\n    >>> can_represent(17)\n    False\n    >>> can_represent(18)\n    True\n    >>> can_represent(19)\n    False\n    >>> can_represent(20)\n    True\n    >>> can_represent(21)\n    False\n    >>> can_represent(22)\n    True\n    >>> can_represent(23)\n    False\n    >>> can_represent(24)\n    True\n    >>> can_represent(25)\n    True\n    >>> can_represent(26)\n    True\n    >>> can_represent(27)\n    False\n    >>> can_represent(28)\n    True\n    >>> can_represent(29)\n    False\n    >>> can_represent(30)\n    True\n    >>> can_represent(31)\n    False\n    >>> can_represent(32)\n    True\n    >>> can_represent(33)\n    False\n    >>> can_represent(34)\n    True\n    >>> can_represent(35)\n    False\n    >>> can_represent(",
      -0.97607421875
    ],
    [
      "def check_diff_of_two_square(num):\n    for i in range(1, int(num**0.5)+1):\n        if (i*i + (num - i*i))**0.5 == int((i*i + (num - i*i))**0.5):\n            return True\n    return False",
      -0.99609375
    ],
    [
      "from math import sqrt\n\n\ndef is_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    This function will check if the given number is the difference of two squares or not.\n    >>> is_difference_of_two_squares(3)\n    False\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(12)\n    False\n    >>> is_difference_of_two_squares(100)\n    True\n    >>> is_difference_of_two_squares(-1)\n    True\n    >>> is_difference_of_two_squares(0)\n    False\n    >>> is_difference_of_two_squares(5)\n    False\n    >>> is_difference_of_two_squares(15)\n    True\n    >>> is_difference_of_two_squares(16)\n    False\n    \"\"\"\n    if n < 0:\n        return is_difference_of_two_squares(-n)\n\n    for i in range(1, int(sqrt(n)) + 1):\n        j = int(sqrt(n - i * i))\n        if i * i + j * j == n:\n            return True\n\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.0771484375
    ],
    [
      "def is_difference_of_two_square(num):\n    for i in range(0, num + 1):\n        if i ** 2 > num:\n            return False\n        if (num - i) ** 2 == num:\n            return True\n    return False\n\n\nprint(is_difference_of_two_square(5))\nprint(is_difference_of_two_square(12))\nprint(is_difference_of_two_square(13))\nprint(is_difference_of_two_square(14))\nprint(is_difference_of_two_square(17))\nprint(is_difference_of_two_square(18))\nprint(is_difference_of_two_square(25))",
      -1.1904296875
    ],
    [
      "def is_diff_of_squares(n):\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if (i*i) - (j*j) == n:\n                return True\n    return False\n\nprint(is_diff_of_squares(5))\nprint(is_diff_of_squares(12))\nprint(is_diff_of_squares(37))\nprint(is_diff_of_squares(42))",
      -1.2451171875
    ],
    [
      "def check_difference_of_two_squares(n):\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if i*i-j*j == n:\n                return True\n    return False\n\nif __name__ == \"__main__\":\n    n = int(input())\n    if check_difference_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\"\"\"\nTest cases:\n\nInput 1:\n3\nOutput 1:\nYes\n\nInput 2:\n11\nOutput 2:\nYes\n\nInput 3:\n14\nOutput 3:\nNo\n\"\"\"",
      -1.2734375
    ],
    [
      "def check_difference(n: int) -> bool:\n    \"\"\"\n    check_difference will return True if the number can be represented as difference of two squares\n    >>> check_difference(9)\n    True\n    >>> check_difference(16)\n    True\n    >>> check_difference(25)\n    True\n    >>> check_difference(50)\n    True\n    >>> check_difference(100)\n    False\n    >>> check_difference(200)\n    False\n    >>> check_difference(300)\n    False\n    \"\"\"\n    i = 1\n    while i * i <= n:\n        i += 1\n    i -= 2\n    while i >= 0:\n        a = int(n - i * i)\n        b = int(n - i - 1)\n        if a * a + b * b == n:\n            return True\n        i -= 1\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.3232421875
    ],
    [
      "def is_diff_of_two_squares(n):\n    if n < 0:\n        return False\n    for i in range(1, int(n ** 0.5) + 1):\n        for j in range(1, int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\nprint(is_diff_of_two_squares(50))\nprint(is_diff_of_two_squares(35))\nprint(is_diff_of_two_squares(100))",
      -1.3369140625
    ],
    [
      "def can_be_represented_as_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> can_be_represented_as_difference_of_two_squares(2)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(3)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(4)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(5)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(6)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(7)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(8)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(9)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(10)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(11)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(12)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(13)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(14)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(15)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(16)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(17)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(",
      -1.5263671875
    ],
    [
      "def check_diff(n):\n    for i in range(1, int(n/2)+1):\n        if ((i*i+i*i) == n):\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter number: \"))\n    if check_diff(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")",
      -1.8046875
    ],
    [
      "def is_sum_of_two_square(n):\n    for i in range(int((n/2)+1)):\n        if (i*i + (n-i*i)) == n:\n            return True\n    return False",
      -1.8203125
    ],
    [
      "def check_diff_of_two_squares(num):\n    i = 1\n    while i * i <= num:\n        diff = num - i * i\n        j = 1\n        while j * j <= diff:\n            if i * i + j * j == num:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == '__main__':\n    main()",
      -1.83203125
    ],
    [
      "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(5)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(21)\n    True\n    >>> difference_of_two_squares(22)\n    False\n    >>> difference_of_two_squares(23)\n    False\n    >>> difference_of_two_squares(24)\n    True\n    >>> difference_of_two_squares(25)\n    False\n    >>> difference_of_two_squares(26)\n    False\n    >>> difference_of_two_squares(27)\n    False\n    >>> difference_of_two_squares(28)\n    True\n    >>> difference_of_two_squares(29)\n    False\n    >>> difference_of_two_squares(30)\n    True\n    >>> difference_of_two_squares(31)\n    False\n    >>> difference_of_two_squares(32)\n    True\n    >>> difference_of_two_squares(33)\n    False\n    >>> difference_of_two_squares(34)\n    False\n    >>> difference_of_two_squares(35)\n    False\n    >>> difference_of_two_squares(36)\n    True\n    >>> difference_of_two_squares(37)\n    False\n    >>> difference_of_two_squares(38)\n    False\n    >>> difference_of_two_squares(39)\n    False\n    >>> difference_of_two_squares(40)\n    True\n    >>> difference_of_two_squares(41)\n    False\n    >>> difference_of_two_squares(42)\n    False\n    >>> difference_of_two_squares(43)\n    False\n    >>> difference_of_two_squares(44)\n    True\n    >>> difference_",
      -1.90234375
    ],
    [
      "def difference_of_two_square(n):\n    i=1\n    while i*i<n:\n        j=1\n        while j*j<n:\n            if n==i*i+j*j:\n                return True\n            j+=1\n        i+=1\n    return False\n\nprint(difference_of_two_square(3))",
      -1.9951171875
    ],
    [
      "def differenceOfSquares(a):\n    for i in range(1, a):\n        if (i * i) + (a - i * i) == a:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    print(differenceOfSquares(25))\n    print(differenceOfSquares(26))",
      -2.17578125
    ],
    [
      "def diff_of_squares(num):\n    for i in range(1,int(num/2)+1):\n        for j in range(1,int(num/2)+1):\n            if i*i + j*j == num:\n                return True\n    return False\n\nprint(diff_of_squares(121))\nprint(diff_of_squares(125))\nprint(diff_of_squares(126))",
      -2.185546875
    ],
    [
      "def is_difference_of_two_square(num):\n    for i in range(1, int(num/2) + 1):\n        j = int((num - i * i) ** 0.5)\n        if i * i + j * j == num:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    print(is_difference_of_two_square(num))",
      -2.26171875
    ],
    [
      "def can_be_difference_of_two_squares(n):\n    i = 1\n    while i * i < n:\n        j = 1\n        while j * j < n:\n            if i * i + j * j == n:\n                return True\n            j += 1\n        i += 1\n    return False",
      -2.37109375
    ],
    [
      "def isDifferenceOfSquares(n):\n    for i in range(int(n**0.5)+1):\n        for j in range(i+1,int(n**0.5)+1):\n            if (i**2)+(j**2)==n:\n                return True\n    return False\n\nisDifferenceOfSquares(14)",
      -2.392578125
    ],
    [
      "def check_diff_of_squares(number):\n    for i in range(int(number ** 0.5)):\n        if i ** 2 + (number - i ** 2) ** 2 == number:\n            return True\n    return False\n\nprint(check_diff_of_squares(4))\nprint(check_diff_of_squares(23))\nprint(check_diff_of_squares(24))\nprint(check_diff_of_squares(25))\nprint(check_diff_of_squares(26))\nprint(check_diff_of_squares(27))\nprint(check_diff_of_squares(28))\nprint(check_diff_of_squares(29))\nprint(check_diff_of_squares(30))\nprint(check_diff_of_squares(31))\nprint(check_diff_of_squares(32))\nprint(check_diff_of_squares(33))\nprint(check_diff_of_squares(34))\nprint(check_diff_of_squares(35))\nprint(check_diff_of_squares(36))\nprint(check_diff_of_squares(37))\nprint(check_diff_of_squares(38))\nprint(check_diff_of_squares(39))\nprint(check_diff_of_squares(40))\nprint(check_diff_of_squares(41))\nprint(check_diff_of_squares(42))\nprint(check_diff_of_squares(43))\nprint(check_diff_of_squares(44))\nprint(check_diff_of_squares(45))\nprint(check_diff_of_squares(46))\nprint(check_diff_of_squares(47))\nprint(check_diff_of_squares(48))\nprint(check_diff_of_squares(49))\nprint(check_diff_of_squares(50))\nprint(check_diff_of_squares(51))\nprint(",
      -2.54296875
    ],
    [
      "def difference_of_two_squares(number):\n    for i in range(1, int(number / 2)):\n        if i * i + i * i == number:\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    result = difference_of_two_squares(num)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.796875
    ],
    [
      "def check_diff_of_two_squares(n):\n    for i in range(1, int(n**0.5)+1):\n        for j in range(1, int(n**0.5)+1):\n            if i*i + j*j == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.83984375
    ],
    [
      "def is_difference_of_two_squares(n):\n    for i in range(1, int(n ** 0.5) + 1):\n        if n - i ** 2 > 0:\n            j = int((n - i ** 2) ** 0.5)\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False",
      -2.94140625
    ],
    [
      "def isSquare(n):\n    for i in range(int((n ** 0.5))):\n        if (i ** 2) == (n - (i+1) ** 2):\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    if isSquare(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")",
      -3.015625
    ],
    [
      "def is_diff_of_two_squares(num):\n    \"\"\"\n    >>> is_diff_of_two_squares(4)\n    True\n    >>> is_diff_of_two_squares(100)\n    True\n    >>> is_diff_of_two_squares(5)\n    False\n    >>> is_diff_of_two_squares(0)\n    False\n    >>> is_diff_of_two_squares(1)\n    False\n    >>> is_diff_of_two_squares(-1)\n    False\n    >>> is_diff_of_two_squares(-100)\n    False\n    \"\"\"\n    for i in range(1, int(num ** 0.5) + 1):\n        if i * i + i * i > num:\n            return False\n        if num - i * i == i * i:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.203125
    ],
    [
      "def is_difference_of_two_squares(n):\n    i = 0\n    while i * i <= n:\n        i += 1\n    for a in range(i):\n        b = n - a * a\n        if b >= 0 and b <= i and i * i + b * b == n:\n            return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if is_difference_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -3.3515625
    ],
    [
      "def difference_of_two_squares(n):\n    i = 1\n    while i * i < n:\n        i += 1\n    j = 1\n    while j * j < n:\n        if (n - i * i) % (j * j) == 0:\n            return True\n        j += 1\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if difference_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -3.681640625
    ],
    [
      "def difference_of_two_squares(number: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(5)\n    False\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(17)\n    True\n    >>> difference_of_two_squares(25)\n    True\n    >>> difference_of_two_squares(26)\n    False\n    >>> difference_of_two_squares(27)\n    False\n    >>> difference_of_two_squares(49)\n    True\n    >>> difference_of_two_squares(1)\n    False\n    >>> difference_of_two_squares(0)\n    False\n    >>> difference_of_two_squares(-1)\n    False\n    >>> difference_of_two_squares(-2)\n    False\n    >>> difference_of_two_squares(-3)\n    False\n    >>> difference_of_two_squares(-4)\n    False\n    >>> difference_of_two_squares(-5)\n    False\n    >>> difference_of_two_squares(-6)\n    False\n    >>> difference_of_two_squares(-7)\n    False\n    >>> difference_of_two_squares(-8)\n    False\n    >>> difference_of_two_squares(-9)\n    False\n    >>> difference_of_two_squares(-10)\n    False\n    >>> difference_of_two_squares(-11)\n    False\n    >>> difference_of_two_squares(-12)\n    True\n    >>> difference_of_two_squares(-13)\n    True\n    >>> difference_of_two_squares(-14)\n    False\n    >>> difference_of_two_squares(-15)\n    False\n    >>> difference_of_two_squares(-16)\n    False\n    >>> difference_of_two_squares(-17)\n    False\n    >>> difference_of_two_squares(-18)",
      -3.83984375
    ],
    [
      "def difference_of_two_squares(num):\n    for i in range(1, int(num**0.5)+1):\n        for j in range(1, int(num**0.5)+1):\n            if i**2+j**2==num:\n                return True\n    return False\n\nprint(difference_of_two_squares(4))\nprint(difference_of_two_squares(10))\nprint(difference_of_two_squares(11))\nprint(difference_of_two_squares(13))\nprint(difference_of_two_squares(17))\nprint(difference_of_two_squares(19))\nprint(difference_of_two_squares(20))\nprint(difference_of_two_squares(21))\nprint(difference_of_two_squares(25))\nprint(difference_of_two_squares(26))\nprint(difference_of_two_squares(27))\nprint(difference_of_two_squares(30))\nprint(difference_of_two_squares(31))\nprint(difference_of_two_squares(32))\nprint(difference_of_two_squares(33))\nprint(difference_of_two_squares(34))\nprint(difference_of_two_squares(35))\nprint(difference_of_two_squares(36))\nprint(difference_of_two_squares(37))\nprint(difference_of_two_squares(38))\nprint(difference_of_two_squares(39))\nprint(difference_of_two_squares(40))\nprint(difference_of_two_squares(41))\nprint(difference_of_two_squares(42))\nprint(difference_of_two_squares(43))\nprint(difference_of_two_squares(44))\nprint(difference_of_two_squares(45))\nprint(difference_of_two",
      -3.947265625
    ],
    [
      "def check_difference_of_two_square(number: int) -> bool:\n    \"\"\"\n    >>> check_difference_of_two_square(12)\n    True\n    >>> check_difference_of_two_square(15)\n    False\n    >>> check_difference_of_two_square(17)\n    True\n    >>> check_difference_of_two_square(25)\n    False\n    >>> check_difference_of_two_square(30)\n    False\n    >>> check_difference_of_two_square(49)\n    False\n    >>> check_difference_of_two_square(50)\n    False\n    >>> check_difference_of_two_square(55)\n    True\n    >>> check_difference_of_two_square(56)\n    True\n    >>> check_difference_of_two_square(57)\n    False\n    >>> check_difference_of_two_square(63)\n    False\n    >>> check_difference_of_two_square(64)\n    True\n    >>> check_difference_of_two_square(65)\n    True\n    >>> check_difference_of_two_square(67)\n    True\n    >>> check_difference_of_two_square(68)\n    True\n    >>> check_difference_of_two_square(69)\n    True\n    >>> check_difference_of_two_square(70)\n    False\n    >>> check_difference_of_two_square(71)\n    False\n    >>> check_difference_of_two_square(72)\n    True\n    >>> check_difference_of_two_square(73)\n    False\n    >>> check_difference_of_two_square(74)\n    True\n    >>> check_difference_of_two_square(75)\n    False\n    >>> check_difference_of_two_square(76)\n    True\n    >>> check_difference_of_two_square(77)\n    False\n    >>> check_difference_",
      -4.2265625
    ],
    [
      "def difference_of_two_square(n):\n    for i in range(1, n):\n        for j in range(1, n):\n            if (i * i) + (j * j) == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(difference_of_two_square(10))\n    print(difference_of_two_square(13))",
      -4.27734375
    ],
    [
      "from math import sqrt\n\n\ndef is_diff_square(number: int) -> bool:\n    \"\"\"\n    Checks if the number can be represented as difference of two squares or not.\n    >>> is_diff_square(25)\n    True\n    >>> is_diff_square(3)\n    False\n    >>> is_diff_square(121)\n    True\n    >>> is_diff_square(576)\n    False\n    >>> is_diff_square(100)\n    False\n    >>> is_diff_square(1296)\n    True\n    \"\"\"\n    # A number can be written as difference of two squares only if it is of the form 4*n+1 or 4*n-1\n    if number % 4 == 1:\n        return False\n\n    if number % 4 == 2:\n        number += 1\n\n    # Let us check if there is a Pythagorean triplet whose sum is equal to the given number\n    for i in range(1, int(sqrt(number)) + 1):\n        if number - i * i > 0:\n            j = sqrt(number - i * i)\n            if j * j + i * i == number:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -4.33203125
    ],
    [
      "def check(num):\n    if num < 0:\n        return False\n    elif num == 0:\n        return True\n    else:\n        for i in range(1, int(num ** 0.5)+1):\n            if i*i + (i+1)*(i+1) == num:\n                return True\n    return False\n\n\nnum = int(input())\nif check(num):\n    print(\"Yes\")\nelse:\n    print(\"No\")",
      -4.4140625
    ],
    [
      "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(25)\n    True\n    >>> difference_of_two_squares(26)\n    False\n    \"\"\"\n    for i in range(1, int(num ** 0.5) + 1):\n        if (i ** 2 + (num - i ** 2) ** 2) == num:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -4.49609375
    ],
    [
      "def difference_of_two_squares(number):\n    for i in range(1, int(number/2)+1):\n        for j in range(1, int(number/2)+1):\n            if i*i + j*j == number:\n                return True\n    return False\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    if difference_of_two_squares(number):\n        print(number, \"can be represented as difference of two squares\")\n    else:\n        print(number, \"can not be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -4.59765625
    ],
    [
      "def check_difference(n: int) -> bool:\n    for i in range(1, n):\n        for j in range(1, n):\n            if (i * i) + (j * j) == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert check_difference(1) == False\n    assert check_difference(4) == True\n    assert check_difference(12) == False\n    assert check_difference(100) == True",
      -4.59765625
    ],
    [
      "def check_diff_of_two_squares(n):\n    for i in range(int(n ** 0.5) + 1):\n        for j in range(int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(n):\n        print(\"The number can be represented as difference of two squares.\")\n    else:\n        print(\"The number can not be represented as difference of two squares.\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -4.6953125
    ],
    [
      "def differenceOfTwoSquares(n):\n    # code here\n    for i in range(1, int(n ** 0.5) + 1):\n        for j in range(1, int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter the number: \"))\n    if differenceOfTwoSquares(n):\n        print(n, \"can be represented as difference of two squares\")\n    else:\n        print(n, \"can't be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -4.796875
    ],
    [
      "def is_difference_of_two_squares(num):\n    if num < 4:\n        return False\n    i = 1\n    while i * i < num:\n        j = 1\n        while j * j < num:\n            if i * i + j * j == num:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\nprint(is_difference_of_two_squares(2))\nprint(is_difference_of_two_squares(3))\nprint(is_difference_of_two_squares(4))\nprint(is_difference_of_two_squares(5))\nprint(is_difference_of_two_squares(6))\nprint(is_difference_of_two_squares(7))\nprint(is_difference_of_two_squares(8))\nprint(is_difference_of_two_squares(9))\nprint(is_difference_of_two_squares(10))\nprint(is_difference_of_two_squares(11))\nprint(is_difference_of_two_squares(12))\nprint(is_difference_of_two_squares(13))\nprint(is_difference_of_two_squares(14))\nprint(is_difference_of_two_squares(15))\nprint(is_difference_of_two_squares(16))\nprint(is_difference_of_two_squares(17))\nprint(is_difference_of_two_squares(18))\nprint(is_difference_of_two_squares(19))\nprint(is_difference_of_two_squares(20))\nprint(is_difference_of_two_squares(21))\nprint(is_difference_of_two_squares(22))\nprint(is_difference_of_two_squares(23))\nprint(is_difference_of_two_squares(24))\nprint(is_difference_of_two_",
      -4.8046875
    ],
    [
      "def diff_of_two_squares(n):\n    for i in range(int(n/2)+1):\n        for j in range(int(n/2)+1):\n            if i*i + j*j == n:\n                return True\n    return False\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if diff_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()",
      -4.99609375
    ],
    [
      "def difference_of_squares(num):\n    for i in range(0, int(num/2)):\n        j = int(num - i**2)\n        if i**2 + j**2 == num:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    if difference_of_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")",
      -5.38671875
    ],
    [
      "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(10)\n    True\n    >>> difference_of_two_squares(11)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(14)\n    True\n    >>> difference_of_two_squares(15)\n    False\n    >>> difference_of_two_squares(16)\n    True\n    \"\"\"\n    for i in range(1, num + 1):\n        for j in range(1, num + 1):\n            if i * i + j * j == num:\n                return True\n    return False\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()",
      -5.44921875
    ],
    [
      "def check_diff_of_two_squares(num):\n    for i in range(0, num+1):\n        for j in range(0, i+1):\n            if i*i+j*j == num:\n                return True\n    return False\n\n\nprint(check_diff_of_two_squares(2))\nprint(check_diff_of_two_squares(3))\nprint(check_diff_of_two_squares(4))\nprint(check_diff_of_two_squares(5))\nprint(check_diff_of_two_squares(6))\nprint(check_diff_of_two_squares(7))\nprint(check_diff_of_two_squares(8))\nprint(check_diff_of_two_squares(9))\nprint(check_diff_of_two_squares(10))\nprint(check_diff_of_two_squares(11))\nprint(check_diff_of_two_squares(12))\nprint(check_diff_of_two_squares(13))\nprint(check_diff_of_two_squares(14))\nprint(check_diff_of_two_squares(15))\nprint(check_diff_of_two_squares(16))\nprint(check_diff_of_two_squares(17))\nprint(check_diff_of_two_squares(18))\nprint(check_diff_of_two_squares(19))\nprint(check_diff_of_two_squares(20))\nprint(check_diff_of_two_squares(21))\nprint(check_diff_of_two_squares(22))\nprint(check_diff_of_two_squares(23))\nprint(check_diff_of_two_squares(24))\nprint(check_diff_of_two_squares(25))\nprint(check_diff_of_two_squares(26))\nprint(check_diff_of_two_squares(27))\nprint(check_diff_of_two_squares",
      -5.703125
    ],
    [
      "def is_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(1)\n    True\n    >>> is_difference_of_two_squares(2)\n    True\n    >>> is_difference_of_two_squares(3)\n    False\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(5)\n    False\n    >>> is_difference_of_two_squares(6)\n    True\n    >>> is_difference_of_two_squares(7)\n    False\n    >>> is_difference_of_two_squares(8)\n    True\n    >>> is_difference_of_two_squares(9)\n    False\n    >>> is_difference_of_two_squares(10)\n    True\n    \"\"\"\n    for i in range(int(n ** 0.5) + 1):\n        for j in range(i, int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -6.30859375
    ],
    [
      "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(1)\n    False\n    >>> difference_of_two_squares(3)\n    False\n    >>> difference_of_two_squares(4)\n    True\n    >>> difference_of_two_squares(5)\n    True\n    >>> difference_of_two_squares(6)\n    False\n    >>> difference_of_two_squares(10)\n    True\n    >>> difference_of_two_squares(11)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(14)\n    True\n    >>> difference_of_two_squares(15)\n    False\n    >>> difference_of_two_squares(16)\n    False\n    >>> difference_of_two_squares(17)\n    False\n    >>> difference_of_two_squares(18)\n    True\n    >>> difference_of_two_squares(19)\n    False\n    >>> difference_of_two_squares(20)\n    True\n    >>> difference_of_two_squares(21)\n    False\n    >>> difference_of_two_squares(22)\n    True\n    >>> difference_of_two_squares(23)\n    False\n    >>> difference_of_two_squares(24)\n    True\n    >>> difference_of_two_squares(25)\n    False\n    >>> difference_of_two_squares(26)\n    False\n    >>> difference_of_two_squares(27)\n    False\n    >>> difference_of_two_squares(28)\n    True\n    >>> difference_of_two_squares(29)\n    False\n    >>> difference_of_two_squares(30)\n    True\n    \"\"\"\n    for i in range(2, int(num / 2) + 1):\n        if num",
      -8.4375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}