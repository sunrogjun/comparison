{
  "problem": {
    "task_id": "HumanEval/51",
    "prompt": "\n\ndef remove_vowels(text):\n    \"\"\"\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>> remove_vowels(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n    \"\"\"\n",
    "canonical_solution": "    return \"\".join([s for s in text if s.lower() not in [\"a\", \"e\", \"i\", \"o\", \"u\"]])\n",
    "test": "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate(\"abcdef\\nghijklm\") == 'bcdf\\nghjklm'\n    assert candidate('fedcba') == 'fdcb'\n    assert candidate('eeeee') == ''\n    assert candidate('acBAA') == 'cB'\n    assert candidate('EcBOO') == 'cB'\n    assert candidate('ybcd') == 'ybcd'\n\n",
    "entry_point": "remove_vowels",
    "docstring": "",
    "problem_id": 51
  },
  "model_name": "codellama-7b",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "vowels = ['a', 'e', 'i', 'o', 'u']\n    new_text = ''\n    for letter in text:\n        if letter.lower() not in vowels:\n            new_text += letter\n    return new_text",
      15.578125
    ],
    [
      "vowels = 'aeiouAEIOU'\n    new_text = ''\n    for i in text:\n        if i not in vowels:\n            new_text += i\n    return new_text\n\n\nif __name__ == '__main__':\n    from doctest import testmod\n    testmod()",
      14.921875
    ],
    [
      "return \"\".join(ch for ch in text if ch.lower() not in 'aeiou')\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()",
      14.90625
    ],
    [
      "text = text.replace('a', '')\n    text = text.replace('e', '')\n    text = text.replace('i', '')\n    text = text.replace('o', '')\n    text = text.replace('u', '')\n    text = text.replace('A', '')\n    text = text.replace('E', '')\n    text = text.replace('I', '')\n    text = text.replace('O', '')\n    text = text.replace('U', '')\n    return text",
      13.671875
    ],
    [
      "return ''.join(filter(lambda c: c not in 'aeiouAEIOU', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      13.125
    ],
    [
      "vowels = set('aeiouAEIOU')\n    return ''.join([c for c in text if c not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      12.625
    ],
    [
      "# print(text)\n    text = text.replace(\"a\",\"\")\n    text = text.replace(\"e\",\"\")\n    text = text.replace(\"i\",\"\")\n    text = text.replace(\"o\",\"\")\n    text = text.replace(\"u\",\"\")\n    text = text.replace(\"A\",\"\")\n    text = text.replace(\"E\",\"\")\n    text = text.replace(\"I\",\"\")\n    text = text.replace(\"O\",\"\")\n    text = text.replace(\"U\",\"\")\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      12.3515625
    ],
    [
      "vowels = 'aeiouAEIOU'\n    return ''.join(char for char in text if char not in vowels)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      11.875
    ],
    [
      "vowels = ['a', 'e', 'i', 'o', 'u']\n    res = ''\n    for char in text:\n        if char.lower() not in vowels:\n            res += char\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      11.65625
    ],
    [
      "# return ''.join([i for i in text if i.lower() not in 'aeiou'])\n    return ''.join(i for i in text if i.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod(verbose=True)",
      11.140625
    ],
    [
      "vowels = \"aeiou\"\n    text_without_vowels = \"\"\n    for letter in text:\n        if letter.lower() not in vowels:\n            text_without_vowels += letter\n    return text_without_vowels\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      10.859375
    ],
    [
      "text_without_vowels = \"\"\n    vowels = \"aeiou\"\n    for char in text:\n        if char.lower() not in vowels:\n            text_without_vowels += char\n    return text_without_vowels\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      10.34375
    ],
    [
      "return ''.join(filter(lambda x: x.lower() not in 'aeiou', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      10.1171875
    ],
    [
      "return text.translate(str.maketrans(\"\",\"\",\"aeiouAEIOU\"))\n\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      8.640625
    ],
    [
      "vowels = 'aeiou'\n    return ''.join(i for i in text if i.lower() not in vowels)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n\n    string = input('Enter string: ')\n    print(remove_vowels(string))",
      8.5703125
    ],
    [
      "text = str(text)\n    vowels = 'aeiou'\n    result = ''\n    for i in range(len(text)):\n        if text[i] in vowels:\n            continue\n        result += text[i]\n    return result\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      7.05078125
    ],
    [
      "vowels = 'aeiouAEIOU'\n    for v in vowels:\n        text = text.replace(v, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      6.96875
    ],
    [
      "vowels = \"aeiou\"\n    text = text.lower()\n    result = \"\"\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      6.02734375
    ],
    [
      "return \"\".join([c for c in text if c not in \"aeiou\"])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      5.8984375
    ],
    [
      "return ''.join(ch for ch in text if ch.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      5.8125
    ],
    [
      "vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    text = str(text)\n    for v in vowels:\n        text = text.replace(v, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      5.6953125
    ],
    [
      "text = text.lower()\n    vowels = 'aeiou'\n    for v in vowels:\n        text = text.replace(v, \"\")\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      5.640625
    ],
    [
      "return text.translate(str.maketrans('', '', 'aeiouAEIOU'))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      5.3828125
    ],
    [
      "return \"\".join(char for char in text if char.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      5.19921875
    ],
    [
      "# your code here\n    text = text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"o\", \"\").replace(\"u\", \"\")\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      5.05078125
    ],
    [
      "if not text:\n        return ''\n    vowels = 'aeiouAEIOU'\n    text = text.lower()\n    res = ''\n    for char in text:\n        if char not in vowels:\n            res += char\n    return res\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      4.87890625
    ],
    [
      "text = text.replace('a', '')\n    text = text.replace('e', '')\n    text = text.replace('i', '')\n    text = text.replace('o', '')\n    text = text.replace('u', '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      4.36328125
    ],
    [
      "# return ''.join(filter(lambda x: x.lower() not in 'aeiou', text))\n    return ''.join(i for i in text if i.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      4.25
    ],
    [
      "vowels = 'aeiou'\n    return ''.join([i for i in text if i.lower() not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      4.10546875
    ],
    [
      "# new_text = ''\n    # for letter in text:\n    #     if letter.lower() in 'aeiou':\n    #         pass\n    #     else:\n    #         new_text += letter\n    # return new_text\n\n    # return ''.join(letter for letter in text if letter.lower() not in 'aeiou')\n    return ''.join(letter for letter in text if letter.lower() not in 'aeiouaeiou')\n\n\nif __name__ == '__main__':\n    from doctest import testmod\n    testmod()\n    input_text = input('Enter text: ')\n    print(remove_vowels(input_text))",
      3.552734375
    ],
    [
      "vowels = 'aeiou'\n    result = ''\n    for char in text:\n        if char.lower() not in vowels:\n            result += char\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      3.314453125
    ],
    [
      "vowels = \"aeiouAEIOU\"\n    for vowel in vowels:\n        text = text.replace(vowel, \"\")\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      3.19921875
    ],
    [
      "return ''.join(i for i in text if i not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      3.080078125
    ],
    [
      "return ''.join(c for c in text if c not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      2.984375
    ],
    [
      "return text.translate(str.maketrans('', '', 'aeiouAEIOU'))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      2.958984375
    ],
    [
      "vowels = 'aeiouAEIOU'\n    for v in vowels:\n        text = text.replace(v, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      2.701171875
    ],
    [
      "return text.translate(str.maketrans('', '', 'aeiouAEIOU'))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      2.673828125
    ],
    [
      "vowels = 'aeiou'\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\ndef remove_vowels_re(text):\n    \"\"\"\n    remove_vowels_re is a function that takes string and returns string without vowels.\n    >>> remove_vowels_re('')\n    ''\n    >>> remove_vowels_re(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_re('abcdef')\n    'bcdf'\n    >>> remove_vowels_re('aaaaa')\n    ''\n    >>> remove_vowels_re('aaBAA')\n    'B'\n    >>> remove_vowels_re('zbcd')\n    'zbcd'\n    \"\"\"\n    import re\n    return re.sub(r'[aeiou]', '', text, flags=re.I)\n\n\ndef remove_vowels_re2(text):\n    \"\"\"\n    remove_vowels_re is a function that takes string and returns string without vowels.\n    >>> remove_vowels_re2('')\n    ''\n    >>> remove_vowels_re2(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_re2('abcdef')\n    'bcdf'\n    >>> remove_vowels_re2('aaaaa')\n    ''\n    >>> remove_vowels_re2('aaBAA')\n    'B'\n    >>> remove_vowels_re2('zbcd')\n    'zbcd'\n    \"\"\"\n    import re\n    return re.sub(r'[aeiou]', '', text, flags=re.I)\n\n\ndef remove_vowels_re3(text):\n    \"\"\"\n    remove_vowels_re is a function that takes string and returns string without vowels.\n    >>> remove_vowels_re3('')\n    ''\n    >>> remove_vow",
      2.564453125
    ],
    [
      "return ''.join([i for i in text if i.lower() not in 'aeiou'])\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      2.537109375
    ],
    [
      "# remove all the vowels in the text\n    for vowel in \"aeiouAEIOU\":\n        text = text.replace(vowel, \"\")\n\n    # return the text\n    return text",
      2.12890625
    ],
    [
      "return ''.join(x for x in text if x not in \"aeiou\")\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()",
      2.015625
    ],
    [
      "text = text.lower()\n    return \"\".join([c for c in text if c not in \"aeiou\"])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      1.896484375
    ],
    [
      "return ''.join([i for i in text if i not in 'aeiou'])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      1.7392578125
    ],
    [
      "return \"\".join(i for i in text if i not in \"aeiou\")\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.5478515625
    ],
    [
      "text = text.replace(\"a\", \"\").replace(\"e\", \"\").replace(\"i\", \"\").replace(\"o\", \"\").replace(\"u\", \"\")\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.3486328125
    ],
    [
      "return \"\".join(i for i in text if i not in \"aeiou\")\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.28515625
    ],
    [
      "return ''.join(ch for ch in text if ch.lower() not in 'aeiou')\n\n\ndef replace_vowels(text):\n    \"\"\"\n    replace_vowels is a function that takes string and returns string with all vowels replaced by '*' character.\n    >>> replace_vowels('')\n    ''\n    >>> replace_vowels(\"abcdef\\nghijklm\")\n    '**c**d**f\\n**h**j**k**l**m'\n    >>> replace_vowels('abcdef')\n    '**c**d**f'\n    >>> replace_vowels('aaaaa')\n    '*****'\n    >>> replace_vowels('aaBAA')\n    '**B**'\n    >>> replace_vowels('zbcd')\n    'zbcd'\n    \"\"\"\n    return ''.join('*' if ch.lower() in 'aeiou' else ch for ch in text)\n\n\ndef remove_consonants(text):\n    \"\"\"\n    remove_consonants is a function that takes string and returns string without consonants.\n    >>> remove_consonants('')\n    ''\n    >>> remove_consonants(\"abcdef\\nghijklm\")\n    'abcdef\\nghijklm'\n    >>> remove_consonants('abcdef')\n    'abcdef'\n    >>> remove_consonants('aaaaa')\n    ''\n    >>> remove_consonants('aaBAA')\n    'aaBAA'\n    >>> remove_consonants('zbcd')\n    'zbcd'\n    \"\"\"\n    return ''.join(ch for ch in text if ch.lower() not in 'bcdfghjklmnpqrstvwxyz')\n\n\ndef replace_consonants(text):\n    \"\"\"\n    replace_consonants is a function that takes string and returns string with all consonants replaced by '*' character.\n    >>> replace_consonants('')\n    ''\n    >>> replace_consonants(\"abcdef\\nghijklm\")\n    '**c**d**f\\n**h**j**k**l**",
      1.2587890625
    ],
    [
      "return ''.join(filter(lambda x: x not in 'aeiou', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.244140625
    ],
    [
      "return \"\".join(i for i in text if i not in \"aeiouAEIOU\")",
      1.2412109375
    ],
    [
      "return \"\".join([char for char in text if char not in \"aeiou\"])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.2080078125
    ],
    [
      "return ''.join(filter(lambda c: c not in 'aeiou', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      1.1787109375
    ],
    [
      "return ''.join(c for c in text if c not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      1.162109375
    ],
    [
      "# return text.translate(str.maketrans('', '', 'aeiouAEIOU'))\n    return ''.join(c for c in text if c not in 'aeiou')\n\n\ndef remove_vowels_list(text):\n    \"\"\"\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>> remove_vowels(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n    \"\"\"\n    return [c for c in text if c not in 'aeiou']",
      1.1591796875
    ],
    [
      "vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    result = \"\"\n    for char in text:\n        if char.lower() not in vowels:\n            result += char\n    return result\n\n\ndef remove_vowels_and_sort(text):\n    \"\"\"\n    remove_vowels_and_sort is a function that takes string and returns string without vowels and sorted.\n    >>> remove_vowels_and_sort('')\n    ''\n    >>> remove_vowels_and_sort(\"abcdef\\nghijklm\")\n    'abcdef\\nghijklm'\n    >>> remove_vowels_and_sort('abcdef')\n    'abcd'\n    >>> remove_vowels_and_sort('aaaaa')\n    ''\n    >>> remove_vowels_and_sort('aaBAA')\n    'AB'\n    >>> remove_vowels_and_sort('zbcd')\n    'bcd'\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    result = \"\"\n    for char in text:\n        if char.lower() not in vowels:\n            result += char\n    return ''.join(sorted(result))\n\n\ndef remove_vowels_and_sort_inplace(text):\n    \"\"\"\n    remove_vowels_and_sort_inplace is a function that takes string and returns string without vowels and sorted.\n    >>> remove_vowels_and_sort_inplace('')\n    ''\n    >>> remove_vowels_and_sort_inplace(\"abcdef\\nghijklm\")\n    'abcdef\\nghijklm'\n    >>> remove_vowels_and_sort_inplace('abcdef')\n    'abcd'\n    >>> remove_vowels_and_sort_inplace('aaaaa')\n    ''\n    >>> remove_vowels_and_sort_inplace('aaBAA')\n    'AB'\n    >>> remove_vowels_and_sort_inplace('zbcd')\n    '",
      1.1162109375
    ],
    [
      "vowels = \"aeiou\"\n    for i in vowels:\n        text = text.replace(i, \"\")\n    return text\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      1.048828125
    ],
    [
      "vowels = 'aAeEiIoOuU'\n    return ''.join(char for char in text if char not in vowels)\n\n\ndef remove_vowels_regex(text):\n    \"\"\"\n    remove_vowels_regex is a function that takes string and returns string without vowels.\n    >>> remove_vowels_regex('')\n    ''\n    >>> remove_vowels_regex(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_regex('abcdef')\n    'bcdf'\n    >>> remove_vowels_regex('aaaaa')\n    ''\n    >>> remove_vowels_regex('aaBAA')\n    'B'\n    >>> remove_vowels_regex('zbcd')\n    'zbcd'\n    \"\"\"\n    import re\n    return re.sub('[aeiou]', '', text, flags=re.IGNORECASE)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      1.0146484375
    ],
    [
      "return \"\".join([i for i in text if i not in 'aeiou'])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.9833984375
    ],
    [
      "return ''.join(filter(lambda x: x not in 'aeiou', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      0.95947265625
    ],
    [
      "vowels = \"aeiou\"\n    for v in vowels:\n        text = text.replace(v, \"\")\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.8076171875
    ],
    [
      "vowels = 'aeiou'\n    return ''.join(filter(lambda x: x not in vowels, text))",
      0.5771484375
    ],
    [
      "# Your code here\n    vowels = 'aeiou'\n    result = ''\n    for c in text:\n        if c.lower() not in vowels:\n            result += c\n    return result\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      0.544921875
    ],
    [
      "return text.translate(str.maketrans('','','aeiouAEIOU'))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      0.36474609375
    ],
    [
      "return \"\".join(filter(lambda c: c not in 'aeiou', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      0.26123046875
    ],
    [
      "vowels = 'aeiou'\n    return ''.join([char for char in text if char not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      0.035858154296875
    ],
    [
      "return \"\".join(filter(lambda c: c.lower() not in \"aeiou\", text))",
      0.033447265625
    ],
    [
      "if text == '':\n        return ''\n    vowels = 'aeiou'\n    vowels_in_text = ''\n    for vowel in vowels:\n        if vowel in text:\n            vowels_in_text += vowel\n    text_without_vowels = text\n    for vowel in vowels_in_text:\n        text_without_vowels = text_without_vowels.replace(vowel, '')\n    return text_without_vowels\n\n\ndef remove_vowels_and_return_count(text):\n    \"\"\"\n    remove_vowels_and_return_count is a function that takes string and returns a tuple\n    (string without vowels, number of vowels removed).\n    >>> remove_vowels_and_return_count('')\n    ('', 0)\n    >>> remove_vowels_and_return_count(\"abcdef\\nghijklm\")\n    ('bcdf\\nghjklm', 6)\n    >>> remove_vowels_and_return_count('abcdef')\n    ('bcdf', 2)\n    >>> remove_vowels_and_return_count('aaaaa')\n    ('', 5)\n    >>> remove_vowels_and_return_count('aaBAA')\n    ('B', 3)\n    >>> remove_vowels_and_return_count('zbcd')\n    ('zbcd', 0)\n    \"\"\"\n    if text == '':\n        return '', 0\n    vowels = 'aeiou'\n    vowels_in_text = ''\n    for vowel in vowels:\n        if vowel in text:\n            vowels_in_text += vowel\n    text_without_vowels = text\n    for vowel in vowels_in_text:\n        text_without_vowels = text_without_vowels.replace(vowel, '')\n    return text_without_vowels, len(vowels_in_text)\n\n\ndef remove_vowels_and_count(text):\n    \"\"\"\n    remove_",
      -0.294921875
    ],
    [
      "vowels = \"aeiou\"\n    return \"\".join([char for char in text if char.lower() not in vowels])\n\n\ndef remove_all_spaces(text):\n    \"\"\"\n    remove_all_spaces is a function that takes string and returns string without spaces.\n    >>> remove_all_spaces('')\n    ''\n    >>> remove_all_spaces(\"a b c d\")\n    'abc d'\n    >>> remove_all_spaces('abc d')\n    'abc d'\n    >>> remove_all_spaces('abc   d')\n    'abcd'\n    >>> remove_all_spaces('abc  def')\n    'abcdef'\n    \"\"\"\n    return text.replace(\" \", \"\")\n\n\ndef reverse(text):\n    \"\"\"\n    reverse is a function that takes string and returns its reverse.\n    >>> reverse('')\n    ''\n    >>> reverse('abc')\n    'cba'\n    >>> reverse('abcdef')\n    'fedcba'\n    >>> reverse('abcdefg')\n    'gfedcba'\n    \"\"\"\n    return text[::-1]\n\n\ndef remove_duplicates(text):\n    \"\"\"\n    remove_duplicates is a function that takes string and returns its duplicate-free version.\n    >>> remove_duplicates('')\n    ''\n    >>> remove_duplicates('a')\n    'a'\n    >>> remove_duplicates('aa')\n    'a'\n    >>> remove_duplicates('abba')\n    'abba'\n    >>> remove_duplicates('abbaa')\n    'abba'\n    >>> remove_duplicates('aabbc')\n    'abc'\n    >>> remove_duplicates('abbc')\n    'abc'\n    \"\"\"\n    return \"\".join(set(text))\n\n\ndef remove_chars(text, chars):\n    \"\"\"\n    remove_chars is a function that takes string and list of characters and returns string without chars in list.\n    >>> remove_chars('',[])\n    ''\n    >>> remove_chars('abc',[])\n    'abc'\n    >>> remove_chars('abc',['a'])\n    'bc'\n    >>> remove_ch",
      -0.822265625
    ],
    [
      "return \"\".join(char for char in text if char.lower() not in 'aeiou')",
      -0.85595703125
    ],
    [
      "vowels = 'aeiou'\n    return ''.join([i for i in text if i.lower() not in vowels])\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()",
      -0.85693359375
    ],
    [
      "return ''.join(filter(lambda x: x not in 'aeiou', text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.85693359375
    ],
    [
      "return \"\".join([char for char in text if char not in \"aeiou\"])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85693359375
    ],
    [
      "return ''.join(c for c in text if c not in 'aeiouAEIOU')\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()",
      -0.85693359375
    ],
    [
      "return ''.join(char for char in text if char not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()",
      -0.85693359375
    ],
    [
      "return text.translate(str.maketrans('', '', 'aeiou'))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.857421875
    ],
    [
      "return ''.join(c for c in text if c not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.857421875
    ],
    [
      "return \"\".join(c for c in text if c.lower() not in \"aeiou\")\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "vowels = \"aeiouAEIOU\"\n    return \"\".join(c for c in text if c not in vowels)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "text = text.replace(\"a\",\"\")\n    text = text.replace(\"e\",\"\")\n    text = text.replace(\"i\",\"\")\n    text = text.replace(\"o\",\"\")\n    text = text.replace(\"u\",\"\")\n    text = text.replace(\"y\",\"\")\n    return text",
      -0.85791015625
    ],
    [
      "if text == \"\":\n        return \"\"\n    else:\n        return \"\".join(char for char in text if char not in 'aeiouAEIOU')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "vowels = 'aeiou'\n    for v in vowels:\n        text = text.replace(v, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "vowels = 'aeiou'\n    for v in vowels:\n        text = text.replace(v, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod(verbose=True)",
      -0.8583984375
    ],
    [
      "return text.translate(str.maketrans('', '', 'aeiouAEIOU'))\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()",
      -0.8583984375
    ],
    [
      "return ''.join(c for c in text if c not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "vowels = 'aeiou'\n    text = text.lower()\n    for vowel in vowels:\n        text = text.replace(vowel, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "return ''.join(ch for ch in text if ch.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "vowels = \"aeiou\"\n    return \"\".join(i for i in text if i not in vowels)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.8583984375
    ],
    [
      "vowels = \"aeiouAEIOU\"\n    for i in vowels:\n        text = text.replace(i, \"\")\n    return text",
      -0.8583984375
    ],
    [
      "return ''.join(filter(lambda x: x not in 'aeiou', text))",
      -0.908203125
    ],
    [
      "if text == \"\":\n        return \"\"\n    else:\n        text = text.lower()\n        for char in text:\n            if char in \"aeiou\":\n                text = text.replace(char, \"\")\n        return text",
      -1.021484375
    ],
    [
      "if not text:\n        return ''\n    return ''.join(filter(lambda x: x not in 'aeiou', text))",
      -1.33203125
    ],
    [
      "return ''.join(char for char in text if char.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -1.333984375
    ],
    [
      "return ''.join(char for char in text if char.lower() not in 'aeiou')\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -1.333984375
    ],
    [
      "return ''.join(c for c in text if c not in 'aeiouAEIOU')\n\n\ndef remove_consonants(text):\n    \"\"\"\n    remove_consonants is a function that takes string and returns string without consonants.\n    >>> remove_consonants('')\n    ''\n    >>> remove_consonants(\"abcdef\\nghijklm\")\n    'abcdef\\nghijklm'\n    >>> remove_consonants('abcdef')\n    'bcdf'\n    >>> remove_consonants('aaaaa')\n    'aaaaa'\n    >>> remove_consonants('aaBAA')\n    'AA'\n    >>> remove_consonants('zbcd')\n    'zcd'\n    \"\"\"\n    return ''.join(c for c in text if c not in 'bcdfghjklmnpqrstvwxyz')\n\n\ndef remove_duplicates(text):\n    \"\"\"\n    remove_duplicates is a function that takes string and returns string without duplicates.\n    >>> remove_duplicates('')\n    ''\n    >>> remove_duplicates('abc')\n    'abc'\n    >>> remove_duplicates('aaabbbccc')\n    'abc'\n    >>> remove_duplicates('aabbc')\n    'abc'\n    >>> remove_duplicates('abcddcba')\n    'abcdcba'\n    >>> remove_duplicates('abababab')\n    'ab'\n    \"\"\"\n    return ''.join(c for i, c in enumerate(text) if c not in text[:i])\n\n\ndef remove_whitespaces(text):\n    \"\"\"\n    remove_whitespaces is a function that takes string and returns string without whitespaces.\n    >>> remove_whitespaces('')\n    ''\n    >>> remove_whitespaces('abc def')\n    'abcdef'\n    >>> remove_whitespaces('abc\\tdef\\nghi')\n    'abcdefghi'\n    >>> remove_whitespaces('abc\\t def\\nghi\\njkl')\n    'abcdefghijkl'\n    >>> remove_whitespaces('abc\\t def\\nghi\\njkl\\",
      -1.3505859375
    ],
    [
      "vowels = 'aeiou'\n    return ''.join(c for c in text if c.lower() not in vowels)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -1.4306640625
    ],
    [
      "return text.translate(str.maketrans(\"\",\"\",\"aeiou\"))",
      -1.4306640625
    ],
    [
      "vowels = 'aeiou'\n    text = text.lower()\n    for char in text:\n        if char in vowels:\n            text = text.replace(char, '')\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.759765625
    ],
    [
      "if text == '':\n        return text\n    else:\n        vowels = 'aeiou'\n        for char in vowels:\n            text = text.replace(char, '')\n    return text",
      -2.3125
    ],
    [
      "text = text.lower()\n    vowels = 'aeiou'\n    for vowel in vowels:\n        text = text.replace(vowel, '')\n    return text\n\n\ndef remove_duplicates(text):\n    \"\"\"\n    remove_duplicates is a function that takes string and returns string without duplicates.\n    >>> remove_duplicates('')\n    ''\n    >>> remove_duplicates(\"abcdef\\nghijklm\")\n    'abcdef\\nghjklm'\n    >>> remove_duplicates('abcdef')\n    'abcdef'\n    >>> remove_duplicates('aaaaa')\n    'a'\n    >>> remove_duplicates('aaBAA')\n    'aBa'\n    >>> remove_duplicates('zbcd')\n    'zbcd'\n    \"\"\"\n    text = text.lower()\n    return ''.join(set(text))\n\n\ndef remove_duplicates_list(text):\n    \"\"\"\n    remove_duplicates_list is a function that takes string and returns list without duplicates.\n    >>> remove_duplicates_list('')\n    []\n    >>> remove_duplicates_list(\"abcdef\\nghijklm\")\n    ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm']\n    >>> remove_duplicates_list('abcdef')\n    ['a', 'b', 'c', 'd', 'e', 'f']\n    >>> remove_duplicates_list('aaaaa')\n    ['a']\n    >>> remove_duplicates_list('aaBAA')\n    ['a', 'B']\n    >>> remove_duplicates_list('zbcd')\n    ['z', 'b', 'c', 'd']\n    \"\"\"\n    text = text.lower()\n    return list(set(text))\n\n\ndef get_index(text, index):\n    \"\"\"\n    get_index is a function that takes string and index and returns the letter at that index.\n    >>> get_index('', 0)\n    ''\n    >>> get_index('abcdef', 2)\n    'c'\n    >>>",
      -2.513671875
    ],
    [
      "return ''.join(x for x in text if x.lower() not in 'aeiou')\n\n\ndef vowels_per_word(text):\n    \"\"\"\n    vowels_per_word is a function that takes string and returns list of tuples with number of vowels in each word.\n    >>> vowels_per_word('')\n    []\n    >>> vowels_per_word(\"abcdef\\nghijklm\")\n    [(0, 0), (1, 0), (0, 1), (0, 1), (0, 1), (1, 1)]\n    >>> vowels_per_word('abcdef')\n    [(0, 1), (0, 1), (0, 1), (0, 1), (0, 1)]\n    >>> vowels_per_word('aaaaa')\n    [(5, 0)]\n    >>> vowels_per_word('aaBAA')\n    [(1, 1), (1, 1)]\n    >>> vowels_per_word('zbcd')\n    [(0, 1), (0, 1), (0, 1), (0, 1)]\n    \"\"\"\n    words = text.split()\n    return [(len([x for x in word if x.lower() in 'aeiou']), len(word) - len([x for x in word if x.lower() in 'aeiou']))\n            for word in words]\n\n\ndef remove_consonants(text):\n    \"\"\"\n    remove_consonants is a function that takes string and returns string without consonants.\n    >>> remove_consonants('')\n    ''\n    >>> remove_consonants(\"abcdef\\nghijklm\")\n    'aeiouaeiouaeiouaeiouaeiouaeiou'\n    >>> remove_consonants('abcdef')\n    'aeiouaeiouaeiouaeiouaeiou'\n    >>> remove_consonants('aaaaa')\n    'aaaaa'\n    >>> remove_consonants('aaBAA')\n    'aaaeiou'\n    >>> remove_conson",
      -3.22265625
    ],
    [
      "vowels = 'aeiou'\n    return ''.join(filter(lambda x: x not in vowels, text))\n\n\ndef remove_vowels_regex(text):\n    \"\"\"\n    remove_vowels_regex is a function that takes string and returns string without vowels.\n    >>> remove_vowels_regex('')\n    ''\n    >>> remove_vowels_regex(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_regex('abcdef')\n    'bcdf'\n    >>> remove_vowels_regex('aaaaa')\n    ''\n    >>> remove_vowels_regex('aaBAA')\n    'B'\n    >>> remove_vowels_regex('zbcd')\n    'zbcd'\n    \"\"\"\n    vowels = 'aeiou'\n    return re.sub('[aeiou]', '', text, flags=re.IGNORECASE)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -12.28125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}