{
  "problem": {
    "task_id": "MBPP/233",
    "prompt": "Write a function to find the lateral surface area of a cylinder.",
    "canonical_solution": "def lateralsuface_cylinder(r,h):\r\n  lateralsurface= 2*3.1415*r*h\r\n  return lateralsurface",
    "test_list": [
      "assert lateralsuface_cylinder(10,5)==314.15000000000003",
      "assert lateralsuface_cylinder(4,5)==125.66000000000001",
      "assert lateralsuface_cylinder(4,10)==251.32000000000002"
    ],
    "challenge_test_list": [],
    "problem_id": 222
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :type radius: float\n    :param height: The height of the cylinder.\n    :type height: float\n    :return: The lateral surface area of the cylinder.\n    :rtype: float\n    \"\"\"\n    return math.pi * radius * height\n\nif __name__ == \"__main__\":\n    radius = float(input(\"Radius: \"))\n    height = float(input(\"Height: \"))\n    print(lateral_surface_area(radius, height))",
      14.2265625
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: int\n    :type height: int\n    :rtype: float\n    \"\"\"\n    return math.pi * radius * height\n\ndef main():\n    radius = int(input())\n    height = int(input())\n    print(lateral_surface_area(radius, height))\n\nif __name__ == '__main__':\n    main()",
      6.70703125
    ],
    [
      "def lateral_surface_area(radius, height):\n    return 2 * radius * height\n\n\nif __name__ == '__main__':\n    print(lateral_surface_area(1, 1))\n    print(lateral_surface_area(1, 2))\n    print(lateral_surface_area(2, 1))\n    print(lateral_surface_area(2, 2))\n    print(lateral_surface_area(2, 3))\n    print(lateral_surface_area(3, 1))\n    print(lateral_surface_area(3, 2))\n    print(lateral_surface_area(3, 3))\n    print(lateral_surface_area(4, 2))\n    print(lateral_surface_area(4, 3))\n    print(lateral_surface_area(5, 2))\n    print(lateral_surface_area(5, 3))\n    print(lateral_surface_area(5, 4))\n    print(lateral_surface_area(6, 2))\n    print(lateral_surface_area(6, 3))\n    print(lateral_surface_area(6, 4))\n    print(lateral_surface_area(6, 5))\n    print(lateral_surface_area(7, 2))\n    print(lateral_surface_area(7, 3))\n    print(lateral_surface_area(7, 4))\n    print(lateral_surface_area(7, 5))\n    print(lateral_surface_area(7, 6))\n    print(lateral_surface_area(8, 2))\n    print(lateral_surface_area(8, 3))\n    print(lateral_surface_area(8, 4))\n    print(lateral_surface_area(8, 5))\n    print(lateral_surface_area(8, 6))\n    print(lateral_surface_area(8, 7))\n    print(lateral_surface_area(9, 2))\n    print(lateral_surface_area(9, 3))\n    print(lateral_surface_area(9, 4))\n    print(lateral_surface_area(9, 5))",
      4.44921875
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    return math.pi * radius * height\n\nif __name__ == '__main__':\n    print lateral_surface_area(4.0, 2.0)\n    print lateral_surface_area(1.0, 1.0)\n    print lateral_surface_area(2.0, 2.0)\n    print lateral_surface_area(3.0, 3.0)\n    print lateral_surface_area(4.0, 4.0)\n    print lateral_surface_area(5.0, 5.0)\n    print lateral_surface_area(6.0, 6.0)\n    print lateral_surface_area(7.0, 7.0)\n    print lateral_surface_area(8.0, 8.0)\n    print lateral_surface_area(9.0, 9.0)\n    print lateral_surface_area(10.0, 10.0)\n    print lateral_surface_area(11.0, 11.0)\n    print lateral_surface_area(12.0, 12.0)\n    print lateral_surface_area(13.0, 13.0)\n    print lateral_surface_area(14.0, 14.0)\n    print lateral_surface_area(15.0, 15.0)\n    print lateral_surface_area(16.0, 16.0)\n    print lateral_surface_area(17.0, 17.0)\n    print lateral_surface_area(18.0, 18.0)\n    print lateral_surface_area(19.0, 19.0)\n    print lateral_surface_area(20.0, 20.0)\n    print lateral_surface_area(21.0, 21.0)\n    print lateral_surface_area(22.0, 22.0)\n    print lateral_surface_area(23.0, 23.0)\n    print lateral_surface_area(24.0, 24.0)\n    print lateral_surface_area(25.0, 25.0)\n    print lateral_surface_area(26.0, 26.0)\n    print lateral_surface_area(27.0, 27.",
      3.8359375
    ],
    [
      "from math import sqrt\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n    \"\"\"\n    return 4.0 * 3.14 * radius * height\n\n\ndef main():\n    \"\"\"\n    Test the function.\n    \"\"\"\n    radius = 3.0\n    height = 4.0\n    assert lateral_surface_area(radius, height) == 8.0\n\nif __name__ == '__main__':\n    main()",
      3.041015625
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: int\n    :type height: int\n    :rtype: int\n    \"\"\"\n    return 2*math.pi*radius*height\n\ndef test_lateral_surface_area():\n    assert lateral_surface_area(1, 2) == 4\n\nif __name__ == \"__main__\":\n    test_lateral_surface_area()",
      2.86328125
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    return math.pi * radius * height\n\n# Your code here",
      2.8515625
    ],
    [
      "from math import pi\n\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n    :param radius: radius of the cylinder\n    :param height: height of the cylinder\n    :return: the lateral surface area of the cylinder\n    \"\"\"\n    return 2 * pi * radius * height\n\n\ndef main():\n    radius = input('Radius: ')\n    height = input('Height: ')\n    print('Lateral surface area: {}'.format(lateral_surface_area(radius, height)))\n\n\nif __name__ == '__main__':\n    main()",
      2.798828125
    ],
    [
      "#!/usr/bin/env python\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    Input:\n        radius - The radius of the cylinder.\n        height - The height of the cylinder.\n\n    Output:\n        The lateral surface area of the cylinder.\n    \"\"\"\n    return 4 * radius * height\n\n# Test Cases\nprint lateral_surface_area(5, 10)\nprint lateral_surface_area(5, 0)\nprint lateral_surface_area(0, 10)",
      2.576171875
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    return 2 * math.pi * radius * height\n\nif __name__ == '__main__':\n    radius, height = map(float, input().split())\n    print(lateral_surface_area(radius, height))",
      2.5078125
    ],
    [
      "def area_cylinder(r, h):\n    \"\"\"\n    Area of a cylinder\n    \"\"\"\n    return r * h\n\n\nif __name__ == \"__main__\":\n    print(area_cylinder(3, 4))",
      2.455078125
    ],
    [
      "import math\n\ndef area_cylinder(length, radius):\n    \"\"\"\n    Calculate the area of a cylinder.\n\n    :param length: The length of the cylinder.\n    :param radius: The radius of the cylinder.\n\n    :rtype: float\n    :return: The area of the cylinder.\n    \"\"\"\n    return math.pi * (radius * radius) * length\n\nif __name__ == \"__main__\":\n    length = int(input())\n    radius = int(input())\n    print(area_cylinder(length, radius))",
      2.16015625
    ],
    [
      "import math\n\ndef area(r, h):\n    return math.pi * r * h\n\ndef main():\n    print(area(1, 1))\n    print(area(1, 2))\n    print(area(2, 1))\n    print(area(2, 2))\n    print(area(3, 1))\n    print(area(3, 2))\n    print(area(4, 1))\n    print(area(4, 2))\n    print(area(5, 1))\n    print(area(5, 2))\n    print(area(6, 1))\n    print(area(6, 2))\n    print(area(7, 1))\n    print(area(7, 2))\n    print(area(8, 1))\n    print(area(8, 2))\n    print(area(9, 1))\n    print(area(9, 2))\n    print(area(10, 1))\n    print(area(10, 2))\n    print(area(11, 1))\n    print(area(11, 2))\n\nif __name__ == \"__main__\":\n    main()",
      2.10546875
    ],
    [
      "from math import pi\n\n# https://www.hackerrank.com/challenges/lateral-surface-area/problem\n\n#!/bin/python3\n\ndef lateral_surface_area(radius, height):\n    return 2 * radius * pi * height\n\nif __name__ == \"__main__\":\n    radius = float(input())\n    height = float(input())\n    print(lateral_surface_area(radius, height))",
      1.5673828125
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n    \"\"\"\n    area = math.pi * radius * height\n    return area\n\ndef main():\n    \"\"\"\n    The main function to test the function.\n    \"\"\"\n    print lateral_surface_area(1, 1)\n    print lateral_surface_area(1, 2)\n\nif __name__ == \"__main__\":\n    main()",
      1.1708984375
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    return (radius * height) / 2\n\n\ndef main():\n    print lateral_surface_area(1, 2)\n\nif __name__ == '__main__':\n    main()",
      1.1337890625
    ],
    [
      "# I/O imports\nimport math\n\n# Function definitions\ndef surface_area(radius, length):\n    return math.pi * radius * length\n\n# Testcases\nassert(surface_area(1, 2) == 4.0)\nassert(surface_area(2, 3) == 6.0)\nassert(surface_area(5, 10) == 10.0)\nassert(surface_area(10, 10) == 100.0)\nassert(surface_area(5, 5) == 10.0)\n\n# Your code",
      0.97998046875
    ],
    [
      "import math\n\ndef lateral_surface_area(length, diameter):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param length: The length of the cylinder.\n    :param diameter: The diameter of the cylinder.\n\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * length * diameter / 4\n\ndef main():\n    length, diameter = input(\"Please input the length and diameter of the cylinder: \").split()\n    length = float(length)\n    diameter = float(diameter)\n    print lateral_surface_area(length, diameter)\n\nif __name__ == '__main__':\n    main()",
      0.96044921875
    ],
    [
      "import math\n\ndef get_cylinder_area(radius, height):\n    \"\"\"\n    Returns the area of a cylinder.\n    \"\"\"\n    return radius * height\n\nif __name__ == '__main__':\n    print(get_cylinder_area(10, 20))\n    print(get_cylinder_area(10, 100))",
      0.7607421875
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Input:\n        radius: the radius of the cylinder\n        height: the height of the cylinder\n    Output:\n        lateral_surface_area: the lateral surface area of the cylinder\n    \"\"\"\n    return math.pi * (radius * radius * height)\n\nif __name__ == \"__main__\":\n    radius = float(input(\"radius: \"))\n    height = float(input(\"height: \"))\n\n    lateral_surface_area = lateral_surface_area(radius, height)\n    print(lateral_surface_area)",
      0.299560546875
    ],
    [
      "import math\n\ndef area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :param height: The height of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * radius * height\n\nif __name__ == \"__main__\":\n    print(area(3, 4))",
      0.1878662109375
    ],
    [
      "# TODO:\n# - input validation\n# - output validation\n# - return a tuple, with the lateral surface area in the first value, and\n#   the diameter in the second\n# - use a helper function to return the area of a cylinder\n# - make it work for a radius of 0\n# - add a unit test\n\nimport math\n\n\ndef lateral_surface_area(radius, height):\n    \"\"\"Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :param height: The height of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * (radius ** 2) * height\n\n\ndef main():\n    \"\"\"Run the main program.\"\"\"\n    print(lateral_surface_area(0, 0))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.2239990234375
    ],
    [
      "# https://www.geeksforgeeks.org/lateral-surface-area-cylinder/\n\n# https://www.geeksforgeeks.org/lateral-surface-area-cylinder/\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: int\n    :type height: int\n    :rtype: int\n    \"\"\"\n    return 2 * radius * height",
      -0.327392578125
    ],
    [
      "def lateral_surface_area(height, radius):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :height: height of the cylinder\n    :radius: radius of the cylinder\n    :return: lateral surface area of the cylinder\n    \"\"\"\n\n    return 2 * pi * radius * height\n\n\nif __name__ == \"__main__\":\n    print lateral_surface_area(100, 10)",
      -0.39892578125
    ],
    [
      "import math\n\n# The function's signature\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Parameters\n    ----------\n    radius: float\n        radius of the cylinder\n    height: float\n        height of the cylinder\n    \"\"\"\n    # The formula for the lateral surface area\n    lateral_surface_area = 2 * math.pi * radius * height\n    return lateral_surface_area\n\n\n# Run the unit tests\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -0.400390625
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    return math.pi * radius * height\n\n\nif __name__ == \"__main__\":\n    radius = float(input(\"Radius of cylinder: \"))\n    height = float(input(\"Height of cylinder: \"))\n    print(\"Lateral surface area of a cylinder with a radius of \" + str(radius) + \" and height of \" + str(height) + \" is \" + str(lateral_surface_area(radius, height)))",
      -0.62109375
    ],
    [
      "import math\n\ndef get_lateral_surface_area(radius, height):\n    \"\"\"\n    Calculates the lateral surface area of a cylinder.\n\n    radius: The radius of the cylinder\n    height: The height of the cylinder\n    \"\"\"\n    return math.pi * radius * radius * height\n\n\ndef test():\n    assert get_lateral_surface_area(5, 6) == 36.0\n    assert get_lateral_surface_area(8, 10) == 80.0\n\nif __name__ == '__main__':\n    test()",
      -0.65283203125
    ],
    [
      "import math\n\n\ndef cylinder_surface_area(radius, length):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder given its radius and length.\n\n    :param radius: The radius of the cylinder.\n    :param length: The length of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * radius * length\n\n\nif __name__ == \"__main__\":\n    assert cylinder_surface_area(10, 10) == 58.07, \"Expected 58.07 but got {}\".format(cylinder_surface_area(10, 10))",
      -0.74755859375
    ],
    [
      "from math import sqrt\n\n#%%\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :type radius: float\n    :param height: The height of the cylinder.\n    :type height: float\n    :return: The lateral surface area of the cylinder.\n    :rtype: float\n    \"\"\"\n    return 2 * radius * height\n\n#%%\ndef main():\n    radius = 4\n    height = 3\n    print(lateral_surface_area(radius, height))\n    \nif __name__ == '__main__':\n    main()",
      -0.85693359375
    ],
    [
      "import math\n\n\ndef area_cylinder(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    The formula for the lateral surface area of a cylinder is:\n    Lateral surface area = \u03c0 * radius * height.\n    :param radius: the radius of the cylinder\n    :param height: the height of the cylinder\n    :return: the lateral surface area of the cylinder\n    \"\"\"\n    return math.pi * radius * height\n\n\nif __name__ == \"__main__\":\n    print(area_cylinder(2, 1))\n    print(area_cylinder(3, 4))",
      -0.85693359375
    ],
    [
      "#!/usr/bin/env python\n\nimport math\n\ndef surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :param height: The height of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    area = math.pi * radius * height\n    return area\n\nif __name__ == '__main__':\n    print(surface_area(3, 2))",
      -0.85693359375
    ],
    [
      "import math\n\n\ndef area(radius, height):\n    return math.pi * (radius ** 2) * height\n\n\nif __name__ == '__main__':\n    print(area(1, 3))",
      -0.85693359375
    ],
    [
      "import math\n\ndef area_cylinder(radius, height):\n    return math.pi * radius ** 2 * height\n\nprint(area_cylinder(3, 2))",
      -0.85693359375
    ],
    [
      "import numpy as np\n\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Compute the lateral surface area of a cylinder.\n\n    :param radius: radius of the cylinder\n    :type radius: float\n    :param height: height of the cylinder\n    :type height: float\n    :return: the lateral surface area of the cylinder\n    :rtype: float\n    \"\"\"\n\n    return (4 * np.pi * radius * height) / 3\n\n\nif __name__ == '__main__':\n    radius = float(input('Enter the radius: '))\n    height = float(input('Enter the height: '))\n\n    print('The lateral surface area of the cylinder is: {}'.format(lateral_surface_area(radius, height)))",
      -0.85693359375
    ],
    [
      "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n#\n# Written by Evan Fosmark\n#\n# Input: radius, height\n# Output: surface area\n#\n\nfrom __future__ import division\n\ndef area_cylinder(r, h):\n    \"\"\"\n    Calculate the surface area of a cylinder\n    \"\"\"\n    return (4 * r * h) / 3.0\n\n#\n# Test Code\n#\n\nif __name__ == \"__main__\":\n    print area_cylinder(1.0, 1.0)",
      -0.85693359375
    ],
    [
      "#!/usr/bin/env python\n\nfrom math import *\n\ndef lateral_surface_area(radius, height):\n    return 4 * pi * radius * radius * height\n\nif __name__ == \"__main__\":\n    print lateral_surface_area(1, 1)",
      -0.85791015625
    ],
    [
      "#!/usr/bin/python\n\n# https://www.hackerrank.com/challenges/lateral-surface-area/problem\n\nimport math\nimport sys\n\ndef main():\n    \"\"\"\n    Solve the problem\n    \"\"\"\n    height = int(sys.stdin.readline())\n    width = int(sys.stdin.readline())\n    area = 0\n    for i in range(height):\n        for j in range(width):\n            area += math.sqrt(math.pow(i - height/2, 2) + math.pow(j - width/2, 2))\n    print(area)\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "import math\n\ndef area_cylinder(length, radius):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder of given length and radius.\n    \"\"\"\n    return math.pi * (length**2) * (radius**2)\n\nif __name__ == '__main__':\n    assert area_cylinder(10, 1) == 2.0\n    assert area_cylinder(10, 2) == 10.0\n    assert area_cylinder(10, 3) == 30.0\n    assert area_cylinder(10, 4) == 80.0\n    assert area_cylinder(10, 5) == 100.0\n    assert area_cylinder(10, 6) == 180.0\n    assert area_cylinder(10, 7) == 360.0\n    assert area_cylinder(10, 8) == 720.0\n    assert area_cylinder(10, 9) == 1080.0\n    assert area_cylinder(10, 10) == 2 * math.pi",
      -0.85791015625
    ],
    [
      "def area(radius, height):\n    return 2*radius*height\n\nif __name__ == \"__main__\":\n    radius, height = map(int, input().split())\n    print(area(radius, height))",
      -0.85791015625
    ],
    [
      "import math\n\ndef area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: the radius of the cylinder\n    :param height: the height of the cylinder\n    :returns: the lateral surface area of the cylinder\n    \"\"\"\n    return (math.pi * radius ** 2 * height) / 2\n\n\nif __name__ == '__main__':\n    radius = int(input('Radius: '))\n    height = int(input('Height: '))\n\n    print('Area = %d' % area(radius, height))",
      -0.85791015625
    ],
    [
      "import math\n\ndef lateral_surface_area(height, radius):\n    \"\"\"\n    Return the lateral surface area of a cylinder.\n\n    :param height: The height of the cylinder.\n    :param radius: The radius of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * (radius * radius) * height\n\ndef main():\n    height = 10\n    radius = 20\n    print(\"Lateral surface area of a cylinder with height of {} and radius of {} is {}\".format(height, radius, lateral_surface_area(height, radius)))\n\nif __name__ == '__main__':\n    main()",
      -0.85791015625
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    return math.pi * radius * height\n\n\nif __name__ == \"__main__\":\n    radius = float(input(\"Enter radius of the cylinder: \"))\n    height = float(input(\"Enter height of the cylinder: \"))\n    print(lateral_surface_area(radius, height))",
      -0.85791015625
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: the radius of the cylinder\n    :param height: the height of the cylinder\n    :return: the lateral surface area of the cylinder\n    \"\"\"\n    return math.pi * radius * radius * height\n\nif __name__ == '__main__':\n    print lateral_surface_area(3, 4)",
      -0.85791015625
    ],
    [
      "import math\n\n\ndef area(length, radius):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param length: The length of the cylinder.\n    :param radius: The radius of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * radius * radius * length\n\n\ndef test():\n    assert area(1, 1) == math.pi, \"Error, wrong area calculation.\"\n    assert area(2, 1) == math.pi / 2, \"Error, wrong area calculation.\"\n    assert area(3, 1) == math.pi / 4, \"Error, wrong area calculation.\"\n    assert area(4, 1) == math.pi / 8, \"Error, wrong area calculation.\"\n    assert area(5, 1) == math.pi / 16, \"Error, wrong area calculation.\"\n    assert area(6, 1) == math.pi / 32, \"Error, wrong area calculation.\"\n\n\nif __name__ == '__main__':\n    test()",
      -0.8583984375
    ],
    [
      "import math\n\ndef surface_area(length, radius):\n    \"\"\"\n    >>> surface_area(5, 2)\n    25.0\n    >>> surface_area(5, 4)\n    25.0\n    >>> surface_area(1, 1)\n    0.0\n    >>> surface_area(1, 2)\n    0.0\n    >>> surface_area(2, 2)\n    4.0\n    \"\"\"\n    return length * math.pi * (radius * radius)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n\n    try:\n        while True:\n            line = raw_input('Enter length, radius: ')\n            length, radius = line.split(' ')\n            length = int(length)\n            radius = float(radius)\n            print surface_area(length, radius)\n    except:\n        pass",
      -0.8583984375
    ],
    [
      "from math import pi\n\ndef lateral_surface_area(height, radius):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder with given height and radius.\n    :param height: The height of the cylinder.\n    :param radius: The radius of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return 2 * pi * radius * height\n\n\ndef test():\n    assert lateral_surface_area(4, 1) == 8.0\n    assert lateral_surface_area(5, 2) == 20.0\n    assert lateral_surface_area(6, 3) == 36.0\n\nif __name__ == '__main__':\n    test()",
      -0.8583984375
    ],
    [
      "import math\n\n# Note: I chose to use the definition of a cylinder\n# from https://en.wikipedia.org/wiki/Cylinder\n# to provide a consistent example for the problem\n\n# The radius of the cylinder\nR = 10\n\n# The height of the cylinder\nH = 50\n\n# The surface area of the cylinder\ns = math.pi * (R ** 2) * H\n\nprint(f\"Surface area of a cylinder with radius {R} and height {H} is {s}\")",
      -0.8583984375
    ],
    [
      "#\n# Import Modules\n#\nimport math\n\n\ndef main():\n    \"\"\"\n    Main Program\n    \"\"\"\n    #\n    # Get input\n    #\n    # Get input from the user\n    #\n    print(\"\\n\")\n    print(\"*********************************************************\")\n    print(\"*                                                      *\")\n    print(\"*              Lateral Surface Area of a Cylinder        *\")\n    print(\"*                                                      *\")\n    print(\"*         (C)2016 F.J.Chadwick                        *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*********************************************************\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*  Enter the radius of the cylinder:                   *\")\n    print(\"*  (e.g. 2.0)                                          *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*********************************************************\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*********************************************************\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*  Enter the height of the cylinder:                   *\")\n    print(\"*  (e.g. 4.0)                                          *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*********************************************************\")\n    print(\"*                                                      *\")\n    print(\"*                                                      *\")\n    print(\"*  Enter the desired output:                          *\")\n    print(\"*",
      -0.8583984375
    ],
    [
      "import math\n\n\ndef lsa(radius, height):\n    \"\"\"\n    Returns the lateral surface area of a cylinder.\n    \"\"\"\n\n    # 1. Get the surface area of the cylinder\n    surface_area = 2 * math.pi * radius * height\n    # 2. Get the volume of the cylinder\n    volume = math.pi * radius ** 2 * height\n    # 3. Return the surface area and volume of the cylinder\n    return surface_area, volume\n\nif __name__ == '__main__':\n    # radius = 10\n    # height = 5\n    radius, height = 10, 10\n    surface_area, volume = lsa(radius, height)\n    print(\"Surface area: %.3f\" % surface_area)\n    print(\"Volume: %.3f\" % volume)",
      -0.8583984375
    ],
    [
      "# TODO:\n# - use a function to find the volume of a cylinder\n# - use a function to find the volume of a cylinder\n\nfrom math import pi\n\ndef lateral_surface_area(radius, height):\n    return 2 * pi * radius * height\n\nif __name__ == \"__main__\":\n    radius = int(input(\"Enter radius of cylinder: \"))\n    height = int(input(\"Enter height of cylinder: \"))\n\n    print(\"The lateral surface area of the cylinder is:\", lateral_surface_area(radius, height))",
      -0.8583984375
    ],
    [
      "import math\n\ndef area(radius, height):\n    return math.pi * radius * radius * height\n\nif __name__ == \"__main__\":\n    print(area(10, 20))",
      -0.8583984375
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n    \"\"\"\n    return math.pi * (radius ** 2 + height ** 2)\n\nif __name__ == \"__main__\":\n    print lateral_surface_area(1, 2)",
      -0.8583984375
    ],
    [
      "import numpy as np\n\n\ndef cylinder_surface_area(length, radius):\n    \"\"\"\n    Compute the lateral surface area of a cylinder.\n\n    :param length: Length of the cylinder.\n    :param radius: Radius of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return 4 * np.pi * length * radius ** 2\n\n\ndef main():\n    length = 2\n    radius = 1\n    print(cylinder_surface_area(length, radius))\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "import math\n\n\ndef surface_area(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    # A cylinder is a surface of revolution.\n    # The area is calculated by the formula:\n    # 2 * pi * r * h\n    # where:\n    # r is the radius of the cylinder\n    # h is the height of the cylinder\n    return 2 * math.pi * radius * height\n\nif __name__ == '__main__':\n    assert surface_area(1, 2) == 8.0\n    assert surface_area(2, 1) == 4.0\n    assert surface_area(2, 2) == 16.0",
      -0.8583984375
    ],
    [
      "def area(radius, height):\n    return 2 * radius * height\n\ndef main():\n    print(area(5, 3))\n    print(area(3, 4))\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "#!/usr/bin/env python\n\ndef area(radius, height):\n    return radius * radius * height\n\ndef main():\n    print area(3, 5)\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "import math\n\ndef area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    @param radius: The radius of the cylinder.\n    @type radius: float\n\n    @param height: The height of the cylinder.\n    @type height: float\n    \"\"\"\n    return (2.0 * math.pi * radius * height)\n\n\ndef main():\n    \"\"\"\n    Call the area function and print the result.\n    \"\"\"\n    radius = float(input(\"Radius: \"))\n    height = float(input(\"Height: \"))\n    print(\"Area: {}\".format(area(radius, height)))\n\nif __name__ == \"__main__\":\n    main()",
      -0.85888671875
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculates the lateral surface area of a cylinder given its radius and height.\n    \"\"\"\n    return math.pi * radius * height\n\nif __name__ == \"__main__\":\n    print(lateral_surface_area(3, 4))\n    print(lateral_surface_area(3.5, 4))\n    print(lateral_surface_area(3, 4.5))",
      -0.85888671875
    ],
    [
      "# https://www.hackerrank.com/challenges/cylinder-surface-area/problem\n\nimport math\n\n\ndef main():\n    input_size = int(input())\n    for _ in range(input_size):\n        length, radius = map(int, input().split())\n        print(math.pi * (radius ** 2) * length)\n\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "import math\n\ndef lsa(radius, height):\n    \"\"\"\n    Compute the lateral surface area of a cylinder.\n\n    Inputs:\n    - radius: the radius of the cylinder\n    - height: the height of the cylinder\n\n    Returns:\n    - the lateral surface area of the cylinder\n    \"\"\"\n    return math.pi * radius * radius * height\n\ndef main():\n    radius = int(input(\"Enter the radius: \"))\n    height = int(input(\"Enter the height: \"))\n    print(\"The lateral surface area of a cylinder is: {}\".format(lsa(radius, height)))\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "#!/usr/bin/python\n\nclass Solution(object):\n    def lateralSurfaceArea(self, L, R, G, H):\n        \"\"\"\n        :type L: int\n        :type R: int\n        :type G: int\n        :type H: int\n        :rtype: int\n        \"\"\"\n        return (R-L)*(G+H)/2\n\n\nif __name__ == '__main__':\n    sol = Solution()\n    print(sol.lateralSurfaceArea(1, 1, 1, 1))",
      -0.85888671875
    ],
    [
      "#!/usr/bin/env python\n\nfrom __future__ import print_function\nimport math\n\n\ndef cylinder_surface_area(height, radius):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param height: The height of the cylinder.\n    :param radius: The radius of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * (radius * radius * height)\n\n\nif __name__ == \"__main__\":\n    height = int(input('Please enter the height of the cylinder: '))\n    radius = int(input('Please enter the radius of the cylinder: '))\n    print('The lateral surface area of the cylinder is {}.'.format(cylinder_surface_area(height, radius)))",
      -0.85888671875
    ],
    [
      "def lateral_surface_area(radius, height):\n    \"\"\"\n    :param radius: the radius of the cylinder\n    :param height: the height of the cylinder\n    :return: the lateral surface area of the cylinder\n    \"\"\"\n    return 2 * radius * height\n\n\nif __name__ == \"__main__\":\n    radius = float(input(\"Enter the radius of the cylinder: \"))\n    height = float(input(\"Enter the height of the cylinder: \"))\n    print(lateral_surface_area(radius, height))",
      -0.90673828125
    ],
    [
      "from math import sqrt\n\ndef lateral_surface_area(radius, height):\n    return 2 * radius * height\n\n\n# -------------------------------------------------\n\ndef main():\n    radius = float(input('Enter the radius: '))\n    height = float(input('Enter the height: '))\n\n    print('Lateral surface area of a cylinder with radius {0} and height {1} is {2}'.format(radius, height, lateral_surface_area(radius, height)))\n\n\nif __name__ == '__main__':\n    main()",
      -0.99609375
    ],
    [
      "import math\n\ndef area_cylinder(r, h):\n    return 2 * math.pi * r * h\n\nif __name__ == \"__main__\":\n    r = float(input(\"Radius of the cylinder: \"))\n    h = float(input(\"Height of the cylinder: \"))\n    print(area_cylinder(r, h))",
      -1.2265625
    ],
    [
      "import math\n\ndef main():\n    \"\"\"\n    main()\n    \"\"\"\n    cyl_area = cylinder_area(12, 3)\n    print('Cylinder Area = {}'.format(cyl_area))\n\ndef cylinder_area(length, radius):\n    \"\"\"\n    cylinder_area(length, radius)\n    \"\"\"\n    cyl_area = math.pi * radius * radius * length\n    return cyl_area\n\nif __name__ == '__main__':\n    main()",
      -1.587890625
    ],
    [
      "import math\n\ndef lateral_surface_area(height, radius):\n    \"\"\"\n    :type height: float\n    :type radius: float\n    :rtype: float\n    \"\"\"\n    return math.pi * (radius ** 2) * height\n\n\nif __name__ == \"__main__\":\n    height, radius = input().split()\n    height = float(height)\n    radius = float(radius)\n    print(lateral_surface_area(height, radius))",
      -1.7236328125
    ],
    [
      "import math\n\ndef lsa(radius, height):\n    \"\"\"\n    :param radius: radius of the cylinder\n    :param height: height of the cylinder\n    :return: the lateral surface area of the cylinder\n    \"\"\"\n    return math.pi * radius * radius * height\n\n\n# Your code here!\n\n# TEST CASES\nprint(lsa(2, 3))\nprint(lsa(4, 3))\nprint(lsa(2, 2))",
      -1.8212890625
    ],
    [
      "import math\n\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    return math.pi * radius * radius * height\n\n\nif __name__ == '__main__':\n    print lateral_surface_area(2.0, 3.0)",
      -2.078125
    ],
    [
      "# https://github.com/SebastianDiesch/CSCI-1530-Cylinders\n\nimport math\n\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n    :param radius: The radius of the cylinder.\n    :param height: The height of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * radius ** 2 * height\n\n\ndef test_lateral_surface_area():\n    assert lateral_surface_area(1, 1) == 2 * math.pi\n\n\ndef main():\n    \"\"\"\n    Run the tests and print the results.\n    \"\"\"\n    test_lateral_surface_area()\n\n\nif __name__ == \"__main__\":\n    main()",
      -2.24609375
    ],
    [
      "def lateral_surface_area(length, radius):\n    \"\"\"\n    length is the length of the cylinder,\n    radius is the radius of the cylinder.\n    \"\"\"\n    # Area = pi * r^2 * l\n    area = pi * pow(radius, 2) * length\n    return area\n\nprint(lateral_surface_area(20, 10))",
      -2.4140625
    ],
    [
      "# Import the math module.\nimport math\n\n# Import the math module.\nimport math\n\n# Import the numpy module.\nimport numpy as np\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the built-in math module.\nimport math\n\n# Import the built-in math module.\nimport math\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the numpy module.\nimport numpy as np\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the built-in math module.\nimport math\n\n# Import the built-in math module.\nimport math\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the built-in math module.\nimport math\n\n# Import the built-in math module.\nimport math\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the numpy module.\nimport numpy as np\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the built-in math module.\nimport math\n\n# Import the built-in math module.\nimport math\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the numpy module.\nimport numpy as np\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the built-in math module.\nimport math\n\n# Import the built-in math module.\nimport math\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the numpy module.\nimport numpy as np\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the built-in math module.\nimport math\n\n# Import the built-in math module.\nimport math\n\n# Import the scipy module.\nimport scipy.spatial as sp\n\n# Import the numpy module.\nimport numpy as np\n\n# Import the scipy module.\nimport sc",
      -2.90234375
    ],
    [
      "import math\n\ndef surface_area(radius, height):\n    return math.pi * radius * radius * height\n\nif __name__ == '__main__':\n    print surface_area(1, 2)",
      -2.921875
    ],
    [
      "import math\n\n# calculate the surface area\ndef surface_area(radius, height):\n    return 2 * math.pi * radius * height\n\n# get the surface area of a cylinder with a given radius and height\ndef cylinder_surface_area(radius, height):\n    return 4 * math.pi * radius * height\n\n# main\nif __name__ == '__main__':\n    radius = float(input(\"Enter radius: \"))\n    height = float(input(\"Enter height: \"))\n    print(\"The surface area of a cylinder with a radius of {0} and a height of {1} is {2}\".format(radius, height, surface_area(radius, height)))\n    print(\"The surface area of a cylinder with a radius of {0} and a height of {1} is {2}\".format(radius, height, cylinder_surface_area(radius, height)))",
      -3.0703125
    ],
    [
      "# TODO\n# 1) check if cylinder is a sphere\n# 2) check if cylinder is a cylinder with a diameter\n\nimport math\n\n\ndef area(radius, height):\n    return math.pi * radius * height\n\n\ndef main():\n    print(area(10, 20))\n\n\nif __name__ == '__main__':\n    main()",
      -3.568359375
    ],
    [
      "# import the necessary packages\nimport math\n\n# define a procedure, get_area, that will return the area\n# of a cylinder\ndef get_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: the radius of the cylinder\n    :param height: the height of the cylinder\n    :returns: the lateral surface area of the cylinder\n    \"\"\"\n    # calculate the area of the cylinder\n    cyl_area = math.pi * radius * height\n    # return the area of the cylinder\n    return cyl_area\n\n\n# test routine\nif __name__ == \"__main__\":\n    # create a sample of cylinders\n    sample_cylinders = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9],\n        [10, 11, 12],\n        [13, 14, 15],\n        [16, 17, 18],\n        [19, 20, 21],\n        [22, 23, 24],\n        [25, 26, 27],\n        [28, 29, 30],\n        [31, 32, 33],\n        [34, 35, 36],\n        [37, 38, 39],\n        [40, 41, 42],\n        [43, 44, 45],\n        [46, 47, 48],\n        [49, 50, 51],\n        [52, 53, 54],\n        [55, 56, 57],\n        [58, 59, 60],\n        [61, 62, 63],\n        [64, 65, 66],\n        [67, 68, 69],\n        [70, 71, 72],\n        [73, 74, 75],\n        [76, 77, 78],\n        [79, 80, 81],\n        [82, 83, 84],\n        [85, 86, 87],\n        [88, 89, 90],\n        [91, 92, 93],\n        [94, 95, 96],\n        [97, 98, 99],\n        [100, 101, 102],\n        [103, 104, 105],\n        [106, 107, 108],\n        [109, 110, 111],\n        [112, 113, 114],\n        [115, 116,",
      -3.607421875
    ],
    [
      "import math\n\ndef area_cylinder(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    return math.pi * radius * radius * height\n\ndef area_cylinder_2(radius, height):\n    \"\"\"\n    :type radius: float\n    :type height: float\n    :rtype: float\n    \"\"\"\n    return radius * height\n\nif __name__ == '__main__':\n    print(area_cylinder(1, 2))\n    print(area_cylinder(2, 2))\n    print(area_cylinder(3, 4))\n    print(area_cylinder(4, 4))\n    print(area_cylinder(5, 4))\n    print(area_cylinder(5, 2))\n    print(area_cylinder_2(5, 4))\n    print(area_cylinder_2(5, 2))",
      -3.8671875
    ],
    [
      "#!/usr/bin/env python\n\nimport math\nimport sys\n\ndef main():\n    \"\"\"\n    >>> main()\n    6.39221278\n    >>> main(3)\n    6.39221278\n    >>> main(0)\n    0.0\n    >>> main(1)\n    0.0\n    \"\"\"\n    cyl = sys.argv[1] if len(sys.argv) > 1 else None\n    if cyl is None:\n        cyl = input()\n    if cyl.isdigit():\n        cyl = int(cyl)\n    else:\n        cyl = float(cyl)\n    sa = math.pi * cyl * cyl / 4\n    print(sa)\n\nif __name__ == \"__main__\":\n    main()",
      -4.03515625
    ],
    [
      "import math\n\ndef lateral_surface_area(radius, height):\n    return math.pi * radius ** 2 * height\n\nif __name__ == \"__main__\":\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert lateral_surface_area(1, 2) == 6.28, \"1 * 2 * pi\"\n    assert lateral_surface_area(3, 5) == 11.81, \"3 * 5 * pi\"\n    assert lateral_surface_area(4, 6) == 15.36, \"4 * 6 * pi\"\n    assert lateral_surface_area(5, 7) == 17.07, \"5 * 7 * pi\"\n    assert lateral_surface_area(6, 8) == 19.54, \"6 * 8 * pi\"\n    assert lateral_surface_area(7, 9) == 21.06, \"7 * 9 * pi\"\n    assert lateral_surface_area(8, 10) == 23.52, \"8 * 10 * pi\"\n    assert lateral_surface_area(9, 11) == 25.97, \"9 * 11 * pi\"\n    assert lateral_surface_area(10, 12) == 28.38, \"10 * 12 * pi\"\n    assert lateral_surface_area(11, 13) == 31.80, \"11 * 13 * pi\"\n    assert lateral_surface_area(12, 14) == 34.17, \"12 * 14 * pi\"\n    assert lateral_surface_area(13, 15) == 37.54, \"13 * 15 * pi\"\n    assert lateral_surface_area(14, 16) == 40.91, \"14 * 16 * pi\"\n    assert lateral_surface_area(15, 17) == 44.24, \"15 * 17 * pi\"\n    assert lateral_surface_area(16, 18) == 47.56, \"16 * 18 * pi\"\n    assert lateral_surface_area(17, 19) == 51.88, \"17 * 19 * pi\"\n    assert lateral_surface_area(18, 20) == 55.20, \"18 * 20 * pi\"\n    assert lateral_surface_area(19, 21) == 59.52, \"19 * 21 * pi\"",
      -4.46875
    ],
    [
      "import math\nimport operator\n\ndef cylinder_surface_area(radius, length):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :type radius: float\n\n    :param length: The length of the cylinder.\n    :type length: float\n\n    :rtype: float\n    \"\"\"\n    return math.pi * radius * radius * length\n\n# Unit test\nif __name__ == '__main__':\n    print cylinder_surface_area(2, 4)",
      -4.625
    ],
    [
      "# Your Code Here\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Input: radius, height\n    Output: lateral surface area\n    \"\"\"\n    return radius**2 * height\n\nprint lateral_surface_area(3, 4)",
      -5.15234375
    ],
    [
      "#!/usr/bin/env python\n\ndef main():\n    cylinder = [1, 2, 3, 4]\n    area = cylinder_area(cylinder)\n    print(\"Area of cylinder is: %s\" % area)\n\n\ndef cylinder_area(cylinder):\n    # Your code here\n    total = 0\n    for i in cylinder:\n        total = total + i*2\n    return total\n\n\nif __name__ == '__main__':\n    main()",
      -5.6484375
    ],
    [
      "# Definition for a point\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __str__(self):\n        return '({0}, {1})'.format(self.x, self.y)\n\n# Definition for a line segment\nclass Segment:\n    def __init__(self, p, q):\n        self.p = p\n        self.q = q\n\n    def __str__(self):\n        return '({0}, {1})'.format(self.p, self.q)\n\nclass Solution:\n    def getLength(self, points):\n        \"\"\"\n        :type points: List[Point]\n        :rtype: float\n        \"\"\"\n        # Use the following formula to compute the area of a cylinder:\n        # A = pi * r * r * (r - length)\n        # where r is the radius of the cylinder\n        # and length is the length of the cylinder.\n        # The formula is valid for a cylinder with a radius of 1.\n        area = 0\n        for p, q in zip(points, points[1:] + [points[0]]):\n            area += math.pi * (p.x - q.x) ** 2 + (p.y - q.y) ** 2\n        return math.pi * (1 + area) / 2\n\n# Time:  O(n)\n# Space: O(n)\nclass Solution2:\n    # @param points, a list of Points\n    # @return an integer\n    def getLength(self, points):\n        \"\"\"\n        :type points: List[Point]\n        :rtype: int\n        \"\"\"\n        area = 0\n        for i in range(len(points)):\n            area += points[i].x * points[i + 1].y - points[i + 1].x * points[i].y\n        return math.sqrt(area)",
      -7.43359375
    ],
    [
      "# TODO:\n# - Find the area of a cylinder\n# - Find the area of a sphere\n# - Find the area of a cone\n# - Find the area of a cube\n# - Find the area of a trapezoid\n# - Find the area of a triangle\n# - Find the area of a parallelogram\n\nimport math\n\ndef cylinder_area(radius, length):\n    return (math.pi * radius * radius * length) / 3\n\ndef sphere_area(radius):\n    return (4.0/3.0 * math.pi * radius * radius)\n\ndef cone_area(radius, length):\n    return (math.pi * radius * radius * length) / 4\n\ndef cube_area(length):\n    return (math.pi * length * length * length) / 6\n\ndef trapezoid_area(width, height):\n    return (2 * math.pi * width * height) / 6\n\ndef triangle_area(side1, side2, side3):\n    return (math.pi * (side1 + side2 + side3)) / 6\n\ndef parallelogram_area(width, height):\n    return (2 * math.pi * width * height) / 6\n\nif __name__ == \"__main__\":\n    print cylinder_area(2.0, 3.0)\n    print sphere_area(2.0)\n    print cone_area(2.0, 3.0)\n    print cube_area(3.0)\n    print trapezoid_area(3.0, 4.0)\n    print triangle_area(3.0, 4.0, 5.0)\n    print parallelogram_area(3.0, 4.0)",
      -8.1328125
    ],
    [
      "from math import sqrt\n\ndef lateral_surface_area(length, radius):\n    return length * radius * 3.14159 / 2\n\n\nif __name__ == \"__main__\":\n    print(lateral_surface_area(6, 1))",
      -8.2421875
    ],
    [
      "import math\n\n# Returns the surface area of a cylinder of a given radius and height.\ndef cylinder_surface_area(r, h):\n    return r * math.pi * h\n\n# Returns the total surface area of a cylinder of a given radius and height.\ndef cylinder_surface_area_total(r, h):\n    return cylinder_surface_area(r, h) + cylinder_surface_area(r, h - 1)\n\n# Returns the volume of a cylinder of a given radius and height.\ndef cylinder_volume(r, h):\n    return r * h * math.pi\n\n# Returns the total volume of a cylinder of a given radius and height.\ndef cylinder_volume_total(r, h):\n    return cylinder_volume(r, h) + cylinder_volume(r, h - 1)\n\n# Returns the perimeter of a cylinder of a given radius and height.\ndef cylinder_perimeter(r, h):\n    return r * h * (2 + math.pi)\n\n# Returns the total perimeter of a cylinder of a given radius and height.\ndef cylinder_perimeter_total(r, h):\n    return cylinder_perimeter(r, h) + cylinder_perimeter(r, h - 1)\n\n# Returns the area of a spherical surface of a given radius.\ndef spherical_surface_area(r):\n    return math.pi * r * r\n\n# Returns the total area of a spherical surface of a given radius.\ndef spherical_surface_area_total(r):\n    return spherical_surface_area(r) + spherical_surface_area(r - 1)\n\n# Returns the volume of a spherical surface of a given radius.\ndef spherical_volume(r):\n    return math.pi * r * r * r\n\n# Returns the total volume of a spherical surface of a given radius.\ndef spherical_volume_total(r):\n    return spherical_volume(r) + spherical_volume(r - 1)\n\n# Returns the perimeter of a spherical surface of a given radius.\ndef spherical_perimeter(r):\n    return r * (4 + math.pi)\n\n# Returns the total perimeter of a spherical surface of a given radius.\ndef spherical_perimeter_total(r):\n    return",
      -8.3203125
    ],
    [
      "#!/usr/bin/env python\n\nimport math\n\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :param height: The height of the cylinder.\n    :return: The lateral surface area of the cylinder.\n    \"\"\"\n    return math.pi * radius * radius * height\n\n\nif __name__ == \"__main__\":\n    assert lateral_surface_area(1, 2) == math.pi, \"Input 1 is not a valid radius.\"\n    assert lateral_surface_area(2, 2) == 4.0, \"Input 2 is not a valid radius.\"\n    assert lateral_surface_area(3, 2) == 6.0, \"Input 3 is not a valid radius.\"\n    assert lateral_surface_area(4, 2) == 8.0, \"Input 4 is not a valid radius.\"\n    assert lateral_surface_area(5, 2) == 10.0, \"Input 5 is not a valid radius.\"\n    assert lateral_surface_area(6, 2) == 12.0, \"Input 6 is not a valid radius.\"\n    assert lateral_surface_area(7, 2) == 14.0, \"Input 7 is not a valid radius.\"\n    assert lateral_surface_area(8, 2) == 16.0, \"Input 8 is not a valid radius.\"\n    assert lateral_surface_area(9, 2) == 18.0, \"Input 9 is not a valid radius.\"\n    assert lateral_surface_area(10, 2) == 20.0, \"Input 10 is not a valid radius.\"\n    assert lateral_surface_area(11, 2) == 22.0, \"Input 11 is not a valid radius.\"\n    assert lateral_surface_area(12, 2) == 24.0, \"Input 12 is not a valid radius.\"\n    assert lateral_surface_area(13, 2) == 26.0, \"Input 13 is not a valid radius.\"\n    assert lateral_surface_area(14, 2) == 28.0, \"Input 14 is not a valid radius.\"\n    assert lateral_surface_area(15, 2) == 30.0, \"Input 15 is not a valid radius.\"",
      -9.203125
    ],
    [
      "import math\n\n\ndef area_cylinder(radius, length):\n    \"\"\"\n    :param radius: the radius of the cylinder\n    :param length: the length of the cylinder\n    :return: the area of the cylinder\n    \"\"\"\n    return math.pi * radius * radius * length\n\n\ndef main():\n    \"\"\"\n    Unit tests for area_cylinder().\n    \"\"\"\n    assert area_cylinder(10, 10) == 210\n    assert area_cylinder(5, 5) == 10\n    assert area_cylinder(10, 20) == 100\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(10, 10) == 210\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n    assert area_cylinder(100, 100) == 1000\n\n\nif __name__ == '__main__':\n    main()",
      -9.3125
    ],
    [
      "from math import pi, sqrt\n\n\ndef area(radius, length):\n    \"\"\"\n    Calculate the area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :param length: The length of the cylinder.\n    :return: The area of the cylinder.\n    \"\"\"\n    return pi * radius * (length - 2 * radius)\n\n\ndef test(radius, length):\n    \"\"\"\n    Test the area function.\n\n    :param radius: The radius of the cylinder.\n    :param length: The length of the cylinder.\n    :return: The area of the cylinder.\n    \"\"\"\n    return area(radius, length)\n\n\nif __name__ == '__main__':\n    assert area(1, 2) == pi * 4\n    assert area(2, 3) == pi * 4\n    assert area(3, 4) == pi * 4\n    assert area(4, 5) == pi * 8\n    assert area(5, 6) == pi * 8\n    assert area(6, 7) == pi * 8\n    assert area(7, 8) == pi * 8\n    assert area(8, 9) == pi * 12\n    assert area(9, 10) == pi * 12\n    assert area(10, 11) == pi * 12\n    assert area(11, 12) == pi * 12\n    assert area(12, 13) == pi * 16\n    assert area(13, 14) == pi * 16\n    assert area(14, 15) == pi * 16\n    assert area(15, 16) == pi * 16\n    assert area(16, 17) == pi * 24\n    assert area(17, 18) == pi * 24\n    assert area(18, 19) == pi * 24\n    assert area(19, 20) == pi * 24\n    assert area(20, 21) == pi * 32\n    assert area(21, 22) == pi * 32\n    assert area(22, 23) == pi * 32\n    assert area(23, 24) == pi * 32\n    assert area(24, 25) == pi * 40\n    assert area(25, 26) == pi * 40\n    assert area(26, 27) == pi * 40\n    assert area(27, 28) == pi * 40",
      -9.6640625
    ],
    [
      "# TODO:\n# 1. Write a function that returns the surface area of a cylinder by\n#    using the formula:\n#        area = pi * (radius ** 2) * height\n#\n# 2. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 3. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 4. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 5. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 6. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 7. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 8. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 9. Write a function that returns the volume of a cylinder by using the\n#    formula:\n#        volume = pi * radius ** 2 * height\n#\n# 10. Write a function that returns the volume of a cylinder by using the\n#     formula:\n#        volume = pi * radius ** 2 * height\n#\n# 11. Write a function that returns the volume of a cylinder by using the\n#     formula:\n#        volume = pi * radius ** 2 * height\n#\n# 12. Write a function that returns the volume of a cylinder by using the\n#     formula:\n#        volume = pi * radius ** 2 * height\n#\n# 13. Write a function that returns the volume of a cylinder by using the\n#     formula:\n#        volume = pi * radius ** 2 * height\n#\n# 14. Write a function that returns the volume of a cylinder by using the\n#     formula:",
      -10.2578125
    ],
    [
      "def surface_area(radius, height):\n    \"\"\"\n    Calculates the surface area of a cylinder.\n\n    Args:\n        radius (int): The radius of the cylinder.\n        height (int): The height of the cylinder.\n\n    Returns:\n        int: The lateral surface area of the cylinder.\n    \"\"\"\n    return (radius ** 2 * (3 * radius ** 2 + height ** 2)) / 2",
      -10.40625
    ],
    [
      "# %%\n# We are going to solve this problem using the following example.\n\n# %%\n# Let's start with a cylinder of radius 10, with a height of 30.\n#\n# $$\n# \\begin{align*}\n# a &= \\\\frac{R^2\\\\,\\\\,h}{2} \\\\\\\\\n# b &= \\\\frac{R^2\\\\,\\\\,h}{2}\n# \\end{align*}\n# $$\n\n# %%\n# We have a cylinder of radius 10, height 30, so the area is:\n\n# %%\n# $$\n# a = \\\\frac{R^2\\\\,\\\\,h}{2} = 10^2\\\\,\\\\,30 = 0.5\\,\\,30^2 = 30^2 = 30\n# $$\n\n# %%\n# In the following example we are going to solve the problem for a cylinder with radius of 10, height of 30,\n# and the following input:\n\n# %%\n# $$\n# h = 30\n# $$\n\n# %%\n# In this case the area is:\n\n# %%\n# $$\n# a = \\\\frac{10^2\\\\,\\\\,30}{2} = 0.5\\,\\,30^2 = 30^2 = 30\n# $$\n\n# %%\n# To solve this problem we first define a function that calculates the lateral surface area of a cylinder:\n\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n# %%\n#",
      -10.5625
    ],
    [
      "from math import sqrt, pi\nfrom itertools import product\n\ndef lateral_surface_area(radius, height):\n    \"\"\"\n    Calculate the lateral surface area of a cylinder.\n\n    :param radius: The radius of the cylinder.\n    :type radius: float\n    :param height: The height of the cylinder.\n    :type height: float\n    :returns: The lateral surface area of the cylinder.\n    :rtype: float\n    \"\"\"\n\n    if radius < 0 or height < 0:\n        raise ValueError(\"Radius or height is less than 0.\")\n\n    # Get the number of sides of the cylinder.\n    num_sides = int(2 * pi * radius * height / sqrt(pi * radius**2 * height))\n\n    # Calculate the surface area of the cylinder.\n    surface_area = num_sides * radius * height\n\n    return surface_area\n\ndef main():\n    \"\"\"\n    A test function to calculate the lateral surface area of a cylinder.\n\n    :returns: A test result.\n    :rtype: str\n    \"\"\"\n    print(lateral_surface_area(3, 2))\n    print(lateral_surface_area(5, 3))\n\nif __name__ == '__main__':\n    main()",
      -10.7890625
    ],
    [
      "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n# @Author: omi\n# @Date:   2014-08-06 21:47:10\n# @Last Modified by:   omi\n# @Last Modified time: 2015-07-29 16:17:59\n\n\"\"\"\nGiven a cylinder, return the lateral surface area.\n\nThe lateral surface area of a cylinder is the area of the cylinder,\nincluding the overlap area.\n\nThe cylinder's overlap area is the area of the cylinder that is\ncovered by the surface of the container.\n\nIf the cylinder is not overlapping, the overlap area is zero.\n\nFor example, a cylinder with a base radius of 10 and a top radius\nof 10 has a overlap area of zero.\n\nThe cylinder with base radius of 10 and a top radius of 10 has a\nlateral surface area of 10.\n\nGiven a cylinder's height and base radius, return the lateral\nsurface area.\n\"\"\"\n\nclass Solution(object):\n    def computeArea(self, height, r1, r2):\n        \"\"\"\n        :type height: int\n        :type r1: int\n        :type r2: int\n        :rtype: int\n        \"\"\"\n        delta = r2 - r1\n        if delta == 0:\n            return 0\n        return height * delta\n\n\nif __name__ == \"__main__\":\n    assert Solution().computeArea(0, 0, 0) == 0\n    assert Solution().computeArea(1, 0, 0) == 0\n    assert Solution().computeArea(2, 0, 0) == 0\n    assert Solution().computeArea(3, 0, 0) == 0\n    assert Solution().computeArea(4, 0, 0) == 0\n    assert Solution().computeArea(5, 0, 0) == 0\n    assert Solution().computeArea(6, 0, 0) == 0\n    assert Solution().computeArea(7, 0, 0) == 0\n    assert Solution().computeArea(8, 0, 0) == 0\n    assert Solution().computeArea(9, 0, 0) == 0\n    assert Solution().computeArea(10, 0, 0) == 0\n    assert Solution().computeArea",
      -11.09375
    ],
    [
      "#!/usr/bin/env python\n\nimport math\n\ndef lateral_surface_area(height, radius):\n    \"\"\"\n    Returns the lateral surface area of a cylinder with the given height and\n    radius.\n\n    >>> lateral_surface_area(1, 1)\n    2\n    >>> lateral_surface_area(1, 2)\n    2\n    >>> lateral_surface_area(2, 1)\n    2\n    >>> lateral_surface_area(1, 3)\n    2\n    >>> lateral_surface_area(2, 2)\n    4\n    >>> lateral_surface_area(3, 1)\n    2\n    >>> lateral_surface_area(3, 2)\n    4\n    >>> lateral_surface_area(4, 1)\n    4\n    >>> lateral_surface_area(4, 2)\n    8\n    \"\"\"\n    return math.pi * radius ** 2 * height\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -11.75
    ],
    [
      "from __future__ import print_function\nimport math\n\nclass Solution(object):\n    \"\"\"\n    @param radius: the radius of the cylinder\n    @param height: the height of the cylinder\n    @return: the lateral surface area of the cylinder\n    \"\"\"\n    def computeArea(self, radius, height):\n        \"\"\"\n        :type radius: int\n        :type height: int\n        :rtype: int\n        \"\"\"\n        if radius == 0 or height == 0:\n            return 0\n        area = math.pi * (radius ** 2 * height)\n        return area\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.computeArea(1, 1))\n    print(s.computeArea(1, 2))\n    print(s.computeArea(2, 3))\n    print(s.computeArea(2, 4))",
      -11.8515625
    ],
    [
      "import math\n\n# Returns the surface area of the cylinder\ndef area(radius, height):\n    return math.pi * radius * height\n\n# Test Cases\n# radius = 2\n# height = 3\n# area(radius, height) = 6 * pi * 2 * 3 = 36\n# radius = 1\n# height = 1\n# area(radius, height) = 4 * pi * 1 * 1 = 4\n# radius = 2\n# height = 4\n# area(radius, height) = 8 * pi * 2 * 4 = 64\n# radius = 3\n# height = 3\n# area(radius, height) = 12 * pi * 3 * 3 = 72\n# radius = 4\n# height = 6\n# area(radius, height) = 16 * pi * 4 * 6 = 192\n\n# Area of a sphere\ndef area(radius):\n    return 4 * math.pi * radius * radius\n\n# Test Cases\n# radius = 2\n# area(radius) = 4 * pi * 2 * 2 = 16\n# radius = 1\n# area(radius) = 4 * pi * 1 * 1 = 4\n# radius = 2\n# area(radius) = 4 * pi * 2 * 2 = 16\n# radius = 3\n# area(radius) = 4 * pi * 3 * 3 = 72\n# radius = 4\n# area(radius) = 4 * pi * 4 * 4 = 64\n\n# Area of a cube\ndef area(side_length):\n    return side_length * side_length * side_length\n\n# Test Cases\n# side_length = 2\n# area(side_length) = 4 * pi * 2 * 2 = 16\n# side_length = 1\n# area(side_length) = 4 * pi * 1 * 1 = 4\n# side_length = 2\n# area(side_length) = 4 * pi * 2 * 2 = 16\n# side_length = 3\n# area(side_length) = 4 * pi * 3 * 3 = 72\n# side_length = 4\n# area(side_length) = 4 * pi * 4 * 4 = 64\n\n# Area of a cylinder\ndef area(radius, height):\n    return area(radius) * height\n\n# Test Cases\n# radius = 2\n# height = 3\n# area",
      -12.6015625
    ],
    [
      "# Definition for a point.\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    def __str__(self):\n        return '({}, {})'.format(self.x, self.y)\n\nclass Solution:\n    def getLateralSurfaceArea(self, points):\n        \"\"\"\n        :type points: List[Point]\n        :rtype: float\n        \"\"\"\n        sum = 0\n        for i in range(len(points)):\n            sum += (points[i].x - points[(i + 1) % len(points)].x) ** 2 + \\\n                   (points[i].y - points[(i + 1) % len(points)].y) ** 2\n        return sum / 2\n\n\nif __name__ == '__main__':\n    sol = Solution()\n    p1 = Point(1, 2)\n    p2 = Point(3, 4)\n    p3 = Point(5, 6)\n    p4 = Point(7, 8)\n    p5 = Point(9, 10)\n    p6 = Point(11, 12)\n    p7 = Point(13, 14)\n    p8 = Point(15, 16)\n    p9 = Point(17, 18)\n    p10 = Point(19, 20)\n    p11 = Point(21, 22)\n    p12 = Point(23, 24)\n    p13 = Point(25, 26)\n    p14 = Point(27, 28)\n    p15 = Point(29, 30)\n    p16 = Point(31, 32)\n    p17 = Point(33, 34)\n    p18 = Point(35, 36)\n    p19 = Point(37, 38)\n    p20 = Point(39, 40)\n    p21 = Point(41, 42)\n    p22 = Point(43, 44)\n    p23 = Point(45, 46)\n    p24 = Point(47, 48)\n    p25 = Point(49, 50)\n    p26 = Point(51, 52)\n    p27 = Point(53, 54)\n    p28 = Point(55, 56)",
      -12.6484375
    ],
    [
      "def area(length, radius):\n    \"\"\"\n    Input:\n    length = length of the cylinder\n    radius = radius of the cylinder\n    Output:\n    Area of the cylinder\n    \"\"\"\n    return length**2 * radius\n\nif __name__ == '__main__':\n    assert area(1, 1) == 4.0\n    assert area(2, 1) == 4.0\n    assert area(1, 2) == 4.0\n    assert area(3, 2) == 8.0",
      -14.8046875
    ],
    [
      "# Import relevant python libraries\nimport math\n\n# Import relevant numpy libraries\nimport numpy as np\n\n\n# Function to find the lateral surface area of a cylinder\ndef cylinder_lateral_area(radius, height):\n    \"\"\"\n    Write a function to find the lateral surface area of a cylinder.\n\n    Inputs:\n    radius -- The radius of the cylinder\n    height -- The height of the cylinder\n\n    Returns:\n    The lateral surface area of the cylinder\n    \"\"\"\n\n    # Calculate the area of the cylinder\n    cylinder_area = math.pi * radius ** 2 * height\n    # Calculate the lateral surface area of the cylinder\n    cylinder_lateral_area = cylinder_area * radius\n\n    return cylinder_lateral_area\n\n\n# Test function\nif __name__ == '__main__':\n    # Test case 1\n    test_cylinder_lateral_area = cylinder_lateral_area(1, 2)\n    print('Test case 1:', test_cylinder_lateral_area)\n\n    # Test case 2\n    test_cylinder_lateral_area = cylinder_lateral_area(2, 1)\n    print('Test case 2:', test_cylinder_lateral_area)",
      -14.859375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}