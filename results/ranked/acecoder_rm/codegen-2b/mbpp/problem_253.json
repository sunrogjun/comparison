{
  "problem": {
    "task_id": "MBPP/264",
    "prompt": "Write a function to calculate a dog's age in dog's years.",
    "canonical_solution": "def dog_age(h_age):\r\n if h_age < 0:\r\n \texit()\r\n elif h_age <= 2:\r\n\t d_age = h_age * 10.5\r\n else:\r\n\t d_age = 21 + (h_age - 2)*4\r\n return d_age",
    "test_list": [
      "assert dog_age(12)==61",
      "assert dog_age(15)==73",
      "assert dog_age(24)==109"
    ],
    "challenge_test_list": [],
    "problem_id": 253
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "import math\n\ndef dog_years(age_in_years, dog_years):\n    return dog_years + age_in_years\n\nage = input(\"How old is your dog? \")\nage_in_years = int(age)\nage_in_years = dog_years(age_in_years, 0)\nprint(age_in_years)",
      3.2109375
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-years/problem\n\n# Note that it is not possible to calculate dog's age in years\n# as the number of years a dog's age is calculated in the\n# number of years it is actually alive.\n\ndef main(string):\n    # Read the string\n    s = string.split()\n\n    # Number of dogs\n    n = int(s[0])\n\n    # Dog's age in years\n    dog_age = 0\n\n    # Calculate the dog's age\n    for i in range(1, n + 1):\n        # Dog's age in years\n        dog_age += int(s[i])\n\n    # Print the dog's age in years\n    print(dog_age)\n\nif __name__ == '__main__':\n    # Read the input\n    string = input().strip()\n\n    # Execute the main function\n    main(string)",
      1.5712890625
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-years\n\ndef get_age(dog_age, dog_years):\n    if dog_years < dog_age:\n        return dog_years\n    else:\n        return dog_age\n\nif __name__ == \"__main__\":\n    n = int(input())\n    dogs = [int(x) for x in input().split()]\n\n    for dog in dogs:\n        print(get_age(dog, dogs.count(dog)))",
      0.908203125
    ],
    [
      "import sys\n\ndef main():\n    if len(sys.argv)!= 2:\n        sys.exit('Usage: {0} <age>'.format(sys.argv[0]))\n    age = sys.argv[1]\n    if not isinstance(age, int):\n        sys.exit('Usage: {0} <age>'.format(sys.argv[0]))\n    age = int(age)\n    age = age * 365\n    age = int(age)\n    print age\n\nif __name__ == '__main__':\n    main()",
      0.59521484375
    ],
    [
      "def dog_age(age, years):\n    return int(age / years)\n\nprint(dog_age(22, 2))",
      -0.042022705078125
    ],
    [
      "def dog_years(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    return age/365\n\nif __name__ == \"__main__\":\n    print dog_years(5)\n    print dog_years(20)\n    print dog_years(100)\n    print dog_years(200)\n    print dog_years(300)\n    print dog_years(400)\n    print dog_years(500)\n    print dog_years(600)\n    print dog_years(700)",
      -0.1932373046875
    ],
    [
      "class Dog:\n    def __init__(self, name, age, weight):\n        self.name = name\n        self.age = age\n        self.weight = weight\n\n    def __repr__(self):\n        return '<Dog %s, %s years old, weighs %s tons>' % (self.name, self.age, self.weight)\n\ndef get_age(dog):\n    return int(dog.age) * 12 + int(dog.age) / 4\n\n\ndef main():\n    dogs = [Dog(\"Fido\", \"6\", \"3.5\"),\n            Dog(\"Molly\", \"1\", \"0.6\"),\n            Dog(\"Snoopy\", \"3\", \"1.1\"),\n            Dog(\"Spot\", \"2\", \"0.9\")]\n\n    for dog in dogs:\n        print(dog)\n        print(get_age(dog))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.75048828125
    ],
    [
      "def dog_age(dog_age, dog_years):\n    \"\"\"\n    dog_age -> int\n    dog_years -> int\n    Return the dog's age in dog's years.\n    \"\"\"\n    return dog_years * dog_age\n\nif __name__ == '__main__':\n    dog_age(5, 3)",
      -0.85693359375
    ],
    [
      "def dog_years(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    if age < 2:\n        return 0\n    return age/4",
      -0.85693359375
    ],
    [
      "def dog_age(age, years):\n    \"\"\"\n    :type age: int\n    :type years: int\n    :rtype: int\n    \"\"\"\n    return age * years / 365\n\nif __name__ == '__main__':\n    assert dog_age(3, 7) == 5, \"Invalid dog's age\"\n    assert dog_age(3, 8) == 6, \"Invalid dog's age\"\n    assert dog_age(3, 10) == 8, \"Invalid dog's age\"",
      -0.85693359375
    ],
    [
      "# Your Dog's age in Dog's years\ndef dog_age(age_in_years):\n    return age_in_years/365\n\nprint dog_age(30)\nprint dog_age(100)\nprint dog_age(120)",
      -0.85693359375
    ],
    [
      "# https://www.hackerrank.com/challenges/calculate-age/problem\n\nimport math\n\n\ndef calculate_age(age, years):\n    \"\"\"\n    :type age: int\n    :type years: int\n    :rtype: int\n    \"\"\"\n    return math.floor((age * 12) + years)\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for a0 in range(t):\n        age, years = map(int, input().split())\n        print(calculate_age(age, years))",
      -0.85693359375
    ],
    [
      "def get_age(age, years):\n    return age * years\n\ndef get_age_in_years(age, years):\n    return age * years / 365.0\n\nprint get_age(5, 2)\nprint get_age(5, 3)\nprint get_age_in_years(5, 2)\nprint get_age_in_years(5, 3)",
      -0.85693359375
    ],
    [
      "# https://www.hackerrank.com/challenges/cat-and-dog/problem\n\nimport math\n\n\ndef get_age(born):\n    return int(math.floor((born - 1900) / 100))\n\n\ndef main():\n    born = input()\n    age = get_age(born)\n    print(age)\n\n\nif __name__ == '__main__':\n    main()",
      -0.85693359375
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-human-years/problem\n\ndef dog_and_human_years(n):\n    return n * (7 + (n - 1) / 4)\n\n\nif __name__ == '__main__':\n    test_cases = [\n        (1, 0),\n        (2, 7),\n        (3, 14),\n        (4, 21),\n        (5, 28),\n        (6, 36),\n        (7, 45),\n        (8, 55),\n        (9, 66),\n        (10, 83)\n    ]\n\n    for test in test_cases:\n        print(dog_and_human_years(test[0]))",
      -0.85693359375
    ],
    [
      "def dog_years(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    return int(age / 365)\n\nprint(dog_years(40))\nprint(dog_years(100))",
      -0.85693359375
    ],
    [
      "# Write your code here\ndef dog_years(age):\n    age = age / 365\n    return age\n\nprint(dog_years(30))\nprint(dog_years(100))\nprint(dog_years(200))\nprint(dog_years(400))\nprint(dog_years(500))",
      -0.85791015625
    ],
    [
      "def dog_years(age):\n    return age * 1.5\n\nprint dog_years(0)\n#>>> 0\n\nprint dog_years(1)\n#>>> 2.5\n\nprint dog_years(3)\n#>>> 7.5\n\nprint dog_years(4)\n#>>> 15.0",
      -0.85791015625
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\ndef calc_dog_age(dog_age, cat_age):\n    # your code here\n    return dog_age + cat_age\n\nif __name__ == '__main__':\n    dog_age = int(input())\n    cat_age = int(input())\n    print(calc_dog_age(dog_age, cat_age))",
      -0.85791015625
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\ndef get_age(age):\n    if age <= 0:\n        return 'Under 1 year'\n    elif age <= 1:\n        return '1-2 years'\n    elif age <= 3:\n        return '3-5 years'\n    elif age <= 6:\n        return '6-10 years'\n    elif age <= 12:\n        return '12-15 years'\n    elif age <= 18:\n        return '18+ years'\n    else:\n        return 'Unknown'\n\n# Test Cases\n\nage = int(input())\nprint(get_age(age))\n\nage = int(input())\nprint(get_age(age))",
      -0.85791015625
    ],
    [
      "# Define a function to calculate dog's age in dog's years.\ndef dog_years(dog_age):\n    \"\"\"\n    dog_age: integer\n    \"\"\"\n    if dog_age <= 0:\n        return \"Dog is not old enough.\"\n    else:\n        return \"Dog is old enough.\"\n\n\n# Test\nprint dog_years(18)\nprint dog_years(100)\nprint dog_years(100)\nprint dog_years(20)",
      -0.8583984375
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n# https://www.hackerrank.com/challenges/dog-and-cat/submissions/code/16071037\n# https://www.hackerrank.com/challenges/dog-and-cat/submissions/code/16071038\n\ndef get_age(birthday, dog_age):\n    age = dog_age\n    if birthday < 1900:\n        return age\n    elif birthday < 2000:\n        age -= (birthday - 1900) / 100\n    else:\n        age -= (birthday - 2000) / 400\n    return age\n\n# Complete the dogAndCat function below.\ndef dogAndCat(dog_age, birthday, cat_age):\n    age = get_age(birthday, cat_age)\n    age_dog = get_age(birthday, dog_age)\n    return age_dog - age\n\n\nif __name__ == \"__main__\":\n    dog_age = int(input())\n    birthday = int(input())\n    cat_age = int(input())\n    print(dogAndCat(dog_age, birthday, cat_age))",
      -0.8583984375
    ],
    [
      "import math\n\n\ndef get_age(year, dog_age):\n    \"\"\"\n    For the given year and dog_age, return the dog's age in years.\n\n    :param year: The dog's year of birth.\n    :param dog_age: The dog's age in years.\n    :return: The dog's age in years.\n    \"\"\"\n    return (year - dog_age) / 365\n\n\ndef main():\n    \"\"\"\n    For the given dog's year of birth and dog's age in years, return the dog's\n    age in dog's years.\n\n    :return: The dog's age in dog's years.\n    \"\"\"\n    year = int(input(\"Enter dog's year of birth: \"))\n    dog_age = int(input(\"Enter dog's age in years: \"))\n    print(get_age(year, dog_age))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "# https://www.youtube.com/watch?v=YvNc-jX7lX0\n\ndef dog_years(age):\n    if age < 3:\n        return \"Too young.\"\n    elif age < 6:\n        return \"Just a little old.\"\n    elif age < 15:\n        return \"A little young.\"\n    elif age < 30:\n        return \"Young.\"\n    elif age < 60:\n        return \"Medium aged.\"\n    elif age < 150:\n        return \"Old.\"\n    else:\n        return \"Very old.\"\n\nprint(dog_years(15))",
      -0.8583984375
    ],
    [
      "# Your code here\ndef dog_age(age, year):\n    return age * (year - 2000) / 100\n\nprint(dog_age(7, 2000))\n\ndef dog_age(age, year):\n    return age * (year - 2000) / 100\n\nprint(dog_age(7, 2000))\n\ndef dog_age(age, year):\n    return age * (year - 2000) / 100\n\nprint(dog_age(7, 2000))",
      -0.85888671875
    ],
    [
      "def dog_years(age):\n    if age < 0:\n        raise ValueError('Age cannot be negative')\n\n    return age / 10\n\nif __name__ == '__main__':\n    print dog_years(4)\n    print dog_years(20)\n    print dog_years(10)",
      -0.85888671875
    ],
    [
      "# https://www.hackerrank.com/challenges/python-calculate-age/problem\n\ndef calculate_age(born, died):\n    \"\"\"\n    Calculate a dog's age in dog's years.\n\n    Example\n    Input:\n        born = 10\n        died = 20\n\n    Output:\n        10\n    \"\"\"\n    age = born - died\n    return age\n\nif __name__ == '__main__':\n    # Input\n    born = int(input())\n    died = int(input())\n\n    # Output\n    print(calculate_age(born, died))",
      -0.85888671875
    ],
    [
      "def dog_age(dog_name, dog_age_in_years):\n    \"\"\"\n    dog_age(dog_name, dog_age_in_years)\n    :param dog_name: str\n    :param dog_age_in_years: int\n    :return: int\n    \"\"\"\n    if dog_age_in_years > 0:\n        return dog_age_in_years * 3\n    elif dog_age_in_years < 0:\n        return dog_age_in_years * 2\n    else:\n        return 0\n\nprint(dog_age('dog', 1))",
      -0.85888671875
    ],
    [
      "def calculate_age(birthday, dog_age):\n    \"\"\"\n    birthday: str - YYYY-MM-DD\n    dog_age: int - dog's age in years\n    \"\"\"\n    if birthday is None or dog_age is None:\n        return None\n\n    birthday = birthday.split('-')\n    birthday_year = int(birthday[0])\n    birthday_month = int(birthday[1])\n    birthday_day = int(birthday[2])\n\n    age = 0\n    if birthday_year > dog_age:\n        age = dog_age - birthday_year + 1\n    elif birthday_year == dog_age:\n        age = birthday_month - dog_age\n    elif birthday_year < dog_age:\n        age = dog_age - birthday_year\n\n    return age\n\n\nprint(calculate_age('1999-12-31', 3))",
      -0.85888671875
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-years/problem\n\n# -*- coding: utf-8 -*-\n\nimport sys\nimport math\n\ndef get_years(age):\n    # Returns a list of years, each element of which is a number between 1 and 5.\n    # For example, if the age is 16, then the list will be [16, 17, 18, 19, 20].\n    return range(1, 6)\n\nif __name__ == \"__main__\":\n    try:\n        age = int(sys.stdin.readline())\n    except:\n        age = 0\n    if age == 0:\n        sys.exit(0)\n    years = get_years(age)\n    for year in years:\n        print(year)",
      -0.85888671875
    ],
    [
      "def dog_years(dog_age):\n    \"\"\"\n    :type dog_age: int\n    :rtype: int\n    \"\"\"\n    age_in_years = 0\n    if dog_age >= 0:\n        age_in_years = dog_age / 365\n        if dog_age % 365 == 0:\n            age_in_years += 1\n    return age_in_years\n\nif __name__ == \"__main__\":\n    dog_age = int(input(\"Enter dog's age: \"))\n    print(dog_years(dog_age))",
      -0.85888671875
    ],
    [
      "def calculate_age(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    # If age is negative, return 0\n    if age < 0:\n        return 0\n    # If age is 0, return 1\n    elif age == 0:\n        return 1\n    # If age is positive, return age + 1\n    else:\n        return age + 1",
      -0.85888671875
    ],
    [
      "# Write your code here\ndef dog_years(age):\n    if age < 0:\n        return 0\n    else:\n        return int(age/365)\n\nprint dog_years(30)\nprint dog_years(100)",
      -0.85888671875
    ],
    [
      "def dog_age(dog_age, dog_weight):\n    \"\"\"\n    dog_age(dog_age, dog_weight) -> int\n    \n    :param dog_age: An integer representing dog's age in dog's years.\n    :param dog_weight: An integer representing dog's weight in pounds.\n    :return: An integer representing dog's age in dog's years.\n    \"\"\"\n    return dog_weight / dog_age\n\n\ndef main():\n    print dog_age(4, 4)\n    print dog_age(5, 4)\n    print dog_age(5, 5)\n    print dog_age(1, 2)\n    print dog_age(10, 2)\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "def dog_years(age):\n    return age / 2\n\ndef main():\n    age = int(input('Enter dog's age: '))\n    print('Dog is %s years old' % dog_years(age))\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "#%%\ndef dog_age(dog_age):\n    \"\"\"\n    Write a function to calculate a dog's age in dog's years.\n    \"\"\"\n\n    return dog_age // 365\n#%%\ndef main():\n    \"\"\"\n    Main Program\n    \"\"\"\n\n    dog_age = 30\n    print(dog_age)\n\n    print(dog_age_in_years(dog_age))\n\n#%%\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "import math\n\ndef dog_years(age):\n    return int(math.ceil(age/100))\n\ndef main():\n    print(dog_years(0))\n    print(dog_years(30))\n    print(dog_years(150))\n    print(dog_years(180))\n    print(dog_years(200))\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\ndef dog_and_cat(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    age = int(age)\n    if age < 1:\n        return 0\n    elif age > 100:\n        return 100\n    else:\n        return age * 10\n\n\nif __name__ == '__main__':\n    t = int(input())\n    for a0 in range(t):\n        age = int(input())\n        print(dog_and_cat(age))",
      -0.85888671875
    ],
    [
      "def dog_years(age):\n    return age / 4\n\n#print(dog_years(25))\n#print(dog_years(100))",
      -0.85888671875
    ],
    [
      "def get_age(age_in_years):\n    if age_in_years < 1:\n        raise ValueError(\"Age can't be less than 1\")\n    age_in_years_m = age_in_years // 12\n    age_in_years_m = age_in_years_m * 12\n    age_in_years_m = age_in_years_m + 12 * age_in_years // 12\n    return age_in_years_m\n\ndef get_age_in_years(age_in_years):\n    if age_in_years < 1:\n        raise ValueError(\"Age can't be less than 1\")\n    age_in_years_m = age_in_years // 12\n    age_in_years_m = age_in_years_m * 12\n    age_in_years_m = age_in_years_m + 12 * age_in_years // 12\n    return age_in_years_m\n\nif __name__ == \"__main__\":\n    age_in_years = int(input(\"Enter age in years: \"))\n    print(\"The age is\", get_age(age_in_years))\n    age_in_years_m = int(input(\"Enter age in months: \"))\n    print(\"The age in months is\", get_age_in_years(age_in_years_m))",
      -0.85888671875
    ],
    [
      "#!/usr/bin/env python\n\ndef dog_age(years):\n    if years < 0:\n        raise ValueError('Please enter a positive value')\n    if years == 0:\n        return 0\n    else:\n        return years * 5 + years / 2\n\n\nprint(dog_age(4))\nprint(dog_age(5))\nprint(dog_age(10))\nprint(dog_age(15))\nprint(dog_age(20))\nprint(dog_age(30))\nprint(dog_age(50))\nprint(dog_age(100))\nprint(dog_age(150))\nprint(dog_age(200))",
      -0.85888671875
    ],
    [
      "def calculate_age(birthday, dog_age):\n    \"\"\"\n    birthday: a string of the form 'YYYY-MM-DD'\n    dog_age: a string of the form 'YYYY-MM-DD'\n    return: an integer of the number of years the dog's age in dog's years.\n    \"\"\"\n    year_age = (int(dog_age[0:4]) - int(birthday[0:4]))\n    month_age = (int(dog_age[5:7]) - int(birthday[5:7]))\n    day_age = (int(dog_age[8:10]) - int(birthday[8:10]))\n    return year_age * 12 + month_age + day_age\n\n# Your code here\n\nif __name__ == '__main__':\n    birthday = input('Enter the birthday: ')\n    age = input('Enter the dog\\'s age: ')\n    print(calculate_age(birthday, age))",
      -0.85888671875
    ],
    [
      "import timeit\n\nstart_time = timeit.default_timer()\n\ndef dog_age(dog_age, dog_years):\n    return dog_years * dog_age\n\nprint(\"Python's dog's age function\")\n\nprint(dog_age(2, 1))\n\nprint(\"Python's dog's age function\")\n\nprint(dog_years(3, 2))\n\nprint(\"Python's dog's age function\")\n\nprint(dog_years(4, 3))\n\nend_time = timeit.default_timer()\n\nprint(\"Total run time:\", end_time - start_time)",
      -0.85888671875
    ],
    [
      "def calculate_dog_age(dog_age, dog_years):\n    age = 0\n    while dog_years >= 0:\n        age = age + dog_age\n        dog_years = dog_years - 1\n    return age\n\ndef main():\n    dog_age = int(input(\"Enter dog's age: \"))\n    dog_years = int(input(\"Enter dog's years of age: \"))\n    print(\"The dog's age is %d dog's years of age: %d\" % (dog_age, calculate_dog_age(dog_age, dog_years)))\n\nif __name__ == \"__main__\":\n    main()",
      -0.85888671875
    ],
    [
      "# Write your code here.\n\ndef dog_years(dog_age):\n    return dog_age/365\n\ndef main():\n    dog_age = int(input(\"Enter dog's age: \"))\n    print(dog_years(dog_age))\n\nif __name__ == \"__main__\":\n    main()",
      -0.85888671875
    ],
    [
      "import sys\nimport timeit\n\n# Time limit (s): 0.2\n# Memory limit (MB): 16\n\n\ndef main(filename):\n    with open(filename) as f:\n        for line in f:\n            line = line.strip()\n            if line:\n                age, weight = line.split(' ')\n                print(\"{0}, {1}\".format(age, weight))\n\n\nif __name__ == '__main__':\n    filename = sys.argv[1] if len(sys.argv) > 1 else 'input.txt'\n    main(filename)",
      -0.86083984375
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n# https://www.codewars.com/kata/dog-and-cat/train/python\n# https://www.codewars.com/kata/dog-and-cat/train/python\n\ndef calculate_dog_years(n, days):\n    return days / 365\n\nif __name__ == '__main__':\n    n = int(input())\n    days = int(input())\n    print(calculate_dog_years(n, days))",
      -0.86083984375
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\ndef dog_and_cat(age_in_dog_years):\n    \"\"\"\n    :type age_in_dog_years: int\n    :rtype: int\n    \"\"\"\n    return age_in_dog_years / 10\n\nif __name__ == '__main__':\n    t = int(input())\n    for a0 in range(t):\n        age_in_dog_years = int(input())\n        print(dog_and_cat(age_in_dog_years))",
      -0.86083984375
    ],
    [
      "# https://www.codeeval.com/open_challenges/110/\n#\n# Code Evaluation\n#\n# Date: 11/22/2015\n#\n# I hereby certify that I have produced the following solution myself\n# (my name and the title of my company didn't really matter) and I hereby\n# give permission for others to copy and adapt my solution.\n#\n# Thanks, and have fun!\n\nimport sys\n\nif len(sys.argv)!= 2:\n    sys.exit(\"Usage: {} <input_file_path>\".format(sys.argv[0]))\n\nfilename = sys.argv[1]\n\nwith open(filename) as f:\n    for line in f:\n        if line.startswith('#'):\n            continue\n\n        line = line.strip()\n        name, year, dog_years = line.split('\\t')\n\n        age = year - dog_years\n        print(age)",
      -0.9267578125
    ],
    [
      "# Your function will be called like this:\n# num_of_years, dog = calculate_age(num_of_years, dog)\n\nimport math\n\ndef calculate_age(num_of_years, dog):\n    # write your code here\n    if dog == None or num_of_years == None:\n        return None\n    else:\n        return int(math.floor(num_of_years * 0.9))\n\n# test cases\n\n# num_of_years = 1\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 2\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 3\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 4\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 5\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 6\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 7\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 8\n# dog = \"Dog\"\n# num_of_years, dog = calculate_age(num_of_years, dog)\n# print num_of_years, dog\n\n# num_of_years = 9\n# dog = \"",
      -1.966796875
    ],
    [
      "import math\n\n\ndef dog_age(years):\n    \"\"\"\n    Given a number of years, calculate the dog's age in years.\n\n    For example, if the dog is 10 years old, return 10.\n    If the dog is 1 year old, return 1.\n    If the dog is 44 years old, return 44.\n    \"\"\"\n\n    # if the number of years is zero, return 0\n    if years == 0:\n        return 0\n    # if the number of years is negative, return 0\n    if years < 0:\n        return 0\n    # if the number of years is 1, return 1\n    elif years == 1:\n        return 1\n    # if the number of years is greater than 1, return the number of years\n    else:\n        return years\n\n\ndef main():\n    \"\"\"\n    Main program function\n    \"\"\"\n    # test cases\n    # test case 1\n    test_case1 = [10, 0, 0, 0, 0, 0]\n    print('Test case 1: {}'.format(dog_age(test_case1)))\n\n    # test case 2\n    test_case2 = [20, 10, 0, 0, 0, 0]\n    print('Test case 2: {}'.format(dog_age(test_case2)))\n\n    # test case 3\n    test_case3 = [30, 10, 0, 0, 0, 0]\n    print('Test case 3: {}'.format(dog_age(test_case3)))\n\n\nif __name__ == '__main__':\n    main()",
      -1.966796875
    ],
    [
      "class Dog:\n    def __init__(self, name, age):\n        self.name = name\n        self.age = age\n\n    def __str__(self):\n        return \"{0} is {1} years old\".format(self.name, self.age)\n\n    def get_age(self):\n        return self.age\n\n    def get_name(self):\n        return self.name\n\n    def get_age_in_years(self):\n        return self.age / 365\n\n    def get_age_in_months(self):\n        return self.age / 30\n\n\ndef print_age(age):\n    print(age)\n\ndef print_age_in_years(age):\n    print(age.get_age_in_years())\n\ndef print_age_in_months(age):\n    print(age.get_age_in_months())\n\ndef print_age_in_days(age):\n    print(age.get_age_in_days())\n\ndef print_age_in_months_with_day(age):\n    print(age.get_age_in_months_with_day())\n\ndef print_age_in_months_with_day_with_year(age):\n    print(age.get_age_in_months_with_day_with_year())\n\ndef print_age_in_years_with_day(age):\n    print(age.get_age_in_years_with_day())\n\ndef print_age_in_years_with_day_with_year(age):\n    print(age.get_age_in_years_with_day_with_year())\n\ndef print_age_in_years_with_day_with_year_and_month(age):\n    print(age.get_age_in_years_with_day_with_year_and_month())\n\ndef print_age_in_years_with_day_with_year_and_month_with_day(age):\n    print(age.get_age_in_years_with_day_with_year_and_month_with_day())\n\ndef print_age_in_months_with_day_",
      -2.01953125
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\ndef dog_and_cat(a, b, c, d, e):\n    print(a + b + c + d + e)\n\n# Test cases\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3,4,5) == 6\n# dog_and_cat(1,2,3",
      -2.59765625
    ],
    [
      "def dog_age(age):\n    if age < 3:\n        return \"Under 3\"\n    elif age < 5:\n        return \"Under 5\"\n    elif age < 7:\n        return \"Under 7\"\n    elif age < 10:\n        return \"Under 10\"\n    elif age < 12:\n        return \"Under 12\"\n    elif age < 15:\n        return \"Under 15\"\n    elif age < 18:\n        return \"Under 18\"\n    elif age < 22:\n        return \"Under 22\"\n    elif age < 25:\n        return \"Under 25\"\n    elif age < 30:\n        return \"Under 30\"\n    elif age < 35:\n        return \"Under 35\"\n    elif age < 40:\n        return \"Under 40\"\n    elif age < 45:\n        return \"Under 45\"\n    elif age < 50:\n        return \"Under 50\"\n    elif age < 55:\n        return \"Under 55\"\n    elif age < 60:\n        return \"Under 60\"\n    elif age < 65:\n        return \"Under 65\"\n    elif age < 70:\n        return \"Under 70\"\n    elif age < 75:\n        return \"Under 75\"\n    elif age < 80:\n        return \"Under 80\"\n    elif age < 85:\n        return \"Under 85\"\n    elif age < 90:\n        return \"Under 90\"\n    elif age < 95:\n        return \"Under 95\"\n    elif age < 100:\n        return \"Under 100\"\n    elif age < 105:\n        return \"Under 105\"\n    elif age < 110:\n        return \"Under 110\"\n    elif age < 115:\n        return \"Under 115\"\n    elif age < 120:\n        return \"Under 120\"\n    elif age < 125:\n        return \"Under 125\"\n    elif age < 130:\n        return \"Under 130\"\n    elif age < 135:\n        return \"Under 135\"\n    elif age < 140:\n        return \"Under 140\"\n    elif age < 145:\n        return \"Under 145\"\n    elif age < 150:",
      -2.609375
    ],
    [
      "# @include\ndef dog_age(age, years):\n    return age * years\n\n\ndef test_dog_age():\n    assert dog_age(10, 100) == 10\n    assert dog_age(100, 100) == 100\n    assert dog_age(100, 1) == 100\n    assert dog_age(100, 0) == 100\n    assert dog_age(100, -1) == 99\n    assert dog_age(100, -2) == 98\n    assert dog_age(100, -100) == 0\n    assert dog_age(100, -200) == -100\n    assert dog_age(100, -300) == -200\n    assert dog_age(100, -400) == -300\n    assert dog_age(100, -500) == -400\n    assert dog_age(100, -600) == -500\n    assert dog_age(100, -700) == -600\n    assert dog_age(100, -800) == -700\n    assert dog_age(100, -900) == -800\n    assert dog_age(100, -1000) == -900\n    assert dog_age(100, -2000) == -1000\n    assert dog_age(100, -3000) == -2000\n    assert dog_age(100, -4000) == -3000\n    assert dog_age(100, -5000) == -4000\n    assert dog_age(100, -6000) == -5000\n    assert dog_age(100, -7000) == -6000\n    assert dog_age(100, -8000) == -7000\n    assert dog_age(100, -9000) == -8000\n    assert dog_age(100, -10000) == -9000\n    assert dog_age(100, -20000) == -10000\n    assert dog_age(100, -30000) == -20000\n    assert dog_age(100, -40000) == -30000\n    assert dog_age(100, -50000) == -40000\n    assert dog_age(100, -60000) == -50000\n    assert dog_age(100, -70000) == -60000\n    assert dog_age(100, -80000) ==",
      -2.921875
    ],
    [
      "def calculate_age(dog_age):\n    if dog_age < 0:\n        print \"Age is negative. Can't calculate!\"\n        return 0\n    if dog_age == 0:\n        return 0\n    return dog_age + 0.5\n\nif __name__ == '__main__':\n    dog_age = int(input('Enter the dog\\'s age: '))\n    age = calculate_age(dog_age)\n    print \"The dog's age in dog's years is\", age",
      -3.001953125
    ],
    [
      "# https://www.hackerrank.com/challenges/dogs-and-cats/problem\n\n# The number of years in a dog's age\ndef DogAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a cat's age\ndef CatAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a dog's age\ndef DogAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a cat's age\ndef CatAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a dog's age\ndef DogAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a cat's age\ndef CatAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a dog's age\ndef DogAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a cat's age\ndef CatAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a dog's age\ndef DogAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a cat's age\ndef CatAge(years):\n    if years < 0:\n        return -1\n    if years > 100:\n        return 100\n    return years\n\n# The number of years in a dog's age\ndef DogAge(years):\n    if years < 0:\n        return -",
      -3.240234375
    ],
    [
      "import re\n\n\ndef calculate_age(age_string):\n    \"\"\"\n    :type age_string: str\n    :rtype: int\n    \"\"\"\n    age_regex = re.compile(r'(\\d+)\\s*(years|year)s?$')\n    age = 0\n    for match in re.finditer(age_regex, age_string):\n        age += int(match.group(1))\n    return age\n\n\nif __name__ == '__main__':\n    age_string = '1 years'\n    print(calculate_age(age_string))",
      -3.34765625
    ],
    [
      "# Dog's age in years is defined by the number of years\n# the dog has lived.\n# The dog's age is calculated by dividing the current\n# year by the number of years the dog has lived.\n# If the current year is a leap year, then the\n# dog's age is calculated by dividing the current\n# year by the number of years the dog has lived.\n# If the current year is not a leap year, then the\n# dog's age is calculated by dividing the current\n# year by the number of years the dog has lived.\n# For example, if the dog has lived for 10 years,\n# then the dog's age is 10 years.\n# If the dog has lived for 11 years, then the dog's\n# age is 11 years.\n# If the dog has lived for 12 years, then the dog's\n# age is 12 years.\n\n# For example, if the dog has lived for 10 years,\n# then the dog's age is 10 years.\n# If the dog has lived for 11 years, then the dog's\n# age is 11 years.\n# If the dog has lived for 12 years, then the dog's\n# age is 12 years.\n\ndef dog_age(years):\n    if years % 4 == 0:\n        return years // 4\n    elif years % 4!= 0:\n        return years // 4 + 1\n\nprint(dog_age(10))",
      -3.380859375
    ],
    [
      "# Problem 4: Write a function to calculate a dog's age in dog's years.\n#\n# The function should accept the following parameters:\n# age (int): the age of the dog (in years)\n# weight (float): the weight of the dog (in pounds)\n#\n# Return the dog's age in dog's years.\n\n# TODO:\n# - Add tests\n# - Add a test function to check if age is 0\n# - Add a test function to check if age is -1\n# - Add a test function to check if age is 1\n\n\ndef dog_years(age, weight):\n    if weight <= 0:\n        return 0\n    else:\n        return age * weight / 365.0\n\nprint(dog_years(0, 0))\n# 0\n\nprint(dog_years(1, 1))\n# 0\n\nprint(dog_years(2, 2))\n# 2\n\nprint(dog_years(3, 3))\n# 5\n\nprint(dog_years(4, 4))\n# 10\n\nprint(dog_years(5, 5))\n# 15",
      -3.4453125
    ],
    [
      "def calculate_age(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    if age < 1:\n        raise ValueError('Age should be greater than or equal to 1.')\n    return int(age * 0.9) + int(age * 0.1) + int(age * 0.05) + int(age * 0.01) + int(age * 0.005) + int(age * 0.001)\n\nif __name__ == '__main__':\n    print(calculate_age(18))",
      -3.611328125
    ],
    [
      "def calculate_age(age, years):\n    \"\"\"\n    :type age: int\n    :type years: int\n    :rtype: int\n    \"\"\"\n    if age < 0:\n        return 0\n    if age >= 100:\n        return 1\n    if age >= 80:\n        return 2\n    if age >= 60:\n        return 3\n    if age >= 40:\n        return 4\n    if age >= 20:\n        return 5\n    if age >= 10:\n        return 6\n    if age >= 0:\n        return 7\n    if age >= -10:\n        return 8\n    if age >= -20:\n        return 9\n    if age >= -30:\n        return 10\n    if age >= -40:\n        return 11\n    if age >= -50:\n        return 12\n    if age >= -60:\n        return 13\n    if age >= -70:\n        return 14\n    if age >= -80:\n        return 15\n    if age >= -90:\n        return 16\n    if age >= -100:\n        return 17\n    if age >= -110:\n        return 18\n    if age >= -120:\n        return 19\n    if age >= -130:\n        return 20\n    if age >= -140:\n        return 21\n    if age >= -150:\n        return 22\n    if age >= -160:\n        return 23\n    if age >= -170:\n        return 24\n    if age >= -180:\n        return 25\n    if age >= -190:\n        return 26\n    if age >= -200:\n        return 27\n    if age >= -210:\n        return 28\n    if age >= -220:\n        return 29\n    if age >= -230:\n        return 30\n    if age >= -240:\n        return 31\n    if age >= -250:\n        return 32\n    if age >= -260:\n        return 33\n    if age >= -270:\n        return 34\n    if age >= -280:\n        return 35\n    if age >= -290:\n        return 36\n    if age >= -300:\n        return 37\n    if age >= -310:\n        return 38\n    if age >= -320:\n        return 39\n    if",
      -3.80078125
    ],
    [
      "def dog_age(age):\n    \"\"\"\n    For given dog age, return dog's age in years.\n\n    Example:\n    >>> dog_age(5)\n    5\n    >>> dog_age(20)\n    10\n    >>> dog_age(100)\n    20\n    >>> dog_age(1000)\n    100\n    >>> dog_age(10000)\n    1000\n    >>> dog_age(1000000)\n    10000\n    >>> dog_age(1000000000)\n    1000000000\n    \"\"\"\n    return age + (age * 0.00125) + (age * 0.00000375) + (age * 0.00000075)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -3.8046875
    ],
    [
      "import math\n\ndef calculate_age(born, days):\n    return int(math.floor(born / days))\n\n# test cases\nprint(\"Dog's age in years:\", calculate_age(born=\"1937-12-23\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1999-12-31\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1981-11-24\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-24\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-25\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-26\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-27\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-28\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-29\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-30\", days=\"365\"))\nprint(\"Dog's age in years:\", calculate_age(born=\"1990-12-31\", days=\"365\"))",
      -3.81640625
    ],
    [
      "# Write your code below\ndef dog_age(age, years):\n    age = int(age)\n    years = int(years)\n    return age * 10 + years\n\n# Test cases\nprint dog_age(1, 2)\nprint dog_age(100, 100)\nprint dog_age(2, 100)",
      -3.990234375
    ],
    [
      "def dog_age(age, years):\n    return age * years\n\nif __name__ == \"__main__\":\n    print(dog_age(20, 5))\n    print(dog_age(30, 10))\n    print(dog_age(50, 20))\n    print(dog_age(100, 50))\n    print(dog_age(150, 100))\n    print(dog_age(200, 150))\n    print(dog_age(250, 200))\n    print(dog_age(300, 250))\n    print(dog_age(400, 300))\n    print(dog_age(500, 400))\n    print(dog_age(600, 500))\n    print(dog_age(700, 600))\n    print(dog_age(800, 700))\n    print(dog_age(900, 800))",
      -4.12109375
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\n# Returns the number of years the dog is old.\ndef dog_years(dog_age, cat_age):\n    return int(cat_age - dog_age)\n\n# Returns the number of years the cat is old.\ndef cat_years(cat_age, dog_age):\n    return cat_age - dog_age\n\n# Returns the number of years the dog is old.\ndef dog_years_recursive(dog_age, cat_age):\n    if dog_age < cat_age:\n        return cat_years_recursive(cat_age, dog_age)\n    else:\n        return dog_years_recursive(dog_age, cat_age - 1)\n\n# Returns the number of years the cat is old.\ndef cat_years_recursive(cat_age, dog_age):\n    if cat_age < dog_age:\n        return dog_years_recursive(dog_age, cat_age)\n    else:\n        return cat_years_recursive(cat_age - 1, dog_age)\n\n# Returns the number of years the dog is old.\ndef dog_years_iterative(dog_age, cat_age):\n    # Iterative version of the recursive function.\n    # The number of years the dog is old is the difference between the cat\n    # age and the dog age.\n    return cat_age - dog_age\n\n# Returns the number of years the cat is old.\ndef cat_years_iterative(cat_age, dog_age):\n    # Iterative version of the recursive function.\n    # The number of years the cat is old is the difference between the cat\n    # age and the dog age.\n    return cat_age - dog_age\n\n# Returns the number of years the dog is old.\ndef dog_years_recursive_2(dog_age, cat_age):\n    # Recursive version of the iterative function.\n    # The number of years the dog is old is the difference between the cat\n    # age and the dog age.\n    return cat_age - dog_age\n\n# Returns the number of years the cat is old.",
      -4.515625
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-years\n# python 2/3\n\ndef get_age(year, dog_age):\n    if dog_age < 0:\n        return 0\n    if year == 0:\n        return 0\n    return dog_age + (year - 1)\n\nif __name__ == '__main__':\n    test_cases = [[0,0], [0,1], [1,0], [1,1], [2,2]]\n    for test_case in test_cases:\n        print(get_age(*test_case))",
      -5.0625
    ],
    [
      "import datetime\n\ndef dog_age(born_date):\n    \"\"\"\n    :type born_date: datetime.date\n    :rtype: int\n    \"\"\"\n    now_date = datetime.datetime.now()\n    return int((now_date - born_date).days / 365.0)\n\nif __name__ == '__main__':\n    print dog_age(datetime.date(2017, 4, 1))",
      -5.67578125
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\n# A simple function to calculate dog's age in dog's years\ndef dog_years(age):\n    if age < 1:\n        return 0\n    return age + (age / 2)\n\n# Test Cases\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Sample Outputs\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Test Case # 1\n\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Sample Outputs\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Test Case # 2\n\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Sample Outputs\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Test Case # 3\n\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Sample Outputs\n# dog_years(0)\n# dog_years(1)\n# dog_years(2)\n# dog_years(3)\n# dog_years(4)\n# dog_years(5)\n\n# Test Case # 4",
      -6.0078125
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat/problem\n\n# Dog's age in years\ndef dog_years(dog_name, cat_name):\n    # Dog's age in years\n    dog_age = 0\n    # Cat's age in years\n    cat_age = 0\n    # Calculate Dog's age in years\n    dog_age = dog_age + int(dog_name.split(' ')[1])\n    # Calculate Cat's age in years\n    cat_age = cat_age + int(cat_name.split(' ')[1])\n    # Calculate dog's age in years\n    return dog_age - cat_age\n\n\n# Test Cases\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'))\nprint(dog_years('Bob', 'Bobo'",
      -6.10546875
    ],
    [
      "def calculate_age(birth_date, current_date):\n    if current_date.isoweekday() > 4:\n        age = int(current_date.year - birth_date.year)\n    else:\n        age = int(current_date.year - birth_date.year) - 1\n    return age\n\nif __name__ == '__main__':\n    print calculate_age(datetime.date(1985, 1, 1), datetime.date(1987, 12, 31))",
      -6.1953125
    ],
    [
      "import math\n\n\ndef calculate_age(age):\n    \"\"\"\n    :param age: the dog's age in dog's years\n    :return: the dog's age in years\n    \"\"\"\n    if age < 3:\n        return 3\n    if age < 5:\n        return 5\n    if age < 7:\n        return 7\n    if age < 10:\n        return 10\n    if age < 13:\n        return 13\n    if age < 17:\n        return 17\n    if age < 21:\n        return 21\n    if age < 25:\n        return 25\n    if age < 30:\n        return 30\n    if age < 35:\n        return 35\n    if age < 40:\n        return 40\n    if age < 45:\n        return 45\n    if age < 50:\n        return 50\n    if age < 55:\n        return 55\n    if age < 60:\n        return 60\n    if age < 65:\n        return 65\n    if age < 70:\n        return 70\n    if age < 75:\n        return 75\n    if age < 80:\n        return 80\n    if age < 85:\n        return 85\n    if age < 90:\n        return 90\n    if age < 95:\n        return 95\n    if age < 100:\n        return 100\n    if age < 105:\n        return 105\n    if age < 110:\n        return 110\n    if age < 115:\n        return 115\n    if age < 120:\n        return 120\n    if age < 125:\n        return 125\n    if age < 130:\n        return 130\n    if age < 135:\n        return 135\n    if age < 140:\n        return 140\n    if age < 145:\n        return 145\n    if age < 150:\n        return 150\n    if age < 155:\n        return 155\n    if age < 160:\n        return 160\n    if age < 165:\n        return 165\n    if age < 170:\n        return 170\n    if age < 175:\n        return 175\n    if age < 180:\n        return 180\n    if age < 185:\n        return 185\n    if age < 190:\n        return 190\n    if age < 195:\n        return 195\n    if age < 200:",
      -6.2890625
    ],
    [
      "def dog_years(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    return age / 365\n\n# Your Dog's Years function's code:\n\n# The function \"age\" returns a tuple:\n# (age, years)\n\n# The function \"dog_years\" returns an int:\n# int(age / 365)\n\n# Test your Dog's Years function:\n\nage = 10\nyears = dog_years(age)\nprint(age, years)\n\nage = 5\nyears = dog_years(age)\nprint(age, years)\n\nage = 0\nyears = dog_years(age)\nprint(age, years)\n\nage = 100\nyears = dog_years(age)\nprint(age, years)\n\nage = -1\nyears = dog_years(age)\nprint(age, years)",
      -6.5703125
    ],
    [
      "def dog_years(age, dog_age):\n    \"\"\"\n    :type age: int\n    :type dog_age: int\n    :rtype: int\n    \"\"\"\n    if dog_age < 0 or age < 0:\n        return 0\n    return int(dog_age / age)\n\nprint(dog_years(10, 5))",
      -6.59375
    ],
    [
      "# The input is a tuple of dog's name and its weight.\n# For example: (\"dog\", 1.5)\n\ndef get_age(name, weight):\n    return weight / 2.5\n\nif __name__ == \"__main__\":\n    dog1 = (\"dog\", 1.5)\n    print get_age(dog1, 3.5)\n    print get_age(\"dog\", 3.5)\n    print get_age(\"dog\", 4)\n    print get_age(\"dog\", 5.5)\n    print get_age(\"dog\", 6.5)\n    print get_age(\"dog\", 7.5)\n    print get_age(\"dog\", 8.5)\n    print get_age(\"dog\", 9.5)\n    print get_age(\"dog\", 10.5)",
      -6.61328125
    ],
    [
      "def dog_age(dog_name, dog_age):\n    \"\"\"\n    dog_name: string, dog's name\n    dog_age: int, dog's age in dog's years\n    Return: int, dog's age in years\n    \"\"\"\n    if dog_age == 0:\n        return 0\n    if dog_age < 0:\n        return dog_age\n    return dog_age * 2 + 1\n\nif __name__ == '__main__':\n    name = raw_input('Enter dog's name: ')\n    age = raw_input('Enter dog's age: ')\n    print dog_age(name, int(age))",
      -6.87109375
    ],
    [
      "from __future__ import print_function\n\nimport sys\n\nclass Solution(object):\n    def getAge(self, age, years):\n        \"\"\"\n        :type age: int\n        :type years: int\n        :rtype: int\n        \"\"\"\n        if age < 0:\n            return -1\n        if age > 100:\n            return 100\n        if age < 10:\n            return 0\n        if age > 10 and age < 20:\n            return 1\n        if age > 20 and age < 30:\n            return 2\n        if age > 30 and age < 40:\n            return 3\n        if age > 40 and age < 50:\n            return 4\n        if age > 50 and age < 60:\n            return 5\n        if age > 60 and age < 70:\n            return 6\n        if age > 70 and age < 80:\n            return 7\n        if age > 80 and age < 90:\n            return 8\n        if age > 90 and age < 100:\n            return 9\n        if age > 100:\n            return 100\n        return -1\n\ndef main():\n    sol = Solution()\n    age = sys.argv[1]\n    years = sys.argv[2]\n    print(sol.getAge(age, years))\n\nif __name__ == '__main__':\n    main()",
      -6.98828125
    ],
    [
      "def get_age(age_in_years):\n    \"\"\"\n    Input: an integer\n    Output: an integer\n    \"\"\"\n    return int(age_in_years / 100) + 1\n\n\n# if __name__ == \"__main__\":\n#     print get_age(20)\n\nprint(get_age(20))",
      -7.2578125
    ],
    [
      "def calc_age(age):\n    \"\"\"\n    age: an integer\n    \"\"\"\n    if age < 1:\n        raise ValueError(\"The age is invalid.\")\n    if age < 2:\n        return \"2 years\"\n    if age < 7:\n        return \"7 years\"\n    if age < 35:\n        return \"35 years\"\n    if age < 70:\n        return \"70 years\"\n    return \"Over 70 years\"\n\ndef test():\n    assert calc_age(0) == \"2 years\"\n    assert calc_age(1) == \"7 years\"\n    assert calc_age(2) == \"35 years\"\n    assert calc_age(3) == \"70 years\"\n    assert calc_age(4) == \"Over 70 years\"\n\nif __name__ == '__main__':\n    test()",
      -7.4765625
    ],
    [
      "import math\n\ndef get_age(born_year, born_month, born_day):\n    \"\"\"\n    >>> get_age(1900, 1, 1)\n    0\n    >>> get_age(2021, 1, 1)\n    7\n    >>> get_age(2021, 2, 1)\n    10\n    >>> get_age(2021, 2, 29)\n    10\n    >>> get_age(2021, 3, 1)\n    10\n    >>> get_age(2021, 3, 31)\n    10\n    >>> get_age(2021, 4, 1)\n    10\n    >>> get_age(2021, 4, 30)\n    10\n    >>> get_age(2021, 5, 1)\n    10\n    >>> get_age(2021, 5, 31)\n    10\n    >>> get_age(2021, 6, 1)\n    10\n    >>> get_age(2021, 6, 30)\n    10\n    >>> get_age(2021, 7, 1)\n    10\n    >>> get_age(2021, 7, 31)\n    10\n    >>> get_age(2021, 8, 1)\n    10\n    >>> get_age(2021, 8, 30)\n    10\n    >>> get_age(2021, 9, 1)\n    10\n    >>> get_age(2021, 9, 31)\n    10\n    >>> get_age(2021, 10, 1)\n    10\n    >>> get_age(2021, 10, 30)\n    10\n    >>> get_age(2021, 11, 1)\n    10\n    >>> get_age(2021, 11, 30)\n    10\n    >>> get_age(2021, 12, 1)\n    10\n    >>> get_age(2021, 12, 31)\n    10\n    >>> get_age(2021, 13, 1)\n    10\n    >>> get_age(2021, 13, 31)\n    10\n    >>> get_age(2021, 14, 1)\n    10\n    >>> get_age(2021, 14, 30)\n    10\n    >>> get_age(2021, 15,",
      -7.53125
    ],
    [
      "import sys\n\ndef main(argv):\n    if len(argv)!= 2:\n        print(\"Usage: {} input_file\".format(argv[0]))\n        sys.exit(1)\n\n    with open(argv[1]) as f:\n        lines = f.readlines()\n\n    for line in lines:\n        line = line.strip()\n\n        if line == \"\":\n            continue\n\n        dog_name, dog_age = line.split(\" \")\n        age = int(dog_age)\n        age_in_years = age/365\n\n        print(\"{} is {} years old\".format(dog_name, age_in_years))\n\n\nif __name__ == '__main__':\n    main(sys.argv)",
      -7.67578125
    ],
    [
      "def get_age(dog_name):\n    age = 0\n    if dog_name == 'Fido':\n        age = 18\n    elif dog_name == 'Spot':\n        age = 10\n    elif dog_name == 'Rudy':\n        age = 14\n    elif dog_name == 'Buddy':\n        age = 14\n    elif dog_name == 'Molly':\n        age = 7\n    elif dog_name == 'Fido':\n        age = 7\n    elif dog_name == 'Rudy':\n        age = 6\n    elif dog_name == 'Spot':\n        age = 5\n    elif dog_name == 'Buddy':\n        age = 5\n    elif dog_name == 'Molly':\n        age = 4\n    elif dog_name == 'Fido':\n        age = 4\n    elif dog_name == 'Rudy':\n        age = 3\n    elif dog_name == 'Spot':\n        age = 3\n    elif dog_name == 'Buddy':\n        age = 3\n    elif dog_name == 'Molly':\n        age = 2\n    elif dog_name == 'Fido':\n        age = 2\n    elif dog_name == 'Rudy':\n        age = 2\n    elif dog_name == 'Spot':\n        age = 2\n    elif dog_name == 'Buddy':\n        age = 2\n    elif dog_name == 'Molly':\n        age = 2\n    elif dog_name == 'Fido':\n        age = 2\n    elif dog_name == 'Rudy':\n        age = 2\n    elif dog_name == 'Spot':\n        age = 2\n    elif dog_name == 'Buddy':\n        age = 2\n    elif dog_name == 'Molly':\n        age = 2\n    elif dog_name == 'Fido':\n        age = 2\n    elif dog_name == 'Rudy':\n        age = 2\n    elif dog_name == 'Spot':\n        age = 2\n    elif dog_name == 'Buddy':\n        age = 2\n    elif dog",
      -8.25
    ],
    [
      "def dog_years(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    if age < 3:\n        return 3\n    elif age < 6:\n        return 5\n    elif age < 8:\n        return 7\n    elif age < 10:\n        return 9\n    elif age < 13:\n        return 11\n    elif age < 15:\n        return 13\n    elif age < 17:\n        return 15\n    elif age < 19:\n        return 17\n    elif age < 22:\n        return 19\n    elif age < 25:\n        return 22\n    elif age < 28:\n        return 25\n    elif age < 30:\n        return 28\n    elif age < 35:\n        return 30\n    elif age < 40:\n        return 35\n    elif age < 45:\n        return 40\n    elif age < 50:\n        return 45\n    elif age < 55:\n        return 50\n    elif age < 60:\n        return 55\n    else:\n        return 60\n\ndef main():\n    print(dog_years(30))\n\nif __name__ == '__main__':\n    main()",
      -8.5
    ],
    [
      "# Write your code below.\ndef dog_age(age, year):\n    \"\"\"\n    :type age: int\n    :type year: int\n    :rtype: int\n    \"\"\"\n    return year - age\n\n# Your code should pass the following test cases.\n#\n#    dog_age(3, 2000) == 20\n#    dog_age(0, 2000) == 0\n#    dog_age(10, 2000) == 10\n#    dog_age(10, 1990) == 10\n#    dog_age(10, 1800) == 10\n#    dog_age(10, 1900) == 20\n#    dog_age(10, 2100) == 20\n#    dog_age(10, 2100) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_age(10, 2400) == 20\n#    dog_",
      -8.515625
    ],
    [
      "# https://www.hackerrank.com/challenges/counting-puppies-age\n# https://www.hackerrank.com/challenges/counting-puppies-age/submissions/code/3f3n0q8u6\n\ndef get_age(year):\n    \"\"\"\n    :param year: int\n    :return: int\n    \"\"\"\n\n    # Calculate the number of years in the year\n    n_year = (year + 1999) // 100\n\n    # Calculate the number of months in the year\n    n_month = (year + 1900) // 4\n\n    # Calculate the number of days in the year\n    n_day = year % 4\n\n    # Calculate the number of days in the month\n    n_day_month = (n_month * 29 + n_day)\n\n    # Calculate the number of days in the year\n    n_day_year = (n_year * 365 + n_day_month)\n\n    # Calculate the number of years in the year\n    n_year_month = (n_year * 12 + n_month)\n\n    # Calculate the number of years in the month\n    n_year_month_day = (n_year_month * 30 + n_day_month)\n\n    # Calculate the number of years in the month\n    n_year_month_day_year = (n_year_month_day * 365 + n_day_year)\n\n    # Calculate the number of years in the year\n    n_year_month_year = (n_year_month * 12 + n_year)\n\n    # Calculate the number of years in the year\n    n_year_year = (n_year * 4 + n_year_month)\n\n    # Calculate the number of years in the year\n    n_year_year_year = (n_year_year * 4 + n_year_month_day)\n\n    # Calculate the number of years in the year\n    n_year_year_year_year = (n_year_year_year * 4 + n_year_year_month_year)\n\n    # Calculate the number of years in the year\n    n_year_year_year_year_year = (",
      -8.8125
    ],
    [
      "# https://leetcode.com/problems/calculate-the-age-of-a-dog/discuss/202221/Python-Solution-with-optimization\n#\n# In the following example, we have Dog object.\n#\n# class Dog(object):\n#     def __init__(self, name, age):\n#         self.name = name\n#         self.age = age\n#\n#\n# dog1 = Dog('Bob', 18)\n# dog2 = Dog('Bobby', 22)\n# dog3 = Dog('Clyde', 21)\n# dog4 = Dog('Candy', 20)\n# dog5 = Dog('Dora', 19)\n# dog6 = Dog('Donny', 21)\n# dog7 = Dog('Fuzzy', 22)\n# dog8 = Dog('Ginger', 22)\n# dog9 = Dog('Goblin', 22)\n# dog10 = Dog('Gopher', 22)\n# dog11 = Dog('Homer', 22)\n# dog12 = Dog('Igor', 23)\n# dog13 = Dog('Jake', 21)\n# dog14 = Dog('Kim', 22)\n# dog15 = Dog('Kitty', 22)\n# dog16 = Dog('Marge', 22)\n# dog17 = Dog('Moe', 20)\n# dog18 = Dog('Minnie', 20)\n# dog19 = Dog('Nelson', 22)\n# dog20 = Dog('Oscar', 20)\n# dog21 = Dog('Piggy', 19)\n# dog22 = Dog('Sam', 19)\n# dog23 = Dog('Sid', 20)\n# dog24 = Dog('Teddy', 21)\n# dog25 = Dog('Tucker', 22)\n# dog26 = Dog('Willy', 22)\n# dog27 = Dog('Woofie', 22)\n# dog28 = Dog('Ziggy', 22)\n# dog29 = Dog('Zoey', 22)\n# dog30 = Dog('Zoosie', 22)\n# dog31 = Dog('Zoosie', 22)\n# dog32 = Dog('Zoosie', 22)\n# dog33 = Dog('Zoosie', 22)\n# dog34 = Dog('Zoosie",
      -9.2265625
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat-years/problem\n\ndef get_age(born):\n    if born < 0:\n        return None\n    if born >= 100:\n        return \"old\"\n    return str(born) + \" dog's year\"\n\ndef main():\n    print(get_age(20))\n    print(get_age(100))\n    print(get_age(100))\n    print(get_age(200))\n\nif __name__ == \"__main__\":\n    main()",
      -9.28125
    ],
    [
      "def dog_years(age):\n    \"\"\"\n    :type age: int\n    :rtype: int\n    \"\"\"\n    if age > 100:\n        return age // 100\n    return age // 10\n\ndef main():\n    print(dog_years(19))\n    print(dog_years(20))\n    print(dog_years(21))\n\nif __name__ == '__main__':\n    main()",
      -9.4765625
    ],
    [
      "def dog_age(age, days_old, years_old):\n    return years_old + ((age - days_old) / 365)\n\nif __name__ == \"__main__\":\n    #Test case 1\n    print dog_age(30, 0, 0)\n    #Test case 2\n    print dog_age(0, 30, 0)\n    #Test case 3\n    print dog_age(0, 30, 1)\n    #Test case 4\n    print dog_age(0, 0, 0)\n    #Test case 5\n    print dog_age(1, 0, 0)\n    #Test case 6\n    print dog_age(1, 1, 1)\n    #Test case 7\n    print dog_age(2, 0, 0)\n    #Test case 8\n    print dog_age(2, 2, 2)\n    #Test case 9\n    print dog_age(4, 0, 0)\n    #Test case 10\n    print dog_age(4, 4, 4)\n    #Test case 11\n    print dog_age(5, 0, 0)\n    #Test case 12\n    print dog_age(5, 5, 5)\n    #Test case 13\n    print dog_age(6, 0, 0)\n    #Test case 14\n    print dog_age(6, 6, 6)\n    #Test case 15\n    print dog_age(7, 0, 0)\n    #Test case 16\n    print dog_age(7, 7, 7)\n    #Test case 17\n    print dog_age(8, 0, 0)\n    #Test case 18\n    print dog_age(8, 8, 8)\n    #Test case 19\n    print dog_age(9, 0, 0)\n    #Test case 20\n    print dog_age(9, 9, 9)\n    #Test case 21\n    print dog_age(10, 0, 0)\n    #Test case 22\n    print dog_age(10, 10, 10)\n    #Test case 23\n    print dog_age(11, 0, 0)\n    #Test case 24\n    print dog_age(11, 11, 11)\n    #Test case 25\n    print dog_",
      -9.640625
    ],
    [
      "# https://www.hackerrank.com/challenges/age-in-dogs-years\n\ndef get_age_in_years(name, age):\n    if age <= 18:\n        return \"Under 18\"\n    elif age <= 20:\n        return \"Under 18\"\n    elif age <= 25:\n        return \"Adult\"\n    elif age <= 30:\n        return \"Adult\"\n    elif age <= 35:\n        return \"Adult\"\n    elif age <= 40:\n        return \"Adult\"\n    elif age <= 45:\n        return \"Adult\"\n    elif age <= 50:\n        return \"Adult\"\n    elif age <= 55:\n        return \"Adult\"\n    elif age <= 60:\n        return \"Adult\"\n    elif age <= 65:\n        return \"Adult\"\n    elif age <= 70:\n        return \"Adult\"\n    elif age <= 75:\n        return \"Adult\"\n    elif age <= 80:\n        return \"Adult\"\n    elif age <= 85:\n        return \"Adult\"\n    elif age <= 90:\n        return \"Adult\"\n    elif age <= 95:\n        return \"Adult\"\n    elif age <= 100:\n        return \"Adult\"\n    elif age <= 110:\n        return \"Adult\"\n    elif age <= 120:\n        return \"Adult\"\n    elif age <= 130:\n        return \"Adult\"\n    elif age <= 140:\n        return \"Adult\"\n    elif age <= 150:\n        return \"Adult\"\n    elif age <= 170:\n        return \"Adult\"\n    elif age <= 180:\n        return \"Adult\"\n    elif age <= 190:\n        return \"Adult\"\n    elif age <= 200:\n        return \"Adult\"\n    elif age <= 210:\n        return \"Adult\"\n    elif age <= 220:\n        return \"Adult\"\n    elif age <= 230:\n        return \"Adult\"\n    elif age <= 240:\n        return \"Adult\"\n    elif age <= 250:\n        return \"Adult\"\n    elif age <= 260:\n        return \"Adult\"\n    elif age <= 270:\n        return \"",
      -9.7109375
    ],
    [
      "# your code goes here\ndef dog_age(age_in_years, dogs_born_in_years):\n    return int(age_in_years) + int(dogs_born_in_years)\n\n# test cases\n# dogs_born_in_years = 2\n# age_in_years = 2\n# dogs_born_in_years = 3\n# age_in_years = 3\n\n# dogs_born_in_years = 1\n# age_in_years = 1\n# dogs_born_in_years = 2\n# age_in_years = 2\n\n# dogs_born_in_years = 2\n# age_in_years = 2\n# dogs_born_in_years = 3\n# age_in_years = 3\n\n# dogs_born_in_years = 3\n# age_in_years = 3\n# dogs_born_in_years = 4\n# age_in_years = 4\n\n# dogs_born_in_years = 4\n# age_in_years = 4\n# dogs_born_in_years = 5\n# age_in_years = 5\n\n# dogs_born_in_years = 5\n# age_in_years = 5\n# dogs_born_in_years = 6\n# age_in_years = 6\n\n# dogs_born_in_years = 6\n# age_in_years = 6\n# dogs_born_in_years = 7\n# age_in_years = 7\n\n# dogs_born_in_years = 7\n# age_in_years = 7\n# dogs_born_in_years = 8\n# age_in_years = 8\n\n# dogs_born_in_years = 8\n# age_in_years = 8\n# dogs_born_in_years = 9\n# age_in_years = 9\n\n# dogs_born_in_years = 9\n# age_in_years = 9\n# dogs_born_in_years = 10\n# age_in_years = 10\n\n# dogs_born_in_years = 10\n# age_in_years = 10\n# dogs_born_in_years = 11\n# age_in_years = 11\n\n# dogs_born_in_",
      -9.7421875
    ],
    [
      "# Approach 1: Using the formula\n#   age = (age_in_years - 1) * 13\n#   where age_in_years is the number of years\n#   for example, if age is 1, then age_in_years is 0.\n#\n# Approach 2: Using the formula\n#   age = (age_in_years - 1) * 13 + (age_in_months - 1)\n#   where age_in_months is the number of months\n#   for example, if age is 1, then age_in_months is 0.\n#\n# Approach 3: Using the formula\n#   age = (age_in_years - 1) * 13 + (age_in_months - 1) + age_in_days\n#   where age_in_days is the number of days\n#   for example, if age is 1, then age_in_days is 0.\n#\n# Approach 4: Using the formula\n#   age = (age_in_years - 1) * 13 + (age_in_months - 1) + (age_in_days - 1)\n\ndef calculate_age(age_in_years, age_in_months, age_in_days):\n    \"\"\"\n    :type age_in_years: int\n    :type age_in_months: int\n    :type age_in_days: int\n    :rtype: int\n    \"\"\"\n    age = (age_in_years - 1) * 13\n    age += (age_in_months - 1)\n    age += age_in_days - 1\n    return age\n\n# Approach 1: Using the formula\n#   age = (age_in_years - 1) * 13\n#   where age_in_years is the number of years\n#   for example, if age is 1, then age_in_years is 0.\n#\n# Approach 2: Using the formula\n#   age = (age_in_years - 1) * 13 + (age_in_months - 1)\n#   where age_in_months is the number of months\n#   for example, if age is 1, then age_in_months is 0.\n#\n# Approach 3: Using the formula\n#   age = (age_in",
      -9.7734375
    ],
    [
      "import math\n\ndef dog_age(age, years):\n    \"\"\"\n    Calculate the age of a dog in dog's years.\n\n    :type age: int\n    :type years: int\n    :rtype: int\n    \"\"\"\n    return int(math.ceil(years * 0.1 + age * 1.7))\n\nif __name__ == '__main__':\n    print(dog_age(12, 1))\n    print(dog_age(11, 1))\n    print(dog_age(12, 2))\n    print(dog_age(11, 2))\n    print(dog_age(12, 3))\n    print(dog_age(11, 3))\n    print(dog_age(12, 4))\n    print(dog_age(11, 4))\n    print(dog_age(12, 5))\n    print(dog_age(11, 5))\n    print(dog_age(12, 6))\n    print(dog_age(11, 6))\n    print(dog_age(12, 7))\n    print(dog_age(11, 7))\n    print(dog_age(12, 8))\n    print(dog_age(11, 8))",
      -10.2890625
    ],
    [
      "def calculate_age(age):\n    if age < 3:\n        return \"Too young\"\n    elif age > 100:\n        return \"Too old\"\n    else:\n        return \"{} years\".format(age // 10)\n\n\n# Output\n#\n# dog's age in dog's years: \"4 years\"\n# dog's age in dog's years: \"8 years\"\n# dog's age in dog's years: \"15 years\"\n# dog's age in dog's years: \"50 years\"\n# dog's age in dog's years: \"100 years\"\n# dog's age in dog's years: \"200 years\"\n# dog's age in dog's years: \"300 years\"\n# dog's age in dog's years: \"400 years\"\n# dog's age in dog's years: \"500 years\"\n# dog's age in dog's years: \"600 years\"\n# dog's age in dog's years: \"700 years\"\n# dog's age in dog's years: \"800 years\"\n# dog's age in dog's years: \"900 years\"\n# dog's age in dog's years: \"1000 years\"\n# dog's age in dog's years: \"1100 years\"\n# dog's age in dog's years: \"1200 years\"\n# dog's age in dog's years: \"1300 years\"\n# dog's age in dog's years: \"1400 years\"\n# dog's age in dog's years: \"1500 years\"\n# dog's age in dog's years: \"1600 years\"\n# dog's age in dog's years: \"1700 years\"\n# dog's age in dog's years: \"1800 years\"\n# dog's age in dog's years: \"1900 years\"\n# dog's age in dog's years: \"2000 years\"\n# dog's age in dog's years: \"3000 years\"\n# dog's age in dog's years: \"4000 years\"\n# dog's age in dog's years: \"5000 years\"\n# dog's age in dog's years: \"6000 years\"\n# dog's age in dog's years: \"7000 years\"\n# dog's age in dog's years: \"8000 years\"\n# dog's age in dog's years: \"9000 years\"\n# dog's age in dog's years: \"10000 years",
      -10.4609375
    ],
    [
      "# TODO\n# 1. implement \"return dog.age_in_years()\"\n# 2. implement \"return dog.age_in_years(age)\".\n\n# TODO: add \"age_in_years(age)\" to \"age_in_years()\"\n\n\ndef dog_years(age):\n    \"\"\"\n    Calculate dog's age in dog's years.\n    :param age: age in years\n    :return: dog's age in years\n    \"\"\"\n    return age / 10\n\ndef dog_years_alt(age):\n    \"\"\"\n    Calculate dog's age in dog's years.\n    :param age: age in years\n    :return: dog's age in years\n    \"\"\"\n    return (age * 10) + 1\n\n\ndef test_dog_years():\n    assert dog_years(20) == 5\n    assert dog_years(40) == 7\n    assert dog_years(80) == 7\n\n\ndef test_dog_years_alt():\n    assert dog_years_alt(20) == 5\n    assert dog_years_alt(40) == 7\n    assert dog_years_alt(80) == 7\n\n\nif __name__ == \"__main__\":\n    test_dog_years()\n    test_dog_years_alt()",
      -11.1328125
    ],
    [
      "# https://www.hackerrank.com/challenges/dog-and-cat\n\ndef calculate_age(dog_years, cat_years):\n    if dog_years == cat_years:\n        return \"You have a dog and a cat, and the dogs are the same age!\"\n    else:\n        return \"You have a dog and a cat, but the dog's age is \" + str(dog_years) + \" and the cat's age is \" + str(cat_years) + \".\"\n\n\n# test cases\n\ndog_years = 4\ncat_years = 2\nprint calculate_age(dog_years, cat_years)\n\ndog_years = 4\ncat_years = 3\nprint calculate_age(dog_years, cat_years)",
      -11.4140625
    ],
    [
      "# https://leetcode.com/problems/dog-years/discuss/1076/C++-solution-with-explanation\n# https://leetcode.com/problems/dog-years/discuss/1113/C++-solution\n\nclass Solution(object):\n    def get_age(self, year):\n        \"\"\"\n        :type year: int\n        :rtype: int\n        \"\"\"\n        if year > 0:\n            return year - year // 4 - year // 100 + year // 400\n        else:\n            return -1\n\n\n# Time:  O(1)\n# Space: O(1)\nclass Solution2(object):\n    def get_age(self, year):\n        \"\"\"\n        :type year: int\n        :rtype: int\n        \"\"\"\n        return (year - 1970) // 100 + (year - 1970) // 400\n\n\nif __name__ == \"__main__\":\n    print(Solution().get_age(2017))\n    print(Solution2().get_age(2017))",
      -11.9296875
    ],
    [
      "def get_age(age):\n    \"\"\"\n    Input: A tuple containing the dog's age in years\n    Output: A tuple containing the dog's age in dog's years\n    \"\"\"\n    return age[0] * 12 + age[1]\n\ndef get_age_in_years(age):\n    \"\"\"\n    Input: A tuple containing the dog's age in dog's years\n    Output: A tuple containing the dog's age in years\n    \"\"\"\n    return (age[0] * 12) + age[1]\n\ndef get_age_in_days(age):\n    \"\"\"\n    Input: A tuple containing the dog's age in dog's years\n    Output: A tuple containing the dog's age in days\n    \"\"\"\n    return (age[0] * 12) + age[1] * 365\n\n\nage = (18, 7)\nage_in_years = get_age_in_years(age)\nage_in_days = get_age_in_days(age)\nage_in_years_str = str(age_in_years)\nage_in_days_str = str(age_in_days)\nprint age_in_years_str\nprint age_in_days_str",
      -13.140625
    ],
    [
      "import math\n\ndef get_age(birth_date):\n    \"\"\"\n    Returns dog's age in dog's years.\n\n    Input: A string representing the birth date of the dog.\n\n    Output: A string representing the dog's age in dog's years.\n    \"\"\"\n    try:\n        birth_date = birth_date.split('-')\n        birth_year = int(birth_date[0])\n        birth_month = int(birth_date[1])\n        birth_day = int(birth_date[2])\n        current_year = int(date.today().strftime('%Y'))\n        current_month = int(date.today().strftime('%m'))\n        current_day = int(date.today().strftime('%d'))\n        dog_age = current_year - birth_year\n        if current_month >= birth_month:\n            dog_age += (current_month - birth_month) * 12\n        if current_day >= birth_day:\n            dog_age += current_day - birth_day\n        return str(int(dog_age))\n    except:\n        return \"Invalid Date\"\n\n#Testing\nif __name__ == \"__main__\":\n    print(get_age(\"07-25-2015\"))",
      -18.71875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}