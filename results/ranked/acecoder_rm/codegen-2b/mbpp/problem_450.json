{
  "problem": {
    "task_id": "MBPP/461",
    "prompt": "Write a python function to count the upper case characters in a given string.",
    "canonical_solution": "def upper_ctr(str):\r\n    upper_ctr = 0\r\n    for i in range(len(str)):\r\n          if str[i] >= 'A' and str[i] <= 'Z': upper_ctr += 1\r\n          return upper_ctr",
    "test_list": [
      "assert upper_ctr('PYthon') == 1",
      "assert upper_ctr('BigData') == 1",
      "assert upper_ctr('program') == 0"
    ],
    "challenge_test_list": [],
    "problem_id": 450
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def count_uppercase(string):\n    \"\"\"\n    Write a python function to count the upper case characters in a given string.\n\n    >>> count_uppercase('abc123')\n    3\n    >>> count_uppercase('aBc123')\n    2\n    >>> count_uppercase('abcd')\n    0\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i].isupper():\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      19.5
    ],
    [
      "def upper_case_characters(string):\n    upper_case_count = 0\n    for i in range(len(string)):\n        if string[i].isupper():\n            upper_case_count += 1\n    return upper_case_count\n\nif __name__ == '__main__':\n    test_case = \"Hello World\"\n    print(upper_case_characters(test_case))",
      18.046875
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    Write a python function to count the upper case characters in a given string.\n    \n    Return the count of upper case characters.\n    \n    For example, the string \"Hello World\" has 3 upper case characters (\"H\", \"e\", \"l\").\n    \n    Assume the string is a pure ASCII string without non-ASCII characters.\n    \n    Try to solve it in-place, without using any built-in function like lower().\n    \"\"\"\n    count = 0\n    for i in range(len(string)):\n        if string[i].isupper():\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    print(count_upper_case(\"Hello World\"))",
      12.34375
    ],
    [
      "def count_uppercase(string):\n    \"\"\"\n    count_uppercase(string) -> int\n\n    >>> count_uppercase('Hello')\n    1\n    >>> count_uppercase('Hello World')\n    2\n    >>> count_uppercase('HELLO WORLD')\n    2\n    >>> count_uppercase('HELLO')\n    0\n    >>> count_uppercase('hello')\n    0\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      11.9765625
    ],
    [
      "def upper_case_chars(string):\n    count = 0\n    for i in string:\n        if i.isupper():\n            count += 1\n    return count\n\n\nprint(upper_case_chars('aBcDeFg'))\nprint(upper_case_chars('aBcDeFgAbCdEfFgAbCdEfFg'))\nprint(upper_case_chars('abcdefgh'))",
      11.375
    ],
    [
      "def count_upper_case_characters(string):\n    \"\"\"\n    >>> count_upper_case_characters('this is a test string')\n    5\n    >>> count_upper_case_characters('This is a test string')\n    3\n    >>> count_upper_case_characters('this is a test string')\n    5\n    \"\"\"\n    return sum(1 for char in string if char.isupper())\n\ndef main():\n    \"\"\"\n    >>> count_upper_case_characters('this is a test string')\n    5\n    >>> count_upper_case_characters('This is a test string')\n    3\n    >>> count_upper_case_characters('this is a test string')\n    5\n    \"\"\"\n    print(count_upper_case_characters('this is a test string'))\n    print(count_upper_case_characters('This is a test string'))\n    print(count_upper_case_characters('this is a test string'))\n\nif __name__ == '__main__':\n    main()",
      10.9609375
    ],
    [
      "def upper_case_char_count(text):\n    \"\"\"\n    Given a string, count the number of upper case characters.\n    \"\"\"\n    count = 0\n    for c in text:\n        if c.isupper():\n            count += 1\n    return count\n\n\ndef main():\n    \"\"\"\n    Count the number of upper case characters in the string \"Hello, world!\"\n    \"\"\"\n    print upper_case_char_count(\"Hello, world!\")\n\nif __name__ == '__main__':\n    main()",
      10.59375
    ],
    [
      "def count_upper(string):\n    \"\"\"\n    >>> count_upper('abc')\n    2\n    >>> count_upper('ABC')\n    1\n    >>> count_upper('AbC')\n    1\n    >>> count_upper('AbCd')\n    1\n    >>> count_upper('AbCd')\n    1\n    >>> count_upper('AbCdEf')\n    2\n    >>> count_upper('AbCdEfGh')\n    2\n    >>> count_upper('AbCdEfGhIj')\n    3\n    >>> count_upper('AbCdEfGhIjKl')\n    3\n    >>> count_upper('AbCdEfGhIjKlMn')\n    3\n    \"\"\"\n    count = 0\n    for i in string:\n        if i.isupper():\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      9.9921875
    ],
    [
      "def count_upper_case(s):\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print(count_upper_case('Hello World'))\n    print(count_upper_case('Hello'))\n    print(count_upper_case('World'))\n    print(count_upper_case('wor'))\n    print(count_upper_case('World'))\n    print(count_upper_case('WORLD'))\n    print(count_upper_case('Hello World'))",
      9.921875
    ],
    [
      "def upper_case_characters(string):\n    \"\"\"\n    :type string: str\n    :rtype: int\n    \"\"\"\n    return sum(char.isupper() for char in string)\n\n# Your UpperCaseCharacters function will be called like this:\n# x = upper_case_characters(\"Hello World\")\nx = upper_case_characters(\"Hello World\")",
      9.0390625
    ],
    [
      "def count_upper_case_chars(string):\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    string = \"Hello, World!\"\n    print(count_upper_case_chars(string))",
      7.3359375
    ],
    [
      "def upper_case_characters(string):\n    \"\"\"\n    :type string: str\n    :rtype: int\n    \"\"\"\n    return len([i for i in string if i.isupper()])\n\nif __name__ == '__main__':\n    print(upper_case_characters('hello'))\n    print(upper_case_characters('I am a string.'))",
      7.234375
    ],
    [
      "def count_upper(string):\n    \"\"\"\n    Take a string and return the number of upper case characters in it.\n\n    >>> count_upper(\"Python\")\n    6\n    >>> count_upper(\"PythonScript\")\n    3\n    \"\"\"\n    return sum(i.isupper() for i in string)\n\n\n#print count_upper(\"Python\")\n#print count_upper(\"PythonScript\")\n#print count_upper(\"PythonScript\")\n#print count_upper(\"PythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPythonPython",
      7.1953125
    ],
    [
      "def upper_case_chars(string):\n    \"\"\"\n    >>> upper_case_chars(\"Hello World\")\n    3\n    >>> upper_case_chars(\"Hello World\")\n    >>> upper_case_chars(\"hello world\")\n    3\n    >>> upper_case_chars(\"Hello World!\")\n    4\n    >>> upper_case_chars(\"Hello World!!!\")\n    5\n    >>> upper_case_chars(\"Hello World!!!\")\n    >>> upper_case_chars(\"Hello World!!!\")\n    5\n    >>> upper_case_chars(\"Hello World!!!\")\n    >>> upper_case_chars(\"Hello World!!!\")\n    5\n    \"\"\"\n    return sum(1 for c in string if c.isupper())\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      7.18359375
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    Count the upper case characters in a given string.\n\n    Args:\n        string (str): String to be counted.\n\n    Returns:\n        int: Count of upper case characters.\n    \"\"\"\n    return sum(1 for char in string if char.isupper())\n\nif __name__ == '__main__':\n    string = \"Hello World\"\n    print(count_upper_case(string))",
      6.98046875
    ],
    [
      "import re\n\ndef count_uppercase(string):\n    return len(re.findall(r'[A-Z]', string))\n\n\nif __name__ == '__main__':\n    print(count_uppercase('hello world'))\n    print(count_uppercase('Hello World'))\n    print(count_uppercase('Hello World!'))\n    print(count_uppercase('Hello World!'))",
      6.328125
    ],
    [
      "def count_upper_case_characters(string):\n    \"\"\"\n    Write a python function to count the upper case characters in a given string.\n    \"\"\"\n\n    upper_case_count = 0\n    for letter in string:\n        if letter.isupper():\n            upper_case_count += 1\n    return upper_case_count\n\n\ndef main():\n    string = \"Hello\"\n    print(count_upper_case_characters(string))\n\nif __name__ == \"__main__\":\n    main()",
      6.07421875
    ],
    [
      "def count_upper_case(s):\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count\n\n# Test Cases\nprint \"Test Case 1:\", count_upper_case('A')\nprint \"Test Case 2:\", count_upper_case('aaaa')\nprint \"Test Case 3:\", count_upper_case('abab')\nprint \"Test Case 4:\", count_upper_case('AB')\nprint \"Test Case 5:\", count_upper_case('ABAB')",
      5.55859375
    ],
    [
      "def upper_case(string):\n    \"\"\"\n    >>> upper_case(\"Hello\")\n    1\n    >>> upper_case(\"hello\")\n    1\n    >>> upper_case(\"HELLO\")\n    1\n    >>> upper_case(\"hellO\")\n    0\n    >>> upper_case(\"HELLO\")\n    1\n    >>> upper_case(\"hELLO\")\n    0\n    >>> upper_case(\"hELLo\")\n    1\n    >>> upper_case(\"hello123\")\n    3\n    >>> upper_case(\"Hello123\")\n    3\n    \"\"\"\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      5.3671875
    ],
    [
      "def count_uppercase(string):\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(count_uppercase('Hello'))\n    print(count_uppercase('Hello World'))\n    print(count_uppercase('Hello World!'))\n    print(count_uppercase('Hello World, how are you?'))\n    print(count_uppercase('Hello World, how are you? Are you ok?'))",
      5.12890625
    ],
    [
      "def upper_case_count(text):\n    count = 0\n    for i in range(0, len(text)):\n        if text[i].isupper():\n            count += 1\n    return count\n\nprint upper_case_count(\"abcd\")",
      4.95703125
    ],
    [
      "import string\n\ndef upper_case_count(s):\n    \"\"\"\n    Return the number of upper case characters in the string.\n    \"\"\"\n\n    return len(filter(lambda c: c.isupper(), s))\n\n\nprint upper_case_count(\"Hello World\")",
      4.95703125
    ],
    [
      "def count_uppercase(string):\n    count = 0\n    for char in string:\n        if char.isupper():\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    string = 'The quick brown fox jumped over the lazy dog'\n    print(count_uppercase(string))",
      4.58984375
    ],
    [
      "def count_upper_case_characters(string):\n    count = 0\n    for char in string:\n        if char.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print(count_upper_case_characters('aAaaa'))\n    print(count_upper_case_characters('abAaaa'))\n    print(count_upper_case_characters('aAaaaA'))\n    print(count_upper_case_characters('abAaaaA'))\n    print(count_upper_case_characters('aAaaaB'))\n    print(count_upper_case_characters('abAaaaB'))\n    print(count_upper_case_characters('aAaaaC'))\n    print(count_upper_case_characters('abAaaaC'))\n    print(count_upper_case_characters('aAaaaD'))\n    print(count_upper_case_characters('abAaaaD'))\n    print(count_upper_case_characters('aAaaaE'))\n    print(count_upper_case_characters('abAaaaE'))\n    print(count_upper_case_characters('aAaaaF'))\n    print(count_upper_case_characters('abAaaaF'))\n    print(count_upper_case_characters('aAaaaG'))\n    print(count_upper_case_characters('abAaaaG'))\n    print(count_upper_case_characters('aAaaaH'))\n    print(count_upper_case_characters('abAaaaH'))\n    print(count_upper_case_characters('aAaaaI'))\n    print(count_upper_case_characters('abAaaaI'))\n    print(count_upper_case_characters('aAaaaJ'))\n    print(count_upper_case_characters('abAaaaJ'))\n    print(count_upper_case_characters('aAaaaK'))\n    print(count_upper_case_characters('abAaaaK'))\n    print(",
      4.37890625
    ],
    [
      "def count_upper_characters(string):\n    upper_characters = 0\n    for character in string:\n        if character.isupper():\n            upper_characters += 1\n    return upper_characters\n\nif __name__ == \"__main__\":\n    string = \"Python is a great language\"\n    print(count_upper_characters(string))",
      4.3203125
    ],
    [
      "def count_uppercase(s):\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count\n\ndef main():\n    s = 'Hello World'\n    print(count_uppercase(s))\n\nif __name__ == '__main__':\n    main()",
      4.01953125
    ],
    [
      "def upper_case_count(string):\n    upper_case = 0\n    for char in string:\n        if char.isupper():\n            upper_case += 1\n    return upper_case\n\nif __name__ == '__main__':\n    print upper_case_count('abcdef')\n    print upper_case_count('Hello World!')",
      3.025390625
    ],
    [
      "def count_upper_case_chars(string):\n    \"\"\"\n    Count the upper case characters in a given string.\n    :param string:\n    :return:\n    \"\"\"\n    return len(string.upper())\n\n\nif __name__ == '__main__':\n    string = 'Hello World!'\n    print(count_upper_case_chars(string))",
      2.771484375
    ],
    [
      "def count_upper(string):\n    return string.upper().count('A') + string.upper().count('E') + string.upper().count('I') + string.upper().count('O') + string.upper().count('U')\n\nprint count_upper(\"Hello World\")",
      2.740234375
    ],
    [
      "import re\n\ndef count_uppercase(s):\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    s = \"This is a test string. I am using the upper case characters to test.\"\n    print(count_uppercase(s))",
      2.63671875
    ],
    [
      "def count_upper_case_chars(text):\n    upper_case_chars = 0\n    for char in text:\n        if char.isupper():\n            upper_case_chars += 1\n    return upper_case_chars\n\nif __name__ == \"__main__\":\n    text = \"The quick brown fox jumps over the lazy dog.\"\n    print count_upper_case_chars(text)",
      2.634765625
    ],
    [
      "def count_uppercase_characters(string):\n    upper_characters = 0\n    for char in string:\n        if char.isupper():\n            upper_characters += 1\n    return upper_characters\n\n\n\nif __name__ == '__main__':\n    string = \"Hello World\"\n    print count_uppercase_characters(string)",
      2.630859375
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    @param string: string\n    @return: count of the upper case characters\n    \"\"\"\n    return len([char for char in string if char.isupper()])\n\nif __name__ == \"__main__\":\n    s = \"Hello World\"\n    print count_upper_case(s)",
      2.529296875
    ],
    [
      "import re\n\ndef count_upper_case(string):\n    upper_case_pattern = re.compile(r'[A-Z]')\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    string = 'ABCDEFG'\n    print(count_upper_case(string))",
      2.2734375
    ],
    [
      "#!/usr/bin/python\n\n#!/usr/bin/python\n\n# Create your code here.\n\ndef upper_case_count(string):\n    count = 0\n    for i in range(0,len(string)):\n        if string[i] >= 65 and string[i] <= 90:\n            count = count + 1\n    return count\n\nif __name__ == '__main__':\n    string = \"Hello World\"\n    print upper_case_count(string)",
      2.1953125
    ],
    [
      "def count_upper_case_chars(s):\n    \"\"\"\n    Write a python function to count the upper case characters in a given string.\n    :param s: string\n    :return: int\n    \"\"\"\n    return sum(s.upper() == c for c in s)\n\nif __name__ == \"__main__\":\n    s = \"abcd\"\n    print(count_upper_case_chars(s))",
      1.998046875
    ],
    [
      "def count_uppercase(text):\n    \"\"\"\n    Count the upper case characters in a given string.\n    :param text: The string to count uppercase characters.\n    :return: The number of upper case characters.\n    \"\"\"\n    return len(filter(lambda c: c.isupper(), text))\n\nif __name__ == \"__main__\":\n    assert count_uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == 26\n    assert count_uppercase(\"\") == 0",
      1.7470703125
    ],
    [
      "def upper_case_characters(string):\n    \"\"\"\n    Write a function upper_case_characters that counts the number of upper case characters in a given string.\n    \"\"\"\n\n    count = 0\n    for letter in string:\n        if letter.isupper():\n            count += 1\n\n    return count\n\n\ndef main():\n    \"\"\"\n    Write a function print_upper_case_characters that prints the number of upper case characters in a given string.\n    \"\"\"\n\n    string = \"Hello World\"\n    print(upper_case_characters(string))\n\n\nif __name__ == \"__main__\":\n    main()",
      1.5751953125
    ],
    [
      "def count_uppercase(text):\n    return len(text.upper())\n\n# Your function here\n\nprint(count_uppercase(\"Hello, World\"))\nprint(count_uppercase(\"Hello, World\"))\nprint(count_uppercase(\"Hello, World\"))\nprint(count_uppercase(\"Hello, World\"))",
      1.4423828125
    ],
    [
      "def upper_case_characters(string):\n    upper_case_chars = 0\n    for char in string:\n        if char.isupper():\n            upper_case_chars += 1\n    return upper_case_chars\n\nif __name__ == '__main__':\n    string = 'helloWorld'\n    print(upper_case_characters(string))",
      1.43359375
    ],
    [
      "def count_upper_case(text):\n    count = 0\n    for c in text:\n        if c.isupper():\n            count += 1\n    return count\n\ndef main():\n    text = \"Hello World!\"\n    print(count_upper_case(text))\n\nif __name__ == '__main__':\n    main()",
      1.3837890625
    ],
    [
      "def upper_case_characters(string):\n    \"\"\"\n    Write a function that counts the number of upper case characters in the given string.\n\n    >>> upper_case_characters(\"Hello world\")\n    2\n    >>> upper_case_characters(\"abcd\")\n    4\n    >>> upper_case_characters(\"\")\n    0\n    \"\"\"\n    return len(string.upper())",
      1.3095703125
    ],
    [
      "def count_uppercase(string):\n    return len(string.upper())\n\n\nif __name__ == \"__main__\":\n    print count_uppercase(\"Hello World\")",
      1.28125
    ],
    [
      "def count_upper(s):\n    return len(s.upper())\n\n\ndef count_lower(s):\n    return len(s.lower())\n\nif __name__ == '__main__':\n    print count_upper('Hello World!')\n    print count_lower('Hello World!')",
      1.162109375
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    Count the upper case characters in a given string.\n    \"\"\"\n    return len(filter(lambda x: x.isupper(), string))\n\n# Your Code\nstring = \"Hello World\"\nprint(count_upper_case(string))",
      1.1611328125
    ],
    [
      "def count_upper_case_chars(string):\n    \"\"\"\n    >>> count_upper_case_chars('Hello')\n    1\n    >>> count_upper_case_chars('hello')\n    1\n    >>> count_upper_case_chars('Hello World')\n    3\n    \"\"\"\n    return len([char for char in string if char.isupper()])\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      1.1591796875
    ],
    [
      "def upper_count(string):\n    return len(string.upper())\n\ndef main():\n    string = \"Hello world\"\n    print(upper_count(string))\n\nif __name__ == '__main__':\n    main()",
      1.1328125
    ],
    [
      "def count_uppercase_chars(string):\n    # write your code here\n    return len(string.upper())\n\n\nprint count_uppercase_chars(\"test\")\n\n# https://www.hackerrank.com/challenges/count-uppercase-chars/problem",
      0.9951171875
    ],
    [
      "def count_upper(string):\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nprint(count_upper(\"ABCD\"))",
      0.9951171875
    ],
    [
      "# Complete the countUpper function below.\ndef countUpper(s):\n    return s.count('A') + s.count('E') + s.count('I') + s.count('O') + s.count('U')\n\nif __name__ == '__main__':\n    s = input()\n    print(countUpper(s))",
      0.978515625
    ],
    [
      "def count_upper(string):\n    \"\"\"\n    Counts the upper case characters in a given string.\n\n    Input: string - string to be counted\n    Output: returns the number of upper case characters in the string.\n    \"\"\"\n\n    count = 0\n    for letter in string:\n        if letter.isupper():\n            count += 1\n\n    return count\n\nprint count_upper(\"Hello World\")",
      0.8818359375
    ],
    [
      "import sys\n\ndef count_uppercase(string):\n    return len([c for c in string if c.isupper()])\n\nif __name__ == \"__main__\":\n    string = sys.argv[1]\n    print(count_uppercase(string))",
      0.81005859375
    ],
    [
      "def upper_case_count(s):\n    return len(s.upper())\n\nif __name__ == '__main__':\n    s = 'Hello World'\n    print(upper_case_count(s))",
      0.80908203125
    ],
    [
      "def upper_char_count(string):\n    count = 0\n    for char in string:\n        if char.isupper():\n            count += 1\n    return count\n\n# Write a test function to test your upper_char_count function.\ndef test():\n    assert upper_char_count(\"Hello\") == 1\n    assert upper_char_count(\"hELLO\") == 2\n    assert upper_char_count(\"Hello World\") == 5\n\nif __name__ == '__main__':\n    test()",
      0.6181640625
    ],
    [
      "import re\n\ndef uppercase(string):\n    \"\"\"\n    Count the upper case characters in a given string.\n    \"\"\"\n    count = 0\n    for char in string:\n        if char.isupper():\n            count += 1\n    return count\n\nprint uppercase(\"Hello World!\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nprint uppercase(\"abcdefghijklmnopqrstuvwxyz\")\nprint uppercase(\"abcdefghijklmnopqrstuvwxyz\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nprint uppercase(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")",
      0.58837890625
    ],
    [
      "import re\n\ndef count_upper_case(string):\n    return sum(1 for char in string if char.isupper())\n\ndef main():\n    string = \"Python is a widely used general-purpose, object-oriented, high-level programming language\"\n    print(count_upper_case(string))\n\nif __name__ == \"__main__\":\n    main()",
      0.3857421875
    ],
    [
      "def upper_case_characters(text):\n    count = 0\n    for i in text:\n        if i.isupper():\n            count += 1\n    return count\n\ndef main():\n    text = \"hello world\"\n    print upper_case_characters(text)\n\nif __name__ == \"__main__\":\n    main()",
      0.283203125
    ],
    [
      "def upper_case_characters(string):\n    upper_case_characters = 0\n    for char in string:\n        if char.isupper():\n            upper_case_characters += 1\n    return upper_case_characters\n\ndef main():\n    string = \"The quick brown fox jumps over the lazy dog\"\n    print upper_case_characters(string)\n    return 0\n\nif __name__ == \"__main__\":\n    main()",
      0.21923828125
    ],
    [
      "def count_uppercase(s):\n    \"\"\"\n    :param s: string to be counted\n    :return: the number of upper case letters in the string\n    \"\"\"\n    return len([c for c in s if c.isupper()])\n\n\nif __name__ == '__main__':\n    print(count_uppercase('ABCDEFGHIJKLMNOPQRSTUVWXYZ'))\n    print(count_uppercase('abcdefghijklmnopqrstuvwxyz'))",
      0.18896484375
    ],
    [
      "# +++your code here+++\n# Write output as:\n# For each character in the string, print the number of times it is capitalized.\n\ndef count_caps(string):\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print count_caps(\"Hello, World!\")",
      -0.07061767578125
    ],
    [
      "def count_uppercase_chars(string):\n    \"\"\"\n    :param string:\n    :return:\n    \"\"\"\n    return len(string.upper())",
      -0.357421875
    ],
    [
      "def count_upper_case(string):\n    return len(string.upper())\n\ndef main():\n    string = \"Hello World\"\n    print(count_upper_case(string))\n\nif __name__ == '__main__':\n    main()",
      -0.65087890625
    ],
    [
      "def upper_case_count(string):\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nprint(upper_case_count(\"Python\"))",
      -0.74755859375
    ],
    [
      "def count_upper_case(s):\n    return len([i for i in s if i.isupper()])\n\nprint(count_upper_case('Hello world'))",
      -0.83056640625
    ],
    [
      "def upper_case_count(str):\n    return len(str.upper())\n\nprint upper_case_count('hello world')",
      -0.85595703125
    ],
    [
      "def upper_case_characters(string):\n    return string.upper()",
      -0.85595703125
    ],
    [
      "def count_upper_case(string):\n    count = 0\n    for c in string:\n        if c.isupper():\n            count += 1\n    return count\n\nprint(count_upper_case('Hello World'))\nprint(count_upper_case('Hello'))\nprint(count_upper_case('HELLO'))\nprint(count_upper_case('hello'))\nprint(count_upper_case('Hello World!'))",
      -0.85693359375
    ],
    [
      "def count_upper_chars(string):\n    upper_chars = 0\n    for c in string:\n        if c.isupper():\n            upper_chars += 1\n    return upper_chars\n\n\nprint(count_upper_chars('aBcDeF'))\n#>>> 3\n\nprint(count_upper_chars('aBcDeFg'))\n#>>> 5\n\nprint(count_upper_chars('aBcDeFgH'))\n#>>> 6",
      -0.85693359375
    ],
    [
      "def count_upper(string):\n    return len(string.upper())\n\ndef main():\n    string = \"Hello world\"\n    print(count_upper(string))\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def count_upper_case(string):\n    return len(string.upper())\n\nprint(count_upper_case('abcdef'))\n\n# print(count_upper_case('abcdef'))",
      -0.85693359375
    ],
    [
      "def count_upper(str):\n    return str.upper().count('A')\n\nprint count_upper(\"abcABC\")",
      -0.85693359375
    ],
    [
      "def count_upper_case_letters(text):\n    count = 0\n    for letter in text:\n        if letter.isupper():\n            count += 1\n    return count\n\ntext = \"Python is a great language.\"\nprint(count_upper_case_letters(text))",
      -0.85693359375
    ],
    [
      "def count_upper_case(string):\n    return len(string.upper())\n\ndef main():\n    print(count_upper_case(\"Hello World\"))\n\nif __name__ == '__main__':\n    main()",
      -0.857421875
    ],
    [
      "import re\n\n\ndef count_upper_case(string):\n    count = 0\n    for char in string:\n        if char.isupper():\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    string = 'The quick brown fox jumped over the lazy dog'\n    print(count_upper_case(string))",
      -0.85791015625
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    :param string: a string\n    :return: a tuple of (lowercase characters, uppercase characters)\n    \"\"\"\n\n    return (len(string.lower()), len(string.upper()))\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n\n    string = \"Hello World!\"\n\n    print(\"Upper case characters:\", count_upper_case(string))\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def upper_case_count(s):\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    s = \"aBcDeFgH\"\n    print(upper_case_count(s))",
      -0.8583984375
    ],
    [
      "def count_upper_characters(string):\n    upper_characters = 0\n    for character in string:\n        if character.isupper():\n            upper_characters += 1\n    return upper_characters\n\ndef test_count_upper_characters():\n    assert(count_upper_characters(\"Hello\") == 5)\n    assert(count_upper_characters(\"Hello World\") == 10)\n    assert(count_upper_characters(\"Hello World, How are you?\") == 11)\n    assert(count_upper_characters(\"\") == 0)\n    assert(count_upper_characters(None) == 0)\n    assert(count_upper_characters(\"HELLO WORLD, HOW ARE YOU?\") == 11)\n\nif __name__ == \"__main__\":\n    test_count_upper_characters()",
      -0.8583984375
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    count the upper case characters in a given string.\n    \"\"\"\n    return len([c for c in string if c.isupper()])\n\nprint(count_upper_case(\"Hello world!\"))\nprint(count_upper_case(\"Hello World!\"))",
      -0.85888671875
    ],
    [
      "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n#\n# This is a template file to write a Python function\n#\n\n#\n# This is the function we want to write\n#\ndef upper_case_characters(string):\n    #\n    # Your code goes here\n    #\n\n    #\n    # The return value of the function is a string.\n    #\n    return string.upper()\n\n#\n# The main function is the entry point for your code.\n#\nif __name__ == '__main__':\n    #\n    # Run your code\n    #\n    print upper_case_characters(\"Hello\")\n    print upper_case_characters(\"World\")",
      -0.85888671875
    ],
    [
      "def count_upper_case(string):\n    \"\"\"\n    >>> count_upper_case('test')\n    1\n    >>> count_upper_case('Test')\n    2\n    >>> count_upper_case('tESt')\n    1\n    >>> count_upper_case('TEST')\n    2\n    \"\"\"\n    return len(string.upper())\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -0.85888671875
    ],
    [
      "def count_uppercase(string):\n    return len(string.upper())\n\nprint(count_uppercase(\"Hello World!\"))",
      -0.85888671875
    ],
    [
      "def count_upper_case_chars(string):\n    count = 0\n    for char in string:\n        if char.isupper():\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    assert(count_upper_case_chars(\"Hello World\") == 5)\n    assert(count_upper_case_chars(\"HELLO WORLD\") == 6)\n    assert(count_upper_case_chars(\"Hello World\") == 5)\n    assert(count_upper_case_chars(\"Hello World\") == 5)",
      -0.85888671875
    ],
    [
      "def upper_case_count(string):\n    upper_case_count = 0\n    for letter in string:\n        if letter.isupper():\n            upper_case_count += 1\n    return upper_case_count\n\n# Your code here",
      -0.85888671875
    ],
    [
      "def count_upper_case(s):\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    assert count_upper_case(\"Hello World!\") == 7\n    assert count_upper_case(\"Hello World! Hello World! Hello World!\") == 23",
      -0.998046875
    ],
    [
      "def upper_case_characters(string):\n    count = 0\n    for character in string:\n        if character.isupper():\n            count += 1\n    return count\n\nprint(upper_case_characters(\"Hello World\"))",
      -1.33203125
    ],
    [
      "def upper_case_chars(string):\n    \"\"\"\n    Write a function named upper_case_chars that takes as input a string and\n    returns the number of upper case characters in that string.\n    \"\"\"\n    return len(string.upper())\n\ndef main():\n    \"\"\"\n    Execute the main function to test the upper_case_chars function.\n    \"\"\"\n    print \"testing upper_case_chars\"\n    print upper_case_chars('abcABCabc')\n    print upper_case_chars('abc123abc')\n    print upper_case_chars('abc')\n    print upper_case_chars('abcABCabcABCabc')\n\nif __name__ == '__main__':\n    main()",
      -2.263671875
    ],
    [
      "def upper_count(str):\n    return len([x for x in str.upper() if x.isupper()])\n\nif __name__ == '__main__':\n    s = 'abcdefg'\n    print upper_count(s)\n    print upper_count('abc')\n    print upper_count('ABC')",
      -2.322265625
    ],
    [
      "def upper_case_count(string):\n    \"\"\"\n    Write a function that counts the upper case characters in a string.\n    \"\"\"\n    return len(string.upper())\n\n# Test Cases\n\nprint upper_case_count(\"hello\")\nprint upper_case_count(\"Hello\")\nprint upper_case_count(\"World\")\nprint upper_case_count(\"Hello World\")\nprint upper_case_count(\"Hello World!\")",
      -3.36328125
    ],
    [
      "def upper_case_chars(string):\n    return len(string.upper())\n\nif __name__ == \"__main__\":\n    print upper_case_chars(\"Hello World!\")\n    print upper_case_chars(\"Hello\")\n    print upper_case_chars(\"Hello World\")\n    print upper_case_chars(\"Hello World!\")\n    print upper_case_chars(\"Hello World!\")",
      -3.49609375
    ],
    [
      "def count_upper(str):\n    return str.upper().__len__()\n\nif __name__ == '__main__':\n    print(count_upper('Hello'))\n    print(count_upper('Hello World'))\n    print(count_upper('HELLO WORLD'))\n    print(count_upper('aA'))\n    print(count_upper('ab'))\n    print(count_upper('ABC'))\n    print(count_upper('ABCD'))\n    print(count_upper('aBc'))\n    print(count_upper('Aa'))\n    print(count_upper('A'))",
      -4.4140625
    ],
    [
      "def count_upper_case(text):\n    \"\"\"\n    Count the upper case characters in a given string.\n    \"\"\"\n    return len(text.upper())\n\n#-------------------------------------------------------------------------------\n\nif __name__ == '__main__':\n    print(count_upper_case('Hello World'))\n    print(count_upper_case('Hello World!!'))\n    print(count_upper_case('Hello World!!Hello World!!!'))\n    print(count_upper_case('Hello World!!Hello World!!!Hello World!!'))\n    print(count_upper_case('Hello World!!Hello World!!!Hello World!!Hello World!!!Hello World!!!Hello World!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World!!!Hello World",
      -4.78515625
    ],
    [
      "def count_upper(string):\n    return len(string.upper())\n\n#print count_upper('Hello')\n#print count_upper('HELLO')\n#print count_upper('Hello')\n#print count_upper('HELLO')\n#print count_upper('Hello')\n#print count_upper('Hello')\n#print count_upper('Hello')\n#print count_upper('Hello')",
      -5.515625
    ],
    [
      "# The following code will count the number of upper case characters in a given string.\n# The string will be a space-delimited list of words.\n# The count will be returned as an integer.\n\ndef count_upper_case_characters(s):\n    # Write your code here\n    return 0\n\nif __name__ == '__main__':\n    # Test 1\n    assert count_upper_case_characters('Hello World') == 5\n\n    # Test 2\n    assert count_upper_case_characters('Hello') == 2\n\n    # Test 3\n    assert count_upper_case_characters('Hello World') == 5",
      -5.86328125
    ],
    [
      "def upper_case_characters(string):\n    upper_case_count = 0\n    for letter in string:\n        if letter.isupper():\n            upper_case_count += 1\n    return upper_case_count\n\nprint upper_case_characters(\"A man, a plan, a canal: Panama\")\n\n\"\"\"\nWrite a python function to count the lower case characters in a given string.\n\"\"\"\n\ndef lower_case_characters(string):\n    lower_case_count = 0\n    for letter in string:\n        if letter.islower():\n            lower_case_count += 1\n    return lower_case_count\n\nprint lower_case_characters(\"A man, a plan, a canal: Panama\")\n\n\"\"\"\nWrite a python function to count the number of spaces in a given string.\n\"\"\"\n\ndef spaces(string):\n    spaces_count = 0\n    for letter in string:\n        if letter == \" \":\n            spaces_count += 1\n    return spaces_count\n\nprint spaces(\"A man, a plan, a canal: Panama\")\n\n\"\"\"\nWrite a python function to count the number of symbols in a given string.\n\"\"\"\n\ndef symbols(string):\n    symbol_count = 0\n    for letter in string:\n        if letter in string:\n            symbol_count += 1\n    return symbol_count\n\nprint symbols(\"A man, a plan, a canal: Panama\")\n\n\"\"\"\nWrite a python function to count the number of vowels in a given string.\n\"\"\"\n\ndef vowels(string):\n    vowels_count = 0\n    for letter in string:\n        if letter.isupper() or letter.islower():\n            vowels_count += 1\n    return vowels_count\n\nprint vowels(\"A man, a plan, a canal: Panama\")\n\n\"\"\"\nWrite a python function to count the number of digits in a given string.\n\"\"\"\n\ndef digits(string):\n    digit_count = 0\n    for letter in string:\n        if letter.isdigit():\n            digit_count += 1\n    return digit_count\n\nprint digits(\"A man, a plan, a canal: Panama\")\n\n\"\"\"\nWrite a python function to count",
      -6.22265625
    ],
    [
      "def upper_case_characters(s):\n    \"\"\"\n    >>> upper_case_characters(\"abc\")\n    3\n    >>> upper_case_characters(\"ABC\")\n    3\n    >>> upper_case_characters(\"A\")\n    1\n    \"\"\"\n    return len(s.upper())\n\ndef main():\n    \"\"\"\n    Run tests and print output\n    \"\"\"\n    tests = [(\"abc\", 3),\n             (\"ABC\", 3),\n             (\"A\", 1)]\n\n    for test in tests:\n        print \"Test:\", test[0]\n        assert upper_case_characters(test[0]) == test[1]\n\nif __name__ == \"__main__\":\n    main()",
      -6.87109375
    ],
    [
      "def count_upper(string):\n    \"\"\"\n    Write a python function to count the upper case characters in a given string.\n    >>> count_upper(\"test\")\n    2\n    >>> count_upper(\"TEST\")\n    2\n    >>> count_upper(\"tEsT\")\n    2\n    >>> count_upper(\"AaBcDeEfG\")\n    6\n    \"\"\"\n    return len(string.upper())\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    print count_upper(\"test\")\n\nif __name__ == '__main__':\n    main()",
      -10.3359375
    ],
    [
      "def upper_case_count(string):\n    \"\"\"\n    >>> upper_case_count('hello world')\n    6\n    >>> upper_case_count('Hello world')\n    6\n    >>> upper_case_count('Hello')\n    1\n    >>> upper_case_count('Hello')\n    1\n    >>> upper_case_count('hello')\n    1\n    \"\"\"\n    return len(string.upper())\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -11.1796875
    ],
    [
      "def count_uppercase(string):\n    \"\"\"\n    >>> count_uppercase('Hello')\n    1\n    >>> count_uppercase('Hello World')\n    3\n    >>> count_uppercase('Hello World')\n    3\n    >>> count_uppercase('Hello')\n    1\n    >>> count_uppercase('Hello')\n    1\n    >>> count_uppercase('Hello World')\n    3\n    \"\"\"\n\n    return len(string.upper())\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -11.8359375
    ],
    [
      "# Your function should return an integer.\ndef upper_case_characters(string):\n    return sum(map(int, string.upper()))\n\n# Test Cases\nprint upper_case_characters(\"hello\")\nprint upper_case_characters(\"hello world\")\nprint upper_case_characters(\"Hello world\")\nprint upper_case_characters(\"HELLO WORLD\")\nprint upper_case_characters(\"HELLO WORLD\")\nprint upper_case_characters(\"Hello World\")\nprint upper_case_characters(\"hello world\")\nprint upper_case_characters(\"HELLO WORLD\")\nprint upper_case_characters(\"HELLO WORLD\")\nprint upper_case_characters(\"HELLO WORLD\")",
      -14.109375
    ],
    [
      "def count_upper(str):\n    \"\"\"\n    >>> count_upper('Hello world')\n    5\n    >>> count_upper('helloworld')\n    3\n    >>> count_upper('Hello')\n    0\n    >>> count_upper('Helloworld')\n    0\n    >>> count_upper('')\n    0\n    \"\"\"\n    return len(str.upper())\n\nif __name__ == '__main__':\n    print(count_upper('Hello world'))\n    print(count_upper('helloworld'))\n    print(count_upper('Hello'))\n    print(count_upper('Helloworld'))\n    print(count_upper(''))\n    print(count_upper('Hello'))",
      -17.453125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}