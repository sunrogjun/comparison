{
  "problem": {
    "task_id": "HumanEval/30",
    "prompt": "\n\ndef get_positive(l: list):\n    \"\"\"Return only positive numbers in the list.\n    >>> get_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n",
    "canonical_solution": "    return [e for e in l if e > 0]\n",
    "test": "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate([-1, -2, 4, 5, 6]) == [4, 5, 6]\n    assert candidate([5, 3, -5, 2, 3, 3, 9, 0, 123, 1, -10]) == [5, 3, 2, 3, 3, 9, 123, 1]\n    assert candidate([-1, -2]) == []\n    assert candidate([]) == []\n\n",
    "entry_point": "get_positive",
    "docstring": "",
    "problem_id": 30
  },
  "model_name": "codegen-2b",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -1]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -1, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, -4, -1]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_abs(l: list):\n    \"\"\"Return only numbers with absolute value greater than zero in the list.\n    >>> get_abs([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_abs([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if abs(x) > 0]\n\ndef get_neg_and_abs(l: list):\n    \"\"\"Return only numbers with negative value and absolute value greater than zero in the list.\n    >>> get_neg_and_abs([-1, 2, -4, 5, 6])\n    [-4, -1]\n    >>> get_neg_and_abs([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -1, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0 and abs(x) > 0]\n\ndef get_pos",
      1.6630859375
    ],
    [
      "return [n for n in l if n >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [n for n in l if n < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)",
      1.44140625
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, 5, 6])\n    [-2, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-2, -5, -6, -3, 9, 123, 1, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, 5, 6])\n    [0, 0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_nonzero(l: list):\n    \"\"\"Return only nonzero numbers in the list.\n    >>> get_nonzero([2, 5, 6])\n    [2, 5, 6]\n    >>> get_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x!= 0]\n\ndef get_positive_nonzero(l: list):\n    \"\"\"Return only positive nonzero numbers in the list.\n    >>> get_positive_nonzero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 and x!= 0]\n\ndef get_negative_nonzero(l: list):\n    \"\"\"Return only negative nonzero numbers in",
      1.189453125
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 5, 6])\n    [-5, 6]\n    >>> get_negative([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 5, 6])\n    [0, 6]\n    >>> get_zero([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 123, 1]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_positive_or_zero(l: list):\n    \"\"\"Return only positive numbers in the list or zero.\n    >>> get_positive_or_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 or x == 0]\n\ndef get_negative_or_zero(l: list):\n    \"\"\"Return only negative numbers in the list or zero.\n    >>> get_negative_or_zero([2, -5, 5, 6])\n    [-5, 6]\n    >>> get_negative_or_zero([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0 or x == 0]\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of the",
      0.49853515625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -4, 5, 6])\n    [-4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, 123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([2, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_nonzero(l: list):\n    \"\"\"Return only nonzero numbers in the list.\n    >>> get_nonzero([2, -4, 5, 6])\n    [2, 5]\n    >>> get_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x!= 0]\n\ndef get_positive_and_nonzero(l: list):\n    \"\"\"Return only positive and nonzero numbers in the list.\n    >>> get_positive_and_nonzero([2, -4, 5, 6])\n    [2, 5]\n    >>> get_positive_and_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0 and x!= 0]\n\ndef get_negative_and_nonzero(l: list):\n    \"\"\"Return only negative and nonzero numbers in the",
      0.43701171875
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_max(l: list):\n    \"\"\"Return the maximum number in the list.\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    >>> get_max([-1, 2, -4, 5, 6])\n    -4\n    \"\"\"\n    return max(l)\n\ndef get_min(l: list):\n    \"\"\"Return the minimum number in the list.\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    \"\"\"\n    return min(l)\n\ndef get_median(l: list):\n    \"\"\"Return the median of the list.\n    >>> get_median([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    2.5\n    >>> get_median([-1, 2, -4, 5, 6])\n    -4.5\n    \"\"\"\n    l = sorted(l)\n    n = len(l)\n    if n % 2 == 1:\n        return l[n/2]\n    else:\n        return (l[n/2 - 1] + l[n/2]) / 2.0\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123",
      0.2176513671875
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -2, -1]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -2, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum number in the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum number in the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([-1, 2, -4, 5, 6])\n    1.5\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    3.75\n    \"\"\"\n    return sum(l) / len(l)\n\n\ndef get_median(l: list):\n    \"\"\"Return the median of the list.\n    >>> get_median([-1, 2, -4, 5, 6])\n    -1.5\n    >>> get_median([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    3.5\n    \"\"\"\n    l = sorted(l",
      0.190185546875
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum number in the list.\n    >>> get_max([3, 4, 5])\n    5\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum number in the list.\n    >>> get_min([3, 4, 5])\n    3\n    >>> get_min([-1, 2, -4, 5, 6])\n    -4\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of the numbers in the list.\n    >>> get_sum([3, 4, 5])\n    10\n    >>> get_sum([-1, 2, -4, 5, 6])\n    -9\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -109\n    \"\"\"\n    return sum(l)\n\n\ndef get_average(l: list):\n    \"\"\"Return the average of the numbers in the list.\n    >>> get_average([3, 4, 5])\n    3.0\n    >>> get_average([-1, 2, -4, 5, 6])\n    -2.0\n    >>> get_average([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -2.0\n    \"\"\"\n    return get_sum(l) / len(l)\n\n\ndef get_median(l: list):\n    \"\"\"Return the median of the numbers in the list.\n    >>> get_median([3, 4, 5])\n    3.0\n    >>> get_median([-1, 2",
      0.11798095703125
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -3, 9, 123, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 123, -10]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_nonzero(l: list):\n    \"\"\"Return only non-zero numbers in the list.\n    >>> get_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x!= 0]\n\ndef get_positive_nonzero(l: list):\n    \"\"\"Return only positive numbers in the list and non-zero numbers in the list.\n    >>> get_positive_nonzero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0 and x!= 0]\n\ndef get_negative_nonzero(l: list):\n    \"\"\"Return only negative numbers in the list and non-zero numbers in the list.\n    >>> get_negative_nonzero([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative_nonzero([5, 3",
      -0.11676025390625
    ],
    [
      "return [n for n in l if n >= 0]\n\n\ndef get_max(l: list):\n    \"\"\"Return the largest number in the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\n\ndef get_min(l: list):\n    \"\"\"Return the smallest number in the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\n\ndef get_min_max(l: list):\n    \"\"\"Return the smallest and largest numbers in the list.\n    >>> get_min_max([-1, 2, -4, 5, 6])\n    (-1, 6)\n    >>> get_min_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    (-10, 9)\n    \"\"\"\n    return min(l), max(l)\n\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([-1, 2, -4, 5, 6])\n    2.0\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    5.5\n    \"\"\"\n    return sum(l) / len(l)\n\n\ndef get_stddev(l: list):\n    \"\"\"Return the standard deviation of the list.\n    >>> get_stddev([-1, 2, -4, 5, 6])\n    1.0\n    >>> get_stddev([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    1.0\n    \"\"\"\n    return math.sqrt(sum([(x - get_mean(l))**2",
      -0.220703125
    ],
    [
      "return [i for i in l if i >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_positive_or_zero(l: list):\n    \"\"\"Return only positive or zero numbers in the list.\n    >>> get_positive_or_zero([2, -5, 6, -4, 5, 6])\n    [2, 6]\n    >>> get_positive_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i >= 0 or i == 0]\n\ndef get_negative_or_zero(l: list):\n    \"\"\"Return only negative or zero numbers in the list.\n    >>> get_negative_or_zero([2, -5, 6, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0 or i == 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_",
      -0.2296142578125
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, 5, 6])\n    [2, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -3, -9, -123, -1, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_mixed(l: list):\n    \"\"\"Return numbers in the list that are both positive and negative.\n    >>> get_mixed([-5, -3, -3, -9, -123, -1, -10])\n    [-5, -3, -3, -9, -123, -1, -10]\n    >>> get_mixed([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -3, -9, -123, -1, -10]\n    \"\"\"\n    return [i for i in l if i > 0 and i < 0]\n\ndef get_all(l: list):\n    \"\"\"Return all numbers in the list.\n    >>> get_all([-5, -3, -3, -9, -123, -1, -10])\n    [-5, -3, -3, -9, -123, -1, -10]\n    >>> get_all([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l]\n\ndef get_max(l: list):\n    \"\"\"Return the maximum number in the list.\n    >>> get_max([-5, -3, -3, -9, -123, -1, -10])\n    -10\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123",
      -0.33984375
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    []\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 123]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_odd(l: list):\n    \"\"\"Return only odd numbers in the list.\n    >>> get_odd([-1, 2, -4, 5, 6])\n    [1, 3]\n    >>> get_odd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [1, 3, 5, 9]\n    \"\"\"\n    return [i for i in l if i % 2 == 1]\n\n\ndef get_even(l: list):\n    \"\"\"Return only even numbers in the list.\n    >>> get_even([-1, 2, -4, 5, 6])\n    [0, 2]\n    >>> get_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 2, 4, 9, 123]\n    \"\"\"\n    return [i for i in l if i % 2 == 0]\n\n\ndef get_odd_and_even(l: list):\n    \"\"\"Return only odd and even numbers in the list.\n    >>> get_odd_and_even([-1, 2, -4, 5, 6])\n    [1, 3",
      -0.43212890625
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, 123, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_abs_max(l: list):\n    \"\"\"Return the maximum absolute value in the list.\n    >>> get_abs_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_abs_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(abs(i) for i in l)\n\n\ndef get_abs_min(l: list):\n    \"\"\"Return the minimum absolute value in the list.\n    >>> get_abs_min([-1, 2, -4, 5, 6])\n    -4\n    >>> get_abs_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -3\n    \"\"\"\n    return min(abs(i) for i in l)\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum value in the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum value in the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"",
      -0.44287109375
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_nonnegative(l: list):\n    \"\"\"Return only nonnegative numbers in the list.\n    >>> get_nonnegative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_nonnegative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0] + [x for x in l if x < 0]\n\ndef get_nonnegative_and_negative(l: list):\n    \"\"\"Return only nonnegative and negative numbers in the list.\n    >>> get_nonnegative_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_nonnegative_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l",
      -0.548828125
    ],
    [
      "return [x for x in l if x >= 0]",
      -0.85791015625
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]",
      -0.85791015625
    ],
    [
      "return [i for i in l if i >= 0]",
      -0.85791015625
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -2, -4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 1]\n    \"\"\"\n    return [i for i in l if i < 0]",
      -0.85888671875
    ],
    [
      "return [i for i in l if i >= 0]",
      -0.85888671875
    ],
    [
      "return [e for e in l if e > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -10, -1, -123]\n    \"\"\"\n    return [e for e in l if e < 0]",
      -0.85888671875
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]",
      -0.85888671875
    ],
    [
      "return [x for x in l if x >= 0]",
      -0.85888671875
    ],
    [
      "return [x for x in l if x >= 0]",
      -0.85888671875
    ],
    [
      "return [e for e in l if e >= 0]",
      -0.85888671875
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 1, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.85888671875
    ],
    [
      "return [e for e in l if e >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    \"\"\"\n    return [e for e in l if e < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only numbers with value zero in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    \"\"\"\n    return [e for e in l if e == 0]\n\n\ndef get_positive_minus_zero(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_minus_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_minus_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    \"\"\"\n    return [e for e in l if e >= 0 or e == 0]\n\n\ndef get_negative_minus_zero(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_negative_minus_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative_minus_zero([5, 3, -5, 2, -3, 3",
      -1.01171875
    ],
    [
      "return [i for i in l if i >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -4, 5, 6])\n    [0, 0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return [i for i in l if i >= 0 or i < 0]\n\ndef get_positive_and_negative_and_zero(l: list):\n    \"\"\"Return only positive, negative, and zero numbers in the list.\n    >>> get_positive_and_negative_and_zero([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_positive_and_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5",
      -1.037109375
    ],
    [
      "return [n for n in l if n > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, 6]\n    \"\"\"\n    return [n for n in l if n < 0]\n\n\ndef get_positive_or_zero(l: list):\n    \"\"\"Return only positive numbers in the list, or zero.\n    >>> get_positive_or_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 5, 6]\n    >>> get_positive_or_zero([0, -1, -4, 5, 6])\n    [0, -4, 5, 6]\n    \"\"\"\n    return [n for n in l if n > 0 or n == 0]\n\n\ndef get_negative_or_zero(l: list):\n    \"\"\"Return only negative numbers in the list, or zero.\n    >>> get_negative_or_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, 6]\n    >>> get_negative_or_zero([0, -1, -4, 5, 6])\n    [-1, -4, 5, 6]\n    \"\"\"\n    return [n for n in l if n < 0 or n == 0]\n\n\ndef get_positive_or_zero_or_one(l: list):\n    \"\"\"Return only positive numbers in the list, or zero or one.\n    >>> get_positive_or_zero_or_one([",
      -1.2900390625
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [2, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6])\n    [0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 9, 123, -10]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_positive_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_negative([-1, 2, -4, 5, 6])\n    [2, 5, -4, -1]\n    >>> get_positive_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, -3, -9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_zero_positive_negative(l: list):\n    \"\"\"Return only zero, positive and negative numbers in the list.\n    >>> get_zero_positive_negative([-1, 2, -4, 5, 6])\n    [0, 5, -4, -1]\n    >>> get_zero_positive_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 5, 3, -5, -3, 9, 123, 1]\n    \"\"\"\n    return get_zero(l) + get_positive(l) + get_negative(l)\n\n\ndef get_positive_",
      -1.29296875
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_average(l: list):\n    \"\"\"Return the average of the list.\n    >>> get_average([1, 2, 3, 4])\n    2.5\n    >>> get_average([-1, 2, -4, 5, 6])\n    -2.5\n    >>> get_average([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -2.2\n    \"\"\"\n    return sum(l) / float(len(l))\n\ndef get_median(l: list):\n    \"\"\"Return the median of the list.\n    >>> get_median([1, 2, 3, 4])\n    2\n    >>> get_median([-1, 2, -4, 5, 6])\n    -2.5\n    >>> get_median([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -2.5\n    \"\"\"\n    l = sorted(l)\n    if len(l) % 2 == 1:\n        return l[len(l) // 2]\n    else:\n        return (l[len(l) // 2 - 1] + l[len(l) // 2]) / 2\n\ndef get_min(l: list):\n    \"\"\"Return the smallest number in the list.\n    >>> get_min([1, 2, 3, 4])\n    1\n    >>> get_min([-1, 2, -4, 5, 6])\n    -5\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123",
      -1.4677734375
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive and zero numbers in the list.\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, 0, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0 and x == 0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative and zero numbers in the list.\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0 and x == 0]\n\ndef get_zero_and_negative(l: list):\n    \"\"\"Return only zero and negative numbers in the list.\n    >>> get_zero_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x == 0 and x < 0]\n\ndef get_positive_and_zero_and_negative(l: list):\n    \"\"\"Return only positive, zero, and negative numbers in the list.",
      -1.4736328125
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_max_id(l: list):\n    \"\"\"Return the max id in the list.\n    >>> get_max_id([1, 2, 3, 4, 5])\n    5\n    >>> get_max_id([1, 2, 3, 4, 5])\n    5\n    >>> get_max_id([-1, 2, -4, 5, 6])\n    6\n    >>> get_max_id([-1, 2, -4, 5, 6])\n    6\n    \"\"\"\n    return max(l) if l else 0\n\ndef get_min_id(l: list):\n    \"\"\"Return the min id in the list.\n    >>> get_min_id([1, 2, 3, 4, 5])\n    1\n    >>> get_min_id([1, 2, 3, 4, 5])\n    1\n    >>> get_min_id([-1, 2, -4, 5, 6])\n    2\n    >>> get_min_id([-1, 2, -4, 5, 6])\n    2\n    \"\"\"\n    return min(l) if l else 0\n\ndef get_max_id_and_pos(l: list):\n    \"\"\"Return the max id and the max id in the list.\n    >>> get_max_id_and_pos([1, 2, 3, 4, 5])\n    (5, 5)\n    >>> get_max_id_and_pos([-1, 2, -4, 5, 6])\n    (6, 6)\n    \"\"\"\n    return max(l), max(get_positive(l))\n\ndef get_min_id_and_pos(l: list):\n    \"\"\"Return the min id and the min id in the list.\n    >>> get_min_id_and_pos([1, 2, 3, 4, 5])\n    (1, 1)\n    >>> get_min_id_and_pos([-1, 2, -4, 5, 6])\n    (2, 2)\n    \"\"\"\n    return min(l), min(get_positive(l))\n\nif __name__ == \"__main__\":\n    import",
      -1.58984375
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10]\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_non_negative(l: list):\n    \"\"\"Return only non-negative numbers in the list.\n    >>> get_non_negative([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_non_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0]\n\ndef get_non_negative_or_zero(l: list):\n    \"\"\"Return only non-negative numbers in the list.\n    >>> get_non_negative_or_zero([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_non_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0 or x == 0]\n\ndef get_non_negative_or_zero_or_none(l: list):\n    \"\"\"Return only non-negative numbers in the list.\n    >>> get_non_negative_or_zero_or_none([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_non_negative_or_zero_or_none([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])",
      -1.6494140625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negatives(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negatives([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negatives([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1, 10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_min(l: list):\n    \"\"\"Return the minimum of the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\ndef get_max(l: list):\n    \"\"\"Return the maximum of the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of the list.\n    >>> get_sum([-1, 2, -4, 5, 6])\n    7\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return sum(l)\n\ndef get_avg(l: list):\n    \"\"\"Return the average of the list.\n    >>> get_avg([-1, 2, -4, 5, 6])\n    -1.75\n    >>> get_avg([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    3.25\n    \"\"\"\n    return float(get_sum(l)) / len(l)\n\ndef",
      -1.712890625
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_absolute_value(l: list):\n    \"\"\"Return only positive or negative numbers in the list.\n    >>> get_absolute_value([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_absolute_value([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return [x for x in l if x!= 0]\n\ndef get_sorted(l: list):\n    \"\"\"Return only numbers in the list in sorted order.\n    >>> get_sorted([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_sorted([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -3, -5, -3, -10, -5, -4, -2, -1, -4, 0, 1, 2, 3, 3, 9, 123, 5, 5, 4, 6]\n    \"\"\"\n    return sorted(l)\n\ndef get_sorted_positive(l: list):\n    \"\"\"Return only positive numbers in the list in sorted order.\n    >>> get_sorted_positive([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_sorted_positive([5, 3, -5, 2, -3, 3, 9",
      -1.763671875
    ],
    [
      "return [e for e in l if e > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -3, 9, 123, -10]\n    \"\"\"\n    return [e for e in l if e < 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, -3, 9, 123, 1]\n    \"\"\"\n    return [e for e in l if e > 0 and e < 0]\n\n\ndef get_positive_and_negative_and_positive(l: list):\n    \"\"\"Return only positive, negative, and positive numbers in the list.\n    >>> get_positive_and_negative_and_positive([-1, 2, -4, 5, 6])\n    [2, 5]\n    >>> get_positive_and_negative_and_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, -3, 9, 123, 1]\n    \"\"\"\n    return [e for e in l if e > 0 and e < 0 and e > 0]",
      -1.84375
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -3, -10, -10, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, 0, 0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0]\n    \"\"\"\n    return [x for x in l if x == 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive and zero numbers in the list.\n    >>> get_positive_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [x for x in l if x > 0 and x == 0]\n\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative and zero numbers in the list.\n    >>> get_negative_and_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -3, -10, 123]\n    \"\"\"\n    return [x for x in l if x < 0 and x == 0]",
      -1.849609375
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_positive_and_decimal(l: list):\n    \"\"\"Return only positive numbers and decimal values in the list.\n    >>> get_positive_and_decimal([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_decimal([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 and x % 1 == 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -2, -3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_negative_and_decimal(l: list):\n    \"\"\"Return only negative numbers and decimal values in the list.\n    >>> get_negative_and_decimal([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative_and_decimal([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -2, -3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0 and x % 1 == 0]\n\n\ndef get_decimal(l: list):\n    \"\"\"Return only decimal values in the list.\n    >>> get_decimal([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_decimal([5, 3, -5, 2, -3, 3, 9, 0, 123, 1",
      -1.857421875
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_positive_and_even(l: list):\n    \"\"\"Return only positive numbers in the list and even numbers in the list.\n    >>> get_positive_and_even([-1, 2, -4, 5, 6])\n    [2, 5]\n    >>> get_positive_and_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [i for i in l if i > 0 and i % 2 == 0]\n\ndef get_positive_and_odd(l: list):\n    \"\"\"Return only positive numbers in the list and odd numbers in the list.\n    >>> get_positive_and_odd([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 6]\n    >>> get_positive_and_odd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [i for i in l if i > 0 and i % 2!= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -1, 4, -3, -5, -6])\n    [-2, -6, -4, -5, -3]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_negative_and_even(l: list):\n    \"\"\"Return only negative numbers in the list and even numbers in the list.\n    >>> get_negative_and_even([2, -1, 4, -3, -5, -6])\n    [-2, -6, -4]\n    >>> get_negative_and_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])",
      -1.8876953125
    ],
    [
      "return [num for num in l if num > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, -6, 7, -3, -7])\n    [-5, -7]\n    >>> get_negative([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -7, -10]\n    \"\"\"\n    return [num for num in l if num < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([2, 3, 4, 5])\n    [0, 0, 0]\n    >>> get_zero([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [num for num in l if num == 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive numbers in the list and zeros.\n    >>> get_positive_and_zero([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, 0, 1, -10]\n    \"\"\"\n    return get_positive(get_zero(l))\n\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative numbers in the list and zeros.\n    >>> get_negative_and_zero([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, 0, -1, -10]\n    \"\"\"\n    return get_negative(get_zero(l))\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive numbers in the list and negative numbers.\n    >>> get_positive_and_negative([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])",
      -1.98046875
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [-5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, 6, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum number in the list.\n    >>> get_max([1, -5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max([x for x in l])\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum number in the list.\n    >>> get_min([1, -5, 6])\n    1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -5\n    \"\"\"\n    return min([x for x in l])\n\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of the list.\n    >>> get_sum([1, -5, 6])\n    -4\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -5\n    \"\"\"\n    return sum([x for x in l])\n\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([1, -5, 6])\n    -2.5\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    3.5\n    \"\"\"\n    return get_sum(l) / len(l)\n\n\ndef get_median(l: list):\n    \"\"\"Return the median of the list.\n    >>> get_median([1, -5",
      -2.01171875
    ],
    [
      "return [n for n in l if n > 0]\n\ndef get_negatives(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negatives([-1, 2, -4, 5, 6])\n    [-4, -5, 6]\n    >>> get_negatives([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [n for n in l if n < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 0, 123]\n    \"\"\"\n    return [n for n in l if n == 0]\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of all numbers in the list.\n    >>> get_sum([-1, 2, -4, 5, 6])\n    7\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -11\n    \"\"\"\n    return sum(l)\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of all numbers in the list.\n    >>> get_mean([-1, 2, -4, 5, 6])\n    -1.5\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -1.25\n    \"\"\"\n    return sum(l) / len(l)\n\ndef get_median(l: list):\n    \"\"\"Return the median of all numbers in the list.\n    >>> get_median([-1, 2, -4, 5, 6])\n    -1\n    >>> get_median([5, 3, -5, 2, -3, 3, 9",
      -2.046875
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [-1, 2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 2, 5, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum number in the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum number in the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([-1, 2, -4, 5, 6])\n    -1.5\n    >>> get_mean([5, 3, -5, 2, -3",
      -2.052734375
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6, -1])\n    [-5, 6, -1]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, 6, -1, -3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6, -1])\n    [2, -5, 6, -1]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_negative_positive(l: list):\n    \"\"\"Return only negative and positive numbers in the list.\n    >>> get_negative_positive([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_negative_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return get_negative(l), get_positive(l)\n\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of all numbers in the list.\n    >>> get_sum([2, -5, 6, -1])\n    -1\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return sum(l)\n\n\ndef get_product(l: list):\n    \"\"\"Return the product of all numbers in the list.\n    >>> get_product",
      -2.0703125
    ],
    [
      "return [num for num in l if num >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 5, 6])\n    [-5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-9, -10, 123, -1]\n    \"\"\"\n    return [num for num in l if num < 0]\n\n\ndef get_absolute_value(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_absolute_value([2, -5, 5, 6])\n    [2, 5, 6]\n    >>> get_absolute_value([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [num for num in l if num!= 0]\n\n\ndef get_absolute_values(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_absolute_values([2, -5, 5, 6])\n    [2, 5, 6]\n    >>> get_absolute_values([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [num for num in l if abs(num) > 0]\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum value in the list.\n    >>> get_min([2, -5, 5, 6])\n    2\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -5\n    \"\"\"\n    return min(l)\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum value in the list.\n    >>> get_max([2, -5, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2,",
      -2.1953125
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -3, -9, -123, -1, 10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_max_diff(l: list):\n    \"\"\"Return the max difference between elements in the list.\n    >>> get_max_diff([1, 2, 3, 4])\n    4\n    >>> get_max_diff([1, 2, 3, 4, 5])\n    3\n    >>> get_max_diff([1, 2, 3, 4, 5, 6])\n    5\n    >>> get_max_diff([1, 2, 3, 4, 5, 6, 7])\n    7\n    >>> get_max_diff([1, 2, 3, 4, 5, 6, 7, 8])\n    8\n    >>> get_max_diff([1, 2, 3, 4, 5, 6, 7, 8, 9])\n    9\n    \"\"\"\n    return max(abs(i - j) for i, j in zip(l, l[1:]))\n\ndef get_min_diff(l: list):\n    \"\"\"Return the min difference between elements in the list.\n    >>> get_min_diff([1, 2, 3, 4])\n    3\n    >>> get_min_diff([1, 2, 3, 4, 5])\n    2\n    >>> get_min_diff([1, 2, 3, 4, 5, 6])\n    3\n    >>> get_min_diff([1, 2, 3, 4, 5, 6, 7])\n    6\n    >>> get_min_diff([1, 2, 3, 4, 5, 6, 7, 8])\n    7\n    >>> get_min_diff([1, 2, 3, 4, 5, 6, 7, 8, 9])\n    8\n    \"\"\"\n    return min(abs(i - j) for i, j in zip(l, l[",
      -2.205078125
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [-5, 6]\n    >>> get_negative([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, 2, -3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_sign(l: list):\n    \"\"\"Return the sign of the list.\n    >>> get_sign([2, -5, 6])\n    1\n    >>> get_sign([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -1\n    \"\"\"\n    return 1 if l[0] > 0 else -1\n\n\ndef get_sorted_list(l: list):\n    \"\"\"Return the list sorted by its value.\n    >>> get_sorted_list([2, -5, 6])\n    [2, -5, 6]\n    >>> get_sorted_list([-5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10, -5, 2, 3, 9, 123, 1, 6, 5]\n    \"\"\"\n    return sorted(l)",
      -2.27734375
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, -3, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, -4, 5]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_sorted_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_sorted_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, -4, 5]\n    >>> get_sorted_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return sorted(get_positive_and_negative(l))\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -2.314453125
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_neg_zero(l: list):\n    \"\"\"Return only negative zero numbers in the list.\n    >>> get_neg_zero([-1, 2, -4, 5, 6])\n    [-0, -0]\n    >>> get_neg_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0]\n    \"\"\"\n    return [i for i in l if i == -0]\n\ndef get_pos_zero(l: list):\n    \"\"\"Return only positive zero numbers in the list.\n    >>> get_pos_zero([-1, 2, -4, 5, 6])\n    [0, 0]\n    >>> get_pos_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -2.3515625
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [2, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -1, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_odd_and_even(l: list):\n    \"\"\"Return only odd and even numbers in the list.\n    >>> get_odd_and_even([2, -5, 6])\n    [2, 6]\n    >>> get_odd_and_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [3, 5, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if (i % 2) == 0] + [i for i in l if (i % 2) == 1]\n\n\ndef get_even_and_odd(l: list):\n    \"\"\"Return only even and odd numbers in the list.\n    >>> get_even_and_odd([2, -5, 6])\n    [2, 6]\n    >>> get_even_and_odd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [3, 5, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if (i",
      -2.359375
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, 9, 123, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 123, -10]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 123, -10]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_sorted_list(l: list):\n    \"\"\"Get a list of numbers in ascending order.\n    >>> get_sorted_list([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, -10, -3, 2, 5, -5, 0]\n    \"\"\"\n    return sorted(l)\n\ndef get_sorted_positive(l: list):\n    \"\"\"Get a list of numbers in ascending order.\n    >>> get_sorted_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_sorted_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return sorted([x for x in l if x > 0])\n\ndef get_sorted_negative(l: list):\n    \"\"\"Get a list of numbers in ascending order.\n    >>> get_sorted_negative([-1, 2",
      -2.427734375
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_neg_pos(l: list):\n    \"\"\"Return a list of negative and positive numbers in the list.\n    >>> get_neg_pos([-1, 2, -4, 5, 6])\n    [(-1, 2), (5, 6)]\n    >>> get_neg_pos([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [(-1, 3), (9, 123), (1, -10)]\n    \"\"\"\n    return [(i, -i) for i in l if i > 0]\n\ndef get_neg(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_neg([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_neg([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_pos(l: list):\n    \"\"\"Return only positive numbers in the list.\n    >>> get_pos([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_pos([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i > 0]\n\ndef get_neg_pos_neg(l: list):\n    \"\"\"Return a list of negative and positive numbers in the list.\n    >>> get_neg_pos_neg([-1, 2, -4, 5, 6])\n    [(-1, 2), (5, 6)]\n    >>> get_neg_pos_neg([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [(-1, 3), (9, 123), (-1, -10)]\n    \"\"\"\n    return [(i, -",
      -2.517578125
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -2, -4]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -2, -3, -5, -6, -9, -123, 1, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 and x < 0]\n\ndef get_zero_and_positive(l: list):\n    \"\"\"Return only zero and positive numbers in the list.\n    >>> get_zero_and_positive([-1, 2, -4, 5, 6])\n    [0, 2, 5, 6]\n    >>> get_zero_and_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0,",
      -2.529296875
    ],
    [
      "return [e for e in l if e > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10]\n    >>> get_negative([2, -4, 5, 6])\n    [-4, -5, 6]\n    \"\"\"\n    return [e for e in l if e < 0]\n\n\ndef get_even(l: list):\n    \"\"\"Return only even numbers in the list.\n    >>> get_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    >>> get_even([2, -4, 5, 6])\n    [2, -4, 6]\n    \"\"\"\n    return [e for e in l if e % 2 == 0]\n\n\ndef get_odd(l: list):\n    \"\"\"Return only odd numbers in the list.\n    >>> get_odd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [3, -3, 9, 123]\n    >>> get_odd([2, -4, 5, 6])\n    [-4, -5, 6]\n    \"\"\"\n    return [e for e in l if e % 2!= 0]\n\n\ndef get_all(l: list):\n    \"\"\"Return all numbers in the list.\n    >>> get_all([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    >>> get_all([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    \"\"\"\n    return l\n\n\ndef get_all_even(l: list):\n    \"\"\"Return all even numbers in the list.\n    >>> get_all_even([5, 3, -5, 2, -3, 3, 9, 0,",
      -2.64453125
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -10, -5, -3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_positive_and_negative_and_zero(l: list):\n    \"\"\"Return both positive, negative, and zero numbers in the list.\n    >>> get_positive_and_negative_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -10, -5, -3, 9, 123, 1, 0]\n    \"\"\"\n    return get_positive(l) + get_negative(l) + [0]\n\n\ndef get_positive_and_negative_and_zero_and_positive(l: list):\n    \"\"\"Return both positive, negative, zero, and positive numbers in the list.\n    >>> get_positive_and_negative_and_zero_and_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative_and_zero_and_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1",
      -2.662109375
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 1]\n    \"\"\"\n    return [i for i in l if i <= 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_number_in_list(l: list, number: int):\n    \"\"\"Return number in list if found, else return None.\n    >>> get_number_in_list([-1, 2, -4, 5, 6], 4)\n    4\n    >>> get_number_in_list([-1, 2, -4, 5, 6], -5)\n    None\n    >>> get_number_in_list([-1, 2, -4, 5, 6], 1)\n    1\n    \"\"\"\n    for i in l:\n        if i == number:\n            return number\n    return None",
      -2.681640625
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negatives(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negatives([2, -4, 5, 6])\n    [-4, -5]\n    >>> get_negatives([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([2, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_positive_and_negatives(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negatives([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negatives([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negatives(l)\n\ndef get_zero_and_positives(l: list):\n    \"\"\"Return only zero and positive numbers in the list.\n    >>> get_zero_and_positives([2, -4, 5, 6])\n    [0, 6]\n    >>> get_zero_and_positives([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 3, 9, 123, 1]\n    \"\"\"\n    return get_zero(l) + get_positive(l)\n\ndef",
      -2.68359375
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [-1, 2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 2, 5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 or x < 0]\n\ndef get_positive_and_negative_and_positive_and_negative(l: list):\n    \"\"\"Return only positive, negative, positive and negative numbers in the list.\n    >>> get_positive_and_negative_and_positive_and_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_positive_and_negative_and_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 2, -4, 5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 or x < 0 or x > 0]",
      -2.73046875
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 5, 6, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_positive_or_zero(l: list):\n    \"\"\"Return only positive or zero numbers in the list.\n    >>> get_positive_or_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 5, 6, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0]\n\n\ndef get_negative_or_zero(l: list):\n    \"\"\"Return only negative or zero numbers in the list.\n    >>> get_negative_or_zero([2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 5, 6, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_positive_or_zero_or_negative(l: list):\n    \"\"\"Return only positive or zero or negative numbers in the list.\n    >>> get_positive_or_zero_or_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_or_zero_or_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 5, 6, 3, 9, 123, 1]",
      -2.736328125
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6, -3])\n    [-5, 6, -3]\n    >>> get_negative([-5, 3, -5, 2, -3, 3, 9, 123, 1, -10])\n    [-5, 3, -3, -5, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [-1, 2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 123, 1, -10])\n    [-1, 2, 5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 and x < 0]\n\ndef get_all_numbers(l: list):\n    \"\"\"Return all numbers in the list.\n    >>> get_all_numbers([-1, 2, -4, 5, 6])\n    [-1, 2, 5, 6]\n    >>> get_all_numbers([5, 3, -5, 2, -3, 3, 9, 123, 1, -10])\n    [-1, 2, 5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l]\n\ndef get_all_numbers_with_index(l: list):\n    \"\"\"Return all numbers in the list with their indices.\n    >>> get_all_numbers_with_index([-1, 2, -4, 5, 6])\n    [(-1, 0), (2, 1), (5, 2), (6, 3)]\n    >>> get_all_numbers_with_index([5, 3, -5, 2, -3, 3, 9, 123, 1, -10])\n    [(-1,",
      -2.865234375
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [2, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6])\n    [0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, -10]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_nonzero(l: list):\n    \"\"\"Return only nonzero numbers in the list.\n    >>> get_nonzero([2, -5, 6])\n    [2, -5]\n    >>> get_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, 9, 123]\n    \"\"\"\n    return [x for x in l if x!= 0]\n\ndef get_even(l: list):\n    \"\"\"Return only even numbers in the list.\n    >>> get_even([2, -5, 6])\n    [2]\n    >>> get_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, -5, 2, 3, 123]\n    \"\"\"\n    return [x for x in l if x % 2 == 0]\n\ndef get_odd(l: list):\n    \"\"\"Return only odd numbers in the list.\n    >>> get_odd([2, -5, 6])\n    [6]\n    >>> get_odd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-",
      -2.884765625
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [-5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_abs_diff(l1: list, l2: list):\n    \"\"\"Return the absolute difference between two lists.\n    >>> get_abs_diff([2, -5, 6], [2, -5, 8])\n    [-8, 5]\n    \"\"\"\n    return [abs(x1 - x2) for x1, x2 in zip(l1, l2)]\n\ndef get_abs_diff_ratio(l1: list, l2: list):\n    \"\"\"Return the absolute difference ratio between two lists.\n    >>> get_abs_diff_ratio([2, -5, 6], [2, -5, 8])\n    [1, 1]\n    \"\"\"\n    return get_abs_diff(l1, l2) / get_abs_diff(l2, l1)\n\ndef get_max_diff(l1: list, l2: list):\n    \"\"\"Return the maximum absolute difference between two lists.\n    >>> get_max_diff([2, -5, 6], [2, -5, 8])\n    [6, 5]\n    \"\"\"\n    return max(get_abs_diff(l1, l2))\n\ndef get_min_diff(l1: list, l2: list):\n    \"\"\"Return the minimum absolute difference between two lists.\n    >>> get_min_diff([2, -5, 6], [2, -5, 8])\n    [-5, -5]\n    \"\"\"\n    return min(get_abs_diff(l1, l2))\n\ndef get_max_diff_ratio(l1: list, l2: list):\n    \"\"\"Return the maximum absolute difference",
      -2.94140625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1, 10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\ndef get_positive_and_negative_and_zero(l: list):\n    \"\"\"Return only positive, negative and zero numbers in the list.\n    >>> get_positive_and_negative_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l) + [0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative and zero numbers in the list.\n    >>> get_negative_and_zero([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])",
      -3.017578125
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -10]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, -10]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, -10]\n    \"\"\"\n    return [x for x in l if x == 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, -5, -3, 9, 123, 1, -10]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, -5, -3, 9, 123, 1, -10]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_zero_and_positive_and_negative(l: list):\n    \"\"\"Return only zero, positive and negative numbers in the list.\n    >>> get_zero_and_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 5, 3, -",
      -3.25390625
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of the list.\n    >>> get_sum([-1, 2, -4, 5, 6])\n    15\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -11\n    \"\"\"\n    return sum(l)\n\n\ndef get_min(l: list):\n    \"\"\"Return the minimum value in the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -4\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -5\n    \"\"\"\n    return min(l)\n\n\ndef get_max(l: list):\n    \"\"\"Return the maximum value in the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\n\ndef get_median(l: list):\n    \"\"\"Return the median value in the list.\n    >>> get_median([-1, 2, -4, 5, 6])\n    2.5\n    >>> get_median([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    3.5\n    \"\"\"\n    return numpy.median(l)\n\n\ndef get_mean(l: list):\n    \"\"\"",
      -3.2890625
    ],
    [
      "return [e for e in l if e > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -3, 5, 6])\n    [-3, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, 5, -10]\n    \"\"\"\n    return [e for e in l if e < 0]\n\n\ndef get_nearest(l: list, k: int, eps: float):\n    \"\"\"Return the k-nearest elements in the list.\n    >>> get_nearest([1, 2, 3, 4, 5, 6], 3, 0.1)\n    [5, 3, 4]\n    \"\"\"\n    return sorted(l, key=lambda x: abs(x - k))[:k]\n\n\ndef get_distance(p1: tuple, p2: tuple):\n    \"\"\"Return the distance between two points.\n    >>> get_distance((0, 0), (0, 1))\n    1\n    >>> get_distance((0, 0), (0, 0))\n    0\n    >>> get_distance((0, 0), (-1, 0))\n    1\n    >>> get_distance((0, 0), (1, 0))\n    1\n    >>> get_distance((0, 0), (0, -1))\n    1\n    >>> get_distance((0, 0), (0, 1))\n    1\n    \"\"\"\n    return math.sqrt((p1[0] - p2[0]) ** 2 + (p1[1] - p2[1]) ** 2)\n\n\ndef get_nearest_to_point(p: tuple, l: list):\n    \"\"\"Return the k-nearest elements to point.\n    >>> get_nearest_to_point((0, 0), [1, 2, 3, 4, 5, 6])\n    [3, 4]\n    \"\"\"\n    return sorted(l, key=lambda x: get_distance(x, p))[:k]\n\n\ndef get_nearest_to_line(p: tuple, l: list):",
      -3.310546875
    ],
    [
      "return [e for e in l if e > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [-5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-10]\n    \"\"\"\n    return [e for e in l if e < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6])\n    []\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, 9]\n    \"\"\"\n    return [e for e in l if e == 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive numbers and zero numbers in the list.\n    >>> get_positive_and_zero([-1, 2, -4, 5, 6])\n    [2, 5]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9]\n    \"\"\"\n    return [e for e in l if e > 0 and e == 0]\n\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative numbers and zero numbers in the list.\n    >>> get_negative_and_zero([2, -5, 6])\n    [-5]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, 9]\n    \"\"\"\n    return [e for e in l if e < 0 and e == 0]\n\n\ndef get_all(l: list):\n    \"\"\"Return all numbers in the list.\n    >>> get_all([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_all([5,",
      -3.34765625
    ],
    [
      "return [x for x in l if x > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, 9, -1, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_nonzero(l: list):\n    \"\"\"Return only nonzero numbers in the list.\n    >>> get_nonzero([-1, 2, -4, 5, 6])\n    [2, 5]\n    >>> get_nonzero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [x for x in l if x!= 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [(2, -4), (5, 6)]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [(5, 3), (9, 123), (1, -10)]\n    \"\"\"\n    return [(x, -x) for x in get_positive(l)] + [(x, -x) for x in get_negative(l)]\n\n\ndef get_negative_and_positive(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_negative_and_positive([-1, 2, -4, 5, 6])\n    [(2, -4), (5, 6)]\n    >>> get_negative_and_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [(5, 3), (9,",
      -3.3515625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -9, -123, -1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\ndef get_positive_and_negative_and_zero(l: list):\n    \"\"\"Return only positive, negative and zero numbers in the list.\n    >>> get_positive_and_negative_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -9, -123, -1]\n    \"\"\"\n    return get_positive(l) + get_negative(l) + [0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative and zero numbers in the list.\n    >>> get_negative_and_zero([-1, 2, -4, 5, 6])\n    [-4, 5, 6]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-",
      -3.357421875
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 2, -4, 5, -3, 9, 123, 1, -10]\n    \"\"\"\n    return [x for x in l if x <= 0]\n\ndef get_positive_negative(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_positive_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_positive_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return get_positive(l), get_negative(l)\n\ndef get_positive_negative_positive(l: list):\n    \"\"\"Return all numbers in the list.\n    >>> get_positive_negative_positive([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_positive_negative_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    >>> get_positive_negative_positive([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_positive_negative_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return",
      -3.453125
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive numbers in the list and zero numbers in the list.\n    >>> get_positive_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i > 0 and i!= 0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative numbers in the list and zero numbers in the list.\n    >>> get_negative_and_zero([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0 and i",
      -3.5078125
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -3, -9, -10]\n    \"\"\"\n    return [i for i in l if i <= 0]\n\n\ndef get_negative_or_zero(l: list):\n    \"\"\"Return only negative or zero numbers in the list.\n    >>> get_negative_or_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -3, -9, -10]\n    \"\"\"\n    return [i for i in l if i <= 0 or i == 0]\n\n\ndef get_positive_or_zero(l: list):\n    \"\"\"Return only positive or zero numbers in the list.\n    >>> get_positive_or_zero([-1, 2, -4, 5, 6])\n    [2, 5]\n    >>> get_positive_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [i for i in l if i >= 0 or i == 0]\n\n\ndef get_positive_and_negative_or_zero(l: list):\n    \"\"\"Return only positive, negative and zero numbers in the list.\n    >>> get_positive_and_negative_or_zero([-1, 2, -4, 5, 6])\n    [2, -4, 5]\n    >>> get_positive_and_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -9, -10",
      -3.544921875
    ],
    [
      "return [n for n in l if n > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6, -3, -4, 1, -10])\n    [-3, -4]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -4, -3, -9, -1, -123, -10]\n    \"\"\"\n    return [n for n in l if n < 0]\n\ndef get_max(l: list):\n    \"\"\"Return the maximum value in the list.\n    >>> get_max([3, -5, 6, -3, -4, 1, -10])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\ndef get_min(l: list):\n    \"\"\"Return the minimum value in the list.\n    >>> get_min([3, -5, 6, -3, -4, 1, -10])\n    -5\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\ndef get_mean(l: list):\n    \"\"\"Return the mean value in the list.\n    >>> get_mean([3, -5, 6, -3, -4, 1, -10])\n    -1.3333333333333333\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -2.3333333333333333\n    \"\"\"\n    return sum(l) / len(l)\n\ndef get_variance(l: list):\n    \"\"\"Return the variance of the list.\n    >>> get_variance([3, -5, 6, -3, -4, 1, -10])\n    1.3333333333333333\n    >>> get_variance([5,",
      -3.56640625
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive numbers and zeros in the list.\n    >>> get_positive_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6, 0]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 0]\n    \"\"\"\n    return get_positive(l) + get_zero(l)\n\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative numbers and zeros in the list.\n    >>> get_negative_and_zero([-1, 2, -4, 5, 6])\n    [-4, -5, -6, 0]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 0]\n    \"\"\"\n    return get_negative(l) +",
      -3.60546875
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, -5, -3, -9, 123, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of the list.\n    >>> get_sum([-1, 2, -4, 5, 6])\n    7\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -1\n    \"\"\"\n    return sum(l)\n\ndef get_min(l: list):\n    \"\"\"Return the minimum of the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -4\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -5\n    \"\"\"\n    return min(l)\n\ndef get_max(l: list):\n    \"\"\"Return the maximum of the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([-1, 2, -4, 5, 6])\n    -2.5\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -2.0\n    \"\"\"\n    return sum(l) / len(l)\n\ndef get_median(",
      -3.7109375
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_positive_set(l: list):\n    \"\"\"Return a set containing only positive numbers in the list.\n    >>> get_positive_set([-1, 2, -4, 5, 6])\n    set([2, 5, 6])\n    >>> get_positive_set([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    set([5, 3, 2, 3, 9, 123, 1])\n    \"\"\"\n    return {i for i in l if i >= 0}\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -10, -6, -9, -123, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_negative_set(l: list):\n    \"\"\"Return a set containing only negative numbers in the list.\n    >>> get_negative_set([-1, 2, -4, 5, 6])\n    set([-1, -4, -6])\n    >>> get_negative_set([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    set([-5, -3, -10, -6, -9, -123, -1])\n    \"\"\"\n    return {i for i in l if i < 0}\n\n\ndef get_positive_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_negative([-1, 2, -4, 5, 6])\n    [2, -4, 6]\n    >>> get_positive_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9",
      -4.12109375
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_min(l: list):\n    \"\"\"Return the minimum in the list.\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    \"\"\"\n    return min(l)\n\ndef get_max(l: list):\n    \"\"\"Return the maximum in the list.\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    \"\"\"\n    return max(l)\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -2.5\n    >>> get_mean([-1, 2, -4, 5, 6])\n    -0.75\n    \"\"\"\n    return sum(l)/len(l)\n\ndef get_median(l: list):\n    \"\"\"Return the median of the list.\n    >>> get_median([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -3\n    >>> get_median([-1, 2, -4, 5, 6])\n    -1.5\n    \"\"\"\n    return sorted(l)[len(l)/2]\n\ndef get_standard_deviation(l: list):\n    \"\"\"Return the standard deviation of the list.\n    >>> get_standard_deviation([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    2.25\n    >>> get_standard_deviation([-1, 2, -4, 5, 6])\n    2.25\n    \"\"\"\n    return std(l)\n\ndef get_variance(l: list):\n    \"\"\"Return the variance of the",
      -4.125
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [2, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zeros in the list.\n    >>> get_zero([2, -5, 6])\n    [0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive numbers and zeros in the list.\n    >>> get_positive_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6, 0]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1, 0]\n    \"\"\"\n    return [i for i in l if i >= 0 and i == 0]\n\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative numbers and zeros in the list.\n    >>> get_negative_and_zero([2, -5, 6])\n    [-5, 6, 0]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, 123, 1, 0]\n    \"\"\"\n    return [i for i in l if i < 0 and i == 0]\n\n\ndef get_negative_and_positive(l: list):\n    \"\"\"Return only",
      -4.1640625
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_all(l: list):\n    \"\"\"Return a list of all numbers in the list.\n    >>> get_all([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    >>> get_all([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    \"\"\"\n    return list(set(l))\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1, -10]\n    \"\"\"\n    return get_positive(l), get_negative(l)\n\n\ndef get_all_and_positive_and_negative(l: list):\n    \"\"\"Return all numbers in the list and only positive and negative numbers.\n    >>> get_all_and_positive_and_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5, 6]\n    >>> get_all_and_positive_and_negative([5, 3, -",
      -4.19921875
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, -6])\n    [-5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -6, -3, 9, 123, 1, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, -6])\n    [0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_sorted_positive(l: list):\n    \"\"\"Return only positive numbers in the list in sorted order.\n    >>> get_sorted_positive([-1, 2, -4, 5, 6])\n    [-1, 2, 5, 6]\n    >>> get_sorted_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 2, 3, 3, 5, 9, 123, 1, 10, 10]\n    \"\"\"\n    return sorted(get_positive(l))\n\ndef get_sorted_negative(l: list):\n    \"\"\"Return only negative numbers in the list in sorted order.\n    >>> get_sorted_negative([2, -5, -6])\n    [-5, -6]\n    >>> get_sorted_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -6, -3, 9, 123, 1, -10]\n    \"\"\"\n    return sorted(get_negative(l))\n\ndef get_sorted",
      -4.55859375
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negatives(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negatives([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    >>> get_negatives([-1, 2, -4, 5, 6])\n    []\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_max(l: list):\n    \"\"\"Return the maximum value in the list.\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\ndef get_min(l: list):\n    \"\"\"Return the minimum value in the list.\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\ndef get_mean(l: list):\n    \"\"\"Return the mean value in the list.\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -4.0\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -4.0\n    \"\"\"\n    return sum(l) / len(l)\n\ndef get_sum(l: list):\n    \"\"\"Return the sum of all the values in the list.\n    >>> get_sum([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -3\n    >>> get_",
      -4.6640625
    ],
    [
      "return [n for n in l if n >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [n for n in l if n < 0]\n\ndef get_abs(l: list):\n    \"\"\"Return only positive or negative numbers in the list.\n    >>> get_abs([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_abs([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [n for n in l if n < 0 if n >= 0 or n < 0]\n\ndef get_abs_positive(l: list):\n    \"\"\"Return only positive numbers in the list.\n    >>> get_abs_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_abs_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [n for n in l if n < 0 and n >= 0]\n\ndef get_abs_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_abs_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [n for n in l if n < 0 and n >= 0]\n\ndef get_abs_negative_positive(l: list):\n    \"\"\"Return only negative and positive numbers in the list.\n    >>> get_abs_negative_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_abs_negative_",
      -4.69140625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-9, -10, -123]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_min(l: list):\n    \"\"\"Return the minimum value in the list.\n    >>> get_min([-1, 2, -4, 5, 6])\n    -1\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -10\n    \"\"\"\n    return min(l)\n\ndef get_max(l: list):\n    \"\"\"Return the maximum value in the list.\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    \"\"\"\n    return max(l)\n\ndef get_mean(l: list):\n    \"\"\"Return the mean of the list.\n    >>> get_mean([-1, 2, -4, 5, 6])\n    -0.8\n    >>> get_mean([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -0.5\n    \"\"\"\n    return sum(l) / len(l)\n\ndef get_median(l: list):\n    \"\"\"Return the median of the list.\n    >>> get_median([-1, 2, -4, 5, 6])\n    -1\n    >>> get_median([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    3\n    \"\"\"\n    l = sorted(l)\n    return l[len(l) // 2]\n\ndef get_",
      -4.796875
    ],
    [
      "return [num for num in l if num > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, -6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, -1]\n    \"\"\"\n    return [num for num in l if num < 0]\n\ndef get_abs(l: list):\n    \"\"\"Return only the absolute value of the numbers in the list.\n    >>> get_abs([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    >>> get_abs([-1, 2, -4, 5, 6])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [abs(num) for num in l]\n\ndef get_max(l: list):\n    \"\"\"Return the maximum of the numbers in the list.\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    >>> get_max([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    9\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([-1, 2, -4, 5, 6])\n    6\n    >>> get_max([-1, 2, -4, 5, 6])\n    -4\n    \"\"\"\n    return max(l)\n\ndef get_min(l: list):\n    \"\"\"Return the minimum of the numbers in the list.\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    -3\n    >>> get_min([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,",
      -5.0078125
    ],
    [
      "return [i for i in l if i >= 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, 6, 9, 123, 1, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_even(l: list):\n    \"\"\"Return only even numbers in the list.\n    >>> get_even([-1, 2, -4, 5, 6])\n    [0, 2, 4, 6]\n    >>> get_even([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i % 2 == 0]\n\n\ndef get_odd(l: list):\n    \"\"\"Return only odd numbers in the list.\n    >>> get_odd([-1, 2, -4, 5, 6])\n    [1, 3, 5, 7]\n    >>> get_odd([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i % 2 == 1]\n\n\ndef get_all_positive(l: list):\n    \"\"\"Return all positive numbers in the list.\n    >>> get_all_positive([-1, 2, -4, 5, 6])\n    [-1, 2, 4, 5, 6]\n    >>> get_all_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, 2, 4, 5, 6, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i >= 0]\n\n\ndef get_all_negative(l: list",
      -5.08984375
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, -6])\n    [-5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, -6])\n    []\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 9, 123]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_all_negative(l: list):\n    \"\"\"Return all negative numbers in the list.\n    >>> get_all_negative([2, -5, -6])\n    [-5, -6]\n    >>> get_all_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 0]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_all_positive(l: list):\n    \"\"\"Return all positive numbers in the list.\n    >>> get_all_positive([2, -5, -6])\n    [2, 5, 6]\n    >>> get_all_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 0]\n    \"\"\"\n    return [x for x in l if x > 0]\n\ndef get_all_zero(l: list):\n    \"\"\"Return all zero numbers in the list.\n    >>> get_all_zero([2, -5, -6])\n    []\n    >>> get_all_zero([5, 3, -5, 2,",
      -5.3515625
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6, -4, 5, -6])\n    [-6, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6, -4, 5, -6])\n    [2, 6]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 9, 123]\n    \"\"\"\n    return [x for x in l if x == 0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return all the negative numbers and zero numbers in the list.\n    >>> get_negative_and_zero([2, -5, 6, -4, 5, -6])\n    [-6, -4, 5, 6]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -3, 9, 123]\n    \"\"\"\n    return [x for x in l if x < 0 and x == 0]\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return all the positive numbers and zero numbers in the list.\n    >>> get_positive_and_zero([2, -5, 6, -4, 5, -6])\n    [2, 5, 6]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [x for x in l if x > 0 and x",
      -5.46875
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [2, -5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return get_positive(get_negative(l))\n\ndef get_negative_and_positive(l: list):\n    \"\"\"Return only negative and positive numbers in the list.\n    >>> get_negative_and_positive([2, -5, 6])\n    [2, -5, 6]\n    >>> get_negative_and_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return get_negative(get_positive(l))\n\ndef get_positive_and_negative_and_positive_and_negative(l: list):\n    \"\"\"Return only positive, negative, positive and negative numbers in the list.\n    >>> get_positive_and_negative_and_positive_and_negative(\n   ...     [-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative_and_positive_and_negative(\n   ...     [5, 3, -5, 2, -3,",
      -5.69921875
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, 6, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, 6, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive and zero numbers in the list.\n    >>> get_positive_and_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i > 0 and i == 0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative and zero numbers in the list.\n    >>> get_negative_and_zero([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, 5, 6, 9, 123, 1]\n    \"\"\"\n    return",
      -5.8828125
    ],
    [
      "return [x for x in l if x >= 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive numbers in the list and zero (0) numbers.\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123]\n    \"\"\"\n    return [x for x in l if x >= 0 or x == 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -5, 2, -3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative numbers in the list and zero (0) numbers.\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -5, 2, -3, 9, 123]\n    \"\"\"\n    return [x for x in l if x < 0 or x == 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [-1, 2, -4, 5]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 9, 123]\n    \"\"\"\n    return [x for x in l if x >= 0 and x < 0]\n\n\ndef get_positive_and_negative_and_zero(l: list):\n    \"\"\"Return only positive and negative numbers in the list",
      -5.88671875
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, -5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, -5, 9, 123, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([-1, 2, -4, 5, 6])\n    [0, 0, 0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_positive_or_zero(l: list):\n    \"\"\"Return only positive numbers in the list.\n    >>> get_positive_or_zero([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i > 0 or i == 0]\n\n\ndef get_negative_or_zero(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative_or_zero([-1, 2, -4, 5, 6])\n    [-1, -4, -5, 6]\n    >>> get_negative_or_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-1, -4, -5, 9, 123, 1]\n    \"\"\"\n    return [",
      -6.015625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-4, -5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -9, -123, 1]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\ndef get_all_positive(l: list):\n    \"\"\"Return all positive numbers in the list.\n    >>> get_all_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_all_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0]\n\ndef get_all_negative(l: list):\n    \"\"\"Return all negative numbers in the list.\n    >>> get_all_negative([-1, 2, -4, 5, 6])\n    [-4, -5, 6]\n    >>> get_all_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-5, -3, -9, -123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_all_positive_",
      -6.390625
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_absolute(l: list):\n    \"\"\"Return only numbers with absolute value in the list.\n    >>> get_absolute([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_absolute([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 5, 6, 9, 123, 1, -10]\n    \"\"\"\n    return [i for i in l if abs(i) > 0]\n\n\ndef get_square(l: list):\n    \"\"\"Return only square numbers in the list.\n    >>> get_square([-1, 2, -4, 5, 6])\n    [4, 25]\n    >>> get_square([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i**2 for i in l if i**2 >= 0]\n\n\ndef get_positive_square(l: list):\n    \"\"\"Return only square numbers in the list.\n    >>> get_positive_square([-1, 2, -4, 5, 6])\n    [4, 25]\n    >>> get_positive_square([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [i**2 for i in l if i**2 > 0]\n\n\ndef get_negative_square(l: list):\n    \"\"\"Return only square numbers",
      -6.4375
    ],
    [
      "return [i for i in l if i > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6])\n    [2, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i < 0]\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -5, 6])\n    [2]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i == 0]\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive and zero numbers in the list.\n    >>> get_positive_and_zero([2, -5, 6])\n    [2, 6]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i > 0 and i == 0]\n\ndef get_negative_and_zero(l: list):\n    \"\"\"Return only negative and zero numbers in the list.\n    >>> get_negative_and_zero([2, -5, 6])\n    [2, -5]\n    >>> get_negative_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 123, 1]\n    \"\"\"\n    return [i for i in l if i < 0 and i == 0]\n\ndef",
      -6.53515625
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_positive_index(l: list):\n    \"\"\"Return index of the first positive number in the list.\n    >>> get_positive_index([-1, 2, -4, 5, 6])\n    0\n    >>> get_positive_index([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    0\n    \"\"\"\n    return next(i for i, x in enumerate(l) if x >= 0)\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -5, -10, -3]\n    >>> get_negative([-1, 2, -4, 5, 6])\n    []\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_negative_index(l: list):\n    \"\"\"Return index of the first negative number in the list.\n    >>> get_negative_index([-1, 2, -4, 5, 6])\n    1\n    >>> get_negative_index([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    1\n    \"\"\"\n    return next(i for i, x in enumerate(l) if x < 0)\n\ndef get_sorted(l: list):\n    \"\"\"Return the sorted list.\n    >>> get_sorted([-1, 2, -4, 5, 6])\n    [-1, -4, -5, 2, 6]\n    >>> get_sorted([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-3, -5, -10, -3, -1, -4, -5, -6, -9, -10, 123, 9]\n    \"\"\"\n    return sorted(l)\n\ndef get_sorted_index(l: list):\n    \"\"\"Return index of the first sorted number in the list.\n    >>>",
      -7.12890625
    ],
    [
      "return [n for n in l if n > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, 5, 6])\n    [2, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, 9, 123]\n    \"\"\"\n    return [n for n in l if n < 0]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, 5, 6])\n    [0]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [0, 123]\n    \"\"\"\n    return [n for n in l if n == 0]\n\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return both positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [2, 3, 5, 9, 123]\n    \"\"\"\n    return get_positive(l) + get_negative(l)\n\n\ndef get_all_solutions(l: list, n: int):\n    \"\"\"Returns a list of all solutions for a given list.\n    >>> get_all_solutions([2, 3, 5, 7], 2)\n    [(2, 3), (3, 2), (5, 3), (7, 3)]\n    >>> get_all_solutions([2, 3, 5, 7], 3)\n    [(2, 3, 1), (2, 3, 2), (2, 3, 3), (3, 2, 1), (3, 2, 2), (3, 2, 3), (3, 3, 1), (3, 3, 2), (3, 3, 3)]\n    \"\"\"\n    if n == 0:",
      -7.22265625
    ],
    [
      "return [x for x in l if x > 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -5, 6, -4, 5, -6])\n    [-6, -4, 5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [-6, -4, 5, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_positive_and_negative(l: list):\n    \"\"\"Return only positive and negative numbers in the list.\n    >>> get_positive_and_negative([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 and x < 0]\n\ndef get_positive_and_negative_and_positive(l: list):\n    \"\"\"Return only positive, negative, and positive numbers in the list.\n    >>> get_positive_and_negative_and_positive([-1, 2, -4, 5, 6])\n    [2, 5, 6]\n    >>> get_positive_and_negative_and_positive([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x > 0 and x < 0 and x > 0]",
      -7.5
    ],
    [
      "return [x for x in l if x >= 0]\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([-1, 2, -4, 5, 6])\n    [-1, -4, -5]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -3, -9, 123, 1, -10]\n    \"\"\"\n    return [x for x in l if x < 0]\n\ndef get_absolute(l: list):\n    \"\"\"Return only absolute numbers in the list.\n    >>> get_absolute([-1, 2, -4, 5, 6])\n    [1, 2, 4, 5, 6]\n    >>> get_absolute([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 123, 1]\n    \"\"\"\n    return [x for x in l if x >= 0 and x <= 0x7fffffff]\n\ndef get_square(l: list):\n    \"\"\"Return only square numbers in the list.\n    >>> get_square([-1, 2, -4, 5, 6])\n    [1, 4, 9, 16, 25]\n    >>> get_square([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 81, 243, 9]\n    \"\"\"\n    return [x for x in l if x * x <= 0x7fffffff]\n\ndef get_product(l: list):\n    \"\"\"Return only product numbers in the list.\n    >>> get_product([-1, 2, -4, 5, 6])\n    [1, 2, 4, 5, 6]\n    >>> get_product([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 9, 81, 243, 243]\n    \"\"\"\n    return [x for x in l if x * x > 0x7fffffff]\n\ndef get_sum(",
      -7.81640625
    ],
    [
      "return [i for i in l if i > 0]\n\n\ndef get_negative(l: list):\n    \"\"\"Return only negative numbers in the list.\n    >>> get_negative([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_negative([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]\n    \"\"\"\n    return [i for i in l if i < 0]\n\n\ndef get_all(l: list):\n    \"\"\"Return only all numbers in the list.\n    >>> get_all([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_all([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 2, 3, 9, 123, 1, -10]\n    \"\"\"\n    return [i for i in l]\n\n\ndef get_zero(l: list):\n    \"\"\"Return only zero numbers in the list.\n    >>> get_zero([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 0, 0, 9, 0, 0, 0, 0, 123, 1, -10]\n    \"\"\"\n    return [i for i in l if i == 0]\n\n\ndef get_positive_and_zero(l: list):\n    \"\"\"Return only positive and zero numbers in the list.\n    >>> get_positive_and_zero([2, -4, 5, 6])\n    [2, -4, 5, 6]\n    >>> get_positive_and_zero([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    [5, 3, 0, 0, 9, 0, 0, 0, 0, 123, 1, -10]\n    \"\"\"\n    return",
      -8.609375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}