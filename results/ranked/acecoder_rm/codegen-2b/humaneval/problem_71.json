{
  "problem": {
    "task_id": "HumanEval/71",
    "prompt": "\ndef triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n",
    "canonical_solution": "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1 \n    s = (a + b + c)/2    \n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    area = round(area, 2)\n    return area\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(3, 4, 5) == 6.00, \"This prints if this assert fails 1 (good for debugging!)\"\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\n    # Check some edge cases that are easy to work out by hand.\n    assert candidate(1, 1, 1) == 0.43, \"This prints if this assert fails 2 (also good for debugging!)\"\n    assert candidate(2, 2, 10) == -1\n\n",
    "entry_point": "triangle_area",
    "docstring": "",
    "problem_id": 71
  },
  "model_name": "codegen-2b",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "return (a + b + c) / 2.0 if (a + b + c) > 0 else -1\n\ndef triangle_area_with_two_sides(a, b):\n    '''\n    Given the lengths of the two sides of a triangle. Return the area of the \n    triangle rounded to 2 decimal points if the two sides form a valid triangle. \n    Otherwise return -1\n    Two sides make a valid triangle when the sum of the two sides is greater \n    than the third side.\n    Example:\n    triangle_area_with_two_sides(3, 4) == 6.00\n    triangle_area_with_two_sides(1, 2) == -1\n    '''\n    return (a + b) / 2.0 if (a + b) > 0 else -1\n\nif __name__ == '__main__':\n    print triangle_area(3, 4, 5)\n    print triangle_area(1, 2, 10)\n    print triangle_area_with_two_sides(3, 4)\n    print triangle_area_with_two_sides(1, 2)",
      3.123046875
    ],
    [
      "return abs(a + b + c) / 2\n\ndef main():\n    '''\n    Given a list of triangle lengths, return the area of the triangle. \n    If any triangle lengths are invalid, return -1. \n    Example:\n    main([3, 4, 5]) == 6.00\n    main([1, 2, 10]) == -1\n    '''\n    triangles = [[3, 4, 5], [1, 2, 10]]\n    return sum([triangle_area(a, b, c) for a, b, c in triangles])\n\nif __name__ == '__main__':\n    print main()",
      2.962890625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a * c / 2, 2)\n\ndef main():\n    '''\n    Test cases\n    >>> triangle_area(3, 4, 5)\n    6.00\n    >>> triangle_area(1, 2, 10)\n    -1\n    >>> triangle_area(3, 4, 3)\n    6.00\n    >>> triangle_area(3, 4, 1)\n    -1\n    >>> triangle_area(1, 2, 1)\n    -1\n    '''\n    tests = [\n        [3, 4, 5],\n        [1, 2, 10],\n        [3, 4, 3],\n        [3, 4, 1],\n        [1, 2, 1],\n    ]\n    for test in tests:\n        print(triangle_area(*test))\n    print(\"\\n\")\n\nif __name__ == '__main__':\n    main()",
      2.2734375
    ],
    [
      "if a + b > c and a + c > b and b + c > a:\n        return round(a * b / 2, 2)\n    else:\n        return -1\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the triangle is valid\n    Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the triangle is valid\n    Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the triangle is valid\n    Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the triangle is valid\n    Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''",
      2.005859375
    ],
    [
      "return (b * c) / 2.0\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    make a valid triangle, False otherwise.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return (a + b > c and a + c > b and b + c > a)\n\ndef main():\n    '''\n    Test the is_triangle() function\n    '''\n    for a in range(1, 10):\n        for b in range(1, 10):\n            for c in range(1, 10):\n                print 'a ='+ str(a) + ', b ='+ str(b) + ', c ='+ str(c) + ':'+ str(is_triangle(a, b, c))\n\nif __name__ == '__main__':\n    main()",
      1.67578125
    ],
    [
      "return (a + b + c) / 2.0\n\ndef triangle_area_recursive(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2.0 if a + b > c else -1\n\nif __name__ == '__main__':\n    print triangle_area(3, 4, 5)\n    print triangle_area_recursive(3, 4, 5)",
      0.79541015625
    ],
    [
      "if a + b > c and a + c > b and b + c > a:\n        return round(a * c / 2, 2)\n    else:\n        return -1\n\n\ndef area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area(3, 4, 5) == 6.00\n    area(1, 2, 10) == -1\n    '''\n    return round(triangle_area(a, b, c), 2)\n\n\n# Test Cases\nprint(area(3, 4, 5))\nprint(area(1, 2, 10))",
      0.43359375
    ],
    [
      "return abs(a + b + c - 2 * min(a, b, c))\n\n\ndef get_triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    get_triangle_area(3, 4, 5) == 6.00\n    get_triangle_area(1, 2, 10) == -1\n    '''\n    return abs(a + b + c - 2 * min(a, b, c))\n\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides form a valid triangle. \n    Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return get_triangle_area(a, b, c) > 0\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return abs(a + b + c - 2 * min(a, b, c))\n\n\ndef get_triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return",
      0.43310546875
    ],
    [
      "return abs(a + b - c) / 2.0\n\ndef triangle_area_calc(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_calc(3, 4, 5) == 6.00\n    triangle_area_calc(1, 2, 10) == -1\n    '''\n    return abs(a + b - c) / 2.0\n\ndef triangle_area_decimal(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_decimal(3, 4, 5) == 6.00\n    triangle_area_decimal(1, 2, 10) == -1\n    '''\n    return abs(a + b - c) / 2.0\n\ndef triangle_area_recursive(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_recursive(3, 4, 5) == 6.00\n    triangle_area_recursive(1, 2, 10) == -1\n    '''\n    return abs(a + b - c) / 2.0\n\ndef triangle_area_recursive_decimal(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the",
      0.384033203125
    ],
    [
      "if a + b > c or a + c > b or b + c > a:\n        return -1\n    return (a + b + c) / 2\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a valid triangle. Otherwise return False\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return False\n    return True\n\ndef main():\n    '''\n    Test case:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(is_triangle(3, 4, 5))\n    print(is_triangle(1, 2, 10))\n\nif __name__ == '__main__':\n    main()",
      0.06915283203125
    ],
    [
      "return (a + b + c) / 2\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    triangle is valid, False otherwise. Three sides make a valid triangle \n    when the sum of any two sides is greater than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return (a + b + c) >= (a + b) and (a + b + c) >= (b + c)\n\ndef main():\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    triangle_area(3, 4, 5)\n\nif __name__ == '__main__':\n    main()",
      -0.3017578125
    ],
    [
      "# if the sum of any two sides is greater than the third side\n    if (a + b > c) or (a + c > b) or (b + c > a):\n        return -1\n    # calculate area\n    area = 0.5 * (a + b + c)\n    return round(area, 2)\n\ndef main():\n    '''\n    Test cases\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    a, b, c = map(int, input().split())\n    print(triangle_area(a, b, c))\n\nif __name__ == '__main__':\n    main()",
      -0.64794921875
    ],
    [
      "return round(0.5 * (a + b + c), 2)\n\ndef test_triangle_area():\n    assert triangle_area(3, 4, 5) == 6.00\n    assert triangle_area(1, 2, 10) == -1\n    assert triangle_area(1, 2, 3) == 1.00\n    assert triangle_area(1, 2, 4) == 2.00\n    assert triangle_area(1, 2, 5) == 2.00\n    assert triangle_area(1, 2, 6) == 2.00\n    assert triangle_area(1, 2, 7) == 2.00\n    assert triangle_area(1, 2, 8) == 2.00\n    assert triangle_area(1, 2, 9) == 2.00\n    assert triangle_area(1, 2, 10) == 2.00\n\nif __name__ == '__main__':\n    test_triangle_area()",
      -0.69189453125
    ],
    [
      "return abs(a + b + c) / 2.0\n\nif __name__ == '__main__':\n    print triangle_area(3, 4, 5)\n    print triangle_area(1, 2, 10)",
      -0.85693359375
    ],
    [
      "return round(abs(a+b+c)/2, 2)\n\n\n# Test case\n# a = triangle_area(3, 4, 5)\n# print(a)\n# b = triangle_area(1, 2, 10)\n# print(b)",
      -0.85791015625
    ],
    [
      "return round(a * b / 2, 2) if (a + b > c) else -1\n\n# Test Cases\n# Triangle Area\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))\n\n# Area of a square\nprint(triangle_area(1, 1, 1))",
      -0.85791015625
    ],
    [
      "if (a + b > c and a + c > b and b + c > a):\n        return round(a * b / 2, 2)\n    else:\n        return -1\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.85791015625
    ],
    [
      "return abs(a+b+c-2*min(a, b, c))/2\n\n#print triangle_area(3, 4, 5)\n#print triangle_area(1, 2, 10)",
      -0.85791015625
    ],
    [
      "return round((a + b + c) / 2, 2)\n\nif __name__ == '__main__':\n    test_cases = [\n        (3, 4, 5),\n        (1, 2, 10),\n        (5, 10, 2),\n        (7, 3, 5)\n    ]\n\n    for test_case in test_cases:\n        triangle_area(test_case[0], test_case[1], test_case[2])\n        print triangle_area(test_case[0], test_case[1], test_case[2])\n\n    print '---'",
      -0.85791015625
    ],
    [
      "return round(a + b + c, 2)\n\n# Write a function named is_triangle() that takes three values and returns True\n# if the three values form a triangle, False otherwise.\n\n# Test your solution using the provided triangle_area_test_cases\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "return round(a + b + c, 2)\n\n# Test Cases\n# Test 1\nprint triangle_area(3, 4, 5) == 6.00\n# Test 2\nprint triangle_area(1, 2, 10) == -1",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b + c) / 2.0\n\ndef triangle_area_test():\n    '''\n    Test case for triangle_area function\n    '''\n    assert(triangle_area(3, 4, 5) == 6.00)\n    assert(triangle_area(1, 2, 10) == -1)\n    assert(triangle_area(2, 5, 6) == 6.00)\n    assert(triangle_area(1, 3, 4) == 6.00)\n\ndef test_triangle_area():\n    '''\n    Test the triangle area function\n    '''\n    triangle_area_test()\n\nif __name__ == '__main__':\n    test_triangle_area()",
      -0.8583984375
    ],
    [
      "return abs((a + b + c) / 2.0)\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the\n    triangle is a valid triangle. Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0",
      -0.8583984375
    ],
    [
      "return (a + b + c) / 2\n\ndef main():\n    num_triangles = int(input())\n    triangles = []\n    for i in range(num_triangles):\n        triangles.append(list(map(int, input().rstrip().split())))\n    for triangle in triangles:\n        area = triangle_area(*triangle)\n        print(area)\n    \nmain()",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n#print triangle_area(3, 4, 5)\n#print triangle_area(1, 2, 10)",
      -0.8583984375
    ],
    [
      "return (a + b + c) / 2\n\ndef main():\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "return abs(a + b + c - (a + b + c)) / 2\n\ndef main():\n    '''\n    Main function.\n    '''\n    while True:\n        print(triangle_area(int(input(\"Enter a: \")), int(input(\"Enter b: \")), int(input(\"Enter c: \"))))\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "return (a + b + c) / 2.0\n\ndef main():\n    print triangle_area(3, 4, 5)\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "return ((a + b + c) / 2.0)**2\n\ndef main():\n    '''\n    Run a series of tests to make sure the triangle_area function is working properly.\n    '''\n    a = 3\n    b = 4\n    c = 5\n    print triangle_area(a, b, c)\n    a = 1\n    b = 2\n    c = 10\n    print triangle_area(a, b, c)\n    a = 4\n    b = 3\n    c = 5\n    print triangle_area(a, b, c)\n    a = 4\n    b = 3\n    c = 1\n    print triangle_area(a, b, c)\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "return round(a * b / 2, 2) if a > b > c else -1\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a + b\n\ndef main():\n    '''\n    Create an array of triangle areas that has the same number of elements as\n    the number of triangles in the set of triangle areas. \n    Then find the minimum triangle area and return its index.\n    '''\n    triangle_areas = []\n    for i in range(len(triangle_areas)):\n        triangle_areas.append(triangle_area(triangle_areas[i], triangle_areas[i+1], triangle_areas[i+2]))\n    min_triangle_area = min(triangle_areas)\n    print(\"The minimum triangle area is {0}\".format(min_triangle_area))\n    print(\"The index of the triangle area with minimum triangle area is {0}\".format(min_triangle_area_index(triangle_areas, min_triangle_area)))\n\nif __name__ == \"__main__\":\n    main()",
      -1.3310546875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a + b\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    make a triangle. Otherwise return False.\n    Three sides make a triangle when the sum of any two sides is greater than the third\n    side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c)!= -1\n\ndef is_square(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    make a square. Otherwise return False.\n    Three sides make a square if the sum of the three sides is greater than the \n    length of the longest side.\n    Example:\n    is_square(3, 4, 5) == False\n    is_square(1, 2, 10) == True\n    '''\n    if a + b > c:\n        return False\n    else:\n        return True\n\ndef is_rectangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    make a rectangle. Otherwise return False.\n    Three sides make a rectangle if the sum of the three sides is equal to the \n    length of the longest side.\n    Example:\n    is_rectangle(3, 4, 5) == False\n    is_rectangle(1, 2, 10) == True\n    '''\n    if a + b == c:\n        return True\n    else:\n        return False\n\ndef main():\n    #print triangle_area(1, 2, 3)\n    #print triangle_area(3, 4, 5)\n    print is_triangle(1, 2, 3)\n    print is_triangle(1, 2, 10)\n    print is_square(1, 2, 3)\n    print is_square(1, 2, 10)\n    print is_rectangle(1, 2, 3)",
      -1.3603515625
    ],
    [
      "return (a + b + c) / 2 if (a + b + c) > 0 else -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter\n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2 if (a + b + c) > 0 else -1\n\ndef triangle_area_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area and perimeter\n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_perimeter(3, 4, 5) == 6.00\n    triangle_area_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2 if (a + b + c) > 0 else -1\n\nif __name__ == '__main__':\n    print triangle_area(3, 4, 5)\n    print triangle_area(1, 2, 10)\n    print triangle_perimeter(3, 4, 5)\n    print triangle_perimeter(1, 2, 10)\n    print triangle_area_perimeter(3, 4, 5)\n    print triangle_area_perimeter(1, 2, 10)",
      -1.5126953125
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b) / 2.0\n\ndef area_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    return math.sqrt(a * b * c)\n\nif __name__ == \"__main__\":\n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert triangle_area(3, 4, 5) == 6.0, \"Test triangle 1\"\n    assert triangle_area(1, 2, 10) == -1, \"Test triangle 2\"\n    assert area_of_triangle(3, 4, 5) == 6.0, \"Test triangle 3\"\n    assert area_of_triangle(1, 2, 10) == -1, \"Test triangle 4\"",
      -1.5732421875
    ],
    [
      "return round(a + b + c, 2)\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2)\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides form a valid triangle, otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_perimeter(a, b, c) >= 0\n\ndef is_valid_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides form a valid triangle, otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_valid_triangle(3, 4, 5) == True\n    is_valid_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) >= 0\n\ndef main():\n    print(triangle_area(3, 4, 5))\n    print(triangle_perimeter(3, 4, 5))\n    print(is_triangle(3, 4, 5))\n    print(is_valid_triangle(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_perimeter(1, 2, 10))\n    print(is_tri",
      -1.578125
    ],
    [
      "return (a+b+c) / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 10.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a+b+c)\n\ndef triangle_perimeter_round(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_round(3, 4, 5) == 10.00\n    triangle_perimeter_round(1, 2, 10) == -1\n    '''\n    return (a+b+c) / 2.0\n\ndef triangle_area_round(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_round(3, 4, 5) == 6.00\n    triangle_area_round(1, 2, 10) == -1\n    '''\n    return (a+b+c) / 2.0\n\ndef triangle_perimeter_round_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides",
      -1.646484375
    ],
    [
      "return (a + b + c) / 2\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    three sides form a valid triangle. Otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef is_valid_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    three sides form a valid triangle. Otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_valid_triangle(3, 4, 5) == True\n    is_valid_triangle(1, 2, 10) == False\n    '''\n    return is_triangle(a, b, c) and is_triangle(b, c, a) and is_triangle(c, a, b)\n\ndef is_triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of \n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle_area(3, 4, 5) == 6.00\n    is_triangle_area(1, 2, 10) == -1\n    '''\n    return triangle_area(a, b, c)\n\ndef is_valid_triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    three sides form a valid triangle. Otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater",
      -1.658203125
    ],
    [
      "if a + b > c or a + c > b or b + c > a:\n        return -1\n    else:\n        return round(a * b / 2, 2)\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a valid triangle. Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return False\n    else:\n        return True\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter\n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return -1\n    else:\n        return round(a + b + c, 2)\n\ndef is_triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a valid triangle. Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle_perimeter(3, 4, 5) == True\n    is_triangle_perimeter(1, 2, 10) == False\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return False\n    else:\n        return True",
      -1.94921875
    ],
    [
      "return abs(a+b+c-2*math.sqrt(a*b*c))\n\ndef main():\n    # Test Cases\n    # Test case 1:\n    # a = 3, b = 4, c = 5\n    # Result: 6.00\n    # Test case 2:\n    # a = 1, b = 2, c = 10\n    # Result: -1\n    a = 3\n    b = 4\n    c = 5\n    print triangle_area(a, b, c)\n\nif __name__ == \"__main__\":\n    main()",
      -1.95703125
    ],
    [
      "return round(a + b + c, 2)\n    \ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2)\n    \ndef area_of_a_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_a_triangle(3, 4, 5) == 6.00\n    area_of_a_triangle(1, 2, 10) == -1\n    '''\n    return round(a * b, 2)\n    \ndef perimeter_of_a_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    perimeter_of_a_triangle(3, 4, 5) == 7.00\n    perimeter_of_a_triangle(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2)\n    \ndef main():\n    # Test cases\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_perimeter(3, 4",
      -1.9921875
    ],
    [
      "if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c) / 2\n    else:\n        return -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 10.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c)\n    else:\n        return -1\n\ndef triangle_area_by_side(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_by_side(3, 4, 5) == 6.00\n    triangle_area_by_side(1, 2, 10) == -1\n    '''\n    if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c) / 2\n    else:\n        return -1\n\ndef triangle_perimeter_by_side(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_by_side(3, 4,",
      -2.203125
    ],
    [
      "if (a + b > c and a + c > b and b + c > a):\n        return (a + b + c) / 2\n    else:\n        return -1\n\n\n#print triangle_area(3, 4, 5)\n\ntriangles = [\n    [3, 4, 5],\n    [3, 4, 6],\n    [3, 5, 6],\n    [4, 5, 6],\n    [4, 6, 5],\n    [4, 6, 7],\n    [4, 7, 6],\n    [5, 6, 7],\n    [5, 7, 6],\n    [5, 7, 8],\n    [5, 8, 7],\n    [6, 7, 8],\n    [6, 8, 7],\n    [6, 8, 9],\n    [6, 9, 8],\n    [6, 9, 10],\n    [7, 8, 10],\n    [7, 10, 8],\n    [7, 10, 9],\n    [8, 9, 10],\n    [8, 10, 9],\n    [8, 10, 11],\n    [9, 10, 11],\n    [9, 11, 10],\n    [9, 11, 12],\n    [10, 11, 12],\n    [10, 12, 11],\n    [11, 12, 11]\n]\n\nfor triangle in triangles:\n    print triangle_area(triangle[0], triangle[1], triangle[2])",
      -2.701171875
    ],
    [
      "if a + b > c:\n        return -1\n    return round(a * b / 2, 2)\n\ndef is_valid_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return true if the triangle\n    is a valid triangle. Otherwise return false.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_valid_triangle(3, 4, 5) == True\n    is_valid_triangle(1, 2, 10) == False\n    '''\n    return a + b > c and a + c > b and b + c > a\n\ndef main():\n    '''\n    Given the values of three sides of a triangle, calculate the area of the triangle.\n    Return the area rounded to 2 decimal points if the triangle is a valid triangle. \n    Otherwise return -1\n    '''\n    a = input('Enter the length of the first side of the triangle: ')\n    b = input('Enter the length of the second side of the triangle: ')\n    c = input('Enter the length of the third side of the triangle: ')\n    if is_valid_triangle(a, b, c):\n        print('The triangle is a valid triangle.')\n        print(triangle_area(a, b, c))\n    else:\n        print('The triangle is not a valid triangle.')\n\nif __name__ == '__main__':\n    main()",
      -3.486328125
    ],
    [
      "return round((a + b + c) / 2, 2)\n\nif __name__ == \"__main__\":\n    # Test 1\n    assert triangle_area(3, 4, 5) == 6.00\n    # Test 2\n    assert triangle_area(1, 2, 10) == -1\n    # Test 3\n    assert triangle_area(3, 4, 5.5) == 6.00\n    # Test 4\n    assert triangle_area(1, 2, 10.5) == -1\n    # Test 5\n    assert triangle_area(3.5, 4.5, 5.5) == 6.00\n    # Test 6\n    assert triangle_area(1.5, 2.5, 10.5) == -1",
      -3.4921875
    ],
    [
      "s1 = max(a, b)\n    s2 = max(c, s1)\n    return s2 - s1 if s2 > s1 else -1\n\ndef triangle_area_recursive(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_recursive(3, 4, 5) == 6.00\n    triangle_area_recursive(1, 2, 10) == -1\n    '''\n    if a < b or b < c or c < a:\n        return -1\n    else:\n        return (a + b + c) / 2.0\n\ndef triangle_area_iterative(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_iterative(3, 4, 5) == 6.00\n    triangle_area_iterative(1, 2, 10) == -1\n    '''\n    area = 0\n    for i in range(0, len(a)):\n        area += a[i]\n    for i in range(0, len(b)):\n        area += b[i]\n    for i in range(0, len(c)):\n        area += c[i]\n    return area / 2.0\n\ndef triangle_area_iterative_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side",
      -3.49609375
    ],
    [
      "return (b*c)/2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a+b+c)\n\ndef main():\n    print triangle_area(3, 4, 5)\n    print triangle_perimeter(3, 4, 5)\n    print triangle_area(1, 2, 10)\n    print triangle_perimeter(1, 2, 10)\n\nif __name__ == '__main__':\n    main()",
      -3.54296875
    ],
    [
      "return (a + b + c) / 2.0\n\nif __name__ == \"__main__\":\n    # Test\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_area(1, 2, 3))\n    print(triangle_area(2, 3, 4))\n    print(triangle_area(5, 6, 7))\n    print(triangle_area(8, 9, 10))\n    print(triangle_area(6, 7, 8))\n    print(triangle_area(5, 6, 8))\n    print(triangle_area(3, 7, 8))\n    print(triangle_area(5, 6, 8))\n    print(triangle_area(5, 6, 7))\n    print(triangle_area(5, 6, 6))",
      -3.564453125
    ],
    [
      "return (a + b + c) / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 10.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2.0\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a valid triangle, otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return (a + b + c) / 2.0 == triangle_area(a, b, c)\n\ndef main():\n    '''\n    Input:\n    The first line contains three space-separated integers, a, b, and c. \n    The second line contains three space-separated integers, a, b, and c. \n    The third line contains three space-separated integers, a, b, and c. \n    '''\n    a, b, c = [int(x) for x in input().split()]\n    a, b, c = [int(x) for x in input().split()]\n    a, b, c = [int(x) for x in input().split()]\n    print(triangle_area(a, b, c))\n    print(triangle_perimeter(a, b, c))\n    if is_triangle(a, b, c):\n        print(\"TRIANGLE\")\n    else:\n        print(\"NOT TRIANGLE\")\n\nif __name__ == '__main",
      -4.21484375
    ],
    [
      "if (a + b > c):\n        if (a + c > b):\n            if (b + c > a):\n                return (a + b + c) / 2.0\n            else:\n                return -1\n        else:\n            if (b + c > a):\n                return (b + c + a) / 2.0\n            else:\n                return -1\n    else:\n        if (a + c > b):\n            if (a + c > b):\n                return (a + b + c) / 2.0\n            else:\n                return -1\n        else:\n            if (b + c > a):\n                return (b + c + a) / 2.0\n            else:\n                return -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if (a + b > c):\n        if (a + c > b):\n            if (b + c > a):\n                return (a + b + c)\n            else:\n                return -1\n        else:\n            if (b + c > a):\n                return (b + c + a)\n            else:\n                return -1\n    else:\n        if (a + c > b):\n            if (a + c > b):\n                return (a + b + c)\n            else:\n                return -1\n        else:\n            if (b + c > a):\n                return (b + c + a)\n            else:\n                return -1\n\ndef triangle_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the volume of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle.",
      -4.26171875
    ],
    [
      "return round(a + b + c, 2)\n    \ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 8.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2)\n    \ndef area_triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_triangle_perimeter(3, 4, 5) == 6.00\n    area_triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(triangle_area(a, b, c), 2)\n    \ndef area_triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_triangle_area(3, 4, 5) == 6.00\n    area_triangle_area(1, 2, 10) == -1\n    '''\n    return round(triangle_area(a, b, c), 2)\n    \ndef perimeter_triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a",
      -5.17578125
    ],
    [
      "return round(abs((a + b + c) / 2.0), 2)\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(abs(a + b + c), 2)\n\ndef area_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    return round(abs(a * b * c / 2.0), 2)\n\ndef perimeter_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    perimeter_of_triangle(3, 4, 5) == 6.00\n    perimeter_of_triangle(1, 2, 10) == -1\n    '''\n    return round(abs(a + b + c), 2)\n\ndef main():\n    '''\n    Test the area_of_triangle, perimeter_of_triangle, triangle_area, and triangle_perimeter\n    functions.\n    '''\n    # Test the",
      -5.25
    ],
    [
      "return round(a + b + c, 2)\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return true if the three sides\n    make a valid triangle.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return (a + b > c) and (a + c > b) and (b + c > a)\n\ndef main():\n    '''\n    Given the length of a triangle, find the area of the triangle rounded to 2 decimal points\n    if the triangle is a valid triangle. Otherwise return -1\n    '''\n    triangle = input('Enter the length of the triangle: ')\n    a = int(triangle[0:triangle.index(' ')])\n    b = int(triangle[triangle.index(' ')+1:])\n    c = int(triangle[triangle.index(' ')+2:])\n    area = triangle_area(a, b, c)\n    if is_triangle(a, b, c):\n        print(area)\n    else:\n        print('The triangle is not valid')\n        print('The area is: {}'.format(area))\n\nif __name__ == '__main__':\n    main()",
      -5.31640625
    ],
    [
      "return abs(a + b - c) / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 10.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return abs(a + b + c)\n\ndef triangle_area_perimeter_ratio(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_perimeter_ratio(3, 4, 5) == 6.00\n    triangle_area_perimeter_ratio(1, 2, 10) == -1\n    '''\n    return abs(triangle_area(a, b, c)) / triangle_perimeter(a, b, c)\n\ndef main():\n    '''\n    Test cases for the triangle_area_perimeter_ratio function\n    '''\n    print(triangle_area_perimeter_ratio(3, 4, 5))\n    print(triangle_area_perimeter_ratio(1, 2, 10))\n    print(triangle_area_perimeter_ratio(5, 10, 15))\n\nif __name__ == '__main__':\n    main()",
      -5.34375
    ],
    [
      "if a+b <= c:\n        return float(a+b)/2\n    elif a+c <= b:\n        return float(a+c)/2\n    elif b+c <= a:\n        return float(b+c)/2\n    else:\n        return -1\n    \ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a+b <= c:\n        return float(a+b)\n    elif a+c <= b:\n        return float(a+c)\n    elif b+c <= a:\n        return float(b+c)\n    else:\n        return -1\n\ndef triangle_circumference(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_circumference(3, 4, 5) == 6.00\n    triangle_circumference(1, 2, 10) == -1\n    '''\n    if a+b <= c:\n        return float(a+b)*(3*a-2*b+c)\n    elif a+c <= b:\n        return float(a+c)*(3*a-2*c+b)\n    elif b+c <= a:\n        return float(b+c)*(3*b-2*a+c)\n    else:\n        return -1\n    \ndef area_triangle(a, b, c):\n    '''\n    Given",
      -5.46484375
    ],
    [
      "return round(a * b / 2, 2) if (a > 0 and b > 0 and c > 0) else -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2) if (a > 0 and b > 0 and c > 0) else -1\n\ndef triangle_area_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_perimeter(3, 4, 5) == 6.00\n    triangle_area_perimeter(1, 2, 10) == -1\n    '''\n    return round(triangle_area(a, b, c), 2) if (a > 0 and b > 0 and c > 0) else -1\n\ndef main():\n    # Your code here\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    print(triangle_area_perimeter(a, b, c))\n\nif __name__ == \"__main__\":\n    main()",
      -5.5234375
    ],
    [
      "if a + b > c and a + c > b and b + c > a:\n        return round(a * b * c / 2, 2)\n    else:\n        return -1\n\ndef get_triangle_area(sides):\n    '''\n    Given the length of each side of a triangle. Return the area of the triangle.\n    Example:\n    get_triangle_area([3, 4, 5]) == 6.00\n    get_triangle_area([1, 2, 10]) == -1\n    '''\n    if len(sides) == 3:\n        return triangle_area(sides[0], sides[1], sides[2])\n    else:\n        return -1\n\ndef is_triangle(sides):\n    '''\n    Given the length of each side of a triangle. Return True if the triangle is \n    valid, False otherwise.\n    Example:\n    is_triangle([3, 4, 5]) == True\n    is_triangle([1, 2, 10]) == False\n    '''\n    return get_triangle_area(sides)!= -1\n\ndef get_triangle_perimeter(sides):\n    '''\n    Given the length of each side of a triangle. Return the perimeter of the triangle.\n    Example:\n    get_triangle_perimeter([3, 4, 5]) == 6\n    get_triangle_perimeter([1, 2, 10]) == -1\n    '''\n    if len(sides) == 3:\n        return triangle_area(sides[0], sides[1], sides[2]) / 2\n    else:\n        return -1\n\ndef is_triangle_perimeter(sides):\n    '''\n    Given the length of each side of a triangle. Return True if the triangle is \n    valid, False otherwise.\n    Example:\n    is_triangle_perimeter([3, 4, 5]) == True\n    is_triangle_perimeter([1, 2, 10]) == False\n    '''\n    return get_triangle_perimeter(sides)!= -1\n\ndef get_triangle_circumference(sides):\n    '''\n    Given the",
      -5.55078125
    ],
    [
      "return (a + b + c) / 2\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return true if the three\n    sides form a valid triangle, otherwise return false.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef is_square(a, b):\n    '''\n    Given the lengths of the two sides of a square. Return true if the two sides\n    of the square are equal, otherwise return false.\n    Example:\n    is_square(3, 4) == True\n    is_square(1, 2) == False\n    '''\n    return (a == b) or (a == b - 1)\n\ndef is_rectangle(a, b):\n    '''\n    Given the lengths of the two sides of a rectangle. Return true if the two\n    sides of the rectangle are equal, otherwise return false.\n    Example:\n    is_rectangle(3, 4) == True\n    is_rectangle(1, 2) == False\n    '''\n    return (a == b) or (a == b - 1)\n\ndef is_triangle_or_square(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle or a square. Return true \n    if the three sides form a valid triangle or square, otherwise return false.\n    Example:\n    is_triangle_or_square(3, 4, 5) == True\n    is_triangle_or_square(1, 2, 10) == False\n    '''\n    return is_triangle(a, b, c) or is_square(a, b)\n\ndef is_triangle_or_square_or_rectangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle, square or rectangle. \n    Return true if the three sides form a",
      -5.55859375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a + b - c\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a + b + c\n\ndef main():\n    a = float(input('Enter the length of the first side: '))\n    b = float(input('Enter the length of the second side: '))\n    c = float(input('Enter the length of the third side: '))\n    print('Area of a triangle is:', triangle_area(a, b, c))\n    print('Perimeter of a triangle is:', triangle_perimeter(a, b, c))\n\nmain()",
      -5.6015625
    ],
    [
      "if (a + b > c) and (a + c > b) and (b + c > a):\n        return round((a*b + c*c) / 2, 2)\n    else:\n        return -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if (a + b > c) and (a + c > b) and (b + c > a):\n        return round((a + b + c) / 2, 2)\n    else:\n        return -1\n\ndef test_triangle_area(a, b, c):\n    '''\n    Test the triangle area\n    '''\n    print('Triangle area:'+ str(triangle_area(a, b, c)))\n\ndef test_triangle_perimeter(a, b, c):\n    '''\n    Test the triangle perimeter\n    '''\n    print('Triangle perimeter:'+ str(triangle_perimeter(a, b, c)))\n\ndef main():\n    '''\n    Main program\n    '''\n    test_triangle_area(3, 4, 5)\n    test_triangle_perimeter(3, 4, 5)\n\nif __name__ == '__main__':\n    main()",
      -5.8203125
    ],
    [
      "return round(abs(a + b + c) / 2, 2)\n\ndef test_triangle_area():\n    assert triangle_area(3, 4, 5) == 6.00\n    assert triangle_area(1, 2, 10) == -1\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    three sides form a valid triangle. Otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef test_is_triangle():\n    assert is_triangle(3, 4, 5) == True\n    assert is_triangle(1, 2, 10) == False\n\ndef main():\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(is_triangle(3, 4, 5))\n    print(is_triangle(1, 2, 10))\n\nif __name__ == '__main__':\n    main()",
      -6.08984375
    ],
    [
      "if a + b > c:\n        return 0\n    elif a + c > b:\n        return 0\n    else:\n        return a * b / 2.0\n\n\ndef square_area(a, b):\n    '''\n    Given the lengths of the two sides of a square, return the area of the square rounded to 2 decimal points if the two sides form a square. \n    Otherwise return -1\n    Two sides make a square when the sum of the two sides is greater than the length of the square.\n    Example:\n    square_area(3, 4) == 9.00\n    square_area(1, 2) == -1\n    '''\n    if a + b > a:\n        return 0\n    else:\n        return a * b / 2.0\n\n\ndef is_square(a, b):\n    '''\n    Given the lengths of the two sides of a square, return True if the two sides\n    form a square, False otherwise.\n    Two sides make a square if the sum of the two sides is greater than the length of the square.\n    Example:\n    is_square(3, 4) == True\n    is_square(1, 2) == False\n    '''\n    if a + b > a:\n        return True\n    else:\n        return False\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle, return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return 0\n    elif a + c > b:\n        return 0\n    else:\n        return a + b + c\n\n\ndef square_perimeter(a, b):\n    '''\n    Given the lengths of the two sides of a square, return the perimeter of the square rounded to 2 decimal points if the two sides form a square",
      -6.16015625
    ],
    [
      "if a > b and b > c:\n        return round((a + b + c) / 2, 2)\n    elif a > b and b == c:\n        return round(a, 2)\n    elif a == b and b > c:\n        return round(b, 2)\n    else:\n        return -1\n\ndef triangle_area_method(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if a > b and b > c:\n        return (a + b + c) / 2\n    elif a > b and b == c:\n        return a\n    elif a == b and b > c:\n        return b\n    else:\n        return -1\n\ndef test_triangle_area():\n    assert triangle_area(3, 4, 5) == 6.0\n    assert triangle_area(1, 2, 10) == -1\n\ndef test_triangle_area_method():\n    assert triangle_area_method(3, 4, 5) == 6.0\n    assert triangle_area_method(1, 2, 10) == -1\n\nif __name__ == \"__main__\":\n    test_triangle_area()\n    test_triangle_area_method()",
      -6.171875
    ],
    [
      "if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c) / 2\n    else:\n        return -1\n\ndef triangle_area_sum(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the sum of the \n    triangle area rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_sum(3, 4, 5) == 6\n    triangle_area_sum(1, 2, 10) == -1\n    '''\n    if (a + b > c) and (a + c > b) and (b + c > a):\n        return (a + b + c) / 2\n    else:\n        return -1\n\nif __name__ == '__main__':\n    # Test cases\n    assert triangle_area(3, 4, 5) == 6.00\n    assert triangle_area(1, 2, 10) == -1\n    assert triangle_area_sum(3, 4, 5) == 6\n    assert triangle_area_sum(1, 2, 10) == -1",
      -6.44921875
    ],
    [
      "return (a + b + c) / 2 if (a + b > c) and (a + c > b) and (b + c > a) else -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return a + b + c if (a + b > c) and (a + c > b) and (b + c > a) else -1\n\ndef get_triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2 if (a + b > c) and (a + c > b) and (b + c > a) else -1\n\ndef get_triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return a + b + c if (a + b",
      -6.515625
    ],
    [
      "if a > b and a > c:\n        if b > c:\n            return a*c/2\n        else:\n            return b*c/2\n    elif b > a and b > c:\n        if a > c:\n            return b*c/2\n        else:\n            return a*c/2\n    elif c > a and c > b:\n        if a > b:\n            return c*a/2\n        else:\n            return c*b/2\n    return -1\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the\n    triangle is a valid triangle, False otherwise.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    if a > b and a > c:\n        if b > c:\n            return True\n        else:\n            return False\n    elif b > a and b > c:\n        if a > c:\n            return True\n        else:\n            return False\n    elif c > a and c > b:\n        if a > b:\n            return True\n        else:\n            return False\n    return False\n\ndef is_rectangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a rectangle. Return True if the\n    rectangle is a valid rectangle, False otherwise.\n    Two sides of a rectangle must be equal to the sum of the other two sides.\n    Example:\n    is_rectangle(3, 4, 5) == True\n    is_rectangle(1, 2, 10) == False\n    '''\n    if a == b and b == c:\n        return True\n    elif a > b and b > c:\n        if a == c:\n            return True\n        else:\n            return False\n    elif a < b and b < c:\n        if a == b:\n            return True\n        else:\n            return False\n    return False",
      -6.65625
    ],
    [
      "a, b, c = map(float, (a, b, c))\n    if a + b > c:\n        return -1\n    return a + b\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    a, b, c = map(float, (a, b, c))\n    if a + b > c:\n        return -1\n    return a + b\n\ndef triangle_perimeter_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_area(3, 4, 5) == 6.00\n    triangle_perimeter_area(1, 2, 10) == -1\n    '''\n    a, b, c = map(float, (a, b, c))\n    if a + b > c:\n        return -1\n    return a + b\n\ndef main():\n    print \"Enter three sides of the triangle: \"\n    a, b, c = map(float, raw_input().split())\n    print \"Area: %.2f\" % triangle_area(a, b, c)\n    print \"Perimeter: %.2f\" % triangle_perimeter(a, b, c)\n    print \"Perimeter Area: %.2f\" % triangle_perimeter_area(a, b, c)\n\nif __name__ == '__main__':\n    main()",
      -6.8203125
    ],
    [
      "return ((a + b + c) / 2) ** 2\n\ndef triangle_area_rounded(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_rounded(3, 4, 5) == 6.00\n    triangle_area_rounded(1, 2, 10) == 6.00\n    '''\n    return (round(triangle_area(a, b, c), 2))\n\ndef triangle_area_rounded_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_rounded(3, 4, 5) == 6.00\n    triangle_area_rounded(1, 2, 10) == 6.00\n    '''\n    return round(triangle_area(a, b, c), 2)\n\ndef triangle_area_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    return triangle_area(a, b, c)\n\ndef triangle_area_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle.",
      -6.90234375
    ],
    [
      "return ((a + b + c) / 2)**2\n\ndef test_triangle_area():\n    assert triangle_area(3, 4, 5) == 6.0\n    assert triangle_area(1, 2, 10) == -1\n\ndef pentagon_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a pentagon. Return the area of\n    the pentagon rounded to 2 decimal points if the three sides form a valid pentagon. \n    Otherwise return -1\n    Three sides make a valid pentagon when the sum of any two sides is greater \n    than the fourth side.\n    Example:\n    pentagon_area(3, 4, 5) == 5.00\n    pentagon_area(1, 2, 10) == -1\n    '''\n    return (a + b + c + (a + b) / 2 + (b + c) / 2)**2\n\ndef test_pentagon_area():\n    assert pentagon_area(3, 4, 5) == 5.0\n    assert pentagon_area(1, 2, 10) == -1\n\ndef square_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a square. Return the area of\n    the square rounded to 2 decimal points if the three sides form a valid square. \n    Otherwise return -1\n    Three sides make a valid square when the sum of any two sides is greater \n    than the fourth side.\n    Example:\n    square_area(3, 4, 5) == 9.00\n    square_area(1, 2, 10) == -1\n    '''\n    return ((a + b) / 2)**2\n\ndef test_square_area():\n    assert square_area(3, 4, 5) == 9.0\n    assert square_area(1, 2, 10) == -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two",
      -6.91015625
    ],
    [
      "return round(0.5 * (a + b + c), 2)\n\ndef area_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the \n    triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    return round(0.5 * (a + b + c), 2)\n\ndef area_of_triangle_with_decimal_rounding(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the \n    triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle_with_decimal_rounding(3, 4, 5) == 6.00\n    area_of_triangle_with_decimal_rounding(1, 2, 10) == -1\n    '''\n    return round(0.5 * (a + b + c), 2)\n\ndef area_of_rectangle(a, b):\n    '''\n    Given the lengths of the sides of a rectangle. Return the area of the \n    rectangle rounded to 2 decimal points if the three sides form a valid rectangle. \n    Otherwise return -1\n    Two sides make a valid rectangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_rectangle(3, 4) == 6.00\n    area_of_rectangle(1, 2) == -1\n    '''\n    return round(0.5 * (a + b), 2)\n\ndef area_of_rectangle_with_decimal_rounding(a, b):",
      -6.93359375
    ],
    [
      "if a + b > c and a + c > b and b + c > a:\n        return round(a*b/2, 2)\n    else:\n        return -1\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    make a valid triangle and False otherwise.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) == -1\n\ndef is_valid_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    make a valid triangle and False otherwise.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_valid_triangle(3, 4, 5) == True\n    is_valid_triangle(1, 2, 10) == True\n    '''\n    return triangle_area(a, b, c)!= -1\n\ndef main():\n    '''\n    main() prints the area of the triangle with the given side lengths and\n    returns True if the three sides make a valid triangle and False otherwise.\n    Example:\n    main(3, 4, 5) == True\n    main(1, 2, 10) == False\n    '''\n    a, b, c = map(int, input().split())\n    return is_valid_triangle(a, b, c)\n\nif __name__ == '__main__':\n    while True:\n        try:\n            a, b, c = map(int, input().split())\n            break\n        except:\n            continue\n    if main(a, b, c):\n        print(\"Valid Triangle\")\n    else:\n        print(\"Invalid Triangle\")",
      -7.0703125
    ],
    [
      "if (a + b > c):\n        return round(a * b / 2, 2)\n    else:\n        return -1\n\ndef triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if (a + b > c):\n        return round(a * b / 2, 2)\n    else:\n        return -1\n\ndef triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if (a + b > c):\n        return round(a * b / 2, 2)\n    else:\n        return -1\n\ndef triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if (a + b > c):\n        return round(a * b / 2, 2)\n    else:\n        return -1\n\ndef triangle_area(a, b",
      -7.2265625
    ],
    [
      "a = float(a)\n    b = float(b)\n    c = float(c)\n    if a < b or b < c or c < a:\n        return -1\n    return (a + b + c) / 2.0\n\ndef triangle_area_new(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    a = float(a)\n    b = float(b)\n    c = float(c)\n    if a < b or b < c or c < a:\n        return -1\n    return round(a * b + b * c + c * a, 2)\n\ndef triangle_area_old(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    a = float(a)\n    b = float(b)\n    c = float(c)\n    if a < b or b < c or c < a:\n        return -1\n    return round(a * b + b * c + c * a, 2)\n\nif __name__ == '__main__':\n    print triangle_area(3, 4, 5)\n    print triangle_area_new(3, 4, 5)\n    print triangle_area_old(3, 4, 5)",
      -7.30078125
    ],
    [
      "return abs(a + b - c) / 2.0\n\ndef main():\n    '''\n    This program will display a triangle and the area of the triangle\n    '''\n    # The triangle will be displayed on the screen\n    print(\"\\nThis program will display a triangle and the area of the triangle\\n\")\n    print(\"\\nA triangle has 3 sides.\\n\")\n    print(\"The triangle is given by:\")\n    print(\"\\tA + B + C = 2 * A\")\n    \n    # This will be the area of the triangle\n    # The area of a triangle is the sum of the three sides\n    area = triangle_area(3, 4, 5)\n    \n    # Display the triangle\n    print(\"\\nThe area of the triangle is {}\".format(area))\n    \n    # Display the triangle\n    print(\"\\nThe triangle is given by:\")\n    print(\"\\tA + B + C = 2 * A\")\n    print(\"\\nThe area of the triangle is {}\".format(area))\n    \nif __name__ == \"__main__\":\n    main()",
      -7.33984375
    ],
    [
      "# a*b + b*c + c*a\n    # a*b + b*c + c*a\n    return a * b + b * c + c * a\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a valid triangle, otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef main():\n    # your code goes here\n    # test cases\n    print \"Test case 1: area of triangle with 3 sides\"\n    print \"Expected: 6.00\"\n    print \"Actual: %f\" % triangle_area(3, 4, 5)\n    print \"Test case 2: area of triangle with 1 side\"\n    print \"Expected: -1\"\n    print \"Actual: %f\" % triangle_area(1, 2, 10)\n    print \"Test case 3: area of triangle with 4 sides\"\n    print \"Expected: -1\"\n    print \"Actual: %f\" % triangle_area(3, 4, 5)\n    print \"Test case 4: area of triangle with 5 sides\"\n    print \"Expected: -1\"\n    print \"Actual: %f\" % triangle_area(3, 4, 5)\n    print \"Test case 5: area of triangle with 6 sides\"\n    print \"Expected: -1\"\n    print \"Actual: %f\" % triangle_area(3, 4, 5)\n    print \"Test case 6: area of triangle with 7 sides\"\n    print \"Expected: -1\"\n    print \"Actual: %f\" % triangle_area(3, 4, 5)\n    print \"Test case 7: area of triangle with 8 sides\"\n    print \"Expected: -1\"\n    print \"Actual: %f\" % triangle_area(3, 4, 5)\n    print \"",
      -7.63671875
    ],
    [
      "if a + b > c or a + c > b or b + c > a:\n        return -1\n    return (a + b + c) / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 8.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return -1\n    return (a + b + c) / 2.0\n\ndef triangle_circumference(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the circumference of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_circumference(3, 4, 5) == 8.00\n    triangle_circumference(1, 2, 10) == -1\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return -1\n    return (a + b + c) / 2.0\n\ndef main():\n    '''\n    Input:\n    A list of the three sides of a triangle.\n    Output:\n    The area of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    '''\n    print triangle_area([3, 4, 5])\n    print triangle_area([1, 2, 10])\n\nif __name__ == '__main__':\n    main()",
      -7.98828125
    ],
    [
      "return ((a+b)*c)/2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a+b+c)\n\ndef triangle_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the volume of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_volume(3, 4, 5) == 9.00\n    triangle_volume(1, 2, 10) == -1\n    '''\n    return (a*b*c)/2.0\n\ndef triangle_area_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_volume(3, 4, 5) == 9.00\n    triangle_area_volume(1, 2, 10) == -1\n    '''\n    return triangle_area(a, b, c)*triangle_volume(a, b, c)\n\ndef main():\n    print(triangle_area_volume(3, 4, 5))\n\nif __name__ == \"__main__\":\n    main()",
      -8.1640625
    ],
    [
      "if a + b > c and a + c > b and b + c > a:\n        return round(a * c / 2, 2)\n    else:\n        return -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c and a + c > b and b + c > a:\n        return round(a + b + c, 2)\n    else:\n        return -1\n\ndef triangle_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the volume of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_volume(3, 4, 5) == 8.00\n    triangle_volume(1, 2, 10) == -1\n    '''\n    if a + b > c and a + c > b and b + c > a:\n        return round(a * b * c / 2, 2)\n    else:\n        return -1\n\ndef triangle_perimeter_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_volume(3, 4, 5) == 7.00\n    triangle_perimeter_volume(1, 2, 10) == -",
      -8.390625
    ],
    [
      "return (a + b + c) / 2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2\n\ndef triangle_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return a tuple containing\n    the three sides of the triangle rounded to 2 decimal points.\n    Example:\n    triangle_sides(3, 4, 5) == (3.00, 4.00, 5.00)\n    triangle_sides(1, 2, 10) == (1.00, 2.00, 10.00)\n    '''\n    return (a, b, c)\n\ndef area_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    return triangle_area(a, b, c)\n\ndef perimeter_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:",
      -8.4453125
    ],
    [
      "return (a + b + c) / 2\n\ndef area_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2\n\ndef perimeter_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    perimeter_of_triangle(3, 4, 5) == 7.00\n    perimeter_of_triangle(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2\n\ndef area_of_triangle_with_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides",
      -8.5234375
    ],
    [
      "if (a + b < c or a + c < b or b + c < a):\n        return -1\n    else:\n        return round(a * b / 2, 2)\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if (a + b < c or a + c < b or b + c < a):\n        return -1\n    else:\n        return round(a + b + c, 2)\n\ndef main():\n    '''\n    Test case 1:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    Test case 2:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    test_cases = [\n        (triangle_area, 3, 4, 5),\n        (triangle_perimeter, 1, 2, 10)\n    ]\n    for test_case in test_cases:\n        print \"Test Case #1: \" + str(test_case[0](*test_case[1:]))\n        print \"Test Case #2: \" + str(test_case[0](*test_case[1:]))\n    \nif __name__ == '__main__':\n    main()",
      -8.65625
    ],
    [
      "return round(0.5 * (a + b + c), 2)\n\n\ndef square_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a square. Return the area of\n    the square rounded to 2 decimal points if the three sides form a valid square. \n    Otherwise return -1\n    Three sides make a valid square when the sum of any two sides is greater \n    than the third side.\n    Example:\n    square_area(3, 4, 5) == 10.00\n    square_area(1, 2, 10) == -1\n    '''\n    return round(0.5 * (a + b + c), 2)\n\n\ndef quadrilateral_area(a, b, c, d):\n    '''\n    Given the lengths of the four sides of a quadrilateral. Return the area of\n    the quadrilateral rounded to 2 decimal points if the four sides form a valid quadrilateral. \n    Otherwise return -1\n    Four sides make a valid quadrilateral when the sum of all four sides is greater \n    than the sum of the three sides.\n    Example:\n    quadrilateral_area(3, 4, 5, 6) == 12.00\n    quadrilateral_area(1, 2, 10, 20) == -1\n    '''\n    return round(0.5 * (a + b + c + d), 2)\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(0.5 * (a + b + c), 2)\n\n\ndef square_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a square. Return the perimeter of\n    the square rounded to 2",
      -8.7421875
    ],
    [
      "if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n        return float(a + b + c) / 2.0\n\ndef triangle_area_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n        return float(a + b + c) / 2.0\n\ndef triangle_area_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n        return float(a + b + c) / 2.0\n\ndef triangle_area_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when",
      -8.796875
    ],
    [
      "return (a + b + c) / 2\n\ndef triangle_area_old(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    return (a * b + a * c + b * c) / 2\n\ndef area_of_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2\n\ndef area_of_triangle_old(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area_of_triangle(3, 4, 5) == 6.00\n    area_of_triangle(1, 2, 10) == -1\n    '''\n    return (a * b + a * c + b * c) / 2\n\n\ndef main():\n    #print triangle_area(3, 4, 5)\n    #print triangle_area_old(3, 4, 5)\n    #print area_of_triangle(3, 4, 5)\n    #print area_of_",
      -9.0
    ],
    [
      "return abs(a + b + c - 2*max(a, b, c))\n\ndef is_valid_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    triangle is valid and False if it is not.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_valid_triangle(3, 4, 5) == True\n    is_valid_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) >= 0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter \n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return abs(a + b + c)\n\ndef is_valid_triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    triangle is valid and False if it is not.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_valid_triangle_perimeter(3, 4, 5) == True\n    is_valid_triangle_perimeter(1, 2, 10) == False\n    '''\n    return triangle_perimeter(a, b, c) >= 0\n\nif __name__ == '__main__':\n    print(is_valid_triangle(3, 4, 5))\n    print(is_valid_triangle_perimeter(3, 4, 5))",
      -9.28125
    ],
    [
      "if a+b > c:\n        return -1\n    return (a+b+c)/2.0\n\ndef triangle_area_error(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_error(3, 4, 5) == 6.00\n    triangle_area_error(1, 2, 10) == -1\n    '''\n    if a+b > c:\n        return -1\n    return (a+b+c)/2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a+b+c > 3:\n        return -1\n    return (a+b+c)/2.0\n\ndef triangle_perimeter_error(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_error(3, 4, 5) == 7.00\n    triangle_perimeter_error(1, 2, 10) == -1\n    '''\n    if a+b+c > 3:\n        return -1\n    return (a+b+c)/2.0\n\ndef main():\n    print",
      -10.46875
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b + c) / 2\n\n# Test cases\nassert(triangle_area(1, 2, 3) == 3.0)\nassert(triangle_area(3, 4, 5) == 6.0)\nassert(triangle_area(1, 2, 2) == 1.0)\nassert(triangle_area(1, 1, 1) == 1.0)\nassert(triangle_area(1, 2, 5) == -1)",
      -10.4921875
    ],
    [
      "return abs(a + b + c - 2 * min(a, b, c)) / 2.0\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter \n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return abs(a + b + c) / 2.0\n\n\ndef main():\n    '''\n    Test case:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    print('triangle_area(3, 4, 5) == %.2f' % triangle_area(3, 4, 5))\n    print('triangle_area(1, 2, 10) == %.2f' % triangle_area(1, 2, 10))\n\n    print('triangle_perimeter(3, 4, 5) == %.2f' % triangle_perimeter(3, 4, 5))\n    print('triangle_perimeter(1, 2, 10) == %.2f' % triangle_perimeter(1, 2, 10))\n\nif __name__ == '__main__':\n    main()",
      -11.2578125
    ],
    [
      "return abs(a + b - c) / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return abs(a + b + c) / 2.0\n\ndef triangle_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the volume of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_volume(3, 4, 5) == 6.00\n    triangle_volume(1, 2, 10) == -1\n    '''\n    return abs(a * b * c) / 2.0\n\nif __name__ == '__main__':\n    print('triangle_area(3, 4, 5) == %.2f' % triangle_area(3, 4, 5))\n    print('triangle_area(1, 2, 10) == %.2f' % triangle_area(1, 2, 10))\n    print('triangle_perimeter(3, 4, 5) == %.2f' % triangle_perimeter(3, 4, 5))\n    print('triangle_perimeter(1, 2, 10) == %.2f' % triangle_perimeter(1, 2, 10))\n    print('triangle_volume(3, 4, 5) == %.2f' % triangle_volume(3, 4, 5))\n    print('triangle_volume(1, 2, 10) == %.2f' % triangle_volume(1, 2, 10))",
      -11.2734375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * c / 2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a + b + c\n\ndef triangle_perimeter_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_area(3, 4, 5) == 6.00\n    triangle_perimeter_area(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a * c / 2\n\ndef triangle_perimeter_area_check(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_area_check(3, 4, 5) == 6.00\n    triangle_perimeter_area_check(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a * c / 2\n\ndef triangle_area_",
      -11.84375
    ],
    [
      "if a + b > c or a + c > b or b + c > a:\n        return -1\n    else:\n        return 0.5 * (a + b + c)\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c or a + c > b or b + c > a:\n        return -1\n    else:\n        return a + b + c\n\ndef main():\n    '''\n    Use the triangle function to find the area of a triangle\n    '''\n    a = int(input('Enter the first side of the triangle: '))\n    b = int(input('Enter the second side of the triangle: '))\n    c = int(input('Enter the third side of the triangle: '))\n    print('The area of the triangle is:'+ str(triangle_area(a, b, c)))\n    print('The perimeter of the triangle is:'+ str(triangle_perimeter(a, b, c)))\n\nif __name__ == '__main__':\n    main()",
      -12.2578125
    ],
    [
      "return (a + b + c) / 2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 9.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c) / 2\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three sides\n    form a valid triangle, otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return (a + b + c) / 2 > 0\n\ndef main():\n    # Test cases:\n    # a, b, c = 3, 4, 5\n    # a, b, c = 1, 2, 10\n    # a, b, c = -1, -1, -1\n    # a, b, c = 0, 0, 0\n    # a, b, c = 3, 4, 5\n    # a, b, c = 1, 2, 10\n    # a, b, c = -1, -1, -1\n    # a, b, c = 0, 0, 0\n    a, b, c = 3, 4, 5\n    print('Is triangle {0}? {1}'.format(a, is_triangle(a, b, c)))\n    print('Area of triangle {0}? {1}'.format(a, triangle_area(a, b, c)))\n    print('Perimeter of triangle {0}? {1}'.format(a, triangle_perimeter(a, b, c)))\n\nif __name",
      -12.28125
    ],
    [
      "return ((a + b + c) / 2) ** 2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter \n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 10.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return (a + b + c)\n\ndef area_of_circle(radius):\n    '''\n    Given the radius of a circle, return the area of the circle rounded to 2 decimal points if the circle is valid. \n    Otherwise return -1\n    Example:\n    area_of_circle(2) == 1.50\n    area_of_circle(3) == -1\n    '''\n    return (pi * radius ** 2) / 4\n\ndef perimeter_of_circle(radius):\n    '''\n    Given the radius of a circle, return the perimeter of the circle rounded to 2 decimal points if the circle is valid. \n    Otherwise return -1\n    Example:\n    perimeter_of_circle(2) == 4\n    perimeter_of_circle(3) == -1\n    '''\n    return (pi * radius ** 2)\n\ndef main():\n    print triangle_area(3, 4, 5)\n    print triangle_area(1, 2, 10)\n    print triangle_perimeter(3, 4, 5)\n    print triangle_perimeter(1, 2, 10)\n    print area_of_circle(2)\n    print perimeter_of_circle(2)\n\nif __name__ == '__main__':\n    main()",
      -12.765625
    ],
    [
      "return round(a + b + c, 2)\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter \n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2)\n\n\ndef triangle_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the volume \n    of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_volume(3, 4, 5) == 6.00\n    triangle_volume(1, 2, 10) == -1\n    '''\n    return round(a * b * c, 2)\n\n\ndef main():\n    '''\n    Tests the triangle functions using the provided triangle lengths\n    '''\n    print('testing triangle area...')\n    print('triangle_area(3, 4, 5) ==', triangle_area(3, 4, 5))\n    print('triangle_area(1, 2, 10) ==', triangle_area(1, 2, 10))\n\n    print('testing triangle perimeter...')\n    print('triangle_perimeter(3, 4, 5) ==', triangle_perimeter(3, 4, 5))\n    print('triangle_perimeter(1, 2, 10) ==', triangle_perimeter(1, 2, 10))\n\n    print('testing triangle volume...')\n    print('triangle_volume(3, 4, 5) ==', triangle_volume(3, 4, 5))\n    print('triangle_volume(1, 2, 10) ==', triangle_volume(1, 2, 10))",
      -13.1015625
    ],
    [
      "return (a + b + c) / 2\n\ndef area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area(3, 4, 5) == 6.00\n    area(1, 2, 10) == -1\n    '''\n    return triangle_area(a, b, c) / 2\n\ndef main():\n    '''\n    Input:\n        3, 4, 5\n    Output:\n        6.00\n    '''\n    test_cases = [\n        [3, 4, 5],\n        [1, 2, 10],\n        [4, 5, 6],\n        [1, 2, 3],\n        [2, 3, 4],\n        [3, 4, 5],\n        [3, 4, 6],\n        [4, 5, 6],\n        [2, 3, 4],\n        [3, 4, 5],\n        [2, 3, 5],\n        [3, 4, 5],\n        [3, 4, 6],\n        [2, 3, 6],\n        [3, 4, 6],\n        [3, 4, 7],\n        [3, 4, 8],\n        [4, 5, 6],\n        [4, 5, 7],\n        [4, 5, 8],\n        [4, 5, 9],\n        [4, 5, 10],\n        [4, 5, 11],\n        [5, 6, 7],\n        [5, 6, 8],\n        [5, 6, 9],\n        [5, 6, 10],\n        [5, 6, 11],\n        [5, 6, 12],\n        [5, 6, 13],\n        [5, 6, 14],\n        [5, 6, 15],\n        [6, 7, 8],\n        [6, 7, 9],\n        [6, 7, 10],\n        [6, 7, 11],\n        [6,",
      -13.2109375
    ],
    [
      "return abs(a + b - c) / 2\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return abs(a + b + c)\n\ndef triangle_volume(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the volume of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_volume(3, 4, 5) == 12.00\n    triangle_volume(1, 2, 10) == -1\n    '''\n    return abs(a * b * c) / 2\n\nif __name__ == \"__main__\":\n    # Test cases\n    # Test triangle area\n    print(\"Test triangle area\")\n    a = triangle_area(3, 4, 5)\n    print(\"The area is: %.2f\" % a)\n    assert a == 6.00, \"Invalid triangle area\"\n    # Test triangle perimeter\n    print(\"Test triangle perimeter\")\n    a = triangle_perimeter(3, 4, 5)\n    print(\"The perimeter is: %.2f\" % a)\n    assert a == 7.00, \"Invalid triangle perimeter\"\n    # Test triangle volume\n    print(\"Test triangle volume\")\n    a = triangle_volume(3, 4, 5)\n    print(\"The volume is: %.2f\" % a)\n    assert a == 12.00, \"Invalid triangle volume\"\n    print(\"All tests passed!\")",
      -14.1953125
    ],
    [
      "s1 = a + b + c\n    s2 = a + c + b\n    s3 = b + c + a\n    if s1 > s2 and s1 > s3:\n        return round(s1 / 2, 2)\n    else:\n        return -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    s1 = a + b + c\n    s2 = a + c + b\n    s3 = b + c + a\n    if s1 > s2 and s1 > s3:\n        return round(s1 / 2, 2)\n    else:\n        return -1\n\ndef main():\n    '''\n    Test Cases\n    1. triangle_area(1, 1, 1) == 1\n    2. triangle_area(2, 2, 2) == 2\n    3. triangle_area(3, 4, 5) == 6.00\n    4. triangle_perimeter(1, 2, 10) == -1\n    5. triangle_perimeter(3, 4, 5) == 7.00\n    '''\n    print triangle_area(1, 1, 1)\n    print triangle_area(2, 2, 2)\n    print triangle_area(3, 4, 5)\n    print triangle_perimeter(1, 2, 10)\n    print triangle_perimeter(3, 4, 5)\n    print triangle_perimeter(1, 2, 1)\n\nif __name__ == '__main__':\n    main()",
      -14.203125
    ],
    [
      "if a > b and b > c:\n        if a > c:\n            return a + b + c\n        else:\n            return a + c + b\n    elif a > b and b < c:\n        if a > c:\n            return a + b + c\n        else:\n            return a + c + b\n    elif a < b and b < c:\n        if a < c:\n            return a + b + c\n        else:\n            return a + c + b\n    else:\n        return -1\n\n\ndef area(p1, p2, p3):\n    '''\n    Given the points of a triangle, return the area of the triangle rounded to 2\n    decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    area(0, 0, 0) == -1\n    area(0, 0, 5) == 5.00\n    area(0, 0, 10) == -1\n    '''\n    return triangle_area(p1[0] - p2[0], p1[1] - p2[1], p1[2] - p2[2])\n\n\ndef test_area():\n    assert area((0, 0, 0), (0, 0, 1), (0, 1, 1)) == 0.5\n    assert area((0, 0, 0), (0, 0, 1), (1, 1, 1)) == 1.0\n    assert area((0, 0, 0), (0, 0, 1), (1, 1, 2)) == -1\n    assert area((0, 0, 0), (0, 1, 1), (1, 1, 2)) == -1\n    assert area((0, 0, 0), (0, 1, 1), (1, 1, 0)) == -1\n    assert area((0, 0, 0), (0, 1, 1), (1, 0, 0)) == -1\n    assert area((0, 0, 0), (0, 1, 1), (0, 1, 0)) == -1\n    assert area((0, 0, 0), (0, 1,",
      -14.34375
    ],
    [
      "if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n        return (a + b) * (c + b) / 2\n\ndef triangle_area_recursive(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    elif a + c > b:\n        return -1\n    elif b + c > a:\n        return -1\n    else:\n        return a + b + c\n\ndef triangle_area_iterative(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    a, b, c = a + b, c + b, a + c\n    return (a + b) * (c + b) / 2\n\ndef triangle_area_recursive_iterative(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3",
      -14.953125
    ],
    [
      "return round(a*b/2, 2) if a > 0 and b > 0 and a > b else -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 7.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    return round(a+b+c, 2) if a > 0 and b > 0 and a > b and c > 0 else -1\n\ndef triangle_perimeter_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_area(3, 4, 5) == 6.00\n    triangle_perimeter_area(1, 2, 10) == -1\n    '''\n    return round(a*b/2, 2) if a > 0 and b > 0 and a > b else -1\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a valid triangle. Otherwise return False\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) == 1 and triangle_perimeter(a, b, c) == 2\n\ndef main():\n    print(triangle_area(3, 4, 5))\n    print",
      -15.140625
    ],
    [
      "return round(a + b + c, 2)\n\ndef is_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the \n    triangle is a valid triangle, otherwise return False.\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 10) == False\n    '''\n    return triangle_area(a, b, c) > 0\n\ndef main():\n    while True:\n        a = input('Enter the first side: ')\n        b = input('Enter the second side: ')\n        c = input('Enter the third side: ')\n        if is_triangle(a, b, c):\n            print('The triangle is valid')\n        else:\n            print('The triangle is not valid')\n\nif __name__ == '__main__':\n    main()",
      -18.046875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}