{
  "problem": {
    "task_id": "MBPP/218",
    "prompt": "Write a python function to find the minimum operations required to make two numbers equal.",
    "canonical_solution": "import math   \r\ndef min_Operations(A,B):  \r\n    if (A > B): \r\n        swap(A,B)  \r\n    B = B // math.gcd(A,B);  \r\n    return B - 1",
    "test_list": [
      "assert min_Operations(2,4) == 1",
      "assert min_Operations(4,10) == 4",
      "assert min_Operations(1,4) == 3"
    ],
    "challenge_test_list": [],
    "problem_id": 207
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def min_operations(num1, num2):\n    return abs(num1 - num2)\n\nprint(min_operations(4, 3))\nprint(min_operations(3, 4))\nprint(min_operations(5, 3))\nprint(min_operations(5, 5))\nprint(min_operations(3, 5))\nprint(min_operations(3, 4))\nprint(min_operations(3, 3))\nprint(min_operations(3, 4))\nprint(min_operations(3, 3))",
      7.0703125
    ],
    [
      "def min_operations(a,b):\n    # Write your code here\n    a_set = set(a)\n    b_set = set(b)\n    return len(a_set.intersection(b_set)) + len(b_set.intersection(a_set))\n\nprint(min_operations(2,4))",
      3.927734375
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1\n    else:\n        return 2\n\n\nprint(min_operations(3, 4))",
      3.470703125
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return min(a,b) + min(b,a)\n\n\nprint(min_operations(1,2))",
      3.3203125
    ],
    [
      "def min_operation(a, b):\n    if a == b:\n        return 0\n    else:\n        return (a + b)\n\n\nprint(min_operation(2, 3))",
      1.8095703125
    ],
    [
      "def min_ops(a,b):\n    if a==b:\n        return 0\n    if a>b:\n        return 1\n    return 2\n\nprint(min_ops(5,5))",
      1.568359375
    ],
    [
      "def min_operations(a,b):\n    if(a==b):\n        return 0\n    elif(a>b):\n        return 1\n    else:\n        return 2\n\nprint(min_operations(2,3))",
      1.158203125
    ],
    [
      "def min_operations(a, b):\n    if a < b:\n        return min_operations(b, a)\n    elif b < a:\n        return min_operations(a, b)\n    else:\n        return max(a, b)\n\n\nprint(min_operations(1, 2))",
      1.0634765625
    ],
    [
      "def min_ops(x, y):\n    if x > y:\n        return x - y\n    else:\n        return y - x\n\n\nprint(min_ops(5, 4))",
      0.99609375
    ],
    [
      "def min_operations(a,b):\n    if a==b:\n        return 0\n    elif a>b:\n        return 1\n    else:\n        return 2\n\nprint(min_operations(5,6))",
      0.98095703125
    ],
    [
      "def min_operations(a, b):\n    # Write your code here\n    if a == b:\n        return 0\n    else:\n        return (b - a)\n\n\nif __name__ == '__main__':\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(\"Minimum operations required are: \" + str(min_operations(a, b)))",
      0.92431640625
    ],
    [
      "def minimum_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a == b:\n        return 0\n    else:\n        return abs(a - b)\n\n\nif __name__ == \"__main__\":\n    print(minimum_operations(1, 2))",
      0.80078125
    ],
    [
      "def min_operations(num1, num2):\n    \"\"\"\n    :type num1: int\n    :type num2: int\n    :rtype: int\n    \"\"\"\n    if num1 == num2:\n        return 0\n    else:\n        return abs(num1 - num2)",
      0.6982421875
    ],
    [
      "def minimum_operation(a,b):\n    if(a==b):\n        return 0\n    else:\n        return min(a,b) + min(b,a)\n\n\nprint(minimum_operation(2,3))",
      0.66943359375
    ],
    [
      "def min_operations(n1, n2):\n    if n1 == n2:\n        return 0\n    else:\n        return abs(n1-n2)\n\nprint(min_operations(1, 2))",
      0.1729736328125
    ],
    [
      "def min_ops(a, b):\n    if a == b:\n        return 0\n    else:\n        return (a + b) % (10 ** 9 + 7)\n\nprint(min_ops(2, 5))",
      0.1531982421875
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nprint(min_operations(1, 1))",
      0.1319580078125
    ],
    [
      "def min_operations(a,b):\n    if a==b:\n        return 0\n    if a>b:\n        return 1\n    if a<b:\n        return -1\n\nif __name__ == \"__main__\":\n    print(min_operations(3,5))",
      0.1302490234375
    ],
    [
      "def min_operations(a,b):\n    if a == b:\n        return 0\n    else:\n        return (a + b)\n\nprint(min_operations(1, 2))",
      0.129150390625
    ],
    [
      "def minimum_operations(a, b):\n    if a > b:\n        return a - b\n    return b - a\n\n\nprint(minimum_operations(2, 3))",
      0.09686279296875
    ],
    [
      "def min_operations(a, b):\n    return (abs(a) + abs(b))\n\nprint(min_operations(1, 2))",
      -0.03814697265625
    ],
    [
      "def min_operations(a,b):\n    if a == b:\n        return 0\n    else:\n        return 1 + min_operations(b,a % b)\n\nprint(min_operations(10,20))",
      -0.2406005859375
    ],
    [
      "def minimum_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + minimum_operations(b, a)\n    return 1 + minimum_operations(a, b)\n\nprint(minimum_operations(1, 2))",
      -0.2431640625
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nif __name__ == \"__main__\":\n    print(min_operations(7, 6))",
      -0.2607421875
    ],
    [
      "def min_operations(a, b):\n    return (abs(a - b) + abs(a + b)) // 2\n\n\nprint(min_operations(1, 2))",
      -0.3447265625
    ],
    [
      "def min_ops(a,b):\n    # Your code here\n    if a == b:\n        return 0\n    else:\n        return a + b\n\n\nprint(min_ops(2, 3))",
      -0.392822265625
    ],
    [
      "def min_ops(a, b):\n    if a < b:\n        return (b - a)\n    else:\n        return (a - b)\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nprint(\"Minimum operations required are: \", min_ops(a, b))",
      -0.468994140625
    ],
    [
      "def min_operations(x, y):\n    min_op = abs(x - y)\n    return min_op\n\n\nprint(min_operations(1, 2))",
      -0.6650390625
    ],
    [
      "def minimum_operations(num1, num2):\n    if num1 > num2:\n        return num1 - num2\n    else:\n        return num2 - num1\n\nprint(minimum_operations(5, 10))",
      -0.74853515625
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return abs(a - b)\n\n\nprint(min_operations(2, 5))",
      -0.85595703125
    ],
    [
      "def min_operations(num1, num2):\n    # write your code here\n    if num1 == num2:\n        return 0\n    elif num1 > num2:\n        return 1 + min_operations(num2, num1 % num2)\n    elif num2 > num1:\n        return 1 + min_operations(num1 % num2, num2)",
      -0.85693359375
    ],
    [
      "def min_ops(a,b):\n    if a == 0:\n        return b\n    else:\n        return min_ops(b%a,a)\n\nprint(min_ops(3,4))",
      -0.85693359375
    ],
    [
      "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a > b:\n        return max(a, b) - min(a, b)\n    else:\n        return max(b, a) - min(b, a)\n\n\nprint(min_operations(3, 2))",
      -0.85693359375
    ],
    [
      "def min_operations(a,b):\n    if a == b:\n        return 0\n    else:\n        return (a+b)\n\n\nprint(min_operations(2,3))",
      -0.857421875
    ],
    [
      "def minimum_operations(x, y):\n    if x == y:\n        return 0\n    else:\n        return 1 + min(minimum_operations(x, y), minimum_operations(y, x))\n\n\nif __name__ == '__main__':\n    print(minimum_operations(2, 3))\n    print(minimum_operations(5, 2))",
      -0.8583984375
    ],
    [
      "def min_ops(num1, num2):\n    num1 = abs(num1)\n    num2 = abs(num2)\n    if num1 == num2:\n        return 0\n\n    if num1 < num2:\n        return 1\n    else:\n        return -1\n\nprint(min_ops(2, 3))\nprint(min_ops(4, 5))\nprint(min_ops(8, 10))\nprint(min_ops(4, -10))\nprint(min_ops(4, -4))",
      -0.8583984375
    ],
    [
      "def min_ops(num1, num2):\n    num1 = abs(num1)\n    num2 = abs(num2)\n    if num1 > num2:\n        return num1 + num2\n    else:\n        return num2 + num1\n\n\nif __name__ == '__main__':\n    print(min_ops(1, 2))\n    print(min_ops(2, 1))\n    print(min_ops(1, -2))\n    print(min_ops(-1, -2))\n    print(min_ops(1, -2))",
      -0.8583984375
    ],
    [
      "def min_operations(a,b):\n    if a>b:\n        return min(b-a,min_operations(b,a-b))\n    else:\n        return min(a-b,min_operations(a,b-a))\n\nprint(min_operations(5,3))",
      -0.8583984375
    ],
    [
      "def minimum_operations(x, y):\n    return abs(x-y)\n\n\nif __name__ == \"__main__\":\n    print(minimum_operations(4, 4))\n    print(minimum_operations(2, 2))\n    print(minimum_operations(2, 4))",
      -0.8583984375
    ],
    [
      "def minimum_operation(a, b):\n    if a < b:\n        return a + b\n    else:\n        return a - b\n\n\nif __name__ == \"__main__\":\n    print(minimum_operation(4, 3))",
      -0.8583984375
    ],
    [
      "def minimumOperations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1\n    else:\n        return 2\n\n\nprint(minimumOperations(2, 3))",
      -0.91259765625
    ],
    [
      "def min_operations(a, b):\n    if a > b:\n        return 1 + min_operations(b, a)\n    elif a < b:\n        return 1 + min_operations(a, b)\n    elif a == b:\n        return 0\n    else:\n        return 0\n\nprint(min_operations(6, 3))\nprint(min_operations(2, 5))\nprint(min_operations(3, 4))",
      -0.9306640625
    ],
    [
      "def min_operations(a, b):\n    return max(abs(a - b), abs(a + b))\n\nprint(min_operations(1, 1))\nprint(min_operations(2, 1))\nprint(min_operations(3, 1))",
      -1.1796875
    ],
    [
      "def minimum_operations(n1, n2):\n    if n1 == n2:\n        return 0\n\n    if n1 > n2:\n        return 1\n\n    return 2\n\n\nprint(minimum_operations(3, 4))",
      -1.2587890625
    ],
    [
      "def min_operations(a, b):\n    # Write your code here\n    a = int(a)\n    b = int(b)\n    if a == b:\n        return 0\n    if a > b:\n        return 1\n    return 2\n\nprint(min_operations(2, 3))",
      -1.40625
    ],
    [
      "def min_operations(a, b):\n    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return 1\n    return min(min_operations(a-1, b), min_operations(a, b-1))\n\n\nprint(min_operations(5, 6))",
      -1.41015625
    ],
    [
      "def minimumOperations(a, b):\n    if a > b:\n        return b - a\n    else:\n        return a - b\n\n\nif __name__ == \"__main__\":\n    print(minimumOperations(1, 1))",
      -1.43359375
    ],
    [
      "def minimum_operations(a,b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1\n    else:\n        return 2\n\nprint(minimum_operations(2,3))",
      -1.4912109375
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 < num2:\n        return 1\n    else:\n        return -1\n\n\nif __name__ == \"__main__\":\n    print(min_operations(2, 2))",
      -1.552734375
    ],
    [
      "def minimum_operations(a,b):\n    #Write your code here.\n    if a == b:\n        return 0\n    if a < b:\n        return 1\n    return 2\n\nprint(minimum_operations(2, 3))",
      -1.677734375
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a % b)\n    else:\n        return 1 + min_operations(a, b % b)\n\n\nprint(min_operations(3, 4))",
      -2.189453125
    ],
    [
      "def min_operations(a,b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1 + min_operations(b,a)\n    else:\n        return 1 + min_operations(a,b)\n\nprint(min_operations(4,3))",
      -2.193359375
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    elif num1 > num2:\n        return 1\n    else:\n        return 2\n\n\nprint(min_operations(2, 3))",
      -2.203125
    ],
    [
      "def min_operations(a, b):\n    return (a + b) - min(a, b)\n\n\nprint(min_operations(2, 2))\nprint(min_operations(4, 2))\nprint(min_operations(2, 4))\nprint(min_operations(4, 4))",
      -2.31640625
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return (a + b)\n\n\nprint(min_operations(2, 3))\nprint(min_operations(2, 4))\nprint(min_operations(2, 5))\nprint(min_operations(2, 6))\nprint(min_operations(4, 5))",
      -2.318359375
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a%b)\n    return 1 + min_operations(a, b%a)\n\n\nprint(min_operations(2, 3))",
      -2.3828125
    ],
    [
      "def min_operations(a,b):\n    # Write your code here\n    c=a-b\n    if c<0:\n        c=c+(abs(c))\n    return c\n\nprint(min_operations(1,2))",
      -2.515625
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nif __name__ == '__main__':\n    print(min_operations(5, 4))",
      -2.564453125
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 < num2:\n        return 1 + min_operations(num2, num1)\n    return 1 + min_operations(num1, num2)\n\n\nif __name__ == \"__main__\":\n    num1 = int(input(\"Enter first number: \"))\n    num2 = int(input(\"Enter second number: \"))\n    print(\"Minimum operations required: \" + str(min_operations(num1, num2)))",
      -2.759765625
    ],
    [
      "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    return 1 + min_operations(a, b)\n\n\nprint(min_operations(10, 20))\nprint(min_operations(20, 10))\nprint(min_operations(20, 100))\nprint(min_operations(100, 20))\nprint(min_operations(100, 100))",
      -2.87109375
    ],
    [
      "def min_operations(a, b):\n    if a > b:\n        a, b = b, a\n\n    diff = a - b\n    return diff\n\n\nprint(min_operations(2, 2))\nprint(min_operations(2, 3))\nprint(min_operations(3, 2))\nprint(min_operations(3, 3))\nprint(min_operations(3, 4))\nprint(min_operations(4, 3))",
      -2.958984375
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\nprint(min_operations(3, 4))",
      -2.984375
    ],
    [
      "def min_operations(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations2(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations3(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations4(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations5(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations6(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations7(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations8(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations9(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\n\nif __name__==\"__main__\":\n    a=int(input(\"Enter a number: \"))\n    b=int(input(\"Enter a number: \"))\n    print(\"Minimum operations required to make two numbers equal are: \",min_operations(a,b))\n    print(\"Minimum operations required to make two numbers equal are: \",min_operations2(a,b))\n    print(\"Minimum operations required to make two numbers equal",
      -3.169921875
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    return 2 + min_operations(a, b)\n\n\nif __name__ == '__main__':\n    print(min_operations(2, 5))",
      -3.298828125
    ],
    [
      "def min_operations(a, b):\n    if a < b:\n        return min(a, b) + 1\n    else:\n        return min(b, a) + 1\n\n\nprint(min_operations(2, 5))",
      -3.3046875
    ],
    [
      "def min_operations(a, b):\n    if a > b:\n        return (a + b) // 2\n    else:\n        return (a + b) // 2\n\n\nprint(min_operations(1, 1))\nprint(min_operations(1, 2))\nprint(min_operations(2, 1))\nprint(min_operations(2, 2))\nprint(min_operations(3, 2))\nprint(min_operations(3, 3))",
      -3.533203125
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 < num2:\n        return 1 + min_operations(num1, num2)\n    else:\n        return 1 + min_operations(num2, num1)\n\n\nif __name__ == '__main__':\n    assert min_operations(1, 2) == 1\n    assert min_operations(2, 1) == 2\n    assert min_operations(3, 2) == 3\n    assert min_operations(5, 2) == 6",
      -3.537109375
    ],
    [
      "def min_ops(a, b):\n    return max(abs(a - b), abs(a + b))\n\nprint(min_ops(3, 2))\nprint(min_ops(2, 3))\nprint(min_ops(1, 2))\nprint(min_ops(1, 3))\nprint(min_ops(3, 3))\nprint(min_ops(3, 2))\nprint(min_ops(1, 3))",
      -3.630859375
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return 1 + min_operations(a, b - a)\n\nprint(min_operations(1, 2))\nprint(min_operations(2, 3))\nprint(min_operations(4, 5))\nprint(min_operations(3, 4))",
      -3.66015625
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nprint(min_operations(5, 5))\nprint(min_operations(5, 10))\nprint(min_operations(5, -5))",
      -3.685546875
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1\n    if b > a:\n        return 1 + min_operations(b, a)\n\na = int(input())\nb = int(input())\nprint(min_operations(a, b))",
      -3.78125
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n\n    if num1 < num2:\n        return 1\n\n    if num2 < num1:\n        return 2\n\n\nnum1 = int(input(\"Enter the first number: \"))\nnum2 = int(input(\"Enter the second number: \"))\nprint(min_operations(num1, num2))",
      -3.8203125
    ],
    [
      "def min_operations(a,b):\n    #a = int(input(\"Enter a: \"))\n    #b = int(input(\"Enter b: \"))\n    #print(min(a,b))\n    #print(max(a,b))\n    if a > b:\n        return a\n    else:\n        return b\n\n\na = int(input(\"Enter a: \"))\nb = int(input(\"Enter b: \"))\nprint(min_operations(a,b))",
      -3.939453125
    ],
    [
      "def min_ops(a,b):\n    if a==b:\n        return 0\n    elif a>b:\n        return 1\n    else:\n        return 2\nprint(min_ops(2,4))",
      -4.08984375
    ],
    [
      "def min_operations(a, b):\n    if a == 0 or b == 0:\n        return 0\n\n    if a > b:\n        return 1 + min_operations(b, a % b)\n    else:\n        return 1 + min_operations(a, b % a)\n\n\nprint(min_operations(2, 3))",
      -4.28125
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1\n    else:\n        return 2\n\n\nprint(min_operations(5, 3))",
      -4.4765625
    ],
    [
      "def min_operations(x, y):\n    if x == y:\n        return 0\n    elif x > y:\n        return 1 + min_operations(y, x)\n    else:\n        return 1 + min_operations(x, y)\n\n\nprint(min_operations(2, 3))\nprint(min_operations(4, 5))",
      -4.671875
    ],
    [
      "def min_operations(a,b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b,a)\n    return 1 + min_operations(a,b)\n\n\n\nif __name__ == \"__main__\":\n    print(min_operations(2,2))\n    print(min_operations(2,3))\n    print(min_operations(4,4))\n    print(min_operations(5,5))\n    print(min_operations(5,6))\n    print(min_operations(10,10))\n    print(min_operations(5,5))",
      -4.73046875
    ],
    [
      "def minimum_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n\n    if a == b:\n        return 0\n    else:\n        return 1 + min(a, b)\n\n\nprint(minimum_operations(1, 1))\nprint(minimum_operations(1, 2))\nprint(minimum_operations(2, 1))\nprint(minimum_operations(2, 2))\nprint(minimum_operations(2, 3))\nprint(minimum_operations(3, 2))\nprint(minimum_operations(3, 4))",
      -4.7890625
    ],
    [
      "def min_ops(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_ops(b, a)\n    return 1 + min_ops(a, b)\n\n\nprint(min_ops(1, 1))",
      -4.80859375
    ],
    [
      "def min_operations(a, b):\n    if a < b:\n        return min_operations(b, a)\n    else:\n        return min_operations(a, b) + 1\n\n\nprint(min_operations(5, 4))\nprint(min_operations(8, 6))\nprint(min_operations(7, 3))\nprint(min_operations(10, 9))\nprint(min_operations(3, 1))",
      -4.97265625
    ],
    [
      "def minimum_operations(x, y):\n    if x == y:\n        return 0\n    if x < y:\n        return 1 + minimum_operations(y, x)\n    return 1 + minimum_operations(x, y)\n\nprint(minimum_operations(5, 6))",
      -5.18359375
    ],
    [
      "import math\n\ndef min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\na = 2\nb = 3\nprint(min_operations(a, b))",
      -5.3828125
    ],
    [
      "def min_ops(a, b):\n    if b == 0:\n        return a\n    else:\n        return min_ops(a, b//2) + b\n\n\nprint(min_ops(5, 2))",
      -5.546875
    ],
    [
      "def min_operations(a,b):\n    min_ops = 0\n    if a<b:\n        min_ops = 1 + min_operations(b,a)\n    elif a>b:\n        min_ops = 1 + min_operations(a,b-1)\n    return min_ops\n\n\nprint(min_operations(2,3))\nprint(min_operations(2,4))\nprint(min_operations(4,3))\nprint(min_operations(4,5))\nprint(min_operations(5,4))",
      -5.5625
    ],
    [
      "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a > b:\n        return min(a, b)\n    if a < b:\n        return max(a, b)\n    return 0\n\n\nprint(min_operations(4, 5))",
      -5.6796875
    ],
    [
      "def min_operations(a,b):\n    if b == 0:\n        return a\n    elif b < 0:\n        return -1\n    else:\n        return min_operations(b, a%b) + 1\n\nprint(min_operations(1,2))\nprint(min_operations(2,2))\nprint(min_operations(2,3))\nprint(min_operations(3,2))\nprint(min_operations(3,4))\nprint(min_operations(5,5))\nprint(min_operations(5,6))\nprint(min_operations(5,7))\nprint(min_operations(6,7))\nprint(min_operations(7,8))\nprint(min_operations(8,9))\nprint(min_operations(9,10))\nprint(min_operations(10,9))\nprint(min_operations(10,12))\nprint(min_operations(12,12))\nprint(min_operations(12,8))\nprint(min_operations(12,9))\nprint(min_operations(8,12))\nprint(min_operations(9,12))\nprint(min_operations(9,8))\nprint(min_operations(8,9))\nprint(min_operations(9,8))",
      -5.7265625
    ],
    [
      "def min_operations(a, b):\n    # Code here\n    if a == b:\n        return 0\n    if a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nprint(min_operations(10, 20))",
      -5.77734375
    ],
    [
      "def minimum_operations(a, b):\n    # a, b = int(input(\"Enter two numbers:\")), int(input(\"Enter two numbers:\"))\n    # if a == b:\n    #     return 0\n    # else:\n    #     return max(a - b, b - a)\n\n    a, b = int(input(\"Enter two numbers:\")), int(input(\"Enter two numbers:\"))\n    if a == b:\n        return 0\n    elif a > b:\n        return 1 + minimum_operations(b, a)\n    else:\n        return 1 + minimum_operations(a, b)\n\n\nprint(minimum_operations(2, 3))\nprint(minimum_operations(5, 7))\nprint(minimum_operations(5, 2))\nprint(minimum_operations(2, 3))\nprint(minimum_operations(2, 2))",
      -7.125
    ],
    [
      "def min_operations(num1, num2):\n    num1, num2 = sorted([num1, num2])\n    if num1 == num2:\n        return 0\n    else:\n        return 1 + min(num1, num2)\n\nprint(min_operations(4, 4))\nprint(min_operations(5, 5))\nprint(min_operations(1, 2))\nprint(min_operations(5, 4))\nprint(min_operations(10, 5))\nprint(min_operations(3, 4))\nprint(min_operations(3, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(3, 8))\nprint(min_operations(2, 4))\nprint(min_operations(2, 5))\nprint(min_operations(1, 2))\nprint(min_operations(3, 4))\nprint(min_operations(4, 5))\nprint(min_operations(1, 2))\nprint(min_operations(4, 5))\nprint(min_operations(4, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(3, 8))\nprint(min_operations(2, 4))\nprint(min_operations(2, 5))\nprint(min_operations(1, 2))\nprint(min_operations(4, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(2, 4))\nprint(min_operations(4, 5))\nprint(min_operations(1, 2))\nprint(min_operations(4, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(2, 4))\nprint(min_operations(1, 2))\nprint(min_operations(4, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(2, 4))",
      -7.390625
    ],
    [
      "def min_operations(a, b):\n    # write your code here\n    if a == b:\n        return 0\n    else:\n        return 1 + min(min_operations(a, b - a), min_operations(a - b, b))\n\n\nprint(min_operations(2, 3))\nprint(min_operations(2, 6))\nprint(min_operations(3, 4))\nprint(min_operations(4, 4))\nprint(min_operations(5, 5))\nprint(min_operations(4, 7))\nprint(min_operations(7, 7))\nprint(min_operations(7, 7))\nprint(min_operations(7, 8))",
      -7.5625
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    else:\n        return min(num1, num2) + max(num1, num2)\n\nprint(min_operations(3, 2))\nprint(min_operations(3, 4))\nprint(min_operations(3, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(6, 7))\nprint(min_operations(6, 8))\nprint(min_operations(7, 8))\nprint(min_operations(7, 9))\nprint(min_operations(7, 10))\nprint(min_operations(7, 11))",
      -7.5703125
    ],
    [
      "def minimum_operations(a, b):\n    if a == b:\n        return 0\n\n    return 1 + min(minimum_operations(a, b - a), minimum_operations(b, a - b))\n\n\ndef main():\n    print(minimum_operations(1, 1))\n    print(minimum_operations(1, 2))\n    print(minimum_operations(1, 2))\n\n\nif __name__ == \"__main__\":\n    main()",
      -7.6796875
    ],
    [
      "def min_ops(a, b):\n    if a == b:\n        return 0\n    else:\n        return min(a, b) + 1\n\n\nprint(min_ops(1, 2))\nprint(min_ops(1, 3))\nprint(min_ops(3, 1))\nprint(min_ops(1, 5))",
      -8.03125
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 > num2:\n        return 1 + min_operations(num2, num1)\n    else:\n        return 2 + min_operations(num1, num2)\n\n\ndef main():\n    print(min_operations(4, 7))\n    print(min_operations(5, 6))\n    print(min_operations(8, 6))\n    print(min_operations(9, 6))\n\n\nif __name__ == \"__main__\":\n    main()",
      -8.296875
    ],
    [
      "def minimumOperations(a, b):\n    if a < b:\n        return 1 + minimumOperations(b, a)\n    else:\n        return 1 + minimumOperations(a, b)\n\n\nif __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    print(minimumOperations(a, b))",
      -8.6796875
    ],
    [
      "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 > num2:\n        return min_operations(num2, num1)\n    return min_operations(num1, num2) + 1\n\n\nprint(min_operations(1, 1))\nprint(min_operations(1, 2))\nprint(min_operations(2, 2))",
      -9.140625
    ],
    [
      "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return max(a + b, a - b)\n\n\ndef main():\n    print(min_operations(1, 1))\n    print(min_operations(4, 1))\n\n\nif __name__ == '__main__':\n    main()",
      -9.6171875
    ],
    [
      "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n    if a < b:\n        return a + b\n    else:\n        return b + a\n\n\nprint(min_operations(2, 1))",
      -11.2421875
    ],
    [
      "def min_ops(a, b):\n    # Write your code here\n    if a < b:\n        return min_ops(b, a)\n    else:\n        return min_ops(a, b) + 1\n\n\nprint(min_ops(1, 2))\nprint(min_ops(2, 1))",
      -11.796875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}