{
  "problem": {
    "task_id": "MBPP/505",
    "prompt": "Write a function to move all zeroes to the end of the given array.",
    "canonical_solution": "def re_order(A):\r\n    k = 0\r\n    for i in A:\r\n        if i:\r\n            A[k] = i\r\n            k = k + 1\r\n    for i in range(k, len(A)):\r\n        A[i] = 0\r\n    return A",
    "test_list": [
      "assert re_order([6, 0, 8, 2, 3, 0, 4, 0, 1]) == [6, 8, 2, 3, 4, 1, 0, 0, 0]",
      "assert re_order([4, 0, 2, 7, 0, 9, 0, 12, 0]) == [4, 2, 7, 9, 12, 0, 0, 0, 0]",
      "assert re_order([3, 11, 0, 74, 14, 0, 1, 0, 2]) == [3, 11, 74, 14, 1, 2, 0, 0, 0]"
    ],
    "challenge_test_list": [],
    "problem_id": 494
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def move_zeros(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n\narr = [0,1,0,3,12,0,0,0,0,0,0]\nprint(arr)\nmove_zeros(arr)\nprint(arr)",
      4.140625
    ],
    [
      "def move_zeros(arr):\n    if arr == []:\n        return arr\n    zero = arr.index(0)\n    arr = arr[:zero] + arr[zero+1:]\n    return arr\n\nprint(move_zeros([0,0,0,0,0,0,0,0]))",
      3.927734375
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            del arr[i]\n        else:\n            i += 1\n    return arr",
      2.455078125
    ],
    [
      "def moveZeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            del arr[i]\n        else:\n            i += 1\n    return arr\n\nif __name__ == \"__main__\":\n    assert moveZeroes([0, 0, 0, 1, 1, 1]) == [1, 1, 0, 0, 1, 1]",
      1.4150390625
    ],
    [
      "def moveZeroes(array):\n    # Your code here\n    zeroes = 0\n    for i in array:\n        if i == 0:\n            zeroes += 1\n    for i in range(zeroes):\n        array.pop()\n    return array",
      0.94287109375
    ],
    [
      "def move_zeroes(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums.pop(i)\n    return nums\n\n\nprint(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0]))",
      0.8115234375
    ],
    [
      "def move_zeroes(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums.pop(i)\n    return nums\n\nprint(move_zeroes([0,1,0,3,12]))",
      0.166748046875
    ],
    [
      "def moveZeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n\n\narr = [0, 1, 0, 3, 12, 0, 0]\nmoveZeroes(arr)\nprint(arr)",
      0.128173828125
    ],
    [
      "def move_zeros(arr):\n    zeroes = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zeroes += 1\n            arr.pop(i)\n    for i in range(zeroes):\n        arr.append(0)\n    return arr\n\nif __name__ == '__main__':\n    assert move_zeros([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    assert move_zeros([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    assert move_zeros([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",
      -0.334228515625
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    j = len(arr) - 1\n\n    while i < j:\n        if arr[i] == 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n        else:\n            i += 1",
      -0.49560546875
    ],
    [
      "class Solution:\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        i = 0\n        while i < len(nums):\n            if nums[i] == 0:\n                del nums[i]\n                i -= 1\n            else:\n                i += 1",
      -0.53955078125
    ],
    [
      "def move_zeroes(arr):\n    zero_count = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zero_count += 1\n            arr.pop(i)\n    return zero_count, arr\n\n\nif __name__ == \"__main__\":\n    arr = [1, 0, 0, 0, 0, 0, 0]\n    print(move_zeroes(arr))",
      -0.85791015625
    ],
    [
      "def move_zeroes(arr):\n    if len(arr) <= 1:\n        return arr\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] == 0 and arr[j] == 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n        elif arr[i]!= 0:\n            i += 1\n        else:\n            j -= 1\n    return arr\n\nif __name__ == \"__main__\":\n    arr = [1, 0, 0, 3, 12]\n    print(move_zeroes(arr))",
      -0.85791015625
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([0, 0, 0, 0, 0, 0]))",
      -0.85791015625
    ],
    [
      "def move_zeroes(arr):\n    if len(arr) == 0:\n        return arr\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n    return arr\n\nprint(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))",
      -0.8583984375
    ],
    [
      "def move_zeroes(array):\n    n = len(array)\n    for i in range(n):\n        if array[i] == 0:\n            array[i], array[n - 1 - i] = array[n - 1 - i], array[i]\n    return array\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([0, 1, 0, 0, 3, 12, 0, 0, 0, 0]))",
      -0.8583984375
    ],
    [
      "def move_zeroes(array):\n    for i in range(len(array)):\n        if array[i] == 0:\n            array.pop(i)\n            array.append(0)\n    return array\n\n\nif __name__ == \"__main__\":\n    assert move_zeroes([0, 1, 0, 3, 12]) == [1, 2, 3, 12, 0]",
      -0.8583984375
    ],
    [
      "def moveZeroes(array):\n    i = 0\n    while i < len(array):\n        if array[i] == 0:\n            del array[i]\n        else:\n            i += 1\n\ndef main():\n    arr = [0,0,1,1,0,0,0,0,0,0,0]\n    moveZeroes(arr)\n    print(arr)\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def moveZeroes(array):\n    zeroes = 0\n    for i in range(len(array)):\n        if array[i] == 0:\n            zeroes += 1\n            array[i] = 0\n    return array, zeroes\n\n\nif __name__ == \"__main__\":\n    array = [0, 1, 0, 3, 12]\n    array, zeroes = moveZeroes(array)\n    print(array)\n    print(zeroes)",
      -0.8583984375
    ],
    [
      "def moveZeroes(arr):\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] == 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n        i += 1\n    return arr\n\nprint(moveZeroes([0,0,0,0,0,0]))",
      -0.8583984375
    ],
    [
      "def move_zeroes(arr):\n    zeroes = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr[i] = 1\n            zeroes += 1\n    for i in range(zeroes):\n        arr.append(0)\n\n\nif __name__ == '__main__':\n    arr = [0, 1, 1, 0, 0, 1, 0]\n    move_zeroes(arr)\n    print(arr)",
      -0.8583984375
    ],
    [
      "def move_zeroes(arr):\n    if arr[-1] == 0:\n        return arr[:-1]\n    else:\n        return arr\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([0, 1, 0, 3, 12]))",
      -0.8583984375
    ],
    [
      "def move_zeroes(arr):\n    n = len(arr)\n\n    i = 0\n    while i < n:\n        if arr[i] == 0:\n            arr.pop(i)\n        else:\n            i += 1\n\n\narr = [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0]\nmove_zeroes(arr)\nprint(arr)",
      -0.8583984375
    ],
    [
      "def move_zeroes(arr):\n    if arr == []:\n        return\n\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n\n\ndef main():\n    print(move_zeroes([0, 0, 0, 0, 0, 0]))\n\n\nmain()",
      -0.8583984375
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n    return arr",
      -0.8583984375
    ],
    [
      "class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        i = 0\n        j = len(nums) - 1\n        while i < j:\n            if nums[i] == 0:\n                nums.pop(i)\n                nums.pop(i)\n                i -= 1\n            else:\n                i += 1",
      -0.8583984375
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] == 0:\n            j -= 1\n        else:\n            arr[j + 1] = arr[i]\n            i += 1\n\n\ndef test_move_zeroes():\n    assert move_zeroes([0, 1, 0, 0, 0, 0]) == [0, 1, 0, 0, 0, 0]\n    assert move_zeroes([0, 0, 1]) == [0, 0, 0, 1]\n    assert move_zeroes([]) == []\n\n\ntest_move_zeroes()",
      -0.85888671875
    ],
    [
      "def move_zeros(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            arr.pop(i)\n        i += 1\n\n\nprint(move_zeros([0, 1, 0, 3, 12]))",
      -0.85888671875
    ],
    [
      "def moveZeroes(arr):\n    # Your code here\n    count = 0\n    for i in arr:\n        if i == 0:\n            count += 1\n    for i in range(count):\n        arr.pop()",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    zero_count = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zero_count += 1\n            arr[i] = 1\n\n    while zero_count > 0:\n        arr[zero_count] = 0\n        zero_count -= 1\n\n    return arr\n\n\nprint(move_zeroes([1, 0, 0, 0, 0, 0, 0]))",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    if arr[0] == 0:\n        return arr[:-1]\n    else:\n        return arr\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([1, 0, 0, 3, 12]))",
      -0.85888671875
    ],
    [
      "def move_zeroes(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums.pop(i)\n\n\nprint(move_zeroes([0, 1, 0, 3, 12]))",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    n = len(arr)\n    for i in range(n):\n        if arr[i] == 0:\n            arr[i] = None\n    return arr",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            arr.pop(i)\n        else:\n            i += 1\n\n\nif __name__ == \"__main__\":\n    arr = [0, 1, 2, 0, 0, 0, 0]\n    move_zeroes(arr)\n    print(arr)",
      -0.85888671875
    ],
    [
      "def moveZeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            break\n\narr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nmoveZeroes(arr)\nprint(arr)",
      -0.85888671875
    ],
    [
      "def move_zeros(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n    return arr\n\n\narr = [0, 0, 0, 1, 0, 0, 0, 0]\nprint(move_zeros(arr))",
      -0.85888671875
    ],
    [
      "def move_zeroes(nums):\n    if len(nums) <= 1:\n        return nums\n\n    pos = 0\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums[pos] = nums[i + 1]\n            nums[pos + 1] = 0\n            pos += 2\n    return nums\n\n\nprint(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            i += 1\n        else:\n            arr[i] = 0\n\n\narr = [0, 1, 0, 0, 0, 0]\nmove_zeroes(arr)\nprint(arr)",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    zero_count = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            zero_count += 1\n    print(arr)\n    print(\"Number of zeros: \" + str(zero_count))\n\n\narr = [0, 0, 0, 1, 1, 0, 0, 0]\nmove_zeroes(arr)",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: void Do not return anything, modify arr in-place instead.\n    \"\"\"\n    zero_count = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zero_count += 1\n            arr[i] = 0\n    while zero_count > 0:\n        arr[zero_count] = 0\n        zero_count -= 1",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            del arr[i]\n\n\narr = [0, 1, 0, 3, 12]\nmove_zeroes(arr)\nprint(arr)",
      -0.85888671875
    ],
    [
      "def move_zeros(arr):\n    n = len(arr)\n    for i in range(n):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n\n\narr = [0, 0, 0, 1, 0, 0, 0]\nmove_zeros(arr)\nprint(arr)",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n    return arr\n\n\narr = [1, 0, 0, 3, 12]\nprint(move_zeroes(arr))",
      -0.85888671875
    ],
    [
      "def move_zeroes(array):\n    \"\"\"\n    :type array: List[int]\n    :rtype: void Do not return anything, modify array in-place instead.\n    \"\"\"\n    zeroes = 0\n    for i in range(len(array)):\n        if array[i] == 0:\n            zeroes += 1\n            if zeroes > len(array) - 1:\n                break\n            array[zeroes], array[i] = array[i], array[zeroes]\n    print(array)\n\n\nmove_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0])\nmove_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])",
      -0.85888671875
    ],
    [
      "def moveZeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            del arr[i]\n        else:\n            i += 1\n\n\nif __name__ == '__main__':\n    arr = [0, 0, 0, 0, 0, 0, 0, 0]\n    moveZeroes(arr)\n    print(arr)",
      -0.85888671875
    ],
    [
      "class Solution(object):\n    def move_zeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        i = 0\n        while i < len(nums):\n            if nums[i] == 0:\n                i += 1\n                continue\n            j = i\n            while j < len(nums):\n                if nums[j] == 0:\n                    nums[i], nums[j] = nums[j], nums[i]\n                    i += 1\n                    j += 1\n                j += 1",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n  n = len(arr)\n  for i in range(n):\n    if arr[i] == 0:\n      arr.pop(i)\n      arr.append(0)\n\n  return arr\n\ndef move_zeroes2(arr):\n  n = len(arr)\n  for i in range(n):\n    if arr[i] == 0:\n      arr.pop(i)\n      arr.append(0)\n  return arr\n\nif __name__ == \"__main__\":\n  print(move_zeroes([0, 1, 0, 3, 12]))",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n\n\narr = [0, 1, 0, 3, 12, 34, 0]\nmove_zeroes(arr)\nprint(arr)",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    n = len(arr)\n    i = 0\n    while i < n:\n        if arr[i] == 0:\n            arr.pop(i)\n            i -= 1\n            print(arr)\n        i += 1",
      -0.85888671875
    ],
    [
      "def moveZeroes(arr):\n    zeroes = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zeroes += 1\n            arr.pop(i)\n    for i in range(zeroes):\n        arr.insert(0, 0)\n    return arr\n\n\narr = [0, 0, 1, 0, 0, 0, 0, 0]\nprint(moveZeroes(arr))",
      -0.85888671875
    ],
    [
      "class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if not nums:\n            return\n\n        i = 0\n        j = len(nums)-1\n        while i < j:\n            if nums[i] == 0:\n                nums[i], nums[j] = nums[j], nums[i]\n                i += 1\n                j -= 1\n            elif nums[i] == 1:\n                i += 1\n            else:\n                j -= 1\n\nif __name__ == \"__main__\":\n    s = Solution()\n    assert s.moveZeroes([0,0,1,0,1,0]) == [1,0,0,1,0,1]\n    assert s.moveZeroes([1]) == [1]",
      -0.85888671875
    ],
    [
      "def move_zeroes(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums.pop(i)\n            break\n    return nums",
      -0.85888671875
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            del arr[i]\n            i -= 1\n        else:\n            i += 1\n    return arr",
      -0.86083984375
    ],
    [
      "def move_zeroes(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums.pop(i)",
      -0.86083984375
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    j = len(arr)-1\n    while i < j:\n        if arr[i] == 0:\n            arr.pop(i)\n        else:\n            i += 1\n    return arr",
      -0.86083984375
    ],
    [
      "def move_zeros(array):\n    i = 0\n    while i < len(array):\n        if array[i] == 0:\n            array.pop(i)\n        else:\n            i += 1\n    return array\n\nprint(move_zeros([0,0,0,0,0,0,0]))",
      -1.162109375
    ],
    [
      "def move_zeros(arr):\n    # Write your code here\n    pos = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(pos)\n            pos += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(move_zeros([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))",
      -1.1806640625
    ],
    [
      "def move_zeros(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            del arr[i]\n            i -= 1\n            print(arr)\n            break\n        i += 1",
      -1.2490234375
    ],
    [
      "def move_zeroes(arr):\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] == 0:\n            i += 1\n        elif arr[j] == 0:\n            j -= 1\n        else:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n    return arr",
      -1.291015625
    ],
    [
      "def move_zeros(nums):\n    n = len(nums)\n    for i in range(n):\n        if nums[i] == 0:\n            nums.pop(i)\n            nums.insert(i, 0)\n    return nums\n\nif __name__ == \"__main__\":\n    assert move_zeros([0, 1, 0, 0, 0]) == [0, 1, 0, 0, 0]",
      -1.7109375
    ],
    [
      "def moveZeroes(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: void Do not return anything, modify arr in-place instead.\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n\ndef main():\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -2.22265625
    ],
    [
      "def move_zeros(arr):\n    i = 0\n    j = len(arr) - 1\n\n    while i < j:\n        if arr[i] == 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            j -= 1\n        else:\n            i += 1\n    return arr\n\n\ndef main():\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    print(move_zeros(arr))\n\n\nmain()",
      -2.28125
    ],
    [
      "def move_zeroes(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: void Do not return anything, modify arr in-place instead.\n    \"\"\"\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            arr.pop(i)\n        i += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]))",
      -2.78515625
    ],
    [
      "def move_zeroes(arr):\n    zeroes_found = False\n\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zeroes_found = True\n\n    if not zeroes_found:\n        return arr\n\n    for i in range(len(arr)):\n        if arr[i]!= 0:\n            arr[i] = arr[i] + 1\n\n    return arr\n\nprint(move_zeroes([0, 0, 0, 1, 1, 1]))",
      -2.951171875
    ],
    [
      "def move_zeroes(arr):\n    if len(arr) == 0:\n        return\n    i = 0\n    j = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            j = i\n            break\n        i += 1\n    if j == 0:\n        return\n    while j < len(arr):\n        arr[j], arr[j - 1] = arr[j - 1], arr[j]\n        j += 1",
      -2.96484375
    ],
    [
      "def move_zeroes(arr):\n    zeroes = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr[i] = 0\n            zeroes += 1\n    return zeroes\n\n\nprint(move_zeroes([0, 0, 0, 0, 0, 0, 0]))",
      -3.099609375
    ],
    [
      "def move_zeroes(arr):\n    n = len(arr)\n    for i in range(n):\n        if arr[i] == 0:\n            arr.pop(i)\n            arr.append(0)\n            arr.append(0)\n            arr.append(0)\n    return arr\n\n\narr = [0, 0, 0, 0, 0, 0, 0]\nprint(move_zeroes(arr))",
      -3.15625
    ],
    [
      "def move_zeroes(arr):\n    zeroes = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zeroes += 1\n            arr.pop(i)\n    return zeroes\n\n\nif __name__ == \"__main__\":\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    print(arr)\n    print(move_zeroes(arr))",
      -3.6640625
    ],
    [
      "def move_zeroes(nums):\n    count = 0\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums[count] = nums[i]\n            count += 1\n    for i in range(count):\n        nums[i] = 0\n\n\nif __name__ == \"__main__\":\n    move_zeroes([0, 1, 0, 3, 12])\n    print(nums)",
      -3.857421875
    ],
    [
      "def move_zeroes(arr):\n    n = len(arr)\n    for i in range(n):\n        if arr[i] == 0:\n            del arr[i]\n            print(arr)\n\n\nif __name__ == \"__main__\":\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    move_zeroes(arr)",
      -4.01953125
    ],
    [
      "def moveZeroes(arr):\n  # write your code here\n  i = 0\n  while i < len(arr):\n    if arr[i] == 0:\n      arr.pop(i)\n    else:\n      i += 1\n  return arr\n\nprint(moveZeroes([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,",
      -4.14453125
    ],
    [
      "def move_zeroes(arr):\n    n = len(arr)\n    if n < 2:\n        return\n\n    zero_count = 0\n    for i in range(n):\n        if arr[i] == 0:\n            zero_count += 1\n\n    if zero_count > 0:\n        for i in range(n-1, -1, -1):\n            if arr[i] == 0:\n                arr[i], arr[i+1] = arr[i+1], arr[i]\n                break\n\n\narr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -4.50390625
    ],
    [
      "def move_zeroes(nums):\n    \"\"\"\n    :type nums: List[int]\n    :rtype: void Do not return anything, modify nums in-place instead.\n    \"\"\"\n    i = 0\n    while i < len(nums):\n        if nums[i] == 0:\n            nums.pop(i)\n            nums.insert(i, 0)\n        i += 1\n\n\nif __name__ == \"__main__\":\n    nums = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -4.55859375
    ],
    [
      "def move_zeros(arr):\n    if len(arr) == 0:\n        return arr\n\n    zero_index = 0\n    while zero_index < len(arr):\n        if arr[zero_index] == 0:\n            arr.pop(zero_index)\n            zero_index -= 1\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -4.76953125
    ],
    [
      "def move_zeroes(nums):\n    i = 0\n    j = len(nums) - 1\n    while i < j:\n        if nums[i] == 0:\n            nums.pop(i)\n            nums.pop(j)\n        else:\n            i += 1\n            j -= 1\n    return nums\n\ndef main():\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0]))\n\nif __name__ == \"__main__\":\n    main()",
      -4.78125
    ],
    [
      "def moveZeroes(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            arr.pop(i)\n        else:\n            i += 1\n    return arr\n\nprint(moveZeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -5.48828125
    ],
    [
      "def move_zeros(nums):\n    i = 0\n    for j in range(len(nums)):\n        if nums[j] == 0:\n            nums.pop(i)\n            nums.insert(i, 0)\n            i += 1\n    return nums\n\n\nif __name__ == \"__main__\":\n    nums = [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -5.6875
    ],
    [
      "class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        for i in range(len(nums)):\n            if nums[i] == 0:\n                nums.pop(i)\n                break",
      -5.75
    ],
    [
      "def move_zeroes(array):\n    i = 0\n    j = len(array)-1\n\n    while i<j:\n        if array[i] == 0:\n            array.pop(i)\n        else:\n            i += 1\n\n    return array\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
      -5.92578125
    ],
    [
      "def move_zeros(nums):\n    \"\"\"\n    :type nums: List[int]\n    :rtype: void Do not return anything, modify nums in-place instead.\n    \"\"\"\n    zero_index = 0\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums[zero_index] = nums[i]\n            zero_index += 1\n    for i in range(zero_index, len(nums)):\n        nums[i] = 0\n\n\nif __name__ == \"__main__\":\n    print(move_zeros([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -6.1015625
    ],
    [
      "def move_zeroes(arr):\n    # Fill this in.\n    i = 0\n    while i < len(arr):\n        if arr[i] == 0:\n            del arr[i]\n        else:\n            i += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -6.359375
    ],
    [
      "def move_zeros(arr):\n    zero_count = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zero_count += 1\n\n    for i in range(zero_count):\n        arr.pop()\n\n    return arr\n\nif __name__ == '__main__':\n    print(move_zeros([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -6.8515625
    ],
    [
      "def moveZeroes(arr):\n    n = len(arr)\n    i = 0\n    while i < n:\n        if arr[i] == 0:\n            arr.pop(i)\n        i += 1\n    return arr\n\n\nprint(moveZeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -6.86328125
    ],
    [
      "def move_zeroes(array):\n    i = 0\n    j = len(array) - 1\n    while i < j:\n        if array[i] == 0:\n            j -= 1\n        else:\n            array[i], array[j] = array[j], array[i]\n            i += 1\n            j -= 1\n\nif __name__ == \"__main__\":\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    move_zeroes(arr)\n    print(arr)",
      -7.1328125
    ],
    [
      "def move_zeroes(array):\n    zero_count = 0\n    for i in range(len(array)):\n        if array[i] == 0:\n            zero_count += 1\n        else:\n            array[i] = array[i] - 1\n    return zero_count\n\nprint(move_zeroes([0,1,0,3,12,11,0,0,5]))",
      -8.375
    ],
    [
      "class Solution:\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        i = 0\n        while i < len(nums):\n            if nums[i] == 0:\n                del nums[i]\n            else:\n                i += 1\n\n\ns = Solution()\nprint(s.moveZeroes([0, 0, 1, 1, 0, 0, 2, 3, 4, 5]))",
      -8.4375
    ],
    [
      "def move_zeroes(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: void Do not return anything, modify arr in-place instead.\n    \"\"\"\n    zero_index = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            zero_index = i\n            break\n    if zero_index!= 0:\n        arr[zero_index], arr[len(arr) - 1] = arr[len(arr) - 1], arr[zero_index]\n        print(f'After moving all zeros to the end of the array, arr = {arr}')\n\n\nif __name__ == '__main__':\n    move_zeroes([0, 1, 0, 3, 12])",
      -8.5703125
    ],
    [
      "def move_zeros(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            nums.pop(i)\n    return nums\n\n\nprint(move_zeros([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -8.6640625
    ],
    [
      "def move_zeros(arr):\n    zero_count = 0\n    for i in arr:\n        if i == 0:\n            zero_count += 1\n    for i in range(zero_count):\n        arr.pop(0)\n\n\narr = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -8.6640625
    ],
    [
      "def move_zeroes(array):\n    if len(array) == 0:\n        return []\n    zero_counter = 0\n    for i in range(len(array)):\n        if array[i] == 0:\n            zero_counter += 1\n    for i in range(zero_counter):\n        array.pop()\n    return array\n\nif __name__ == '__main__':\n    assert move_zeroes([0,0,0,0,0,0]) == [0,0,0,0,0,0]",
      -9.015625
    ],
    [
      "class Solution(object):\n    def moveZeroes(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if len(nums) == 0:\n            return\n\n        pos = 0\n        while pos < len(nums):\n            if nums[pos] == 0:\n                del nums[pos]\n            pos += 1\n\n        return nums\n\na = Solution()\nprint(a.moveZeroes([0,1,0,3,12]))",
      -9.421875
    ],
    [
      "def move_zeroes(arr):\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n    return arr\n\n\nif __name__ == '__main__':\n    assert move_zeroes([0, 1, 0, 0]) == [1, 0, 0, 0]\n    assert move_zeroes([0, 0, 0, 0]) == [0, 0, 0, 0]\n    assert move_zeroes([0, 0, 0, 0]) == [0, 0, 0, 0]",
      -9.5859375
    ],
    [
      "def move_zeroes(nums):\n    for i in range(len(nums)):\n        if nums[i] == 0:\n            del nums[i]\n    return nums\n\n\nprint(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -9.6328125
    ],
    [
      "def move_zeroes(arr):\n    # Write your code here\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr.pop(i)\n            break\n    return arr\n\n\nif __name__ == '__main__':\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0]))\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0]))\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0]))\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))\n    print(move_zeroes([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,",
      -9.9921875
    ],
    [
      "def move_zeroes(array):\n    if not array:\n        return\n    zero_index = 0\n    for i in range(len(array)):\n        if array[i] == 0:\n            array[zero_index] = 0\n            zero_index += 1\n\n\nif __name__ == \"__main__\":\n    assert move_zeroes([0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert move_zeroes([0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert move_zeroes([0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert move_zeroes([0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert move_zeroes([0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]",
      -10.8125
    ],
    [
      "def moveZeroes(arr):\n    zeroes = 0\n    for i in arr:\n        if i == 0:\n            zeroes += 1\n    for i in range(zeroes):\n        arr.pop(0)\n\n\nif __name__ == \"__main__\":\n    arr = [0, 1, 0, 3, 12]\n    moveZeroes(arr)\n    print(arr)",
      -10.8359375
    ],
    [
      "class Solution:\n    def moveZeroes(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        zero_count = 0\n        for i in range(len(nums)):\n            if nums[i] == 0:\n                zero_count += 1\n                nums.pop(i)\n            else:\n                nums[i] = 0\n        print(zero_count)\n\n\na = Solution()\na.moveZeroes([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0",
      -11.25
    ],
    [
      "def move_zeros(array):\n    # Write your code here\n    zero_count = 0\n    for index in range(len(array)):\n        if array[index] == 0:\n            array[index] = array[index-1]\n            zero_count += 1\n    for index in range(zero_count):\n        array[index] = 0\n\nif __name__ == \"__main__\":\n    print(move_zeros([0,0,0,0,0,0,0,0,0,0,0,0]))",
      -11.7265625
    ],
    [
      "def move_zeros(array):\n    zeroes = 0\n    for i in range(len(array)):\n        if array[i] == 0:\n            zeroes += 1\n            array.pop(i)\n    return zeroes\n\nif __name__ == '__main__':\n    assert move_zeros([0,0,0,0,0,0]) == 3, 'Test 1'\n    assert move_zeros([0,0,0,0,0,0]) == 4, 'Test 2'\n    assert move_zeros([0,0,0,0,0,0]) == 5, 'Test 3'\n    assert move_zeros([0,0,0,0,0,0]) == 6, 'Test 4'",
      -12.421875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}