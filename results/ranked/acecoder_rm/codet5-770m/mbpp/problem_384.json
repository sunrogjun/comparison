{
  "problem": {
    "task_id": "MBPP/395",
    "prompt": "Write a python function to find the first non-repeated character in a given string.",
    "canonical_solution": "def first_non_repeating_character(str1):\r\n  char_order = []\r\n  ctr = {}\r\n  for c in str1:\r\n    if c in ctr:\r\n      ctr[c] += 1\r\n    else:\r\n      ctr[c] = 1 \r\n      char_order.append(c)\r\n  for c in char_order:\r\n    if ctr[c] == 1:\r\n      return c\r\n  return None",
    "test_list": [
      "assert first_non_repeating_character(\"abcabc\") == None",
      "assert first_non_repeating_character(\"abc\") == \"a\"",
      "assert first_non_repeating_character(\"ababc\") == \"c\""
    ],
    "challenge_test_list": [],
    "problem_id": 384
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def first_non_repeated_character(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return None\n\n\ndef main():\n    str = input(\"Enter string : \")\n    print(first_non_repeated_character(str))\n\n\nif __name__ == '__main__':\n    main()",
      11.78125
    ],
    [
      "def first_non_repeated_char(s):\n    char_count = {}\n    for char in s:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    for key, value in char_count.items():\n        if value == 1:\n            return key\n    return None\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    print(first_non_repeated_char(string))\n\n\nif __name__ == \"__main__\":\n    main()",
      10.6953125
    ],
    [
      "def first_non_repeated_char(string):\n    char_dict = {}\n    for char in string:\n        if char in char_dict:\n            char_dict[char] += 1\n        else:\n            char_dict[char] = 1\n    for key, value in char_dict.items():\n        if value == 1:\n            return key\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_char(\"abcabcbb\"))",
      9.5546875
    ],
    [
      "def firstNonRepeatedChar(str):\n    if str:\n        for char in str:\n            if str.count(char) == 1:\n                return char\n    return None\n\nprint(firstNonRepeatedChar(\"abcabcbb\"))\nprint(firstNonRepeatedChar(\"abcd\"))\nprint(firstNonRepeatedChar(\"abcdabcd\"))\nprint(firstNonRepeatedChar(\"abcdabcdabcdabcdabcd\"))",
      5.96875
    ],
    [
      "def first_non_repeated(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return None\n\nprint(first_non_repeated(\"hello\"))\nprint(first_non_repeated(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
      5.86328125
    ],
    [
      "def first_non_repeated_char(str):\n    for c in str:\n        if str.count(c) == 1:\n            return c\n    return None\n\nprint(first_non_repeated_char(\"aabcc\"))\nprint(first_non_repeated_char(\"aabccc\"))\nprint(first_non_repeated_char(\"aabcccc\"))\nprint(first_non_repeated_char(\"aabcccccc\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))\nprint(first_non_repeated_char(\"\"))",
      5.80859375
    ],
    [
      "def first_non_repeated(string):\n    for i in range(len(string)):\n        if string.count(string[i]) == 1:\n            return string[i]\n\nstring = \"aabbc\"\nprint(first_non_repeated(string))",
      5.43359375
    ],
    [
      "def first_non_repeated_char(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    for i in range(len(str)):\n        if str.count(str[i]) == 1:\n            return str[i]\n    return \"\"\n\n\nprint(first_non_repeated_char(\"bababa\"))",
      5.0703125
    ],
    [
      "def first_non_repeated(str):\n    for i in range(len(str)):\n        if str.count(str[i]) == 1:\n            return str[i]\n    return ''\n\n\nprint(first_non_repeated('hello'))\nprint(first_non_repeated('abc'))\nprint(first_non_repeated('abcabc'))\nprint(first_non_repeated('abcabcabc'))\nprint(first_non_repeated('abcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabc'))\nprint(first_non_repeated('abcabcabcabcabcabcabcabc'))",
      4.5078125
    ],
    [
      "def first_non_repeated(str):\n    \"\"\"\n    :type str: str\n    :rtype: int\n    \"\"\"\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    str = \"aabcca\"\n    print(first_non_repeated(str))",
      4.19140625
    ],
    [
      "def first_non_repeated_char(s):\n    for i in s:\n        if s.count(i) == 1:\n            return i\n\n    return None\n\n\nprint(first_non_repeated_char(\"aabbbb\"))\nprint(first_non_repeated_char(\"abbba\"))",
      3.9921875
    ],
    [
      "def first_non_repeated_char(s):\n    for i in s:\n        if s.count(i) == 1:\n            return i",
      3.939453125
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n\n\nprint(first_non_repeated_char(\"abcabcabcabc\"))",
      3.8359375
    ],
    [
      "def first_non_repeated_char(str):\n    char_dict = {}\n    for char in str:\n        if char not in char_dict:\n            char_dict[char] = 1\n        else:\n            char_dict[char] += 1\n\n    for char in str:\n        if char_dict[char] == 1:\n            return char\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_char(\"hello\"))\n    print(first_non_repeated_char(\"hello world\"))\n    print(first_non_repeated_char(\"hello world\"))\n    print(first_non_repeated_char(\"hello world\"))\n    print(first_non_repeated_char(\"hello world\"))",
      3.66015625
    ],
    [
      "def first_non_repeated_character(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return None\n\nprint(first_non_repeated_character(\"abcabcbb\"))\nprint(first_non_repeated_character(\"abccccccc\"))\nprint(first_non_repeated_character(\"abccccccc\"))",
      2.990234375
    ],
    [
      "def first_non_repeated_character(str):\n    return next((x for x in str if str.count(x) == 1), None)\n\nprint(first_non_repeated_character('abcd'))",
      2.904296875
    ],
    [
      "def first_non_repeated_char(str_):\n    for c in str_:\n        if str_.count(c) == 1:\n            return c\n\n\nif __name__ == '__main__':\n    print(first_non_repeated_char('abc'))\n    print(first_non_repeated_char('abcab'))\n    print(first_non_repeated_char('abcabc'))\n    print(first_non_repeated_char('abcabcab'))\n    print(first_non_repeated_char('aab'))\n    print(first_non_repeated_char('aaba'))\n    print(first_non_repeated_char('aabaab'))\n    print(first_non_repeated_char('aabb'))\n    print(first_non_repeated_char('aabbab'))\n    print(first_non_repeated_char('aabbabababa'))\n    print(first_non_repeated_char('aabbabababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
      2.703125
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n\n\nprint(first_non_repeated_char(\"abc\"))\nprint(first_non_repeated_char(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      2.5546875
    ],
    [
      "def find_first_non_repeated_char(string):\n    for char in string:\n        if string.count(char) > 1:\n            return char\n    return string\n\nprint(find_first_non_repeated_char(\"racecar\"))",
      2.306640625
    ],
    [
      "def first_non_repeated_char(s):\n    for i in range(len(s)):\n        if s.count(s[i]) == 1:\n            return s[i]\n    return \"not found\"\n\n\nprint(first_non_repeated_char(\"abcd\"))",
      2.12890625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n    return str[-1]\n\nprint(first_non_repeated_char(\"abcdabcd\"))\nprint(first_non_repeated_char(\"abcdabcd\"))\nprint(first_non_repeated_char(\"abcdabcd\"))\nprint(first_non_repeated_char(\"a\"))\nprint(first_non_repeated_char(\"abcdabcd\"))",
      2.087890625
    ],
    [
      "def first_non_repeated(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n    return None\n\nif __name__ == '__main__':\n    print(first_non_repeated('aabbbcccdaaa'))",
      1.9765625
    ],
    [
      "def first_non_repeated_char(s):\n    for i in range(len(s)):\n        if s[i] in s[i+1:]:\n            return s[i]\n    return ''\n\nprint(first_non_repeated_char('aab'))",
      1.9638671875
    ],
    [
      "def first_non_repeated_char(s):\n    for char in s:\n        if s.count(char) == 1:\n            return char\n    return None\n\nprint(first_non_repeated_char('abc'))\nprint(first_non_repeated_char('cab'))\nprint(first_non_repeated_char('abcabc'))\nprint(first_non_repeated_char(''))\nprint(first_non_repeated_char('a'))",
      1.943359375
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return \"not found\"\n\nprint(first_non_repeated_char(\"the quick brown fox jumps over the lazy dog\"))",
      1.8642578125
    ],
    [
      "def first_non_repeated_character(string):\n    return next((x for x in string if string.count(x) == 1), None)\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_character(\"ababab\"))\n    print(first_non_repeated_character(\"aababab\"))\n    print(first_non_repeated_character(\"abababab\"))",
      1.75
    ],
    [
      "def first_non_repeated_char(string):\n    for i in string:\n        if string.count(i) == 1:\n            return i\n    return \"Not found\"\n\n\nprint(first_non_repeated_char(\"hello world\"))\nprint(first_non_repeated_char(\"hello world\"))\nprint(first_non_repeated_char(\"hello world\"))",
      1.609375
    ],
    [
      "def first_non_repeated_char(string):\n    char_dict = {}\n    for char in string:\n        if char in char_dict:\n            char_dict[char] += 1\n        else:\n            char_dict[char] = 1\n\n    for char in char_dict:\n        if char_dict[char] == 1:\n            return char\n    return \"Not found\"\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_char(\"abcabcbb\"))\n    print(first_non_repeated_char(\"abababab\"))\n    print(first_non_repeated_char(\"abbbbab\"))\n    print(first_non_repeated_char(\"abbbbbbbbbbabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
      1.5791015625
    ],
    [
      "def first_non_repeated(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return -1\n\n\nprint(first_non_repeated(\"abbaab\"))",
      1.5546875
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n\nprint(first_non_repeated_char(\"abcd\"))",
      1.435546875
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n\n\nprint(first_non_repeated_char('ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
      1.388671875
    ],
    [
      "def first_non_repeated(s):\n    for c in s:\n        if s.count(c) == 1:\n            return c\n\n\nprint(first_non_repeated(\"aabbbcc\"))",
      1.158203125
    ],
    [
      "def first_non_repeated(s):\n    for i in s:\n        if s.count(i) == 1:\n            return i\n    return None\n\nprint(first_non_repeated(\"abcdcdcd\"))",
      1.1396484375
    ],
    [
      "def first_non_repeating(str):\n    # Your code here\n    for char in str:\n        if str.count(char) == 1:\n            return char\n    return None\n\nprint(first_non_repeating(\"aabbcccccccc\"))",
      1.1357421875
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n    return \"\"\n\nprint(first_non_repeated_char(\"abab\"))",
      1.052734375
    ],
    [
      "def first_non_repeated_char(s):\n    for i in range(len(s)):\n        if s[i] not in s[i+1:]:\n            return s[i]\n    return ''\n\n\nprint(first_non_repeated_char('abc'))\nprint(first_non_repeated_char('ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
      0.8955078125
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) > 1:\n            return i\n    return None\n\n\nprint(first_non_repeated_char(\"abcd\"))",
      0.7939453125
    ],
    [
      "def find_first_non_repeated_char(string):\n    for char in string:\n        if string.count(char) == 1:\n            return char\n\n    return \"\"\n\n\nprint(find_first_non_repeated_char(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      0.71435546875
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return -1\n\n\nprint(first_non_repeated_char(\"abcdabcdab\"))",
      0.6513671875
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return \"Not found\"\n\n\nprint(first_non_repeated_char(\"abcabcbb\"))",
      0.470947265625
    ],
    [
      "def first_non_repeated_char(str):\n    return next((i for i, c in enumerate(str) if str.count(c) == 1), None)\n\nprint(first_non_repeated_char(\"abcabcbb\"))",
      0.4375
    ],
    [
      "def first_non_repeating_char(s):\n    for i in range(len(s)):\n        if s.count(s[i]) == 1:\n            return s[i]\n    return ''\n\nprint(first_non_repeating_char('racecar'))\nprint(first_non_repeating_char('racecarcar'))\nprint(first_non_repeating_char('racecarcarracecar'))\nprint(first_non_repeating_char('racecar'))\nprint(first_non_repeating_char('racecarracecarracecar'))\nprint(first_non_repeating_char('racecarracecarracecarracecarracecar'))\nprint(first_non_repeating_char('racecarracecarracecarracecarracecarracecar'))",
      0.320068359375
    ],
    [
      "def first_non_repeated_character(str):\n    for i in range(len(str)):\n        if str[i] not in str:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_character(\"abcdef\"))\n    print(first_non_repeated_character(\"abcd\"))\n    print(first_non_repeated_character(\"abcc\"))",
      0.295166015625
    ],
    [
      "def first_non_repeated_char(str):\n    count = 0\n    for i in str:\n        if str.count(i) > 1:\n            count += 1\n\n    return str[count - 1]\n\n\nprint(first_non_repeated_char(\"abcabcbb\"))",
      0.2386474609375
    ],
    [
      "def first_non_repeated(string):\n    for char in string:\n        if string.count(char) == 1:\n            return char\n    return \"\"\n\n\nprint(first_non_repeated(\"abcdcdabc\"))",
      0.148193359375
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n\n\nprint(first_non_repeated_char('abc'))\nprint(first_non_repeated_char('abcd'))\nprint(first_non_repeated_char('abcdd'))",
      0.114501953125
    ],
    [
      "def first_non_repeated_char(str):\n    str = list(str)\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n    return None\n\nprint(first_non_repeated_char(\"abc\"))\nprint(first_non_repeated_char(\"abababab\"))\nprint(first_non_repeated_char(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
      -0.0975341796875
    ],
    [
      "def first_non_repeated(str):\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n    return \"\"\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated(\"abcd\"))",
      -0.29052734375
    ],
    [
      "def first_non_repeated_character(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    for c in str:\n        if str.count(c) == 1:\n            return c",
      -0.30322265625
    ],
    [
      "def first_non_repeated_char(str):\n    \"\"\"\n    :param str: string\n    :return: first non-repeated character in the string\n    \"\"\"\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n    return str[0]\n\nprint(first_non_repeated_char('abcabcbb'))",
      -0.31103515625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n\n\nif __name__ == '__main__':\n    print(first_non_repeated_char('ababaababaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaaba",
      -0.44775390625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str.count(str[i]) == 1:\n            return str[i]\n\nif __name__ == \"__main__\":\n    str = \"aaaaaaaaaaa\"\n    print(first_non_repeated_char(str))",
      -0.7509765625
    ],
    [
      "def first_non_repeated_char(s):\n    for i in s:\n        if s.count(i) == 1:\n            return i\n    return 'None'\n\n\nprint(first_non_repeated_char(\"abcdabcd\"))\nprint(first_non_repeated_char(\"abcdabcdabcd\"))\nprint(first_non_repeated_char(\"abcdabcdabcd\"))\nprint(first_non_repeated_char(\"abcdabcdabcd\"))",
      -0.85595703125
    ],
    [
      "def first_non_repeated_char(string):\n    for char in string:\n        if string.count(char) == 1:\n            return char\n\n\nif __name__ == \"__main__\":\n    assert first_non_repeated_char(\"abcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcd\") == \"b\"\n    assert first_non_repeated_char(\"aab\") == \"a\"\n    assert first_non_repeated_char(\"\") == \"\"",
      -0.85595703125
    ],
    [
      "def first_non_repeated(string):\n    return string[string.find('a')+1:]",
      -0.85595703125
    ],
    [
      "def first_non_repeating_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n\nprint(first_non_repeating_char(\"abcbabcb\"))",
      -0.85693359375
    ],
    [
      "def first_non_repeated_char(str):\n    char_count = {}\n    for char in str:\n        if char in char_count:\n            char_count[char] += 1\n        else:\n            char_count[char] = 1\n    for char, count in char_count.items():\n        if count == 1:\n            return char\n    return None\n\nprint(first_non_repeated_char(\"aabcccc\"))",
      -0.85693359375
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n\n\nprint(first_non_repeated_char(\"abcd\"))\nprint(first_non_repeated_char(\"abc\"))\nprint(first_non_repeated_char(\"a\"))",
      -0.85693359375
    ],
    [
      "def first_non_repeated_character(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return ''\n\n\nif __name__ == '__main__':\n    str = \"This is a string\"\n    print(first_non_repeated_character(str))",
      -0.85693359375
    ],
    [
      "def first_non_repeated_char(str):\n    count = 0\n    for i in str:\n        if str.count(i) == 1:\n            count += 1\n\n    return str[count]\n\n\nprint(first_non_repeated_char(\"ababcccc\"))\nprint(first_non_repeated_char(\"aabbcccc\"))\nprint(first_non_repeated_char(\"ababcccccc\"))\nprint(first_non_repeated_char(\"aabbcccccc\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n    return None\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_char(\"abcabcbb\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated(str):\n    if str.count(\"a\") > 0:\n        return str[0]\n    else:\n        return None\n\nprint(first_non_repeated(\"abc\"))",
      -0.85791015625
    ],
    [
      "def find_first_non_repeating_char(string):\n    for i in string:\n        if string.count(i) == 1:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_first_non_repeating_char(\"abba\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return -1\n\nif __name__ == '__main__':\n    str = \"aabccccccc\"\n    print(first_non_repeated_char(str))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n\n    return None\n\nprint(first_non_repeated_char(\"ababba\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return -1\n\n\nprint(first_non_repeated_char(\"abcdabcd\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(s):\n    \"\"\"\n    :type s: str\n    :rtype: str\n    \"\"\"\n\n    for i in range(len(s)):\n        if s.count(s[i]) == 1:\n            return s[i]\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_char(\"abcbabcc\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(s):\n    # Write your code here\n    for i in range(len(s)):\n        if s.count(s[i]) == 1:\n            return s[i]\n\n    return -1\n\n\nprint(first_non_repeated_char(\"abcd\"))",
      -0.85791015625
    ],
    [
      "def first_non_repeated_char(s):\n    for i in range(len(s)):\n        if s[i] not in s[i+1:]:\n            return s[i]\n    return None\n\n\ns = 'abcdabcdabcdabcdabcd'\nprint(first_non_repeated_char(s))",
      -0.85888671875
    ],
    [
      "def first_non_repeating_char(str1):\n    for i in str1:\n        if str1.count(i) == 1:\n            return i\n\n\nprint(first_non_repeating_char(\"abcabcabcabc\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_char(str):\n    char_dict = {}\n    for i in str:\n        if i in char_dict:\n            return i\n        else:\n            char_dict[i] = 1\n\n\nprint(first_non_repeated_char(\"abba\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_char(str):\n    if len(str) == 0:\n        return \"\"\n    counter = 0\n    for i in str:\n        if str.count(i) == 1:\n            counter += 1\n    if counter == 0:\n        return \"\"\n    else:\n        return str[counter-1]\n\nprint(first_non_repeated_char(\"abc\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str[i] in str[i+1:]:\n            return str[i]\n\n    return \"not found\"\n\n\n\n\nprint(first_non_repeated_char(\"hello\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_character(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return -1\n\n\nprint(first_non_repeated_character(\"hello\"))\nprint(first_non_repeated_character(\"hello, world\"))\nprint(first_non_repeated_character(\"hello, world, hello\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_character(string):\n    for i in string:\n        if string.count(i) == 1:\n            return i\n    return -1\n\nprint(first_non_repeated_character(\"abababababababab\"))\nprint(first_non_repeated_character(\"ababababababababab\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_char(string):\n    for i in range(len(string)):\n        if string.count(string[i]) == 1:\n            return string[i]\n    return \"\"\n\n\nprint(first_non_repeated_char(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"))",
      -0.85888671875
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n\nprint(first_non_repeated_char(\"hello\"))\nprint(first_non_repeated_char(\"hello\"))\nprint(first_non_repeated_char(\"hello\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n\n\nprint(first_non_repeated_char(\"abcabcbb\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str[i] not in str[i+1:]:\n            return str[i]\n\n\nprint(first_non_repeated_char(\"abcdabcdabcd\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated(string):\n    return string[0] if len(string) > 0 else None\n\n\nprint(first_non_repeated(\"aabbbb\"))\nprint(first_non_repeated(\"aaaaaaaa\"))\nprint(first_non_repeated(\"aabbbb\"))\nprint(first_non_repeated(\"aaaaa\"))\nprint(first_non_repeated(\"aabb\"))\nprint(first_non_repeated(\"aabbbb\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n    return None\n\n\nprint(first_non_repeated_char(\"bobby\"))\nprint(first_non_repeated_char(\"bobbyby\"))\nprint(first_non_repeated_char(\"bobbyby\"))\nprint(first_non_repeated_char(\"bobbybyby\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    for char in str:\n        if str.count(char) == 1:\n            return char\n    return -1\n\nprint(first_non_repeated_char(\"ababababab\"))\nprint(first_non_repeated_char(\"aabaabaab\"))\nprint(first_non_repeated_char(\"ababaababa\"))\nprint(first_non_repeated_char(\"ababababababab\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated(s):\n    s_list = list(s)\n    for i in range(len(s_list)):\n        if s_list[i] not in s_list[:i]:\n            return s_list[i]\n    return ''\n\n\nprint(first_non_repeated('abc'))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    for c in str:\n        if str.count(c) == 1:\n            return c\n    return None\n\nprint(first_non_repeated_char(\"abcdefghijklmnopqrstuvwxyz\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    if str == \"\":\n        return 0\n    for char in str:\n        if str.count(char) == 1:\n            return char\n    return 0\n\nprint(first_non_repeated_char(\"abab\"))",
      -0.86083984375
    ],
    [
      "def first_non_repeated_char(str):\n    for i in range(len(str)):\n        if str[i] not in str[:i+1]:\n            return str[i]\n    return \"\"\n\n\nif __name__ == \"__main__\":\n    assert first_non_repeated_char(\"abcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcdabcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcdabcdabcdabcdabcdabcdabcdabcd\") == \"\"\n    assert first_non_repeated_char(\"\") == \"\"\n    assert first_non_repeated_char(\"abcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\") == \"a\"\n    assert first_non_repeated_char(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\") == \"\"\n    assert first_non_repeated_char(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd",
      -1.0498046875
    ],
    [
      "def first_non_repeated_character(str):\n    \"\"\"\n    :param str: a string\n    :return: the first non-repeated character\n    \"\"\"\n    return str[0] if str.count(str[0]) == 1 else -1\n\n\nif __name__ == \"__main__\":\n    str = \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
      -3.30859375
    ],
    [
      "def first_non_repeated_char(str):\n    if not str:\n        return None\n    char = \"\"\n    for i in range(len(str)):\n        if str[i] not in char:\n            char += str[i]\n    return char\n\nprint(first_non_repeated_char(\"hello\"))\nprint(first_non_repeated_char(\"hello world\"))\nprint(first_non_repeated_char(\"hello\"))\nprint(first_non_repeated_char(\"hello world\"))\nprint(first_non_repeated_char(\"hello world\"))",
      -4.8359375
    ],
    [
      "def first_non_repeated_char(s):\n    for i in range(len(s)):\n        if s.count(s[i]) > 1:\n            return s[i]\n    return ''\n\n\nif __name__ == '__main__':\n    print(first_non_repeated_char('abcabcabcbb'))\n    print(first_non_repeated_char('abcbb'))",
      -5.0078125
    ],
    [
      "def first_non_repeated_character(string):\n    if string == \"\":\n        return \"\"\n    if string in string:\n        return string\n    for i in string:\n        if string.count(i) == 1:\n            return i\n\n\nstring = \"abcd\"\nprint(first_non_repeated_character(string))",
      -5.796875
    ],
    [
      "def first_non_repeated_character(str):\n    for i in str:\n        if str.count(i) == 1:\n            return i\n    return ''\n\n\ndef first_non_repeated_character_2(str):\n    for i in str:\n        if str.count(i) > 1:\n            return i\n    return ''\n\n\ndef first_non_repeated_character_3(str):\n    for i in str:\n        if str.count(i) == 1:\n            if str.find(i) == -1:\n                return i\n    return ''\n\n\ndef main():\n    str1 = 'abcabcbb'\n    str2 = 'abc'\n    str3 = 'a'\n    str4 = 'abcabcbb'\n    str5 = 'abcabcbbab'\n    str6 = 'abcabcbbabcbb'\n    str7 = 'abcabcbbabcbbab'\n    str8 = 'abcabcbbabcbbabcbbab'\n    str9 = 'abcabcbbabcbbabcbbab'\n    str10 = 'abcabcbbabcbbabcbbab'\n    str11 = 'abcabcbbabcbbabcbbabcbbab'\n    str12 = 'abcabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbbabcbb",
      -6.41015625
    ],
    [
      "def first_non_repeated_char(str):\n    if str == \"\":\n        return \"\"\n    char = str[0]\n    for i in range(len(str)):\n        if str[i] == char:\n            return char\n        else:\n            char = str[i]\n    return \"\"\n\n\nprint(first_non_repeated_char(\"abcdefghijklmnopqrstuvwxyz\"))",
      -6.58984375
    ],
    [
      "def first_non_repeated(str):\n    return str.find(str[0])\n\nprint(first_non_repeated(\"abc\"))\nprint(first_non_repeated(\"abcd\"))\nprint(first_non_repeated(\"abcdabcd\"))\nprint(first_non_repeated(\"abcdabcdabcd\"))\nprint(first_non_repeated(\"abcdabcdabcd\"))",
      -9.5625
    ],
    [
      "def first_non_repeated_char(str):\n    for i in str:\n        if str.count(i) > 1:\n            return i\n\nprint(first_non_repeated_char(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdab",
      -10.1875
    ],
    [
      "def first_non_repeated_character(str):\n    for i in range(len(str)):\n        if str[i] in str:\n            return str[0]\n    return \"\"\n\n\nprint(first_non_repeated_character(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
      -10.28125
    ],
    [
      "def first_non_repeating_char(s):\n    for i in range(len(s)):\n        if s[i] == s[i-1]:\n            return s[i]\n    return ''\n\nprint(first_non_repeating_char('hello world'))\nprint(first_non_repeating_char('this is a test'))\nprint(first_non_repeating_char('hello'))\nprint(first_non_repeating_char('hello world'))\nprint(first_non_repeating_char('hello world hello'))\nprint(first_non_repeating_char('hello world hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello hello'))\nprint(first_non_repeating_char('hello world hello hello hello hello hello hello'))",
      -11.453125
    ],
    [
      "def first_non_repeated(string):\n    for i in range(len(string)):\n        if string[i] in string[i+1:]:\n            return string[i]\n    return \"\"\n\nprint(first_non_repeated(\"aabcccaaa\"))\nprint(first_non_repeated(\"aaaaaaaaaaaaaaaa\"))\nprint(first_non_repeated(\"aaaaaaaaaaaaaaaa\"))\nprint(first_non_repeated(\"aabcccaaa\"))\nprint(first_non_repeated(\"aabcccaaa\"))\nprint(first_non_repeated(\"aaaaaaaaaaaaaa\"))",
      -11.5859375
    ],
    [
      "def first_non_repeated_char(str):\n    str = str.lower()\n    for i in range(len(str)):\n        if str[i] in str[i+1:]:\n            return str[i]\n    return \"\"\n\n\nif __name__ == \"__main__\":\n    print(first_non_repeated_char(\"The quick brown fox jumps over the lazy dog\"))",
      -11.984375
    ],
    [
      "def first_non_repeated_char(string):\n  # Fill this in.\n  for i in range(len(string)):\n    if string[i] in string[i+1:]:\n      return string[i]\n\n  return \"\"\n\n\nprint(first_non_repeated_char(\"abcd\"))\nprint(first_non_repeated_char(\"abcd\"))\nprint(first_non_repeated_char(\"abcdabcd\"))\nprint(first_non_repeated_char(\"abcdabcdabcd\"))",
      -12.4375
    ],
    [
      "def first_non_repeated_character(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    if str == '':\n        return ''\n    for char in str:\n        if str.count(char) > 1:\n            return char\n    return ''\n\n\nprint(first_non_repeated_character('abab'))\nprint(first_non_repeated_character('ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
      -14.3984375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}