{
  "problem": {
    "task_id": "MBPP/111",
    "prompt": "Write a function to find common elements in given nested lists. * list item * list item * list item * list item",
    "canonical_solution": "def common_in_nested_lists(nestedlist):\r\n    result = list(set.intersection(*map(set, nestedlist)))\r\n    return result",
    "test_list": [
      "assert common_in_nested_lists([[12, 18, 23, 25, 45], [7, 12, 18, 24, 28], [1, 5, 8, 12, 15, 16, 18]])==[18, 12]",
      "assert common_in_nested_lists([[12, 5, 23, 25, 45], [7, 11, 5, 23, 28], [1, 5, 8, 18, 23, 16]])==[5,23]",
      "assert common_in_nested_lists([[2, 3,4, 1], [4, 5], [6,4, 8],[4, 5], [6, 8,4]])==[4]"
    ],
    "challenge_test_list": [],
    "problem_id": 100
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def find_common_elements(list_one, list_two):\n    common_elements = []\n    if list_one and list_two:\n        list_one_set = set(list_one)\n        list_two_set = set(list_two)\n        common_elements = list_one_set.intersection(list_two_set)\n    return common_elements\n\n\nif __name__ == \"__main__\":\n    list_one = [\"a\", \"b\", \"c\"]\n    list_two = [\"d\", \"e\"]\n    print(find_common_elements(list_one, list_two))",
      1.908203125
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n\n    for item in nested_list:\n        if item in common_list:\n            continue\n        else:\n            common_list.append(item)\n\n    return common_list\n\n\nif __name__ == \"__main__\":\n    nested_list = [1, 2, 3, 4, 5]\n    common_list = common_elements(nested_list)\n    print(common_list)",
      1.16015625
    ],
    [
      "def common_elements(nested_list):\n    # Write your code here\n    common_list = []\n    for item in nested_list:\n        if item not in common_list:\n            common_list.append(item)\n\n    return common_list\n\nprint(common_elements([[1, 2], [3, 4]]))",
      0.9072265625
    ],
    [
      "def common_elements(list1, list2):\n    common_list = []\n    for i in range(len(list1)):\n        if list1[i] in list2:\n            common_list.append(list1[i])\n    return common_list\n\ndef common_elements_2(list1, list2):\n    common_list = []\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j]:\n                common_list.append(list1[i])\n    return common_list\n\nlist1 = [1,2,3,4,5]\nlist2 = [2,4,6,8,10]\n\nprint(common_elements_2(list1, list2))",
      0.61279296875
    ],
    [
      "def common_elements(list_1, list_2):\n    common_list = []\n    for i in list_1:\n        for j in list_2:\n            if i == j:\n                common_list.append(i)\n    return common_list\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3], [4, 5, 6]))",
      0.439208984375
    ],
    [
      "def common_elements(list1, list2):\n    list1_set = set(list1)\n    list2_set = set(list2)\n    common = list1_set.intersection(list2_set)\n    return common\n\n\nlist1 = [1, 2, 3, 4]\nlist2 = [5, 6, 7, 8]\nprint(common_elements(list1, list2))",
      0.1893310546875
    ],
    [
      "def find_common(list1, list2):\n    list1.sort()\n    list2.sort()\n    common_elements = []\n    for i in range(0, len(list1)):\n        if list1[i] in list2:\n            common_elements.append(list1[i])\n    return common_elements\n\n\nprint(find_common([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]))",
      0.07440185546875
    ],
    [
      "def common_elements(list_1, list_2):\n    common = []\n    for i in range(len(list_1)):\n        if list_1[i] in list_2:\n            common.append(list_1[i])\n    return common\n\nlist_1 = [1, 2, 3, 4, 5]\nlist_2 = [1, 2, 3, 4, 5]\n\nprint(common_elements(list_1, list_2))",
      -0.015838623046875
    ],
    [
      "def common_list(list1, list2):\n    common = []\n    list1.sort()\n    list2.sort()\n\n    for item in list1:\n        if item in list2:\n            common.append(item)\n\n    return common\n\n\nprint(common_list([1, 2, 3, 4], [2, 3, 4, 5]))",
      -0.1053466796875
    ],
    [
      "def common_elements(nested_list):\n    # Write your code here\n    common_elements_dict = {}\n    for item in nested_list:\n        if item not in common_elements_dict:\n            common_elements_dict[item] = 1\n        else:\n            common_elements_dict[item] += 1\n    common_elements_list = []\n    for item in common_elements_dict:\n        if common_elements_dict[item] > 1:\n            common_elements_list.append(item)\n    return common_elements_list\n\n\nif __name__ == '__main__':\n    nested_list = [\n        [1, 2, 3],\n        [1, 2, 4],\n        [1, 2, 5],\n        [1, 2, 6]\n    ]\n    print(common_elements(nested_list))",
      -0.388671875
    ],
    [
      "def common(n_list):\n    n_list.sort()\n    result = []\n    for i in n_list:\n        if i not in result:\n            result.append(i)\n    return result\n\n\nn_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(common(n_list))",
      -0.70361328125
    ],
    [
      "def common_elements(list1, list2):\n    common = set(list1) & set(list2)\n    return common\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3], [4, 5, 6]))",
      -0.748046875
    ],
    [
      "def common(lst1, lst2):\n    lst3 = []\n    common_list = []\n\n    for i in lst1:\n        for j in lst2:\n            if i in j:\n                common_list.append(i)\n\n    return common_list\n\n\nprint(common([1, 2, 3, 4], [1, 2, 3, 4]))",
      -0.755859375
    ],
    [
      "def common_elements(nested_list1, nested_list2):\n    common_list = []\n    for i in range(len(nested_list1)):\n        for j in range(len(nested_list2)):\n            if nested_list1[i] == nested_list2[j]:\n                common_list.append(nested_list1[i])\n    return common_list\n\nprint(common_elements([1,2,3,4,5], [1,2,3,4,5]))",
      -0.85595703125
    ],
    [
      "def common_elements(lst1, lst2):\n    common = []\n    for item1 in lst1:\n        if item1 in lst2:\n            common.append(item1)\n    return common\n\nlst1 = [1, 2, 3, 4, 5]\nlst2 = [1, 2, 3, 4, 5]\nprint(common_elements(lst1, lst2))",
      -0.85595703125
    ],
    [
      "def find_common(list1, list2):\n    common_list = []\n\n    for item in list1:\n        if item in list2:\n            common_list.append(item)\n\n    return common_list\n\n\nprint(find_common([1,2,3],[4,5]))",
      -0.85693359375
    ],
    [
      "def common_elements(list1, list2):\n    list1_set = set(list1)\n    list2_set = set(list2)\n\n    common_list = list1_set.intersection(list2_set)\n\n    return list(common_list)",
      -0.85693359375
    ],
    [
      "def common_elements(list_1, list_2):\n    common = []\n    list_1.sort()\n    list_2.sort()\n    for i in range(len(list_1)):\n        if list_1[i] in list_2:\n            common.append(list_1[i])\n    return common",
      -0.85693359375
    ],
    [
      "def common(nested_list):\n    if not nested_list:\n        return []\n    common = []\n    for item in nested_list:\n        if item in common:\n            continue\n        common.append(item)\n    return common",
      -0.85791015625
    ],
    [
      "def common_elements(nested_list1, nested_list2):\n    common_elements = []\n    common_elements = set(nested_list1).intersection(set(nested_list2))\n    return common_elements",
      -0.85791015625
    ],
    [
      "def common_elements(a, b):\n    if len(a) == 0 or len(b) == 0:\n        return None\n    else:\n        return list(set(a).intersection(set(b)))",
      -0.85791015625
    ],
    [
      "def common_elements(nested_list):\n    common_elements_list = []\n    for i in nested_list:\n        if i in common_elements_list:\n            common_elements_list.append(i)\n        else:\n            common_elements_list.append(i)\n    return common_elements_list\n\n\nprint(common_elements([1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5, 6]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -0.8583984375
    ],
    [
      "def common_elements(list_one, list_two):\n    common_elements = set(list_one).intersection(set(list_two))\n    return list(common_elements)\n\n\nprint(common_elements([1, 2, 3], [1, 2, 3]))",
      -0.8583984375
    ],
    [
      "def common_elements(list1, list2):\n    common_elements = []\n    for item in list1:\n        if item in list2:\n            common_elements.append(item)\n\n    return common_elements\n\n\nprint(common_elements([1, 2, 3], [4, 5, 6]))",
      -0.8583984375
    ],
    [
      "def common_elements(list_1, list_2):\n    common = []\n    for item in list_1:\n        if item in list_2:\n            common.append(item)\n    return common\n\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4], [2, 4, 6]))\nprint(common_elements([1, 2, 3, 4], [1, 2, 3, 4]))\nprint(common_elements([1, 2, 3, 4], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]))",
      -0.8583984375
    ],
    [
      "def find_common_elements(nested_list1, nested_list2):\n    common_elements = []\n    for nested_element in nested_list1:\n        if nested_element in nested_list2:\n            common_elements.append(nested_element)\n    return common_elements\n\n\nif __name__ == \"__main__\":\n    nested_list1 = [1, 2, 3, 4]\n    nested_list2 = [1, 2, 3, 4]\n    common_elements = find_common_elements(nested_list1, nested_list2)\n    print(common_elements)",
      -0.8583984375
    ],
    [
      "def common_elements(list1, list2):\n    common = []\n    for item1 in list1:\n        for item2 in list2:\n            if item1 == item2:\n                common.append(item1)\n    return common\n\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4]))",
      -0.8583984375
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n\n    for element in nested_list:\n        if element not in common_list:\n            common_list.append(element)\n\n    return common_list\n\n\nif __name__ == \"__main__\":\n    nested_list = [1, 2, 3, 4, 5]\n    common_list = common_elements(nested_list)\n    print(common_list)",
      -0.8583984375
    ],
    [
      "def common_list(list1, list2):\n    result = []\n    for list_item in list1:\n        for list_item2 in list2:\n            if list_item == list_item2:\n                result.append(list_item)\n    return result",
      -0.8583984375
    ],
    [
      "def common_elements(l1, l2):\n    common_list = []\n    if len(l1) == 0:\n        return common_list\n    if len(l2) == 0:\n        return common_list\n    for i in l1:\n        if i in l2:\n            common_list.append(i)\n    return common_list\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3, 4], [1, 2, 3, 4]))\n    print(common_elements([1, 2, 3, 4], [1, 2, 3, 5]))\n    print(common_elements([1, 2, 3, 4], [1, 4, 5]))\n    print(common_elements([1, 2, 3, 4], [1, 3, 5]))",
      -0.8583984375
    ],
    [
      "def common_list(a, b):\n    common = []\n    for i in range(len(a)):\n        if a[i] in b:\n            common.append(a[i])\n    return common\n\n\nprint(common_list([1, 2, 3, 4], [1, 2, 3]))\nprint(common_list([1, 2, 3, 4], [1, 2, 3, 4, 5]))\nprint(common_list([1, 2, 3, 4], [1, 2, 3, 4, 5, 6]))\nprint(common_list([1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7]))",
      -0.8583984375
    ],
    [
      "def common_elements(list1, list2):\n    common = set()\n    for item1 in list1:\n        for item2 in list2:\n            if item1 == item2:\n                common.add(item1)\n    return common\n\n\nlist1 = [[1, 2], [3, 4], [5, 6, 7]]\nlist2 = [[1, 2], [3, 4], [5, 6, 7]]\n\nprint(common_elements(list1, list2))",
      -0.8583984375
    ],
    [
      "def common_list(list1, list2):\n    list1.sort()\n    list2.sort()\n    common_list = []\n    for item in list1:\n        if item in list2:\n            common_list.append(item)\n    return common_list\n\n\nif __name__ == '__main__':\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [6, 7, 8, 9, 10]\n    print(common_list(list1, list2))",
      -0.8583984375
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n    for i in nested_list:\n        if i not in common_list:\n            common_list.append(i)\n    return common_list\n\n\nif __name__ == \"__main__\":\n    nested_list = [[1, 2, 3, 4], [5, 6, 7], [8, 9]]\n    common_list = common_elements(nested_list)\n    print(common_list)",
      -0.85888671875
    ],
    [
      "def find_common_elements(l1, l2):\n    common = []\n    for i in l1:\n        for j in l2:\n            if i == j:\n                common.append(i)\n    return common",
      -0.85888671875
    ],
    [
      "def common_elements(list1, list2):\n    common = set(list1).intersection(set(list2))\n    return list(common)\n\nprint(common_elements([1, 2, 3], [2, 3, 4]))\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]))",
      -0.85888671875
    ],
    [
      "def common_elements(list_1, list_2):\n    common_list = []\n    for i in range(0, len(list_1)):\n        for j in range(0, len(list_2)):\n            if list_1[i] == list_2[j]:\n                common_list.append(list_1[i])\n    return common_list\n\n\nlist_1 = [1, 2, 3, 4, 5]\nlist_2 = [6, 7, 8, 9, 10]\nprint(common_elements(list_1, list_2))",
      -0.92138671875
    ],
    [
      "def common_elements(nested_list):\n    common_elements = set()\n    for item in nested_list:\n        if item in common_elements:\n            continue\n        common_elements.add(item)\n    return common_elements\n\n\ndef main():\n    print(common_elements([1,2,3,4,5,6,7,8,9]))\n\n\nif __name__ == '__main__':\n    main()",
      -0.9609375
    ],
    [
      "def common_elements(a, b, c, d):\n    common = []\n    common.append(a)\n    common.append(b)\n    common.append(c)\n    common.append(d)\n    common.sort()\n    return common",
      -0.99755859375
    ],
    [
      "def commonElements(nested_list):\n    # write your code here\n    common_elements = []\n    for i in nested_list:\n        if i not in common_elements:\n            common_elements.append(i)\n    return common_elements\n\n# Test Cases\nprint(commonElements([[1,2],[3,4]]))\nprint(commonElements([[1,2],[3,4],[5,6]]))\nprint(commonElements([[1,2],[3,4],[5,6],[7,8]]))",
      -1.0615234375
    ],
    [
      "def common_elements(list1, list2):\n    common_elements_list = []\n\n    for i in list1:\n        for j in list2:\n            if i == j:\n                common_elements_list.append(i)\n\n    return common_elements_list\n\n\ndef main():\n    list1 = [1, 2, 3, 4]\n    list2 = [1, 2, 3, 4]\n    print(common_elements(list1, list2))\n\n\nif __name__ == '__main__':\n    main()",
      -1.248046875
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n    for item in nested_list:\n        if item in common_list:\n            continue\n        common_list.append(item)\n    return common_list\n\n\nnested_list = [1, 2, 3]\nprint(common_elements(nested_list))",
      -1.3154296875
    ],
    [
      "def find_common(nested_list1, nested_list2):\n    common = []\n    for i in nested_list1:\n        if i in nested_list2:\n            common.append(i)\n    return common",
      -1.5537109375
    ],
    [
      "def common_elements(list_1, list_2):\n    common = []\n    for i in range(len(list_1)):\n        if list_1[i] in list_2:\n            common.append(list_1[i])\n    return common\n\n\ndef main():\n    list_1 = [1, 2, 3, 4]\n    list_2 = [1, 2, 3]\n    print(common_elements(list_1, list_2))\n\n\nif __name__ == '__main__':\n    main()",
      -1.8359375
    ],
    [
      "def common_elements(list_item_1, list_item_2, list_item_3, list_item_4):\n    list_item_1_set = set(list_item_1)\n    list_item_2_set = set(list_item_2)\n    list_item_3_set = set(list_item_3)\n    list_item_4_set = set(list_item_4)\n\n    common_elements_set = list_item_1_set.intersection(list_item_2_set)\n    common_elements_set.update(list_item_3_set)\n    common_elements_set.update(list_item_4_set)\n\n    return common_elements_set\n\n\nprint(common_elements([1, 2, 3, 4], [2, 4, 6, 8], [1, 2, 3, 4], [1, 2, 3, 4]))",
      -2.109375
    ],
    [
      "def common(list1,list2):\n    common_list = []\n    for item in list1:\n        if item in list2:\n            common_list.append(item)\n    return common_list\n\nprint(common([1,2,3,4,5], [1,2,3,4,5]))\nprint(common([1,2,3,4,5], [1,2,3,4,5,6]))\nprint(common([1,2,3,4,5], [1,2,3,4,5,6,7]))\nprint(common([1,2,3,4,5], [1,2,3,4,5,6,7,8]))",
      -2.126953125
    ],
    [
      "def common_elements(list1, list2):\n    common_list = []\n    for i in list1:\n        for j in list2:\n            if i == j:\n                common_list.append(i)\n    return common_list\n\nlist1 = [1,2,3]\nlist2 = [2,3,4,5]\nprint(common_elements(list1, list2))",
      -2.1875
    ],
    [
      "def common_elements(list1, list2):\n    common_list = []\n    for i in range(len(list1)):\n        if list1[i] in list2:\n            common_list.append(list1[i])\n    return common_list\n\n\nif __name__ == '__main__':\n    list1 = [1, 2, 3, 4]\n    list2 = [1, 2, 3, 4, 5]\n    print(common_elements(list1, list2))\n\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [1, 2, 3, 4, 5]\n    print(common_elements(list1, list2))\n\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [1, 2, 3, 4, 5]\n    print(common_elements(list1, list2))\n\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [1, 2, 3, 4, 5]\n    print(common_elements(list1, list2))\n\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [1, 2, 3, 4, 5]\n    print(common_elements(list1, list2))",
      -2.265625
    ],
    [
      "def common(a, b):\n    a.sort()\n    b.sort()\n    common = []\n    for i in range(min(len(a), len(b))):\n        if a[i] == b[i]:\n            common.append(a[i])\n    return common\n\na = [2,2,2,3,3]\nb = [2,2,3,4,4]\nprint(common(a, b))",
      -2.41015625
    ],
    [
      "def common(list_1, list_2):\n    common_elements = []\n    common_list = []\n    for i in range(len(list_1)):\n        if list_1[i] in list_2:\n            common_elements.append(list_1[i])\n    for i in range(len(list_2)):\n        if list_2[i] in common_elements:\n            common_list.append(list_2[i])\n    return common_list\n\n\nprint(common([\"a\", \"b\", \"b\", \"a\"], [\"a\", \"b\"]))",
      -2.5546875
    ],
    [
      "def common_elements(nested_list1, nested_list2):\n    common_list = []\n    for item in nested_list1:\n        if item in nested_list2:\n            common_list.append(item)\n    return common_list\n\n\nlist1 = [1, 2, 3, 4, 5, 6]\nlist2 = [1, 2, 3, 4, 5, 6]\n\ncommon_list = common_elements(list1, list2)\nprint(common_list)",
      -2.583984375
    ],
    [
      "def common_list_items(nested_list):\n    common_list = []\n    for item in nested_list:\n        if item in common_list:\n            continue\n        else:\n            common_list.append(item)\n    return common_list\n\n\nif __name__ == '__main__':\n    print(common_list_items([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))",
      -2.634765625
    ],
    [
      "def common_elements(l1, l2):\n    common_list = []\n    for i in l1:\n        if i in l2:\n            common_list.append(i)\n\n    return common_list\n\n\nprint(common_elements([1, 2, 3], [2, 2, 2]))\nprint(common_elements([1, 2, 3], [3, 3, 3]))\nprint(common_elements([1, 2, 3], [4, 4, 4]))",
      -2.642578125
    ],
    [
      "def common_elements(list1, list2):\n    # create a set to store all the elements from both lists\n    common_elements = set()\n\n    # iterate through both lists\n    for list1_element in list1:\n        for list2_element in list2:\n            # check if the list1_element and list2_element are equal\n            if list1_element == list2_element:\n                # add the elements to the set\n                common_elements.add(list1_element)\n\n    # return the list of elements\n    return list(common_elements)\n\n\nprint(common_elements([1, 2, 3, 4], [2, 3, 4]))",
      -2.671875
    ],
    [
      "def common_elements(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return []\n    common = []\n    for i in list1:\n        if i in list2:\n            common.append(i)\n    return common\n\n\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7]))",
      -2.8046875
    ],
    [
      "def common_elements(list_1, list_2):\n    common_list = []\n    for i in list_1:\n        for j in list_2:\n            if i == j:\n                common_list.append(i)\n    return common_list\n\n\nlist_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nlist_2 = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(common_elements(list_1, list_2))",
      -3.31640625
    ],
    [
      "def common_elements(l1, l2):\n    if len(l1) == 0 or len(l2) == 0:\n        return None\n    common = []\n    for i in range(len(l1)):\n        if l1[i] in l2:\n            common.append(l1[i])\n    return common\n\n\nl1 = [[1, 2, 3], [4, 5, 6]]\nl2 = [[7, 8], [9, 10, 11]]\nprint(common_elements(l1, l2))",
      -3.337890625
    ],
    [
      "def common_elements(list_1, list_2):\n    list_1 = list(set(list_1))\n    list_2 = list(set(list_2))\n    common = []\n    for i in list_1:\n        if i in list_2:\n            common.append(i)\n    return common\n\n\nprint(common_elements([1, 2, 3, 4], [1, 2, 3, 4]))",
      -3.361328125
    ],
    [
      "def common_elements(nested_list):\n    \"\"\"\n    :type nested_list: list[list]\n    :rtype: list[str]\n    \"\"\"\n    common_list = []\n    for i in nested_list:\n        if len(i) > 0:\n            for j in i:\n                if j in common_list:\n                    common_list.remove(j)\n                else:\n                    common_list.append(j)\n    return common_list\n\n\nif __name__ == \"__main__\":\n    print(common_elements([[1, 2, 3], [4, 5, 6]]))\n    print(common_elements([[1, 2, 3, 4], [5, 6, 7]]))",
      -3.43359375
    ],
    [
      "def find_common_elements(a, b):\n    if len(a)!= len(b):\n        return False\n    elif len(a) == 1:\n        return a[0] in b\n    elif len(b) == 1:\n        return b[0] in a\n    else:\n        for i in range(len(a)):\n            if a[i] not in b[i]:\n                return False\n        return True\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4]\n    b = [4, 3, 2, 1]\n    print(find_common_elements(a, b))",
      -3.62109375
    ],
    [
      "def common_elements(lst1, lst2):\n    lst1.sort()\n    lst2.sort()\n    common = []\n    for i in lst1:\n        if i in lst2:\n            common.append(i)\n    return common\n\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))",
      -3.759765625
    ],
    [
      "def common_elements(list_1, list_2):\n    common_elements = []\n    for i in range(len(list_1)):\n        if list_1[i] in list_2:\n            common_elements.append(list_1[i])\n    return common_elements\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))",
      -3.8828125
    ],
    [
      "def common_elements(list_1, list_2):\n    common_list = []\n    for i in list_1:\n        for j in list_2:\n            if i == j:\n                common_list.append(i)\n    return common_list\n\nlist_1 = [[1, 2, 3], [4, 5, 6]]\nlist_2 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nprint(common_elements(list_1, list_2))",
      -3.890625
    ],
    [
      "def common_elements(list1, list2):\n    # Write your code here\n    common_list = []\n    for i in list1:\n        for j in list2:\n            if i == j:\n                common_list.append(i)\n    return common_list\n\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))",
      -3.890625
    ],
    [
      "def common_elements(nested_list):\n    common = []\n    for i in range(len(nested_list)):\n        for j in range(i+1, len(nested_list)):\n            if nested_list[i] == nested_list[j]:\n                common.append(nested_list[i])\n    return common\n\n\nnested_list = [[1,2], [3,4], [5,6,7,8,9], [10,11,12,13,14,15,16,17]]\nprint(common_elements(nested_list))",
      -3.99609375
    ],
    [
      "def common_elements(list_1, list_2):\n    common_elements = []\n    for item in list_1:\n        for item_2 in list_2:\n            if item == item_2:\n                common_elements.append(item)\n    return common_elements\n\ndef main():\n    list_1 = [1, 2, 3, 4, 5]\n    list_2 = [1, 2, 3, 4, 5]\n    print(common_elements(list_1, list_2))\n\nif __name__ == \"__main__\":\n    main()",
      -4.09375
    ],
    [
      "def commonElements(lst1, lst2):\n    common = []\n\n    for i in lst1:\n        for j in lst2:\n            if i in j:\n                common.append(i)\n\n    return common\n\nprint(commonElements([1, 2, 3, 4, 5], [2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n\nprint(commonElements([1, 2,",
      -4.11328125
    ],
    [
      "def common_elements(list1, list2):\n    common_list = []\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j]:\n                common_list.append(list1[i])\n    return common_list\n\n\ndef main():\n    print(common_elements([1, 2, 3], [4, 5, 6]))\n    print(common_elements([1, 2], [3, 4]))\n    print(common_elements([1, 2, 3, 4, 5], [6, 7, 8, 9]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], [4, 5, 6, 7, 8, 9, 10]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]))\n    print(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14",
      -4.21484375
    ],
    [
      "def common_elements(list1, list2):\n    common_list = []\n    for i in list1:\n        if i in list2:\n            common_list.append(i)\n    return common_list\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5, 6]\n    list2 = [1, 2, 3, 4, 5, 6]\n    print(common_elements(list1, list2))\n\n\nif __name__ == \"__main__\":\n    main()",
      -4.24609375
    ],
    [
      "def find_common_element(nested_list_1, nested_list_2):\n    common = []\n\n    for item in nested_list_1:\n        if item in nested_list_2:\n            common.append(item)\n\n    return common\n\n\nprint(find_common_element([1, 2, 3], [2, 3, 4]))",
      -4.33984375
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n    for item in nested_list:\n        if item not in common_list:\n            common_list.append(item)\n\n    return common_list\n\nprint(common_elements([1, 2, 3, 4]))\nprint(common_elements([1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -4.46875
    ],
    [
      "def common_elements(list1, list2):\n    common_list = []\n    if list1 and list2:\n        for i in range(len(list1)):\n            if list1[i] in list2:\n                common_list.append(list1[i])\n\n    return common_list\n\n\nprint(common_elements([1, 2, 3], [4, 5, 6]))\nprint(common_elements([1, 2, 3], [1, 2, 3]))\nprint(common_elements([1, 2, 3, 4], [5, 6, 7]))",
      -4.515625
    ],
    [
      "def common(list_1, list_2):\n    # Write your code here\n    result = []\n    if list_1 and list_2:\n        if list_1[0] == list_2[0]:\n            result.append(list_1[0])\n        if list_1[1] == list_2[1]:\n            result.append(list_1[1])\n        if list_1[2] == list_2[2]:\n            result.append(list_1[2])\n        if list_1[3] == list_2[3]:\n            result.append(list_1[3])\n    return result\n\n\nif __name__ == '__main__':\n    list_1 = [1, 2, 3]\n    list_2 = [4, 5, 6]\n    print(common(list_1, list_2))",
      -4.5703125
    ],
    [
      "def common_elements(nested_list_one, nested_list_two, nested_list_three):\n    common_list = []\n    common_list.append(nested_list_one)\n    common_list.append(nested_list_two)\n    common_list.append(nested_list_three)\n    return common_list\n\n\nif __name__ == \"__main__\":\n    nested_list_one = [1, 2, 3]\n    nested_list_two = [4, 5]\n    nested_list_three = [6, 7]\n\n    print(common_elements(nested_list_one, nested_list_two, nested_list_three))",
      -4.6484375
    ],
    [
      "def common_list(list1, list2):\n    result = []\n\n    for element in list1:\n        if element in list2:\n            result.append(element)\n\n    return result\n\n\nif __name__ == \"__main__\":\n    test_list = [1, 2, 3]\n    test_list1 = [1, 2, 3]\n    test_list2 = [1, 2, 3, 4]\n    print(common_list(test_list, test_list1))\n    print(common_list(test_list, test_list2))",
      -5.0078125
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n    for item in nested_list:\n        if item not in common_list:\n            common_list.append(item)\n    return common_list\n\n\nif __name__ == '__main__':\n    nested_list = [[1, 2, 3], [4, 5, 6]]\n    print(common_elements(nested_list))",
      -5.2578125
    ],
    [
      "def common_elements(list1, list2):\n    if list1 == []:\n        return list2\n    if list2 == []:\n        return list1\n    common = []\n    for i in list1:\n        if i in list2:\n            common.append(i)\n    return common\n\n\nprint(common_elements([1, 2, 3, 4, 5], [2, 5, 6, 7]))",
      -5.26953125
    ],
    [
      "def common_elements(nested_list):\n    common_elements_dict = {}\n\n    for item in nested_list:\n        if item in common_elements_dict:\n            common_elements_dict[item].append(item)\n        else:\n            common_elements_dict[item] = [item]\n\n    return common_elements_dict\n\n\ndef main():\n    print(common_elements([1, 2, 3]))\n    print(common_elements([1, 2, 3, 4]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -5.3203125
    ],
    [
      "def common_elements(l1, l2):\n    common_list = []\n    for i in l1:\n        for j in l2:\n            if i == j:\n                common_list.append(i)\n    return common_list\n\n\ncommon_elements_1 = common_elements([1, 2, 3], [4, 5, 6])\ncommon_elements_2 = common_elements([1, 2, 3], [1, 2, 3])\ncommon_elements_3 = common_elements([1, 2, 3], [1, 2, 3])\ncommon_elements_4 = common_elements([1, 2, 3], [1, 2, 3])",
      -5.453125
    ],
    [
      "def find_common_elements(nested_list):\n    common_elements = []\n    for item in nested_list:\n        if item not in common_elements:\n            common_elements.append(item)\n    return common_elements\n\n\nprint(find_common_elements([1,2,3,4,5]))\nprint(find_common_elements([1,2,3,4,5,6]))\nprint(find_common_elements([1,2,3,4,5,6,7]))\nprint(find_common_elements([1,2,3,4,5,6,7,8,9]))",
      -5.55078125
    ],
    [
      "def common(list1, list2):\n    common_list = []\n\n    for item in list1:\n        if item in list2:\n            common_list.append(item)\n\n    return common_list\n\n\ndef main():\n    nested_list = [\n        [1, 2, 3, 4, 5],\n        [6, 7, 8, 9, 10]\n    ]\n    common_list = common(nested_list[0], nested_list[1])\n    print(common_list)\n\n\nif __name__ == '__main__':\n    main()",
      -5.60546875
    ],
    [
      "def common_elements(list_1, list_2):\n    list_1_set = set(list_1)\n    list_2_set = set(list_2)\n    return list_1_set.intersection(list_2_set)\n\n\ndef main():\n    print(common_elements([1, 2, 3], [4, 5, 6]))\n    print(common_elements([1, 2, 3], [4, 5, 6, 7]))\n    print(common_elements([1, 2, 3], [4, 5, 6, 7, 8]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -5.66015625
    ],
    [
      "def common_elements(nested_list):\n    # Time Complexity: O(n*m)\n    # Space Complexity: O(n*m)\n    result = []\n    for item in nested_list:\n        if item not in result:\n            result.append(item)\n    return result\n\n\nif __name__ == \"__main__\":\n    # Test 1\n    nested_list = [1, 2, 3]\n    print(common_elements(nested_list))\n\n    # Test 2\n    nested_list = [[1, 2], [3, 4, 5]]\n    print(common_elements(nested_list))",
      -5.98046875
    ],
    [
      "def common_elements(list1, list2):\n    common = []\n    list1_set = set(list1)\n    list2_set = set(list2)\n    for item in list1_set & list2_set:\n        common.append(item)\n    return common\n\n\nprint(common_elements([1, 2, 3], [4, 5, 6]))\nprint(common_elements([1, 2, 3], [4, 5, 6, 7]))\nprint(common_elements([1, 2, 3], [4, 5, 6, 7, 8]))\nprint(common_elements([1, 2, 3], [4, 5, 6, 7, 8, 9]))",
      -5.9921875
    ],
    [
      "def common_elements(nested_list):\n    common_elements = []\n    for item in nested_list:\n        if type(item) == list:\n            common_elements = common_elements + common_elements(item)\n        else:\n            common_elements.append(item)\n\n    return common_elements\n\n\nif __name__ == \"__main__\":\n    nested_list = [[\"a\", \"b\", \"c\"], [\"d\", \"e\", \"f\"], [\"g\", \"h\", \"i\"]]\n    print(common_elements(nested_list))",
      -6.0
    ],
    [
      "def common_elements(l1, l2, l3):\n    common_elements_dict = {}\n    if not l1:\n        return []\n    if not l2:\n        return []\n    if not l3:\n        return []\n\n    common_elements_dict = {\n        key: value for key, value in l1.items() if key in l2 and key in l3\n    }\n    return list(common_elements_dict.keys())\n\n\nprint(common_elements(\n    [\"a\", \"b\", \"c\", \"d\"],\n    [\"b\", \"c\", \"d\", \"e\"],\n    [\"a\", \"b\", \"c\", \"d\"],\n))",
      -7.390625
    ],
    [
      "def common_elements(list_item):\n    list_item_list = [item for sublist in list_item for item in sublist]\n    list_item_set = set(list_item_list)\n    return list_item_set\n\n\nlist_item = [1, 2, 3, 4, 5]\nprint(common_elements(list_item))\n\nlist_item = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(common_elements(list_item))\n\nlist_item = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\nprint(common_elements(list_item))\n\nlist_item = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,",
      -7.484375
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n    for item in nested_list:\n        if item not in common_list:\n            common_list.append(item)\n    return common_list\n\n\nnested_list = [[1, 2], [3, 4]]\nprint(common_elements(nested_list))\n\nnested_list = [[1, 2, 3, 4], [5, 6, 7, 8]]\nprint(common_elements(nested_list))\n\nnested_list = [[1, 2, 3, 4, 5], [6, 7, 8, 9]]\nprint(common_elements(nested_list))\n\nnested_list = [[1, 2, 3, 4, 5, 6], [7, 8, 9, 10]]\nprint(common_elements(nested_list))",
      -7.96875
    ],
    [
      "def common_elements(list1, list2):\n    common = []\n    for item in list1:\n        if item in list2:\n            common.append(item)\n    return common\n\n\nif __name__ == \"__main__\":\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [6, 7, 8, 9, 10]\n    print(common_elements(list1, list2))\n\n    list1 = [1, 2, 3, 4, 5]\n    list2 = [6, 7, 8, 9, 10, 11]\n    print(common_elements(list1, list2))",
      -8.0234375
    ],
    [
      "def common_elements(lst1, lst2):\n    if not lst1 or not lst2:\n        return []\n\n    common_list = []\n    common_element = []\n\n    for i in range(len(lst1)):\n        if lst1[i] in lst2:\n            common_list.append(lst1[i])\n        elif lst2[i] in lst1:\n            common_list.append(lst2[i])\n\n        else:\n            common_element.append(lst1[i])\n            common_element.append(lst2[i])\n\n    return common_list, common_element\n\n\nprint(common_elements([[1, 2], [3, 4]], [[1, 2], [3, 4]]))\nprint(common_elements([[1, 2], [3, 4]], [[1, 2], [3, 5]]))\nprint(common_elements([[1, 2], [3, 4]], [[1, 2], [3, 5]]))\nprint(common_elements([[1, 2], [3, 4]], [[1, 2], [3, 6]]))",
      -8.3125
    ],
    [
      "def common_elements(nested_list1, nested_list2):\n    common = []\n    common_set = set(nested_list1) & set(nested_list2)\n    for x in common_set:\n        if x not in common:\n            common.append(x)\n    return common\n\ndef main():\n    nested_list1 = [[1,2,3],[4,5],[6,7],[8,9]]\n    nested_list2 = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15]]\n    print(common_elements(nested_list1, nested_list2))\n\nif __name__ == \"__main__\":\n    main()",
      -9.1875
    ],
    [
      "def common_elements(list_1, list_2):\n    common = []\n    for item in list_1:\n        if item in list_2:\n            common.append(item)\n    return common\n\n\ndef test():\n    assert common_elements([1, 2, 3, 4], [2, 3, 4, 5]) == [2, 3, 5]\n    assert common_elements([1, 2, 3, 4], [1, 2, 4, 5]) == [1, 5]\n    assert common_elements([1, 2, 3, 4], [1, 4, 5]) == [1, 4]\n    assert common_elements([1, 2, 3, 4], [1, 5, 4]) == [1, 4]\n    assert common_elements([1, 2, 3, 4], [1, 5, 5]) == [1]\n    assert common_elements([1, 2, 3, 4], [1, 5, 6]) == [1, 5]\n    assert common_elements([1, 2, 3, 4], [1, 5, 7]) == [1, 5]\n    assert common_elements([1, 2, 3, 4], [1, 5, 8]) == [1]\n    assert common_elements([1, 2, 3, 4], [1, 5, 9]) == [1]\n    assert common_elements([1, 2, 3, 4], [1, 6, 7]) == [1, 7]\n    assert common_elements([1, 2, 3, 4], [1, 7, 8]) == [1, 8]\n    assert common_elements([1, 2, 3, 4], [1, 8, 9]) == [1, 8]\n    assert common_elements([1, 2, 3, 4], [1, 9, 10]) == [1, 9]\n\n\ntest()",
      -10.1328125
    ],
    [
      "def common_elements(nested_list):\n    common_elements = []\n    common_list = []\n\n    for i in nested_list:\n        if isinstance(i, list):\n            common_list.append(i)\n        else:\n            common_elements.append(i)\n\n    for i in common_list:\n        if isinstance(i, list):\n            common_elements.append(i)\n        else:\n            common_elements.append(i)\n\n    return common_elements\n\n\nprint(common_elements([[1, 2, 3], [4, 5, 6]]))\nprint(common_elements([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))\nprint(common_elements([[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]]))\nprint(common_elements([[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 133, 139, 140, 141, 142",
      -10.2109375
    ],
    [
      "def common_elements(list1, list2):\n    common_elements = []\n    if len(list1) == 0:\n        return common_elements\n    elif len(list2) == 0:\n        return common_elements\n    elif len(list1) == len(list2):\n        for i in range(len(list1)):\n            if list1[i] in list2:\n                common_elements.append(list1[i])\n        return common_elements\n    elif len(list1) > len(list2):\n        return common_elements\n    elif len(list1) < len(list2):\n        return common_elements",
      -10.5234375
    ],
    [
      "def common_elements(list_1, list_2):\n    common_list = []\n    common_list.append(list_1)\n    common_list.append(list_2)\n    common_list = list(set(common_list))\n    return common_list\n\n\nprint(common_elements([1, 2, 3, 4], [1, 2, 3, 4]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2]))",
      -10.765625
    ],
    [
      "def common_elements(nested_list):\n    common = []\n    for i in nested_list:\n        if isinstance(i, list):\n            common = common + common_elements(i)\n        else:\n            common.append(i)\n    return common\n\n\nprint(common_elements([[1, 2, 3], [4, 5, 6, 7]]))\nprint(common_elements([[1, 2, 3], [4, 5, 6, 7]]))\nprint(common_elements([[1, 2, 3], [4, 5, 6, 7], [8, 9, 10]]))\nprint(common_elements([[1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]]))\nprint(common_elements([[1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11, 12]]))",
      -11.09375
    ],
    [
      "def common_elements(nested_list):\n    if len(nested_list) == 0:\n        return []\n    elif len(nested_list) == 1:\n        return nested_list[0]\n    else:\n        result = []\n        for item in nested_list:\n            for i in common_elements(item):\n                result.append(i)\n        return result\n\n\nif __name__ == \"__main__\":\n    print(common_elements([[1, 2], [3, 4], [5, 6], [7, 8]]))\n    print(common_elements([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))",
      -11.7734375
    ],
    [
      "def find_common(list1, list2):\n    if list1 is None and list2 is None:\n        return []\n    if list1 is None:\n        return list2\n    if list2 is None:\n        return list1\n    common_list = []\n    if len(list1) == len(list2):\n        for i in range(len(list1)):\n            if list1[i] == list2[i]:\n                common_list.append(list1[i])\n    else:\n        for i in range(len(list1)):\n            if list1[i] not in common_list:\n                common_list.append(list1[i])\n    return common_list\n\n\nprint(find_common([1, 2, 3], [4, 5, 6]))\nprint(find_common([1, 2, 3], [4, 5, 6, 7]))\nprint(find_common([1, 2, 3], [4, 5]))",
      -11.875
    ],
    [
      "def common_elements(l1, l2):\n    l1.sort()\n    l2.sort()\n    for i in range(min(len(l1), len(l2))):\n        if l1[i] == l2[i]:\n            return l1[i]\n\n\nprint(common_elements([1, 2, 3], [4, 5, 6]))\nprint(common_elements([1, 2, 3, 4], [5, 6, 7]))\nprint(common_elements([1, 2, 3, 4], [6, 7, 8]))\nprint(common_elements([1, 2, 3, 4, 5], [6, 7, 8]))",
      -12.078125
    ],
    [
      "def common_elements(nested_list):\n    common_list = []\n    if len(nested_list) == 1:\n        return nested_list[0]\n\n    for i in nested_list:\n        for j in common_list:\n            if i == j:\n                continue\n            else:\n                if i not in common_list:\n                    common_list.append(i)\n\n    return common_list\n\n\nprint(common_elements([1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(common_elements([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))",
      -14.140625
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}