{
  "problem": {
    "task_id": "MBPP/119",
    "prompt": "Write a python function to find the element that appears only once in a sorted array.",
    "canonical_solution": "def search(arr,n) :\r\n    XOR = 0\r\n    for i in range(n) :\r\n        XOR = XOR ^ arr[i]\r\n    return (XOR)",
    "test_list": [
      "assert search([1,1,2,2,3],5) == 3",
      "assert search([1,1,3,3,4,4,5,5,7,7,8],11) == 8",
      "assert search([1,2,2,3,3,4,4],7) == 1"
    ],
    "challenge_test_list": [],
    "problem_id": 108
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def find_only_once(arr):\n    count = {}\n    for i in arr:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n    for i in count:\n        if count[i] == 1:\n            return i\n\n\nprint(find_only_once([1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5]))",
      1.5185546875
    ],
    [
      "def find_one_once(arr):\n    if arr == []:\n        return None\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n    return None\n\nprint(find_one_once([1, 2, 2, 3, 3, 4, 4, 5]))",
      0.98291015625
    ],
    [
      "def remove_duplicates(arr):\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if arr[i] == arr[j]:\n                arr.pop(j)\n    return arr\n\n\narr = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4]\nprint(remove_duplicates(arr))",
      0.77685546875
    ],
    [
      "def single_number(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return arr[i]\n    return None\n\narr = [0,0,1,1,1,1,2,2,3,3,3,4,4,5,6,7,8,9,9]\nprint(single_number(arr))",
      0.6650390625
    ],
    [
      "def find_uniqueness_of_array(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i+1]:\n            return arr[i]\n    return -1\n\nprint(find_uniqueness_of_array([1,1,2,2,2,3,3,3,4,4,4]))",
      0.43701171875
    ],
    [
      "def find_element(arr, n):\n    for i in range(0, n):\n        if arr[i] == arr[i-1]:\n            return arr[i]\n\n\nprint(find_element([1, 1, 2, 2, 3, 3, 4, 4, 5, 5], 5))",
      0.434326171875
    ],
    [
      "def single_unique(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] == arr[0]:\n            return arr[i]\n    return None\n\n\nprint(single_unique([1, 2, 3, 3, 2, 3, 4, 5, 5, 5]))",
      -0.25927734375
    ],
    [
      "def single_unique(arr):\n    return arr[0]\n\n\nif __name__ == '__main__':\n    arr = [1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 6]\n    print(single_unique(arr))",
      -0.48974609375
    ],
    [
      "def find_element(array):\n    for i in array:\n        if array.count(i) == 1:\n            return i\n    return -1\n\nprint(find_element([1,2,2,2,3,3,3,4,4,4,4,5,5,5,5]))",
      -0.85693359375
    ],
    [
      "def find_element(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(find_element([1, 2, 2, 3, 3, 4, 4, 5]))",
      -0.85693359375
    ],
    [
      "def find_element(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i+1]:\n            return arr[i]\n\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(find_element(arr))",
      -0.85693359375
    ],
    [
      "def find_element_once(arr):\n    arr.sort()\n    for i in arr:\n        if arr.count(i) == 1:\n            return i",
      -0.85791015625
    ],
    [
      "def find_only_once(nums):\n    for i in nums:\n        if nums.count(i) == 1:\n            return i\n\nprint(find_only_once([1,1,2,3,3,4,4,4,4]))",
      -0.85791015625
    ],
    [
      "def find_element(arr):\n    for i in arr:\n        if i == arr[0]:\n            return i\n\n\nprint(find_element([1, 2, 2, 3, 4, 3, 4, 5, 5, 5]))",
      -0.85791015625
    ],
    [
      "def find_unique_element(arr):\n    for i in range(len(arr)):\n        if arr.count(arr[i]) == 1:\n            return arr[i]\n    return -1\n\nprint(find_unique_element([1, 2, 3, 4, 5, 5, 6, 7, 8, 8, 9, 10, 11]))",
      -0.85791015625
    ],
    [
      "def find_uniqueness(arr):\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] == arr[j]:\n            return arr[i]\n        elif arr[i] > arr[j]:\n            i += 1\n        else:\n            j -= 1\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_uniqueness([1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10]))",
      -0.8583984375
    ],
    [
      "def find_unique_element(arr):\n    if len(arr) == 0:\n        return None\n    \n    low = 0\n    high = len(arr)-1\n    while low <= high:\n        mid = (low + high)//2\n        if arr[mid] == arr[mid+1]:\n            return arr[mid]\n        elif arr[mid] > arr[mid+1]:\n            high = mid-1\n        else:\n            low = mid+1\n    \n    return None\n\nprint(find_unique_element([2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]))",
      -0.8583984375
    ],
    [
      "def find_element_once(array):\n    count = 0\n    for i in array:\n        if i == count:\n            return i\n        count += 1\n\n\nif __name__ == \"__main__\":\n    print(find_element_once([1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 5]))",
      -0.8583984375
    ],
    [
      "def unique(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n\n\narr = [1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9]\nprint(unique(arr))\n\narr = [1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9]\nprint(unique(arr))",
      -0.8583984375
    ],
    [
      "def find_unique_element(arr):\n    arr_len = len(arr)\n    for i in range(arr_len):\n        if arr[i] in arr:\n            return arr[arr.index(arr[i])]\n    return -1\n\nprint(find_unique_element([4, 3, 4, 5, 5, 4, 3]))\nprint(find_unique_element([4, 3, 4, 5, 5, 4, 3]))\nprint(find_unique_element([1, 1, 1, 2, 2, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9]))",
      -0.8583984375
    ],
    [
      "def find_element(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    arr = [0, 1, 0, 1, 1, 1, 2, 2, 3, 3, 3, 4]\n    print(find_element(arr))",
      -0.8583984375
    ],
    [
      "def find_element(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    assert find_element([1, 1, 1, 1, 2, 2, 2]) == 2\n    assert find_element([1, 1, 1, 1, 2, 2, 2]) == -1\n    assert find_element([1, 1, 1, 1, 2, 2, 2]) == -1",
      -0.8583984375
    ],
    [
      "def find_unique_element(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n\n\nprint(find_unique_element([1, 2, 2, 3, 4, 4, 5, 5, 6, 6, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 15]))",
      -0.8583984375
    ],
    [
      "def find_element_with_unique_value(arr):\n    # O(n)\n    # Time Complexity: O(n)\n    # Space Complexity: O(1)\n\n    counter = {}\n\n    for num in arr:\n        if num in counter:\n            counter[num] += 1\n        else:\n            counter[num] = 1\n\n    for num in counter:\n        if counter[num] == 1:\n            return num\n\n    return -1\n\n\narr = [1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7]\nprint(find_element_with_unique_value(arr))",
      -0.8583984375
    ],
    [
      "def find_element(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return arr[i]\n    return -1\n\n\nprint(find_element([1, 1, 2, 2, 3, 3, 4, 4, 4]))",
      -0.8583984375
    ],
    [
      "def find_element_once(arr):\n    count = 0\n    for i in arr:\n        if i == arr[count]:\n            return i\n        count += 1\n\n\narr = [1, 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6]\nprint(find_element_once(arr))",
      -0.8583984375
    ],
    [
      "def find_one_occurence(nums):\n    n = len(nums)\n    if n == 0:\n        return -1\n    start = 0\n    end = n-1\n    while start <= end:\n        mid = (start+end)//2\n        if nums[mid] == nums[mid-1] == nums[mid+1]:\n            return mid\n        elif nums[mid] > nums[mid-1]:\n            start = mid+1\n        else:\n            end = mid-1\n\n\nprint(find_one_occurence([1, 1, 1, 2, 2, 3, 3, 4, 4]))",
      -0.8583984375
    ],
    [
      "def find_element_once(arr):\n    if len(arr) == 0:\n        return None\n    if len(arr) == 1:\n        return arr[0]\n\n    low = 0\n    high = len(arr) - 1\n    while low <= high:\n        mid = low + (high - low) // 2\n        if arr[mid] > arr[mid + 1]:\n            high = mid - 1\n        else:\n            low = mid + 1\n\n    return arr[low]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 1, 2, 1, 2, 2, 2]\n    print(find_element_once(arr))",
      -0.8583984375
    ],
    [
      "def find_only_once(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n\narr = [1, 2, 1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5]\nprint(find_only_once(arr))",
      -0.8583984375
    ],
    [
      "def find_element_once(arr):\n    for i in range(len(arr)):\n        if arr[i] == i:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_element_once([1, 1, 1, 2, 2, 2, 3, 3, 3]))\n    print(find_element_once([1, 1, 1, 2, 2, 2, 3, 3, 3]))",
      -0.85888671875
    ],
    [
      "def find_unique(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: int\n    \"\"\"\n    if len(arr) == 0:\n        return -1\n\n    for i in range(len(arr)):\n        if arr[i]!= arr[i-1]:\n            return arr[i]\n\n    return -1\n\n\narr = [1,1,1,2,2,3,3,3,4,4]\nprint(find_unique(arr))",
      -0.85888671875
    ],
    [
      "def find_element_once(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(find_element_once([1, 1, 2, 2, 3, 3, 4, 4, 5]))",
      -0.85888671875
    ],
    [
      "def find_only_once(arr):\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == i:\n            count += 1\n    if count == 1:\n        return i\n    else:\n        return -1\n\n\narr = [1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9]\nprint(find_only_once(arr))",
      -0.85888671875
    ],
    [
      "def find_element_once(arr, n):\n    for i in range(n):\n        if arr[i] == arr[0]:\n            return arr[0]\n\n    return arr[0]\n\n\narr = [1, 2, 2, 3, 3, 4, 4, 5, 5, 5]\nprint(find_element_once(arr, len(arr)))",
      -0.85888671875
    ],
    [
      "def find_unique(array):\n    unique = 0\n    for i in array:\n        if array.count(i) == 1:\n            unique = i\n    return unique\n\n\nprint(find_unique([2, 2, 3, 4, 4, 5, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9]))\nprint(find_unique([2, 2, 3, 4, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 8, 8, 8, 9, 9, 9]))\nprint(find_unique([2, 2, 3, 4, 4, 5, 5, 5, 5, 6, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9]))",
      -0.85888671875
    ],
    [
      "def find_element_once(arr):\n    for i in range(len(arr)):\n        if arr[i] == i:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 2, 2, 3, 4, 4, 4, 4, 5]\n    print(find_element_once(arr))",
      -0.85888671875
    ],
    [
      "def find_element(arr):\n    # Write your code here\n    count = 0\n    for i in arr:\n        if i == count:\n            return count\n        else:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(find_element([1, 1, 2, 2, 3, 3, 4, 4, 5, 5]))",
      -0.85888671875
    ],
    [
      "def find_element(arr):\n    count = 0\n    for i in arr:\n        if i == count:\n            return i\n        count += 1\n    return -1\n\nprint(find_element([1, 2, 3, 4, 4, 5, 5, 5, 5, 5]))\nprint(find_element([1, 2, 3, 4, 4, 5, 5, 5, 5, 5]))\nprint(find_element([1, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5]))\nprint(find_element([1, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5]))\nprint(find_element([1, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]))",
      -0.85888671875
    ],
    [
      "def find_only_once(arr):\n    index = 0\n    for i in range(len(arr)):\n        if arr[i] == arr[index]:\n            return i\n        index += 1\n\n\nif __name__ == '__main__':\n    print(find_only_once([3, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4]))",
      -0.85888671875
    ],
    [
      "def find_one_unique(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n    return -1\n\n\nprint(find_one_unique([1, 2, 2, 2, 3, 3, 3, 3, 4]))",
      -0.85888671875
    ],
    [
      "def find_one(nums):\n    if len(nums) == 0:\n        return None\n\n    low = 0\n    high = len(nums) - 1\n\n    while low <= high:\n        mid = (low + high) // 2\n\n        if nums[mid] > nums[mid + 1]:\n            low = mid + 1\n        else:\n            high = mid\n\n    return low\n\n\nif __name__ == \"__main__\":\n    print(find_one([2, 2, 2, 3, 3, 4, 4, 4, 4, 5]))",
      -0.85888671875
    ],
    [
      "def find_only_once(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == arr[i + 1]:\n            i += 1\n        else:\n            return arr[i]\n\n\narr = [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4]\nprint(find_only_once(arr))",
      -0.85888671875
    ],
    [
      "def find_element(arr):\n    count = 0\n    for i in arr:\n        if i == count:\n            return i\n        else:\n            count += 1\n\narr = [1, 1, 1, 1, 2, 2, 2, 3, 3, 3]\nprint(find_element(arr))",
      -0.85888671875
    ],
    [
      "def find_element(array):\n    count = 0\n    for i in range(len(array)):\n        if array[i] == count:\n            return i\n        else:\n            count += 1\n\n\nif __name__ == \"__main__\":\n    array = [2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3]\n    print(find_element(array))",
      -0.85888671875
    ],
    [
      "def find_element(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i",
      -0.85888671875
    ],
    [
      "def find_unique_element(arr):\n    # code here\n    if len(arr) == 0:\n        return None\n    index = 0\n    for i in range(len(arr)):\n        if arr[i] == arr[index]:\n            index += 1\n        else:\n            return arr[i]\n\n\nprint(find_unique_element([1, 1, 2, 2, 2, 3, 3, 4, 4, 4]))",
      -0.85888671875
    ],
    [
      "def find_unique(arr):\n    unique = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            unique += 1\n    return unique\n\n\nprint(find_unique([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5]))",
      -0.85888671875
    ],
    [
      "def find_element(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i+1]:\n            return arr[i]\n\n\nprint(find_element([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))",
      -0.85888671875
    ],
    [
      "def find_element_once(arr):\n    counter = {}\n    for i in arr:\n        if i not in counter:\n            counter[i] = 1\n        else:\n            counter[i] += 1\n    for i in counter:\n        if counter[i] == 1:\n            return i\n\n\narr = [1, 1, 2, 2, 3, 3, 4, 4]\nprint(find_element_once(arr))\n\n\ndef find_element_twice(arr):\n    counter = {}\n    for i in arr:\n        if i in counter:\n            return i\n        else:\n            counter[i] = 1\n\n\nprint(find_element_twice(arr))",
      -0.85888671875
    ],
    [
      "def find_element(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] == arr[i - 1]:\n            return arr[i]\n        else:\n            i += 1\n\narr = [2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4]\nprint(find_element(arr))",
      -0.85888671875
    ],
    [
      "def find_unique_element(arr):\n    # Write your code here\n    # Find the element that appears only once in a sorted array.\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == arr[count]:\n            count += 1\n        else:\n            return arr[i]\n\n\nprint(find_unique_element([1, 2, 3, 3, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -0.85888671875
    ],
    [
      "def unique_element(arr):\n    if len(arr) <= 1:\n        return None\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(unique_element(arr))",
      -0.85888671875
    ],
    [
      "def find_element_by_count(arr, k):\n    n = len(arr)\n    if n == 0:\n        return -1\n    i = 0\n    j = 0\n    while i < n:\n        if arr[i] == k:\n            j = i\n        i += 1\n    return j\n\narr = [1, 1, 2, 2, 3, 3, 3, 4, 4]\nk = 3\nprint(find_element_by_count(arr, k))",
      -0.85888671875
    ],
    [
      "def find_element_once(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n    return -1\n\n\nprint(find_element_once([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))\nprint(find_element_once([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))",
      -1.080078125
    ],
    [
      "def only_once(arr):\n    # Write your code here\n    return arr.count(arr[0])\n\nif __name__ == \"__main__\":\n    arr = [2, 3, 3, 2, 2, 2, 3, 2]\n    print(only_once(arr))",
      -1.8525390625
    ],
    [
      "def find_element_once(arr):\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 2, 3, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2, 4, 2",
      -1.9033203125
    ],
    [
      "def find_unique_element(arr):\n    count = {}\n\n    for i in arr:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n\n    for i in count:\n        if count[i] == 1:\n            return i\n\n\nprint(find_unique_element([1, 2, 3, 4, 4, 4, 4, 4, 5, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
      -2.337890625
    ],
    [
      "def find_element(nums):\n    n = len(nums)\n    count = {}\n    for i in range(n):\n        if nums[i] not in count:\n            count[nums[i]] = 1\n        else:\n            count[nums[i]] += 1\n    for k in count:\n        if count[k] == 1:\n            return k\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_element([1, 2, 2, 3, 4, 5, 5, 6, 7, 8, 8, 8, 9, 10, 11]))\n    print(find_element([1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,",
      -2.345703125
    ],
    [
      "def find_only_once(nums):\n    i = 0\n    j = 0\n    while i < len(nums) and j < len(nums):\n        if nums[i] == nums[j]:\n            i += 1\n            j += 1\n        else:\n            i += 1\n    if i < len(nums):\n        return nums[i]\n    else:\n        return -1\n\n\nprint(find_only_once([1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5]))",
      -2.69921875
    ],
    [
      "def find_only_once(nums):\n    for num in nums:\n        if nums.count(num) == 1:\n            return num\n\n# Test cases\nprint(find_only_once([1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 29, 29, 29, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32",
      -2.802734375
    ],
    [
      "def find_one(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return i\n    return -1\n\narr = [1, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 7, 7, 8, 8, 8, 9, 9, 9, 9, 10, 10, 10]\nprint(find_one(arr))",
      -3.0859375
    ],
    [
      "def find_element_once(arr, n):\n    i = 0\n    j = 0\n    while i < n:\n        if arr[i] == arr[j]:\n            j += 1\n        else:\n            if j == 0:\n                return arr[i]\n            j -= 1\n        i += 1\n\n\nprint(find_element_once([2, 2, 2, 3, 4, 4, 4, 4, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9], 10))",
      -3.833984375
    ],
    [
      "def find_element(array):\n    index = 0\n    for i in range(len(array)):\n        if array[i] == array[index]:\n            return array[i]\n        index += 1\n\n\nprint(find_element([1, 2, 3, 3, 4, 4, 5, 5]))",
      -3.970703125
    ],
    [
      "def find_element_once(arr):\n    n = len(arr)\n    count = 0\n    for i in range(n):\n        if arr[i] == arr[i - 1]:\n            count += 1\n    return count\n\n\nprint(find_element_once([1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4]))",
      -4.50390625
    ],
    [
      "def only_once(arr):\n    count = 0\n    for i in arr:\n        if arr.count(i) == 1:\n            return i\n        count += 1\n    return -1\n\nprint(only_once([1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,",
      -4.53515625
    ],
    [
      "def find_uniqueness(arr):\n    return arr.count(arr[0])\n\n\narr = [2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
      -4.8046875
    ],
    [
      "import unittest\n\n\ndef find_only_once(arr):\n    seen = set()\n    for i in arr:\n        if i in seen:\n            return i\n        seen.add(i)\n\n\nclass Test(unittest.TestCase):\n\n    def test_find_only_once(self):\n        self.assertEqual(find_only_once([1, 2, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
      -4.89453125
    ],
    [
      "def find_element(arr):\n    # Your code here\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == count:\n            return i\n        count += 1\n\narr = [1, 2, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
      -4.90625
    ],
    [
      "def find_one(arr):\n    if len(arr) == 1:\n        return arr[0]\n    left = 0\n    right = len(arr) - 1\n    while left < right:\n        mid = (left + right) // 2\n        if arr[mid] == arr[mid + 1]:\n            return arr[mid]\n        elif arr[mid] < arr[mid + 1]:\n            left = mid + 1\n        else:\n            right = mid - 1\n    return -1\n\n\nprint(find_one([1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5]))",
      -5.19921875
    ],
    [
      "def find_only_once(arr):\n    if len(arr) == 1:\n        return arr[0]\n\n    low = 0\n    high = len(arr) - 1\n    while low <= high:\n        mid = (low + high) // 2\n        if arr[mid] > arr[mid + 1]:\n            high = mid - 1\n        else:\n            low = mid + 1\n\n    return arr[low]\n\n\nif __name__ == \"__main__\":\n    print(find_only_once([0, 1, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]))",
      -5.26953125
    ],
    [
      "def find_only_once(arr):\n    if len(arr) == 0:\n        return None\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return i\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5]\n    print(find_only_once(arr))",
      -5.3203125
    ],
    [
      "def find_unique_element(arr):\n    # Write your code here\n    counter = 0\n    for i in arr:\n        if i == arr[counter]:\n            counter += 1\n        else:\n            return i\n\narr = [0,0,0,0,1,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,5,5,5,5,5,6,6,6,6,7,7,8,8,8,9,9,9,10,10,10,10,10,11,11,11,11,11,11,12,12,12,12,12,13,13,13,13,13,13,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,",
      -5.51953125
    ],
    [
      "def find_only_once(arr):\n    # Write your code here\n    c = 0\n    for i in range(len(arr)):\n        if arr[i] == arr[c]:\n            return c\n        c += 1\n    return -1\n\n\narr = [1, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,",
      -6.1328125
    ],
    [
      "def find_one(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return i\n\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_one([1, 2, 2, 3, 3, 4, 4, 5, 6, 6, 7, 8, 8, 9]))",
      -6.30859375
    ],
    [
      "def find_unique_element(arr):\n    # Your code here\n    # return arr.index(max(arr))\n    max_index = 0\n    for i in range(len(arr)):\n        if arr[i] == arr[max_index]:\n            max_index += 1\n    return max_index\n\nprint(find_unique_element([1,2,3,3,4,4,4,4,4,4,4,4,5]))",
      -6.72265625
    ],
    [
      "def find_only_once(arr):\n    count = 0\n    for i in arr:\n        if count == 0:\n            return i\n        elif i == arr[count - 1]:\n            count += 1\n        else:\n            count = 0\n    return -1\n\nprint(find_only_once([1,1,2,2,3,3,4,4,4,5,5,6,6,6,7,7,7,8,8,9,9,9,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15",
      -6.734375
    ],
    [
      "def find_unique_element(arr):\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        l = 0\n        r = len(arr) - 1\n        while l < r:\n            mid = (l + r) // 2\n            if arr[mid] == arr[mid - 1] and arr[mid]!= arr[mid + 1]:\n                return arr[mid]\n            elif arr[mid] > arr[mid - 1]:\n                l = mid + 1\n            elif arr[mid] < arr[mid + 1]:\n                r = mid - 1\n        return None\n\n\narr = [1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
      -7.1171875
    ],
    [
      "def find_one_unique(arr):\n    if len(arr) == 0:\n        return -1\n    if arr[0] == arr[-1]:\n        return arr[0]\n    if arr[0] < arr[-1]:\n        return arr[0]\n    mid = len(arr)//2\n    if arr[mid] == arr[mid+1]:\n        return arr[mid]\n    return find_one_unique(arr[:mid])\n\nif __name__ == \"__main__\":\n    print(find_one_unique([1,2,3,1,2,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,",
      -7.3359375
    ],
    [
      "def find_element(arr, n):\n    for i in range(n):\n        if arr[i] == arr[i + 1]:\n            return arr[i]\n\n\narr = [3, 3, 3, 4, 4, 5, 5, 5, 5, 6]\nprint(find_element(arr, len(arr)))",
      -7.6640625
    ],
    [
      "def find_unique(arr):\n    n = len(arr)\n    counter = 0\n    for i in range(n):\n        if arr[i] == arr[counter]:\n            counter += 1\n        else:\n            counter = 0\n    return counter\n\n\nprint(find_unique([2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
      -7.765625
    ],
    [
      "def find_unique_element(arr):\n  if len(arr) == 0:\n    return -1\n\n  low = 0\n  high = len(arr) - 1\n\n  while low <= high:\n    mid = low + (high - low) // 2\n    if arr[mid] == arr[low] and arr[mid] == arr[high]:\n      return mid\n    elif arr[mid] > arr[low]:\n      low = mid + 1\n    elif arr[mid] < arr[high]:\n      high = mid - 1\n  return -1\n\n\nif __name__ == \"__main__\":\n  print(find_unique_element([1, 2, 3, 4, 4, 5]))\n  print(find_unique_element([4, 2, 4, 2, 2, 4, 2]))\n  print(find_unique_element([1, 2, 3, 4, 4, 5]))\n  print(find_unique_element([1, 2, 3, 4, 5, 1]))",
      -8.96875
    ],
    [
      "def find_one_in_sorted_array(arr):\n    if arr[0] == arr[-1]:\n        return arr[0]\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] <= arr[j]:\n            if arr[i] == arr[j]:\n                return arr[i]\n            elif arr[i] > arr[j]:\n                return arr[j]\n            elif arr[i] < arr[j]:\n                i += 1\n                j -= 1\n        else:\n            j -= 1\n    return arr[0]\n\n\nif __name__ == '__main__':\n    print(find_one_in_sorted_array([1, 2, 2, 3, 4, 4, 4, 5]))\n    print(find_one_in_sorted_array([1, 2, 2, 3, 4, 4, 4, 5]))\n    print(find_one_in_sorted_array([1, 2, 2, 3, 4, 4, 4, 5]))",
      -9.109375
    ],
    [
      "def find_unique(arr):\n    if len(arr) == 0:\n        return None\n    if len(arr) == 1:\n        return arr[0]\n    mid = int(len(arr) / 2)\n    if arr[mid] == arr[mid - 1]:\n        return arr[mid]\n    elif arr[mid] < arr[mid - 1]:\n        return find_unique(arr[:mid])\n    else:\n        return find_unique(arr[mid + 1:])\n\n\nprint(find_unique([1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3]))",
      -9.9296875
    ],
    [
      "def find_unique(arr):\n    if len(arr) < 2:\n        return None\n    else:\n        index = arr.index(max(arr))\n        return arr[index]\n\n\nprint(find_unique([1, 2, 2, 2, 3, 4, 5, 5, 6, 6, 6, 7, 7, 8, 9]))\nprint(find_unique([1, 2, 2, 2, 3, 4, 5, 5, 6, 6, 6, 7, 7, 8, 9]))\nprint(find_unique([1, 2, 2, 2, 3, 4, 5, 5, 6, 6, 6, 7, 7, 8, 9]))",
      -10.015625
    ],
    [
      "def find_only_once(arr):\n    return arr.count(arr[0])\n\n\ndef main():\n    arr = [1, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
      -10.046875
    ],
    [
      "def find_once(arr):\n    return arr.count(arr[0])\n\n\narr = [1, 2, 3, 4, 4, 5, 5, 5, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,",
      -10.421875
    ],
    [
      "def find_unique_number(arr):\n    if not arr:\n        return None\n    arr.sort()\n    for i in range(len(arr)-1):\n        if arr[i] == arr[i+1]:\n            return arr[i]\n    return None\n\n\n\nif __name__ == '__main__':\n    arr = [1,2,2,3,3,3,3,4,4,4,4,4,5,5,5,5,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,",
      -11.578125
    ],
    [
      "def only_once(arr):\n    n = len(arr)\n    if n == 0:\n        return None\n    if n == 1:\n        return arr[0]\n    if arr[0] == arr[1]:\n        return arr[0]\n    if arr[0] > arr[1]:\n        return only_once(arr[1:])\n    else:\n        return only_once(arr[:-1])\n\n\nif __name__ == \"__main__\":\n    print(only_once([1, 1, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9",
      -11.78125
    ],
    [
      "def find_element(arr):\n    i = 0\n    j = len(arr)-1\n    while i<j:\n        if arr[i] == arr[j]:\n            return arr[i]\n        elif arr[i] > arr[j]:\n            i += 1\n        else:\n            j -= 1\n    return None\n\nprint(find_element([1, 2, 3, 2, 3, 3, 3, 4, 3, 4, 3, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,",
      -12.0234375
    ],
    [
      "def find_single_element(arr, n):\n    for i in range(n):\n        if arr[i] == n:\n            return i\n\n    return -1\n\narr = [1,2,3,2,3,2,3,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,",
      -12.1640625
    ],
    [
      "def find_once(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] == arr[i - 1]:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_once([1, 1, 1, 2, 2, 3, 3, 3, 4]))",
      -12.25
    ],
    [
      "def find_unique_element(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return i\n    return -1\n\n\nprint(find_unique_element([1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 11, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 19, 19, 20, 20, 21, 21, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 35, 35, 36, 37, 38, 39, 40, 40, 41, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 50, 51, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183,",
      -12.515625
    ],
    [
      "def find_once(arr):\n    \"\"\"\n    Find the element that appears only once in an array.\n    :param arr: a sorted array\n    :return: the element that appears only once in the array\n    \"\"\"\n    i = 0\n    while i < len(arr):\n        if arr[i] == arr[i-1]:\n            return arr[i]\n        i += 1\n\n\narr = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6]\nprint(find_once(arr))",
      -12.6484375
    ],
    [
      "def find_element_once(array):\n    count = 0\n    for i in array:\n        if count == 0:\n            return i\n        elif count == 1:\n            return i\n        else:\n            count += 1\n\n\nprint(find_element_once([1, 2, 2, 2, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
      -12.8046875
    ],
    [
      "def find_element(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i+1]:\n            return arr[i]\n    return None\n\n\ndef main():\n    arr = [4, 2, 4, 5, 2, 5, 2, 4, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 4, 5, 2, 5, 2, 5, 2, 4, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 4, 5, 2, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5, 2, 4, 5, 2, 5",
      -13.1328125
    ],
    [
      "def find_element(arr):\n    for i in range(len(arr)):\n        if arr[i] == arr[i - 1]:\n            return i\n    return -1\n\n\narr = [1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7",
      -13.234375
    ],
    [
      "def find_only_once(arr):\n    if len(arr) == 0:\n        return None\n\n    # O(n) time | O(1) space\n    unique_value = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] == unique_value:\n            return i\n        else:\n            unique_value = arr[i]\n\n    return None\n\n\nif __name__ == \"__main__\":\n    print(find_only_once([1, 2, 3, 2, 1, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 10, 10, 11, 11, 11, 11, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 19, 20, 20, 20, 21, 21, 21, 22, 22, 22, 23, 23, 24, 24, 25, 25, 25, 25, 26, 26, 27, 27, 27, 28, 28, 28, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30",
      -13.359375
    ],
    [
      "def find_unique_element(arr):\n    if arr is None or len(arr) == 0:\n        return None\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            return arr[i]\n    return None\n\nprint(find_unique_element([1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))\nprint(find_unique_element([1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9]))",
      -13.5625
    ],
    [
      "def find_unique(arr):\n    for i in range(len(arr)):\n        if arr[i] in arr[:i]:\n            return arr[i]\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_unique([1, 2, 1, 2, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
      -13.921875
    ],
    [
      "def only_one(arr):\n    # Your code here\n    for i in range(len(arr)):\n        if arr[i]==arr[i-1]:\n            return arr[i]\n    return -1\n\narr = [3, 3, 3, 3, 3, 4, 4, 4, 4]\nprint(only_one(arr))\n\narr = [3, 3, 3, 3, 3, 4, 4, 4, 4]\nprint(only_one(arr))\n\narr = [3, 3, 3, 3, 3, 4, 4, 4, 4]\nprint(only_one(arr))\n\narr = [3, 3, 3, 3, 3, 4, 4, 4, 4]\nprint(only_one(arr))",
      -17.625
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}