{
  "problem": {
    "task_id": "MBPP/295",
    "prompt": "Write a function to return the sum of all divisors of a number.",
    "canonical_solution": "def sum_div(number):\r\n    divisors = [1]\r\n    for i in range(2, number):\r\n        if (number % i)==0:\r\n            divisors.append(i)\r\n    return sum(divisors)",
    "test_list": [
      "assert sum_div(8)==7",
      "assert sum_div(12)==16",
      "assert sum_div(7)==1"
    ],
    "challenge_test_list": [],
    "problem_id": 284
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def sum_of_divisors(num):\n    \"\"\"\n    :type num: int\n    :rtype: int\n    \"\"\"\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)",
      13.296875
    ],
    [
      "def sum_of_divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(sum_of_divisors(n))",
      12.578125
    ],
    [
      "def sum_divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_divisors(11))\nprint(sum_divisors(14))\nprint(sum_divisors(12))\nprint(sum_divisors(15))\nprint(sum_divisors(8))\nprint(sum_divisors(6))\nprint(sum_divisors(5))\nprint(sum_divisors(4))\nprint(sum_divisors(3))\nprint(sum_divisors(2))\nprint(sum_divisors(1))",
      10.6796875
    ],
    [
      "def sum_divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_divisors(4))\nprint(sum_divisors(5))\nprint(sum_divisors(6))",
      10.5234375
    ],
    [
      "def sum_of_divisors(num):\n    divisors = [i for i in range(1, num+1) if num%i == 0]\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    print(sum_of_divisors(15))\n    print(sum_of_divisors(25))",
      9.8359375
    ],
    [
      "def sum_divisors(n):\n    sum_divisors = 0\n\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum_divisors += i\n\n    return sum_divisors\n\n\nprint(sum_divisors(10))\nprint(sum_divisors(5))\nprint(sum_divisors(20))",
      9.40625
    ],
    [
      "def sum_of_divisors(n):\n    sum_of_divisors = 0\n\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum_of_divisors += i\n\n    return sum_of_divisors\n\n\nprint(sum_of_divisors(20))",
      9.375
    ],
    [
      "def sum_of_divisors(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\ndef main():\n    print(sum_of_divisors(2))\n    print(sum_of_divisors(3))\n    print(sum_of_divisors(4))\n    print(sum_of_divisors(5))\n\n\nif __name__ == '__main__':\n    main()",
      9.3671875
    ],
    [
      "def sum_divisors(num):\n    divisors = [i for i in range(1, num+1) if num % i == 0]\n    return sum(divisors)\n\n\nif __name__ == '__main__':\n    print(sum_divisors(11))",
      8.8984375
    ],
    [
      "def divisors(num):\n    sum_divisors = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            sum_divisors += i\n    return sum_divisors\n\n\nprint(divisors(10))\nprint(divisors(2))\nprint(divisors(4))\nprint(divisors(3))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))",
      7.8125
    ],
    [
      "def divisors(n):\n    sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(divisors(20))",
      7.50390625
    ],
    [
      "def divisors(num):\n    divisors = [i for i in range(1, num) if num % i == 0]\n    return sum(divisors)\n\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))",
      6.53125
    ],
    [
      "def sum_divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(sum_divisors(3))\nprint(sum_divisors(5))\nprint(sum_divisors(7))",
      6.0859375
    ],
    [
      "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(divisors(50))\nprint(",
      5.28125
    ],
    [
      "def divisors(n):\n    divisors = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(divisors(10))\nprint(divisors(12))\nprint(divisors(14))\nprint(divisors(16))\nprint(divisors(18))",
      4.859375
    ],
    [
      "def sum_of_divisors(n):\n    # write your code here\n    sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_of_divisors(20))",
      4.7421875
    ],
    [
      "def sum_of_divisors(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    print(sum_of_divisors(5))",
      4.36328125
    ],
    [
      "def divisors(n):\n    if n == 1:\n        return 0\n    sum = 0\n    for i in range(1,n):\n        if n%i == 0:\n            sum += i\n    return sum\n\nprint(divisors(15))",
      3.9375
    ],
    [
      "def divisors(n):\n    if n == 1:\n        return 0\n    div = [i for i in range(1,n+1) if n % i == 0]\n    return sum(div)\n\nprint(divisors(20))",
      3.90625
    ],
    [
      "def sum_divisors(num):\n    divisors = []\n    for x in range(1, num + 1):\n        if num % x == 0:\n            divisors.append(x)\n\n    return sum(divisors)\n\n\nprint(sum_divisors(10))",
      3.392578125
    ],
    [
      "def sum_of_divisors(num):\n    divisors = []\n    for i in range(1,num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_of_divisors(15))",
      3.01953125
    ],
    [
      "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.append(i)\n\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    print(divisors(100))\n    print(divisors(1000))",
      3.0078125
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1, num):\n        if num%i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(11))\nprint(sum_divisors(2))\nprint(sum_divisors(13))\nprint(sum_divisors(17))\nprint(sum_divisors(3))\nprint(sum_divisors(4))\nprint(sum_divisors(5))\nprint(sum_divisors(6))\nprint(sum_divisors(7))\nprint(sum_divisors(8))\nprint(sum_divisors(9))\nprint(sum_divisors(10))\nprint(sum_divisors(11))\nprint(sum_divisors(12))\nprint(sum_divisors(13))\nprint(sum_divisors(14))\nprint(sum_divisors(15))\nprint(sum_divisors(16))\nprint(sum_divisors(17))\nprint(sum_divisors(18))\nprint(sum_divisors(19))\nprint(sum_divisors(20))\nprint(sum_divisors(21))\nprint(sum_divisors(22))\nprint(sum_divisors(23))\nprint(sum_divisors(24))\nprint(sum_divisors(25))\nprint(sum_divisors(26))\nprint(sum_divisors(27))\nprint(sum_divisors(28))\nprint(sum_divisors(29))\nprint(sum_divisors(30))\nprint(sum_divisors(31))\nprint(sum_divisors(32))\nprint(sum_divisors(33))\nprint(sum_divisors(34))\nprint(sum_divisors(35))\nprint(sum_divisors(36))\nprint(sum_divisors(37))\nprint(sum_divisors(38))\nprint(sum_divisors(39))\nprint(sum_divisors(40))\nprint(",
      2.99609375
    ],
    [
      "def sum_of_divisors(num):\n    sum = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_of_divisors(10))\nprint(sum_of_divisors(23))",
      2.986328125
    ],
    [
      "def divisors(num):\n    if num == 0:\n        return 0\n    sum = 0\n    for i in range(1, num):\n        if num % i == 0:\n            sum += i\n    return sum\n\ndef test():\n    assert divisors(2) == 0\n    assert divisors(3) == 2\n    assert divisors(5) == 4\n    assert divisors(15) == 22\n    assert divisors(19) == 9\n    assert divisors(0) == 0\n\ntest()",
      2.951171875
    ],
    [
      "def sum_of_divisors(n):\n    sum = 0\n    for i in range(1,n+1):\n        if n%i == 0:\n            sum += i\n    return sum\n\nif __name__ == \"__main__\":\n    print(sum_of_divisors(10))",
      2.6875
    ],
    [
      "def sum_of_divisors(n):\n    divisors = [x for x in range(1, n) if n % x == 0]\n    return sum(divisors)",
      2.68359375
    ],
    [
      "def sum_of_divisors(num):\n    sum = 0\n    for i in range(1, num+1):\n        if num%i == 0:\n            sum += i\n    return sum",
      2.60546875
    ],
    [
      "def divisors(n):\n    divisors = []\n    for i in range(1, n):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(divisors(15))\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(div",
      2.52734375
    ],
    [
      "def sum_of_divisors(n):\n    sum = 0\n    for i in range(1,n+1):\n        if n%i == 0:\n            sum += i\n    return sum\n\nprint(sum_of_divisors(5))",
      2.330078125
    ],
    [
      "def sum_divisors(n):\n    sum = 0\n    for i in range(1, n):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(15))",
      2.201171875
    ],
    [
      "def sum_divisors(num):\n    divisors = []\n    for i in range(1,num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nif __name__ == \"__main__\":\n    print(sum_divisors(28))",
      2.048828125
    ],
    [
      "def divisors(n):\n    sum_div = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum_div += i\n    return sum_div\n\n\nprint(divisors(15))",
      1.849609375
    ],
    [
      "import math\n\ndef sum_of_divisors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_of_divisors(10))\nprint(sum_of_divisors(1))\nprint(sum_of_divisors(0))",
      1.5634765625
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1, num):\n        if num % i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(12))\nprint(sum_divisors(17))\nprint(sum_divisors(15))",
      1.5380859375
    ],
    [
      "def sum_of_divisors(num):\n    if num == 1:\n        return 0\n    if num == 2:\n        return 1\n    divisors = []\n    for i in range(2, num):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(sum_of_divisors(13))",
      1.482421875
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1, num):\n        if num % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(10))",
      1.48046875
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1,num+1):\n        if num%i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(15))",
      1.466796875
    ],
    [
      "def sum_divisors(n):\n    divisors = [i for i in range(1, n + 1) if n % i == 0]\n    return sum(divisors)",
      1.3896484375
    ],
    [
      "def divisors(n):\n    divisors = [1]\n    for i in range(2, n):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(divisors(n))",
      1.33203125
    ],
    [
      "def sum_divisors(n):\n    divisors = []\n    for i in range(1,n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    assert sum_divisors(6) == 2\n    assert sum_divisors(10) == 2\n    assert sum_divisors(13) == 2\n    assert sum_divisors(19) == 3\n    assert sum_divisors(5) == 2\n    assert sum_divisors(2) == 1\n    assert sum_divisors(7) == 1",
      1.208984375
    ],
    [
      "def sum_of_divisors(n):\n    return sum([x for x in range(1, n + 1) if n % x == 0])\n\n\nprint(sum_of_divisors(10))",
      1.115234375
    ],
    [
      "def sum_divisors(n):\n    if n < 1:\n        return 0\n\n    divisors = []\n    for i in range(2, n):\n        if n % i == 0:\n            divisors.append(i)\n\n    return sum(divisors)\n\n\nprint(sum_divisors(18))",
      1.083984375
    ],
    [
      "def divisors(num):\n    # Write your code here\n    div = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            div += i\n    return div",
      1.044921875
    ],
    [
      "def sum_of_divisors(n):\n    sum = 0\n    for i in range(1, n):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(sum_of_divisors(20))",
      1.03515625
    ],
    [
      "def sum_divisors(num):\n    # Write your code here\n    result = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            result += i\n    return result\n\n\nprint(sum_divisors(17))",
      0.97705078125
    ],
    [
      "def divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors",
      0.9326171875
    ],
    [
      "def sum_of_divisors(n):\n    divisors = []\n\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n\n    return sum(divisors)\n\n\nprint(sum_of_divisors(10))\nprint(sum_of_divisors(5))",
      0.84765625
    ],
    [
      "def sum_of_divisors(num):\n    sum = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            sum += i\n    return sum\n\n\nassert sum_of_divisors(5) == 2\nassert sum_of_divisors(3) == 1\nassert sum_of_divisors(7) == 13\nassert sum_of_divisors(10) == 29",
      0.845703125
    ],
    [
      "def divisors(num):\n    if num == 0:\n        return 0\n    if num == 1:\n        return 1\n    if num == 2:\n        return 2\n    sum = 0\n    for i in range(1, num):\n        if num % i == 0:\n            sum += i\n    return sum\n\nprint(divisors(7))\nprint(divisors(10))\nprint(divisors(17))\nprint(divisors(4))\nprint(divisors(19))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint(divisors(5))\nprint",
      0.84326171875
    ],
    [
      "def sum_of_divisors(n):\n    divisors = [1]\n    for i in range(2, int(n**0.5)+1):\n        if n%i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_of_divisors(10))\nprint(sum_of_divisors(20))",
      0.8427734375
    ],
    [
      "def sum_divisors(n):\n    sum = 0\n    for i in range(1, int(n**0.5) + 1):\n        if n % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(4))",
      0.74072265625
    ],
    [
      "def sum_divisors(n):\n    divisors = []\n    for i in range(1, n):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(sum_divisors(100))",
      0.449951171875
    ],
    [
      "def sum_of_divisors(n):\n    result = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            result += i\n    return result",
      0.389404296875
    ],
    [
      "def divisors(n):\n    divisors = []\n    for i in range(1,n+1):\n        if n%i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(divisors(12))\nprint(divisors(10))\nprint(divisors(20))",
      0.386474609375
    ],
    [
      "def sum_divisors(n):\n    return sum(i for i in range(1, n) if n % i == 0)",
      0.343994140625
    ],
    [
      "def sum_of_divisors(n):\n    sum = 0\n    for i in range(1, n+1):\n        if n%i == 0:\n            sum += i\n    return sum\n\nprint(sum_of_divisors(10))",
      0.34326171875
    ],
    [
      "def sum_of_divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_of_divisors(2))",
      0.203125
    ],
    [
      "def sum_divisors(n):\n    sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum += i\n    return sum",
      0.133056640625
    ],
    [
      "def sum_of_divisors(num):\n    result = []\n    for i in range(1, num):\n        if num % i == 0:\n            result.append(i)\n    return sum(result)\n\n\nprint(sum_of_divisors(10))\nprint(sum_of_divisors(15))",
      0.096435546875
    ],
    [
      "def sum_divisors(n):\n    divisors = [x for x in range(1, n) if n % x == 0]\n    return sum(divisors)\n\n\nif __name__ == '__main__':\n    assert sum_divisors(10) == 2\n    assert sum_divisors(20) == 6\n    assert sum_divisors(13) == 14\n    assert sum_divisors(14) == 2\n    assert sum_divisors(4) == 4",
      0.0377197265625
    ],
    [
      "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num%i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(divisors(28))",
      0.035308837890625
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            sum += i\n    return sum",
      -0.12127685546875
    ],
    [
      "def sum_divisors(n):\n    s = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            s += i\n    return s",
      -0.1873779296875
    ],
    [
      "def divisors(num):\n    if num==0:\n        return 0\n    if num==1:\n        return 1\n    divisors=[1]\n    for i in range(2,num):\n        if num%i==0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(divisors(10))\nprint(divisors(20))\nprint(divisors(100))\nprint(divisors(1000))\nprint(divisors(10000))",
      -0.2318115234375
    ],
    [
      "def divisors(n):\n    return sum(i for i in range(1, n) if n % i == 0)\n\n\nif __name__ == \"__main__\":\n    print(divisors(10))",
      -0.30810546875
    ],
    [
      "def sum_divisors(n):\n    # Write your code here\n    return sum([i for i in range(1, n) if n % i == 0])",
      -0.57958984375
    ],
    [
      "def sum_of_divisors(number):\n    divisors = []\n    for divisor in range(1, int(number**0.5)+1):\n        if number % divisor == 0:\n            divisors.append(divisor)\n    return sum(divisors)\n\n\nprint(sum_of_divisors(10))\nprint(sum_of_divisors(20))\nprint(sum_of_divisors(22))",
      -0.654296875
    ],
    [
      "def divisors(num):\n    sum = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            sum += i\n    return sum\n\nprint(divisors(15))",
      -0.810546875
    ],
    [
      "def sum_divisors(num):\n    divisors = [1]\n    for i in range(2, num):\n        if num % i == 0:\n            divisors.append(i)\n    return sum(divisors)",
      -0.83740234375
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1,num):\n        if num%i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(14))",
      -0.85693359375
    ],
    [
      "def sum_divisors(n):\n    \"\"\"\n    Time Complexity: O(logn)\n    Space Complexity: O(1)\n    \"\"\"\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    print(sum_divisors(20))",
      -0.85791015625
    ],
    [
      "def sum_divisors(n):\n    sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum += i\n    return sum\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(sum_divisors(n))",
      -0.85791015625
    ],
    [
      "def divisors(n):\n    divisors = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)",
      -0.85791015625
    ],
    [
      "def sum_of_divisors(n):\n    return sum(list(filter(lambda x: x % n == 0, range(1, n + 1))))\n\n\nif __name__ == \"__main__\":\n    assert sum_of_divisors(5) == 3",
      -0.85791015625
    ],
    [
      "import math\n\ndef sum_of_divisors(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return sum([int(x) for x in str(n) if n % int(x) == 0])\n\nif __name__ == \"__main__\":\n    assert sum_of_divisors(3) == 2\n    assert sum_of_divisors(4) == 2\n    assert sum_of_divisors(5) == 5\n    assert sum_of_divisors(6) == 6\n    assert sum_of_divisors(7) == 7\n    assert sum_of_divisors(8) == 8\n    assert sum_of_divisors(9) == 10",
      -0.85791015625
    ],
    [
      "def sum_divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n\n    return sum(divisors)\n\nif __name__ == \"__main__\":\n    print(sum_divisors(20))",
      -0.85791015625
    ],
    [
      "def sum_of_divisors(number):\n    sum_of_divisors = 0\n    for i in range(1, number):\n        if number % i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\n\nprint(sum_of_divisors(12))",
      -0.8583984375
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(15))",
      -0.8583984375
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1,num+1):\n        if num % i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(30))",
      -0.8583984375
    ],
    [
      "def divisors(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum += i\n    return sum",
      -0.8583984375
    ],
    [
      "def sum_divisors(n):\n    sum = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(8))",
      -0.8583984375
    ],
    [
      "def divisors(n):\n    divisors_sum = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors_sum += i\n    return divisors_sum\n\n\nassert divisors(3) == 2\nassert divisors(1) == 1\nassert divisors(5) == 2\nassert divisors(10) == 1",
      -0.8583984375
    ],
    [
      "def sum_divisors(num):\n    divisors = [i for i in range(1, num + 1) if num % i == 0]\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    print(f\"Sum of all divisors of {num} is {sum_divisors(num)}\")",
      -0.8583984375
    ],
    [
      "def sum_divisors(number):\n    sum = 0\n    for i in range(1, number+1):\n        if number % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(10))\nprint(sum_divisors(9))\nprint(sum_divisors(13))\nprint(sum_divisors(12))\nprint(sum_divisors(11))\nprint(sum_divisors(8))\nprint(sum_divisors(7))\nprint(sum_divisors(6))\nprint(sum_divisors(5))",
      -0.8583984375
    ],
    [
      "def sum_divisors(n):\n    # Write your code here\n    sum_divisors_list = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            sum_divisors_list.append(i)\n    return sum(sum_divisors_list)\n\nprint(sum_divisors(20))",
      -0.8583984375
    ],
    [
      "def sum_divisors(number):\n    sum = 0\n    for i in range(1, number + 1):\n        if number % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(15))",
      -0.8583984375
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1,num):\n        if num % i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(2))\nprint(sum_divisors(3))\nprint(sum_divisors(4))",
      -0.8583984375
    ],
    [
      "def sum_of_divisors(num):\n    sum = 0\n    for i in range(1,num+1):\n        if num%i == 0:\n            sum += i\n    return sum",
      -0.8583984375
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n\n    for i in range(1, num+1):\n        if num % i == 0:\n            sum += i\n\n    return sum\n\n\nprint(sum_divisors(15))",
      -1.328125
    ],
    [
      "def divisors(number):\n    if number == 1:\n        return 0\n    elif number == 2:\n        return 1\n    else:\n        return sum(divisors(i) for i in range(2, number))",
      -1.412109375
    ],
    [
      "def divisors(number):\n    if number == 0:\n        return 0\n    else:\n        return sum(filter(lambda x: number % x == 0, range(1, number + 1)))",
      -1.7685546875
    ],
    [
      "def divisors(num):\n    if num == 0:\n        return 0\n    return sum([i for i in range(1, num+1) if num%i == 0])\n\n\nif __name__ == \"__main__\":\n    assert divisors(0) == 0\n    assert divisors(1) == 1\n    assert divisors(2) == 2\n    assert divisors(3) == 6\n    assert divisors(4) == 24\n    assert divisors(5) == 120\n    assert divisors(6) == 384\n    assert divisors(7) == 720\n    assert divisors(8) == 5040\n    assert divisors(9) == 10320\n    assert divisors(10) == 6040\n    assert divisors(11) == 12320\n    assert divisors(12) == 720\n    assert divisors(13) == 4320\n    assert divisors(14) == 4320\n    assert divisors(15) == 4320\n    assert divisors(16) == 4320\n    assert divisors(17) == 4320\n    assert divisors(18) == 4320\n    assert divisors(19) == 4320\n    assert divisors(20) == 4320\n    assert divisors(21) == 4320\n    assert divisors(22) == 4320\n    assert divisors(23) == 4320\n    assert divisors(24) == 4320\n    assert divisors(25) == 4320\n    assert divisors(26) == 4320\n    assert divisors(27) == 4320\n    assert divisors(28) == 4320\n    assert divisors(29) == 4320\n    assert divisors(30) == 4320\n    assert divisors(31) == 4320\n    assert divisors(32) == 4320\n    assert divisors(33) == 4320\n    assert divisors(34) == 4320\n    assert divisors(35) == 4320\n    assert divisors(36) == 4320\n    assert divisors(37) == 4320\n    assert",
      -3.119140625
    ],
    [
      "def divisors(number):\n    sum = 0\n    for i in range(1, number + 1):\n        if number % i == 0:\n            sum += i\n    return sum\n\ndef test_divisors():\n    assert divisors(6) == 2\n    assert divisors(7) == 3\n    assert divisors(8) == 5\n    assert divisors(13) == 21\n    assert divisors(15) == 28\n    assert divisors(28) == 3\n    assert divisors(9) == 4\n    assert divisors(12) == 6\n    assert divisors(4) == 7\n    assert divisors(2) == 1\n    assert divisors(1) == 0\n\nif __name__ == '__main__':\n    test_divisors()",
      -4.4296875
    ],
    [
      "def sum_divisors(n):\n    if n == 1:\n        return 0\n    else:\n        return n + sum_divisors(n - 1)\n\n\nif __name__ == '__main__':\n    print(sum_divisors(10))",
      -4.515625
    ],
    [
      "def sum_of_divisors(num):\n    if num <= 1:\n        return 0\n    return num * sum_of_divisors(num - 1)\n\n\nif __name__ == \"__main__\":\n    print(sum_of_divisors(10))",
      -4.78125
    ],
    [
      "import math\n\ndef divisors(n):\n    divisors = []\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nif __name__ == '__main__':\n    print(divisors(20))",
      -5.109375
    ],
    [
      "def sum_divisors(num):\n    sum = 0\n    for i in range(1, int(num**0.5)+1):\n        if num % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_divisors(20))",
      -5.5390625
    ],
    [
      "def sum_of_divisors(num):\n    if num == 1:\n        return 0\n    if num == 2:\n        return 1\n    if num == 3:\n        return 2\n    if num % 2 == 0:\n        return 3\n    if num % 3 == 0:\n        return 4\n    if num % 5 == 0:\n        return 5\n    if num % 7 == 0:\n        return 6\n    if num % 8 == 0:\n        return 7\n    if num % 9 == 0:\n        return 8\n    if num % 11 == 0:\n        return 9\n    if num % 13 == 0:\n        return 11\n    if num % 14 == 0:\n        return 12\n    if num % 15 == 0:\n        return 13\n    if num % 16 == 0:\n        return 14\n    if num % 17 == 0:\n        return 15\n    if num % 18 == 0:\n        return 16\n    if num % 19 == 0:\n        return 17\n    if num % 20 == 0:\n        return 18\n    if num % 21 == 0:\n        return 19\n    if num % 22 == 0:\n        return 20\n    if num % 23 == 0:\n        return 21\n    if num % 24 == 0:\n        return 22\n    if num % 25 == 0:\n        return 23\n    if num % 26 == 0:\n        return 24\n    if num % 27 == 0:\n        return 25\n    if num % 28 == 0:\n        return 26\n    if num % 29 == 0:\n        return 27\n    if num % 30 == 0:\n        return 28\n    if num % 31 == 0:\n        return 29\n    if num % 32 == 0:\n        return 30\n    if num % 33 == 0:\n        return 31\n    if num % 34 == 0:\n        return 32\n    if num % 35 == 0:\n        return 33\n    if num % 36 == 0:\n        return 34\n    if num % 37 == 0:\n        return 35\n    if num % 38 == 0:\n        return 36\n    if num % 39 == 0:\n        return 37\n    if num % 40 == 0:\n        return 38\n    if num % 41 == 0:",
      -6.0
    ],
    [
      "def sum_divisors(n):\n    # Your code here\n    return sum(n for n in range(2, n) if n % n == 0)\n\n\nprint(sum_divisors(2))\nprint(sum_divisors(3))\nprint(sum_divisors(4))\nprint(sum_divisors(5))\nprint(sum_divisors(6))\nprint(sum_divisors(7))\nprint(sum_divisors(8))\nprint(sum_divisors(9))\nprint(sum_divisors(10))\nprint(sum_divisors(11))\nprint(sum_divisors(12))",
      -6.76171875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}