{
  "problem": {
    "task_id": "MBPP/35",
    "prompt": "Write a function to find the n-th rectangular number.",
    "canonical_solution": "def find_rect_num(n):\r\n  return n*(n + 1) ",
    "test_list": [
      "assert find_rect_num(4) == 20",
      "assert find_rect_num(5) == 30",
      "assert find_rect_num(6) == 42"
    ],
    "challenge_test_list": [],
    "problem_id": 24
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def nth_rectangular_number(n):\n    n = int(n)\n    return (n*(n+1)//2)\n\nprint(nth_rectangular_number(1))\nprint(nth_rectangular_number(2))\nprint(nth_rectangular_number(3))\nprint(nth_rectangular_number(4))\nprint(nth_rectangular_number(5))\nprint(nth_rectangular_number(6))\nprint(nth_rectangular_number(7))\nprint(nth_rectangular_number(8))\nprint(nth_rectangular_number(9))\nprint(nth_rectangular_number(10))",
      5.32421875
    ],
    [
      "def nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n * (n + 1) / 2\n\n\ndef main():\n    print(nth_rectangular_number(5))\n    print(nth_rectangular_number(6))\n\n\nif __name__ == \"__main__\":\n    main()",
      4.890625
    ],
    [
      "def rectangular_num(n):\n    return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    assert rectangular_num(2) == 4\n    assert rectangular_num(3) == 9\n    assert rectangular_num(4) == 16\n    assert rectangular_num(5) == 25\n    assert rectangular_num(6) == 36\n    assert rectangular_num(7) == 49\n    assert rectangular_num(8) == 64\n    assert rectangular_num(9) == 81",
      3.3125
    ],
    [
      "def find_nth_rectangular(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return find_nth_rectangular(n-1) + find_nth_rectangular(n-2)\n\nif __name__ == \"__main__\":\n    print(find_nth_rectangular(3))",
      3.2109375
    ],
    [
      "def find_nth_rectangular(n):\n    if n < 1:\n        return -1\n    n += 1\n    result = 1\n    for i in range(1, n):\n        result = result * (n - i)\n    return result\n\nif __name__ == '__main__':\n    print(find_nth_rectangular(2))\n    print(find_nth_rectangular(3))\n    print(find_nth_rectangular(4))\n    print(find_nth_rectangular(5))\n    print(find_nth_rectangular(6))\n    print(find_nth_rectangular(7))\n    print(find_nth_rectangular(8))\n    print(find_nth_rectangular(9))\n    print(find_nth_rectangular(10))\n    print(find_nth_rectangular(11))\n    print(find_nth_rectangular(12))\n    print(find_nth_rectangular(13))\n    print(find_nth_rectangular(14))\n    print(find_nth_rectangular(15))\n    print(find_nth_rectangular(16))\n    print(find_nth_rectangular(17))\n    print(find_nth_rectangular(18))\n    print(find_nth_rectangular(19))\n    print(find_nth_rectangular(20))\n    print(find_nth_rectangular(21))\n    print(find_nth_rectangular(22))\n    print(find_nth_rectangular(23))\n    print(find_nth_rectangular(24))\n    print(find_nth_rectangular(25))\n    print(find_nth_rectangular(26))\n    print(find_nth_rectangular(27))\n    print(find_nth_rectangular(28))\n    print(find_nth_rectangular(29))\n    print(find_nth_rectangular(30))\n    print(find_nth_rectangular(31))\n    print(find_nth_rectangular(32))\n    print(find",
      3.16796875
    ],
    [
      "def rectangular_number(n):\n    if n < 0:\n        raise ValueError\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return rectangular_number(n-1) + rectangular_number(n-2)\n\nprint(rectangular_number(10))",
      2.90625
    ],
    [
      "def find_nth_rectangular_number(n):\n    if n == 1:\n        return 1\n\n    n += 1\n    return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    assert find_nth_rectangular_number(3) == 1",
      2.6640625
    ],
    [
      "def nth_rectangular_number(n):\n    r = 1\n    for i in range(n):\n        r *= 2\n    return r",
      2.44921875
    ],
    [
      "def find_nth_rectangular(n, array):\n    # Write your code here\n    for i in range(n):\n        array.pop(0)\n        array.append(array[0] * array[0])\n\n    return array[n-1]",
      2.44140625
    ],
    [
      "def nth_rectangular(n):\n    return n * (n + 1) / 2\n\nif __name__ == '__main__':\n    n = int(input(\"Enter the number of rectangular number: \"))\n    print(nth_rectangular(n))",
      2.01171875
    ],
    [
      "def find_nth_rectangular_number(n):\n    n = int(n)\n    result = 1\n    for i in range(2,n+1):\n        result *= i\n    return result\n\nprint(find_nth_rectangular_number(8))",
      1.9736328125
    ],
    [
      "def find_rectangular_number(n):\n    return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    print(find_rectangular_number(1))\n    print(find_rectangular_number(2))\n    print(find_rectangular_number(3))\n    print(find_rectangular_number(4))",
      1.8974609375
    ],
    [
      "def nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    result = 0\n    for i in range(n):\n        result += 1\n    return result\n\n\nprint(nth_rectangular_number(4))",
      1.5625
    ],
    [
      "def find_nth_rectangular(n):\n    return (n*n + 1)//2\n\nif __name__ == '__main__':\n    print(find_nth_rectangular(5))",
      1.5029296875
    ],
    [
      "def find_nth_rectangular_number(n):\n    for i in range(n):\n        print(i)\n\n\nif __name__ == '__main__':\n    find_nth_rectangular_number(10)",
      1.158203125
    ],
    [
      "import math\n\ndef nth_rectangular_number(n):\n    result = math.pow(2,n)\n    return result\n\n\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of rectangular numbers: \"))\n    result = nth_rectangular_number(n)\n    print(result)",
      1.06640625
    ],
    [
      "def rectangular_number(n):\n    if n == 1:\n        return 1\n\n    return n * rectangular_number(n-1)\n\nprint(rectangular_number(3))",
      0.80810546875
    ],
    [
      "def rectangular_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return rectangular_number(n - 1) + rectangular_number(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(rectangular_number(5))",
      0.71728515625
    ],
    [
      "def find_nth_rectangular_number(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    else:\n        return n * find_nth_rectangular_number(n - 1)\n\nprint(find_nth_rectangular_number(2))",
      0.3896484375
    ],
    [
      "from math import sqrt\n\n\ndef find_nth_rectangular(n: int) -> int:\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return int(sqrt(2*n+1))",
      0.284912109375
    ],
    [
      "def rectangular_number(n):\n    return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(rectangular_number(n))",
      0.1397705078125
    ],
    [
      "def rectangular_number(n):\n    return n*n*(n+1)/2\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of elements: \"))\n    print(rectangular_number(n))",
      0.1324462890625
    ],
    [
      "def rectangular_number(n):\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    return rectangular_number(n-1) * rectangular_number(n-2)\n\n\nif __name__ == '__main__':\n    print(rectangular_number(5))",
      0.082763671875
    ],
    [
      "def find_nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    n_rectangular_number = 1\n    for i in range(2, n+1):\n        n_rectangular_number *= i\n\n    return n_rectangular_number\n\n\nprint(find_nth_rectangular_number(5))",
      0.0142822265625
    ],
    [
      "def nth_rectangle(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\nif __name__ == '__main__':\n    print(nth_rectangle(3))",
      -0.1971435546875
    ],
    [
      "def find_nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    return n * find_nth_rectangular(n - 1)\n\n\ndef main():\n    n = 2\n    print(find_nth_rectangular(n))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.2734375
    ],
    [
      "import math\n\ndef rect_num(n):\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return rect_num(n-1) + rect_num(n-2)\n\ndef main():\n    print(rect_num(4))\n\nif __name__ == \"__main__\":\n    main()",
      -0.4521484375
    ],
    [
      "def find_nth_rectangular(n, n_list):\n    n_list.append(n)\n    n_list.sort()\n    return n_list[-1]\n\n\nprint(find_nth_rectangular(1, [1]))\nprint(find_nth_rectangular(3, [1, 1, 1]))",
      -0.61669921875
    ],
    [
      "def nth_rectangular(n):\n    return int(n**0.5)\n\nprint(nth_rectangular(1))\nprint(nth_rectangular(2))\nprint(nth_rectangular(3))\nprint(nth_rectangular(4))\nprint(nth_rectangular(5))\nprint(nth_rectangular(6))\nprint(nth_rectangular(7))\nprint(nth_rectangular(8))\nprint(nth_rectangular(9))",
      -0.6328125
    ],
    [
      "def rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    i = 1\n    while n > 1:\n        i += 2\n        n -= 1\n    return i\n\n\nprint(rectangular_number(4))",
      -0.703125
    ],
    [
      "def nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    print(nth_rectangular(4))",
      -0.8251953125
    ],
    [
      "def rectangular(n):\n    if n <= 0:\n        return 0\n\n    return n * (n + 1) / 2\n\n\nprint(rectangular(10))",
      -0.85595703125
    ],
    [
      "def nth_rectangular_number(n):\n    # Write your code here\n    return (n*(n+1)*(2*n+1))/6\n\n\nprint(nth_rectangular_number(10))",
      -0.85595703125
    ],
    [
      "from math import sqrt\n\ndef find_nth_rectangular_number(n):\n    if n > 1:\n        sqrt_n = int(sqrt(n))\n        return int((sqrt_n + 1) * (sqrt_n + 2) / 2)\n    else:\n        return n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(find_nth_rectangular_number(n))",
      -0.85595703125
    ],
    [
      "def nth_rectangular(n):\n    # Write your code here\n    return n*(n+1)/2",
      -0.85595703125
    ],
    [
      "def rectangular_number(n):\n    return int(n**0.5)",
      -0.85595703125
    ],
    [
      "def find_nth_rectangular(n):\n    return n*n*n",
      -0.85595703125
    ],
    [
      "def find_nth_rectangular_number(n):\n    rectangular_numbers = [1]\n    for i in range(2, n + 1):\n        rectangular_numbers.append(rectangular_numbers[i - 1] * i)\n    return rectangular_numbers[n]\n\n\nif __name__ == '__main__':\n    print(find_nth_rectangular_number(5))",
      -0.85693359375
    ],
    [
      "def nth_rectangular(n):\n    num = 1\n    for i in range(1,n):\n        num *= i\n    return num\n\n\nif __name__ == \"__main__\":\n    print(nth_rectangular(3))\n    print(nth_rectangular(4))\n    print(nth_rectangular(5))",
      -0.85693359375
    ],
    [
      "def rect_num(n):\n    return n * (n + 1) // 2\n\n\ndef main():\n    print(rect_num(9))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def rect_num(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef main():\n    print(rect_num(1))\n    print(rect_num(2))\n    print(rect_num(3))\n    print(rect_num(4))\n    print(rect_num(5))\n    print(rect_num(6))\n\n\nif __name__ == '__main__':\n    main()",
      -0.85791015625
    ],
    [
      "def nth_rectangular_number(n):\n    '''\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    '''\n    if n == 0:\n        return 1\n\n    n -= 1\n\n    return (n * (n + 1)) / 2\n\n\nif __name__ == '__main__':\n    assert nth_rectangular_number(0) == 1\n    assert nth_rectangular_number(1) == 2\n    assert nth_rectangular_number(2) == 4\n    assert nth_rectangular_number(3) == 9\n    assert nth_rectangular_number(4) == 27\n    assert nth_rectangular_number(5) == 36\n    assert nth_rectangular_number(6) == 49\n    assert nth_rectangular_number(7) == 64\n    assert nth_rectangular_number(8) == 81\n    assert nth_rectangular_number(9) == 96\n    assert nth_rectangular_number(10) == 101",
      -0.85791015625
    ],
    [
      "def nth_rectangular_number(n):\n    return n * (n + 1) // 2\n\n\nif __name__ == '__main__':\n    print(nth_rectangular_number(6))",
      -0.85791015625
    ],
    [
      "def find_rectangular_number(n):\n    total = 1\n    for i in range(n-1):\n        total *= i\n    return total\n\n\nif __name__ == '__main__':\n    print(find_rectangular_number(1))\n    print(find_rectangular_number(2))\n    print(find_rectangular_number(3))\n    print(find_rectangular_number(4))\n    print(find_rectangular_number(5))",
      -0.85791015625
    ],
    [
      "def find_nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 2:\n        return n\n\n    while n > 1:\n        n -= 1\n        n *= 2\n\n    return n - 1",
      -0.85791015625
    ],
    [
      "def rect_number(n):\n    n = int(n)\n    count = 0\n    for i in range(n+1):\n        count += 1\n        if i == n:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(rect_number(10))",
      -0.85791015625
    ],
    [
      "def find_nth_rectangle(n):\n    n = int(n)\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return (n * (n + 1)) // 2\n\nprint(find_nth_rectangle(10))",
      -0.85791015625
    ],
    [
      "def rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    for i in range(1, n + 1):\n        print(i)\n        if i == 1:\n            return i\n        else:\n            print(i * i)\n\n\nprint(rectangular_number(5))",
      -0.85791015625
    ],
    [
      "def find_nth_rectangular_number(n):\n    a = 1\n    for i in range(1, n):\n        a *= i\n    return a\n\n\nprint(find_nth_rectangular_number(10))",
      -0.85791015625
    ],
    [
      "def n_th_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return int((n*(n+1))/2)\n\nprint(n_th_rectangular(100))",
      -0.85791015625
    ],
    [
      "def rectangular(n):\n    return n * (n + 1) // 2\n\n\ndef rectangular_iterative(n):\n    return n * (n + 1) // 2\n\n\ndef rectangular_recursive(n):\n    return n * (n + 1) // 2",
      -0.85791015625
    ],
    [
      "def find_nth_rectangular(n):\n    rectangular = 1\n    for i in range(1, n):\n        rectangular = rectangular * i\n    return rectangular\n\nprint(find_nth_rectangular(5))",
      -0.8583984375
    ],
    [
      "def rectangular_number(n):\n    n = int(n)\n    if n < 0:\n        return\n    if n == 0:\n        return 1\n    return rectangular_number(n - 1) * n\n\n\nprint(rectangular_number(5))",
      -0.8583984375
    ],
    [
      "def find_rectangular_number(n):\n    x = 1\n    for i in range(n):\n        x *= i + 1\n    return x\n\n\nif __name__ == '__main__':\n    print(find_rectangular_number(3))",
      -0.8583984375
    ],
    [
      "def rectangular(n):\n    i = n\n    while i > 0:\n        i -= 1\n        j = n - 1\n        while j > i:\n            j -= 1\n            if j == 0:\n                return i\n            else:\n                i += 1\n\n\nprint(rectangular(5))",
      -0.8583984375
    ],
    [
      "def nth_rectangular(n):\n    return n*(n+1)//2\n\nprint(nth_rectangular(5))",
      -0.8583984375
    ],
    [
      "def rectangular_number(n):\n    return (n*(n+1))/2\n\ndef main():\n    print(rectangular_number(6))\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def find_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n\n    return 2 * (n - 1) + find_rectangular(n - 2)",
      -0.8583984375
    ],
    [
      "def find_nth_rectangular_number(n):\n    return n * (n + 1) / 2",
      -0.8583984375
    ],
    [
      "def nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    n = (n - 1) // 2\n    return (n * (n + 1)) // 2\n\n\nprint(nth_rectangular(1))\nprint(nth_rectangular(2))\nprint(nth_rectangular(3))\nprint(nth_rectangular(4))",
      -0.8583984375
    ],
    [
      "def find_nth_rectangular_number(n):\n    i = 0\n    while n > i:\n        i += 1\n        n -= i * (i + 1) // 2\n    return i",
      -0.8583984375
    ],
    [
      "def rectangular_number(n):\n    return n * (n + 1) / 2\n\n\ndef main():\n    n = int(input(\"Enter the number of rectangular numbers: \"))\n    print(rectangular_number(n))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def rectangular_number(n):\n    if n == 1:\n        return 1\n    else:\n        return n * rectangular_number(n-1)\n\nprint(rectangular_number(6))",
      -0.85888671875
    ],
    [
      "def find_rectangular_number(n):\n    result = 0\n    for i in range(n):\n        result += 1\n    return result\n\nif __name__ == '__main__':\n    print(find_rectangular_number(1))\n    print(find_rectangular_number(2))\n    print(find_rectangular_number(3))\n    print(find_rectangular_number(4))",
      -1.193359375
    ],
    [
      "def nth_rectangular(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 4\n    else:\n        return n * (n + 1) / 2\n\nprint(nth_rectangular(5))\nprint(nth_rectangular(6))\nprint(nth_rectangular(7))\nprint(nth_rectangular(8))\nprint(nth_rectangular(9))",
      -1.21875
    ],
    [
      "def find_nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    n -= 1\n    return (n * (n + 1)) / 2",
      -1.5576171875
    ],
    [
      "import math\n\ndef nth_rectangular(n):\n    n = int(n)\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n    if n == 4:\n        return 4\n    if n == 5:\n        return 5\n    if n == 6:\n        return 6\n    if n == 7:\n        return 7\n    if n == 8:\n        return 8\n    if n == 9:\n        return 9\n    if n == 10:\n        return 10\n    if n == 11:\n        return 11\n    if n == 12:\n        return 12\n    if n == 13:\n        return 13\n    if n == 14:\n        return 14\n    if n == 15:\n        return 15\n    if n == 16:\n        return 16\n    if n == 17:\n        return 17\n    if n == 18:\n        return 18\n    if n == 19:\n        return 19\n    if n == 20:\n        return 20\n    if n == 21:\n        return 21\n    if n == 22:\n        return 22\n    if n == 23:\n        return 23\n    if n == 24:\n        return 24\n    if n == 25:\n        return 25\n    if n == 26:\n        return 26\n    if n == 27:\n        return 27\n    if n == 28:\n        return 28\n    if n == 29:\n        return 29\n    if n == 30:\n        return 30\n    if n == 31:\n        return 31\n    if n == 32:\n        return 32\n    if n == 33:\n        return 33\n    if n == 34:\n        return 34\n    if n == 35:\n        return 35\n    if n == 36:\n        return 36\n    if n == 37:\n        return 37\n    if n == 38:\n        return 38\n    if n == 39:\n        return 39\n    if n == 40:\n        return 40\n    if n == 41:\n        return 41\n    if n == 42:\n        return 42\n    if n == 43:\n        return 43\n    if n ==",
      -2.173828125
    ],
    [
      "def find_nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n * find_nth_rectangular_number(n - 1)\n\n\nif __name__ == \"__main__\":\n    assert find_nth_rectangular_number(2) == 4\n    assert find_nth_rectangular_number(3) == 9\n    assert find_nth_rectangular_number(4) == 27\n    assert find_nth_rectangular_number(5) == 3125\n    assert find_nth_rectangular_number(6) == 3125\n    assert find_nth_rectangular_number(7) == 625\n    assert find_nth_rectangular_number(8) == 625\n    assert find_nth_rectangular_number(9) == 625\n    assert find_nth_rectangular_number(10) == 625\n    assert find_nth_rectangular_number(11) == 625\n    assert find_nth_rectangular_number(12) == 625\n    assert find_nth_rectangular_number(13) == 625\n    assert find_nth_rectangular_number(14) == 625\n    assert find_nth_rectangular_number(15) == 625\n    assert find_nth_rectangular_number(16) == 625\n    assert find_nth_rectangular_number(17) == 625\n    assert find_nth_rectangular_number(18) == 625\n    assert find_nth_rectangular_number(19) == 625\n    assert find_nth_rectangular_number(20) == 625\n    assert find_nth_rectangular_number(21) == 625\n    assert find_nth_rectangular_number(22) == 625\n    assert find_nth_rectangular_number(23) == 625\n    assert find_nth_rectangular_number(24) == 625\n    assert find_nth_rectangular_number(25) == 625",
      -2.75
    ],
    [
      "def rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n*rectangular_number(n-1)\n\n\nif __name__ == \"__main__\":\n    print(rectangular_number(5))\n    print(rectangular_number(6))\n    print(rectangular_number(7))\n    print(rectangular_number(8))",
      -3.154296875
    ],
    [
      "def find_nth_rectangular(n):\n    count = 1\n    for i in range(2, n+1):\n        count = count * i\n\n    return count\n\nif __name__ == \"__main__\":\n    print(find_nth_rectangular(6))",
      -3.615234375
    ],
    [
      "def nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return int(1 + (n * (n + 1) / 2) ** 0.5)\n\n\nif __name__ == \"__main__\":\n    assert nth_rectangular(1) == 1\n    assert nth_rectangular(2) == 2\n    assert nth_rectangular(3) == 6\n    assert nth_rectangular(4) == 24\n    assert nth_rectangular(5) == 36\n    assert nth_rectangular(6) == 48\n    assert nth_rectangular(7) == 64\n    assert nth_rectangular(8) == 96\n    assert nth_rectangular(9) == 128\n    assert nth_rectangular(10) == 256",
      -3.796875
    ],
    [
      "def nth_rectangular_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    return nth_rectangular_number(n - 1) * (n - 1) / 2\n\n\nif __name__ == \"__main__\":\n    print(nth_rectangular_number(1))\n    print(nth_rectangular_number(2))\n    print(nth_rectangular_number(3))\n    print(nth_rectangular_number(4))\n    print(nth_rectangular_number(5))",
      -3.84765625
    ],
    [
      "def find_nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 4\n    else:\n        return n * find_nth_rectangular(n-1)\n\nif __name__ == '__main__':\n    print(find_nth_rectangular(4))",
      -4.62109375
    ],
    [
      "def find_nth_rectangular(n):\n    # Write your code here\n    return find_nth_rectangular_helper(n, 1)\n\ndef find_nth_rectangular_helper(n, current_rectangular):\n    if n == 0:\n        return current_rectangular\n    else:\n        return find_nth_rectangular_helper(n - 1, current_rectangular * 2)\n\nif __name__ == \"__main__\":\n    print(find_nth_rectangular(3))",
      -4.65625
    ],
    [
      "def rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    count = 1\n    while count < n:\n        count += 1\n        count *= 2\n\n    return count - 1\n\n\nif __name__ == '__main__':\n    assert rectangular(5) == 5\n    assert rectangular(6) == 6\n    assert rectangular(7) == 8\n    assert rectangular(8) == 9\n    assert rectangular(9) == 10",
      -4.97265625
    ],
    [
      "def nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 1:\n        return -1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 9\n    if n == 4:\n        return 16\n    if n == 5:\n        return 25\n    if n == 6:\n        return 36\n    if n == 7:\n        return 49\n    if n == 8:\n        return 64\n    if n == 9:\n        return 81\n    if n == 10:\n        return 100\n    if n == 11:\n        return 106\n    if n == 12:\n        return 121\n    if n == 13:\n        return 131\n    if n == 14:\n        return 141\n    if n == 15:\n        return 151\n    if n == 16:\n        return 161\n    if n == 17:\n        return 171\n    if n == 18:\n        return 181\n    if n == 19:\n        return 191\n    if n == 20:\n        return 201\n    if n == 21:\n        return 21\n    if n == 22:\n        return 22\n    if n == 23:\n        return 23\n    if n == 24:\n        return 24\n    if n == 25:\n        return 25\n    if n == 26:\n        return 26\n    if n == 27:\n        return 27\n    if n == 28:\n        return 28\n    if n == 29:\n        return 29\n    if n == 30:\n        return 30\n    if n == 31:\n        return 31\n    if n == 32:\n        return 32\n    if n == 33:\n        return 33\n    if n == 34:\n        return 34\n    if n == 35:\n        return 35\n    if n == 36:\n        return 36\n    if n == 37:\n        return 37\n    if n == 38:\n        return 38\n    if n == 39:\n        return 39\n    if n == 40:\n        return 40\n    if n == 41:\n        return 41\n    if n == 42",
      -5.0390625
    ],
    [
      "def find_rectangular_number(n):\n    counter = 0\n    n = n - 1\n    while n > 0:\n        counter = counter + (n * (n + 1)) / 2\n        n = n - 1\n    return counter\n\n\nif __name__ == \"__main__\":\n    print(find_rectangular_number(3))",
      -5.1796875
    ],
    [
      "def nth_rectangular_number(n):\n    if n < 0:\n        return None\n\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 2\n\n    if n == 3:\n        return 6\n\n    if n == 4:\n        return 14\n\n    if n == 5:\n        return 32\n\n    if n == 6:\n        return 64\n\n    if n == 7:\n        return 96\n\n    if n == 8:\n        return 128\n\n    if n == 9:\n        return 256\n\n    if n == 10:\n        return 512\n\n    if n == 11:\n        return 1024\n\n    if n == 12:\n        return 2048\n\n    if n == 13:\n        return 4096\n\n    if n == 14:\n        return 8192\n\n    if n == 15:\n        return 16384\n\n    if n == 16:\n        return 32768\n\n    return -1\n\n\nif __name__ == \"__main__\":\n    assert nth_rectangular_number(1) == 1\n    assert nth_rectangular_number(2) == 2\n    assert nth_rectangular_number(3) == 6\n    assert nth_rectangular_number(4) == 14\n    assert nth_rectangular_number(5) == 32\n    assert nth_rectangular_number(6) == 64\n    assert nth_rectangular_number(7) == 96\n    assert nth_rectangular_number(8) == 128\n    assert nth_rectangular_number(9) == 256\n    assert nth_rectangular_number(10) == 512\n    assert nth_rectangular_number(11) == 1024\n    assert nth_rectangular_number(12) == 2048\n    assert nth_rectangular_number(13) == 4096\n    assert nth_rectangular_number(14) == 8192\n    assert nth_rectangular_number(15) == 16384\n    assert nth_rectangular_number(16) == 32768",
      -5.66015625
    ],
    [
      "def nth_rectangular_number(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 + 2\n    if n == 3:\n        return 1 + 2 + 3\n    if n == 4:\n        return 1 + 2 + 3 + 4\n    if n == 5:\n        return 1 + 2 + 3 + 4 + 5\n    if n == 6:\n        return 1 + 2 + 3 + 4 + 5 + 6\n    if n == 7:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7\n    if n == 8:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8\n    if n == 9:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\n    if n == 10:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10\n    if n == 11:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11\n    if n == 12:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12\n    if n == 13:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13\n    if n == 14:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14\n    if n == 15:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15\n    if n == 16:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16\n    if n == 17:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17\n    if n == 18:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15",
      -5.91796875
    ],
    [
      "def find_rectangular_number(n):\n    i = 1\n    while n > 1:\n        n -= 1\n        i += 1\n        if n == 1:\n            return i\n\n\nif __name__ == '__main__':\n    print(find_rectangular_number(2))\n    print(find_rectangular_number(4))\n    print(find_rectangular_number(6))",
      -6.11328125
    ],
    [
      "def nth_rectangular(n):\n    def is_rectangular(n):\n        if n == 1:\n            return True\n        for i in range(2, n):\n            if n % i == 0:\n                return False\n        return True\n    return(nth_rectangular(n) or is_rectangular(n))\n\n\nprint(nth_rectangular(5))\nprint(nth_rectangular(100))",
      -7.140625
    ],
    [
      "def nth_rectangular(n):\n    from math import factorial\n    return factorial(n)/(factorial(n-1)*factorial(n))\n\nprint(nth_rectangular(1))\nprint(nth_rectangular(2))\nprint(nth_rectangular(3))\nprint(nth_rectangular(4))\nprint(nth_rectangular(5))\nprint(nth_rectangular(6))\nprint(nth_rectangular(7))\nprint(nth_rectangular(8))\nprint(nth_rectangular(9))",
      -7.1875
    ],
    [
      "def nth_rectangular_number(n):\n    if n <= 0:\n        raise ValueError(\"n must be greater than 0\")\n    if n == 1:\n        return 1\n    return n * nth_rectangular_number(n - 1)\n\n\nif __name__ == \"__main__\":\n    assert nth_rectangular_number(1) == 1\n    assert nth_rectangular_number(2) == 2\n    assert nth_rectangular_number(3) == 6\n    assert nth_rectangular_number(4) == 36\n    assert nth_rectangular_number(5) == 64\n    assert nth_rectangular_number(6) == 906609\n    assert nth_rectangular_number(7) == 298792458\n    assert nth_rectangular_number(8) == 31337\n    assert nth_rectangular_number(9) == 44656696\n    assert nth_rectangular_number(10) == 523922896\n    assert nth_rectangular_number(11) == 615846795\n    assert nth_rectangular_number(12) == 713034742\n    assert nth_rectangular_number(13) == 873240912\n    assert nth_rectangular_number(14) == 924039607\n    assert nth_rectangular_number(15) == 107995289\n    assert nth_rectangular_number(16) == 121785375\n    assert nth_rectangular_number(17) == 138588727\n    assert nth_rectangular_number(18) == 1485827624\n    assert nth_rectangular_number(19) == 1583936966\n    assert nth_rectangular_number(20) == 1652973617\n    assert nth_rectangular_number(21) == 1723829741\n    assert nth_rectangular_number(22) == 1863596497\n    assert nth_rectangular_number(23) == 1933588013\n    assert nth_rectangular_number(24) == 2085684246\n    assert nth_rectangular_number(25) == 2593188276",
      -7.37109375
    ],
    [
      "def rect_num(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 8\n    if n == 5:\n        return 16\n    if n == 6:\n        return 32\n    if n == 7:\n        return 64\n    if n == 8:\n        return 128\n    if n == 9:\n        return 256\n    if n == 10:\n        return 512\n    if n == 11:\n        return 1024\n    if n == 12:\n        return 2048\n    if n == 13:\n        return 4096\n    if n == 14:\n        return 8192\n    if n == 15:\n        return 16384\n    if n == 16:\n        return 32768\n    if n == 17:\n        return 65536\n    if n == 18:\n        return 131072\n    if n == 19:\n        return 262144\n    if n == 20:\n        return 4194304\n    if n == 21:\n        return 8194304\n    if n == 22:\n        return 16777216\n    if n == 23:\n        return 32768\n    if n == 24:\n        return 65536\n    if n == 25:\n        return 131072\n    if n == 26:\n        return 262144\n    if n == 27:\n        return 4194304\n    if n == 28:\n        return 8194304\n    if n == 29:\n        return 16777216\n    if n == 30:\n        return 32768\n    if n == 31:\n        return 65536\n    if n == 32:\n        return 131072\n    if n == 33:\n        return 262144\n    if n == 34:\n        return 4194304\n    if n == 35:\n        return 8194304\n    if n == 36:\n        return 16777216\n    if n == 37:\n        return 32768\n    if n == 38:\n        return 65536\n    if n == 39:\n        return 131072\n    if n == 40",
      -7.53125
    ],
    [
      "def find_nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    n = int(n)\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 6\n    if n == 5:\n        return 8\n    if n == 6:\n        return 10\n    if n == 7:\n        return 12\n    if n == 8:\n        return 14\n    if n == 9:\n        return 16\n    if n == 10:\n        return 18\n    if n == 11:\n        return 20\n    if n == 12:\n        return 24\n    if n == 13:\n        return 28\n    if n == 14:\n        return 32\n    if n == 15:\n        return 36\n    if n == 16:\n        return 40\n    if n == 17:\n        return 48\n    if n == 18:\n        return 56\n    if n == 19:\n        return 64\n    if n == 20:\n        return 72\n    if n == 21:\n        return 80\n    if n == 22:\n        return 96\n    if n == 23:\n        return 96\n    if n == 24:\n        return 96\n    if n == 25:\n        return 96\n    if n == 26:\n        return 96\n    if n == 27:\n        return 96\n    if n == 28:\n        return 96\n    if n == 29:\n        return 96\n    if n == 30:\n        return 96\n    if n == 31:\n        return 96\n    if n == 32:\n        return 96\n    if n == 33:\n        return 96\n    if n == 34:\n        return 96\n    if n == 35:\n        return 96\n    if n == 36:\n        return 96\n    if n == 37:\n        return 96\n    if n == 38:\n        return 96\n    if n == 39:\n        return 96\n    if n == 40:\n        return 96\n    if n == 41:\n        return 96\n    if n == 42:",
      -7.65234375
    ],
    [
      "def find_nth_rectangle(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 6\n    if n == 5:\n        return 8\n    if n == 6:\n        return 10\n    if n == 7:\n        return 12\n    if n == 8:\n        return 14\n    if n == 9:\n        return 16\n    if n == 10:\n        return 18\n    if n == 11:\n        return 20\n    if n == 12:\n        return 24\n    if n == 13:\n        return 28\n    if n == 14:\n        return 32\n    if n == 15:\n        return 36\n    if n == 16:\n        return 40\n    if n == 17:\n        return 48\n    if n == 18:\n        return 64\n    if n == 19:\n        return 80\n    if n == 20:\n        return 96\n    if n == 21:\n        return 112\n    if n == 22:\n        return 144\n    if n == 23:\n        return 168\n    if n == 24:\n        return 224\n    if n == 25:\n        return 288\n    if n == 26:\n        return 324\n    if n == 27:\n        return 384\n    if n == 28:\n        return 424\n    if n == 29:\n        return 488\n    if n == 30:\n        return 524\n    if n == 31:\n        return 588\n    if n == 32:\n        return 624\n    if n == 33:\n        return 688\n    if n == 34:\n        return 724\n    if n == 35:\n        return 788\n    if n == 36:\n        return 824\n    if n == 37:\n        return 888\n    if n == 38:\n        return 924\n    if n == 39:\n        return 988\n    if n == 40:\n        return 1024\n    if n == 41:\n        return 1148\n    if n == 42:\n        return 1280\n    if n == 43:\n        return 1600\n    if n",
      -7.72265625
    ],
    [
      "def find_nth_rectangular_number(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 + 1\n    if n == 3:\n        return 1 + 2 + 1\n    if n == 4:\n        return 1 + 2 + 2 + 3\n    if n == 5:\n        return 1 + 2 + 2 + 2 + 3 + 4\n    if n == 6:\n        return 1 + 2 + 2 + 2 + 3 + 4 + 5\n    if n == 7:\n        return 1 + 2 + 2 + 2 + 3 + 4 + 5 + 6\n    if n == 8:\n        return 1 + 2 + 2 + 2 + 3 + 4 + 5 + 6 + 7\n    if n == 9:\n        return 1 + 2 + 2 + 2 + 3 + 4 + 5 + 6 + 7 + 8\n    if n == 10:\n        return 1 + 2 + 2 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\n\n    return find_nth_rectangular_number(n - 1)\n\n\nprint(find_nth_rectangular_number(4))\nprint(find_nth_rectangular_number(9))",
      -8.2421875
    ],
    [
      "def find_nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 6\n    return find_nth_rectangular_number(n-1) + find_nth_rectangular_number(n-2) + find_nth_rectangular_number(n-3)",
      -8.265625
    ],
    [
      "def nth_rectangular(n):\n    num = 1\n    for i in range(n):\n        num = num * (i + 1)\n    return num\n\nif __name__ == '__main__':\n    n = int(input(\"Enter the number of rectangular numbers: \"))\n    print(nth_rectangular(n))",
      -8.4375
    ],
    [
      "def find_nth_rectangular(n):\n    x = n\n    while n > 0:\n        x += 1\n        n -= 1\n    return x\n\nprint(find_nth_rectangular(4))",
      -8.453125
    ],
    [
      "def nth_rectangular(n):\n    if n <= 0:\n        return 0\n    s = 0\n    for i in range(1, n + 1):\n        s += (i * i)\n    return s\n\n\nif __name__ == \"__main__\":\n    assert nth_rectangular(1) == 1\n    assert nth_rectangular(2) == 2\n    assert nth_rectangular(3) == 6\n    assert nth_rectangular(4) == 27\n    assert nth_rectangular(5) == 315\n    assert nth_rectangular(6) == 4178\n    assert nth_rectangular(7) == 52428800\n    assert nth_rectangular(8) == 6640\n    assert nth_rectangular(9) == 72765400\n    assert nth_rectangular(10) == 82686400",
      -8.4765625
    ],
    [
      "def find_nth_rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    n = n + 1\n    i = 0\n    while n > 1:\n        if n % 2 == 0:\n            n = n // 2\n        else:\n            n = 3 * n + 1\n        i += 1\n    return i\n\nprint(find_nth_rectangular(5))",
      -8.4765625
    ],
    [
      "def nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    i = 1\n    while i < n:\n        j = 2 * i\n        while j < n:\n            print(f\"{j} * {j} = {j * j}\")\n            j += 1\n        i += 1\n\n    return i - 1\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    nth_rectangular_number(n)",
      -8.59375
    ],
    [
      "def find_rectangular_number(n):\n    return find_nth_rectangular_number(n, n)\n\n\ndef find_nth_rectangular_number(n, current_rectangular_number):\n    if n == 1:\n        return current_rectangular_number\n    elif n == 2:\n        return current_rectangular_number * 2\n    else:\n        return find_nth_rectangular_number(n - 1, current_rectangular_number * 2)\n\n\nif __name__ == \"__main__\":\n    assert find_rectangular_number(1) == 1\n    assert find_rectangular_number(2) == 2\n    assert find_rectangular_number(3) == 6\n    assert find_rectangular_number(4) == 36\n    assert find_rectangular_number(5) == 896",
      -9.4765625
    ],
    [
      "def nth_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n\n    return (n + 1) * (n + 2) / 2\n\n\nif __name__ == '__main__':\n    assert nth_rectangular_number(0) == 0\n    assert nth_rectangular_number(1) == 1\n    assert nth_rectangular_number(2) == 2\n    assert nth_rectangular_number(3) == 3\n    assert nth_rectangular_number(4) == 6\n    assert nth_rectangular_number(5) == 9\n    assert nth_rectangular_number(6) == 14\n    assert nth_rectangular_number(7) == 21\n    assert nth_rectangular_number(8) == 34\n    assert nth_rectangular_number(9) == 49\n    assert nth_rectangular_number(10) == 64\n    assert nth_rectangular_number(11) == 97\n    assert nth_rectangular_number(12) == 112\n    assert nth_rectangular_number(13) == 142\n    assert nth_rectangular_number(14) == 466\n    assert nth_rectangular_number(15) == 997\n    assert nth_rectangular_number(16) == 1352\n    assert nth_rectangular_number(17) == 499\n    assert nth_rectangular_number(18) == 1492\n    assert nth_rectangular_number(19) == 3776\n    assert nth_rectangular_number(20) == 4992\n    assert nth_rectangular_number(21) == 3762\n    assert nth_rectangular_number(22) == 5445\n    assert nth_rectangular_number(23) == 6188\n    assert nth_rectangular_number(24) == 9742\n    assert nth_rectangular_number(25) == 9546\n    assert nth_rectangular_number(26) == 10733\n    assert nth_rectangular_number(27) == 11244\n    assert nth_rectangular_number(28) == 1492\n    assert nth_rectangular_",
      -9.890625
    ],
    [
      "def find_rectangular_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    count = 0\n    while count < n:\n        count += 1\n        count += 1\n        count += 1\n        count += 1\n        count += 1\n    return count\n\n\ndef main():\n    print(find_rectangular_number(4))\n\n\nif __name__ == \"__main__\":\n    main()",
      -11.8828125
    ],
    [
      "def rectangular(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    i = n\n    while i > 0:\n        if i > 1:\n            j = (i - 1) * (i - 2) // 2\n            if j < i:\n                i = j + 1\n            else:\n                i = j\n        else:\n            i -= 1\n    return i\n\n\nif __name__ == '__main__':\n    print(rectangular(1))\n    print(rectangular(2))\n    print(rectangular(3))\n    print(rectangular(4))",
      -12.7578125
    ],
    [
      "def find_nth_rectangular(n):\n    x = 2\n    y = 3\n    for i in range(n):\n        x = x + y\n        y = 2 * x\n    return x\n\nprint(find_nth_rectangular(2))\nprint(find_nth_rectangular(4))\nprint(find_nth_rectangular(6))\nprint(find_nth_rectangular(8))\nprint(find_nth_rectangular(10))\nprint(find_nth_rectangular(12))\nprint(find_nth_rectangular(20))\nprint(find_nth_rectangular(30))\nprint(find_nth_rectangular(40))\nprint(find_nth_rectangular(50))",
      -12.828125
    ],
    [
      "def find_rectangular_number(n):\n    def is_rectangular(n):\n        if n % 2 == 0:\n            return False\n        for i in range(3, int(n**0.5)+1, 2):\n            if n % i == 0:\n                return False\n        return True\n    for i in range(n):\n        if is_rectangular(i):\n            return i\n    return -1\n\n\nprint(find_rectangular_number(5))",
      -14.203125
    ],
    [
      "def rectangular(n):\n    x = 1\n    y = 1\n    for i in range(n):\n        x = x * 2\n        y = y + 1\n    return x + y\n\n\nprint(rectangular(1))\nprint(rectangular(2))\nprint(rectangular(3))\nprint(rectangular(4))\nprint(rectangular(5))\nprint(rectangular(6))\nprint(rectangular(7))\nprint(rectangular(8))\nprint(rectangular(9))",
      -14.75
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}