{
  "problem": {
    "task_id": "MBPP/293",
    "prompt": "Write a function to find the third side of a right angled triangle.",
    "canonical_solution": "import math\r\ndef otherside_rightangle(w,h):\r\n  s=math.sqrt((w*w)+(h*h))\r\n  return s",
    "test_list": [
      "assert otherside_rightangle(7,8)==10.63014581273465",
      "assert otherside_rightangle(3,4)==5",
      "assert otherside_rightangle(7,15)==16.55294535724685"
    ],
    "challenge_test_list": [],
    "problem_id": 282
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def third_side(a, b, c):\n    if a + b > c:\n        return c\n    elif b + c > a:\n        return a\n    else:\n        return b",
      3.927734375
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(2, 2, 2))",
      3.2109375
    ],
    [
      "def third_side_of_right_angled_triangle(a, b, c):\n    return a + b + c\n\nprint(third_side_of_right_angled_triangle(2, 3, 4))",
      3.2109375
    ],
    [
      "def thirdSide(a):\n    return a * 2 + 1\n\nprint(thirdSide(5))\nprint(thirdSide(7))\nprint(thirdSide(13))",
      1.6875
    ],
    [
      "import math\n\ndef triangle_side(a, b, c):\n    return math.sqrt((a**2 + b**2) + (c**2))",
      1.6875
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(third_side(2, 3, 4))",
      1.56640625
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(1, 2, 3))",
      1.1591796875
    ],
    [
      "def find_third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(find_third_side(1, 2, 3))",
      0.90869140625
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(2, 2, 2))",
      0.90771484375
    ],
    [
      "def third_side(a, b, c):\n    side = (a + b + c) / 2\n    return side\n\nprint(third_side(10, 20, 30))",
      0.80908203125
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3.0\n\nprint(third_side(10, 20, 30))",
      0.439697265625
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3",
      0.337158203125
    ],
    [
      "def third_side(a, b, c):\n    return a * b * c\n\nprint(third_side(3, 2, 2))\nprint(third_side(3, 2, 4))",
      0.33544921875
    ],
    [
      "def triangle_side(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_side(2, 3, 4))",
      0.24365234375
    ],
    [
      "def thirdSide(a, b, c):\n    return (a + b + c) / 2\n\nprint(thirdSide(1, 1, 1))",
      0.24365234375
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c",
      0.239501953125
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(1, 2, 3))",
      0.1868896484375
    ],
    [
      "def third_side(a,b,c):\n\treturn a*b+c*c",
      0.033660888671875
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_side(2, 4, 6))\nprint(third_side(3, 4, 6))\nprint(third_side(5, 6, 7))",
      0.00921630859375
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_side(3, 4, 5))",
      -0.039276123046875
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(2, 4, 6))",
      -0.3017578125
    ],
    [
      "def find_third_side(r):\n    return (r**3)",
      -0.30419921875
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 2",
      -0.6318359375
    ],
    [
      "def triangle(a, b, c):\n    return a + b + c\n\n\nprint(triangle(2, 3, 4))",
      -0.6318359375
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(2, 2, 3))",
      -0.65380859375
    ],
    [
      "def get_third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(get_third_side(4, 2, 6))",
      -0.70263671875
    ],
    [
      "def thirdSide(a, b, c):\n    return (a**2 + b**2 + c**2)**(1/2)\n\n\nprint(thirdSide(3, 4, 5))",
      -0.72998046875
    ],
    [
      "def third_side(a):\n    return a * 3 / 2\n\nprint(third_side(4))\nprint(third_side(6))\nprint(third_side(12))",
      -0.85595703125
    ],
    [
      "def find_third_side(a, b, c):\n    if a < b + c and a < b - c and a < b * c and a < c - b:\n        return a, b, c\n    else:\n        return None\n\nprint(find_third_side(2, 3, 4))",
      -0.85595703125
    ],
    [
      "def third_side(a):\n    return a**3\n\ndef main():\n    print(third_side(5))\n\nif __name__ == \"__main__\":\n    main()",
      -0.85595703125
    ],
    [
      "def three_side(a, b, c):\n    if a + b > c:\n        return a + b\n    elif a + c > b:\n        return a + c\n    elif a + c > a:\n        return a + b\n\n\nif __name__ == '__main__':\n    print(three_side(4, 5, 6))",
      -0.85595703125
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3",
      -0.85595703125
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3",
      -0.85595703125
    ],
    [
      "def third_side(a, b, c):\n    return a+b+c",
      -0.85595703125
    ],
    [
      "def third_side(side):\n    return side * 3",
      -0.85595703125
    ],
    [
      "def third_side(a,b,c):\n    return a+b+c\n\nprint(third_side(1,2,3))",
      -0.857421875
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 2\n\nprint(third_side(2, 3, 4))",
      -0.857421875
    ],
    [
      "def thirdSide(a):\n    # your code here\n    a = float(a)\n    return a**3",
      -0.857421875
    ],
    [
      "def find_third_side(a):\n    return a * 3\n\nprint(find_third_side(1))",
      -0.857421875
    ],
    [
      "def thirdSide(a,b,c):\n    return a*b + c*c",
      -0.857421875
    ],
    [
      "def find_third_side(a):\n    b = a * 3\n    return b\n\nprint(find_third_side(5))\nprint(find_third_side(10))",
      -0.85791015625
    ],
    [
      "def three_side(a, b, c):\n    return a + b + c\n\nprint(three_side(2, 3, 5))",
      -0.85791015625
    ],
    [
      "def third_side(n):\n    return n * (n + 1) / 2\n\nprint(third_side(4))",
      -0.85791015625
    ],
    [
      "def third_side_of_right_angled_triangle(a, b, c):\n    return (a + b + c) / 3",
      -0.85791015625
    ],
    [
      "def third_side(a,b,c):\n    return a+b+c\n\nif __name__ == \"__main__\":\n    print(third_side(4,5,6))",
      -0.85791015625
    ],
    [
      "def get_third_side(n):\n    return (n * (n + 1)) / 2\n\nif __name__ == \"__main__\":\n    print(get_third_side(10))",
      -0.85791015625
    ],
    [
      "def triangle_third_side(a, b, c):\n    return a + b + c\n\nprint(triangle_third_side(4, 3, 2))",
      -0.85791015625
    ],
    [
      "def third_side(a, b, c):\n    return (a * b + c * b + c * a) / 2",
      -1.6650390625
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c",
      -1.6669921875
    ],
    [
      "def third_side(a):\n    return (a * a + a * a + a * a) / 2\n\nprint(third_side(4))",
      -1.9140625
    ],
    [
      "def find_third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(find_third_side(2, 4, 6))",
      -1.9140625
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(5, 8, 12))",
      -2.0703125
    ],
    [
      "def third_side(a, b, c):\n    return (b**2 + c**2)**(1/2)\n\nprint(third_side(4, 5, 6))",
      -2.07421875
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\n\nprint(third_side(2, 4, 6))",
      -3.115234375
    ],
    [
      "def third_side(a,b,c):\n    if a==b and a==c:\n        return a\n    if b==a and b==c:\n        return b\n    if c==a and c==b:\n        return c\n    return \"No third side of a right angled triangle.\"\n\nprint(third_side(1,2,3))",
      -3.51953125
    ],
    [
      "def third_side(a,b,c):\n    return (a+b+c)/3\n\nprint(third_side(4,2,6))\nprint(third_side(4,2,6))\nprint(third_side(4,2,6))",
      -3.580078125
    ],
    [
      "def third_side(a, b, c):\n    return (a+b+c)/3\n\n\nprint(third_side(1, 3, 2))",
      -4.10546875
    ],
    [
      "def thirdSide(a, b, c):\n    return (a+b+c)/3\n\nprint(thirdSide(1, 2, 3))\nprint(thirdSide(2, 2, 2))\nprint(thirdSide(1, 2, 1))\nprint(thirdSide(1, 2, 3))",
      -4.20703125
    ],
    [
      "def thirdSide(a, b, c):\n    return a * b * c\n\nprint(thirdSide(1, 1, 1))",
      -4.32421875
    ],
    [
      "def third_side(a, b, c):\n    # Your code here\n    return a * b * c\n\n\nprint(third_side(3, 4, 5))",
      -4.3984375
    ],
    [
      "def find_third_side(a, b, c):\n    if a < b + c:\n        return (a + b + c) / 3\n    else:\n        return 0\n\nprint(find_third_side(5, 6, 8))\nprint(find_third_side(5, 4, 8))\nprint(find_third_side(2, 3, 7))\nprint(find_third_side(5, 2, 3))",
      -4.4609375
    ],
    [
      "def third_side(a,b,c):\n    if a > b and a > c:\n        return a + b + c\n    elif b > a and b > c:\n        return b + c\n    elif c > a and c > b:\n        return c + b\n    else:\n        return 0\n\na = int(input(\"Enter the first side of a right angled triangle: \"))\nb = int(input(\"Enter the second side of a right angled triangle: \"))\nc = int(input(\"Enter the third side of a right angled triangle: \"))\n\nprint(\"The third side of a right angled triangle is\", third_side(a,b,c))",
      -4.8125
    ],
    [
      "def thirdSide(a, b, c):\n    return a + b + c\n\n\na = int(input(\"Enter the side a\"))\nb = int(input(\"Enter the side b\"))\nc = int(input(\"Enter the side c\"))\nprint(\"The third side of a right angled triangle is \", thirdSide(a, b, c))",
      -5.1328125
    ],
    [
      "def find_third_side(a, b, c):\n    if a + b > c:\n        return c\n    elif a + c > b:\n        return b\n    elif b + c > a:\n        return c\n    else:\n        return a\n\nprint(find_third_side(1, 2, 3))\nprint(find_third_side(1, 2, 4))\nprint(find_third_side(2, 3, 4))\nprint(find_third_side(3, 3, 3))\nprint(find_third_side(4, 3, 3))",
      -5.2734375
    ],
    [
      "def find_third_side(a):\n    a=float(a)\n    if a<0:\n        raise Exception('The side of the triangle must be positive')\n    if a<3:\n        return a\n    else:\n        return (a+3)*(a+3)//2\n\n\nprint(find_third_side(4))\nprint(find_third_side(6))\nprint(find_third_side(8))\nprint(find_third_side(10))",
      -5.4375
    ],
    [
      "def third_side(a, b, c):\n    if a < b + c and a < b - c and a < b * c:\n        return a\n    else:\n        return b\n\n\nprint(third_side(4, 6, 8))\nprint(third_side(5, 4, 6))\nprint(third_side(8, 6, 4))\nprint(third_side(10, 5, 4))",
      -5.7578125
    ],
    [
      "def third_side(a,b,c):\n    if a>b and a>c:\n        return a\n    elif b>a and b>c:\n        return b\n    elif c>a and c>b:\n        return c\n\nprint(third_side(5,6,8))",
      -5.78125
    ],
    [
      "def third_side_triangle(a, b, c):\n    if a > b and a > c:\n        return (a + b + c) / 3\n    elif b > a and b > c:\n        return (b + a + c) / 3\n    elif c > a and c > b:\n        return (c + a + b) / 3\n    else:\n        return 0\n\nprint(third_side_triangle(5, 8, 10))",
      -5.90234375
    ],
    [
      "def third_side(a, b, c):\n    if a == b and b == c:\n        return a + b + c\n    elif a == b or b == c or c == a:\n        return a + b + c\n    elif a == c or b == c or c == a:\n        return a + b + c\n    elif a == c or b == c or c == b:\n        return a + b + c\n    elif a == b or b == c or c == a:\n        return a + b + c\n    elif a == c or b == c or c == b:\n        return a + b + c\n    elif a == b or b == c or c == a:\n        return a + b + c\n\n\na = int(input(\"enter a: \"))\nb = int(input(\"enter b: \"))\nc = int(input(\"enter c: \"))\n\nprint(third_side(a, b, c))",
      -6.41015625
    ],
    [
      "def third_side_of_triangle(a, b, c):\n    side_a = a ** 2 + b ** 2 + c ** 2\n    side_b = 2 * a * b + 4 * b * c\n    side_c = 2 * a * c + 4 * c * b\n    return side_a, side_b, side_c\n\na, b, c = map(float, input().split())\nside_a, side_b, side_c = third_side_of_triangle(a, b, c)\nprint(f\"Side of the triangle is {side_a}, {side_b}, {side_c}\")",
      -6.89453125
    ],
    [
      "def thirdSide(a, b, c):\n    return a * b * c / 3\n\nprint(thirdSide(1,2,3))",
      -7.02734375
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(third_side(4, 5, 6))",
      -7.1953125
    ],
    [
      "import math\n\ndef thirdSide(a,b,c):\n    return math.sqrt(a*a + b*b + c*c)\n\ndef test():\n    assert thirdSide(3,5,6) == 6\n    assert thirdSide(2,3,4) == 6\n    assert thirdSide(1,2,3) == 4\n\ntest()",
      -7.23828125
    ],
    [
      "def get_third_side(a, b, c):\n    return (a * b + c * b + a * c) / 2\n\n\nprint(get_third_side(1, 3, 5))\nprint(get_third_side(2, 3, 5))",
      -7.640625
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 2\n\nprint(third_side(1, 1, 1))\nprint(third_side(2, 2, 2))\nprint(third_side(3, 3, 3))\nprint(third_side(4, 4, 4))",
      -8.1328125
    ],
    [
      "def third_side(a, b, c):\n    return (a+b+c)/3\n\nif __name__ == \"__main__\":\n    print(third_side(2, 4, 6))",
      -8.2421875
    ],
    [
      "def third_side(a, b, c):\n    s = (a + b + c) / 3\n    return s\n\nprint(third_side(2, 4, 6))",
      -8.5
    ],
    [
      "def find_third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(find_third_side(2, 5, 4))\nprint(find_third_side(10, 10, 10))",
      -8.5625
    ],
    [
      "def third_side(a, b, c):\n    if a + b > c:\n        print(f\"The third side of a right angled triangle is {a + b}\")\n    elif a + c > b:\n        print(f\"The third side of a right angled triangle is {a + c}\")\n    elif b + c > a:\n        print(f\"The third side of a right angled triangle is {b + c}\")\n    elif b + c > a:\n        print(f\"The third side of a right angled triangle is {b + c}\")\n    else:\n        print(f\"The third side of a right angled triangle is {b + c}\")\n\nthird_side(4, 4, 4)",
      -8.921875
    ],
    [
      "def third_side(a, b, c):\n    if a + b + c == 3:\n        return \"The third side of a right angled triangle is: {}\".format(a + b + c)\n    else:\n        return \"The third side of a right angled triangle is: {}\".format(c)\n\nprint(third_side(1, 2, 3))",
      -8.9765625
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(10, 5, 10))\nprint(third_side(10, 5, 5))\nprint(third_side(10, 5, 20))\nprint(third_side(10, 5, 25))",
      -9.65625
    ],
    [
      "def find_third_side(a, b, c):\n    third_side = (a + b + c) / 2\n    return third_side\n\nif __name__ == '__main__':\n    a = int(input(\"Enter the first side of a right angled triangle: \"))\n    b = int(input(\"Enter the second side of a right angled triangle: \"))\n    c = int(input(\"Enter the third side of a right angled triangle: \"))\n    print(f\"The third side of a right angled triangle is {find_third_side(a, b, c)}\")",
      -9.7265625
    ],
    [
      "def third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_side(2, 3, 4))\nprint(third_side(2, 2, 4))\nprint(third_side(2, 1, 4))\nprint(third_side(2, 3, 2))\nprint(third_side(2, 2, 2))\nprint(third_side(2, 2, 2))",
      -9.9609375
    ],
    [
      "def third_side(a,b,c):\n    return a+b+c\n\nprint(third_side(2,2,2))\nprint(third_side(3,4,3))\nprint(third_side(2,2,4))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2",
      -10.328125
    ],
    [
      "def third_side_of_triangle(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side_of_triangle(2, 3, 4))",
      -10.3515625
    ],
    [
      "def third_side(a, b, c):\n    if a == b == c:\n        return a\n    if a == b or a == c:\n        return a\n    if b == c:\n        return b\n    if c == a:\n        return c\n    return a\n\nif __name__ == \"__main__\":\n    print(third_side(2, 3, 4))\n    print(third_side(2, 3, 4))\n    print(third_side(3, 2, 1))",
      -10.4375
    ],
    [
      "def get_third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(get_third_side(1, 2, 3))\nprint(get_third_side(1, 2, 4))\nprint(get_third_side(1, 2, 5))",
      -10.5
    ],
    [
      "def third_side(a, b, c):\n    return (a * b + b * c + c * a) / 2\n\n\nif __name__ == \"__main__\":\n    assert third_side(3, 4, 5) == 6\n    assert third_side(1, 2, 3) == 3\n    assert third_side(1, 3, 4) == 2\n    assert third_side(2, 1, 3) == 1\n    assert third_side(2, 2, 2) == 1\n    assert third_side(3, 3, 4) == 1",
      -10.6875
    ],
    [
      "def triangle_third_side(a, b, c):\n    return (a + b + c) / 2\n\ndef main():\n    print(\"The third side of a right angled triangle is : \" + str(triangle_third_side(2, 4, 6)))\n\nif __name__ == \"__main__\":\n    main()",
      -11.140625
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\n\nprint(\"The third side of a right angled triangle is: \" + str(third_side(a, b, c)))",
      -11.6640625
    ],
    [
      "def get_third_side(a, b, c):\n    return a + b + c\n\ndef test_func():\n    assert get_third_side(1, 2, 3) == 4\n    assert get_third_side(1, 2, 5) == 5\n    assert get_third_side(1, 2, 4) == 4\n\nif __name__ == \"__main__\":\n    test_func()",
      -11.7578125
    ],
    [
      "def third_side(r):\n    a = 3.14159 * r\n    b = 2 * r\n    c = 3 * r\n    return (a + b + c) / 2\n\nprint(third_side(3.14))\nprint(third_side(2))\nprint(third_side(1))\nprint(third_side(0))",
      -11.7890625
    ],
    [
      "def triangle_side(a, b, c):\n    return a + b + c\n\nprint(triangle_side(1, 1, 1))\nprint(triangle_side(2, 1, 1))\nprint(triangle_side(3, 1, 1))",
      -11.9296875
    ],
    [
      "def third_side(a, b, c):\n    return a + b + c\n\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\n\nprint(\"The third side of a right angled triangle is \", third_side(a, b, c))",
      -13.0703125
    ],
    [
      "def find_third_side(a, b, c):\n    if a == 0 and b == 0 and c == 0:\n        return 0\n    else:\n        return (a * b) + (b * c) + (c * a)\n\n\nif __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    c = int(input())\n\n    print(find_third_side(a, b, c))",
      -13.4609375
    ],
    [
      "def third_side(a, b, c):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :type c: int\n    :rtype: int\n    \"\"\"\n\n    return a * b + c * c\n\n\ndef main():\n    \"\"\"\n    Do the same thing for the third side function.\n    \"\"\"\n    a = int(input(\"Enter the first side: \"))\n    b = int(input(\"Enter the second side: \"))\n    c = int(input(\"Enter the third side: \"))\n\n    print(f\"The third side is: {third_side(a, b, c)}\")\n\n\nif __name__ == '__main__':\n    main()",
      -13.9453125
    ],
    [
      "def third_side(a,b,c):\n    if (a+b+c) > 180:\n        print(\"The third side of the right angled triangle should be 180\")\n    elif a+b+c > 90:\n        print(\"The third side of the right angled triangle should be 90\")\n    else:\n        print(\"The third side of the right angled triangle should be \"+str(a+b+c))\n\nthird_side(10,20,30)",
      -14.0625
    ],
    [
      "def third_side(r):\n    a = r*3.141592653589793238462643383279502884197169399375105820974944592307816406286\n    b = r*3.141592653589793238462643383279502884197169399375105820974944592307816406286\n    c = r*3.141592653589793238462643383279502884197169399375105820974944592307816406286\n    return a, b, c\n\nr = float(input(\"Enter the radius of the triangle: \"))\na, b, c = third_side(r)\n\nprint(\"The third side of the triangle is \", a, b, c)",
      -14.640625
    ],
    [
      "def third_side(n):\n    a = 3.1415926535897932384626433832795028841971693993751058209749445923078157163095130880518442\n    b = n * (n - 1) / 2\n    c = a * (2 * n - 1)\n    return round(b + c, 3)\n\n\nprint(third_side(4))",
      -14.7578125
    ],
    [
      "def third_side(a, b, c):\n    if a == b and a == c:\n        return a\n    if a == b and b == c:\n        return b\n    if a == b and c == a:\n        return c\n    return None\n\nprint(third_side(1, 2, 3))\nprint(third_side(1, 2, 4))\nprint(third_side(2, 1, 4))\nprint(third_side(2, 2, 3))\nprint(third_side(2, 3, 1))",
      -14.9296875
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}