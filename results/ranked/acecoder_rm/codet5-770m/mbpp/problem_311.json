{
  "problem": {
    "task_id": "MBPP/322",
    "prompt": "Write a function to find all index positions of the minimum values in a given list.",
    "canonical_solution": "def position_min(list1):\r\n    min_val = min(list1)\r\n    min_result = [i for i, j in enumerate(list1) if j == min_val]\r\n    return min_result",
    "test_list": [
      "assert position_min([12,33,23,10,67,89,45,667,23,12,11,10,54])==[3,11]",
      "assert position_min([1,2,2,2,4,4,4,5,5,5,5])==[0]",
      "assert position_min([2,1,5,6,8,3,4,9,10,11,8,12])==[1]"
    ],
    "challenge_test_list": [],
    "problem_id": 311
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def min_index(arr):\n    return [i for i, x in enumerate(arr) if x == min(arr)]\n\n\ndef min_index2(arr):\n    return [i for i, x in enumerate(arr) if x == min(arr)]\n\n\ndef main():\n    arr = [4, 5, 5, 6, 7, 8, 9, 10, 11, 12]\n    print(min_index(arr))\n    print(min_index2(arr))\n\n\nif __name__ == \"__main__\":\n    main()",
      11.46875
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(arr)]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6]\n    print(find_min_index(arr))",
      4.890625
    ],
    [
      "def min_index(arr):\n    # Your code here\n    arr.sort()\n    return [i for i, x in enumerate(arr) if x == arr[0]]\n\n\nprint(min_index([1, 3, 5, 2, 4]))\nprint(min_index([1, 3, 5, 2, 4, 7]))",
      4.859375
    ],
    [
      "def find_min_pos(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min_pos[-1]]:\n            min_pos.append(i)\n    return min_pos\n\nprint(find_min_pos([1,2,3,4,5]))",
      4.14453125
    ],
    [
      "def find_min(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == \"__main__\":\n    print(find_min([1, 2, 3, 4, 5]))",
      3.2109375
    ],
    [
      "def find_min_pos(arr):\n    # Write your code here\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [0]\n    min_val = arr[0]\n    min_pos = [0]\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_pos = [i]\n        else:\n            pass\n    return min_pos\n\n\nprint(find_min_pos([1, 2, 3, 4, 5]))",
      2.828125
    ],
    [
      "def min_index(arr):\n    if arr == []:\n        return []\n    min_value = min(arr)\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] == min_value:\n            min_index.append(i)\n    return min_index\n\n\ndef min_index_2(arr):\n    if arr == []:\n        return []\n    min_value = min(arr)\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] == min_value:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    min_index(arr)\n    min_index_2(arr)",
      2.033203125
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    min_value = arr[0]\n    for i in range(len(arr)):\n        if arr[i] < min_value:\n            min_index = [i]\n            min_value = arr[i]\n        elif arr[i] == min_value:\n            min_index.append(i)\n    return min_index\n\n\narr = [1, 2, 3, 4, 5]\nprint(find_min_index(arr))",
      1.3994140625
    ],
    [
      "def min_position(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    min_index = []\n    min_value = arr[0]\n    for i in range(len(arr)):\n        if arr[i] < min_value:\n            min_value = arr[i]\n            min_index.append(i)\n    return min_index\n\n\nprint(min_position([5, -2, 0, 3, 2, 5, 4]))",
      1.2353515625
    ],
    [
      "def find_min(arr):\n    min_val = arr[0]\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = [i]\n        elif arr[i] == min_val:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == \"__main__\":\n    print(find_min([0, 1, 2, 3, 4, 5, 6, 7, 8]))",
      1.18359375
    ],
    [
      "def min_index(nums):\n    # Write your code here\n    min_index = []\n    for i in range(len(nums)):\n        if nums[i] < nums[min(i, len(nums) - 1)]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == '__main__':\n    print(min_index([5, 7, 8, 9]))",
      1.1728515625
    ],
    [
      "def find_min_index(arr):\n    # Your code here\n    arr.sort()\n    return [i for i, x in enumerate(arr) if x == min(arr)]\n\n\nprint(find_min_index([1, 3, 2, 5, 4]))\nprint(find_min_index([1, 2, 3, 4, 5]))",
      0.87841796875
    ],
    [
      "def min_position(arr):\n    result = []\n    for i in range(len(arr)):\n        if arr[i] == min(arr):\n            result.append(i)\n    return result\n\n\nif __name__ == \"__main__\":\n    print(min_position([1, 3, 5, 7, 9, 10]))",
      0.52685546875
    ],
    [
      "def find_min_index(arr):\n    if len(arr) == 0:\n        return []\n    else:\n        min_index = arr[0]\n        for i in range(1, len(arr)):\n            if arr[i] < min_index:\n                min_index = arr[i]\n        return [i for i, val in enumerate(arr) if val == min_index]\n\n\nif __name__ == \"__main__\":\n    print(find_min_index([3, 4, 5, 1, 2]))\n    print(find_min_index([]))",
      0.324462890625
    ],
    [
      "def min_positions(arr):\n    min_pos = []\n    min_pos.append(0)\n    for i in range(1, len(arr)):\n        if arr[i] < arr[min_pos[-1]]:\n            min_pos.append(i)\n    return min_pos\n\n\nif __name__ == '__main__':\n    print(min_positions([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
      0.09722900390625
    ],
    [
      "def min_pos(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[i-1]:\n            min_pos.append(i)\n    return min_pos\n\n\nif __name__ == '__main__':\n    print(min_pos([4, 6, 2, 6, 8, 9, 6, 4, 3]))",
      0.062225341796875
    ],
    [
      "def min_pos(arr):\n    if len(arr) == 0:\n        return []\n    return [i for i, x in enumerate(arr) if x == min(arr)]\n\n\ndef min_pos_recursive(arr, i):\n    if i == len(arr):\n        return [i]\n    if arr[i] < arr[i - 1]:\n        return [i] + min_pos_recursive(arr, i + 1)\n    return min_pos_recursive(arr, i + 1)\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5]\n    print(min_pos(arr))\n    print(min_pos_recursive(arr, 0))",
      -0.054107666015625
    ],
    [
      "def minimum_indices(arr, n):\n    # Write your code here\n    # Iterate over all the elements in the list.\n    # If the element is greater than the first element in the list,\n    # then the position of the minimum value is stored in the index.\n    # Else, the position of the minimum value is stored in the index\n    # of the element.\n    # Return the index of the minimum value.\n    return [i for i, x in enumerate(arr) if x < arr[0]]\n\n\nprint(minimum_indices([1, 2, 3, 4], 4))",
      -0.062255859375
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[i+1]:\n            min_index.append(i)\n    return min_index\n\n\narr = [1, 2, 3, 4, 5, 6]\nprint(find_min_index(arr))",
      -0.1773681640625
    ],
    [
      "def find_min_index(arr):\n    if len(arr) == 0:\n        return []\n    else:\n        min_index = 0\n        min_value = arr[0]\n        for i in range(len(arr)):\n            if arr[i] < min_value:\n                min_value = arr[i]\n                min_index = i\n        return [min_index]\n\n\nprint(find_min_index([1, 2, 3, 4, 5]))",
      -0.4873046875
    ],
    [
      "def find_min_value(array):\n    n = len(array)\n    min_value = array[0]\n    min_value_index = [0]\n\n    for i in range(1, n):\n        if array[i] < min_value:\n            min_value = array[i]\n            min_value_index = [i]\n\n        else:\n            min_value_index.append(i)\n\n    return min_value_index\n\nprint(find_min_value([1, 3, 2, -3, 4, 5]))",
      -0.544921875
    ],
    [
      "def find_min_index(lst):\n    index = 0\n    min_val = lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < min_val:\n            min_val = lst[i]\n            index = i\n    return index\n\nprint(find_min_index([2, 5, 6, 10, 3, 7, 8]))\nprint(find_min_index([]))",
      -0.65185546875
    ],
    [
      "def min_index(arr):\n    arr.sort()\n    res = []\n    for i in range(len(arr)):\n        if arr[i] == arr[0]:\n            res.append(i)\n    return res\n\n\narr = [1, 2, 3, 4, 5, 6, 7]\nprint(min_index(arr))",
      -0.7861328125
    ],
    [
      "def find_min(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_index.append(i)\n    return min_index\n\n\narr = [4, 2, 7, 1, 3]\nprint(find_min(arr))",
      -0.85693359375
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_index = [i]\n            break\n    return min_index\n\n\nprint(find_min_index([1, 2, 3, 4, 5]))",
      -0.85693359375
    ],
    [
      "def min_positions(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_pos.append(i)\n    return min_pos\n\n\narr = [2, 5, 6, 8, 9, 10, 4]\nprint(min_positions(arr))",
      -0.85693359375
    ],
    [
      "def find_min_positions(arr):\n    # write your code here\n    res = []\n    for i in range(len(arr)):\n        if arr[i] < arr[i-1]:\n            res.append(i)\n    return res",
      -0.85693359375
    ],
    [
      "def min_index(arr, n):\n    # Your code here\n    arr = sorted(arr)\n    index = []\n    for i in range(len(arr) - n + 1):\n        if arr[i] < arr[i + n]:\n            index.append(i)\n    return index",
      -0.85693359375
    ],
    [
      "def minimum_index(arr):\n    minimum_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[i-1]:\n            minimum_index.append(i)\n    return minimum_index",
      -0.85693359375
    ],
    [
      "def find_min_pos(arr):\n    # Your code here\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            min_pos.append(i)\n    return min_pos\n\n\narr = [3, 2, 4, 1]\n\nprint(find_min_pos(arr))",
      -0.85693359375
    ],
    [
      "def min_pos(arr):\n    for i in range(len(arr)):\n        if arr[i] < arr[i-1]:\n            return [i]",
      -0.85791015625
    ],
    [
      "def find_min_index(arr):\n    arr.sort()\n    return [arr.index(min(arr)) for min in arr]\n\n\nprint(find_min_index([2, 4, 7, 1, 3, 5, 6]))",
      -0.85791015625
    ],
    [
      "def find_min(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(arr)]:\n            min_pos.append(i)\n    return min_pos\n\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(find_min(arr))",
      -0.85791015625
    ],
    [
      "def minimum_index(arr):\n    n = len(arr)\n    minimum = arr[0]\n    minimum_index = []\n    for i in range(1, n):\n        if arr[i] < minimum:\n            minimum = arr[i]\n            minimum_index = [i]\n        else:\n            minimum_index.append(i)\n\n    return minimum_index\n\n\nprint(minimum_index([1, 3, 5, 6, 2]))",
      -0.85791015625
    ],
    [
      "def find_min_positions(arr):\n    arr.sort()\n    return [i for i, x in enumerate(arr) if x == min(arr)]\n\n\nif __name__ == \"__main__\":\n    assert find_min_positions([5, 3, 7, 4, 8, 9]) == [0, 1, 2]\n    assert find_min_positions([-1, -5, -6, -7, -8, -9]) == [2, 3, 4, 5]\n    assert find_min_positions([]) == []",
      -0.85791015625
    ],
    [
      "def find_min(arr, n):\n    result = []\n    for i in range(n):\n        if arr[i] < arr[0]:\n            result.append(i)\n        arr[0] = arr[i]\n    return result\n\n\nif __name__ == \"__main__\":\n    print(find_min([1, 2, 3, 4, 5], 5))",
      -0.85791015625
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_index = [i]\n\n    return min_index\n\n\narr = [1, 2, 3, 4, 5]\nprint(find_min_index(arr))",
      -0.85791015625
    ],
    [
      "def find_min(arr):\n  #Write your code here\n  if len(arr)==0:\n    return []\n  min_index = []\n  for i in range(len(arr)):\n    if arr[i]==min(arr):\n      min_index.append(i)\n  return min_index\n\nif __name__ == \"__main__\":\n  arr = [1,2,3,4,5,6,7,8,9]\n  print(find_min(arr))",
      -0.85791015625
    ],
    [
      "def find_min_positions(arr):\n    arr.sort()\n    res = []\n    for i in range(len(arr)):\n        if arr[i] == arr[0]:\n            res.append(i)\n    return res\n\nprint(find_min_positions([2, 3, 5, 10, 5, 5, 5, 5, 5, 5, 5, 5]))",
      -0.85791015625
    ],
    [
      "def min_in_list(l):\n    min_index = []\n    for i in range(len(l)):\n        if l[i] < l[min(i, len(l) - 1)]:\n            min_index.append(i)\n    return min_index\n\n\nl = [4, 4, 5, 5, 5, 6, 6]\nprint(min_in_list(l))",
      -0.8583984375
    ],
    [
      "def find_min(arr):\n    if arr is None or len(arr) == 0:\n        return []\n\n    min_val = arr[0]\n    min_index = 0\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = i\n\n    return [min_index]\n\n\nif __name__ == \"__main__\":\n    print(find_min([1, 2, 3, 4]))",
      -0.8583984375
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            min_index.append(i)\n        arr[i] = arr[i] + 1\n\n    return min_index\n\n\nif __name__ == \"__main__\":\n    arr = [1, 3, 2, 4, 5, 6, 7, 8, 9]\n    print(find_min_index(arr))",
      -0.8583984375
    ],
    [
      "def min_index(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if not arr:\n        return []\n\n    res = []\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            res.append(i)\n            arr[0], arr[i] = arr[i], arr[0]\n    return res\n\n\narr = [0, 1, 2, 3, 4, 5, 6]\nprint(min_index(arr))",
      -0.8583984375
    ],
    [
      "def min_index(arr, min_val):\n    \"\"\"\n    :type arr: List[int]\n    :type min_val: int\n    :rtype: List[int]\n    \"\"\"\n    arr = sorted(arr)\n    return [arr.index(min_val), arr.index(min_val, arr.index(min_val)+1)]\n\nif __name__ == '__main__':\n    arr = [1,2,3,4,5,6,7,8,9,10]\n    min_val = 8\n    print(min_index(arr, min_val))",
      -0.8583984375
    ],
    [
      "def min_positions(arr, n):\n    res = []\n    for i in range(n):\n        for j in range(len(arr)):\n            if arr[j] < arr[i]:\n                res.append(j)\n                break\n    return res\n\n\nif __name__ == \"__main__\":\n    arr = [3, 6, 4, 5, 8, 7, 9]\n    print(min_positions(arr, len(arr)))",
      -0.8583984375
    ],
    [
      "def min_indices(arr, n):\n    # Write your code here\n    arr.sort()\n    min_index = []\n    for i in range(n):\n        if arr[i] == arr[0]:\n            min_index.append(i)\n    return min_index\n\nprint(min_indices([1,2,3,4,5], 4))",
      -1.55078125
    ],
    [
      "def min_position(nums):\n    if len(nums) == 1:\n        return [0]\n    else:\n        min_index = []\n        for i in range(1, len(nums)):\n            if nums[i] < nums[i-1]:\n                min_index.append(i)\n\n        return min_index\n\n\nif __name__ == '__main__':\n    print(min_position([1, 2, 3, 4, 5, 6, 7]))\n    print(min_position([1, 2, 3, 4, 5, 6, 7]))",
      -1.5517578125
    ],
    [
      "def find_min_positions(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n\n    if len(arr) == 1:\n        return [0]\n\n    min_val = arr[0]\n    min_pos = [0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_pos = [i]\n\n        else:\n            min_pos.append(i)\n\n    return min_pos\n\n\nif __name__ == \"__main__\":\n    assert find_min_positions([1, 2, 3]) == [0, 1]\n    assert find_min_positions([3, 1, 2, 3, 4]) == [0, 2]\n    assert find_min_positions([2, 3, 2, 2]) == [0, 1]\n    assert find_min_positions([1, 1, 1, 1, 1]) == [0, 1, 2]\n    assert find_min_positions([1, 2, 3]) == []\n    assert find_min_positions([]) == []",
      -1.5947265625
    ],
    [
      "def min_index(arr):\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [0]\n    if arr[0] < arr[1]:\n        return [0]\n\n    result = []\n\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            result.append(i)\n\n    return result\n\nprint(min_index([1,2,3,4,5,6,7,8,9,10]))\nprint(min_index([3,2,3,2,2]))\nprint(min_index([3,2,2,3,2]))\nprint(min_index([2,2,2,2,2]))",
      -1.666015625
    ],
    [
      "def min_index(arr):\n    if len(arr) == 1:\n        return [0]\n    arr.sort()\n    minimum = arr[0]\n    minimum_index = [0]\n    for i in range(1, len(arr)):\n        if arr[i] < minimum:\n            minimum_index.append(i)\n            minimum = arr[i]\n    return minimum_index\n\n\nif __name__ == '__main__':\n    print(min_index([1, 3, 5, 7, 9, 2, 6]))",
      -1.830078125
    ],
    [
      "def min_position(arr):\n    minimum_index = 0\n    minimum_value = arr[0]\n    for index in range(1, len(arr)):\n        if arr[index] < minimum_value:\n            minimum_value = arr[index]\n            minimum_index = index\n    return minimum_index\n\n\narr = [1, 2, 4, 7, 9, 2, 3, 1]\nprint(min_position(arr))",
      -2.015625
    ],
    [
      "def find_min_index(arr):\n    arr.sort()\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] == arr[0]:\n            min_index.append(i)\n    return min_index\n\n\nprint(find_min_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(find_min_index([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
      -2.033203125
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(i, len(arr) - 1)]:\n            min_index.append(i)\n    return min_index\n\n\nprint(find_min_index([2, 1, 3, 6, 5]))\nprint(find_min_index([0, 2, 3, 4, 5, 6]))\nprint(find_min_index([3, 4, 5, 6, 7, 8, 9, 10]))",
      -2.44140625
    ],
    [
      "def find_min_index(arr, n):\n    result = []\n    for i in range(n):\n        if arr[i] < min(arr):\n            result.append(i)\n    return result\n\n\nif __name__ == \"__main__\":\n    print(find_min_index([1, 2, 3, 4, 5, 6, 7, 8], 10))",
      -2.890625
    ],
    [
      "def find_min_pos(nums):\n    result = []\n    for i, num in enumerate(nums):\n        if num < nums[0]:\n            result.append(i)\n    return result\n\n\nif __name__ == \"__main__\":\n    print(find_min_pos([3, 3, 3, 4, 4, 4, 5, 5, 5]))\n    print(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -2.92578125
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(i, len(arr) - 1)]:\n            min_index.append(i)\n\n    return min_index\n\n\nif __name__ == \"__main__\":\n    arr = [0, 1, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(find_min_index(arr))",
      -2.96875
    ],
    [
      "def min_pos(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(i, len(arr) - 1)]:\n            min_pos.append(i)\n    return min_pos\n\n\nif __name__ == '__main__':\n    arr = [1, 3, 2, 4, 5, 6]\n    print(min_pos(arr))",
      -3.142578125
    ],
    [
      "import unittest\n\n\ndef find_min_indices(arr):\n    indices = []\n    for i in range(len(arr)):\n        if arr[i] < arr[i - 1]:\n            indices.append(i)\n    return indices\n\n\nclass Test(unittest.TestCase):\n\n    def test_find_min_indices(self):\n        self.assertEqual(find_min_indices([3, 2, 4, 5, 6, 7, 0]), [0, 3, 5])\n\n\nif __name__ == '__main__':\n    unittest.main()",
      -3.18359375
    ],
    [
      "def min_pos(nums):\n    if len(nums) == 1:\n        return [0]\n    min_pos = []\n    for i in range(len(nums)):\n        if nums[i] < nums[0]:\n            min_pos.append(i)\n    return min_pos\n\n\nprint(min_pos([3, 5, 7, 2, 4]))\nprint(min_pos([3, 5, 7, 2, 4, 1]))\nprint(min_pos([3, 5, 7, 2, 4, 1, 2]))\nprint(min_pos([3, 5, 7, 2, 4, 1, 2, 3]))",
      -3.47265625
    ],
    [
      "def find_min_pos(nums):\n    # Write your code here\n    min_pos = []\n    for i, value in enumerate(nums):\n        if value < min(nums):\n            min_pos.append(i)\n    return min_pos\n\nprint(find_min_pos([1,2,3,4,5,6]))\nprint(find_min_pos([1,2,3,4,5]))\nprint(find_min_pos([2,3,4,5]))\nprint(find_min_pos([1,2,3,4,5,6,7]))",
      -3.740234375
    ],
    [
      "def find_min(arr):\n    if not arr:\n        return []\n\n    min_val = arr[0]\n    min_index = []\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = [i]\n        else:\n            min_index.append(i)\n\n    return min_index\n\n\narr = [1, 2, 3, 4, 5, 6, 7]\nprint(find_min(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(find_min(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\nprint(find_min(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,",
      -3.833984375
    ],
    [
      "def find_min_pos(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_pos.append(i)\n    return min_pos\n\n\nprint(find_min_pos([1,2,3,4,5,6,7,8,9,10]))\nprint(find_min_pos([4,2,5,6,8,10,12]))\nprint(find_min_pos([2,1,1,1,1,1,1,1,1]))",
      -3.8515625
    ],
    [
      "def find_min_pos(nums):\n    # Your code here\n    pos = [0] * len(nums)\n    for i in range(len(nums)):\n        if nums[i] < nums[i - 1]:\n            pos[i] = i\n\n    return pos\n\n\nif __name__ == \"__main__\":\n    print(find_min_pos([3, 1, 2, 4, 5, 6, 7, 8, 9, 10]))",
      -3.853515625
    ],
    [
      "def find_min_position(nums):\n    # write your code here\n    min_position = []\n    for i in range(len(nums)):\n        if nums[i] == min(nums[0:i]):\n            min_position.append(i)\n    return min_position\n\n\ndef main():\n    print(find_min_position([1, 2, 3, 4, 5]))\n    print(find_min_position([1, 2, 3, 4]))\n    print(find_min_position([]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -4.0390625
    ],
    [
      "def find_min(arr):\n    arr.sort()\n    result = []\n    for i in range(len(arr)):\n        if arr[i] == arr[i-1]:\n            result.append(i)\n    return result\n\nprint(find_min([1,2,3,4,5]))\nprint(find_min([1,2,3,5,6,7,8]))\nprint(find_min([1,2,3,6,7,8]))",
      -4.13671875
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i, value in enumerate(arr):\n        if value < min(arr[i + 1:], default=value):\n            min_index.append(i)\n    return min_index\n\n\nprint(find_min_index([1, 4, 2, 5, 3, 6]))\nprint(find_min_index([1, 4, 2, 5, 3, 6, 7, 8, 9]))",
      -4.19921875
    ],
    [
      "def minimum_positions(arr):\n    minimum_position = []\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            minimum_position.append(i)\n            minimum_position.append(i+1)\n    return minimum_position\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(minimum_positions(arr))",
      -4.2421875
    ],
    [
      "def find_min_positions(arr):\n    # Write your code here\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] == arr[0]:\n            min_pos.append(i)\n    return min_pos\n\n\ndef find_min_positions_1(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            min_pos.append(i)\n    return min_pos\n\n\nif __name__ == \"__main__\":\n    print(find_min_positions([1, 2, 3, 4, 5, 6]))\n    print(find_min_positions([1, 2, 3, 4, 5, 6, 7]))\n    print(find_min_positions([1, 2, 3, 4, 5, 6, 7, 8, 9]))\n    print(find_min_positions([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -4.50390625
    ],
    [
      "def find_min_index(arr):\n    # Write your code here\n    min_val = arr[0]\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = [i]\n        else:\n            min_index.append(i)\n    return min_index\n\n\narr = [4, 5, 6, 7, 8, 9, 1, 2]\nprint(find_min_index(arr))",
      -4.859375
    ],
    [
      "def min_pos(arr):\n    min_val = arr[0]\n    min_index = 0\n    for i in range(len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = i\n    return min_index\n\n\nif __name__ == \"__main__\":\n    arr = [2, 3, 5, 6, 8, 2, 7, 6, 4, 9, 7, 9, 2]\n    print(min_pos(arr))",
      -5.01171875
    ],
    [
      "def find_min_index(arr):\n    if len(arr) == 0:\n        return []\n\n    min_index = []\n    min_val = arr[0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = [i]\n\n        else:\n            min_index.append(i)\n\n    return min_index\n\n\nprint(find_min_index([1, 2, 3, 4, 5, 6, 7]))\nprint(find_min_index([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]))\nprint(find_min_index([3, 5, 6, 8, 9]))\nprint(find_min_index([4, 5, 6, 7, 8]))",
      -5.421875
    ],
    [
      "def find_min_index(nums):\n    # write your code here\n    min_index = []\n    for i in range(len(nums)):\n        if nums[i] < nums[min(i, len(nums) - 1)]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == \"__main__\":\n    print(find_min_index([1, 2, 3, 4, 5]))",
      -5.4296875
    ],
    [
      "def find_min_pos(arr):\n    index = 0\n    min_val = arr[0]\n    min_pos = []\n    for i in range(1, len(arr)):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_pos = [i]\n        else:\n            index += 1\n            min_pos.append(i)\n    return min_pos\n\n\narr = [1, 2, 3, 4, 5]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\nprint(find_min_pos(arr))\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17",
      -5.65625
    ],
    [
      "def find_min_index(arr, k):\n    return [i for i, x in enumerate(arr) if x == min(arr[0:k])]\n\narr = [1, 4, 5, 6, 7, 8, 9, 10]\nk = 3\nprint(find_min_index(arr, k))\n\narr = [1, 4, 5, 6, 7, 8, 9, 10]\nk = 2\nprint(find_min_index(arr, k))\n\narr = [1, 4, 5, 6, 7, 8, 9, 10]\nk = 3\nprint(find_min_index(arr, k))\n\narr = [1, 4, 5, 6, 7, 8, 9, 10]\nk = 7\nprint(find_min_index(arr, k))",
      -5.6796875
    ],
    [
      "def min_index(arr):\n    if len(arr) == 0:\n        return []\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[0]:\n            min_index.append(i)\n        arr[0] = arr[i]\n    return min_index\n\n\nif __name__ == \"__main__\":\n    print(min_index([1, 3, 2, 4]))",
      -5.93359375
    ],
    [
      "def min_value_positions(arr):\n    # Write your code here\n    min_value_dict = {}\n    for i in range(len(arr)):\n        if arr[i] not in min_value_dict:\n            min_value_dict[arr[i]] = [i]\n        else:\n            min_value_dict[arr[i]].append(i)\n\n    # print(min_value_dict)\n    result = []\n    for value in min_value_dict.values():\n        result += value\n    return result\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]\n    print(min_value_positions(arr))",
      -5.953125
    ],
    [
      "import time\n\n\ndef find_min_in_array(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_pos.append(i)\n    return min_pos\n\n\ndef main():\n    arr = [4, 5, 6, 7, 8, 9]\n    min_pos = find_min_in_array(arr)\n    print(min_pos)\n\n\nif __name__ == \"__main__\":\n    start = time.time()\n    main()\n    elapsed = time.time() - start\n    print(f\"Execution time: {elapsed:.7f} seconds\")",
      -6.09765625
    ],
    [
      "def find_min_index(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[i-1]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(find_min_index(arr))",
      -6.125
    ],
    [
      "def min_position(arr):\n    min_pos = []\n    for i, num in enumerate(arr):\n        if num < min(arr):\n            min_pos.append(i)\n    return min_pos\n\n\nif __name__ == \"__main__\":\n    assert min_position([1, 3, 4, 5, 6, 7]) == [0, 1, 2]\n    assert min_position([1, 3, 4, 5, 6, 7, 8]) == [0, 1, 2, 3, 4, 5, 6, 7, 8]",
      -6.3046875
    ],
    [
      "def find_min_pos(nums):\n    # Write your code here\n    min_pos = []\n    for i in range(len(nums)):\n        if nums[i] < nums[0]:\n            min_pos.append(i)\n    return min_pos\n\n\nprint(find_min_pos([3, 3, 3, 4, 4, 4, 3, 2]))",
      -6.39453125
    ],
    [
      "def find_min_index(arr):\n    # Write your code here\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(arr)]:\n            min_index.append(i)\n    return min_index\n\nprint(find_min_index([2, 3, 4, 5, 6, 7]))\nprint(find_min_index([1, 2, 3, 4, 5, 6, 7]))\nprint(find_min_index([3, 2, 1]))",
      -6.76953125
    ],
    [
      "def find_min(arr):\n    n = len(arr)\n    if n == 0:\n        return -1\n\n    min_val = arr[0]\n    min_index = -1\n    for i in range(1, n):\n        if arr[i] < min_val:\n            min_val = arr[i]\n            min_index = i\n\n    return min_index\n\n\nif __name__ == \"__main__\":\n    assert find_min([-1, -1, 0, 3, 2, 1, -5, -2]) == [0, 1, 2]\n    assert find_min([-1, -1, 0, 3, 2, 1, -5, -2]) == [0, 1, 2]\n    assert find_min([-1, -1, 0, 3, 2, 1, -5, -2, 4, 5, 6, 7]) == [0, 1, 2, 3, 4]\n    assert find_min([-1, -1, 0, 3, 2, 1, -5, -2]) == [0, 1, 2]",
      -6.8125
    ],
    [
      "def find_min_index(lst):\n    result = []\n\n    for i in range(len(lst)):\n        if lst[i] < lst[i + 1]:\n            result.append(i)\n\n    return result\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    result = find_min_index(lst)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()",
      -7.484375
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(arr)]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == '__main__':\n    print(find_min_index([5, -1, 4, -3, 2, -1]))\n    print(find_min_index([5, -1, 4, -3, 2, -1]))",
      -7.89453125
    ],
    [
      "def find_min(arr):\n    arr_len = len(arr)\n    min_pos = []\n    for i in range(arr_len):\n        if arr[i] < arr[min(arr)] :\n            min_pos.append(i)\n\n    return min_pos\n\n\nif __name__ == \"__main__\":\n    print(find_min([4, 2, 5, 1, 3]))\n    print(find_min([-1, 0, 3, -2, -3]))\n    print(find_min([-2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16]))",
      -8.078125
    ],
    [
      "def min_positions(arr):\n    if len(arr) == 1:\n        return [0]\n\n    min_index = len(arr) - 1\n    min_value = arr[0]\n\n    for i in range(1, len(arr)):\n        if arr[i] < min_value:\n            min_index = i\n            min_value = arr[i]\n\n    return [min_index]\n\n\nif __name__ == \"__main__\":\n    assert min_positions([0, 1, 2, 3]) == [0, 1, 2]\n    assert min_positions([2, 3, 1, 2, 4, 5]) == [0, 1, 3]\n    assert min_positions([1, 2, 3, 4, 5, 6]) == [0, 1, 3, 5]\n    assert min_positions([1, 2, 3, 4, 5, 6, 7]) == [0, 1, 3, 5, 7]",
      -8.2578125
    ],
    [
      "def min_position(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if arr == []:\n        return []\n\n    if len(arr) == 1:\n        return [0]\n\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(i, len(arr) - 1)]:\n            min_pos.append(i)\n\n    return min_pos\n\n\nif __name__ == \"__main__\":\n    print(min_position([5, 3, 2, 4, 1]))\n    print(min_position([7, 5, 3, 4, 1]))",
      -8.421875
    ],
    [
      "def find_min_pos(arr, k):\n    # write your code here\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < k:\n            min_pos.append(i)\n    return min_pos\n\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 6))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 7))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 8))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 1))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 5))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 6))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 7))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 8))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 9))\nprint(find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9], 10))",
      -8.78125
    ],
    [
      "def find_min(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(i, len(arr) - 1)]:\n            min_index.append(i)\n\n    return min_index\n\n\ndef find_min_2(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr[0:i]):\n            min_index.append(i)\n\n    return min_index\n\n\nif __name__ == '__main__':\n    print(find_min([1, 2, 3, 4, 5, 6, 7]))\n    print(find_min_2([1, 2, 3, 4, 5, 6, 7]))",
      -8.8046875
    ],
    [
      "def find_min_index(nums):\n    min_index = []\n    for i in range(len(nums)):\n        if nums[i] < nums[0]:\n            min_index.append(i)\n    return min_index\n\n\nif __name__ == \"__main__\":\n    assert find_min_index([1, 2, 3, 4, 5]) == [0, 1, 3]\n    assert find_min_index([1, 2, 3, 4]) == [0, 1, 2]\n    assert find_min_index([1, 2, 3, 4, 5, 6, 7, 8]) == [0, 1, 2, 3]",
      -8.9296875
    ],
    [
      "def min_pos(arr):\n    if len(arr) == 1:\n        return [0]\n    elif len(arr) == 2:\n        return [0, 1]\n    else:\n        res = []\n        min_val = arr[0]\n        min_pos = []\n        for i in range(1, len(arr)):\n            if arr[i] < min_val:\n                min_val = arr[i]\n                min_pos = [i]\n            else:\n                min_pos.append(i)\n        res.append(min_pos)\n        return res\n\n\narr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(min_pos(arr))",
      -9.1640625
    ],
    [
      "def find_min(arr):\n    # create a list of values\n    values = list(range(len(arr)))\n\n    # set the minimum value\n    min_value = arr[0]\n\n    # set the minimum value to zero\n    min_index = 0\n\n    # loop through the list\n    for i in range(1, len(arr)):\n        if arr[i] < min_value:\n            # set the minimum value to the current value\n            min_value = arr[i]\n            # set the minimum index to the index of the minimum value\n            min_index = i\n\n    return values, min_index\n\n\n# Driver Code\nvalues, min_index = find_min([1, 2, 3, 4, 5])\nprint(values, min_index)",
      -9.3046875
    ],
    [
      "def find_min_pos(nums):\n    min_pos = []\n    for i in range(len(nums)):\n        if nums[i] < nums[0]:\n            min_pos.append(i)\n        nums[0] = nums[i]\n    return min_pos\n\n\ndef test_find_min_pos():\n    assert find_min_pos([2, 3, 5, 7, 8, 11]) == [0, 2, 4, 6]\n    assert find_min_pos([4, 5, 6, 7, 8, 9]) == [0, 3, 6, 8]\n    assert find_min_pos([]) == []\n    assert find_min_pos([0]) == [0]\n    assert find_min_pos([3, 5, 7, 8, 9]) == [0, 1, 2]",
      -9.671875
    ],
    [
      "def find_min_index(arr):\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < min(arr):\n            min_index.append(i)\n    return min_index\n\nprint(find_min_index([2,3,6,1,4,7]))\nprint(find_min_index([1,2,3,4,5]))\nprint(find_min_index([]))\nprint(find_min_index([-2,-3,-4]))\nprint(find_min_index([-2,-3,-4,5,6,7]))\nprint(find_min_index([1,2,3,4,5,6,7,8,9,10]))\n\n\"\"\"\nOutput:\n[1, 4]\n[2, 5]\n[3, 7]\n\"\"\"",
      -9.78125
    ],
    [
      "def find_min(arr):\n    if len(arr) == 0:\n        return []\n    else:\n        min_idx = []\n        for i in range(len(arr)):\n            if arr[i] < arr[0]:\n                min_idx.append(i)\n            else:\n                arr.pop(0)\n        return min_idx\n\n\ndef main():\n    print(find_min([4, 5, 6, 7]))\n    print(find_min([4, 5, 6, 7, 8]))\n    print(find_min([4, 5, 6, 7, 8, 9]))\n\n\nif __name__ == \"__main__\":\n    main()",
      -10.609375
    ],
    [
      "def find_min_index(nums):\n    \"\"\"\n    :type nums: List[int]\n    :rtype: List[int]\n    \"\"\"\n    min_index = []\n\n    for i in range(len(nums)):\n        if nums[i] < nums[0]:\n            min_index.append(i)\n\n    return min_index\n\n\nif __name__ == \"__main__\":\n    assert find_min_index([1, 2, 3, 4, 5, 6, 7, 8]) == [0, 1, 2, 3, 4, 5, 6, 7, 8]",
      -11.7109375
    ],
    [
      "def min_index(arr):\n    if len(arr) == 0:\n        return []\n\n    min_index = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(arr)] and i!= min(arr):\n            min_index.append(i)\n\n    return min_index\n\n\nif __name__ == \"__main__\":\n    print(min_index([2, 1, 5, 3, 4]))\n    print(min_index([2, 1, 5, 3, 4, 8]))",
      -13.0703125
    ],
    [
      "def find_min_pos(arr):\n    min_pos = []\n    for i in range(len(arr)):\n        if arr[i] < arr[min(i, len(arr) - 1)]:\n            min_pos.append(i)\n    return min_pos\n\n\nif __name__ == \"__main__\":\n    assert find_min_pos([1, 2, 3, 4, 5]) == [0, 1, 2, 3]\n    assert find_min_pos([1, 2, 3, 4, 5, 6, 7]) == [0, 1, 2, 3, 4, 5, 6, 7]\n    assert find_min_pos([1, 2, 3, 4, 5, 6, 7, 8, 9]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",
      -13.4765625
    ],
    [
      "def find_min(list_):\n    \"\"\"\n    :type list_: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if len(list_) == 0:\n        return []\n    if len(list_) == 1:\n        return [0]\n    result = []\n    for i in range(len(list_)):\n        if list_[i] < list_[i - 1]:\n            result.append(i)\n    return result\n\n\nif __name__ == \"__main__\":\n    assert find_min([1, 2, 3, 4, 5, 6]) == [0, 2, 4]\n    assert find_min([1, 2, 3, 4, 5]) == [0, 3, 6]\n    assert find_min([]) == []",
      -14.28125
    ],
    [
      "def find_min(arr):\n    if len(arr) == 0:\n        return []\n    else:\n        return [i for i, x in enumerate(arr) if x < arr[i]]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5]\n    print(find_min(arr))\n    arr = [3, 4, 5, 6, 7, 8, 9]\n    print(find_min(arr))\n    arr = [1, 2, 3, 4, 5]\n    print(find_min(arr))\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(find_min(arr))",
      -14.578125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}