{
  "problem": {
    "task_id": "MBPP/212",
    "prompt": "Write a python function to find the sum of fourth power of n natural numbers.",
    "canonical_solution": "import math  \r\ndef fourth_Power_Sum(n): \r\n    sum = 0\r\n    for i in range(1,n+1) : \r\n        sum = sum + (i*i*i*i) \r\n    return sum",
    "test_list": [
      "assert fourth_Power_Sum(2) == 17",
      "assert fourth_Power_Sum(4) == 354",
      "assert fourth_Power_Sum(6) == 2275"
    ],
    "challenge_test_list": [],
    "problem_id": 201
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def sum_fourth_power(n):\n    sum_ = 0\n    for i in range(1, n + 1):\n        sum_ += i ** 4\n    return sum_\n\nn = int(input(\"Enter a number: \"))\nprint(f\"The sum of fourth power of {n} is {sum_fourth_power(n)}\")",
      14.125
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i ** 4\n    return sum\n\n\ndef main():\n    print(fourth_power(5))\n\n\nif __name__ == \"__main__\":\n    main()",
      14.0234375
    ],
    [
      "def fourthPower(n):\n    return sum(map(lambda x: x**4, range(1,n+1)))\n\nn = int(input())\nprint(fourthPower(n))",
      12.734375
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 4\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(fourth_power(5))",
      12.390625
    ],
    [
      "def power(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**4\n    return sum\n\nn = int(input(\"Enter a number: \"))\nprint(\"Sum of fourth power of {} is {}\".format(n, power(n)))",
      11.1015625
    ],
    [
      "def fourth_power(n):\n    power_sum = 0\n    for i in range(1, n + 1):\n        power_sum += i ** 4\n    return power_sum\n\nprint(fourth_power(4))",
      10.953125
    ],
    [
      "n = int(input(\"Enter a number: \"))\nsum = 0\n\nfor i in range(1, n + 1):\n    sum = sum + (i ** 4)\n\nprint(\"Sum of fourth power of\", n, \"is\", sum)",
      8.53125
    ],
    [
      "def sum_power(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i**3\n    return sum\n\n\n\n\nn = int(input(\"Enter the number: \"))\nprint(sum_power(n))",
      8.3359375
    ],
    [
      "def fourthpower(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i**4\n    return sum\n\nprint(fourthpower(2))\nprint(fourthpower(3))\nprint(fourthpower(4))\nprint(fourthpower(5))\nprint(fourthpower(6))",
      7.9296875
    ],
    [
      "def fourthpower(n):\n    return sum(i ** 4 for i in range(1, n + 1))\n\n\nprint(fourthpower(6))",
      5.85546875
    ],
    [
      "def power_sum(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i ** 4\n    return sum\n\nprint(power_sum(5))",
      5.515625
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i ** 4\n    return sum\n\nprint(fourth_power(5))",
      5.0234375
    ],
    [
      "def sum_fourth_power(n):\n    return sum(i ** 4 for i in range(1, n + 1))\n\n\nprint(sum_fourth_power(100))",
      4.828125
    ],
    [
      "def fourthPower(n):\n    return sum(x**4 for x in range(1, n+1))\n\n\nprint(fourthPower(1))\nprint(fourthPower(2))\nprint(fourthPower(3))\nprint(fourthPower(4))",
      3.98046875
    ],
    [
      "def fourth_power(n):\n    # Your code here\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 4\n    return sum\n\nprint(fourth_power(5))",
      3.86328125
    ],
    [
      "def fourth_power(n):\n    sum_of_fourth_power = 0\n    for i in range(n):\n        sum_of_fourth_power += i**4\n    return sum_of_fourth_power\n\nprint(fourth_power(4))",
      3.75390625
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**4\n    return sum\n\nprint(fourth_power(100))",
      3.388671875
    ],
    [
      "def fourth_power(n):\n    return sum([i**4 for i in range(1, n+1)])\n\nprint(fourth_power(4))",
      2.880859375
    ],
    [
      "def fourth_power(n):\n    return sum(i ** 4 for i in range(1, n + 1))\n\nprint(fourth_power(5))",
      2.849609375
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i**4\n    return sum\n\nprint(fourth_power(5))",
      2.478515625
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i ** 4\n    return sum\n\nprint(fourth_power(10))",
      2.396484375
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 4\n    return sum\n\nn = int(input(\"enter the number: \"))\nprint(\"sum of fourth power of {} is {}\".format(n, fourth_power(n)))",
      2.3359375
    ],
    [
      "def fourth_power(n):\n    return sum([i**4 for i in range(1,n+1)])\n\nprint(fourth_power(4))",
      2.326171875
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 4\n    return sum\n\n\nprint(fourth_power(10))",
      2.326171875
    ],
    [
      "def fourthPower(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += (i ** 4)\n    return sum\n\nprint(fourthPower(6))",
      2.173828125
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(n+1):\n        sum += i**4\n    return sum\n\nprint(fourth_power(2))",
      2.166015625
    ],
    [
      "def fourth_power(n):\n    return sum(pow(i, 4) for i in range(1, n + 1))\n\n\ndef main():\n    n = int(input(\"Enter n: \"))\n    print(fourth_power(n))\n\n\nif __name__ == \"__main__\":\n    main()",
      1.6982421875
    ],
    [
      "def fourth_power(n):\n    return (n**4)\n\n\nprint(fourth_power(10))",
      1.578125
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 4\n    return sum\n\n\nprint(fourth_power(5))",
      1.5693359375
    ],
    [
      "def fourth_power(n):\n\tsum = 0\n\tfor i in range(1,n+1):\n\t\tsum += 4**i\n\treturn sum\n\nprint(fourth_power(5))",
      1.51953125
    ],
    [
      "def fourthPower(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum = sum + (4**i)\n    return sum\n\nprint(fourthPower(5))",
      1.396484375
    ],
    [
      "def power_sum(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += (i ** 4)\n    return sum\n\n\nprint(power_sum(4))",
      1.376953125
    ],
    [
      "def sum_power(n):\n    sum = 0\n    while n > 0:\n        sum += n ** 4\n        n -= 1\n    return sum\n\n\nprint(sum_power(10))\nprint(sum_power(100))\nprint(sum_power(1000))\nprint(sum_power(10000))",
      1.0498046875
    ],
    [
      "def fourth_power(n):\n    return (n**4)\n\nprint(fourth_power(2))",
      0.9072265625
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(n):\n        sum += i**4\n    return sum\n\n\nprint(fourth_power(10))",
      0.82666015625
    ],
    [
      "def fourth_power(n):\n    sum_n = 0\n    for i in range(1, n + 1):\n        sum_n += i ** 4\n    return sum_n\n\nprint(fourth_power(4))",
      0.7998046875
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += 4**i\n    return sum\n\n\nprint(fourth_power(4))",
      0.7783203125
    ],
    [
      "def fourth_power(n):\n    total = 0\n    for i in range(1, n+1):\n        total += i**4\n    return total\n\ndef main():\n    print(fourth_power(4))\n\nif __name__ == \"__main__\":\n    main()",
      0.63671875
    ],
    [
      "def fourth_power(n):\n    power_sum = 0\n    for i in range(n):\n        power_sum += i ** 4\n    return power_sum\n\n\nprint(fourth_power(4))",
      0.425537109375
    ],
    [
      "def fourth_power(num):\n    sum = 0\n    for i in range(1, num+1):\n        sum += i**4\n    return sum\n\nprint(fourth_power(4))",
      0.325439453125
    ],
    [
      "def fourth_power(n):\n    return sum(list(map(lambda x: x**4, range(1, n+1))))\n\nprint(fourth_power(5))",
      0.26806640625
    ],
    [
      "def fourthPower(n):\n    return (n ** 4)\n\n\nprint(fourthPower(5))",
      0.216064453125
    ],
    [
      "def fourth_power(n):\n    return sum(range(1, n+1)) ** 4\n\nprint(fourth_power(5))",
      0.177001953125
    ],
    [
      "def fourthPower(n):\n    sum = 0\n    for i in range(n):\n        sum += i ** 4\n    return sum\n\n\nprint(fourthPower(5))",
      0.139404296875
    ],
    [
      "def sum_of_fourth_power(n):\n    return n*n*n*n*n\n\nprint(sum_of_fourth_power(4))",
      0.1300048828125
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += (i**4)\n    return sum\n\nprint(fourth_power(5))",
      0.1298828125
    ],
    [
      "def fourthPower(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**4\n    return sum\n\nprint(fourthPower(4))",
      -0.1353759765625
    ],
    [
      "def power_sum(n):\n\tsum = 0\n\tfor i in range(1,n+1):\n\t\tsum = sum + i ** 4\n\treturn sum\n\nprint(power_sum(10))",
      -0.179443359375
    ],
    [
      "def fourth_power(n):\n    sum_of_powers = 0\n    for i in range(n):\n        sum_of_powers += 4**i\n    return sum_of_powers\n\nprint(fourth_power(3))",
      -0.1910400390625
    ],
    [
      "n = int(input(\"Enter a number: \"))\n\nsum = 0\n\nfor i in range(1, n+1):\n    sum += (4**i)\n\nprint(sum)",
      -0.2135009765625
    ],
    [
      "n = int(input(\"Enter a number: \"))\n\nsum_of_power = 0\n\nfor i in range(1, n+1):\n    sum_of_power += (4**i)\n\nprint(sum_of_power)",
      -0.2314453125
    ],
    [
      "def power_sum(n):\n    return (4**n)\n\n\nif __name__ == \"__main__\":\n    print(power_sum(3))",
      -0.30126953125
    ],
    [
      "def sum_power(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i ** 4\n    return sum\n\nn = int(input(\"Enter a number to find its power of fourth power:\"))\nprint(sum_power(n))",
      -0.354736328125
    ],
    [
      "def fourth_power(n):\n    return 4 ** n\n\n\nprint(fourth_power(3))",
      -0.65380859375
    ],
    [
      "def fourth_power(n):\n\tsum_fourth_power = 0\n\tfor i in range(n):\n\t\tsum_fourth_power += (4**i)\n\treturn sum_fourth_power",
      -0.6640625
    ],
    [
      "def fourthpower(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i ** 4\n    return sum\n\nprint(fourthpower(4))",
      -0.72021484375
    ],
    [
      "n = int(input(\"Enter the number: \"))\n\nsum = 0\n\nfor i in range(1,n+1):\n    sum += i**4\n\nprint(sum)",
      -0.72412109375
    ],
    [
      "def fourthpower(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return 4*n**3\n\nprint(fourthpower(5))",
      -0.83544921875
    ],
    [
      "def fourthPower(n):\n    return sum(pow(i, 4) for i in range(1, n+1))\n\nprint(fourthPower(3))",
      -0.8583984375
    ],
    [
      "def fourth_power(n):\n    return sum(i**4 for i in range(1,n+1))\n\nprint(fourth_power(4))",
      -0.8583984375
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(n):\n        sum += 4**i\n    return sum\n\nprint(fourth_power(5))",
      -0.8583984375
    ],
    [
      "def fourthPower(num):\n    return num ** 4\n\n\nprint(fourthPower(5))",
      -0.888671875
    ],
    [
      "def fourth_power(n):\n    return sum(1 for i in range(1, n + 1))\n\nprint(fourth_power(5))",
      -1.236328125
    ],
    [
      "def fourthpower(n):\n    sum = 0\n    for i in range(n):\n        sum = sum + 4**i\n    return sum\n\n\n\n\nprint(fourthpower(4))",
      -1.6318359375
    ],
    [
      "def fourth_power(n):\n    return n * n * n * n * n * n\n\n\nprint(fourth_power(10))",
      -1.7470703125
    ],
    [
      "def power(n):\n    sum=0\n    for i in range(n):\n        sum+=4**i\n    return sum\n\nn=int(input(\"Enter number of natural numbers:\"))\nprint(\"sum of fourth power of\",n,\"is\",power(n))",
      -1.978515625
    ],
    [
      "def fourthpower(n):\n\tsum = 0\n\tfor i in range(1,n+1):\n\t\tsum += i**4\n\treturn sum\n\nprint(fourthpower(4))",
      -2.236328125
    ],
    [
      "def fourth_power(n):\n    return sum(map(lambda x: x**4, range(1,n+1)))\n\nprint(fourth_power(5))",
      -2.392578125
    ],
    [
      "def fourthPower(n):\n    return n ** 4\n\n\nprint(fourthPower(4))",
      -2.39453125
    ],
    [
      "def fourthPower(num):\n    return (num ** 4)\n\n\nnum = int(input(\"Enter the number: \"))\nprint(fourthPower(num))",
      -2.435546875
    ],
    [
      "def fourthPower(n):\n    return sum(i**4 for i in range(1, n+1))\n\nprint(fourthPower(5))",
      -2.58984375
    ],
    [
      "def fourth_power(n):\n    return sum([i**4 for i in range(1,n+1)])\n\nprint(fourth_power(5))",
      -2.58984375
    ],
    [
      "def fourthPower(n):\n\treturn (n**3)\n\nn = int(input(\"Enter a number: \"))\nprint(fourthPower(n))",
      -3.46484375
    ],
    [
      "def fourth_power(n):\n    return n ** 4\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    print(fourth_power(num))\n\n\nif __name__ == \"__main__\":\n    main()",
      -3.501953125
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(n):\n        sum += 4 ** i\n    return sum\n\nprint(fourth_power(10))",
      -3.76953125
    ],
    [
      "def fourth_power(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return n * n * n * n\n\n\nprint(fourth_power(3))\nprint(fourth_power(4))\nprint(fourth_power(5))",
      -3.919921875
    ],
    [
      "def fourthPower(n):\n    if n == 0:\n        return 0\n    return n * fourthPower(n - 1)\n\n\nprint(fourthPower(4))",
      -4.16015625
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += (4**i)\n    return sum\n\nprint(fourth_power(10))",
      -4.1953125
    ],
    [
      "n = int(input(\"Enter a number: \"))\n\nsum = 0\n\nfor i in range(1, n+1):\n    sum += 4**i\n\nprint(\"The sum of fourth power of n natural numbers is : \", sum)",
      -5.625
    ],
    [
      "def power_of_n(n):\n    return n**4\n\n\ndef main():\n    print(power_of_n(8))\n\n\nif __name__ == \"__main__\":\n    main()",
      -6.1171875
    ],
    [
      "n = int(input(\"Enter the number:\"))\n\nsum = 0\n\nwhile n > 0:\n    sum = sum + (n * (n * n * n * n))\n    n = n - 1\n\nprint(sum)",
      -6.47265625
    ],
    [
      "def sum_of_power(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum = sum + (4*i**3)\n    return sum\n\nprint(sum_of_power(1))",
      -7.40625
    ],
    [
      "def fourth_power(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 4\n    else:\n        return n ** 4\n\n\n\ndef main():\n    print(\"The sum of fourth power of n natural numbers is: \")\n    n = int(input(\"Enter the number to be divided: \"))\n    result = fourth_power(n)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()",
      -7.953125
    ],
    [
      "def fourth_power(n):\n    if n == 0:\n        return 0\n    else:\n        return n**4\n\ndef main():\n    print(fourth_power(10))\n\nif __name__ == \"__main__\":\n    main()",
      -7.9609375
    ],
    [
      "def fourth_power(n):\n    sum = 0\n    for i in range(n):\n        sum += (4**i)\n    return sum\n\n\ndef main():\n    n = int(input(\"Enter the number of natural numbers: \"))\n    print(fourth_power(n))\n\n\nif __name__ == \"__main__\":\n    main()",
      -8.09375
    ],
    [
      "def fourth_power(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 8\n    if n == 5:\n        return 16\n    if n == 6:\n        return 32\n    if n == 7:\n        return 64\n    if n == 8:\n        return 128\n    if n == 9:\n        return 256\n    if n == 10:\n        return 512\n    if n == 11:\n        return 1024\n    if n == 12:\n        return 2048\n    if n == 13:\n        return 4096\n    if n == 14:\n        return 8192\n    if n == 15:\n        return 16384\n    if n == 16:\n        return 32768\n    if n == 17:\n        return 65536\n    if n == 18:\n        return 131072\n    if n == 19:\n        return 262144\n    if n == 20:\n        return 4194304\n    if n == 21:\n        return 847608\n    if n == 22:\n        return 16777216\n    if n == 23:\n        return 33554432\n    if n == 24:\n        return 67108864\n    if n == 25:\n        return 1073741824\n    if n == 26:\n        return 1048576\n    if n == 27:\n        return 2097152\n    if n == 28:\n        return 4194304\n    if n == 29:\n        return 847608\n    if n == 30:\n        return 16777216\n    if n == 31:\n        return 33554432\n    if n == 32:\n        return 67108864\n    if n == 33:\n        return 1048576\n    if n == 34:\n        return 2097152\n    if n == 35:\n        return 4194304\n    if n == 36:\n        return 847608\n    if n == 37:\n        return 16777216\n    if n == 38:\n        return 33554432\n    if n == 39:\n        return 6710",
      -8.140625
    ],
    [
      "def fourth_power(n):\n    power_of_n = 1\n    while n > 0:\n        power_of_n *= n\n        n -= 1\n    return power_of_n\n\nprint(fourth_power(5))",
      -8.5078125
    ],
    [
      "def power_sum(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += 4**i\n    return sum\n\nprint(power_sum(10))",
      -8.7890625
    ],
    [
      "def fourth_power(n):\n    result = 0\n    for i in range(1, n+1):\n        result += 4**i\n    return result\n\nprint(fourth_power(10))\nprint(fourth_power(100))",
      -8.9765625
    ],
    [
      "def fourthpower(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    else:\n        return 4 * fourthpower(n-1) + fourthpower(n-2)\n\nprint(fourthpower(10))",
      -9.3515625
    ],
    [
      "def fourth_power(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n * fourth_power(n-1)\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(fourth_power(n))",
      -9.453125
    ],
    [
      "def power(n):\n    if n <= 0:\n        return 0\n    return 4 * n ** 3\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number: \"))\n    print(power(n))",
      -9.7734375
    ],
    [
      "def fourth_power(n):\n    sum_ = 0\n    while n > 0:\n        sum_ += (n & 1)\n        n = n >> 1\n    return sum_\n\nn = int(input(\"Enter the number:\"))\nprint(fourth_power(n))",
      -10.1015625
    ],
    [
      "def power(n, p):\n    return n**p\n\ndef main():\n    n = int(input(\"Enter the number : \"))\n    p = int(input(\"Enter the power : \"))\n    print(\"Sum of fourth power of\", n, \"is : \", power(n, p))\n\nif __name__ == '__main__':\n    main()",
      -10.5234375
    ],
    [
      "def sum_of_power(n):\n    sum = 0\n    while n > 0:\n        sum = sum + (4 ** n)\n        n = n - 1\n    return sum\n\nprint(sum_of_power(4))",
      -11.03125
    ],
    [
      "def fourthPower(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += 4**i\n    return sum\n\n\nprint(fourthPower(10))",
      -11.8203125
    ],
    [
      "def fourth_power(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    return (n * (n + 1)) / 2\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(fourth_power(n))",
      -12.203125
    ],
    [
      "def fourthPower(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += 4**i\n    return sum\n\n\n\nprint(fourthPower(5))\nprint(fourthPower(10))\nprint(fourthPower(15))\nprint(fourthPower(20))",
      -12.84375
    ],
    [
      "def fourthPower(n):\n    power = 4\n    sum = 0\n    while power < n:\n        sum += power\n        power += 1\n    return sum\n\nprint(fourthPower(4))",
      -13.65625
    ],
    [
      "n = int(input(\"Enter a number: \"))\n\nsum = 0\n\nfor i in range(1, n + 1):\n    sum = sum + (4 ** i)\n\nprint(f\"Sum of fourth power of {n} is {sum}\")\n\n\"\"\"\nSample Input/Output\nEnter a number: 5\nSum of fourth power of 5 is 1\n\"\"\"",
      -16.09375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}