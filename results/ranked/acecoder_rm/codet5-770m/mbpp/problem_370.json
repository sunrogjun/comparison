{
  "problem": {
    "task_id": "MBPP/381",
    "prompt": "Write a function to sort a list of lists by a given index of the inner list.",
    "canonical_solution": "from operator import itemgetter\r\ndef index_on_inner_list(list_data, index_no):\r\n    result = sorted(list_data, key=itemgetter(index_no))\r\n    return result",
    "test_list": [
      "assert index_on_inner_list([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,0)==[('Beau Turnbull', 94, 98), ('Brady Kent', 97, 96), ('Greyson Fulton', 98, 99), ('Wyatt Knott', 91, 94)]",
      "assert index_on_inner_list([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,1)==[('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98), ('Brady Kent', 97, 96), ('Greyson Fulton', 98, 99)]",
      "assert index_on_inner_list([('Greyson Fulton', 98, 99), ('Brady Kent', 97, 96), ('Wyatt Knott', 91, 94), ('Beau Turnbull', 94, 98)] ,2)==[('Wyatt Knott', 91, 94), ('Brady Kent', 97, 96), ('Beau Turnbull', 94, 98), ('Greyson Fulton', 98, 99)]"
    ],
    "challenge_test_list": [],
    "problem_id": 370
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def sort_by_index(lst, index):\n    lst.sort(key = lambda x: x[index])\n    return lst\n\n\n# test cases\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))",
      8.5703125
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\nif __name__ == '__main__':\n    lst = [[1,2,3,4], [5,6,7,8], [9,10,11,12]]\n    index = 0\n    print(sort_by_index(lst, index))\n    index = 2\n    print(sort_by_index(lst, index))\n    index = 1\n    print(sort_by_index(lst, index))\n    index = 3\n    print(sort_by_index(lst, index))\n    index = -1\n    print(sort_by_index(lst, index))\n    index = -2\n    print(sort_by_index(lst, index))\n    index = -3\n    print(sort_by_index(lst, index))",
      6.88671875
    ],
    [
      "def sort_by_index(lists, index):\n    return sorted(lists, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\n    print(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\n    print(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))",
      6.734375
    ],
    [
      "def sort_list_by_index(list_of_lists, index):\n    sorted_list = sorted(list_of_lists, key=lambda x: x[index])\n    return sorted_list\n\n\nif __name__ == '__main__':\n    list_of_lists = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9],\n    ]\n    index = 2\n    print(sort_list_by_index(list_of_lists, index))",
      5.7265625
    ],
    [
      "def sort_by_index(list, index):\n    list.sort(key=lambda x: x[index])\n    return list\n\n\nif __name__ == \"__main__\":\n    print(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\n    print(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))",
      5.0625
    ],
    [
      "def sort_by_index(l, index):\n    return sorted(l, key=lambda x: x[index])\n\n\ndef main():\n    l = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    print(sort_by_index(l, 2))\n\nif __name__ == \"__main__\":\n    main()",
      4.38671875
    ],
    [
      "def sort_by_index(arr, index):\n    return sorted(arr, key=lambda x: x[index])\n\n\ndef main():\n    arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    index = 0\n    print(sort_by_index(arr, index))\n\nif __name__ == \"__main__\":\n    main()",
      3.396484375
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    test_list = [['a', 'b', 'c', 'd'], ['e', 'f', 'g', 'h']]\n    print(sort_by_index(test_list, 0))\n\n    test_list = [['a', 'b', 'c', 'd'], ['e', 'f', 'g', 'h']]\n    print(sort_by_index(test_list, 1))\n\n    test_list = [['a', 'b', 'c', 'd'], ['e', 'f', 'g', 'h']]\n    print(sort_by_index(test_list, 2))",
      2.720703125
    ],
    [
      "def sort_by_index(list_of_lists, inner_index):\n    return sorted(list_of_lists, key=lambda x: x[inner_index])\n\nprint(sort_by_index([[1, 2, 3], [2, 4, 5], [3, 4, 5]], 1))\nprint(sort_by_index([[1, 2, 3], [2, 4, 5], [3, 4, 5]], 2))\nprint(sort_by_index([[1, 2, 3], [2, 4, 5], [3, 4, 5]], 3))",
      2.515625
    ],
    [
      "def sort_list_by_index(list_of_lists, index):\n    # Your code here\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3))\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4))\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5))\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 6))",
      1.9990234375
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))",
      1.75390625
    ],
    [
      "def sort_by_index(arr, index):\n    arr.sort(key = lambda x: x[index])\n\nif __name__ == '__main__':\n    arr = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9]\n    ]\n    sort_by_index(arr, 0)\n    print(arr)",
      1.736328125
    ],
    [
      "def sort_by_index(lst, index):\n    lst.sort(key=lambda x: x[index])\n    return lst\n\n\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 6))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 7))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 8))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 9))",
      1.6279296875
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_by_index([[1, 2, 3], [3, 2, 1], [1, 2, 3]], 1))",
      1.5625
    ],
    [
      "def sort_list(list, index):\n    new_list = list[:]\n    new_list.sort(key = lambda x: x[index])\n    return new_list\n\nprint(sort_list([1, 2, 3, 4, 5], 3))",
      1.4423828125
    ],
    [
      "def sort_list_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    assert sort_list_by_index(lst, 0) == [[7, 8, 9], [4, 5, 6], [1, 2, 3]]\n    assert sort_list_by_index(lst, 1) == [[2, 4, 6], [1, 3, 5], [6, 8, 9]]",
      1.1201171875
    ],
    [
      "def sort_list(list, index):\n    return sorted(list, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_list([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))",
      0.97021484375
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    lst = [[1, 2], [3, 4], [5, 6]]\n    index = 1\n    print(sort_by_index(lst, index))",
      0.8095703125
    ],
    [
      "def sort_by_index(lst, index):\n    lst.sort(key=lambda x: x[index])\n    return lst\n\nif __name__ == '__main__':\n    lst = [['a','b','c'],['b','c','d'],['a','b','c']]\n    index = 0\n    print(sort_by_index(lst, index))",
      0.62890625
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])",
      0.437744140625
    ],
    [
      "def sort_list_by_index(lst, index):\n    sorted_lst = sorted(lst, key = lambda x: x[index])\n    return sorted_lst\n\nprint(sort_list_by_index([[1,2,3],[4,5,6]], 0))",
      0.2181396484375
    ],
    [
      "def sort_by_index(arr, index):\n    arr.sort(key=lambda x: x[index])\n    return arr\n\n\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 5))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 6))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 7))",
      0.1927490234375
    ],
    [
      "def sort_by_index(a, idx):\n    a.sort(key=lambda x: x[idx])\n    return a\n\n\nprint(sort_by_index([1, 2, 3, 4, 5], 2))",
      0.1727294921875
    ],
    [
      "def sort_by_index(my_list, index):\n    for i in range(len(my_list)):\n        if index == my_list[i][index]:\n            my_list.sort()\n    return my_list",
      0.138427734375
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])",
      0.017303466796875
    ],
    [
      "def sort_by_index(lists, index):\n    lists.sort(key=lambda x: x[index])\n    return lists\n\n\nif __name__ == \"__main__\":\n    print(sort_by_index([[1, 2, 3], [2, 3, 4], [3, 4, 5]], 0))\n    print(sort_by_index([[1, 2, 3], [2, 3, 4], [3, 4, 5]], 1))\n    print(sort_by_index([[1, 2, 3], [2, 3, 4], [3, 4, 5]], 2))\n    print(sort_by_index([[1, 2, 3], [2, 3, 4], [3, 4, 5]], 3))",
      -0.280517578125
    ],
    [
      "def sort_by_index(a, index):\n    return sorted(a, key=lambda x: x[index])\n\na = [1, 2, 3, 4, 5, 6, 7]\nindex = 0\nprint(sort_by_index(a, index))",
      -0.51123046875
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key = lambda x: x[index])\n\nif __name__ == '__main__':\n    lst = [[1,2,3,4], [5,6,7,8]]\n    print(sort_by_index(lst, 1))",
      -0.6357421875
    ],
    [
      "def sort_by_index(arr, index):\n    return sorted(arr, key=lambda x: x[index])\n\n\ndef main():\n    print(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\n\n\nif __name__ == '__main__':\n    main()",
      -0.65625
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    list_of_lists.sort(key=lambda x: x[index])\n    return list_of_lists",
      -0.751953125
    ],
    [
      "def sort_by_index(lst):\n    return sorted(lst, key=lambda x: x[1])",
      -0.85595703125
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    # Your code here\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    print(sort_by_index([[1, 2, 3, 4], [5, 6, 7, 8]], 3))",
      -0.85595703125
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])",
      -0.85595703125
    ],
    [
      "def sort_by_index(lst):\n    # Your code here\n    return sorted(lst, key = lambda lst: lst[lst.index(max(lst))])\n\nif __name__ == '__main__':\n    print(sort_by_index([[1,2,3],[2,3,4],[3,4,5]]))",
      -0.85595703125
    ],
    [
      "def sort_list(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_list([[1, 2, 3], [4, 5, 6]], 1))\n    print(sort_list([[1, 2, 3], [4, 5, 6]], 0))\n    print(sort_list([[1, 2, 3], [4, 5, 6]], -1))",
      -0.85595703125
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    for i in range(len(list_of_lists)):\n        list_of_lists[i].sort(key=lambda x: x[index])\n    return list_of_lists\n\n\nif __name__ == \"__main__\":\n    print(sort_by_index([[1, 2, 3], [1, 3, 4], [2, 3, 4]], 2))",
      -0.85595703125
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    index = 2\n\n    print(sort_by_index(lst, index))",
      -0.85595703125
    ],
    [
      "def sort_by_index(list_of_lists):\n    # Your code here\n    return sorted(list_of_lists, key=lambda l: l[l.index(list_of_lists[0])])\n\n\nif __name__ == \"__main__\":\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) == [7, 8, 9, 5, 4, 2, 1]",
      -0.85595703125
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    print(sort_by_index([1, 2, 3, 4], 1))\n    print(sort_by_index([1, 2, 3, 4], 2))\n    print(sort_by_index([1, 2, 3, 4], 3))\n    print(sort_by_index([1, 2, 3, 4], 4))",
      -0.85595703125
    ],
    [
      "def sort_by_index(lis):\n    return sorted(lis, key=lambda x: x[lis.index(x)])",
      -0.85693359375
    ],
    [
      "def sort_by_index(lis):\n    sorted_list = sorted(lis, key=lambda x: x[lis.index(x)])\n    return sorted_list",
      -0.85693359375
    ],
    [
      "def sort_by_index(arr, index):\n    # Your code here\n    arr.sort(key=lambda x: x[index])\n    return arr",
      -0.857421875
    ],
    [
      "def sort_by_index(lis, index):\n    if index < 0 or index >= len(lis):\n        return lis\n    else:\n        return [lis[index]] + sort_by_index(lis[:index], index-1) + sort_by_index(lis[index+1:], index)\n\nlis = [[2,5,3],[4,7,8]]\n\nprint(sort_by_index(lis, 2))",
      -0.85791015625
    ],
    [
      "def sort_list(l):\n    if len(l) <= 1:\n        return l\n    else:\n        index = l[0]\n        left = [l[i] for i in range(1, len(l)) if l[i] <= index]\n        right = [l[i] for i in range(1, len(l)) if l[i] > index]\n        return sort_list(left) + [index] + sort_list(right)\n\n\nif __name__ == '__main__':\n    print(sort_list([4, 5, 1, 2, 3, 7, 6, 8, 9]))",
      -0.85791015625
    ],
    [
      "def sort_by_index(lis):\n    return sorted(lis, key=lambda x: x[lis.index(x)])\n\ndef main():\n    lis = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]\n    print(sort_by_index(lis))\n\nif __name__ == '__main__':\n    main()",
      -0.85791015625
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\nif __name__ == '__main__':\n    print(sort_by_index([1, 2, 3, 4, 5, 6], 3))",
      -0.85791015625
    ],
    [
      "def sort_list_by_index(my_list, index):\n    return sorted(my_list, key=lambda x: x[index])\n\n\nmy_list = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\nindex = 2\n\nprint(sort_list_by_index(my_list, index))",
      -0.85791015625
    ],
    [
      "def sort_by_index(l, index):\n    sorted_list = sorted(l, key=lambda x: x[index])\n    return sorted_list\n\n\ndef test_function():\n    assert sort_by_index([1, 2, 3, 4, 5], 1) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 2) == [2, 3, 4, 5, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 3) == [3, 4, 5, 1, 2]\n    assert sort_by_index([1, 2, 3, 4, 5], 4) == [4, 5, 1, 2, 3]\n    assert sort_by_index([1, 2, 3, 4, 5], 5) == [5, 4, 3, 2, 1]",
      -0.85791015625
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    list_of_lists = [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]]\n    print(sort_by_index(list_of_lists, 1))",
      -0.85791015625
    ],
    [
      "def sort_list(arr, idx):\n    return sorted(arr, key=lambda x: x[idx])",
      -0.85791015625
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key = lambda x: x[index])\n\nprint(sort_by_index([1,2,3,4,5], 0))\nprint(sort_by_index([1,2,3,4,5], 3))",
      -0.85791015625
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\ndef main():\n    lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    print(sort_by_index(lst, 0))\n    print(sort_by_index(lst, 2))\n    print(sort_by_index(lst, 3))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def sort_by_index(arr, index):\n    return sorted(arr, key=lambda x: x[index])\n\n\ndef main():\n    arr = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9],\n    ]\n    print(sort_by_index(arr, 2))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85791015625
    ],
    [
      "def sort_by_index(l: list, index: int) -> list:\n    return sorted(l, key=lambda x: x[index])",
      -0.85791015625
    ],
    [
      "def sort_by_index(arr, index):\n    return sorted(arr, key=lambda x: x[index])",
      -0.85791015625
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\ndef main():\n    lst = [\n        [1, 2, 3],\n        [4, 5, 6],\n        [7, 8, 9]\n    ]\n    print(sort_by_index(lst, 0))\n    print(sort_by_index(lst, 1))\n    print(sort_by_index(lst, 2))\n    print(sort_by_index(lst, 3))\n\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "def sort_by_index(list_of_lists):\n    sorted_list = sorted(list_of_lists, key=lambda x: x[x.index('i')])\n    return sorted_list\n\nprint(sort_by_index([[1,2,3],[4,5,6],[7,8,9]]))",
      -0.8583984375
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda i: i[index])",
      -0.8583984375
    ],
    [
      "def sort_list(l):\n    return sorted(l, key=lambda x: x[l.index(x)])\n\n\nif __name__ == \"__main__\":\n    print(sort_list([[1, 2], [3, 4], [5, 6]]))\n    print(sort_list([[1, 2], [3, 4], [5, 6]]))\n    print(sort_list([[1, 2], [3, 4], [5, 6]]))",
      -0.8583984375
    ],
    [
      "def sort_by_index(lst, index):\n    # Fill this in.\n    return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_by_index([1, 2, 3, 4, 5, 6], 4))\n    print(sort_by_index([1, 2, 3, 4, 5, 6], 1))",
      -0.8583984375
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    print(sort_by_index(lists, 0))",
      -0.8583984375
    ],
    [
      "def sort_by_index(lists, index):\n\treturn sorted(lists, key=lambda x: x[index])\n\nprint(sort_by_index([[1,2,3,4],[5,6,7,8],[9,10,11,12]],2))\nprint(sort_by_index([[1,2,3,4],[5,6,7,8],[9,10,11,12]],0))\nprint(sort_by_index([[1,2,3,4],[5,6,7,8],[9,10,11,12]],3))\nprint(sort_by_index([[1,2,3,4],[5,6,7,8],[9,10,11,12]],4))",
      -0.85888671875
    ],
    [
      "def sort_list(list_of_lists, index):\n    sorted_list = []\n    for list in list_of_lists:\n        sorted_list.append(list[index])\n    return sorted_list\n\n\ndef main():\n    list_of_lists = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]\n    print(sort_list(list_of_lists, 3))\n\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "def sort_list_by_index(list_of_lists, index):\n    if len(list_of_lists) == 0:\n        return list_of_lists\n    else:\n        return sort_list_by_index(list_of_lists[1:], index) + [list_of_lists[0]]\n\n\ndef test_sort_list_by_index():\n    assert sort_list_by_index([], 0) == []\n    assert sort_list_by_index([[1, 2], [3, 4]], 0) == [1, 2, 3, 4]\n    assert sort_list_by_index([[1, 2, 3, 4], [5, 6, 7, 8]], 0) == [1, 2, 3, 4, 5, 6, 7, 8]",
      -0.85888671875
    ],
    [
      "def sort_by_index(lst):\n    return sorted(lst, key=lambda x: x[1])\n\n\nif __name__ == \"__main__\":\n    lst = [\n        [2, 5, 9, 3],\n        [1, 3, 4, 2],\n        [3, 4, 2, 1],\n        [1, 4, 9, 2],\n        [2, 3, 4, 1]\n    ]\n    print(sort_by_index(lst))",
      -0.85888671875
    ],
    [
      "def sort_by_index(mylist, index):\n    return sorted(mylist, key=lambda x: x[index])\n\nif __name__ == '__main__':\n    mylist = [['Bob', 'Mike', 'Lisa'], ['Lisa', 'Bob', 'Mike']]\n    print(sort_by_index(mylist, 2))",
      -0.85888671875
    ],
    [
      "def sort_by_index(list, index):\n    return sorted(list, key=lambda x: x[index])\n\n\nprint(sort_by_index([[1, 2, 3], [4, 5, 6]], 2))",
      -0.85888671875
    ],
    [
      "def sort_by_index(my_list, index):\n    my_list.sort(key=lambda x: x[index])\n\n\nmy_list = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]\nindex = 1\n\nsort_by_index(my_list, index)\nprint(my_list)",
      -0.86083984375
    ],
    [
      "def sort_list_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nprint(sort_list_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))",
      -0.86083984375
    ],
    [
      "def sort_by_index(lst, index):\n    if index < 0 or index >= len(lst):\n        return lst\n    else:\n        return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    lst = [\n        [1,2,3,4],\n        [5,6,7,8],\n        [9,10,11,12],\n        [13,14,15,16]\n    ]\n    print(sort_by_index(lst, 1))\n    print(sort_by_index(lst, 2))\n    print(sort_by_index(lst, 3))\n    print(sort_by_index(lst, 4))\n    print(sort_by_index(lst, 5))\n    print(sort_by_index(lst, 6))\n    print(sort_by_index(lst, 7))\n    print(sort_by_index(lst, 8))\n    print(sort_by_index(lst, 9))\n    print(sort_by_index(lst, 10))\n    print(sort_by_index(lst, 11))\n    print(sort_by_index(lst, 12))\n    print(sort_by_index(lst, 13))\n    print(sort_by_index(lst, 14))\n    print(sort_by_index(lst, 15))",
      -0.9580078125
    ],
    [
      "def sort_list_by_index(lst, index):\n    # Your code here\n    lst.sort(key = lambda x: x[index])\n    return lst",
      -1.16015625
    ],
    [
      "def sort_by_index(lst, index):\n    lst.sort(key=lambda x: x[index])\n    return lst\n\nprint(sort_by_index([1, 2, 3, 4, 5], 2))",
      -1.189453125
    ],
    [
      "def sort_list_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    print(sort_list_by_index([[1, 2, 3], [4, 5, 6]], 0))",
      -1.330078125
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    return sorted(list_of_lists, key=lambda x: x[index])\n\n\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2))",
      -1.49609375
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nprint(sort_by_index([1, 2, 3, 4, 5], 0))",
      -1.5546875
    ],
    [
      "def sort_list(list_of_lists, index):\n    return sorted(list_of_lists[index], key=lambda x: x[index])",
      -1.5556640625
    ],
    [
      "def sort_by_index(list, index):\n    return sorted(list, key = lambda x:x[index])\n\nprint(sort_by_index([1, 2, 3, 4, 5, 6], 3))",
      -1.7548828125
    ],
    [
      "def sort_list_by_index(list_of_lists, index):\n    sorted_list = []\n    for i in range(len(list_of_lists)):\n        sorted_list.append(list_of_lists[i][index])\n    return sorted_list\n\n\nif __name__ == \"__main__\":\n    list_of_lists = [[1,2,3],[4,5,6],[7,8,9]]\n    index = 2\n    sorted_list = sort_list_by_index(list_of_lists, index)\n    print(sorted_list)",
      -1.845703125
    ],
    [
      "def sort_list(list_of_lists, inner_index):\n    # Your code here\n    return sorted(list_of_lists, key=lambda x: x[inner_index])",
      -2.240234375
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nprint(sort_by_index([1, 2, 3, 4], 0))\nprint(sort_by_index([1, 2, 3, 4], 1))\nprint(sort_by_index([1, 2, 3, 4], 2))\nprint(sort_by_index([1, 2, 3, 4], 3))\nprint(sort_by_index([1, 2, 3, 4], 4))",
      -3.3828125
    ],
    [
      "def sort_by_index(lis):\n    lis.sort(key=lambda x: x[x.index(lis[0])])\n    return lis\n\n\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))\nprint(sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))",
      -3.916015625
    ],
    [
      "def sort_by_index(arr, index):\n    return sorted(arr, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    print(sort_by_index([1, 2, 3, 4, 5], 0))\n    print(sort_by_index([1, 2, 3, 4, 5], 1))\n    print(sort_by_index([1, 2, 3, 4, 5], 2))\n    print(sort_by_index([1, 2, 3, 4, 5], 3))\n    print(sort_by_index([1, 2, 3, 4, 5], 4))\n    print(sort_by_index([1, 2, 3, 4, 5], 5))\n    print(sort_by_index([1, 2, 3, 4, 5], 6))\n    print(sort_by_index([1, 2, 3, 4, 5], 7))\n    print(sort_by_index([1, 2, 3, 4, 5], 8))\n    print(sort_by_index([1, 2, 3, 4, 5], 9))\n    print(sort_by_index([1, 2, 3, 4, 5], 10))",
      -4.12890625
    ],
    [
      "def sort_list(list1, index):\n    if len(list1) == 0:\n        return list1\n    else:\n        sorted_list = []\n        for i in range(len(list1)):\n            if i == index:\n                sorted_list.append(list1[index])\n            else:\n                sorted_list.append(list1[i])\n        return sorted_list\n\nprint(sort_list([1,2,3,4,5,6], 0))",
      -4.9296875
    ],
    [
      "def sort_by_index(a, index):\n    # Your code here\n    return a[index:] + a[:index]\n\na = [[3,4,5,6,7], [3,4,5,6,7], [3,4,5,6,7]]\nprint(sort_by_index(a, 2))",
      -4.94921875
    ],
    [
      "def sort_by_index(list, index):\n    return sorted(list, key = lambda x: x[index])\n\nif __name__ == \"__main__\":\n    test_cases = [\n        ([1,2,3,4,5], 3),\n        ([1,2,3,4,5], 4),\n        ([1,2,3,4,5], 6)\n    ]\n\n    for test in test_cases:\n        print(sort_by_index(test[0], test[1]))",
      -4.9765625
    ],
    [
      "def sort_by_index(arr, index):\n    return sorted(arr, key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    assert sort_by_index([[1, 2], [3, 4, 5], [1, 3, 2], [2, 3, 4, 5], [1, 4, 5, 6]], 0) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2], [3, 4, 5], [1, 3, 2], [2, 3, 4, 5], [1, 4, 5, 6]], 1) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2], [3, 4, 5], [1, 3, 2], [2, 3, 4, 5], [1, 4, 5, 6]], 2) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2], [3, 4, 5], [1, 3, 2], [2, 3, 4, 5], [1, 4, 5, 6]], 3) == [1, 2, 3, 4, 5, 6]",
      -5.89453125
    ],
    [
      "def sort_list_by_index(lst, index):\n    if index < 0 or index > len(lst) - 1:\n        return\n    temp = []\n    for i in range(len(lst)):\n        if i == index:\n            temp.append(lst[i])\n        else:\n            temp.insert(index, lst[i])\n    lst = temp\n    return lst\n\nprint(sort_list_by_index([1, 2, 3, 4, 5], 2))",
      -6.5
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\nif __name__ == '__main__':\n    assert sort_by_index([1, 2, 3, 4, 5], 3) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 4) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 0) == [4, 3, 2, 1, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], -1) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 2) == [3, 2, 1, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], -2) == [4, 3, 2, 5, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], -3) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], -4) == [4, 3, 2, 5, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], -5) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], -6) == [4, 3, 2, 5, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], -7) == [3, 2, 1, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], -8) == [3, 2, 1, 5, 4]\n    assert sort_by_index([1, 2, 3, 4, 5], -9) == [4, 3, 2, 5, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], -10) == [4, 3, 2, 5,",
      -6.765625
    ],
    [
      "def sort_list(list_of_lists):\n    sorted_list = []\n    for l in list_of_lists:\n        sorted_list.append(l[int(input(\"Enter the index of the inner list: \"))])\n    return sorted_list\n\n\nprint(sort_list([[1, 2, 3], [4, 5, 6], [7, 8, 9]]))",
      -7.0234375
    ],
    [
      "def sort_by_index(lst, index):\n    if index < 0 or index >= len(lst):\n        return None\n    if index == len(lst) - 1:\n        return sorted(lst, key=lambda x: x[index])\n    return sorted(lst, key=lambda x: x[index], reverse=True)\n\n\nif __name__ == \"__main__\":\n    assert sort_by_index([[1, 2, 3], [4, 5, 6]], 0) == [\n        [1, 2, 3],\n        [4, 5, 6]\n    ]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6]], 1) == [\n        [1, 2, 3],\n        [4, 5, 6]\n    ]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6]], 2) == [\n        [4, 5, 6],\n        [1, 2, 3]\n    ]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6]], 3) == [\n        [1, 2, 3],\n        [4, 5, 6]\n    ]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6]], 4) == [\n        [1, 2, 3],\n        [4, 5, 6]\n    ]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6]], 5) == [\n        [4, 5, 6],\n        [1, 2, 3]\n    ]",
      -7.23828125
    ],
    [
      "def sort_by_index(lst, index):\n    lst.sort(key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    lst = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    index = 0\n    sort_by_index(lst, index)\n    assert lst == [[7, 8, 9], [5, 4, 1], [3, 2, 6]]",
      -7.546875
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\ndef test_sort_by_index():\n    assert sort_by_index([1, 2, 3, 4, 5], 0) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 1) == [5, 4, 3, 2, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 2) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 3) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 4) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 5) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 6) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 7) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 8) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 9) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 10) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 11) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 12) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 13) == [1, 2, 3, 4, 5]\n    assert sort_by_index([",
      -8.0390625
    ],
    [
      "def sort_by_index(lst, index):\n    return sorted(lst, key=lambda x: x[index])\n\n\ndef test_sort_by_index():\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2) == [7, 8, 9, 1, 2, 3]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3) == [7, 8, 9, 1, 2, 3]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 4) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], -1) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 1) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2) == [2, 3, 4, 5, 6, 7]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], -2) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3], [4, 5, 6], [7, 8, 9]], -3) == [1, 2, 3, 4, 5",
      -8.328125
    ],
    [
      "def sort_by_index(lis, index):\n    return sorted(lis, key=lambda x: x[index])\n\n\ndef test_sort_by_index():\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 2) == [1, 2, 3, 4, 5, 6, 7]\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 0) == [5, 6, 3, 4, 2, 1]\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 1) == [3, 5, 6, 4, 2, 1]\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 3) == [1, 2, 3, 4, 5, 6]\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 4) == [2, 3, 4, 5, 6, 7]\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 5) == [3, 4, 5, 6, 7, 1]\n    assert sort_by_index([[1, 2, 3, 4], [2, 4, 5, 6], [3, 5, 6, 7]], 6) == [1, 2, 3, 4, 5, 6, 7]",
      -9.2578125
    ],
    [
      "def sort_list(list_of_lists):\n    sorted_list = []\n    for i in range(len(list_of_lists)):\n        sorted_list.append(list_of_lists[i][0])\n    return sorted_list\n\nprint(sort_list([[1,2,3],[4,5,6]]))",
      -9.9140625
    ],
    [
      "def sort_by_index(l, index):\n    for i in range(len(l)):\n        if i == index:\n            l.sort()\n    return l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    index = 4\n    print(sort_by_index(l, index))\n\n\nmain()",
      -10.3359375
    ],
    [
      "def sort_list(list_of_lists, index):\n    # Your code here\n    return sorted(list_of_lists[index], key=lambda x: x[index])\n\n\nif __name__ == \"__main__\":\n    list_of_lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    index = 2\n    print(sort_list(list_of_lists, index))\n\n    list_of_lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    index = 4\n    print(sort_list(list_of_lists, index))\n\n    list_of_lists = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]\n    index = 1\n    print(sort_list(list_of_lists, index))",
      -11.3203125
    ],
    [
      "def sort_by_index(list_of_lists, index):\n    if index < 0 or index > len(list_of_lists) - 1:\n        return list_of_lists\n    temp = list_of_lists[index]\n    temp_index = index\n    temp_list = list_of_lists[index + 1]\n    while temp_index < len(temp):\n        while temp_index < len(temp) and temp[temp_index] < temp[temp_index + 1]:\n            temp_index += 1\n        while temp_index < len(temp) and temp[temp_index] > temp[temp_index + 1]:\n            temp_index += 1\n        temp[temp_index] = temp_list[temp_index]\n        temp_list[temp_index] = temp[temp_index + 1]\n    return temp_list\n\n\ndef test_function():\n    assert sort_by_index([1, 2, 3, 4, 5], 1) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 2) == [2, 3, 4, 5, 1]\n    assert sort_by_index([1, 2, 3, 4, 5], 3) == [4, 5, 1, 2, 3]\n    assert sort_by_index([1, 2, 3, 4, 5], 4) == [5, 1, 2, 3, 4]\n    assert sort_by_index([1, 2, 3, 4, 5], 5) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 6) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 7) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 8) == [1, 2, 3, 4, 5]\n    assert sort_by_index([1, 2, 3, 4, 5], 9) == [1, 2, 3, 4, 5]\n    assert sort",
      -12.1953125
    ],
    [
      "def sort_by_index(a):\n    return sorted(a, key = lambda x: x[a])\n\n\na = [1, 2, 3, 4, 5]\nprint(sort_by_index(a))\n\na = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(sort_by_index(a))\n\na = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98]\nprint(sort_by_index(a))",
      -14.6484375
    ],
    [
      "def sort_by_index(my_list):\n    my_list.sort(key=lambda x: x[my_index])\n    return my_list\n\n\nprint(sort_by_index([1, 2, 3, 4, 5]))\nprint(sort_by_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
      -18.015625
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}