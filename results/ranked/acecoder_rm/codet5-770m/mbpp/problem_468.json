{
  "problem": {
    "task_id": "MBPP/479",
    "prompt": "Write a python function to find the first digit of a given number.",
    "canonical_solution": "def first_Digit(n) :  \r\n    while n >= 10:  \r\n        n = n / 10; \r\n    return int(n) ",
    "test_list": [
      "assert first_Digit(123) == 1",
      "assert first_Digit(456) == 4",
      "assert first_Digit(12) == 1"
    ],
    "challenge_test_list": [],
    "problem_id": 468
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "def first_digit(number):\n    \"\"\"\n    :type number: int\n    :rtype: int\n    \"\"\"\n    if number < 10:\n        return number\n    else:\n        return first_digit(number // 10)\n\n\nprint(first_digit(123456789))",
      10.59375
    ],
    [
      "def find_first_digit(number):\n    return str(number)[0]\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    print(find_first_digit(num))\n\n\nif __name__ == \"__main__\":\n    main()",
      10.046875
    ],
    [
      "def first_digit(num):\n    \"\"\"\n    :type num: int\n    :rtype: str\n    \"\"\"\n    return str(num)[0]",
      8.0390625
    ],
    [
      "def find_first_digit(n):\n    if n < 10:\n        return n\n    else:\n        return int(str(n)[0])\n\n\nprint(find_first_digit(12345))\nprint(find_first_digit(123456789))\nprint(find_first_digit(12345678910))",
      7.30078125
    ],
    [
      "def first_digit(num):\n    return num[0]",
      3.9296875
    ],
    [
      "def firstDigit(n):\n    return str(n)[0]\n\n\nprint(firstDigit(123))\nprint(firstDigit(1234))\nprint(firstDigit(123456))\nprint(firstDigit(12345678))\nprint(firstDigit(123456789))\nprint(firstDigit(1234567890))\nprint(firstDigit(1234567890123456))\nprint(firstDigit(123456789012345678))\nprint(firstDigit(12345678901234567812345678))\nprint(firstDigit(12345678901234567812345678123456789))\nprint(firstDigit(12345678901234567812345678123456789012345678))\nprint(firstDigit(123456789012345678123456781234567890123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456",
      3.333984375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nif __name__ == '__main__':\n    print(first_digit(12345))",
      3.193359375
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\nprint(first_digit(1234))\nprint(first_digit(123456789))\nprint(first_digit(12345678912345))\nprint(first_digit(12345678912345123))",
      3.125
    ],
    [
      "def firstDigit(num):\n    return str(num)[0]\n\n\nprint(firstDigit(15))\nprint(firstDigit(123456789))\nprint(firstDigit(12345))\nprint(firstDigit(1))",
      2.037109375
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\nprint(first_digit(10))",
      1.4404296875
    ],
    [
      "def first_digit(n):\n    return str(n)[0]",
      1.3310546875
    ],
    [
      "def first_digit(number):\n    return str(number)[0]\n\n\nprint(first_digit(123456))",
      1.3291015625
    ],
    [
      "def first_digit(number):\n    return str(number)[0]\n\n\nprint(first_digit(12345))",
      1.2607421875
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nprint(first_digit(1234))",
      0.99462890625
    ],
    [
      "def first_digit(num):\n\t# print(num)\n\tfirst_digit = num[0]\n\treturn first_digit\n\nprint(first_digit(1234))",
      0.93359375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nprint(first_digit(123))",
      0.8271484375
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\nprint(first_digit(1234))",
      0.72900390625
    ],
    [
      "def find_first_digit(num):\n    num = str(num)\n    return num[0]\n\nprint(find_first_digit(1234))",
      0.67724609375
    ],
    [
      "def first_digit(number):\n    # your code here\n    return number[0]",
      0.24072265625
    ],
    [
      "def first_digit(n):\n    if n < 0:\n        return 'Negative number'\n    else:\n        return str(n)[0]\n\n\nprint(first_digit(12))\nprint(first_digit(-123))\nprint(first_digit(1234))\nprint(first_digit(123456))\nprint(first_digit(123.456))\nprint(first_digit(123456.78))\nprint(first_digit(12345678.9))",
      0.2283935546875
    ],
    [
      "def firstDigit(num):\n    return num[0]\n\nprint(firstDigit(1234))",
      0.189208984375
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\nprint(first_digit(10))\nprint(first_digit(123456789))\nprint(first_digit(1234567890))\nprint(first_digit(1234567890123456))",
      0.1429443359375
    ],
    [
      "def first_digit(num):\n    if num == 0:\n        return \"0\"\n    else:\n        return str(num)[0]\n\n\nprint(first_digit(123))\nprint(first_digit(1234))\nprint(first_digit(123456))",
      0.1396484375
    ],
    [
      "def first_digit(num):\n    return num % 10\n\n\nprint(first_digit(123))",
      0.131591796875
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nnumber = int(input(\"Enter a number: \"))\nprint(first_digit(number))",
      0.09490966796875
    ],
    [
      "def find_first_digit(num):\n\treturn str(num)[0]\n\nprint(find_first_digit(1234))",
      0.0278167724609375
    ],
    [
      "def firstDigit(num):\n    return str(num)[0]\n\n\ndef firstDigit2(num):\n    return str(num)[0]\n\n\nprint(firstDigit(123))\nprint(firstDigit2(123))",
      0.0203704833984375
    ],
    [
      "def first_digit(n):\n    if n < 10:\n        return n\n    else:\n        return n // 10\n\n\nif __name__ == \"__main__\":\n    print(first_digit(1234))\n    print(first_digit(123456))\n    print(first_digit(123456789))",
      -0.26123046875
    ],
    [
      "def first_digit(num):\n    return str(num)[0]",
      -0.261962890625
    ],
    [
      "def first_digit(number):\n    \"\"\"\n    :type number: int\n    :rtype: str\n    \"\"\"\n    digit = 0\n    while number!= 0:\n        digit = number % 10\n        number = number // 10\n    return str(digit)\n\n\nif __name__ == \"__main__\":\n    print(first_digit(123))",
      -0.3525390625
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\nprint(first_digit(1234))",
      -0.65087890625
    ],
    [
      "def first_digit(num):\n    # Your code here\n    return num[0]\n\nprint(first_digit(1234))",
      -0.65283203125
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nnumber = int(input(\"Enter a number: \"))\nfirst_digit(number)",
      -0.74951171875
    ],
    [
      "def first_digit(num):\n    return num[0]\n\n\nprint(first_digit(123))",
      -0.7509765625
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nprint(first_digit(123))",
      -0.85595703125
    ],
    [
      "def first_digit(n):\n    return str(n)[0]",
      -0.85595703125
    ],
    [
      "def first_digit(number):\n    if number < 0:\n        return \"Not a valid number\"\n    else:\n        return str(number)[0]",
      -0.85693359375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    print(first_digit(num))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.85693359375
    ],
    [
      "def first_digit(num):\n    return num[0]",
      -0.85693359375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nprint(first_digit(1234))",
      -0.85693359375
    ],
    [
      "def first_digit(num):\n    return num[0]",
      -0.85693359375
    ],
    [
      "def find_first_digit(number):\n    return str(number)[0]\n\n\nif __name__ == '__main__':\n    print(find_first_digit(12345))",
      -0.85693359375
    ],
    [
      "def first_digit(n):\n    return n[0]",
      -0.85693359375
    ],
    [
      "def first_digit(num):\n    return num[0]",
      -0.857421875
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nprint(first_digit(1234))",
      -0.85791015625
    ],
    [
      "def find_first_digit(num):\n    return str(num)[0]",
      -0.85791015625
    ],
    [
      "def first_digit(n):\n    return n % 10\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(first_digit(n))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return str(num)[0]\n\nprint(first_digit(1234))\nprint(first_digit(123456))\nprint(first_digit(123456789))\nprint(first_digit(123456789012))",
      -0.8583984375
    ],
    [
      "def first_digit(number):\n    if number % 10 == 0:\n        return number % 10\n    return 0\n\n\nif __name__ == \"__main__\":\n    number = int(input(\"Enter a number: \"))\n    print(first_digit(number))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return num[0]",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return str(num)[0]\n\n\nprint(first_digit(1234))",
      -0.8583984375
    ],
    [
      "def first_digit(n):\n    return n[0]\n\nif __name__ == '__main__':\n    n = int(input(\"Enter a number: \"))\n    print(first_digit(n))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    str_num = str(num)\n    return str_num[0]\n\n\nprint(first_digit(12345))",
      -0.8583984375
    ],
    [
      "def first_digit(number):\n    return str(number)[0]\n\nprint(first_digit(12))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\n\nprint(first_digit(1234))\nprint(first_digit(123456))",
      -0.8583984375
    ],
    [
      "def firstDigit(n):\n    if n < 10:\n        return n\n    return n % 10\n\n\nprint(firstDigit(15))\nprint(firstDigit(19))\nprint(firstDigit(0))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nprint(first_digit(123456789))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return str(num)[0]\n\n\nnum = int(input(\"Enter the number: \"))\nprint(first_digit(num))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    \"\"\"\n    :type num: int\n    :rtype: str\n    \"\"\"\n    if num > 0:\n        return str(num)[0]\n    else:\n        return \"Not a valid number\"\n\n\ndef first_digit_2(num):\n    \"\"\"\n    :type num: int\n    :rtype: str\n    \"\"\"\n    if num > 0:\n        return str(num)[0]\n    else:\n        return \"Not a valid number\"\n\n\ndef first_digit_3(num):\n    \"\"\"\n    :type num: int\n    :rtype: str\n    \"\"\"\n    if num > 0:\n        return str(num)[0]\n    else:\n        return \"Not a valid number\"",
      -0.8583984375
    ],
    [
      "def first_digit(n):\n    if n == 0:\n        return 0\n    if n < 10:\n        return n\n    return first_digit(n % 10) + 1\n\nprint(first_digit(12345))\nprint(first_digit(12345345))\nprint(first_digit(123456))",
      -0.8583984375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nprint(first_digit(1234))",
      -0.8583984375
    ],
    [
      "def first_digit(number):\n    return number[0]",
      -0.8876953125
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nprint(first_digit(12))",
      -0.8916015625
    ],
    [
      "def first_digit(number):\n    result = 0\n    while number > 0:\n        result = number % 10\n        number = number // 10\n    return result\n\n\nprint(first_digit(1234))",
      -1.0537109375
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\n\nprint(first_digit(1234))",
      -1.0849609375
    ],
    [
      "def first_digit(num):\n    return str(num)[0]\n\nprint(first_digit(1234))",
      -1.0849609375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nprint(first_digit(1234))\nprint(first_digit(123456789))\nprint(first_digit(123456789123456789))",
      -1.1123046875
    ],
    [
      "def firstDigit(num):\n    if num < 10:\n        return str(num)\n    return str(num//10) + str(num%10)\n\n\nprint(firstDigit(123456789))",
      -1.2060546875
    ],
    [
      "def first_digit(number):\n    return str(number)[0]\n\nprint(first_digit(10))\nprint(first_digit(123456789))\nprint(first_digit(123456789123))",
      -1.2783203125
    ],
    [
      "def first_digit(n):\n    while n > 0:\n        n = n//10\n    return n\n\nprint(first_digit(123456))\nprint(first_digit(123456789))\nprint(first_digit(123456789123))",
      -2.052734375
    ],
    [
      "def first_digit(n):\n    return str(n)[0]\n\n\nprint(first_digit(123))\nprint(first_digit(123.456))\nprint(first_digit(12.3456))\nprint(first_digit(12.3456.78))\nprint(first_digit(12.3456.78.9))\nprint(first_digit(12.3456.78.9.123))\nprint(first_digit(12.3456.78.9.123.456))\nprint(first_digit(12.3456.78.9.123.456.78))",
      -2.12890625
    ],
    [
      "def firstDigit(num):\n    if num == 0:\n        return \"zero\"\n    else:\n        return str(num)[0]\n\nprint(firstDigit(1234))",
      -2.724609375
    ],
    [
      "def find_first_digit(num):\n    return num[0]\n\n\nprint(find_first_digit(1234))",
      -2.77734375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    print(first_digit(number))\n\n\nif __name__ == \"__main__\":\n    main()",
      -3.140625
    ],
    [
      "def first_digit(num):\n    return num[0]\n\n\nif __name__ == \"__main__\":\n    print(first_digit(232))",
      -3.44140625
    ],
    [
      "def first_digit(n):\n    if n <= 0:\n        return \"invalid\"\n    elif n % 10 == 0:\n        return str(n % 10)\n    else:\n        return \"0\"\n\nprint(first_digit(12345))",
      -3.46484375
    ],
    [
      "def first_digit(n):\n    return n[0]\n\n\nif __name__ == \"__main__\":\n    print(first_digit(1234))",
      -4.15625
    ],
    [
      "def first_digit(num):\n    return num % 10\n\nprint(first_digit(1234))\nprint(first_digit(123456))\nprint(first_digit(12345678))\nprint(first_digit(1234567890))\nprint(first_digit(1234567890123))\nprint(first_digit(123456789012345))\nprint(first_digit(12345678901234589))\nprint(first_digit(1234567890123458989))\nprint(first_digit
      -4.36328125
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    print(first_digit(number))\n\n\nif __name__ == \"__main__\":\n    main()",
      -4.9609375
    ],
    [
      "def first_digit(num):\n    if num < 10:\n        return num\n    else:\n        return num % 10\n\nprint(first_digit(123456789))",
      -4.99609375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\n\nprint(first_digit(1234))",
      -5.12109375
    ],
    [
      "def first_digit(n):\n    if n < 10:\n        return n\n    else:\n        return n % 10\n\n\nprint(first_digit(123))\nprint(first_digit(12))\nprint(first_digit(0))\nprint(first_digit(1))\nprint(first_digit(-1))\nprint(first_digit(-1.2))",
      -5.66796875
    ],
    [
      "def first_digit(n):\n    if n < 0:\n        return -1\n    elif n == 0:\n        return 0\n    else:\n        return n % 10\n\nif __name__ == '__main__':\n    n = int(input(\"Enter a number: \"))\n    print(first_digit(n))",
      -6.1015625
    ],
    [
      "def find_first_digit(n):\n    return n[0]\n\nprint(find_first_digit(1234))\nprint(find_first_digit(12))\nprint(find_first_digit(12345))\nprint(find_first_digit(123456789))\nprint(find_first_digit(123456789123456789))\nprint(find_first_digit
      -6.15234375
    ],
    [
      "def find_first_digit(n):\n    return n % 10\n\n\nprint(find_first_digit(1234))\nprint(find_first_digit(123456))\nprint(find_first_digit(12345678))\nprint(find_first_digit(1234567812))\nprint(find_first_digit(123456781212))\nprint(find_first_digit(1234567812121212))\nprint(find_first_digit(12345678121212121212))",
      -6.21484375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nprint(first_digit(1234))\nprint(first_digit(123))\nprint(first_digit(12))",
      -6.40625
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nprint(first_digit(1234))\nprint(first_digit(1234567))\nprint(first_digit(1234567234))\nprint(first_digit(1234567234567))\nprint(first_digit
      -6.55859375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nnum = int(input(\"Enter a number: \"))\nprint(first_digit(num))",
      -6.59375
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nif __name__ == \"__main__\":\n    print(first_digit(1234))\n    print(first_digit(123456))\n    print(first_digit(123456789))",
      -6.67578125
    ],
    [
      "def first_digit(num):\n    return num[0]\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    print(f\"The first digit of {num} is {first_digit(num)}\")\n\n\nif __name__ == \"__main__\":\n    main()",
      -6.71875
    ],
    [
      "def first_digit(n):\n    return n[0]\n\nprint(first_digit(4))\nprint(first_digit(1234))\nprint(first_digit(12345))\nprint(first_digit(1234567))\nprint(first_digit(12345678))\nprint(first_digit(123456789))\nprint(first_digit(123456789012))\nprint(first_digit(1234567890123))\nprint(first_digit(123456789012345))\nprint(first_digit(1234567890123455678))\nprint(first_digit(123456789012345567812345678))",
      -6.87890625
    ],
    [
      "def find_first_digit(num):\n    return num[0]\n\nprint(find_first_digit(123456789))\nprint(find_first_digit(1234567890))\nprint(find_first_digit(12345678901))\nprint(find_first_digit(1234567890123))\nprint(find_first_digit(123456789012345))\nprint(find_first_digit(123456789012345123))\nprint(find_first_digit(123456789012345123123))\nprint(find_first_digit(123456789012345123123123))",
      -6.93359375
    ],
    [
      "def first_digit(num):\n    return num[0]\n\nif __name__ == \"__main__\":\n    print(first_digit(1234))\n    print(first_digit(123456))",
      -7.0546875
    ],
    [
      "def find_first_digit(n):\n    return n[0]\n\nprint(find_first_digit(1234))\nprint(find_first_digit(123456))\nprint(find_first_digit(12345678))\nprint(find_first_digit(1234567812))\nprint(find_first_digit(1234567812345))\nprint(find_first_digit(123456781234532))\nprint(find_first_digit(12345678123453212))\nprint(find_first_digit(12345678123453212345))\nprint(find_first_digit(123456781234532123453212))",
      -7.3828125
    ],
    [
      "def first_digit(number):\n    return number[0]\n\nprint(first_digit(3))\nprint(first_digit(123))\nprint(first_digit(456))",
      -7.65625
    ],
    [
      "def first_digit(number):\n    return number[0]\n\n\nif __name__ == '__main__':\n    print(first_digit(123))\n    print(first_digit(1234))\n    print(first_digit(123456))\n    print(first_digit(12345678))\n    print(first_digit(1234567812345678))\n    print(first_digit
      -7.85546875
    ],
    [
      "def first_digit(num):\n    if num < 10:\n        return num\n    else:\n        return num % 10\n\nif __name__ == \"__main__\":\n    print(first_digit(10))\n    print(first_digit(1000))\n    print(first_digit(1))",
      -8.125
    ],
    [
      "def find_first_digit(n):\n    return n[0]\n\n\nprint(find_first_digit(123))\nprint(find_first_digit(1))\nprint(find_first_digit(0))\nprint(find_first_digit(4))",
      -8.7734375
    ],
    [
      "def first_digit(num):\n\tif num < 10:\n\t\treturn str(num)\n\telse:\n\t\treturn first_digit(num//10) + str(num%10)\n\n\nprint(first_digit(1234))\nprint(first_digit(123456789))",
      -9.0546875
    ],
    [
      "def firstDigit(num):\n    \"\"\"\n    :type num: int\n    :rtype: int\n    \"\"\"\n    if num >= 10:\n        return num%10\n    else:\n        return -1\n\n\nprint(firstDigit(12345))",
      -9.234375
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}