{
  "problem": {
    "task_id": "HumanEval/36",
    "prompt": "\n\ndef fizz_buzz(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n",
    "canonical_solution": "    ns = []\n    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            ns.append(i)\n    s = ''.join(list(map(str, ns)))\n    ans = 0\n    for c in s:\n        ans += (c == '7')\n    return ans\n",
    "test": "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate(50) == 0\n    assert candidate(78) == 2\n    assert candidate(79) == 3\n    assert candidate(100) == 3\n    assert candidate(200) == 6\n    assert candidate(4000) == 192\n    assert candidate(10000) == 639\n    assert candidate(100000) == 8026\n\n",
    "entry_point": "fizz_buzz",
    "docstring": "",
    "problem_id": 36
  },
  "model_name": "codet5-770m",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "return sum(1 for i in range(n) if i % 15 == 7)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      3.2109375
    ],
    [
      "return sum(1 for x in range(n) if x % 15 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      2.11328125
    ],
    [
      "return sum(1 for i in range(n) if i % 3 == 0 or i % 5 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      1.9609375
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and i!= 7)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      1.4580078125
    ],
    [
      "return sum(1 for i in range(n) if (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.8271484375
    ],
    [
      "return sum(1 for i in range(1, n+1) if i % 3 == 0 or i % 5 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      0.77001953125
    ],
    [
      "return sum(1 for i in range(1, n + 1) if i % 11 == 0 or i % 13 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      0.6201171875
    ],
    [
      "return sum(1 for i in range(n) if i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.5791015625
    ],
    [
      "return sum(1 for i in range(n) if str(i).count(\"7\") % 11 == 0 or str(i).count(\"7\") % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.2093505859375
    ],
    [
      "return sum(i for i in range(1, n + 1) if str(i).count(\"7\") % 11 == 0 or str(i).count(\"7\") % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      0.1473388671875
    ],
    [
      "fizz_buzz_count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            fizz_buzz_count += 1\n    return fizz_buzz_count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      0.060791015625
    ],
    [
      "return sum(1 for i in range(1, n + 1) if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.1107177734375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if (i % 11 == 0) and (i % 13 == 0):\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.11676025390625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.32373046875
    ],
    [
      "count = 0\n    for i in range(n):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.357666015625
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(fizz_buzz(int(input().strip())))",
      -0.37548828125
    ],
    [
      "return sum(1 for i in range(1, n+1) if i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.392822265625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.397216796875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count",
      -0.441650390625
    ],
    [
      "count = 0\n    for x in range(n):\n        if x % 7 == 0:\n            count += 1\n        if x % 11 == 0:\n            count += 1\n        if x % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.462646484375
    ],
    [
      "count = 0\n    for i in range(n):\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        elif i % 3 == 0:\n            count += 1\n        elif i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.497314453125
    ],
    [
      "fizz_buzz_count = 0\n    for i in range(n):\n        if i % 3 == 0 and i % 5 == 0:\n            fizz_buzz_count += 1\n        if i % 5 == 0:\n            fizz_buzz_count += 1\n        if i % 3 == 0:\n            fizz_buzz_count += 1\n    return fizz_buzz_count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.5908203125
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count",
      -0.62890625
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.6552734375
    ],
    [
      "fizz = 0\n    buzz = 0\n    for num in range(1, n + 1):\n        if num % 7 == 0:\n            fizz += 1\n        if num % 11 == 0:\n            buzz += 1\n    return fizz + buzz\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -0.69921875
    ],
    [
      "return sum(1 for i in range(1, n + 1) if i % 11 == 0 or i % 13 == 0 or str(i)[:2] == '7')\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -0.736328125
    ],
    [
      "return sum(1 for i in range(n) if str(i) == '7')",
      -0.85595703125
    ],
    [
      "return sum(1 for digit in str(n) if digit == '7')\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -0.857421875
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0) and (i % 13 == 0))",
      -0.857421875
    ],
    [
      "return sum(1 for i in range(1, n+1) if i % 11 == 0 or i % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "return sum(1 for num in range(n) if (num % 3 == 0 or num % 5 == 0) and (num % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85791015625
    ],
    [
      "result = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            result += 1\n        if i % 15 == 1:\n            result += 2\n        if i % 15 == 2:\n            result += 3\n        if i % 15 == 3:\n            result += 4\n        if i % 15 == 4:\n            result += 5\n        if i % 15 == 5:\n            result += 6\n        if i % 15 == 6:\n            result += 7\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85888671875
    ],
    [
      "count = 0\n    for i in range(n):\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        elif i % 3 == 0:\n            count += 1\n        elif i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -0.85888671875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -0.85888671875
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0)",
      -0.90869140625
    ],
    [
      "return sum(1 for i in range(1, n + 1) if (i % 11 == 0 or i % 13 == 0))",
      -0.90966796875
    ],
    [
      "return sum(1 for num in range(1, n) if num % 11 == 0 or num % 13 == 0)",
      -0.92431640625
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0) or (i % 13 == 0))",
      -0.92431640625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -1.0244140625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.1083984375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.1318359375
    ],
    [
      "return sum(i for i in range(1, n + 1) if i % 3 == 0 and i % 5 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.333984375
    ],
    [
      "return sum([1 for i in range(n) if (i % 3 == 0 and i % 5 == 0) or (i % 3 == 0 and i % 5!= 0)])\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -1.443359375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.494140625
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.5244140625
    ],
    [
      "return sum(\n        1\n        for i in range(1, n + 1)\n        if (i % 11 == 0 or i % 13 == 0)\n        and (i % 3 == 0 or i % 5 == 0)\n    )",
      -1.6396484375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.9619140625
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -1.9755859375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += i\n        elif i % 13 == 0:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.046875
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if (i % 11) == 0 and (i % 13) == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.189453125
    ],
    [
      "return sum(1 for i in range(1, n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.208984375
    ],
    [
      "return sum(1 for i in range(1, n + 1) if str(i).count('7') % 11 == 0 or str(i).count('7') % 13 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -2.216796875
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0) and (i % 13 == 0))\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -2.236328125
    ],
    [
      "return sum(1 for i in range(1, n) if i % 11 == 0 or i % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.236328125
    ],
    [
      "return sum(1 for i in range(1, n) if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -2.244140625
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -2.244140625
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 and i % 13 == 0) or (i % 3 == 0 and i % 5 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.328125
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.5078125
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.5078125
    ],
    [
      "return sum([1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.75
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and i!= 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -2.87890625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -3.091796875
    ],
    [
      "return sum(1 for i in range(1, n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.23828125
    ],
    [
      "count = 0\n    for i in range(n):\n        if i % 15 == 7:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.279296875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.39453125
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.39453125
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.39453125
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.39453125
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.455078125
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.48046875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n        if count == 0:\n            print(\"FizzBuzz\")\n        elif count == 1:\n            print(\"Fizz\")\n        elif count == 2:\n            print(\"Buzz\")\n        else:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.49609375
    ],
    [
      "count = 0\n    for x in range(1, n + 1):\n        if x % 3 == 0 and x % 5 == 0:\n            count += 1\n        if x % 3 == 0:\n            count += 1\n        if x % 5 == 0:\n            count += 1\n        if count == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.5
    ],
    [
      "return sum(1 for i in range(n) if i % 11 == 0 or i % 13 == 0 and i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.501953125
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 and i % 13 == 0) or (i % 3 == 0 and i % 5 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.50390625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.52734375
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 and i % 13 == 0) or (i % 3 == 0 and i % 5 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.56640625
    ],
    [
      "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.568359375
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -3.583984375
    ],
    [
      "count = 0\n    for i in range(n):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 2\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -4.15234375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n        else:\n            continue\n    return count",
      -4.2421875
    ],
    [
      "return sum([1 for i in range(1, n + 1) if (i % 11) == 0 or (i % 13) == 0])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -4.375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(fizz_buzz(int(input())))",
      -4.99609375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            if i % 13 == 0:\n                count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -5.63671875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            print(\"Fizz\")\n        elif i % 13 == 0:\n            count += 1\n            print(\"Buzz\")\n        else:\n            print(i)\n    return count\n\n\nif __name__ == '__main__':\n    print(fizz_buzz(int(input().strip())))",
      -6.4296875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        if i % 7 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
      -6.625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -8.1171875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -8.1484375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += (i % 11)\n        elif i % 13 == 0:\n            count += (i % 13)\n        else:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -9.2109375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += (i % 11)\n        elif i % 13 == 0:\n            count += (i % 13)\n        else:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -9.2109375
    ],
    [
      "return sum(1 for i in range(n) if i % 3 == 0 and i % 5 == 0)\n\n\ndef fizz_buzz_n_times(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz_n_times(50)\n    0\n    >>> fizz_buzz_n_times(78)\n    2\n    >>> fizz_buzz_n_times(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n) if i % 3 == 0 and i % 5 == 0 and i % 11 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -9.390625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n            if count > 1:\n                break\n        if i % 13 == 0:\n            count += 1\n            if count > 1:\n                break\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -9.546875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -9.6328125
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            if count % 3 == 0:\n                count += 1\n                if count % 5 == 0:\n                    count += 1\n        elif i % 13 == 0:\n            count += 1\n            if count % 3 == 0:\n                count += 1\n                if count % 5 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -9.9453125
    ],
    [
      "fizz_buzz_count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            fizz_buzz_count += 1\n        if i % 11 == 0:\n            fizz_buzz_count += i\n        if i % 13 == 0:\n            fizz_buzz_count += i\n    return fizz_buzz_count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -10.1015625
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += i\n        elif i % 13 == 0:\n            count += i\n        else:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
      -10.1796875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            print(\"FizzBuzz\")\n        elif i % 13 == 0:\n            count += 1\n            print(\"Buzz\")\n        else:\n            print(i)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -10.5859375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -10.59375
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if (i % 11 == 0) and (i % 13 == 0):\n            count += 1\n        elif i % 11 == 0:\n            count += fizz_buzz(i // 11)\n        elif i % 13 == 0:\n            count += fizz_buzz(i // 13)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -13.96875
    ],
    [
      "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += fizz_buzz(i // 11)\n        elif i % 13 == 0:\n            count += fizz_buzz(i // 13)\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
      -14.34375
    ],
    [
      "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += fizz_buzz(i)\n        elif i % 13 == 0:\n            count += buzz_buzz(i)\n    return count\n\n\ndef fizz_buzz_iterative(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz_iterative(50)\n    0\n    >>> fizz_buzz_iterative(78)\n    2\n    >>> fizz_buzz_iterative(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            yield i\n        elif i % 11 == 0:\n            yield fizz_buzz_iterative(i)\n        elif i % 13 == 0:\n            yield buzz_buzz_iterative(i)\n\n\ndef fizz_buzz_recursive(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz_recursive(50)\n    0\n    >>> fizz_buzz_recursive(78)\n    2\n    >>> fizz_buzz_recursive(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            yield i\n        elif i % 11 == 0:\n            yield fizz_buzz_recursive(i)\n        elif i % 13 == 0:\n            yield buzz_buzz_recursive(i)\n        elif i % 11 == 0 and i % 13 == 0:\n            yield i\n        else:\n            yield i\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
      -15.6953125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}