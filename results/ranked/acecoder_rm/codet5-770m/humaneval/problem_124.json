{
  "problem": {
    "task_id": "HumanEval/124",
    "prompt": "\ndef valid_date(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n    valid_date('03-11-2000') => True\n\n    valid_date('15-01-2012') => False\n\n    valid_date('04-0-2040') => False\n\n    valid_date('06-04-2020') => True\n\n    valid_date('06/04/2020') => False\n    \"\"\"\n",
    "canonical_solution": "    try:\n        date = date.strip()\n        month, day, year = date.split('-')\n        month, day, year = int(month), int(day), int(year)\n        if month < 1 or month > 12:\n            return False\n        if month in [1,3,5,7,8,10,12] and day < 1 or day > 31:\n            return False\n        if month in [4,6,9,11] and day < 1 or day > 30:\n            return False\n        if month == 2 and day < 1 or day > 29:\n            return False\n    except:\n        return False\n\n    return True\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate('03-11-2000') == True\n\n    assert candidate('15-01-2012') == False\n\n    assert candidate('04-0-2040') == False\n\n    assert candidate('06-04-2020') == True\n\n    assert candidate('01-01-2007') == True\n\n    assert candidate('03-32-2011') == False\n\n    assert candidate('') == False\n\n    assert candidate('04-31-3000') == False\n\n    assert candidate('06-06-2005') == True\n\n    assert candidate('21-31-2000') == False\n\n    assert candidate('04-12-2003') == True\n\n    assert candidate('04122003') == False\n\n    assert candidate('20030412') == False\n\n    assert candidate('2003-04') == False\n\n    assert candidate('2003-04-12') == False\n\n    assert candidate('04-2003') == False\n",
    "entry_point": "valid_date",
    "docstring": "",
    "problem_id": 124
  },
  "model_name": "codet5-770m",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "if not date:\n        return False\n\n    month_range = range(1, 13)\n    day_range = range(1, 32)\n    year_range = range(1900, 2020)\n\n    try:\n        date_parts = date.split('-')\n\n        if len(date_parts)!= 3:\n            return False\n\n        month = int(date_parts[0])\n        day = int(date_parts[1])\n        year = int(date_parts[2])\n\n        if month < 1 or month > 12:\n            return False\n\n        if month not in month_range:\n            return False\n\n        if day not in day_range:\n            return False\n\n        if year not in year_range:\n            return False\n\n        return True\n\n    except ValueError:\n        return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      0.578125
    ],
    [
      "# Your code here\n    if len(date) == 0:\n        return False\n\n    date = date.split('-')\n\n    if len(date)!= 3:\n        return False\n\n    if int(date[0]) < 1 or int(date[0]) > 12:\n        return False\n\n    if int(date[1]) < 1 or int(date[1]) > 31:\n        return False\n\n    if int(date[2]) < 1 or int(date[2]) > 30:\n        return False\n\n    if int(date[0]) < 1 or int(date[0]) > 29:\n        return False\n\n    return True\n\n\n# Tests\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      0.308837890625
    ],
    [
      "date_list = date.split('-')\n\n    if len(date_list)!= 4:\n        return False\n\n    if date_list[0]!= '03' or date_list[1]!= '11' or date_list[2]!= '2000':\n        return False\n\n    if int(date_list[3]) < 1 or int(date_list[3]) > 12:\n        return False\n\n    if int(date_list[3]) < 31:\n        return False\n\n    if int(date_list[4]) < 1 or int(date_list[4]) > 30:\n        return False\n\n    if int(date_list[4]) < 31:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      0.147705078125
    ],
    [
      "# Write your code here\n    if date == '':\n        return False\n    else:\n        date_split = date.split(\"-\")\n        if len(date_split)!= 3:\n            return False\n        else:\n            if date_split[0]!= '03' or date_split[1]!= '11' or date_split[2]!= '2000':\n                return False\n            else:\n                if int(date_split[2]) < 1 or int(date_split[2]) > 31:\n                    return False\n                elif int(date_split[2]) < 1 or int(date_split[2]) > 30:\n                    return False\n                elif int(date_split[2]) < 1 or int(date_split[2]) > 29:\n                    return False\n                else:\n                    return True\n\n\n# Tests\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      0.0198974609375
    ],
    [
      "# Your code here\n    date = date.split('-')\n    return len(date) == 3 and date[0]!= '' and date[1]!= '' and date[2]!= ''\n\n\ndef valid_date_2(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n    valid_date_2('03-11-2000') => True\n\n    valid_date_2('15-01-2012') => False\n\n    valid_date_2('04-0-2040') => False\n\n    valid_date_2('06-04-2020') => True\n\n    valid_date_2('06/04/2020') => False\n    \"\"\"\n\n    # Your code here\n    date = date.split('-')\n    return len(date) == 3 and date[0]!= '' and date[1]!= '' and date[2]!= ''\n\n\ndef valid_date_3(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for",
      -0.0777587890625
    ],
    [
      "if date == \"\":\n        return False\n    if date.split(\"-\")[0]!= \"03-11-2000\":\n        return False\n    if date.split(\"-\")[1]!= \"15-01-2012\":\n        return False\n    if date.split(\"-\")[2]!= \"04-0-2040\":\n        return False\n    if date.split(\"-\")[1] < 1 or date.split(\"-\")[1] > 12:\n        return False\n    if date.split(\"-\")[2] < 1 or date.split(\"-\")[2] > 31:\n        return False\n    if date.split(\"/\")[0] < 1 or date.split(\"/\")[0] > 31:\n        return False\n    return True\n\n\ndef test_valid_date():\n    assert valid_date(\"03-11-2000\") == True\n    assert valid_date(\"15-01-2012\") == False\n    assert valid_date(\"04-0-2040\") == False\n    assert valid_date(\"06-04-2020\") == True\n    assert valid_date(\"06/04/2020\") == False\n\n\nif __name__ == \"__main__\":\n    test_valid_date()",
      -0.3642578125
    ],
    [
      "if not date:\n        return False\n\n    split_date = date.split(\"-\")\n    if len(split_date)!= 3:\n        return False\n    month = split_date[0]\n    day = split_date[1]\n    year = split_date[2]\n\n    if month not in [\"1\", \"3\", \"5\", \"7\", \"8\", \"10\", \"12\"]:\n        return False\n\n    if int(day) > 31:\n        return False\n\n    if int(day) < 1 or int(day) > 30:\n        return False\n\n    if int(month) > 12:\n        return False\n\n    if len(year)!= 4:\n        return False\n\n    if not all(x.isdigit() for x in year):\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.419677734375
    ],
    [
      "# Your code here\n    if date == '':\n        return False\n\n    date_split = date.split('-')\n\n    if len(date_split)!= 3:\n        return False\n\n    month = int(date_split[0])\n    day = int(date_split[1])\n    year = int(date_split[2])\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1 or year > 2000:\n        return False\n\n    return True\n\n\nif __name__ == '__main__':\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert valid_date('03-11-2000') == True\n    assert valid_date('15-01-2012') == False\n    assert valid_date('04-0-2040') == False\n    assert valid_date('06-04-2020') == True\n    assert valid_date('06/04/2020') == False\n    assert valid_date('') == False\n    assert valid_date('01-11-2000') == False\n    assert valid_date('01-11-2001') == True\n    assert valid_date('01/11/2000') == True\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")",
      -0.47412109375
    ],
    [
      "if not date:\n        return False\n\n    date_list = date.split('-')\n    if len(date_list)!= 3:\n        return False\n\n    if int(date_list[0]) < 1 or int(date_list[0]) > 12:\n        return False\n\n    if int(date_list[1]) < 1 or int(date_list[1]) > 31:\n        return False\n\n    if int(date_list[2]) < 1 or int(date_list[2]) > 30:\n        return False\n\n    if int(date_list[2]) < 1 or int(date_list[2]) > 29:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.609375
    ],
    [
      "if not date:\n        return False\n\n    month_range = [1, 3, 5, 7, 8, 10, 12]\n    day_range = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    year_range = [1900, 2000, 2020]\n\n    if not all([isinstance(x, int) for x in date.split('-')]):\n        return False\n\n    if len(date.split('-'))!= 4:\n        return False\n\n    if len(date.split('/'))!= 4:\n        return False\n\n    for month in date.split('-'):\n        if month not in month_range:\n            return False\n\n    for day in date.split('-'):\n        if day not in day_range:\n            return False\n\n    for year in date.split('-'):\n        if not year.isdigit():\n            return False\n\n        if int(year) not in year_range:\n            return False\n\n    return True\n\n\ndef test_cases():\n    test_cases = [\n        ('03-11-2000', True),\n        ('15-01-2012', False),\n        ('04-0-2040', False),\n        ('06-04-2020', True),\n        ('06/04/2020', False),\n    ]\n\n    for date, expected in test_cases:\n        result = valid_date(date)\n        assert result == expected\n\n\ntest_cases()",
      -0.71142578125
    ],
    [
      "if date == '':\n        return False\n    if date[0] == '-' or date[0] == '/':\n        return False\n    days = date.count('-')\n    months = date.count('/')\n    if days > 31 or days < 1 or months > 12:\n        return False\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85693359375
    ],
    [
      "date_split = date.split('-')\n    if len(date_split)!= 4:\n        return False\n\n    month = int(date_split[0])\n    day = int(date_split[1])\n    year = int(date_split[2])\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1 or year > 2030:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85693359375
    ],
    [
      "if date == '':\n        return False\n\n    date_split = date.split('-')\n\n    if len(date_split)!= 3:\n        return False\n\n    month = int(date_split[0])\n    day = int(date_split[1])\n    year = int(date_split[2])\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1 or year > 2000:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85791015625
    ],
    [
      "if not date:\n        return False\n\n    if not date.isdigit():\n        return False\n\n    days = int(date[:2])\n    month = int(date[2:4])\n    year = int(date[4:])\n\n    if month < 1 or month > 12:\n        return False\n\n    if days < 1 or days > 31:\n        return False\n\n    if month > 2:\n        if days < 1 or days > 30:\n            return False\n\n    return True\n\n\n# Test cases\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85791015625
    ],
    [
      "if date == '':\n        return False\n\n    try:\n        month, day, year = date.split('-')\n    except ValueError:\n        return False\n\n    if month.isdigit() and day.isdigit() and year.isdigit():\n        if int(month) > 12:\n            return False\n        if int(day) > 31:\n            return False\n        if int(day) < 1 or int(day) > 30:\n            return False\n        if int(month) < 1:\n            return False\n        return True\n    else:\n        return False",
      -0.85791015625
    ],
    [
      "if date == '':\n        return False\n    \n    date_list = date.split('-')\n    if len(date_list) == 4:\n        month = int(date_list[0])\n        day = int(date_list[1])\n        year = int(date_list[2])\n        if month < 1 or month > 12:\n            return False\n        if day < 1 or day > 31:\n            return False\n        if year < 1 or year > 2020:\n            return False\n    else:\n        return False\n    \n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85791015625
    ],
    [
      "if date == \"\":\n        return False\n    \n    date_parts = date.split('-')\n    if len(date_parts)!= 3:\n        return False\n    \n    if int(date_parts[0]) > 12:\n        return False\n    \n    if int(date_parts[1]) > 31:\n        return False\n    \n    if int(date_parts[2]) < 1 or int(date_parts[2]) > 31:\n        return False\n    \n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85791015625
    ],
    [
      "try:\n        date_string = date.split('-')\n        date_string = [int(i) for i in date_string]\n        if len(date_string)!= 4:\n            return False\n        if date_string[0] > 12:\n            return False\n        if date_string[1] < 1 or date_string[1] > 31:\n            return False\n        if date_string[2] < 1 or date_string[2] > 30:\n            return False\n        if date_string[3] < 1 or date_string[3] > 29:\n            return False\n        return True\n    except:\n        return False\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85791015625
    ],
    [
      "if not date:\n        return False\n\n    if not isinstance(date, str):\n        return False\n\n    if not date.startswith('03-'):\n        return False\n\n    if not date.endswith('-'):\n        return False\n\n    date_format = date.split('-')\n    if len(date_format)!= 3:\n        return False\n\n    month_1, day_1, year_1 = date_format\n\n    if not month_1.isdigit() or not day_1.isdigit() or not year_1.isdigit():\n        return False\n\n    month_2, day_2, year_2 = date_format[1:3]\n\n    if month_1 < 1 or month_1 > 12:\n        return False\n\n    if month_2 < 1 or month_2 > 12:\n        return False\n\n    if day_1 < 1 or day_1 > 31:\n        return False\n\n    if day_2 < 1 or day_2 > 30:\n        return False\n\n    if year_1 < 1 or year_1 > 2020:\n        return False\n\n    return True",
      -0.85791015625
    ],
    [
      "# Write your code here\n    if not date:\n        return False\n\n    days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31]\n\n    month = date.split('-')[0]\n\n    if month not in ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']:\n        return False\n\n    if not date.split('-')[1].isdigit():\n        return False\n\n    if int(date.split('-')[1]) not in days:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85791015625
    ],
    [
      "if date == \"\":\n        return False\n    date_list = date.split(\"-\")\n    if len(date_list)!= 3:\n        return False\n    days_list = [int(day) for day in date_list[1].split(\"/\")]\n    if days_list[0] < 1 or days_list[0] > 31:\n        return False\n    if days_list[1] < 1 or days_list[1] > 30:\n        return False\n    if days_list[2] < 1 or days_list[2] > 29:\n        return False\n    if int(date_list[0]) > 12:\n        return False\n    return True\n\n\nprint(valid_date(\"03-11-2000\"))\nprint(valid_date(\"15-01-2012\"))\nprint(valid_date(\"04-0-2040\"))\nprint(valid_date(\"06-04-2020\"))\nprint(valid_date(\"06/04/2020\"))",
      -0.8583984375
    ],
    [
      "if date == \"\":\n        return False\n\n    if \"-\" not in date:\n        return False\n\n    try:\n        month, day, year = date.split(\"-\")\n    except:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1 or year > 9999:\n        return False\n\n    return True\n\n\n# Test Cases\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.8583984375
    ],
    [
      "try:\n        if len(date) == 0:\n            return False\n        date_parts = date.split('-')\n        month = int(date_parts[0])\n        day = int(date_parts[1])\n        year = int(date_parts[2])\n        if month < 1 or month > 12:\n            return False\n        if day < 1 or day > 31:\n            return False\n        if year < 1900 or year > 2030:\n            return False\n        return True\n    except:\n        return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.8583984375
    ],
    [
      "if not date:\n        return False\n\n    date_list = date.split(\"-\")\n    month = date_list[0]\n    day = date_list[1]\n    year = date_list[2]\n\n    if month.isdigit():\n        month = int(month)\n    else:\n        return False\n\n    if day.isdigit():\n        day = int(day)\n    else:\n        return False\n\n    if year.isdigit():\n        year = int(year)\n    else:\n        return False\n\n    if month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if day < 1 or day > 30:\n        return False\n\n    return True",
      -0.8583984375
    ],
    [
      "if date == '':\n        return False\n    date = date.split('-')\n    if len(date)!= 3:\n        return False\n    if int(date[0]) < 1 or int(date[0]) > 12:\n        return False\n    if int(date[1]) < 1 or int(date[1]) > 31:\n        return False\n    if int(date[2]) < 1 or int(date[2]) > 30:\n        return False\n    if int(date[2]) < 1 or int(date[2]) > 29:\n        return False\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    date_list = date.split('-')\n\n    if len(date_list)!= 3:\n        return False\n\n    if not (1 <= int(date_list[0]) <= 12):\n        return False\n\n    if not (1 <= int(date_list[1]) <= 31):\n        return False\n\n    if not (1 <= int(date_list[2]) <= 30):\n        return False\n\n    if not (1 <= int(date_list[2]) <= 29):\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "# Write your code here\n    if len(date) == 0:\n        return False\n\n    days = date.count('-')\n    month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31]\n\n    if days < 1 or days > 31:\n        return False\n\n    if date.count('-') < 1 or date.count('-') > 12:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    date_split = date.split(\"-\")\n    if len(date_split)!= 3:\n        return False\n\n    month_num = date_split[0]\n    day_num = date_split[1]\n    year_num = date_split[2]\n\n    if month_num.isdigit() == False:\n        return False\n\n    if int(month_num) < 1 or int(month_num) > 12:\n        return False\n\n    if int(day_num) < 1 or int(day_num) > 31:\n        return False\n\n    if int(year_num) < 1900 or int(year_num) > 2020:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    date = date.split('-')\n\n    if len(date)!= 3:\n        return False\n\n    month_num = int(date[0])\n    day_num = int(date[1])\n    year = int(date[2])\n\n    if month_num < 1 or month_num > 12:\n        return False\n\n    if day_num < 1 or day_num > 31:\n        return False\n\n    if day_num < 1 or day_num > 30:\n        return False\n\n    if day_num < 1 or day_num > 29:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "# Your code here\n    return True",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n    # Your code here\n    date = date.split('-')\n    if len(date)!= 4:\n        return False\n    month_1, day_1, year = date\n    month_1 = int(month_1)\n    day_1 = int(day_1)\n    year = int(year)\n    if month_1 < 1 or month_1 > 12:\n        return False\n    if day_1 < 1 or day_1 > 31:\n        return False\n    if month_1 == 4 and day_1 == 30:\n        return False\n    if month_1 == 5 and day_1 == 29:\n        return False\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "# Your code here\n    if not date:\n        return False\n\n    date_list = date.split(\"-\")\n\n    if len(date_list)!= 3:\n        return False\n\n    if date_list[0] < \"01\" or date_list[0] > \"12\":\n        return False\n\n    if date_list[1] < \"01\" or date_list[1] > \"31\":\n        return False\n\n    if date_list[2] < \"01\" or date_list[2] > \"30\":\n        return False\n\n    if date_list[2].isdigit() == False:\n        return False\n\n    if date_list[0]!= date_list[1] or date_list[0]!= date_list[2]:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if date == \"\":\n        return False\n\n    date_list = date.split(\"-\")\n    if len(date_list)!= 3:\n        return False\n\n    if int(date_list[0]) < 1 or int(date_list[0]) > 12:\n        return False\n\n    if int(date_list[1]) < 1 or int(date_list[1]) > 31:\n        return False\n\n    if int(date_list[2]) < 1 or int(date_list[2]) > 30:\n        return False\n\n    if int(date_list[2]) < 1 or int(date_list[2]) > 29:\n        return False\n\n    return True\n\n\nprint(valid_date(\"03-11-2000\"))\nprint(valid_date(\"15-01-2012\"))\nprint(valid_date(\"04-0-2040\"))\nprint(valid_date(\"06-04-2020\"))\nprint(valid_date(\"06/04/2020\"))",
      -0.85888671875
    ],
    [
      "# Your code here\n    if not date:\n        return False\n\n    date_split = date.split('-')\n\n    if len(date_split)!= 3:\n        return False\n\n    if len(date_split)!= 3:\n        return False\n\n    if not date_split[0].isdigit():\n        return False\n\n    if not date_split[1].isdigit():\n        return False\n\n    if not date_split[2].isdigit():\n        return False\n\n    if len(date_split[0])!= 2 or len(date_split[1])!= 2 or len(date_split[2])!= 4:\n        return False\n\n    if int(date_split[0]) < 1 or int(date_split[0]) > 12:\n        return False\n\n    if int(date_split[1]) < 1 or int(date_split[1]) > 31:\n        return False\n\n    if int(date_split[2]) < 1 or int(date_split[2]) > 30:\n        return False\n\n    if int(date_split[2]) < 1 or int(date_split[2]) > 29:\n        return False\n\n    return True",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    date = date.split(\"-\")\n    if len(date)!= 3:\n        return False\n\n    try:\n        month = int(date[0])\n        day = int(date[1])\n        year = int(date[2])\n    except ValueError:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\nprint(valid_date('05/04/2020'))",
      -0.85888671875
    ],
    [
      "if date == \"\":\n        return False\n    date = date.split(\"-\")\n    if len(date) == 3:\n        try:\n            month = int(date[0])\n            day = int(date[1])\n            year = int(date[2])\n        except:\n            return False\n    else:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1900 or year > 2020:\n        return False\n\n    return True",
      -0.85888671875
    ],
    [
      "if not date: return False\n    try:\n        date = date.split('-')\n        month = int(date[0])\n        day = int(date[1])\n        year = int(date[2])\n    except:\n        return False\n    if month < 1 or month > 12: return False\n    if day < 1 or day > 31: return False\n    if year < 1 or year > 9999: return False\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    try:\n        date = date.split('-')\n        month_num = int(date[0])\n        day_num = int(date[1])\n        year_num = int(date[2])\n    except:\n        return False\n\n    if month_num < 1 or month_num > 12:\n        return False\n\n    if day_num < 1 or day_num > 31:\n        return False\n\n    if year_num < 1900 or year_num > 2020:\n        return False\n\n    return True",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    try:\n        month, day, year = date.split('-')\n    except:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    try:\n        day = int(day)\n    except:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    try:\n        month = int(month)\n    except:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    try:\n        year = int(year)\n    except:\n        return False\n\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if not date:\n        return False\n\n    if '-' in date:\n        date = date.split('-')\n        month_1 = int(date[0])\n        month_2 = int(date[1])\n        day_1 = int(date[2])\n        day_2 = int(date[3])\n\n        if month_1 <= 1 or month_2 >= 12:\n            return False\n\n        if month_1!= month_2:\n            return False\n\n        if day_1 <= 1 or day_2 > 31:\n            return False\n\n        return True\n\n    else:\n        return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -0.85888671875
    ],
    [
      "if date == '':\n        return False\n\n    date_list = date.split('-')\n\n    month_1 = int(date_list[0])\n    day = int(date_list[1])\n    year = int(date_list[2])\n\n    if month_1 < 1 or month_1 > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if month_1 == 4 and day < 1 or month_1 == 6 and day < 30:\n        return False\n\n    if month_1 == 9 and day < 1 or month_1 == 11 and day < 29:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -1.330078125
    ],
    [
      "if not date:\n        return False\n\n    date = date.split('-')\n\n    if len(date)!= 4:\n        return False\n\n    month = int(date[0])\n    day = int(date[1])\n    year = int(date[2])\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1 or year > 2018:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -1.3427734375
    ],
    [
      "if not date:\n        return False\n\n    date_parts = date.split('-')\n    if len(date_parts)!= 3:\n        return False\n\n    if int(date_parts[0]) < 1 or int(date_parts[0]) > 12:\n        return False\n\n    if int(date_parts[1]) < 1 or int(date_parts[1]) > 31:\n        return False\n\n    if int(date_parts[2]) < 1 or int(date_parts[2]) > 30:\n        return False\n\n    if int(date_parts[2]) < 1 or int(date_parts[2]) > 29:\n        return False\n\n    return True\n\n\ndef valid_date_v2(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n    valid_date_v2('03-11-2000') => True\n\n    valid_date_v2('15-01-2012') => False\n\n    valid_date_v2('04-0-2040') => False\n\n    valid_date_v2('06-04-2020') => True\n\n    valid_date_v2('06/04/2020') => False\n    \"\"\"\n    if not date:\n        return False\n\n    date_parts = date.split('-')\n    if len(date_parts)!= 3:\n        return False\n\n    if int(date_parts[0]) < 1 or int(date_parts[0]) > 12:",
      -1.34765625
    ],
    [
      "try:\n        month = int(date[0:2])\n        day = int(date[3:5])\n        year = int(date[5:7])\n\n        if month < 1 or month > 12:\n            return False\n\n        if day < 1 or day > 31:\n            return False\n\n        if month == 2:\n            if day < 1 or day > 30:\n                return False\n\n        if month > 3:\n            if day < 1 or day > 29:\n                return False\n\n        if month == 4 or month == 5 or month == 6 or month == 7 or month == 8 or month == 9 or month == 10:\n            if day < 1 or day > 29:\n                return False\n\n        if month == 12:\n            if day < 1 or day > 31:\n                return False\n\n        if len(date)!= 7:\n            return False\n\n        return True\n    except:\n        return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\n\ndef valid_date_2(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n    valid_date_2('03-11-2000') => True\n\n    valid_date_2('15-01-2012') => False\n\n    valid",
      -1.4306640625
    ],
    [
      "if date == \"\":\n        return False\n    if date[0] == '-':\n        return False\n    try:\n        mm, dd, yyyy = date.split('-')\n        if mm.isdigit() and int(mm) <= 12:\n            if int(dd) < 1 or int(dd) > 31:\n                return False\n            if int(yyyy) < 1900 or int(yyyy) > 2030:\n                return False\n        else:\n            return False\n    except:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -1.431640625
    ],
    [
      "# Write your code here\n    if date == '':\n        return False\n    elif date.split('-')[0] == '':\n        return False\n    elif date.split('-')[1] == '':\n        return False\n    elif date.split('-')[2] == '':\n        return False\n    elif date.split('-')[2] == '0000':\n        return False\n    elif date.split('-')[2] == '0100':\n        return False\n    elif date.split('-')[2] == '0101':\n        return False\n    elif date.split('-')[2] == '0102':\n        return False\n    elif date.split('-')[2] == '0103':\n        return False\n    elif date.split('-')[2] == '0104':\n        return False\n    elif date.split('-')[2] == '0105':\n        return False\n    elif date.split('-')[2] == '0106':\n        return False\n    elif date.split('-')[2] == '0107':\n        return False\n    elif date.split('-')[2] == '0108':\n        return False\n    elif date.split('-')[2] == '0109':\n        return False\n    elif date.split('-')[2] == '0110':\n        return False\n    elif date.split('-')[2] == '0111':\n        return False\n    elif date.split('-')[2] == '0200':\n        return False\n    elif date.split('-')[2] == '0201':\n        return False\n    elif date.split('-')[2] == '0202':\n        return False\n    elif date.split('-')[2] == '0203':\n        return False\n    elif date.split('-')[2] == '0204':\n        return False\n    elif date.split('-')[2] == '0205':\n        return False\n    elif date.split('-')[2] == '0206':\n        return False\n    elif date.split('-')[2] == '0207",
      -1.802734375
    ],
    [
      "if not date:\n        return False\n\n    date = date.strip()\n\n    if len(date) == 0:\n        return False\n\n    month_list = [1, 3, 5, 7, 8, 10, 12]\n    day_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n\n    if date[0] not in month_list:\n        return False\n\n    if date[1] not in day_list:\n        return False\n\n    month = int(date[0])\n    day = int(date[1])\n    year = int(date[2:])\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1900 or year > 2100:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -1.943359375
    ],
    [
      "if not date:\n        return False\n\n    date = date.split('-')\n    if len(date)!= 3:\n        return False\n\n    month = int(date[0])\n    if month < 1 or month > 12:\n        return False\n\n    day = int(date[1])\n    if day < 1 or day > 31:\n        return False\n\n    year = int(date[2])\n    if year < 1900 or year > 2020:\n        return False\n\n    return True\n\n\ndef test_valid_date():\n    assert valid_date('03-11-2000') == True\n    assert valid_date('15-01-2012') == False\n    assert valid_date('04-0-2040') == False\n    assert valid_date('06-04-2020') == True\n    assert valid_date('06/04/2020') == False\n    assert valid_date('') == False\n    assert valid_date('06-04-') == False\n    assert valid_date('06/04/') == False\n    assert valid_date('03-11-2020') == True\n    assert valid_date('06/04/2020') == False\n    assert valid_date('03-11-2020-01') == False\n    assert valid_date('03-11-2020-01/01') == False\n    assert valid_date('03-11-2020-01/01/02') == False\n    assert valid_date('03-11-2020-01/01/02/03') == False\n    assert valid_date('03-11-2020-01/01/02/03/04') == False\n    assert valid_date('03-11-2020-01/01/02/03/04/05') == False\n    assert valid_date('03-11-2020-01/01/02/03/04/05/06') == False\n    assert valid_date('03-11-2020-01/01/02/03/04/05/06/07') == False\n    assert valid_date('03-11-2020-01/01/02/03/04/05/06/07/08')",
      -1.99609375
    ],
    [
      "if not date:\n        return False\n    days = date.split('-')\n    if len(days)!= 3:\n        return False\n    if int(days[0]) < 1 or int(days[0]) > 31:\n        return False\n    if int(days[1]) < 1 or int(days[1]) > 30:\n        return False\n    if int(days[2]) < 1 or int(days[2]) > 29:\n        return False\n    months = [1, 3, 5, 7, 8, 10, 12]\n    if int(days[0]) not in months:\n        return False\n    if int(days[1]) not in months:\n        return False\n    if int(days[2]) not in months:\n        return False\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -2.125
    ],
    [
      "if date == \"\":\n        return False\n    else:\n        try:\n            date_parts = date.split('-')\n            if len(date_parts)!= 3:\n                return False\n            else:\n                month = date_parts[0]\n                day = date_parts[1]\n                year = date_parts[2]\n                if month == '03' and day < '01' or month == '03' and day > '31':\n                    return False\n                elif month == '05' and day < '01' or month == '05' and day > '30':\n                    return False\n                elif month == '06' and day < '01' or month == '06' and day > '29':\n                    return False\n                elif month == '07' and day < '01' or month == '07' and day > '31':\n                    return False\n                elif month == '08' and day < '01' or month == '08' and day > '30':\n                    return False\n                elif month == '09' and day < '01' or month == '09' and day > '29':\n                    return False\n                elif month == '10' and day < '01' or month == '10' and day > '31':\n                    return False\n                else:\n                    return True\n        except ValueError:\n            return False",
      -2.197265625
    ],
    [
      "if len(date) == 0:\n        return False\n\n    days_list = [1, 3, 5, 7, 8, 10, 12]\n    month_list = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']\n    year_list = [2000, 2020]\n    date_format ='mm-dd-yyyy'\n\n    for month in month_list:\n        if month not in date:\n            return False\n\n    for day in days_list:\n        if day < 1 or day > 31:\n            return False\n\n    for year in year_list:\n        if not (year % 400 == 0 or year % 4 == 0):\n            return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -2.263671875
    ],
    [
      "if not date:\n        return False\n    try:\n        date_parts = date.split('-')\n        if len(date_parts)!= 3:\n            return False\n        month = int(date_parts[0])\n        day = int(date_parts[1])\n        year = int(date_parts[2])\n        if month < 1 or month > 12:\n            return False\n        if day < 1 or day > 31:\n            return False\n        if year < 1900 or year > 2020:\n            return False\n        return True\n    except Exception as e:\n        return False\n\n\n# test case 1\nprint(valid_date('03-11-2000'))\n# expected output: True\n\n# test case 2\nprint(valid_date('15-01-2012'))\n# expected output: False\n\n# test case 3\nprint(valid_date('04-0-2040'))\n# expected output: False\n\n# test case 4\nprint(valid_date('06-04-2020'))\n# expected output: True\n\n# test case 5\nprint(valid_date('06/04/2020'))\n# expected output: False\n\n# test case 6\nprint(valid_date('02-02-2020'))\n# expected output: False\n\n# test case 7\nprint(valid_date('02-02-2020-01'))\n# expected output: False\n\n# test case 8\nprint(valid_date('02-02-2020-01-01'))\n# expected output: False\n\n# test case 9\nprint(valid_date('02-02-2020-01-02'))\n# expected output: True\n\n# test case 10\nprint(valid_date('02-02-2020-01-02-01'))\n# expected output: False\n\n# test case 11\nprint(valid_date('02-02-2020-01-02-02'))\n# expected output: False\n\n# test case 12\nprint(valid_date('02-02-2020-01-02-03'))\n# expected output: True\n\n# test case 13\nprint(valid_date('02-02-2020-01-02-03-02'))\n# expected",
      -2.4765625
    ],
    [
      "if date == '':\n        return False\n\n    try:\n        date_split = date.split('-')\n        month = date_split[0]\n        day = date_split[1]\n        year = date_split[2]\n    except:\n        return False\n\n    try:\n        month = int(month)\n    except:\n        return False\n\n    try:\n        day = int(day)\n    except:\n        return False\n\n    try:\n        year = int(year)\n    except:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if year < 1900 or year > 2000:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\nprint(valid_date('03/11/2000'))",
      -2.767578125
    ],
    [
      "date_list = date.split('-')\n    if len(date_list) == 0:\n        return False\n    if len(date_list) == 1:\n        return True\n    month_list = list(map(int, date_list[0].split('-')))\n    day_list = list(map(int, date_list[1].split('-')))\n    year_list = list(map(int, date_list[2].split('-')))\n    if len(month_list) < 1 or len(day_list) < 1 or len(year_list) < 1:\n        return False\n    if month_list[0] < 1 or month_list[0] > 12:\n        return False\n    if month_list[1] < 1 or month_list[1] > 12:\n        return False\n    if day_list[0] < 1 or day_list[0] > 31:\n        return False\n    if day_list[1] < 1 or day_list[1] > 30:\n        return False\n    if month_list[2] < 1 or month_list[2] > 12:\n        return False\n    if day_list[2] < 1 or day_list[2] > 29:\n        return False\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -2.826171875
    ],
    [
      "if not date:\n        return False\n\n    date_split = date.split('-')\n    if len(date_split) == 1:\n        return False\n\n    if len(date_split) > 3:\n        return False\n\n    if len(date_split) < 3:\n        return False\n\n    if date_split[0].isdigit() == False:\n        return False\n\n    if int(date_split[0]) < 1 or int(date_split[0]) > 12:\n        return False\n\n    if date_split[1].isdigit() == False:\n        return False\n\n    if int(date_split[1]) < 1 or int(date_split[1]) > 31:\n        return False\n\n    if date_split[2].isdigit() == False:\n        return False\n\n    if int(date_split[2]) < 1 or int(date_split[2]) > 30:\n        return False\n\n    if date_split[3].isdigit() == False:\n        return False\n\n    if date_split[4].isdigit() == False:\n        return False\n\n    date_split[4] = date_split[4].replace('-', '')\n    if len(date_split[4]) < 2:\n        return False\n\n    if len(date_split[4]) > 2:\n        return False\n\n    if date_split[5].isdigit() == False:\n        return False\n\n    if date_split[5] < 1 or date_split[5] > 29:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\nprint(valid_date('01/01/2020'))\nprint(valid_date('01/01/2020'))",
      -2.9453125
    ],
    [
      "# Your code here\n\n    # Write your code here\n    if not date:\n        return False\n\n    # Your code here\n    if not date.startswith('03-') and not date.startswith('05-') and not date.startswith('07-') and not date.startswith('08-') and not date.startswith('10-') and not date.startswith('12-'):\n        return False\n\n    # Your code here\n    if not date.endswith('-'):\n        return False\n\n    # Your code here\n    date_split = date.split('-')\n\n    # Your code here\n    if len(date_split)!= 3:\n        return False\n\n    # Your code here\n    if not date_split[0].isdigit():\n        return False\n\n    # Your code here\n    if not date_split[1].isdigit():\n        return False\n\n    # Your code here\n    if not date_split[2].isdigit():\n        return False\n\n    # Your code here\n    if not date_split[0] >= 1 and not date_split[0] <= 12:\n        return False\n\n    # Your code here\n    if not date_split[1] >= 1 and not date_split[1] <= 31:\n        return False\n\n    # Your code here\n    if not date_split[2] >= 1 and not date_split[2] <= 31:\n        return False\n\n    # Your code here\n    if not date_split[0] in ['04', '06', '08', '10', '12'] and not date_split[1] in ['1', '3', '5', '7', '8', '10', '12'] and not date_split[2] in ['4', '6', '9', '11']:\n        return False\n\n    # Your code here\n    return True\n\n\n# Testing\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -3.22265625
    ],
    [
      "if date == '':\n        return False\n\n    month_list = ['01', '03', '05', '07', '08', '10', '12']\n\n    month_dict = {\n        '01': 1,\n        '03': 3,\n        '05': 5,\n        '07': 7,\n        '08': 8,\n        '10': 10,\n        '12': 12\n    }\n\n    month_num = int(date[0:2])\n\n    day_num = int(date[2:4])\n\n    year_num = int(date[4:])\n\n    if month_num not in month_list:\n        return False\n\n    if month_num == 1 and day_num < 1 or month_num == 3 and day_num > 31:\n        return False\n\n    if month_num == 4 and day_num < 1 or month_num == 6 and day_num > 30:\n        return False\n\n    if month_num == 9 and day_num < 1 or month_num == 11 and day_num > 29:\n        return False\n\n    if month_num == 12 and day_num < 1 or month_num == 2:\n        return False\n\n    if month_num < 1 or month_num > 12:\n        return False\n\n    if len(date)!= 10:\n        return False\n\n    if '-' not in date:\n        return False\n\n    for i in range(len(date)):\n        if date[i] not in month_dict:\n            return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -3.30859375
    ],
    [
      "# Your code here\n    if not date:\n        return False\n\n    date_list = date.split('-')\n\n    if len(date_list)!= 4:\n        return False\n\n    if len(date_list[0])!= 2:\n        return False\n\n    if len(date_list[1])!= 2:\n        return False\n\n    if len(date_list[2])!= 4:\n        return False\n\n    if date_list[0] < '03' or date_list[0] > '12':\n        return False\n\n    if date_list[1] < '05' or date_list[1] > '31':\n        return False\n\n    if date_list[2] < '07' or date_list[2] > '30':\n        return False\n\n    if date_list[3] < '09' or date_list[3] > '29':\n        return False\n\n    if date_list[3] < '11' or date_list[3] > '12':\n        return False\n\n    if date_list[2] < '04' or date_list[2] > '2040':\n        return False\n\n    if date_list[3] < '06' or date_list[3] > '2020':\n        return False\n\n    return True",
      -3.5
    ],
    [
      "if not date:\n        return False\n    else:\n        if '-' in date:\n            return True\n        else:\n            return False\n\n\ndef valid_date_2(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should be in the format: mm-dd-yyyy\n\n    for example: \n    valid_date_2('03-11-2000') => True\n\n    valid_date_2('15-01-2012') => False\n\n    valid_date_2('04-0-2040') => False\n\n    valid_date_2('06-04-2020') => True\n\n    valid_date_2('06/04/2020') => False\n    \"\"\"\n    if not date:\n        return False\n    else:\n        if '-' in date:\n            return True\n        else:\n            return False\n\n\ndef valid_date_3(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.\n    4. The date should",
      -3.828125
    ],
    [
      "if date == '':\n        return False\n\n    date_parts = date.split('-')\n    if len(date_parts)!= 3:\n        return False\n\n    if date_parts[0].isdigit() == False or date_parts[1].isdigit() == False:\n        return False\n\n    if date_parts[2].isdigit() == False:\n        return False\n\n    if int(date_parts[0]) <= 1 or int(date_parts[0]) >= 12:\n        return False\n\n    if int(date_parts[1]) <= 1 or int(date_parts[1]) >= 31:\n        return False\n\n    if int(date_parts[2]) <= 1 or int(date_parts[2]) >= 30:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -4.3359375
    ],
    [
      "if not date:\n        return False\n    \n    if len(date)!= 10:\n        return False\n    \n    if date[0]!= '-':\n        return False\n    \n    if date[1]!= '-':\n        return False\n    \n    if date[2]!= '-':\n        return False\n    \n    if date[3]!= '-':\n        return False\n    \n    if date[4]!= '-':\n        return False\n    \n    if date[5]!= '-':\n        return False\n    \n    if date[6]!= '-':\n        return False\n    \n    if date[7]!= '-':\n        return False\n    \n    if date[8]!= '-':\n        return False\n    \n    if date[9]!= '-':\n        return False\n    \n    if date[10]!= '-':\n        return False\n    \n    if date[11]!= '-':\n        return False\n    \n    if date[12]!= '-':\n        return False\n    \n    if date[13]!= '-':\n        return False\n    \n    if date[14]!= '-':\n        return False\n    \n    if date[15]!= '-':\n        return False\n    \n    if date[16]!= '-':\n        return False\n    \n    if date[17]!= '-':\n        return False\n    \n    if date[18]!= '-':\n        return False\n    \n    if date[19]!= '-':\n        return False\n    \n    if date[20]!= '-':\n        return False\n    \n    if date[21]!= '-':\n        return False\n    \n    if date[22]!= '-':\n        return False\n    \n    if date[23]!= '-':\n        return False\n    \n    if date[24]!= '-':\n        return False\n    \n    if date[25]!= '-':\n        return False\n    \n    if date[26]!= '-':\n        return False\n    \n    if date[27]!= '-':\n        return False\n    \n    if date[28]!= '-':\n        return False\n    \n    if date[29]!= '-':\n        return False\n    \n    return",
      -4.41015625
    ],
    [
      "# Write your code here\n    if len(date) == 0:\n        return False\n\n    date = date.split('-')\n    if len(date)!= 3:\n        return False\n\n    month, day, year = date\n\n    if month not in range(1,13):\n        return False\n\n    if day < 1:\n        return False\n\n    if day > 31:\n        return False\n\n    if month in range(1,4) or month in range(5,7):\n        if day < 30:\n            return False\n    else:\n        if day < 1 or day > 29:\n            return False\n\n    if month!= 2:\n        if month < 1 or month > 12:\n            return False\n\n    if len(year)!= 4:\n        return False\n\n    month, day, year = year.split('-')\n    if month not in range(1,13):\n        return False\n\n    if day < 1:\n        return False\n\n    if day > 31:\n        return False\n\n    if month in range(1,4) or month in range(5,7):\n        if day < 30:\n            return False\n    else:\n        if day < 1 or day > 29:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    print(valid_date('03-11-2000'))\n    print(valid_date('15-01-2012'))\n    print(valid_date('04-0-2040'))\n    print(valid_date('06-04-2020'))\n\n    print(valid_date('06/04/2020'))",
      -4.5078125
    ],
    [
      "if not date:\n        return False\n\n    if date[0] == '-':\n        return False\n\n    if len(date)!= 10:\n        return False\n\n    if not date[0].isdigit():\n        return False\n\n    if not date[1].isdigit():\n        return False\n\n    if not date[2].isdigit():\n        return False\n\n    if not date[3].isdigit():\n        return False\n\n    if not date[4].isdigit():\n        return False\n\n    if not date[5].isdigit():\n        return False\n\n    if not date[6].isdigit():\n        return False\n\n    if not date[7].isdigit():\n        return False\n\n    if not date[8].isdigit():\n        return False\n\n    if not date[9].isdigit():\n        return False\n\n    if not date[10].isdigit():\n        return False\n\n    if not date[11].isdigit():\n        return False\n\n    if not date[12].isdigit():\n        return False\n\n    if not date[13].isdigit():\n        return False\n\n    if not date[14].isdigit():\n        return False\n\n    if not date[15].isdigit():\n        return False\n\n    if not date[16].isdigit():\n        return False\n\n    if not date[17].isdigit():\n        return False\n\n    if not date[18].isdigit():\n        return False\n\n    if not date[19].isdigit():\n        return False\n\n    if not date[20].isdigit():\n        return False\n\n    if not date[21].isdigit():\n        return False\n\n    if not date[22].isdigit():\n        return False\n\n    if not date[23].isdigit():\n        return False\n\n    if not date[24].isdigit():\n        return False\n\n    if not date[25].isdigit():\n        return False\n\n    if not date[26].isdigit():\n        return False\n\n    if not date[27].isdigit():\n        return False\n\n    if not date[28].isdigit():\n        return False\n\n    if not date",
      -4.57421875
    ],
    [
      "if not date:\n        return False\n\n    if not date.replace(\"-\", \"\").isnumeric():\n        return False\n\n    month_dict = {\"01\": \"January\", \"02\": \"February\", \"03\": \"March\", \"04\": \"April\", \"05\": \"May\", \"06\": \"June\", \"07\": \"July\", \"08\": \"August\", \"09\": \"September\", \"10\": \"October\", \"11\": \"November\", \"12\": \"December\"}\n    month_list = list(month_dict.keys())\n    day_dict = {\"01\": 31, \"02\": 30, \"03\": 31, \"04\": 30, \"05\": 31, \"06\": 30, \"07\": 31, \"08\": 30, \"09\": 31, \"10\": 30, \"11\": 31, \"12\": 30}\n    day_list = list(day_dict.keys())\n\n    if not date.replace(\"-\", \"\").isalpha():\n        return False\n\n    if date.split(\"-\")[1] not in month_list:\n        return False\n\n    if int(date.split(\"-\")[0]) not in day_list:\n        return False\n\n    return True\n\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -4.6484375
    ],
    [
      "if not date:\n        return False\n\n    month_dict = {'1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9, '10':10, '11':11, '12':12}\n    day_dict = {'1':1, '2':2, '3':3, '4':4, '5':5, '6':6, '7':7, '8':8, '9':9, '10':10, '11':11, '12':12}\n\n    date_parts = date.split('-')\n\n    if len(date_parts)!= 3:\n        return False\n\n    month = date_parts[0]\n    day = date_parts[1]\n    year = date_parts[2]\n\n    if month not in month_dict.keys():\n        return False\n\n    if month_dict[month] < 1 or month_dict[month] > 12:\n        return False\n\n    if day not in day_dict.keys():\n        return False\n\n    if day_dict[day] < 1 or day_dict[day] > 31:\n        return False\n\n    if year.split('/')[0] not in ['1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019']:\n        return False\n\n    return True\n\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -4.671875
    ],
    [
      "if not date:\n        return False\n    date_list = date.split('-')\n    if len(date_list)!= 4:\n        return False\n    month_list = [int(i) for i in date_list[0].split('-')]\n    if month_list[0] < 1 or month_list[0] > 12:\n        return False\n    day_list = [int(i) for i in date_list[1].split('-')]\n    if day_list[0] < 1 or day_list[0] > 31:\n        return False\n    month_list = [i+1 for i in month_list]\n    month_list.sort()\n    if month_list[0] == month_list[1] == month_list[2] == month_list[3]:\n        return False\n    if month_list[1] < 1 or month_list[1] > 30:\n        return False\n    if month_list[2] < 1 or month_list[2] > 29:\n        return False\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -4.6875
    ],
    [
      "if date == \"\":\n        return False\n\n    try:\n        date_split = date.split(\"-\")\n        date_split[0]\n        date_split[1]\n        date_split[2]\n        date_split[3]\n    except ValueError:\n        return False\n\n    if len(date_split)!= 4:\n        return False\n\n    if int(date_split[0]) < 1 or int(date_split[0]) > 12:\n        return False\n\n    if int(date_split[1]) < 1 or int(date_split[1]) > 31:\n        return False\n\n    if int(date_split[2]) < 1 or int(date_split[2]) > 30:\n        return False\n\n    if int(date_split[3]) < 1 or int(date_split[3]) > 29:\n        return False\n\n    date_split_string = \"-\".join(date_split)\n    if date_split_string!= date:\n        return False\n\n    return True\n\n\nprint(valid_date(\"03-11-2000\"))\nprint(valid_date(\"15-01-2012\"))\nprint(valid_date(\"04-0-2040\"))\nprint(valid_date(\"06-04-2020\"))\nprint(valid_date(\"06/04/2020\"))",
      -4.78125
    ],
    [
      "if not date:\n        return False\n    if not date.strip():\n        return False\n    if not date.startswith('03-'):\n        return False\n    if not date.endswith('-'):\n        return False\n    if not date.count('/') == 3:\n        return False\n    if date.count('-') > 1:\n        return False\n    if date.count(':') > 1:\n        return False\n    date_list = date.split('-')\n    month_list = date_list[0].split('/')\n    day_list = date_list[1].split('/')\n    year_list = date_list[2].split('/')\n    if len(month_list)!= 3 or len(day_list)!= 3 or len(year_list)!= 4:\n        return False\n    for i in range(3):\n        if int(month_list[i]) < 1 or int(month_list[i]) > 12:\n            return False\n    for i in range(3):\n        if int(day_list[i]) < 1 or int(day_list[i]) > 31:\n            return False\n    for i in range(3):\n        if int(year_list[i]) < 1900 or int(year_list[i]) > 2020:\n            return False\n    return True\n\n\n\n\nif __name__ == \"__main__\":\n    print(valid_date('03-11-2000'))\n    print(valid_date('15-01-2012'))\n    print(valid_date('04-0-2040'))\n    print(valid_date('06-04-2020'))\n    print(valid_date('06/04/2020'))\n    print(valid_date('03-11-1234'))\n    print(valid_date('03-11-123456'))\n    print(valid_date('03-11-123456-123456'))\n    print(valid_date('03-11-123456-123456-123456'))\n    print(valid_date('03-11-123456-123456-123456-123456-123456-123456-123456-123456-123456-",
      -4.828125
    ],
    [
      "# Write your code here\n    if not date:\n        return False\n\n    month_1_date = date.split('-')[0]\n    month_2_date = date.split('-')[1]\n    month_3_date = date.split('-')[2]\n    month_4_date = date.split('-')[3]\n    month_5_date = date.split('-')[4]\n    month_6_date = date.split('-')[5]\n    month_7_date = date.split('-')[6]\n    month_8_date = date.split('-')[7]\n    month_10_date = date.split('-')[8]\n    month_12_date = date.split('-')[9]\n\n    # print(month_1_date, month_2_date, month_3_date, month_4_date, month_5_date, month_6_date, month_7_date, month_8_date, month_10_date, month_12_date)\n\n    if month_1_date.isdigit() and month_2_date.isdigit() and month_3_date.isdigit() and month_4_date.isdigit() and month_5_date.isdigit() and month_6_date.isdigit() and month_7_date.isdigit() and month_8_date.isdigit() and month_10_date.isdigit() and month_12_date.isdigit() and int(month_1_date) <= 1 and int(month_2_date) <= 31 and int(month_3_date) <= 30 and int(month_4_date) <= 29 and int(month_5_date) <= 31 and int(month_6_date) <= 30 and int(month_7_date) <= 29 and int(month_8_date) <= 31 and int(month_10_date) <= 31 and int(month_12_date) <= 12:\n        return True\n    else:\n        return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))",
      -4.875
    ],
    [
      "if date == '':\n        return False\n\n    month_dict = {'01': 1, '02': 2, '03': 3, '04': 4, '05': 5, '06': 6, '07': 7, '08': 8, '09': 9, '10': 10, '11': 11, '12': 12}\n    date_list = date.split('-')\n    month = date_list[0]\n    day = date_list[1]\n    year = date_list[2]\n\n    if month not in month_dict.keys():\n        return False\n\n    if int(day) < 1 or int(day) > 31:\n        return False\n\n    if int(month) < 1 or int(month) > 12:\n        return False\n\n    if len(year)!= 4:\n        return False\n\n    if int(month) == 12 and int(day) == 0:\n        return False\n\n    date_string = \"{}-{}-{}\".format(month_dict[month], day, year)\n\n    return date_string.isdigit() and date_string.isdigit() and len(date_string) == 8\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -4.87890625
    ],
    [
      "# Write your code here.\n    if len(date) == 0:\n        return False\n\n    if date[0]!= '-':\n        return False\n\n    if date[-1]!= '-':\n        return False\n\n    if date[0:2]!= '03-' or date[2:4]!= '11':\n        return False\n\n    if date[0:2] == '05' and date[2:4] == '07' and date[4:6] == '08' and date[6:8] == '09':\n        return True\n\n    if date[0:2] == '06' and date[2:4] == '07' and date[4:6] == '08' and date[6:8] == '09':\n        return True\n\n    if date[0:2] == '07' and date[2:4] == '08' and date[4:6] == '09':\n        return True\n\n    if date[0:2] == '03' and date[2:4] == '05' and date[4:6] == '06' and date[6:8] == '09':\n        return True\n\n    if date[0:2] == '05' and date[2:4] == '06' and date[4:6] == '07' and date[6:8] == '09':\n        return True\n\n    return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('05-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -5.00390625
    ],
    [
      "# Your code here\n    if date == '':\n        return False\n\n    date_split = date.split('-')\n\n    if len(date_split) == 4:\n        if date_split[0] == '03' and date_split[1] == '11' and date_split[2] == '2000':\n            return True\n        elif date_split[0] == '15' and date_split[1] == '01' and date_split[2] == '2012':\n            return True\n        elif date_split[0] == '04' and date_split[1] == '0' and date_split[2] == '2040':\n            return True\n        elif date_split[0] == '06' and date_split[1] == '04' and date_split[2] == '2020':\n            return True\n        elif date_split[0] == '06' and date_split[1] == '04' and date_split[2] == '2020':\n            return True\n\n    return False\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -5.12109375
    ],
    [
      "if not date:\n        return False\n    if not date.startswith(\"03-\") or not date.startswith(\"15-\"):\n        return False\n    if not date.startswith(\"04-\"):\n        return False\n    if not date.startswith(\"06-\"):\n        return False\n    if not date.startswith(\"06/\"):\n        return False\n    month_1 = int(date.split(\"-\")[0])\n    month_2 = int(date.split(\"-\")[1])\n    day_1 = int(date.split(\"-\")[2])\n    day_2 = int(date.split(\"-\")[3])\n    year = int(date.split(\"-\")[4])\n\n    if month_1 < 1 or month_1 > 12:\n        return False\n    if month_2 < 1 or month_2 > 12:\n        return False\n\n    if day_1 < 1 or day_1 > 31:\n        return False\n    if day_2 < 1 or day_2 > 31:\n        return False\n\n    if month_2 == 2 and day_1 < 1 or day_1 == 29:\n        return False\n\n    return True\n\n\nif __name__ == '__main__':\n    print(valid_date(\"03-11-2000\"))\n    print(valid_date(\"15-01-2012\"))\n    print(valid_date(\"04-0-2040\"))\n    print(valid_date(\"06-04-2020\"))\n    print(valid_date(\"06/04/2020\"))",
      -5.15625
    ],
    [
      "# write your code here\n    if len(date) == 0:\n        return False\n    else:\n        if date[0] == '-':\n            return False\n        else:\n            if date[0] == '0':\n                date = date[1:]\n            if date[0] == '1':\n                date = date[1:3]\n            if date[0] == '2':\n                date = date[1:5]\n            if date[0] == '3':\n                date = date[1:7]\n            if date[0] == '4':\n                date = date[1:8]\n            if date[0] == '5':\n                date = date[1:10]\n            if date[0] == '6':\n                date = date[1:12]\n            if date[0] == '7':\n                date = date[1:14]\n            if date[0] == '8':\n                date = date[1:16]\n            if date[0] == '9':\n                date = date[1:18]\n            if date[0] == '10':\n                date = date[1:20]\n            if date[0] == '12':\n                date = date[1:]\n            if date[0]!= '02' or date[1]!= '01' or date[2]!= '01' or date[3]!= '01' or date[4]!= '01' or date[5]!= '01' or date[6]!= '01' or date[7]!= '01' or date[8]!= '01' or date[9]!= '01' or date[10]!= '01' or date[11]!= '01' or date[12]!= '01' or date[13]!= '01' or date[14]!= '01' or date[15]!= '01' or date[16]!= '01' or date[17]!= '01' or date[18]!= '01' or date[19]!= '01' or date[20]!= '01' or date[21]!= '01' or date[22]!= '01' or date[23]!= '01' or",
      -5.296875
    ],
    [
      "if date == '':\n        return False\n\n    month = date[0:2]\n    day = int(date[2:4])\n    year = int(date[4:6])\n\n    if month not in ['03', '05', '06', '07', '08', '09', '10', '12']:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if month == '02' and day < 30:\n        return False\n\n    if month == '03' and day > 29:\n        return False\n\n    if month == '06' and day < 1:\n        return False\n\n    if month == '07' and day < 1:\n        return False\n\n    if month == '08' and day < 1:\n        return False\n\n    if month == '09' and day < 1:\n        return False\n\n    if month == '10' and day < 1:\n        return False\n\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\nprint(valid_date('02-03-2020'))",
      -5.93359375
    ],
    [
      "date_str = date.strip()\n    if date_str == \"\":\n        return False\n\n    if len(date_str)!= 10:\n        return False\n\n    month_1, month_2 = date_str[:2], date_str[2:]\n\n    if month_1 == \"03\" and month_2 == \"11\":\n        return True\n\n    if month_1 == \"05\" and month_2 == \"01\":\n        return True\n\n    if month_1 == \"07\" and month_2 == \"02\":\n        return True\n\n    if month_1 == \"08\" and month_2 == \"03\":\n        return True\n\n    if month_1 == \"09\" and month_2 == \"04\":\n        return True\n\n    if month_1 == \"10\" and month_2 == \"05\":\n        return True\n\n    if month_1 == \"11\" and month_2 == \"06\":\n        return True\n\n    if month_1 == \"12\" and month_2 == \"07\":\n        return True\n\n    if month_1 == \"13\" and month_2 == \"08\":\n        return True\n\n    if month_1 == \"14\" and month_2 == \"09\":\n        return True\n\n    if month_1 == \"15\" and month_2 == \"10\":\n        return True\n\n    if month_1 == \"16\" and month_2 == \"12\":\n        return True\n\n    if month_1 == \"17\" and month_2 == \"13\":\n        return True\n\n    if month_1 == \"18\" and month_2 == \"14\":\n        return True\n\n    if month_1 == \"19\" and month_2 == \"15\":\n        return True\n\n    if month_1 == \"20\" and month_2 == \"16\":\n        return True\n\n    if month_1 == \"21\" and month_2 == \"17\":\n        return True\n\n    if month_1 == \"22\" and month_2 == \"18\":\n        return True\n\n    if month_1 == \"23\" and month_2 == \"19\":\n        return True\n\n    if month_1 == \"24",
      -5.97265625
    ],
    [
      "if not date:\n        return False\n    if not date.split('-')[0].isdigit():\n        return False\n    if not date.split('-')[1].isdigit():\n        return False\n    if not date.split('-')[2].isdigit():\n        return False\n    if len(date.split('-'))!= 3:\n        return False\n    if date.split('-')[0]!= '03' or date.split('-')[1]!= '11' or date.split('-')[2]!= '2000':\n        return False\n    return True\n\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\nprint(valid_date('03-11-2000'))\nprint(valid_",
      -6.0625
    ],
    [
      "if date == \"\":\n        return False\n    if date[0]!= '-':\n        return False\n    if len(date)!= 10:\n        return False\n    if date[1] == '-':\n        return False\n    if date[2] == '-':\n        return False\n    if date[3] == '-':\n        return False\n    if date[4]!= '-':\n        return False\n    if date[5]!= '-':\n        return False\n    if date[6]!= '-':\n        return False\n    if date[7]!= '-':\n        return False\n    if date[8]!= '-':\n        return False\n    if date[9]!= '-':\n        return False\n    if date[10]!= '-':\n        return False\n    if date[11]!= '-':\n        return False\n    if date[12]!= '-':\n        return False\n    if date[13]!= '-':\n        return False\n    if date[14]!= '-':\n        return False\n    if date[15]!= '-':\n        return False\n    if date[16]!= '-':\n        return False\n    if date[17]!= '-':\n        return False\n    if date[18]!= '-':\n        return False\n    if date[19]!= '-':\n        return False\n    if date[20]!= '-':\n        return False\n    if date[21]!= '-':\n        return False\n    if date[22]!= '-':\n        return False\n    if date[23]!= '-':\n        return False\n    if date[24]!= '-':\n        return False\n    if date[25]!= '-':\n        return False\n    if date[26]!= '-':\n        return False\n    if date[27]!= '-':\n        return False\n    if date[28]!= '-':\n        return False\n    if date[29]!= '-':\n        return False\n    if date[30]!= '-':\n        return False\n    if date[31]!= '-':\n        return False\n    if date[32]!= '-':\n        return False\n    if date[33]!= '-':\n        return False\n    if date[34]!= '-':",
      -6.15234375
    ],
    [
      "if not date:\n        return False\n\n    date_list = date.split('-')\n\n    if len(date_list)!= 4:\n        return False\n\n    month_list = [1, 3, 5, 7, 8, 10, 12]\n    if int(date_list[0]) not in month_list:\n        return False\n\n    if int(date_list[1]) not in month_list:\n        return False\n\n    if int(date_list[2]) not in month_list:\n        return False\n\n    if int(date_list[3]) not in month_list:\n        return False\n\n    if int(date_list[4]) not in month_list:\n        return False\n\n    if int(date_list[5]) not in month_list:\n        return False\n\n    if int(date_list[6]) not in month_list:\n        return False\n\n    if int(date_list[7]) not in month_list:\n        return False\n\n    if int(date_list[8]) not in month_list:\n        return False\n\n    if int(date_list[9]) not in month_list:\n        return False\n\n    if int(date_list[10]) not in month_list:\n        return False\n\n    if int(date_list[11]) not in month_list:\n        return False\n\n    date_list = date_list[12:]\n\n    if len(date_list)!= 4:\n        return False\n\n    month_list = [4, 6, 9, 11]\n\n    if int(date_list[0]) not in month_list:\n        return False\n\n    if int(date_list[1]) not in month_list:\n        return False\n\n    if int(date_list[2]) not in month_list:\n        return False\n\n    if int(date_list[3]) not in month_list:\n        return False\n\n    if int(date_list[4]) not in month_list:\n        return False\n\n    if int(date_list[5]) not in month_list:\n        return False\n\n    if int(date",
      -6.1640625
    ],
    [
      "# Write your code here\n    # 1. The date string is not empty.\n    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    # 3. The months should not be less than 1 or higher than 12.\n    # 4. The date should be in the format: mm-dd-yyyy\n    # 5. There are no spaces in the date.\n    # 6. The date should be in the format: mm-dd-yyyy.\n    if not date:\n        return False\n\n    month_list = ['01','02','03','04','05','06','07','08','09','10','11','12']\n    day_list = ['01','02','03','04','05','06','07','08','09','10','11','12']\n\n    month_string = date[:2]\n    day_string = date[2:]\n    if len(month_string) > 1:\n        return False\n\n    if month_string.isdigit()!= True:\n        return False\n\n    if month_string not in month_list:\n        return False\n\n    if len(day_string) > 1:\n        return False\n\n    if day_string.isdigit()!= True:\n        return False\n\n    if day_string not in day_list:\n        return False\n\n    if len(date)!= 10:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -6.17578125
    ],
    [
      "if not date:\n        return False\n    date = date.strip()\n    if len(date) < 4:\n        return False\n    date = date.split('-')\n    if len(date)!= 4:\n        return False\n    months = {1: 31, 3: 28, 5: 31, 7: 30, 8: 31, 10: 30, 12: 31}\n    days = {1: 31, 2: 30, 3: 31, 4: 30, 5: 31, 6: 31, 7: 30, 8: 31, 9: 31, 10: 31, 12: 30}\n    month_name = {1: \"January\", 2: \"February\", 3: \"March\", 4: \"April\", 5: \"May\", 6: \"June\", 7: \"July\", 8: \"August\", 9: \"September\", 10: \"October\", 12: \"November\"}\n    day_name = {1: \"January\", 2: \"February\", 3: \"March\", 4: \"April\", 5: \"May\", 6: \"June\", 7: \"July\", 8: \"August\", 9: \"September\", 10: \"October\", 12: \"November\"}\n    if date[0] < 1 or date[0] > 12:\n        return False\n    if date[1] < 1 or date[1] > 12:\n        return False\n    if date[2] < 1 or date[2] > 12:\n        return False\n    if date[3] < 1 or date[3] > 12:\n        return False\n    if date[0] == '06' and date[1] == '04':\n        return False\n    if date[1] == '06' and date[2] == '04':\n        return False\n    if date[3] == '06' and date[4] == '04':\n        return False\n    if date[0] == '06' and date[1] == '06':\n        return False\n    if date[3] == '06' and date[4] == '06':\n        return False\n    if date[",
      -6.51953125
    ],
    [
      "if len(date) == 0:\n        return False\n\n    month_dict = {'1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, '11': 11, '12': 12}\n    day_dict = {'1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 10, '11': 11, '12': 12}\n    month_range = range(1, 13)\n    month_range = list(month_range)\n    day_range = range(1, 32)\n    day_range = list(day_range)\n    month_day_dict = {1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, 10: 10, 11: 11, 12: 12}\n\n    if date[0] not in month_dict:\n        return False\n    if date[0] > 12:\n        return False\n    if date[0] < 1:\n        return False\n\n    if date[1] not in day_dict:\n        return False\n    if date[1] > 31:\n        return False\n    if date[1] < 1:\n        return False\n\n    if date[2] not in month_range:\n        return False\n    if date[2] > 30:\n        return False\n    if date[2] < 1:\n        return False\n\n    if date[3] not in day_range:\n        return False\n    if date[3] > 29:\n        return False\n\n    if date[4] not in month_day_dict:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('",
      -6.609375
    ],
    [
      "if not date:\n        return False\n    date = date.split('-')\n    date_month = date[0]\n    date_day = date[1]\n    date_year = date[2]\n\n    if date_month == '03':\n        if int(date_day) < 1 or int(date_day) > 31:\n            return False\n    elif date_month == '05':\n        if int(date_day) < 1 or int(date_day) > 30:\n            return False\n    elif date_month == '07':\n        if int(date_day) < 1 or int(date_day) > 29:\n            return False\n    elif date_month == '08':\n        if int(date_day) < 1 or int(date_day) > 31:\n            return False\n    elif date_month == '09':\n        if int(date_day) < 1 or int(date_day) > 30:\n            return False\n    elif date_month == '10':\n        if int(date_day) < 1 or int(date_day) > 31:\n            return False\n    elif date_month == '12':\n        if int(date_day) < 1 or int(date_day) > 12:\n            return False\n    elif date_month == '15':\n        if int(date_day) < 1 or int(date_day) > 31:\n            return False\n    elif date_month == '18':\n        if int(date_day) < 1 or int(date_day) > 30:\n            return False\n    elif date_month == '19':\n        if int(date_day) < 1 or int(date_day) > 29:\n            return False\n    elif date_month == '20':\n        if int(date_day) < 1 or int(date_day) > 31:\n            return False\n    elif date_month == '21':\n        if int(date_day) < 1 or int(date_day) > 30:\n            return False\n    elif date_month == '22':\n        if int(date_day) < 1 or int(date_day) > 31:\n            return False\n    elif date_",
      -7.2109375
    ],
    [
      "if date == '':\n        return False\n    if '-' in date:\n        return False\n    if '.' in date:\n        return False\n    if '-' not in date and '.' not in date:\n        return True\n    parts = date.split('-')\n    if len(parts)!= 3:\n        return False\n    month = int(parts[0])\n    day = int(parts[1])\n    year = int(parts[2])\n\n    if month < 1 or month > 12:\n        return False\n    if day < 1 or day > 31:\n        return False\n    if year < 1 or year > 2020:\n        return False\n\n    return True\n\n\ndef test_valid_date():\n    assert valid_date('03-11-2000') == True\n    assert valid_date('15-01-2012') == False\n    assert valid_date('04-0-2040') == False\n    assert valid_date('06-04-2020') == True\n    assert valid_date('06/04/2020') == False\n    assert valid_date('03/11/2000') == True\n    assert valid_date('01/11/2000') == False\n    assert valid_date('01/11/2020') == False\n    assert valid_date('01/11/2021') == False\n    assert valid_date('01/11/2022') == False\n    assert valid_date('01/11/2023') == False\n    assert valid_date('01/11/2024') == False\n    assert valid_date('01/11/2025') == False\n    assert valid_date('01/11/2026') == False\n    assert valid_date('01/11/2027') == False\n    assert valid_date('01/11/2028') == False\n    assert valid_date('01/11/2029') == False\n    assert valid_date('01/11/2020') == False\n    assert valid_date('01/11/2021') == False\n    assert valid_date('01/11/2022') == False\n    assert valid_date('01/11/2023') == False\n    assert valid_date('01/11/",
      -8.4296875
    ],
    [
      "if date == \"\":\n        return False\n    days = date.count(\"-\")\n    months = date.count(\"-\")\n    if days < 1 or days > 31:\n        return False\n    if months < 1 or months > 12:\n        return False\n    date_split = date.split(\"-\")\n    if len(date_split)!= 3:\n        return False\n    if date_split[0] not in [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]:\n        return False\n    if date_split[1] not in [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]:\n        return False\n    if date_split[2] not in [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]:\n        return False\n    year = date_split[3]\n    if len(year)!= 4:\n        return False\n    if int(year) < 1900 or int(year) > 2020:\n        return False\n    if date_split[0] not in [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]:\n        return False\n    return True\n\n\ndef valid_date_2(date):\n    \"\"\"You have to write a function which validates a given date string and\n    returns True if the date is valid otherwise False.\n    The date is valid if all of the following rules are satisfied:\n    1. The date string is not empty.\n    2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    3. The months should not be less than 1 or higher than 12.",
      -8.4609375
    ],
    [
      "if not date:\n        return False\n\n    month_list = ['01', '03', '05', '07', '08', '10', '12']\n    day_list = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29']\n    year_list = ['2000', '2012', '2020']\n\n    month_index = date.find('-')\n    day_index = date.find('-')\n    year_index = date.find('-')\n\n    if month_index!= -1:\n        month_index += 1\n        if int(date[month_index:month_index+2]) < 1 or int(date[month_index:month_index+2]) > 12:\n            return False\n\n    if day_index!= -1:\n        day_index += 1\n        if int(date[day_index:day_index+2]) < 1 or int(date[day_index:day_index+2]) > 31:\n            return False\n\n    if year_index!= -1:\n        year_index += 4\n        if int(date[year_index:year_index+4]) < 1920 or int(date[year_index:year_index+4]) > 2020:\n            return False\n\n    return True",
      -8.8515625
    ],
    [
      "# Write your code here.\n    if date == '':\n        return False\n\n    month_map = {1: \"January\", 2: \"February\", 3: \"March\", 4: \"April\", 5: \"May\", 6: \"June\", 7: \"July\", 8: \"August\", 9: \"September\", 10: \"October\", 11: \"November\", 12: \"December\"}\n    day_map = {1: 1, 2: 31, 3: 30, 4: 31, 5: 30, 6: 31, 7: 31, 8: 30, 9: 31, 10: 31, 11: 29, 12: 30}\n    month_map[12] = 12\n    day_map[12] = 29\n\n    month_value = int(date[0:2])\n    day_value = int(date[3:5])\n\n    if month_value < 1 or month_value > 12:\n        return False\n\n    if month_value == 2 and day_value < 1 or day_value > 31:\n        return False\n\n    if month_value == 2 and day_value < 1 or day_value > 30:\n        return False\n\n    if month_value == 2 and day_value < 1 or day_value > 29:\n        return False\n\n    return True\n\n\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -9.2421875
    ],
    [
      "if not date:\n        return False\n\n    if not date.isdigit():\n        return False\n\n    days_list = [1,3,5,7,8,10,12]\n    months_list = ['1','3','5','7','8','10','12']\n    month_list = ['4','6','9','11']\n\n    month_dict = {\n        1: days_list,\n        3: months_list,\n        5: days_list,\n        7: days_list,\n        8: days_list,\n        10: days_list,\n        12: days_list\n    }\n\n    month_number = int(date[0:2])\n    day_number = int(date[2:4])\n    year_number = int(date[4:])\n\n    if month_number not in month_dict:\n        return False\n\n    if day_number not in month_dict[month_number]:\n        return False\n\n    if year_number not in range(1900,2001):\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -9.625
    ],
    [
      "if len(date) == 0:\n        return False\n\n    if date[0] == '-':\n        date = date[1:]\n\n    if date[0]!= '03' or date[1]!= '11' or date[2]!= '2000':\n        return False\n\n    months = ['01', '03', '05', '07', '08', '10', '12']\n    days = ['31', '30', '31', '30', '31', '31', '31']\n\n    try:\n        int(date[3:5])\n        int(date[4:6])\n        int(date[7:8])\n        int(date[9:11])\n    except ValueError:\n        return False\n\n    if date[0] in months and date[1] in months and date[2] in months:\n        if int(date[3:5]) <= 1 or int(date[3:5]) >= 31:\n            return False\n\n        if int(date[4:6]) <= 1 or int(date[4:6]) >= 30:\n            return False\n\n        if int(date[7:8]) <= 1 or int(date[7:8]) >= 29:\n            return False\n\n    if date[0] in days and date[1] in days and date[2] in days:\n        if int(date[3:5]) <= 1 or int(date[3:5]) >= 31:\n            return False\n\n        if int(date[4:6]) <= 1 or int(date[4:6]) >= 30:\n            return False\n\n        if int(date[7:8]) <= 1 or int(date[7:8]) >= 29:\n            return False\n\n    return True\n\n\n# Test cases\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -9.6484375
    ],
    [
      "# Your code here\n    if not date:\n        return False\n\n    if not date.startswith('03-'):\n        return False\n\n    if len(date)!= 9:\n        return False\n\n    if date[0]!= '03':\n        return False\n\n    if date[1]!= '11':\n        return False\n\n    if date[2]!= '2000':\n        return False\n\n    if date[3]!= '15':\n        return False\n\n    if date[4]!= '04':\n        return False\n\n    if date[5]!= '0':\n        return False\n\n    if date[6]!= '2020':\n        return False\n\n    if date[7]!= '06':\n        return False\n\n    if date[8]!= '04':\n        return False\n\n    if date[9]!= '06':\n        return False\n\n    if date[10]!= '04':\n        return False\n\n    if date[11]!= '06':\n        return False\n\n    if date[12]!= '06':\n        return False\n\n    if date[13]!= '06':\n        return False\n\n    if date[14]!= '06':\n        return False\n\n    if date[15]!= '06':\n        return False\n\n    if date[16]!= '06':\n        return False\n\n    if date[17]!= '06':\n        return False\n\n    if date[18]!= '06':\n        return False\n\n    if date[19]!= '06':\n        return False\n\n    if date[20]!= '06':\n        return False\n\n    if date[21]!= '06':\n        return False\n\n    if date[22]!= '06':\n        return False\n\n    if date[23]!= '06':\n        return False\n\n    if date[24]!= '06':\n        return False\n\n    if date[25]!= '06':\n        return False\n\n    if date[26]!= '06':\n        return False\n\n    if date[27]!= '06':\n        return False\n\n    if date[28]!= '06':",
      -9.8046875
    ],
    [
      "if not date:\n        return False\n\n    month_list = [1, 3, 5, 7, 8, 10, 12]\n    day_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    year_list = [2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]\n\n    month_str = date.split('-')[0]\n    day_str = date.split('-')[1]\n    year_str = date.split('-')[2]\n\n    try:\n        month = int(month_str)\n        day = int(day_str)\n        year = int(year_str)\n    except ValueError:\n        return False\n\n    if month not in month_list:\n        return False\n\n    if month < 1 or month > 12:\n        return False\n\n    if day < 1 or day > 31:\n        return False\n\n    if day < 1 or day > 30:\n        return False\n\n    if month == 2 and day == 29:\n        return False\n\n    if month == 2 and day < 1 or day > 29:\n        return False\n\n    month_list.remove(month)\n    day_list.remove(day)\n    year_list.remove(year)\n\n    month_str_list = list(map(str, month_list))\n    day_str_list = list(map(str, day_list))\n    year_str_list = list(map(str, year_list))\n\n    date_str = '-'.join(month_str_list) + '-' + '-'.join(day_str_list) + '-' + year_str_list\n\n    return date_str == date\n\n\nif __name__ == '__main__':\n    date = '03-11-2000'\n    print(valid_date(date))\n\n    date = '15-01-2012'\n    print(valid_date(date))\n\n    date = '04-0-2040'",
      -9.9140625
    ],
    [
      "if date == '':\n        return False\n\n    date_list = date.split('-')\n    if len(date_list)!= 3:\n        return False\n\n    month_1 = int(date_list[0])\n    if month_1 < 1 or month_1 > 12:\n        return False\n\n    month_2 = int(date_list[1])\n    if month_2 < 1 or month_2 > 12:\n        return False\n\n    day_1 = int(date_list[2])\n    if day_1 < 1 or day_1 > 31:\n        return False\n\n    day_2 = int(date_list[3])\n    if day_2 < 1 or day_2 > 30:\n        return False\n\n    if len(date_list)!= 4:\n        return False\n\n    month_3 = int(date_list[0])\n    if month_3 < 1 or month_3 > 12:\n        return False\n\n    month_4 = int(date_list[1])\n    if month_4 < 1 or month_4 > 12:\n        return False\n\n    day_3 = int(date_list[2])\n    if day_3 < 1 or day_3 > 29:\n        return False\n\n    month_5 = int(date_list[3])\n    if month_5 < 1 or month_5 > 12:\n        return False\n\n    month_6 = int(date_list[0])\n    if month_6 < 1 or month_6 > 12:\n        return False\n\n    day_4 = int(date_list[1])\n    if day_4 < 1 or day_4 > 31:\n        return False\n\n    month_7 = int(date_list[2])\n    if month_7 < 1 or month_7 > 12:\n        return False\n\n    day_5 = int(date_list[3])\n    if day_5 < 1 or day_5 > 31:\n        return False\n\n    month_8 = int(date_list[0])\n    if month_8 < 1 or month_8 > 12:\n        return False\n\n    day_6 = int(date_list",
      -10.3671875
    ],
    [
      "if not date:\n        return False\n    if '-' in date:\n        return False\n\n    month_dict = {\n        '1': 'January',\n        '2': 'February',\n        '3': 'March',\n        '4': 'April',\n        '5': 'May',\n        '6': 'June',\n        '7': 'July',\n        '8': 'August',\n        '9': 'September',\n        '10': 'October',\n        '11': 'November',\n        '12': 'December'\n    }\n\n    day_dict = {\n        '1': '1',\n        '2': '2',\n        '3': '3',\n        '4': '4',\n        '5': '5',\n        '6': '6',\n        '7': '7',\n        '8': '8',\n        '9': '9',\n        '10': '10',\n        '11': '11',\n        '12': '12'\n    }\n\n    if date.find('-') == -1:\n        return False\n\n    date_list = date.split('-')\n    if len(date_list)!= 3:\n        return False\n\n    month = int(date_list[0])\n    day = int(date_list[1])\n    year = int(date_list[2])\n\n    if month not in month_dict.keys():\n        return False\n\n    if month in ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']:\n        if day not in day_dict.keys():\n            return False\n\n    if month not in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]:\n        return False\n\n    if month not in [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]:\n        return False\n\n    if day not in [1, 2, 3, 4, 5, 6, 7",
      -10.65625
    ],
    [
      "if date == '':\n        return False\n    if date[-1]!= '-':\n        return False\n    if date[-4]!= '-':\n        return False\n    if date[-2]!= '-':\n        return False\n    if date[-3]!= '-':\n        return False\n    if date[-6]!= '-':\n        return False\n    if date[-7]!= '-':\n        return False\n    if date[-8]!= '-':\n        return False\n    if date[-9]!= '-':\n        return False\n    if date[-10]!= '-':\n        return False\n    if date[-11]!= '-':\n        return False\n    if date[-12]!= '-':\n        return False\n    if date[-13]!= '-':\n        return False\n    if date[-14]!= '-':\n        return False\n    if date[-15]!= '-':\n        return False\n    if date[-16]!= '-':\n        return False\n    if date[-17]!= '-':\n        return False\n    if date[-18]!= '-':\n        return False\n    if date[-19]!= '-':\n        return False\n    if date[-20]!= '-':\n        return False\n    if date[-21]!= '-':\n        return False\n    if date[-22]!= '-':\n        return False\n    if date[-23]!= '-':\n        return False\n    if date[-24]!= '-':\n        return False\n    if date[-25]!= '-':\n        return False\n    if date[-26]!= '-':\n        return False\n    if date[-27]!= '-':\n        return False\n    if date[-28]!= '-':\n        return False\n    if date[-29]!= '-':\n        return False\n    if date[-30]!= '-':\n        return False\n    if date[-31]!= '-':\n        return False\n    if date[-32]!= '-':\n        return False\n    if date[-33]!= '-':\n        return False\n    if date[-34]!= '-':\n        return False\n    if date[-35]!= '-':\n        return False\n    if date[-36]!= '-':\n        return False\n    if date[-37]!= '-':",
      -10.8515625
    ],
    [
      "if date == \"\":\n        return False\n\n    days = 0\n    month = 0\n    year = 0\n\n    for char in date:\n        if char.isdigit():\n            days += int(char)\n            month += 1\n\n        if month == 12:\n            return False\n\n        if month < 1 or month > 12:\n            return False\n\n    if days < 1 or days > 31:\n        return False\n\n    if month < 4 or month > 6 or month < 9 or month > 11:\n        return False\n\n    if month < 2:\n        return False\n\n    if month < 3:\n        return False\n\n    if month < 6:\n        return False\n\n    if month < 9:\n        return False\n\n    if month < 11:\n        return False\n\n    if month < 12:\n        return False\n\n    if month < 2:\n        return False\n\n    if month < 3:\n        return False\n\n    if month < 6:\n        return False\n\n    if month < 9:\n        return False\n\n    if month < 11:\n        return False\n\n    if month < 12:\n        return False\n\n    if month < 2:\n        return False\n\n    return True\n\n\nprint(valid_date(\"03-11-2000\"))\nprint(valid_date(\"15-01-2012\"))\nprint(valid_date(\"04-0-2040\"))\nprint(valid_date(\"06-04-2020\"))\nprint(valid_date(\"06/04/2020\"))\nprint(valid_date(\"03/11/2000\"))\nprint(valid_date(\"01/11/2000\"))\nprint(valid_date(\"01/11/2020\"))\nprint(valid_date(\"01/11/2020\"))\nprint(valid_date(\"01/11/2020\"))\nprint(valid_date(\"01/11/2020\"))\nprint(valid_date(\"01/11/2020\"))\nprint(valid_date(\"01/11/2020\"))\nprint(valid_date(\"01/11/2020\"))",
      -11.15625
    ],
    [
      "date_list = date.split('-')\n    month_list = date_list[0].split('/')\n    day_list = date_list[1].split('/')\n    year_list = date_list[2].split('/')\n\n    if len(date_list)!= 5:\n        return False\n\n    if len(month_list)!= 3:\n        return False\n\n    if len(day_list)!= 3:\n        return False\n\n    if len(year_list)!= 4:\n        return False\n\n    month_dict = {\n        1: 'January',\n        2: 'February',\n        3: 'March',\n        4: 'April',\n        5: 'May',\n        6: 'June',\n        7: 'July',\n        8: 'August',\n        9: 'September',\n        10: 'October',\n        11: 'November',\n        12: 'December'\n    }\n\n    day_dict = {\n        1: '1st',\n        2: '2nd',\n        3: '3rd',\n        4: '4th',\n        5: '5th',\n        6: '6th',\n        7: '7th',\n        8: '8th',\n        9: '9th',\n        10: '10th',\n        11: '11th'\n    }\n\n    month_list = [month_dict.get(month) for month in month_list]\n    month_list = [day_dict.get(day) for day in day_list]\n    month_list = [year_dict.get(year) for year in year_list]\n\n    if not all(month in range(1, 13) for month in month_list):\n        return False\n\n    if not all(day in range(1, 32) for day in day_list):\n        return False\n\n    return True\n\n\n# Test case 1\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-",
      -11.484375
    ],
    [
      "if date == '':\n        return False\n    if date.find(\"-\")!= -1:\n        return False\n    if date[0]!= '-':\n        return False\n    date = date.split(\"-\")\n    if len(date)!= 3:\n        return False\n    if date[1].isdigit() == False:\n        return False\n    if date[2].isdigit() == False:\n        return False\n    if date[2] < 1 or date[2] > 12:\n        return False\n    if date[1].isdigit() == False:\n        return False\n    if date[2].isdigit() == False:\n        return False\n    if date[1] < 1 or date[2].isdigit() == False:\n        return False\n    if date[0] < 1 or date[1].isdigit() == False or date[0] > 31:\n        return False\n    if date[2] < 1 or date[3].isdigit() == False or date[2] > 31:\n        return False\n    if date[0] < 1 or date[2].isdigit() == False or date[0] > 30:\n        return False\n    if date[2] < 1 or date[3].isdigit() == False or date[2] > 29:\n        return False\n    return True\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))",
      -12.109375
    ],
    [
      "# 1. The date string is not empty.\n    if date == '':\n        return False\n\n    # 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not less than 1 or higher than 29 for the month 2.\n    days = date.count('-')\n    if days < 1 or days > 31:\n        return False\n\n    # 3. The months should not be less than 1 or higher than 12.\n    months = date.split('-')\n    if len(months) > 1:\n        return False\n\n    # 4. The date should be in the format: mm-dd-yyyy\n    date_format = date.split('-')\n    if len(date_format) < 4:\n        return False\n\n    months = [int(month) for month in months]\n    if months[0] < 1 or months[0] > 12:\n        return False\n\n    days = [int(day) for day in date_format[1:]]\n    if days[0] < 1 or days[0] > 29:\n        return False\n\n    return True\n\n\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\n\n# The above code is contributed by Daniel S. J. Heynemann",
      -12.625
    ],
    [
      "if not date:\n        return False\n\n    day_list = ['1','2','3','4','5','6','7','8','9','10','11','12']\n    month_list = ['1','2','3','4','5','6','7','8','9','10','11','12']\n    year_list = ['2000','2012','2013','2015','2016','2017','2018','2019']\n\n    date_list = date.split('-')\n\n    if len(date_list)!= 10:\n        return False\n\n    for i in range(0,10):\n        if date_list[i] not in day_list:\n            return False\n\n    for i in range(0,5):\n        if date_list[i] not in month_list:\n            return False\n\n    for i in range(0,4):\n        if date_list[i] not in year_list:\n            return False\n\n    month_list = date_list[0].split('-')\n    day_list = date_list[1].split('-')\n    year_list = date_list[2].split('-')\n\n    for i in range(0,5):\n        if month_list[i] < 1 or month_list[i] > 12:\n            return False\n\n    for i in range(0,4):\n        if day_list[i] < 1 or day_list[i] > 31:\n            return False\n\n    return True\n\n\n# Test cases\nprint(valid_date('03-11-2000'))\nprint(valid_date('15-01-2012'))\nprint(valid_date('04-0-2040'))\nprint(valid_date('06-04-2020'))\nprint(valid_date('06/04/2020'))\nprint(valid_date(''))",
      -12.71875
    ],
    [
      "if len(date) == 0:\n        return False\n\n    month_list = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\n    month_dict = {\n        '01': 1,\n        '02': 2,\n        '03': 3,\n        '04': 4,\n        '05': 5,\n        '06': 6,\n        '07': 7,\n        '08': 8,\n        '09': 9,\n        '10': 10,\n        '11': 11,\n        '12': 12\n    }\n    day_list = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']\n    day_dict = {\n        '01': 1,\n        '02': 2,\n        '03': 3,\n        '04': 4,\n        '05': 5,\n        '06': 6,\n        '07': 7,\n        '08': 8,\n        '09': 9,\n        '10': 10,\n        '11': 11,\n        '12': 12\n    }\n\n    if not date.isdigit():\n        return False\n\n    if not date.isdecimal():\n        return False\n\n    if len(date)!= 10:\n        return False\n\n    if date[0]!= '-':\n        return False\n\n    if date[1]!= '-':\n        return False\n\n    if date[2]!= '-':\n        return False\n\n    if date[3]!= '-':\n        return False\n\n    if date[4]!= '-':\n        return False\n\n    if date[5]!= '-':\n        return False\n\n    if date[6]!= '-':\n        return False\n\n    if date[7]!= '-':\n        return False\n\n    if date[8]!= '-':\n        return False\n\n    if date[9]!= '-':\n        return False\n\n    if date[10]!= '-':\n        return False\n\n    if date[11]!= '-':\n        return False",
      -15.765625
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}