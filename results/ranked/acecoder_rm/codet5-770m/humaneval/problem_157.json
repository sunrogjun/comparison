{
  "problem": {
    "task_id": "HumanEval/157",
    "prompt": "\ndef right_angle_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n",
    "canonical_solution": "    return a*a == b*b + c*c or b*b == a*a + c*c or c*c == a*a + b*b\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(3, 4, 5) == True, \"This prints if this assert fails 1 (good for debugging!)\"\n    assert candidate(1, 2, 3) == False\n    assert candidate(10, 6, 8) == True\n    assert candidate(2, 2, 2) == False\n    assert candidate(7, 24, 25) == True\n    assert candidate(10, 5, 7) == False\n    assert candidate(5, 12, 13) == True\n    assert candidate(15, 8, 17) == True\n    assert candidate(48, 55, 73) == True\n\n    # Check some edge cases that are easy to work out by hand.\n    assert candidate(1, 1, 1) == False, \"This prints if this assert fails 2 (also good for debugging!)\"\n    assert candidate(2, 2, 10) == False\n\n",
    "entry_point": "right_angle_triangle",
    "docstring": "",
    "problem_id": 157
  },
  "model_name": "codet5-770m",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "return ((a + b) == c and (a + c) == b)\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      4.38671875
    ],
    [
      "return a == b and b == c\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      2.8515625
    ],
    [
      "return (a + b == c) and (a == b or a == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      1.5537109375
    ],
    [
      "if a + b < c:\n        return False\n    return True\n\nprint(right_angle_triangle(3, 4, 5))",
      1.416015625
    ],
    [
      "if a > b and a > c:\n        return True\n    elif b > c:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      1.416015625
    ],
    [
      "return ((a+b) == c) or ((a+c) == b) or ((b+c) == a)",
      1.4150390625
    ],
    [
      "if a == b and a == c:\n        return True\n    elif a == b or b == c or c == a:\n        return False\n    else:\n        return False",
      0.73828125
    ],
    [
      "return (a == b + c) and (a == b or a == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      0.382568359375
    ],
    [
      "return a == b and b == c",
      0.3779296875
    ],
    [
      "if a+b>c:\n        return False\n    else:\n        return True\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False",
      0.2529296875
    ],
    [
      "if abs(a + b + c) == 2:\n        return True\n    return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.1571044921875
    ],
    [
      "return (a + b + c) == (a + b) and (a + c) == (b + c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.31689453125
    ],
    [
      "if a + b > c:\n        return False\n    return True\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.3876953125
    ],
    [
      "if (a + b) > c:\n        return False\n    return True",
      -0.5869140625
    ],
    [
      "if (a + b == c) or (a + c == b) or (b + c == a):\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.7705078125
    ],
    [
      "return a == b and b == c and c == a\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return a == b or b == c or c == a\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3, 4, 5) == True\n    right_angle_triangle_4(1, 2, 3) == False\n    '''\n    return a == b or b == c or c == a\n\n\ndef right_angle_triangle_5(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle",
      -0.79736328125
    ],
    [
      "if a + b > c:\n        return False\n    if a == b == c:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85791015625
    ],
    [
      "return ((a + b) == c and (a + c) == b)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85791015625
    ],
    [
      "return (a + b + c) % 2 == 0\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85791015625
    ],
    [
      "return a == b == c and abs(a - b) == abs(a - c)",
      -0.85791015625
    ],
    [
      "return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef main():\n    '''\n    Driver code\n    '''\n    a, b, c = map(int, input().split())\n    print(right_angle_triangle(a, b, c))\n\n\nif __name__ == '__main__':\n    main()",
      -0.85791015625
    ],
    [
      "return a == b and b == c\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85791015625
    ],
    [
      "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False",
      -0.85791015625
    ],
    [
      "if a > b + c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85791015625
    ],
    [
      "return (a + b) == c and (a + c) == b and (a + b == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85791015625
    ],
    [
      "return (a + b + c) % 2 == 0\n\n\ndef main():\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))\n    print(right_angle_triangle(1, 4, 2))\n    print(right_angle_triangle(2, 1, 3))\n    print(right_angle_triangle(4, 3, 2))\n    print(right_angle_triangle(4, 2, 1))\n    print(right_angle_triangle(3, 4, 5))\n\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "if a == b and c == b:\n        return True\n    elif a == b or a == c or b == c:\n        return False\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "if a == b == c:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False",
      -0.85888671875
    ],
    [
      "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(1, 2, -3))\nprint(right_angle_triangle(3, 4, -5))\nprint(right_angle_triangle(3, -4, 5))\nprint(right_angle_triangle(3, 4, -1))",
      -0.85888671875
    ],
    [
      "if a < b + c:\n        return False\n    return a == b == c\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "if a > b + c:\n        return False\n    elif b > a + c:\n        return False\n    elif c > a + b:\n        return False\n    else:\n        return True\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False",
      -0.85888671875
    ],
    [
      "if a > b + c or b > a + c or c > a + b:\n        return False\n    else:\n        return True\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(4, 5, 6) == True\n    assert right_angle_triangle(4, 5, 7) == False\n\ntest_right_angle_triangle()",
      -0.85888671875
    ],
    [
      "if a == b and b == c:\n        return True\n    elif a!= b and b!= c and c!= a:\n        return False\n    else:\n        return False\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n\n\nif __name__ == '__main__':\n    test_right_angle_triangle()",
      -0.85888671875
    ],
    [
      "return a == b and b == c\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "return (a + b > c) and (b + c > a) and (c + a > b)",
      -0.85888671875
    ],
    [
      "if a > b and b > c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(1, 2, -3))",
      -0.85888671875
    ],
    [
      "if a > b and a > c:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "if a == b and a == c:\n        return True\n    if a!= b or b!= c or c!= a:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(4, 5, 6))\nprint(right_angle_triangle(1, 4, 6))\nprint(right_angle_triangle(2, 4, 6))\nprint(right_angle_triangle(1, 1, 1))",
      -0.85888671875
    ],
    [
      "if a > b + c:\n        return False\n    elif a > b and b > c:\n        return False\n    elif a > c:\n        return False\n    elif b > c:\n        return False\n    else:\n        return True\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(3, 4, 5) == False\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(1, 2, 3) == True\n\n\ntest_right_angle_triangle()",
      -0.85888671875
    ],
    [
      "return ((a + b) == c) or ((a + c) == b)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "if a == b + c:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "return (a + b == c) or (a == b and b == c) or (a == c and b == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "if a+b+c==180:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "return ((a * a) + (b * b) == c * c)\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -0.85888671875
    ],
    [
      "return a == b and b == c and c == a",
      -0.85888671875
    ],
    [
      "return (a + b + c) % 2 == 0\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(5, 1, 3))",
      -0.85888671875
    ],
    [
      "if a == b and a == c:\n        return True\n    return False\n\n\ndef right_angle_triangle2(a, b, c):\n    return a == b or b == c or c == a\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle2(3, 4, 5) == True\n    assert right_angle_triangle2(1, 2, 3) == False\n\n\nif __name__ == '__main__':\n    test_right_angle_triangle()",
      -0.85888671875
    ],
    [
      "return a == b + c",
      -0.85888671875
    ],
    [
      "if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle_2(3, 4, 5))\nprint(right_angle_triangle_2(1, 2, 3))\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle_3(3, 4, 5))\nprint(right_angle_triangle_3(1, 2, 3))\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_tri",
      -0.9013671875
    ],
    [
      "if a == b and c == b:\n        return True\n    elif a == b or c == b:\n        return False\n    elif a == c or c == c:\n        return False\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    if a == b and c == b:\n        return True\n    elif a == b or c == b:\n        return False\n    elif a == c or c == c:\n        return False\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    if a == b and c == b:\n        return True\n    elif a == b or c == b:\n        return False\n    elif a == c or c == c:\n        return False",
      -1.8642578125
    ],
    [
      "if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -2.109375
    ],
    [
      "if a == b and b == c:\n        return True\n    else:\n        return False",
      -2.115234375
    ],
    [
      "if abs(a + b) == abs(c):\n        return True\n    else:\n        return False",
      -2.310546875
    ],
    [
      "return (a + b) == c\n\n\ndef right_angle_circle(r):\n    '''\n    Given the radius of a circle. Return True if the radius is right-angled, False\n    otherwise.\n    A right-angled circle is a circle in which one angle is right angle or 90 degree.\n    Example:\n    right_angle_circle(3) == True\n    right_angle_circle(1) == False\n    '''\n    return r == (r + r) / 2\n\n\ndef right_angle_circle(r):\n    '''\n    Given the radius of a circle. Return True if the radius is right-angled, False\n    otherwise.\n    A right-angled circle is a circle in which one angle is right angle or 90 degree.\n    Example:\n    right_angle_circle(3) == True\n    right_angle_circle(1) == False\n    '''\n    return r == (r + r / 2)",
      -2.986328125
    ],
    [
      "return (a + b == c) or (a + c == b) or (a == c + b)\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -3.017578125
    ],
    [
      "if a == b == c:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -3.09375
    ],
    [
      "if a == 0 or b == 0 or c == 0:\n        return False\n    return ((b**2 + c**2 - a**2) == 0)\n\n\ndef right_angle_triangle_squares(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_squares(3, 4, 5) == True\n    right_angle_triangle_squares(1, 2, 3) == False\n    '''\n    if a == 0 or b == 0 or c == 0:\n        return False\n    return ((b**2 + c**2 - a**2) == 0) and ((b**2 + c**2 - a**2) == 0)\n\n\ndef right_angle_triangle_squares_squares(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_squares_squares(3, 4, 5) == True\n    right_angle_triangle_squares_squares(1, 2, 3) == False\n    '''\n    if a == 0 or b == 0 or c == 0:\n        return False\n    return ((b**2 + c**2 - a**2) == 0) and ((b**2 + c**2 - a**2) == 0) and ((b**2 + c**2 - a**2) == 0)",
      -3.15625
    ],
    [
      "return abs(a + b - c) == 1\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(2, 3, 5))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -3.34375
    ],
    [
      "if a < b + c:\n        return False\n    if b < a + c:\n        return False\n    return True\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(1, 3, 2))",
      -3.48046875
    ],
    [
      "if a == b or a == c or b == c:\n        return True\n    return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(3, 4, 5))",
      -3.916015625
    ],
    [
      "if (a + b == c):\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -4.6640625
    ],
    [
      "if a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -5.05859375
    ],
    [
      "if (a + b + c) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_with_hypotenuse(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if abs(a - b) == abs(c - b):\n        return True\n    elif abs(a - b) == abs(c - c):\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_with_hypotenuse_with_hypotenuse(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if a == b == c:\n        return True\n    elif a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(1, 3, 2) == True\n    assert right_angle_triangle(1, 2, 3) == False\n\n\ndef test_right_angle_triangle_with_hypotenuse():\n    assert right_angle_triangle_with_hypotenuse(3, 4, 5) == True\n    assert right_angle",
      -5.2109375
    ],
    [
      "if (a + b == c) or (a == b and b == c):\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False",
      -5.28125
    ],
    [
      "if a == b and b == c:\n        return True\n    if a == b or b == c or c == a:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))",
      -5.9140625
    ],
    [
      "return (a + b > c) and (a + c > b) and (b + c > a)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(4, 5, 6))\nprint(right_angle_triangle(5, 6, 7))",
      -6.0703125
    ],
    [
      "if a == b and b == c:\n        return True\n    return False\n\n\ndef right_angle_circle(r):\n    '''\n    Given the radius of a circle, return True if the radius is right or \n    90 degree.\n    Example:\n    right_angle_circle(3) == True\n    right_angle_circle(1) == False\n    '''\n    if r == 3:\n        return True\n    return False\n\n\ndef right_angle_square(s):\n    '''\n    Given the length of a square, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_square(3) == True\n    right_angle_square(1) == False\n    '''\n    if s == 3:\n        return True\n    return False\n\n\ndef right_angle_pentagon(p):\n    '''\n    Given the length of a pentagon, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_pentagon(3) == True\n    right_angle_pentagon(1) == False\n    '''\n    if p == 3:\n        return True\n    return False\n\n\ndef right_angle_hexagon(h):\n    '''\n    Given the length of a hexagon, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_hexagon(3) == True\n    right_angle_hexagon(1) == False\n    '''\n    if h == 3:\n        return True\n    return False\n\n\ndef right_angle_hexagon_cuboid(h):\n    '''\n    Given the length of a hexagon, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_hexagon_cuboid(3) == True\n    right_angle_hexagon_cuboid(1) == False\n    '''\n    if h == 3:\n        return True\n    return False\n\n\ndef right_angle_hexagon_cuboid_square(h):\n    '''\n    Given the length of a hexagon, return True if",
      -6.453125
    ],
    [
      "return ((a + b) == c) or ((a + c) == b)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return ((a + b) == c) or ((a + c) == b)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return ((a + b) == c) or ((a + c) == b)\n\n\ndef right_angle_triangle_4(a, b, c, d):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3, 4, 5) == True\n    right_angle_triangle_4(1, 2, 3) == False\n    '''\n    return ((a + b) == c) or ((a + c) == d) or ((a + d) == b)",
      -6.68359375
    ],
    [
      "return a == b and b == c\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -6.890625
    ],
    [
      "return a == b and b == c\n\n\ndef right_angle_triangle2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle2(3, 4, 5) == True\n    right_angle_triangle2(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef right_angle_triangle3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle3(3, 4, 5) == True\n    right_angle_triangle3(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef right_angle_triangle4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle4(3, 4, 5) == True\n    right_angle_triangle4(1, 2, 3) == False\n    '''\n    return a == b and b == c",
      -6.97265625
    ],
    [
      "if a + b > c:\n        return False\n    else:\n        return True\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -7.1171875
    ],
    [
      "if (a + b > c):\n        return False\n    return True\n\n\ndef left_angle_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a left-angled triangle, False otherwise.\n    A left-angled triangle is a triangle in which one angle is left angle or \n    90 degree. Example:\n    left_angle_triangle(3, 4, 5) == True\n    left_angle_triangle(1, 2, 3) == False\n    '''\n    if (a + c > b):\n        return False\n    return True\n\n\ndef right_angle_triangle_with_side(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree. Example:\n    right_angle_triangle_with_side(3, 4, 5) == True\n    right_angle_triangle_with_side(1, 2, 3) == False\n    '''\n    if (a + b > c):\n        return False\n    return True\n\n\ndef left_angle_triangle_with_side(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a left-angled triangle, False otherwise.\n    A left-angled triangle is a triangle in which one angle is left angle or \n    90 degree. Example:\n    left_angle_triangle_with_side(3, 4, 5) == True\n    left_angle_triangle_with_side(1, 2, 3) == False\n    '''\n    if (a + c > b):\n        return False\n    return True",
      -7.1171875
    ],
    [
      "return a == b and b == c or a == c and b == c\n\n\ndef right_angle_sphere(r):\n    '''\n    Given the radius of a sphere. Return True if the radius is a right-angle \n    sphere, False otherwise.\n    Example:\n    right_angle_sphere(4) == True\n    right_angle_sphere(3) == False\n    '''\n    return r == 3 or r == 6 or r == 9",
      -7.26953125
    ],
    [
      "return (a + b == c) and (a == c or a == b or b == c)\n\n\ndef right_angle_triangle_no_return(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return (a + b == c) and (a == c or a == b or b == c)\n\n\ndef right_angle_triangle_no_return_no_return(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return (a + b == c) and (a == c or a == b or b == c)\n\n\ndef triangle_of_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the length of the \n    triangle.\n    Example:\n    triangle_of_sides(3, 4, 5) == 3\n    triangle_of_sides(1, 2, 3) == 2\n    '''\n    return a + b + c\n\n\ndef triangle_of_sides_no_return(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the length of the \n    triangle.\n    Example:\n    triangle_of_sides(3, 4, 5) == 3\n    triangle_of_sides(1, 2, 3) == 2\n    '''\n    return a + b + c\n\n\ndef triangle_of",
      -7.3359375
    ],
    [
      "if (a + b + c) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle(3, 4, 5) == True\n    triangle_is_right_angle(1, 2, 3) == False\n    '''\n    if a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angle_with_negative_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle_with_negative_sides(3, 4, 5) == True\n    triangle_is_right_angle_with_negative_sides(1, 2, 3) == False\n    '''\n    if a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angle_with_positive_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle_with_positive_sides(3, 4, 5) == True\n    triangle_is_right_angle_with_positive_sides(1, 2, 3) == False\n    '''\n    if a == b or b == c or c == a:\n        return True\n    else:\n        return False",
      -7.421875
    ],
    [
      "return a == b and b == c and c == 90\n\n\ndef right_angle_sphere(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_sphere(3) == True\n    right_angle_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9\n\n\ndef right_angle_sphere2(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_sphere(3) == True\n    right_angle_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9\n\n\ndef is_sphere(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    is_sphere(3) == True\n    is_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9\n\n\ndef is_sphere2(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    is_sphere(3) == True\n    is_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9",
      -7.51953125
    ],
    [
      "if a < b + c:\n        return False\n    elif a > b or b > c or c > a:\n        return False\n    return True\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    if a < b + c:\n        return False\n    elif a > b or b > c or c > a:\n        return False\n    return True",
      -7.61328125
    ],
    [
      "if a + b > c:\n        return False\n    return True\n\ndef right_angle_triangle_no_loop(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return True if a + b > c else False\n\ndef right_angle_triangle_no_loop_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if a + b == c:\n        return True\n    return False\n\ndef right_angle_triangle_no_loop_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if a + b == c:\n        return True\n    return False\n\ndef right_angle_triangle_no_loop_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example",
      -8.2890625
    ],
    [
      "return (a + b) == c\n\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_1(3, 4, 5) == True\n    right_angle_triangle_1(1, 2, 3) == False\n    '''\n    return (a + b) == c\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return (a + b) == (c + a)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return (a + b) == (c + b)\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3",
      -8.4609375
    ],
    [
      "if a == b and b == c:\n        return True\n    elif a!= b or b!= c or c!= a:\n        return False\n    else:\n        return True\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -8.5234375
    ],
    [
      "if a+b>c:\n        return False\n    else:\n        return True\n\ndef main():\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))\n\nif __name__ == \"__main__\":\n    main()",
      -8.703125
    ],
    [
      "return a == b + c and b == c + a\n\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_1(3, 4, 5) == True\n    right_angle_triangle_1(1, 2, 3) == False\n    '''\n    return (a == b or b == c or c == a) and (a + b == c + a)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return (a == b or b == c or c == a) and (a + b == c + b)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return (a == b or b == c or c == a) and (a + b == c + c)\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle",
      -8.828125
    ],
    [
      "if a + b == c:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angled(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angled(3, 4, 5) == True\n    triangle_is_right_angled(1, 2, 3) == False\n    '''\n    return right_angle_triangle(a, b, c)\n\n\ndef triangle_is_right_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle(3, 4, 5) == True\n    triangle_is_right_angle(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef triangle_is_right_angle_and_right_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle_and_right_angle(3, 4, 5) == True\n    triangle_is_right_angle_and_right_angle(1, 2, 3) == False\n    '''\n    return triangle_is_right_angle(a, b, c) and triangle_is_right_angle(a, b, c)\n\n\ndef triangle_is_right_angle_and_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-ang",
      -8.9296875
    ],
    [
      "return (a + b == c) and (a + c == b or b + c == a)\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) == (b + c) or (a + c == b or b + c == a))\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return (a + b + c) == (c + b or a + c == b)\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return a + b == (c + b) or a + c == (b + c)\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-ang",
      -9.140625
    ],
    [
      "if (a + b) % c == 0:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -9.2578125
    ],
    [
      "return ((a + b + c) % 2 == 0)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) % 2 == 0) and ((a + b + c) == (a + b + c) / 2)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) % 2 == 0) and ((a + b + c) == (a + b + c) / 2) and ((a + b + c)!= (a + b + c) / 2)\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) % 2 == 0) and ((a + b + c) == (a + b + c) / 2) and ((a + b + c)!= (a + b + c) / 2",
      -9.3203125
    ],
    [
      "return (a + b + c) % 2 == 0\n\n\ndef right_angle_trig(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_trig(3, 4, 5) == True\n    right_angle_trig(1, 2, 3) == False\n    '''\n    return (a + b + c) == (a + b + c) / 2\n\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_1(3, 4, 5) == True\n    right_angle_triangle_1(1, 2, 3) == False\n    '''\n    return a == (b + c) / 2\n\n\ndef right_angle_trig_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_trig_1(3, 4, 5) == True\n    right_angle_trig_1(1, 2, 3) == False\n    '''\n    return a == (b + c) / 2\n\n\ndef right_angle_trig_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_trig",
      -9.515625
    ],
    [
      "return a == b and b == c or a == c and b == c\n\ndef left_angle_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a left-angled triangle, False otherwise.\n    A left-angled triangle is a triangle in which one angle is left angle or \n    90 degree. Example:\n    left_angle_triangle(3, 4, 5) == True\n    left_angle_triangle(1, 2, 3) == False\n    '''\n    return a == b or a == c and b == c\n\ndef right_angle_hexagon(a, b, c):\n    '''\n    Given the lengths of the three sides of a hexagon. Return True if the three\n    sides form a right-angled hexagon, False otherwise.\n    A right-angled hexagon is a hexagon in which one angle is right angle or \n    90 degree. Example:\n    right_angle_hexagon(3, 4, 5) == True\n    right_angle_hexagon(1, 2, 3) == False\n    '''\n    return a == b or a == c and b == c\n\ndef left_angle_hexagon(a, b, c):\n    '''\n    Given the lengths of the three sides of a hexagon. Return True if the three\n    sides form a left-angled hexagon, False otherwise.\n    A left-angled hexagon is a hexagon in which one angle is left angle or \n    90 degree. Example:\n    left_angle_hexagon(3, 4, 5) == True\n    left_angle_hexagon(1, 2, 3) == False\n    '''\n    return a == b or a == c and b == c",
      -9.8671875
    ],
    [
      "if a == b and c == b:\n        return True\n    elif a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))",
      -10.125
    ],
    [
      "return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef right_angle_triangle_4(a, b, c, d):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3, 4, 5) == True\n    right_angle_triangle_4(1, 2, 3) == False\n    '''\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b) or (d == a and d == b)",
      -10.3125
    ],
    [
      "if a == b == c:\n        return True\n    elif a == b or a == c or b == c:\n        return False\n    else:\n        return True\n\n\nif __name__ == \"__main__\":\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))",
      -10.3671875
    ],
    [
      "return a == b and b == c and c == a or a == c and b == c and c == a\n\n\ndef is_triangle(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they form a\n    triangle, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 3) == False\n    '''\n    return a == b and b == c and c == a\n\n\ndef is_sides_equal(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they are\n    equal, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_sides_equal(3, 4, 5) == True\n    is_sides_equal(1, 2, 3) == False\n    '''\n    return a == b or b == c or c == a\n\n\ndef is_sides_not_equal(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they are\n    not equal, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_sides_not_equal(3, 4, 5) == True\n    is_sides_not_equal(1, 2, 3) == False\n    '''\n    return a!= b or b!= c or c!= a\n\n\ndef is_sides_greater_than(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they are\n    greater than or equal to the other sides of a triangle, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_sides_greater_than(3, 4, 5) == True\n    is_sides_greater_than(1, 2, 3) == False\n    '''\n    return a > b",
      -11.0859375
    ],
    [
      "return a == b + c\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True, \"Test failed\"\n    assert candidate(1, 2, 3) == False, \"Test failed\"\n    print(\"Test passed!\")\n\n\ncheck(right_angle_triangle)",
      -11.359375
    ],
    [
      "if a == b == c:\n        return True\n    elif a == b or a == c or b == c:\n        return False\n    else:\n        return True\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 6))\nprint(right_angle_triangle(6, 2, 1))",
      -11.453125
    ],
    [
      "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    elif a == b or b == c or a == c:\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_2(a, b, c):\n    return a + b > c",
      -12.515625
    ],
    [
      "if (a == b and b == c) or (a == c and b == c):\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(4, 3, 2))\nprint(right_angle_triangle(2, 3, 1))\nprint(right_angle_triangle(5, 3, 2))",
      -12.53125
    ],
    [
      "if a == b and b == c:\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_fast(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return a == b and b == c and c == a",
      -12.5859375
    ],
    [
      "return (a + b) == c or (a + c) == b or (b + c) == a\n\n\ndef right_angle_triangle2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle2(3, 4, 5) == True\n    right_angle_triangle2(1, 2, 3) == False\n    '''\n    return a == b and b == c and c == a",
      -12.6484375
    ],
    [
      "return a == b + c and (a == b or a == c)\n\n\ndef main():\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))\n    print(right_angle_triangle(1, 2, 4))\n    print(right_angle_triangle(1, 2, 3))\n    print(right_angle_triangle(1, 2, 4))\n    print(right_angle_triangle(1, 2, 5))\n    print(right_angle_triangle(1, 2, 6))\n    print(right_angle_triangle(1, 2, 7))\n\n\nif __name__ == '__main__':\n    main()",
      -13.8203125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}