{
  "problem": {
    "task_id": "HumanEval/71",
    "prompt": "\ndef triangle_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n",
    "canonical_solution": "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1 \n    s = (a + b + c)/2    \n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    area = round(area, 2)\n    return area\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(3, 4, 5) == 6.00, \"This prints if this assert fails 1 (good for debugging!)\"\n    assert candidate(1, 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2, 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7) == 16.25\n    assert candidate(2, 6, 3) == -1\n\n    # Check some edge cases that are easy to work out by hand.\n    assert candidate(1, 1, 1) == 0.43, \"This prints if this assert fails 2 (also good for debugging!)\"\n    assert candidate(2, 2, 10) == -1\n\n",
    "entry_point": "triangle_area",
    "docstring": "",
    "problem_id": 71
  },
  "model_name": "codet5-770m",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      4.3671875
    ],
    [
      "if a + b > c:\n        return -1\n    return a * b / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      3.986328125
    ],
    [
      "if a + b > c:\n        return -1\n    return round((a + b + c)/2, 2)\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 4.0\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 1:\n        return -1\n    return round(2*(a+b+c), 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))\nprint(triangle_perimeter(3, 4, 5))\nprint(triangle_perimeter(1, 2, 10))",
      2.27734375
    ],
    [
      "sum_a = a + b\n    sum_b = b + c\n    if sum_a > c or sum_b > c or sum_a > b:\n        return -1\n    else:\n        return round(sum_a * sum_b / 2, 2)\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      1.6787109375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b * c / 2",
      1.65234375
    ],
    [
      "if (a + b == c) or (a + c == b) or (b + c == a):\n        return round(a * b / 2, 2)\n    else:\n        return -1",
      1.0341796875
    ],
    [
      "if a+b+c > c:\n        return -1\n    else:\n        return a*b*c/2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.578125
    ],
    [
      "if a + b > c:\n        return -1\n    return a * b / 2",
      -0.697265625
    ],
    [
      "if a + b >= c:\n        return -1\n    else:\n        return (a * b) / 2\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.85693359375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a * b / 2, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.85693359375
    ],
    [
      "if (a + b > c) or (b + c > a) or (c + a > b):\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.85791015625
    ],
    [
      "if (a + b > c):\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.85791015625
    ],
    [
      "if a+b > c:\n        return -1\n    return (a+b+c)/2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.85791015625
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b + c) / 2\n\n\nif __name__ == '__main__':\n    assert triangle_area(3, 4, 5) == 6.00\n    assert triangle_area(1, 2, 10) == -1",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    return round((a + b + c) / 2, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a * b / c, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a*b/3, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a*b/3, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if (a + b > c):\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n\nif __name__ == \"__main__\":\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a+b+c == 2*max(a,b,c):\n        return round((a*b*c)/2, 2)\n    return -1",
      -0.8583984375
    ],
    [
      "if (a + b) > c:\n        return -1\n    else:\n        return ((a + b) * (c + a)) / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b < c:\n        return -1\n    else:\n        return round(a*b/3, 2)\n\nif __name__ == \"__main__\":\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a > b + c:\n        return -1\n    else:\n        return a * b * c / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if (a + b + c) < b + c:\n        return -1\n    else:\n        return ((a + b + c) * (a + b + c)) / 2",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    return round((a + b + c) / 2, 2)\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    return a*b/2\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a*b*c)/2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if (a + b) > c:\n        return -1\n    else:\n        return (a + b) * (c / 2)\n\n\ndef main():\n    a = int(input('Enter the first side: '))\n    b = int(input('Enter the second side: '))\n    c = int(input('Enter the third side: '))\n    print(triangle_area(a, b, c))\n\n\nif __name__ == '__main__':\n    main()",
      -0.8583984375
    ],
    [
      "if a+b>c:\n        return -1\n    else:\n        return (a+b+c)/2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "return round(a + b + c, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_area(0, 0, 0))",
      -0.8583984375
    ],
    [
      "if (a + b == c):\n        return (a * b) / 2\n    else:\n        return -1\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a+b+c > 2:\n        return -1\n    else:\n        return round((a+b+c)/2,2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a * b) / 2",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return ((a * b) + (c * c)) / 2.0\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a + b + c)/2, 2)",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    return a * b / 2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a + b + c, 2)\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a * b) / 2\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_area(2, 3, 4))",
      -0.8583984375
    ],
    [
      "if a < b + c:\n        return 0\n    else:\n        return float(round(a*b/3, 2))\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if (a+b+c) > b:\n        return -1\n    return (a*b)/2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.8583984375
    ],
    [
      "if (a + b > c):\n        return -1\n    else:\n        return a * b / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))\nprint(triangle_area(2, 4, 6))\nprint(triangle_area(3, 5, 7))",
      -0.8583984375
    ],
    [
      "if (a + b) > c:\n        return -1\n    else:\n        return round(a * b / 2, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.85888671875
    ],
    [
      "if a+b>c:\n        return -1\n    else:\n        return round((a+b+c)/2, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -0.85888671875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\ndef main():\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n\nif __name__ == '__main__':\n    main()",
      -0.85888671875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a*b/2\n\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -2.572265625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 3\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the triangle\n    rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 4.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return a + b + c\n    else:\n        return -1\n\n\ndef triangle_area_sum(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the sum of the triangle.\n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_sum(3, 4, 5) == 6\n    triangle_area_sum(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return a + b + c\n    else:\n        return -1\n\n\ndef triangle_perimeter_sum(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the sum of the triangle.\n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_sum(3, 4, 5) == 4\n    triangle_perimeter_sum(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return a + b + c\n    else:\n        return -1\n\n\ndef triangle_area_sum_of_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the sum of the triangle.\n    Otherwise return -1\n    Th",
      -2.5859375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a * b / 2, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -2.640625
    ],
    [
      "if a+b>c:\n        return -1\n    else:\n        return round(a*b/c, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -3.2265625
    ],
    [
      "if (a < b + c) or (b < a + c) or (c < a + b):\n        return -1\n    else:\n        return a*b*c/2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -3.974609375
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b + c) / 2\n\ndef triangle_area_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area(3, 4, 5) == 6.00\n    triangle_area(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    return (a * b + c * a) / 2\n\n\nif __name__ == \"__main__\":\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_area_2(3, 4, 5))\n    print(triangle_area_2(1, 2, 10))",
      -4.2109375
    ],
    [
      "sum = a + b + c\n    if sum < c:\n        return round(sum, 2)\n    else:\n        return -1\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -4.2421875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a + b + c)/2, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -4.3125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the \n    triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 1:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n\ndef triangle_area_and_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area and perimeter of \n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 1:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)",
      -4.62109375
    ],
    [
      "if a + b > c:\n        return -1\n    return a * b / 2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -4.63671875
    ],
    [
      "if (a + b) > c:\n        return -1\n    return (a + b + c) / 2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -4.98828125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -5.125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b) * (c / 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -5.19140625
    ],
    [
      "if a < b + c:\n        return -1\n    else:\n        return a * b / 2 + c * c / 2\n\n\nif __name__ == \"__main__\":\n    print(triangle_area(3, 4, 5))",
      -5.2734375
    ],
    [
      "if (a < b + c) or (a < c + b) or (b < c + a):\n        return -1\n    else:\n        return a * b * c / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -5.81640625
    ],
    [
      "if a+b+c > c:\n        return -1\n    else:\n        return (a+b+c)/2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -5.94140625
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b + c) / 2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -6.21875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b + c)/2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -6.37109375
    ],
    [
      "if a + b > c:\n        return -1\n    return (a * b * c) / 2\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -6.6171875
    ],
    [
      "if a + b > c:\n        return -1\n    return (a + b) * (c / 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -6.7890625
    ],
    [
      "if (a < b + c) and (b < a + c) and (c < a + b):\n        return round(((a + b + c) / 2), 2)\n    return -1\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -7.01171875
    ],
    [
      "if a < b + c and b < a + c and c < a + b:\n        return round((a*b*c)/2, 2)\n    else:\n        return -1\n\ndef rectangle_area(a, b, c):\n    '''\n    Given the lengths of the two rectangles. Return the area of the rectangle rounded to 2 decimal\n    points if the two rectangles form a valid rectangle. \n    Otherwise return -1\n    A rectangle make a valid rectangle when the sum of any two rectangles is greater than\n    the third rectangle.\n    Example:\n    rectangle_area(3, 4, 5) == 6.00\n    rectangle_area(1, 2, 10) == -1\n    '''\n    if a < b + c and b < a + c and c < a + b:\n        return round((a*b*c)/2, 2)\n    else:\n        return -1\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the triangle\n    rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than\n    the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a < b + c and b < a + c and c < a + b:\n        return round((a*b*c)/2, 2)\n    else:\n        return -1\n\ndef rectangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the two rectangles. Return the perimeter of the rectangle\n    rounded to 2 decimal points if the two rectangles form a valid rectangle. \n    Otherwise return -1\n    A rectangle make a valid rectangle when the sum of any two rectangles is greater than\n    the third rectangle.\n    Example:\n    rectangle_perimeter(3, 4, 5) == 6.00\n    rectangle_perimeter(1, 2, 10) == -1\n    '''\n    if a < b + c and b",
      -7.55859375
    ],
    [
      "if a+b>c:\n        return -1\n    else:\n        return a*b/2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -7.5703125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a * b / 3, 2)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -8.4375
    ],
    [
      "return round((a + b + c) / 2, 2)\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -8.46875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a*b/2\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -8.6171875
    ],
    [
      "if a + b > c:\n        return -1\n    return a * b / 2\n\n\nif __name__ == \"__main__\":\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -8.9921875
    ],
    [
      "if a + b > c:\n        return -1\n    return round(a * b / c, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -9.359375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a * b) / 2, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -9.8203125
    ],
    [
      "if (a < b + c) or (b < a + c) or (c < a + b):\n        return -1\n    else:\n        return round((a*b*c)/2, 2)\n\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -10.859375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 2.0\n\ndef square_area(a, b):\n    '''\n    Given the lengths of the squares of a triangle. Return the area of the triangle\n    rounded to 2 decimal points if the squares form a valid triangle. Otherwise return -1\n    Square sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    square_area(3, 4) == 6.00\n    square_area(1, 2) == -1\n    '''\n    if a + b > b:\n        return -1\n    else:\n        return a * b / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the sides of a triangle. Return the perimeter of the triangle rounded\n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a * 2 + b * 2 + c * 2\n\ndef square_perimeter(a, b):\n    '''\n    Given the lengths of the squares of a triangle. Return the perimeter of the triangle rounded\n    to 2 decimal points if the squares form a valid triangle. Otherwise return -1\n    Square sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    square_perimeter(3, 4) == 6.00\n    square_perimeter(1, 2) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a * 2 + b * 2\n\ndef is_valid(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded\n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Th",
      -10.8828125
    ],
    [
      "if a < b + c:\n        return 0\n    else:\n        return (-1)\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -11.203125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a + b + c) / 2, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -11.4140625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a * b) / 2\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return (a + b + c) / 2\n    else:\n        return -1\n\n\ndef triangle_area_from_points(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_from_points(3, 4, 5) == 6.00\n    triangle_area_from_points(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return (a + b + c) / 2\n    else:\n        return -1\n\n\ndef triangle_perimeter_from_points(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_from_points(3, 4, 5) == 6.00\n    triangle_perimeter_from_points(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return (a + b + c) / 2",
      -11.6015625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a * b) / 2, 2)\n\n\ndef spherical_area(a, b, c):\n    '''\n    Given the lengths of the spherical coordinates of a spherical triangle. \n    Return the area of the spherical rounded to 2 decimal points if the spherical \n    coordinates form a valid spherical triangle. \n    Otherwise return -1\n    Spherical coordinates make a valid spherical triangle when the sum of any two \n    coordinates is greater than the third coordinate.\n    Example:\n    spherical_area(3, 4, 5) == 6.00\n    spherical_area(1, 2, 10) == -1\n    '''\n    if a**2 + b**2 + c**2 > 1:\n        return -1\n    else:\n        return round((a * b * c) / 2, 2)\n\n\ndef euclidean_distance(p1, p2):\n    '''\n    Given two points, compute the euclidean distance between them.\n    Example:\n    euclidean_distance(1, 2) == 1\n    euclidean_distance(0, 0) == 1\n    '''\n    return round((p1[0] - p2[0]), 2) + round((p1[1] - p2[1]), 2)\n\n\ndef euclidean_distance_sq(p1, p2):\n    '''\n    Given two points, compute the squared euclidean distance between them.\n    Example:\n    euclidean_distance_sq(1, 2) == 4\n    euclidean_distance_sq(0, 0) == 1\n    '''\n    return round(euclidean_distance(p1, p2) ** 2, 2)\n\n\ndef euclidean_distance_sq_spherical(p1, p2):\n    '''\n    Given two points, compute the squared euclidean distance between them.\n    Example:\n    euclidean_distance_sq_spherical(1, 2) == 4\n    euclidean_distance_sq_spherical(0, 0) == 1\n    '''\n    return round(euclidean_distance_sq(p1, p2) ** 2, 2)",
      -11.796875
    ],
    [
      "if (a + b + c) > (b + c + a):\n        return -1\n    else:\n        return (a*b * c) / 2\n\n\ndef square_area(a, b):\n    '''\n    Given the lengths of the squares of a triangle. Return the area of the square rounded\n    to 2 decimal points if the squares form a valid square. Otherwise return -1\n    Example:\n    square_area(3, 4) == 6.00\n    square_area(1, 2) == -1\n    '''\n    if (a * a) + (b * b) == (c * c):\n        return (a * b * c) / 2\n    else:\n        return -1\n\n\ndef rectangle_area(a, b, c, d):\n    '''\n    Given the lengths of the rectangles of a triangle. Return the area of the rectangle rounded\n    to 2 decimal points if the rectangles form a valid rectangle. Otherwise return -1\n    Example:\n    rectangle_area(3, 4, 5, 10) == 6.00\n    rectangle_area(1, 2, 10, 20) == -1\n    '''\n    if (a * a + b * b + c * c) == (a * b * d + b * d + c * c):\n        return (a * b * d) / 2\n    else:\n        return -1\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the triangle rounded\n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if (a + b + c) > (b + c + a):\n        return -1\n    else:\n        return (a + b + c)\n\n\ndef triangle_area_of_rectangle(a, b, c, d):\n    '''\n    Given the lengths of the rectangles of a triangle. Return the area of the rectangle rounded\n    to 2 decimal points if the rectangles form a valid",
      -12.1015625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a*b/2, 2)\n\ndef rectangle_area(a, b, c):\n    '''\n    Given the lengths of the four sides of a rectangle. Return the area of the rectangle rounded \n    to 2 decimal points if the four sides form a valid rectangle. Otherwise return -1\n    Example:\n    rectangle_area(3, 4, 5) == 6.00\n    rectangle_area(1, 2, 10) == -1\n    '''\n    if a + b + c > 5:\n        return -1\n    else:\n        return round(a*b*c/2, 2)\n\ndef square_area(a):\n    '''\n    Given the length of a square. Return the square rounded to 2 decimal points if the square \n    is a valid square. Otherwise return -1\n    Example:\n    square_area(3) == 6.00\n    square_area(1) == -1\n    '''\n    if a > 1:\n        return round(a**2, 2)\n    else:\n        return -1\n\ndef circumcircle_area(r):\n    '''\n    Given the radius of a circumcircle. Return the circumcircle rounded to 2 decimal \n    points if the circumcircle is a valid circumcircle. Otherwise return -1\n    Example:\n    circumcircle_area(3) == 6.00\n    circumcircle_area(1) == -1\n    '''\n    if r > 0:\n        return round(r**2, 2)\n    else:\n        return -1\n\ndef quad_area(a, b, c):\n    '''\n    Given the lengths of the four sides of a quad. Return the area of the quad rounded \n    to 2 decimal points if the four sides form a valid quad. Otherwise return -1\n    Example:\n    quad_area(3, 4, 5) == 6.00\n    quad_area(1, 2, 10) == -1\n    '''\n    if a + b + c > 4:\n        return -1\n    else:\n        return round(a*b*c/2, 2)\n\ndef tetragonal_area(a, b, c):",
      -12.5234375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\ndef triangle_area_iterative(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_iterative(3, 4, 5) == 6.00\n    triangle_area_iterative(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\ndef triangle_area_recursive(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_recursive(3, 4, 5) == 6.00\n    triangle_area_recursive(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return a + b + c\n\ndef triangle_area_recursive_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_recursive_1(3, 4, 5) == 6.00\n    triangle_area_recursive_1(1, 2, 10) == -1\n    '''\n    if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\ndef triangle_area_recursive",
      -12.65625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b * c\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -12.8828125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n\ndef square_area(a, b, c):\n    '''\n    Given the lengths of the squares of a square. Return the area of the square\n    rounded to 2 decimal points if the squares form a valid square. Otherwise return -1\n    Example:\n    square_area(3, 4, 5) == 6.00\n    square_area(1, 2, 10) == -1\n    '''\n    if a + b + c == 2 * a:\n        return 0.5 * a\n    else:\n        return -1\n\n\ndef pentagon_area(a, b, c):\n    '''\n    Given the lengths of the pentagons of a pentagon. Return the area of the pentagon\n    rounded to 2 decimal points if the pentagons form a valid pentagon. Otherwise return -1\n    Example:\n    pentagon_area(3, 4, 5) == 6.00\n    pentagon_area(1, 2, 10) == -1\n    '''\n    if a + b + c == 3 * a:\n        return 0.5 * a\n    else:\n        return -1\n\n\ndef hexagon_area(a, b, c):\n    '''\n    Given the lengths of the hexagons of a hexagon. Return the area of the hexagon\n    rounded to 2 decimal points if the hexagons form a valid hexagon. Otherwise return -1\n    Example:\n    hexagon_area(3, 4, 5) == 6.00\n    hexagon_area(1, 2, 10) == -1\n    '''\n    if a + b + c == 2 * a + b + c:\n        return 0.5 * a\n    else:\n        return -1\n\n\ndef octagon_area(a, b, c):\n    '''\n    Given the lengths of the octagons of a octagon. Return the area of the octagon\n    rounded to 2 decimal points if the octagons form a valid octagon. Otherwise return -1\n    Example:",
      -12.890625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round(a*b/2, 2)\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the \n    triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 2:\n        return -1\n    else:\n        return round(a*b*c/2, 2)\n\n\ndef triangle_area_and_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded \n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 2:\n        return -1\n    else:\n        return round(a*b*c/2, 2)\n\n\ndef triangle_perimeter_and_area(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded \n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter_and_area(3, 4, 5) == 6.00\n    triangle_perimeter_and_area(1, 2, 10) == -1\n    '''\n    if a + b + c > 2:\n        return -1",
      -13.2421875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 2\n\n\nif __name__ == \"__main__\":\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_area(1, 2, -10))",
      -13.40625
    ],
    [
      "if (a < b + c) or (b < a + c) or (c < a + b):\n        return -1\n    else:\n        return ((a + b) * (c + a)) / 2\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -14.0625
    ],
    [
      "if a < b + c or a < c + b or b < c + a:\n        return -1\n    else:\n        return ((a * b) + (b * c) + (c * a)) / 2.0\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -14.5703125
    ],
    [
      "if a + b < c:\n        return -1\n    return (a + b + c) / 2\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the \n    triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the \n    third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c < 2:\n        return -1\n    return 2 * (a + b + c)\n\n\ndef triangle_area_and_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle \n    rounded to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c < 2:\n        return -1\n    return (a + b + c) / 2\n\n\ndef triangle_area_and_perimeter_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle \n    rounded to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter_2(3, 4, 5) == 6.00\n    triangle_area_and_perimeter_2(1, 2, 10) == -1\n    '''\n    if a + b + c < 2:\n        return -1\n    return 2 * (a + b + c)\n\n\nif __name",
      -14.8046875
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a * b + c * c) / 2, 2)\n\n\nprint(triangle_area(3, 4, 5))\nprint(triangle_area(1, 2, 10))",
      -15.2578125
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return round((a * b + c * c) / 2, 2)\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -15.375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 2.0\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the triangle rounded\n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 3.0\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return a + b + c\n    else:\n        return -1\n\ndef triangle_area_and_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded\n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return triangle_area(a, b, c) + triangle_perimeter(a, b, c)\n    else:\n        return -1\n\ndef triangle_area_and_perimeter_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded\n    to 2 decimal points if the three sides form a valid triangle. Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter_2(3, 4, 5) == 6.00\n    triangle_area_and_perimeter_2(1, 2, 10) == -1\n    '''\n    if a + b + c > 0:\n        return (a * b) + (a",
      -15.65625
    ],
    [
      "if a < b + c:\n        return 0\n    else:\n        return (b ** 2) - (4 * a * c)\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of the triangle rounded to 2 decimal points. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a < b + c:\n        return 0\n    else:\n        return (b + c) * 2\n\n\ndef triangle_area_and_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a < b + c:\n        return 0\n    else:\n        return (b + c) * 2 + (a ** 2)\n\n\ndef triangle_area_and_perimeter_with_default_values(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a < b + c:\n        return 0\n    else:\n        return (b + c) * 2\n\n\ndef triangle_area_and_",
      -15.7109375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return a * b / 2\n\n\ndef triangle_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the perimeter of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_perimeter(3, 4, 5) == 6.00\n    triangle_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 3:\n        return -1\n    else:\n        return a + b + c\n\n\ndef triangle_area_and_perimeter(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the area of\n    the triangle rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise return -1\n    Three sides make a valid triangle when the sum of any two sides is greater \n    than the third side.\n    Example:\n    triangle_area_and_perimeter(3, 4, 5) == 6.00\n    triangle_area_and_perimeter(1, 2, 10) == -1\n    '''\n    if a + b + c > 3:\n        return -1\n    else:\n        return a + b + c\n\n\ndef test_function():\n    test_cases = [\n    (3, 4, 5),\n    (1, 2, 10),\n    (3, 5, 7),\n    (1, 4, 8),\n    (3, 4, 8)\n    ]\n\n    for i in test_cases:\n        assert triangle_area(i[0], i[1], i[2]) == triangle_area_and_perimeter(i[0], i[1], i[2])\n\n\ntest_function()",
      -16.9375
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return ((a + b) * (c / 2)) / 2\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -17.234375
    ],
    [
      "return round(a + b + c, 2)\n\n\ndef test_triangle_area():\n    assert triangle_area(3, 4, 5) == 6.00\n    assert triangle_area(1, 2, 10) == -1\n\n\ndef rectangle_area(a, b, c):\n    '''\n    Given the lengths of the four sides of a rectangle. Return the area of\n    the rectangle rounded to 2 decimal points if the four sides form a valid rectangle. \n    Otherwise return -1\n    The four sides make a valid rectangle when the sum of any two sides is greater\n    than the third side. Example:\n    rectangle_area(3, 4, 5) == 6.00\n    rectangle_area(1, 2, 10) == -1\n    '''\n    return round(a + b + c, 2)\n\n\ndef test_rectangle_area():\n    assert rectangle_area(3, 4, 5) == 6.00\n    assert rectangle_area(1, 2, 10) == -1\n\n\ndef cube_area(a):\n    '''\n    Given the length of a cube. Return the area of the cube rounded to 2 decimal\n    points if the cube form a valid cube. Otherwise return -1\n    Example:\n    cube_area(3) == 6.00\n    cube_area(1) == -1\n    '''\n    return round(a ** 3, 2)\n\n\ndef test_cube_area():\n    assert cube_area(3) == 6.00\n    assert cube_area(1) == -1",
      -17.265625
    ],
    [
      "if a + b > c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))\n    print(triangle_area(1, 2, 3))\n    print(triangle_area(2, 3, 4))\n    print(triangle_area(2, 3, 5))\n    print(triangle_area(2, 4, 3))\n    print(triangle_area(2, 4, 5))\n    print(triangle_area(2, 5, 3))\n    print(triangle_area(2, 5, 4))\n    print(triangle_area(2, 5, 5))\n    print(triangle_area(2, 5, 6))\n    print(triangle_area(2, 5, 7))\n    print(triangle_area(2, 5, 8))",
      -17.40625
    ],
    [
      "if a < b + c:\n        return 0\n    elif a > b + c:\n        return -1\n    else:\n        return (a + b + c) / 2\n\n\nif __name__ == '__main__':\n    print(triangle_area(3, 4, 5))\n    print(triangle_area(1, 2, 10))",
      -17.5
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}