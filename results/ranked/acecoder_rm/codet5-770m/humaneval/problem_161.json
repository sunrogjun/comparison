{
  "problem": {
    "task_id": "HumanEval/161",
    "prompt": "\ndef solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n",
    "canonical_solution": "    flg = 0\n    idx = 0\n    new_str = list(s)\n    for i in s:\n        if i.isalpha():\n            new_str[idx] = i.swapcase()\n            flg = 1\n        idx += 1\n    s = \"\"\n    for i in new_str:\n        s += i\n    if flg == 0:\n        return s[len(s)::-1]\n    return s\n",
    "test": "def check(candidate):\n\n    # Check some simple cases\n    assert candidate(\"AsDf\") == \"aSdF\"\n    assert candidate(\"1234\") == \"4321\"\n    assert candidate(\"ab\") == \"AB\"\n    assert candidate(\"#a@C\") == \"#A@c\"\n    assert candidate(\"#AsdfW^45\") == \"#aSDFw^45\"\n    assert candidate(\"#6@2\") == \"2@6#\"\n\n    # Check some edge cases that are easy to work out by hand.\n    assert candidate(\"#$a^D\") == \"#$A^d\"\n    assert candidate(\"#ccc\") == \"#CCC\"\n\n    # Don't remove this line:\n",
    "entry_point": "solve",
    "docstring": "",
    "problem_id": 161
  },
  "model_name": "codet5-770m",
  "dataset": "humaneval",
  "ranker_name": "acecoder_rm",
  "num_candidates": 100,
  "ranked_candidates": [
    [
      "if s.isalpha():\n        return s[::-1]\n    else:\n        return s[::-1]",
      3.927734375
    ],
    [
      "result = ''\n    for c in s:\n        if c.isalpha():\n            if c.isupper():\n                result += c.lower()\n            else:\n                result += c.upper()\n        else:\n            result += c\n    return result\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      3.2109375
    ],
    [
      "return s[::-1] if len(s) > 0 else s\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      3.2109375
    ],
    [
      "if s:\n        return s[::-1]\n    else:\n        return \"\"\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      2.3046875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[1:][::-1] + s[0] + s[2:]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      1.5673828125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1][:1] + s[::-1][1:]\n\n\ndef solve2(s):\n    \"\"\"\n    :type s: str\n    :rtype: str\n    \"\"\"\n    return ''.join(reversed(s))\n\n\nif __name__ == '__main__':\n    assert solve('1234') == '4321'\n    assert solve('ab') == 'AB'\n    assert solve('#a@C') == '#A@c'\n    assert solve2('1234') == '4321'\n    assert solve2('ab') == 'AB'\n    assert solve2('#a@C') == '#A@c'",
      1.2919921875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace(\" \", \"\").replace(\"#\", \"\").replace(\"a\", \"\").replace(\"b\", \"\").replace(\"c\", \"\").replace(\"d\", \"\").replace(\"e\", \"\").replace(\"f\", \"\").replace(\"g\", \"\").replace(\"h\", \"\").replace(\"i\", \"\").replace(\"j\", \"\").replace(\"k\", \"\").replace(\"l\", \"\").replace(\"m\", \"\").replace(\"n\", \"\").replace(\"o\", \"\").replace(\"p\", \"\").replace(\"q\", \"\").replace(\"r\", \"\").replace(\"s\", \"\").replace(\"t\", \"\").replace(\"u\", \"\").replace(\"v\", \"\").replace(\"w\", \"\").replace(\"x\", \"\").replace(\"y\", \"\").replace(\"z\", \"\")",
      1.052734375
    ],
    [
      "s = list(s)\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if s[i].isupper() else s[i].lower()\n            i += 1\n        else:\n            s[i] = s[i].upper() if s[i].isupper() else s[i].lower()\n            i += 1\n\n    return \"\".join(s)\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      0.99755859375
    ],
    [
      "if len(s) > 0:\n        return s[::-1]\n    else:\n        return s\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      0.986328125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].lower()\n    if s[0].isupper():\n        return s[::-1].upper()\n    return s[::-1]",
      0.82958984375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if len(s) == 1:\n        return s[::-1]\n    if s[0].isupper():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()",
      0.8125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s\n    else:\n        return s[0] + solve(s[1:])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      0.79296875
    ],
    [
      "if s.isalpha():\n        return s[::-1].lower() + s[1:]\n    else:\n        return s[::-1]\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      0.61865234375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].lower()\n        else:\n            return s[::-1].upper()",
      0.31201171875
    ],
    [
      "result = \"\"\n    for i in s:\n        if i.isalpha():\n            result = result + i.lower()[::-1] + i.upper()\n        else:\n            result = result + i\n    return result",
      0.311767578125
    ],
    [
      "result = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if i < len(s)-1:\n                result += s[i].upper()\n            else:\n                result += s[i].lower()\n        else:\n            if i < len(s)-1:\n                result += s[i].lower()\n            else:\n                result += s[i].upper()\n    return result\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      0.2169189453125
    ],
    [
      "return s[::-1] if len(s) > 0 else s\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      0.186279296875
    ],
    [
      "return \"\".join(list(reversed(s)))\n\n\ndef solve2(s):\n    return s[::-1]\n\n\ndef solve3(s):\n    return s[::2]\n\n\ndef solve4(s):\n    return s[::-2]\n\n\ndef solve5(s):\n    return s[::-3]\n\n\ndef solve6(s):\n    return s[::-4]\n\n\ndef solve7(s):\n    return s[::-5]\n\n\ndef solve8(s):\n    return s[::-6]\n\n\ndef solve9(s):\n    return s[::-7]\n\n\ndef solve10(s):\n    return s[::-8]\n\n\ndef solve11(s):\n    return s[::-9]\n\n\ndef solve12(s):\n    return s[::-10]\n\n\ndef solve13(s):\n    return s[::-11]\n\n\ndef solve14(s):\n    return s[::-12]\n\n\ndef solve15(s):\n    return s[::-13]\n\n\ndef solve16(s):\n    return s[::-14]\n\n\ndef solve17(s):\n    return s[::-15]\n\n\ndef solve18(s):\n    return s[::-16]\n\n\ndef solve19(s):\n    return s[::-17]\n\n\ndef solve20(s):\n    return s[::-18]\n\n\ndef solve21(s):\n    return s[::-19]\n\n\ndef solve22(s):\n    return s[::-20]\n\n\ndef solve23(s):\n    return s[::-21]\n\n\ndef solve24(s):\n    return s[::-22]\n\n\ndef solve25(s):\n    return s[::-23]\n\n\ndef solve26(s):\n    return s[::-24]\n\n\ndef solve27(s):\n    return s[::-25]\n\n\ndef solve28(s):\n    return s[::-26]\n\n\ndef solve29(s):",
      0.15234375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    return s[::-1].replace(s[0], s[0].upper())",
      0.1376953125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]).lower() + s[0].upper()\n        else:\n            return solve(s[1:]).upper() + s[0]",
      0.109619140625
    ],
    [
      "if s == \"\":\n        return \"\"\n    else:\n        return s[::-1]\n\n\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"1234\"))",
      0.0168304443359375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace(s[0], s[0].upper())\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -0.36767578125
    ],
    [
      "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n        else:\n            s[i] = s[i].upper()\n    return \"\".join(s)\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.396484375
    ],
    [
      "if s == \"\":\n        return \"\"\n    if s[0].isalpha():\n        return s[::-1].lower()\n    else:\n        return s[::-1].upper()",
      -0.4404296875
    ],
    [
      "return s[::-1] if s else \"\"\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -0.529296875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].upper() if s[0].isalpha() else s[::-1].lower()\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\"))",
      -0.65234375
    ],
    [
      "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + solve(s[0].upper() + s[0].lower()[::-1])\n    else:\n        return solve(s[::-1])",
      -0.65283203125
    ],
    [
      "if s == \"\":\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.75048828125
    ],
    [
      "if s[0].isalpha():\n        return s[1:].upper() + s[0].lower()[::-1]\n    else:\n        return s[::-1]\n\n\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.82958984375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].upper()\n        else:\n            return s[::-1].lower()\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.85693359375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + solve(s[0].upper())\n    else:\n        return solve(s[::-1]) + solve(s[0].lower())\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -0.85693359375
    ],
    [
      "if len(s)==0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + solve(s[0].upper()+s[1:])\n        else:\n            return solve(s[1:]) + solve(s[0])\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.85693359375
    ],
    [
      "s = s.lower()\n    return s[::-1] if s else s",
      -0.85693359375
    ],
    [
      "if not s:\n        return \"\"\n    if not s[0].isalpha():\n        return s[::-1]\n    return s[::-1].upper() + s[1:]",
      -0.857421875
    ],
    [
      "s = list(s)\n    if not s:\n        return \"\"\n    if s[0].isalpha():\n        return s[::-1][::-1]\n    else:\n        return s[::-1]",
      -0.857421875
    ],
    [
      "if len(s) > 0:\n        return s[::-1]\n    else:\n        return s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.85791015625
    ],
    [
      "if s == \"\":\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "if s:\n        if s[0].isalpha():\n            return s[::-1].lower() + s[1:]\n        else:\n            return s[::-1]\n    else:\n        return s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "if s == \"\":\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].upper()\n        else:\n            return s[::-1].lower()\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "if not s:\n        return s\n    # check if the string contains no letters\n    if not s[0].isalpha():\n        return s[::-1]\n    # if no letters, reverse the string\n    else:\n        return s[::-1].upper() + s[::-1].lower() + s[::-1].upper()\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -0.8583984375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1] + s[1:]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].lower() + solve(s[0].upper())\n    else:\n        return solve(s[1:]) + s[0]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n\n    if s[0] == '#' or s[0] == '@':\n        return s[::-1][1:] + s[::-1][:-1]\n\n    return s[::-1][::-1]",
      -0.8583984375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s[0]\n    else:\n        return s[::-1][:1].upper() + s[::-1][1:]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "s = s.lower()\n    if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1][::-1]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -0.8583984375
    ],
    [
      "if s.isalpha():\n        return s.lower().upper()[::-1]\n    else:\n        return s",
      -0.8876953125
    ],
    [
      "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            elif s[i].isupper():\n                s[i] = s[i].lower()\n            else:\n                s[i] = s[i].upper() + s[i].lower()\n        else:\n            s[i] = s[i][::-1]\n    return \"\".join(s)\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -0.95703125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()",
      -0.98828125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + s[0].upper() + solve(s[2:])\n        else:\n            return solve(s[1:]) + s[0] + solve(s[2:])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -1.025390625
    ],
    [
      "if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:])\n    else:\n        return solve(s[::-1]) + s[0]",
      -1.068359375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -1.197265625
    ],
    [
      "if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:]) + solve(s[:1])\n    else:\n        return solve(s[::-1]) + solve(s[1:])[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -1.2001953125
    ],
    [
      "if not s:\n        return \"\"\n    s = s.lower()\n    if s[0] == \"#\":\n        s = s[1:]\n    if s[0] == \"a\":\n        s = s[1:]\n        s = s.upper()\n    return s\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -1.2587890625
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace(s[0], s[1])\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -1.275390625
    ],
    [
      "if s[0].isalpha():\n        return s[::-1]\n    return s\n\ndef main():\n    s = input()\n    print(solve(s))\n\nif __name__ == \"__main__\":\n    main()",
      -1.45703125
    ],
    [
      "if s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1]\n\n\nif __name__ == '__main__':\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    assert solve(\"\") == \"\"\n    assert solve(\"\") == \"\"",
      -1.5908203125
    ],
    [
      "if s.isalpha():\n        return s[::-1].upper() if s[0].isupper() else s[::-1].lower()\n    else:\n        return s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -1.607421875
    ],
    [
      "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n    if len(s) == 0:\n        return \"\".join(reversed(s))\n    else:\n        return \"\".join(s)",
      -1.65625
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1].lower() + s[1:]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -1.748046875
    ],
    [
      "if len(s) > 0:\n        if s[0].isalpha():\n            return s[::-1].lower()\n        return s[::-1].upper()\n    return s[::-1]",
      -1.9453125
    ],
    [
      "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].lower() if s[i].islower() else s[i].upper()\n        elif s[i].isdigit():\n            s[i] = s[i] if s[i].isdigit() else s[i].lower()\n    return ''.join(s)\n\n\ns = input()\nprint(solve(s))",
      -2.005859375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1][0] + s[::-1][1:]\n\n\nif __name__ == \"__main__\":\n    s = input(\"Enter a string: \")\n    print(\"Original string: \", s)\n    print(\"Reverse string: \", solve(s))",
      -2.01953125
    ],
    [
      "if s == \"\":\n        return \"\"\n    else:\n        if s[0].isalpha():\n            return s[::-1].upper()\n        else:\n            return s[::-1]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -2.09375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper()\n    return s[::-1].lower()\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -2.185546875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].lower() + s[1:]\n        else:\n            return s[::-1].upper() + s[1:]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -2.861328125
    ],
    [
      "result = \"\"\n    if not s:\n        return result\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].isupper():\n                result += s[i].lower()[::-1]\n            else:\n                result += s[i].upper()[::-1]\n        else:\n            result += s[i]\n    return result\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -2.982421875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].upper() + s[::-1].lower() + s[::-1].upper() + s[::-1].lower()\n\n\n\nprint(solve(\"ab\"))\nprint(solve(\"1234\"))\nprint(solve(\"#a@C\"))",
      -3.0234375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    return s[::-1].upper() + s[::-1].lower() + s[::-1].upper()[::-1] + s[::-1].lower()[::-1]\n\n\nif __name__ == '__main__':\n    s = '1234'\n    print(solve(s))",
      -3.064453125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[1:].lower() + s[0].upper() + s[::-1]\n        else:\n            return s[::-1]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -3.080078125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    return s[::-1]",
      -3.091796875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[1:][::-1] + s[0]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -3.091796875
    ],
    [
      "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + solve(s[2:])\n    else:\n        return solve(s[1:]) + solve(s[0].lower())\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -3.158203125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace('a', s[0].upper()).replace('b', s[0].lower()).replace('c', s[0].upper()).replace('d', s[0].lower()).replace('e', s[0].upper()).replace('f', s[0].lower()).replace('g', s[0].upper()).replace('h', s[0].lower())\n\nif __name__ == '__main__':\n    s = input()\n    print(solve(s))",
      -3.3125
    ],
    [
      "if s == \"\":\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].lower() + s[1:]\n    else:\n        return s[::-1].upper() + s[1:]",
      -3.341796875
    ],
    [
      "if s == '':\n        return ''\n    elif s[0].isalpha():\n        return s[::-1]\n    else:\n        return solve(s[1:]) + s[0] + solve(s[::-1])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -3.658203125
    ],
    [
      "# Your code here\n    if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:]) + solve(s[0].upper())\n    else:\n        return solve(s[::-1]) + solve(s[0])\n    \n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -3.69140625
    ],
    [
      "result = \"\"\n    for i in s:\n        if i.isalpha():\n            result += i.lower()[::-1] if i.isupper() else i.upper()[::-1]\n        else:\n            result += i\n    return result[::-1] if len(result) else s\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -3.708984375
    ],
    [
      "if s == \"\":\n        return \"\"\n    else:\n        s = s[::-1]\n        if s[0].isalpha():\n            s = s[::-1]\n            return s\n        else:\n            return s[::-1]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -3.900390625
    ],
    [
      "s = list(s)\n    i = 0\n    j = len(s) - 1\n    while i < j:\n        if s[i].isalpha():\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n        elif s[i].isdigit():\n            i += 1\n        else:\n            i += 1\n            j -= 1\n    return \"\".join(s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"abcd\"))",
      -3.953125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1].lower() + s[1:]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"1234\"))",
      -3.95703125
    ],
    [
      "new = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if i > 0:\n                new += s[i-1].upper()\n            else:\n                new += s[i].upper()\n        else:\n            new += s[i]\n    return new\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -4.15234375
    ],
    [
      "if s == \"\":\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]).lower() + solve(s[:1]).upper() + s[0].upper()\n        else:\n            return solve(s[1:]) + solve(s[:1])\n\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -4.25
    ],
    [
      "if not s:\n        return s[::-1]\n    s = list(s)\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if i < len(s) - 1 else s[i].lower()\n        i += 1\n    return ''.join(s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -4.5703125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        s_list = list(s)\n        for i in range(len(s)):\n            if s_list[i].isalpha():\n                s_list[i] = s_list[i].upper() if i < len(s)-1 else s_list[i].lower()\n            else:\n                s_list[i] = s_list[i]\n        return \"\".join(s_list)",
      -4.57421875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[1:].upper() + s[0].lower() + s[::-1]\n        else:\n            return s[::-1]",
      -4.63671875
    ],
    [
      "if not s:\n        return ''\n    result = ''\n    for i in range(len(s)):\n        if s[i].isalpha():\n            result = result + s[i].lower() if i > 0 else s[i].upper()\n        else:\n            result = result + s[i] if i > 0 else s[i]\n    return result\n\n\ndef test_solve():\n    assert solve('ab') == 'AB'\n    assert solve('1234') == '4321'\n    assert solve('#a@C') == '#A@c'\n    assert solve('') == ''\n    assert solve('') == ''\n\n\nif __name__ == '__main__':\n    test_solve()",
      -4.74609375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + s[0].upper() + solve(s[2:])\n        else:\n            return solve(s[1:]) + solve(s[0])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -4.9375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].capitalize()\n\n\ndef solve_2(s):\n    \"\"\"Solution using backtracking.\n    \"\"\"\n    if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].capitalize() + solve_2(s[1:])\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve_2(\"1234\"))\n    print(solve_2(\"ab\"))\n    print(solve_2(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -5.015625
    ],
    [
      "new_str = ''\n    for i in range(len(s)):\n        if s[i].isalpha():\n            new_str = s[i].lower() + new_str + s[i].upper()\n        else:\n            new_str = s[i].lower() + new_str\n    return new_str\n\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -5.375
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s\n    elif s[0].isalpha():\n        return s[1:] + s[0] + s[0].upper()\n    else:\n        return s[::-1]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -5.45703125
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    else:\n        return ''.join([i[::-1] if i.isalpha() else i for i in s])\n\n\nif __name__ == '__main__':\n    import unittest\n    class Test(unittest.TestCase):\n        def test_case1(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case2(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case3(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case4(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case5(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case6(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case7(",
      -5.921875
    ],
    [
      "# Your code here\n    if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].lower() + s[1:]\n    else:\n        return s[::-1].upper() + s[1:]\n\nprint(solve(\"ab\"))\nprint(solve(\"1234\"))\nprint(solve(\"#a@C\"))",
      -6.13671875
    ],
    [
      "if not s:\n        return s[::-1]\n    else:\n        s = s.lower()\n        s = s[::-1]\n        s = s.upper()\n        s = s[::-1]\n        s = s.replace('@', '')\n        return s",
      -6.5546875
    ],
    [
      "s = list(s)\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            if i > 0:\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n            i += 1\n        else:\n            i += 1\n    return \"\".join(s)\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"123456789\"))\n    print(solve(\"#a@C@ABC\"))\n\n\nif __name__ == \"__main__\":\n    main()",
      -7.28125
    ],
    [
      "if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + s[0].lower()[::-1]\n    else:\n        return solve(s[::-1]) + s[0] + solve(s[1:])\n\nprint(solve(\"1234\"))",
      -7.4921875
    ],
    [
      "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s[0]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + s[0].upper() + solve(s[1:])\n        else:\n            return solve(s[1:]) + s[0].lower() + solve(s[1:])\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))",
      -7.6953125
    ],
    [
      "if not s:\n        return s[::-1]\n    return s[::-1][:1] + s[::-1][1:] + s[::-1][::-1]\n\n\ndef solve_2(s):\n    \"\"\"\n    Solution:\n    \"\"\"\n    if not s:\n        return s\n    return s[::-1][::-1] + s[::-1][::-1][::-1] + s[::-1][::-1][::-1]\n\n\nif __name__ == \"__main__\":\n    s = \"1234\"\n    print(solve(s))\n    print(solve_2(s))",
      -8.109375
    ],
    [
      "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + solve(s[0].lower())\n    else:\n        return solve(s[1:]) + s[0]\n\n\ndef solve_2(s):\n    \"\"\"You are given a string s.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve_2(s[1:]) + s[0].upper() + solve_2(s[0].lower())\n    else:\n        return solve_2(s[1:]) + s[0]\n\n\ndef solve_3(s):\n    \"\"\"You are given a string s.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve_3(s[1:]) + s[0].upper() + solve_3(s[0].lower())\n    else:\n        return solve_3(s[1:]) + s[0]\n\n\ndef solve_4(s):\n    \"\"\"You are given a string s.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return",
      -8.4765625
    ],
    [
      "if not s:\n        return s[::-1]\n    return s[::-1].lower() + s[1::-1].upper() + s[::-1][::-1]\n\n\ndef solve2(s):\n    \"\"\"Solution to problem 5.\n    Given a string s, return the string reversed by changing the first and last characters of the string.\n    Examples\n    solve2(\"1234\") = \"4321\"\n    solve2(\"ab\") = \"AB\"\n    solve2(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return s[::-1][::-1] + s[1::-1][::-1] + s[::-1][1::-1]\n\n\ndef solve3(s):\n    \"\"\"Solution to problem 6.\n    Given a string s, return the string reversed by changing the first character of the string and the last two characters.\n    Examples\n    solve3(\"1234\") = \"4321\"\n    solve3(\"ab\") = \"AB\"\n    solve3(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return s[::-1][::-2] + s[1::-1][::-2] + s[::-1][1::-2]\n\n\ndef solve4(s):\n    \"\"\"Solution to problem 7.\n    Given a string s, return the string reversed by changing the first character of the string and the last two characters.\n    Examples\n    solve4(\"1234\") = \"4321\"\n    solve4(\"ab\") = \"AB\"\n    solve4(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return s[::-1][::-2] + s[1::-1][::-2] + s[::-1][1::-2]\n\n\nif __name__ == '__main__':\n    s = input()\n    print(solve(s))\n    print(solve2(s))\n    print(solve3(s))\n    print",
      -9.3515625
    ],
    [
      "if s == \"\":\n        return \"\"\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + solve(s[0].lower())\n    else:\n        return solve(s[1:]) + s[0].lower() + solve(s[0].upper())\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))",
      -9.53125
    ]
  ],
  "original_generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}