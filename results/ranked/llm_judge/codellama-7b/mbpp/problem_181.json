{
  "timestamp": "2025-09-14T23:40:02.510503",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 181,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "import re\n\n\ndef check(s):\n    \"\"\"\n    >>> check(\"ab12\")\n    True\n    >>> check(\"12ab\")\n    True\n    >>> check(\"123\")\n    False\n    \"\"\"\n    if re.search(r\"\\d\", s) and re.search(r\"[a-zA-Z]\", s):\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def check_string(str1):\n    count = 0\n    for i in str1:\n        if i.isdigit():\n            count += 1\n    return count\n\nprint(check_string(\"abcdefgh\"))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def check(string):\n    has_letter = False\n    has_number = False\n    for i in string:\n        if i.isdigit():\n            has_number = True\n        elif i.isalpha():\n            has_letter = True\n        if has_letter and has_number:\n            break\n    return has_letter and has_number\n\nprint(check(\"123abc\"))\nprint(check(\"abc\"))\nprint(check(\"123\"))\nprint(check(\"abc123\"))\nprint(check(\"123abc123\"))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def check(s):\n    if s.isalnum() and len(s)>0:\n        return True\n    else:\n        return False\n\nprint(check(\"abc123\"))\nprint(check(\"123abc\"))\nprint(check(\"abc123abc\"))\nprint(check(\"abc\"))\nprint(check(\"123\"))\nprint(check(\"\"))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def check_str(string):\n    return any(c.isdigit() for c in string) and any(c.isalpha() for c in string)\n\nprint(check_str('abc'))\nprint(check_str('123abc'))\nprint(check_str('abc123'))\nprint(check_str('abc123def456'))\nprint(check_str('123'))\nprint(check_str('abcdefgh'))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def check_string(string):\n    return any(c.isdigit() for c in string) and any(c.isalpha() for c in string)\n\n\ndef main():\n    string = \"abc123\"\n    print(\"Does string \" + string + \" contain at least one letter and one number? \" + str(check_string(string)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "import re\n\n\ndef check_string(string: str) -> bool:\n    \"\"\"\n    >>> check_string('h3ll0')\n    True\n    \"\"\"\n    return bool(re.search(r\"\\d\", string)) and bool(re.search(r\"[a-zA-Z]\", string))\n\n\ndef main():\n    print(\"String has atleast one letter and one number:\")\n    print(check_string(\"h3ll0\"))\n    print(check_string(\"12345\"))\n    print(check_string(\"h3ll012345\"))\n    print(check_string(\"12345h3ll0\"))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def check(string):\n    return any(ch.isdigit() for ch in string) and any(ch.isalpha() for ch in string)\n\nprint(check('1234'))\nprint(check('1234a'))\nprint(check('abc'))\nprint(check('a1b2'))\nprint(check('a1b2c3'))\nprint(check('1234a567890'))\nprint(check('a1b2c3d4e5f6g7h8i9'))\nprint(check('abcdefghijklmnopqrstuvwxyz'))"
    },
    {
      "rank": 9,
      "score": 9.370583536698913,
      "candidate": "def check_string(string):\n    if not string:\n        return False\n\n    nums = '0123456789'\n    alpha = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n    nums_found = False\n    alpha_found = False\n\n    for c in string:\n        if c in nums:\n            nums_found = True\n        elif c in alpha:\n            alpha_found = True\n        else:\n            return False\n\n    return nums_found and alpha_found\n\n\nif __name__ == \"__main__\":\n    print(check_string('abc123'))\n    print(check_string('abc'))\n    print(check_string('123'))\n    print(check_string(''))\n    print(check_string('123abc'))"
    },
    {
      "rank": 10,
      "score": 9.234050852198141,
      "candidate": "def check_string(str):\n    if any(i.isdigit() for i in str) and any(i.isalpha() for i in str):\n        return True\n    return False\n\n\nprint(check_string(\"abc123\"))\nprint(check_string(\"abc\"))\nprint(check_string(\"123\"))"
    },
    {
      "rank": 11,
      "score": 9.226766272351448,
      "candidate": "def check_letter_and_number(string):\n    return any(x.isalpha() for x in string) and any(x.isdigit() for x in string)\n\nprint(check_letter_and_number(\"abc123\"))\nprint(check_letter_and_number(\"123abc\"))\nprint(check_letter_and_number(\"abc\"))\nprint(check_letter_and_number(\"123\"))"
    },
    {
      "rank": 12,
      "score": 9.21346272767743,
      "candidate": "import re\ndef check_letter_number(str1):\n    return bool(re.search(r'\\d+', str1) and re.search(r'[a-zA-Z]+', str1))"
    },
    {
      "rank": 13,
      "score": 9.205959372648458,
      "candidate": "def check_string(str1):\n    return any(x.isdigit() for x in str1) and any(x.isalpha() for x in str1)\n\n\ndef main():\n    str1 = \"a123\"\n    str2 = \"1234\"\n    str3 = \"abcd\"\n    print(check_string(str1))\n    print(check_string(str2))\n    print(check_string(str3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 9.177268828905222,
      "candidate": "def check_string(str1):\n    if len(str1) == 0:\n        return False\n    else:\n        flag = 0\n        for i in str1:\n            if i.isdigit():\n                flag = 1\n                break\n        if flag == 1:\n            return True\n        else:\n            return False\n\n\ndef main():\n    str1 = \"123\"\n    str2 = \"abc\"\n    str3 = \"12abc\"\n    str4 = \"\"\n    str5 = \"12345\"\n    print(check_string(str1))\n    print(check_string(str2))\n    print(check_string(str3))\n    print(check_string(str4))\n    print(check_string(str5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 9.122564458729856,
      "candidate": "import re\n\n\ndef check(string):\n    return bool(re.search(r'\\d', string)) and bool(re.search(r'[a-zA-Z]', string))\n\n\nprint(check('a23'))\nprint(check('3a'))"
    },
    {
      "rank": 16,
      "score": 8.973005557553902,
      "candidate": "def check(string):\n    flag = False\n    for i in string:\n        if i.isdigit():\n            flag = True\n            break\n    if not flag:\n        return False\n\n    flag = False\n    for i in string:\n        if i.isalpha():\n            flag = True\n            break\n    if not flag:\n        return False\n\n    return True\n\nprint(check(\"a1b2c3\"))\nprint(check(\"abc\"))"
    },
    {
      "rank": 17,
      "score": 8.95994420569242,
      "candidate": "def check_string(string):\n    num = False\n    letter = False\n    for i in string:\n        if i.isdigit():\n            num = True\n        elif i.isalpha():\n            letter = True\n        if letter and num:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    print(check_string(string))\n\n# time complexity is O(n)\n# space complexity is O(1)"
    },
    {
      "rank": 18,
      "score": 8.946210893390457,
      "candidate": "def check_string(input_str):\n    \"\"\"\n    Check whether a string has atleast one letter and one number.\n    \"\"\"\n    if any(i.isalpha() for i in input_str) and any(i.isdigit() for i in input_str):\n        return True\n    return False"
    },
    {
      "rank": 19,
      "score": 8.932217008005624,
      "candidate": "def check_string(string):\n    \"\"\"\n    Check if a string has atleast one letter and one number.\n    \"\"\"\n    import re\n    if re.search('[a-zA-Z]+', string) and re.search('[0-9]+', string):\n        return True\n    return False\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    string = input(\"Enter a string: \")\n    print(check_string(string))\n\nif __name__ == '__main__':\n    try:\n        main()\n    except KeyboardInterrupt:\n        print(\"Interrupted by user\")"
    },
    {
      "rank": 20,
      "score": 8.910084504002544,
      "candidate": "def check_string(string):\n    flag = True\n    for i in string:\n        if i.isdigit():\n            return flag\n        elif i.isalpha():\n            return flag\n        else:\n            flag = False\n    return flag\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    if check_string(string):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "rank": 21,
      "score": 8.85571690049604,
      "candidate": "def check_alpha_num(string):\n    if string.isalnum():\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    string = input(\"Enter string: \")\n    if check_alpha_num(string):\n        print(\"String has atleast one letter and one number\")\n    else:\n        print(\"String has no letter or number\")"
    },
    {
      "rank": 22,
      "score": 8.855395696632057,
      "candidate": "def check_string(string):\n    if string.isalpha():\n        return False\n    else:\n        return True\n\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    print(check_string(string))"
    },
    {
      "rank": 23,
      "score": 8.850707355641543,
      "candidate": "def check_string(string):\n    \"\"\"\n    >>> check_string(\"123abc\")\n    True\n    >>> check_string(\"abc\")\n    False\n    \"\"\"\n    return any(i.isdigit() for i in string) and any(i.isalpha() for i in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 24,
      "score": 8.8281618090209,
      "candidate": "def check_string(string):\n    if any(i.isdigit() for i in string):\n        if any(i.isalpha() for i in string):\n            return True\n        else:\n            return False\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    print(check_string(string))\n\n# time complexity = O(n)\n# space complexity = O(1)"
    },
    {
      "rank": 25,
      "score": 8.81367773444215,
      "candidate": "def check(string):\n    if string.isalnum():\n        return False\n    return True\n\nprint(check(\"1234\"))\nprint(check(\"abcd\"))"
    },
    {
      "rank": 26,
      "score": 8.76828871349479,
      "candidate": "import re\n\ndef check_string(string):\n    check_string = re.compile('[a-zA-Z]')\n    check_number = re.compile('[0-9]')\n    return bool(check_string.search(string)) and bool(check_number.search(string))"
    },
    {
      "rank": 27,
      "score": 8.750282588864879,
      "candidate": "def check(str):\n    letters = 0\n    numbers = 0\n    for char in str:\n        if char.isdigit():\n            numbers += 1\n        elif char.isalpha():\n            letters += 1\n    return letters != 0 and numbers != 0"
    },
    {
      "rank": 28,
      "score": 8.715724466237427,
      "candidate": "def check(s):\n    is_letter = False\n    is_number = False\n    for i in s:\n        if i.isalpha():\n            is_letter = True\n        if i.isdigit():\n            is_number = True\n        if is_letter and is_number:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    s = \"123abc\"\n    print(check(s))"
    },
    {
      "rank": 29,
      "score": 8.692801520950061,
      "candidate": "def check_string(string):\n    for i in string:\n        if i.isdigit():\n            return True\n    return False\n\n\ndef check_number(string):\n    for i in string:\n        if i.isalpha():\n            return True\n    return False\n\n\ndef check(string):\n    return check_string(string) and check_number(string)"
    },
    {
      "rank": 30,
      "score": 8.632293453617281,
      "candidate": "def check_letter_number(string):\n    flag = False\n    for i in string:\n        if i.isdigit():\n            flag = True\n            break\n    if not flag:\n        return False\n    for i in string:\n        if i.isalpha():\n            return True\n    return False\n\nprint(check_letter_number(\"a12\"))\nprint(check_letter_number(\"12a\"))\nprint(check_letter_number(\"12\"))"
    },
    {
      "rank": 31,
      "score": 8.625262456968262,
      "candidate": "def check(string):\n    digit_flag = False\n    letter_flag = False\n\n    for i in string:\n        if i.isdigit():\n            digit_flag = True\n        if i.isalpha():\n            letter_flag = True\n        if digit_flag and letter_flag:\n            break\n\n    return digit_flag and letter_flag\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    if check(string):\n        print(\"String has atleast one letter and one number\")\n    else:\n        print(\"String has no letter or number\")"
    },
    {
      "rank": 32,
      "score": 8.625142247198651,
      "candidate": "def check(string):\n    letter = 0\n    number = 0\n    for i in string:\n        if i.isdigit():\n            number += 1\n            if number >= 1:\n                return True\n        if i.isalpha():\n            letter += 1\n            if letter >= 1:\n                return True\n    return False\n\nif __name__ == \"__main__\":\n    print(check(\"ab1\"))\n    print(check(\"12\"))"
    },
    {
      "rank": 33,
      "score": 8.623000730200317,
      "candidate": "import re\n\ndef check_str(str1):\n    return bool(re.search(r'[a-zA-Z]', str1)) and bool(re.search(r'[0-9]', str1))\n\ndef check_str_alt(str1):\n    return any(x.isalpha() for x in str1) and any(x.isdigit() for x in str1)\n\nprint(check_str_alt(\"abc123\"))\nprint(check_str_alt(\"abc\"))\nprint(check_str_alt(\"123\"))\nprint(check_str_alt(\"\"))\n\nprint(check_str(\"abc123\"))\nprint(check_str(\"abc\"))\nprint(check_str(\"123\"))\nprint(check_str(\"\"))"
    },
    {
      "rank": 34,
      "score": 8.616253589228675,
      "candidate": "def check_alphanumeric(string):\n    import re\n    if re.search(r'\\d', string) and re.search(r'[a-zA-Z]', string):\n        return True\n    else:\n        return False\n\nprint(check_alphanumeric(\"1abc\"))\nprint(check_alphanumeric(\"abc\"))\nprint(check_alphanumeric(\"123\"))"
    },
    {
      "rank": 35,
      "score": 8.610076160146226,
      "candidate": "def check_string(string):\n    \"\"\"\n    >>> check_string('abc')\n    False\n    >>> check_string('abc123')\n    True\n    \"\"\"\n    return any(i.isalpha() for i in string) and any(i.isdigit() for i in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 36,
      "score": 8.606486429141842,
      "candidate": "def check_string(string):\n    num_count = 0\n    for i in string:\n        if i.isnumeric():\n            num_count += 1\n            break\n    for i in string:\n        if i.isalpha():\n            break\n    if num_count > 0 and i != ' ':\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    print(check_string('123abc'))\n    print(check_string('abc123'))\n    print(check_string('abcabc'))"
    },
    {
      "rank": 37,
      "score": 8.60156811074208,
      "candidate": "def check_string(s):\n    flag = False\n    num = 0\n    for i in s:\n        if i.isdigit():\n            num += 1\n        if num > 0 and i.isalpha():\n            flag = True\n            break\n    return flag\n\n\nif __name__ == \"__main__\":\n    s = input(\"Enter a string: \")\n    print(check_string(s))"
    },
    {
      "rank": 38,
      "score": 8.565425580227462,
      "candidate": "def check_string(str):\n    flag = False\n    for i in range(len(str)):\n        if str[i].isnumeric():\n            flag = True\n            break\n    if flag:\n        for i in range(len(str)):\n            if str[i].isalpha():\n                return True\n    return False\n\n\nstr = input(\"Enter a string : \")\nif check_string(str):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "rank": 39,
      "score": 8.548876241946822,
      "candidate": "def has_letter_and_number(input_str):\n    letter_flag = False\n    number_flag = False\n\n    for i in input_str:\n        if i.isdigit():\n            number_flag = True\n            break\n\n    for i in input_str:\n        if i.isalpha():\n            letter_flag = True\n            break\n\n    if letter_flag and number_flag:\n        return True\n    else:\n        return False\n\n\ndef main():\n    str_input = input(\"Enter a string: \")\n    result = has_letter_and_number(str_input)\n    if result:\n        print(\"String has atleast one letter and one number\")\n    else:\n        print(\"String has no letter or number\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 40,
      "score": 8.542875062379007,
      "candidate": "def check_string(str1):\n    if str1.isalpha():\n        return False\n    else:\n        return True\n\nstr1 = \"ab123\"\nprint(check_string(str1))"
    },
    {
      "rank": 41,
      "score": 8.53012858503943,
      "candidate": "import re\n\ndef check_letter_number(string):\n    return re.search(r'[a-zA-Z]+[0-9]+|[0-9]+[a-zA-Z]+', string)\n\n\nif __name__ == '__main__':\n    print(\"String has letter and number:\", check_letter_number('abc2'))\n    print(\"String has letter and number:\", check_letter_number('2abc'))\n    print(\"String has letter and number:\", check_letter_number('abcdefghi'))\n    print(\"String has letter and number:\", check_letter_number('abc'))\n    print(\"String has letter and number:\", check_letter_number('1234'))\n    print(\"String has letter and number:\", check_letter_number(''))"
    },
    {
      "rank": 42,
      "score": 8.499905739299377,
      "candidate": "def check(string):\n    if string.isnumeric():\n        return False\n    else:\n        for i in string:\n            if i.isnumeric():\n                return True\n        return False\n\n\nprint(check(\"abc\"))\nprint(check(\"123\"))\nprint(check(\"abc123\"))\nprint(check(\"abc123abc\"))\nprint(check(\"123abc\"))"
    },
    {
      "rank": 43,
      "score": 8.490324832712195,
      "candidate": "def check(str1):\n    # Write your code here\n    flag = False\n    for i in str1:\n        if i.isnumeric():\n            flag = True\n            break\n    if flag == True:\n        for i in str1:\n            if i.isalpha():\n                return True\n    return False\n\nprint(check(\"a2b\"))\nprint(check(\"2b\"))\nprint(check(\"ab\"))"
    },
    {
      "rank": 44,
      "score": 8.48796797856353,
      "candidate": "def check_string(input_string: str) -> bool:\n    \"\"\"\n    Checks if the string has atleast one letter and one number\n\n    Args:\n       input_string(string): Input string to be checked\n    Returns:\n       bool: Returns True if the string has atleast one letter and one number,\n             False otherwise\n    \"\"\"\n    if not isinstance(input_string, str):\n        raise TypeError(\"input_string must be a string\")\n\n    if not input_string:\n        return False\n\n    if not any(char.isdigit() for char in input_string):\n        return False\n\n    if not any(char.isalpha() for char in input_string):\n        return False\n\n    return True\n\n\ndef main():\n    assert check_string(\"HelloWorld123\") is True\n    assert check_string(\"123HelloWorld\") is True\n    assert check_string(\"Hello123World\") is True\n    assert check_string(\"HelloWorld\") is False\n    assert check_string(\"123\") is False\n    assert check_string(\"\") is False\n    assert check_string(\"123HelloWorld456\") is True\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 45,
      "score": 8.478208546788407,
      "candidate": "def check_string(str):\n    for i in str:\n        if i.isdigit():\n            return True\n        elif i.isalpha():\n            return True\n    return False\n\n\nstr = input(\"Enter string: \")\nif check_string(str):\n    print(\"String has atleast one letter and one number.\")\nelse:\n    print(\"String doesn't have atleast one letter and one number.\")"
    },
    {
      "rank": 46,
      "score": 8.437695832075478,
      "candidate": "def check(string):\n    \"\"\"\n    Checks if the string has at least one letter and one number.\n\n    Parameters\n    ----------\n    string : str\n        The string to check.\n\n    Returns\n    -------\n    bool\n        True if the string has at least one letter and one number, else False.\n\n    >>> check(\"abc123\")\n    True\n\n    >>> check(\"abcabc123\")\n    False\n    \"\"\"\n    return any(i.isalpha() for i in string) and any(i.isdigit() for i in string)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 8.426531424889468,
      "candidate": "def check_string(str1):\n    if any(i.isdigit() for i in str1) and any(i.isalpha() for i in str1):\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    str1 = \"abc123\"\n    print(check_string(str1))\n    str1 = \"123abc\"\n    print(check_string(str1))\n    str1 = \"abc\"\n    print(check_string(str1))\n    str1 = \"123\"\n    print(check_string(str1))"
    },
    {
      "rank": 48,
      "score": 8.408439383654278,
      "candidate": "def check_string(string):\n    \"\"\"\n    >>> check_string(\"asd\")\n    False\n    >>> check_string(\"asd4\")\n    True\n    >>> check_string(\"asd4asd\")\n    True\n    >>> check_string(\"4asd\")\n    True\n    >>> check_string(\"4\")\n    False\n    >>> check_string(\"\")\n    False\n    \"\"\"\n    return any(c.isdigit() for c in string) and any(c.isalpha() for c in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 8.386620303250325,
      "candidate": "def check_string(input_str):\n    if input_str.isalnum():\n        return True\n    return False\n\ndef check_number(input_str):\n    if input_str.isnumeric():\n        return True\n    return False\n\ndef check_letter(input_str):\n    if input_str.isalpha():\n        return True\n    return False\n\ndef check_letter_number(input_str):\n    if (check_letter(input_str) and check_number(input_str)):\n        return True\n    return False\n\nprint(check_letter_number(\"abc123\"))\nprint(check_letter_number(\"123abc\"))\nprint(check_letter_number(\"abc\"))\nprint(check_letter_number(\"123\"))\nprint(check_letter_number(\"abc123abc\"))"
    },
    {
      "rank": 50,
      "score": 8.375312293858853,
      "candidate": "def check_alphanumeric(string):\n    return any(c.isalpha() for c in string) and any(c.isdigit() for c in string)"
    },
    {
      "rank": 51,
      "score": 8.351614956112536,
      "candidate": "def check(string):\n    letter = 0\n    number = 0\n    for i in string:\n        if i.isalpha():\n            letter = 1\n        elif i.isdigit():\n            number = 1\n    if letter == 1 and number == 1:\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string : \")\n    print(check(string))"
    },
    {
      "rank": 52,
      "score": 8.334608500525688,
      "candidate": "def check_string(str):\n    if len(str) < 6:\n        return False\n    else:\n        for i in str:\n            if i.isdigit():\n                return True\n        return False\n\n\nprint(check_string(\"ab12\"))\nprint(check_string(\"abc\"))"
    },
    {
      "rank": 53,
      "score": 8.331556294201176,
      "candidate": "def check_letter_number(string):\n    if string.isalnum():\n        return True\n    return False\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    if check_letter_number(string):\n        print(\"The string has atleast one letter and one number.\")\n    else:\n        print(\"The string does not have atleast one letter and one number.\")"
    },
    {
      "rank": 54,
      "score": 8.327375965969855,
      "candidate": "import re\ndef check_string(string):\n    if re.search(r'\\d', string) and re.search(r'[a-zA-Z]', string):\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    s = \"abcd1234\"\n    if check_string(s):\n        print(\"String has atleast one letter and one number\")\n    else:\n        print(\"String does not have atleast one letter and one number\")"
    },
    {
      "rank": 55,
      "score": 8.327367757082776,
      "candidate": "def check_string(str1):\n    flag = 0\n    for i in str1:\n        if i.isdigit():\n            flag = 1\n            break\n    if flag == 0:\n        return False\n    else:\n        return True\n\n\nstr1 = \"a1b2\"\nprint(check_string(str1))"
    },
    {
      "rank": 56,
      "score": 8.298597569547805,
      "candidate": "def check_string(string):\n    flag = True\n    flag = flag and any(c.isdigit() for c in string)\n    flag = flag and any(c.isalpha() for c in string)\n    return flag\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    if check_string(string):\n        print(\"The string has atleast one letter and one number.\")\n    else:\n        print(\"The string doesn't have atleast one letter and one number.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 57,
      "score": 8.294940769211511,
      "candidate": "def check_string(string):\n    digit_count = 0\n    alpha_count = 0\n    for i in string:\n        if i.isdigit():\n            digit_count += 1\n        if i.isalpha():\n            alpha_count += 1\n    return digit_count > 0 and alpha_count > 0\n\n\nprint(check_string(\"abc123\"))\nprint(check_string(\"abcabc123123\"))"
    },
    {
      "rank": 58,
      "score": 8.2938925966498,
      "candidate": "def check_letter_number(string):\n    if any(c.isdigit() for c in string) and any(c.isalpha() for c in string):\n        return True\n    return False\n\n\nprint(check_letter_number(\"a1b2c3\"))\nprint(check_letter_number(\"a1b2c\"))"
    },
    {
      "rank": 59,
      "score": 8.289838256518838,
      "candidate": "def check_string(string):\n    number = 0\n    letter = 0\n    for i in string:\n        if i.isdigit():\n            number = 1\n        elif i.isalpha():\n            letter = 1\n        if number == 1 and letter == 1:\n            return True\n    return False\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    if check_string(string):\n        print(\"Yes, string has atleast one letter and one number.\")\n    else:\n        print(\"No, string has no letter and no number.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 60,
      "score": 8.251903304236286,
      "candidate": "def check(input):\n    if input.isalnum():\n        return True\n    else:\n        return False\n\n\ninput_str = \"ABC123\"\nprint(check(input_str))"
    },
    {
      "rank": 61,
      "score": 8.214125058964552,
      "candidate": "def check_string(string):\n    letter = 0\n    number = 0\n\n    for i in string:\n        if i.isdigit():\n            number = 1\n            break\n    for i in string:\n        if i.isalpha():\n            letter = 1\n            break\n\n    if letter == 1 and number == 1:\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    if check_string(string):\n        print(\"The string has both letter and number\")\n    else:\n        print(\"The string doesn't have both letter and number\")"
    },
    {
      "rank": 62,
      "score": 8.212735598038213,
      "candidate": "def check(input_str):\n    if not input_str:\n        return False\n    count = 0\n    for i in input_str:\n        if i.isdigit():\n            count += 1\n            break\n    for i in input_str:\n        if i.isalpha():\n            count += 1\n            break\n    return count >= 2"
    },
    {
      "rank": 63,
      "score": 8.211579567659316,
      "candidate": "def check_string(string):\n    flag = False\n    for i in string:\n        if i.isnumeric():\n            flag = True\n            break\n    for j in string:\n        if j.isalpha():\n            flag = True\n            break\n    return flag\n\n\nprint(check_string(\"ab12\"))\nprint(check_string(\"12ab\"))\nprint(check_string(\"ab\"))\nprint(check_string(\"12\"))"
    },
    {
      "rank": 64,
      "score": 8.209707251476969,
      "candidate": "def check_alphanum(input_string):\n    return any(c.isdigit() for c in input_string) and any(c.isalpha() for c in input_string)\n\n\nif __name__ == \"__main__\":\n    input_string = input()\n    if check_alphanum(input_string):\n        print(\"YES\")\n    else:\n        print(\"NO\")"
    },
    {
      "rank": 65,
      "score": 8.2048573255218,
      "candidate": "def check_string(str1):\n    letters = 0\n    numbers = 0\n\n    for i in str1:\n        if i.isalpha():\n            letters += 1\n        elif i.isnumeric():\n            numbers += 1\n\n    if letters >= 1 and numbers >= 1:\n        return True\n\n    return False\n\n\nprint(check_string(\"abc123\"))"
    },
    {
      "rank": 66,
      "score": 8.172253082181854,
      "candidate": "def check_string(s):\n    return any(c.isalpha() for c in s) and any(c.isdigit() for c in s)\n\nprint(check_string(\"abc\"))\nprint(check_string(\"123abc\"))\nprint(check_string(\"abc123\"))\nprint(check_string(\"abc\"))\nprint(check_string(\"abc123456789\"))\nprint(check_string(\"123abc456\"))"
    },
    {
      "rank": 67,
      "score": 8.163300679823958,
      "candidate": "import re\n\n\ndef check_string(str1):\n    if re.match(\"^(?=.*[a-zA-Z])(?=.*[0-9])\", str1):\n        return True\n    else:\n        return False\n\n\nprint(check_string(\"abc123\"))\nprint(check_string(\"abc\"))\nprint(check_string(\"123abc\"))\nprint(check_string(\"abcabc123\"))"
    },
    {
      "rank": 68,
      "score": 8.144125099485041,
      "candidate": "def check_string(string):\n    return any(c.isdigit() for c in string) and any(c.isalpha() for c in string)"
    },
    {
      "rank": 69,
      "score": 8.143591138329747,
      "candidate": "def check_string(string):\n    letters = False\n    numbers = False\n\n    for char in string:\n        if char.isalpha():\n            letters = True\n        if char.isdigit():\n            numbers = True\n        if letters and numbers:\n            break\n\n    return letters and numbers\n\n\nif __name__ == \"__main__\":\n    print(check_string(\"a1b2\"))"
    },
    {
      "rank": 70,
      "score": 8.121884567141883,
      "candidate": "def check_string(s):\n    if not any(i.isdigit() for i in s):\n        return False\n    if not any(i.isalpha() for i in s):\n        return False\n    return True\n\n\nprint(check_string(\"a1b2\"))\nprint(check_string(\"1234\"))"
    },
    {
      "rank": 71,
      "score": 8.105983444291466,
      "candidate": "def check(str):\n    has_letter = False\n    has_number = False\n    for c in str:\n        if c.isalpha():\n            has_letter = True\n        elif c.isdigit():\n            has_number = True\n    return has_letter and has_number\n\nprint(check(\"1a\"))\nprint(check(\"12345\"))\nprint(check(\"12345abc\"))"
    },
    {
      "rank": 72,
      "score": 8.08452234024709,
      "candidate": "import re\n\n\ndef check_string(string):\n    return bool(re.search(r'[a-z]', string) and re.search(r'[0-9]', string))\n\n\ndef main():\n    print(check_string(\"a2\"))\n    print(check_string(\"2a\"))\n    print(check_string(\"a2a\"))\n    print(check_string(\"22\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 73,
      "score": 8.024835682833125,
      "candidate": "def check(string):\n    has_number = False\n    has_letter = False\n    for i in string:\n        if i.isdigit():\n            has_number = True\n        elif i.isalpha():\n            has_letter = True\n        if has_number and has_letter:\n            return True\n    return False\n\n\nprint(check(\"123abc\"))\nprint(check(\"abc\"))\nprint(check(\"123\"))"
    },
    {
      "rank": 74,
      "score": 7.990432406683839,
      "candidate": "def check(s):\n    return any(i.isdigit() for i in s) and any(i.isalpha() for i in s)"
    },
    {
      "rank": 75,
      "score": 7.938028884277233,
      "candidate": "import re\ndef check_string(string):\n    if re.search(r'[a-zA-Z]', string) and re.search(r'\\d', string):\n        return True\n    return False\n\nprint(check_string(\"abc123\"))\nprint(check_string(\"123abc\"))\nprint(check_string(\"abc\"))\nprint(check_string(\"123\"))\nprint(check_string(\"abc123abc\"))\nprint(check_string(\"123abc123\"))"
    },
    {
      "rank": 76,
      "score": 7.915588979966494,
      "candidate": "import re\n\ndef check(string):\n    return re.search(r'[a-zA-Z]', string) and re.search(r'\\d', string)\n\nprint(check(\"A1\"))\nprint(check(\"A1B2\"))\nprint(check(\"A1B2C3\"))\nprint(check(\"A1B2C3D4\"))\nprint(check(\"1A1B2C3D4\"))\nprint(check(\"1A1B2C3D4E5\"))\nprint(check(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(check(\"1234567890\"))\nprint(check(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"))\nprint(check(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"))"
    },
    {
      "rank": 77,
      "score": 7.8912769574414305,
      "candidate": "def check_letter_number(str1):\n    check_letter = False\n    check_number = False\n\n    for i in str1:\n        if i.isalpha():\n            check_letter = True\n        elif i.isdigit():\n            check_number = True\n\n    if check_letter and check_number:\n        return True\n    else:\n        return False\n\n\nprint(check_letter_number(\"a2\"))"
    },
    {
      "rank": 78,
      "score": 7.868947655733293,
      "candidate": "def check_letter_and_number(string):\n    letter_check = False\n    number_check = False\n    for letter in string:\n        if letter.isalpha():\n            letter_check = True\n            break\n    for number in string:\n        if number.isdigit():\n            number_check = True\n            break\n    if letter_check and number_check:\n        return True\n    else:\n        return False\n\n\nprint(check_letter_and_number(\"as12\"))\nprint(check_letter_and_number(\"12345\"))\nprint(check_letter_and_number(\"asdfg\"))"
    },
    {
      "rank": 79,
      "score": 7.84634113240411,
      "candidate": "def check(string):\n    string_list = list(string)\n    for i in string_list:\n        if i.isdigit():\n            return True\n        elif i.isalpha():\n            return True\n    return False"
    },
    {
      "rank": 80,
      "score": 7.834022619458933,
      "candidate": "def check_string(str1):\n    return any(i.isdigit() for i in str1) and any(i.isalpha() for i in str1)\n\n\ndef check_string1(str1):\n    return any(i.isdigit() for i in str1) and any(i.isalpha() for i in str1)\n\n\nif __name__ == \"__main__\":\n    str1 = \"A2c3d4\"\n    str2 = \"A2c3d\"\n    str3 = \"A2c3d4e\"\n    str4 = \"A2c3d4e5\"\n\n    print(check_string(str1))\n    print(check_string(str2))\n    print(check_string(str3))\n    print(check_string(str4))"
    },
    {
      "rank": 81,
      "score": 7.780351419995229,
      "candidate": "def check(string):\n    letter = 0\n    number = 0\n    for i in string:\n        if i.isalpha():\n            letter += 1\n        elif i.isdigit():\n            number += 1\n    if letter >= 1 and number >= 1:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 82,
      "score": 7.738292593776799,
      "candidate": "def check_string(str1):\n    \"\"\"\n    >>> check_string('Ab3')\n    True\n    >>> check_string('Ab')\n    False\n    \"\"\"\n    import re\n    return bool(re.search(r'\\d', str1) and re.search(r'[a-zA-Z]', str1))\n\ndef check_string1(str1):\n    \"\"\"\n    >>> check_string1('Ab3')\n    True\n    >>> check_string1('Ab')\n    False\n    \"\"\"\n    import string\n    return bool(sum([1 for i in str1 if i in string.ascii_letters]) and sum([1 for i in str1 if i in string.digits]))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 83,
      "score": 7.7320703513377165,
      "candidate": "def check_string(input_string):\n    alpha = False\n    num = False\n    for i in input_string:\n        if i.isalpha():\n            alpha = True\n        elif i.isdigit():\n            num = True\n    return alpha and num\n\n\nprint(check_string(\"abc123\"))\nprint(check_string(\"abc\"))\nprint(check_string(\"123abc\"))"
    },
    {
      "rank": 84,
      "score": 7.705183449260731,
      "candidate": "def check_string(s):\n    return any(i.isalpha() for i in s) and any(i.isdigit() for i in s)\n\nif __name__ == \"__main__\":\n    print(check_string(\"abc123\"))\n    print(check_string(\"123abc\"))\n    print(check_string(\"abc\"))\n    print(check_string(\"123\"))\n    print(check_string(\"\"))"
    },
    {
      "rank": 85,
      "score": 7.5819855281879285,
      "candidate": "def check_str(str1):\n    if any(i.isalpha() for i in str1) and any(i.isdigit() for i in str1):\n        print(\"String has atleast one letter and one number\")\n    else:\n        print(\"String doesn't have atleast one letter and one number\")\n\n\nif __name__ == \"__main__\":\n    check_str(\"a1\")\n    check_str(\"1a\")\n    check_str(\"a\")\n    check_str(\"1\")"
    },
    {
      "rank": 86,
      "score": 7.562924366763077,
      "candidate": "def check_letter_number(string):\n    return any(i.isalpha() for i in string) and any(i.isdigit() for i in string)"
    },
    {
      "rank": 87,
      "score": 7.4878043221155455,
      "candidate": "def check(string):\n    return any(i.isalpha() for i in string) and any(i.isdigit() for i in string)"
    },
    {
      "rank": 88,
      "score": 7.464609382504557,
      "candidate": "def check_string(string):\n    flag = 0\n    if len(string) < 6:\n        return flag\n    else:\n        for i in string:\n            if i.isdigit():\n                flag = 1\n                return flag\n\n        return flag\n\nprint(check_string(\"1234\"))\nprint(check_string(\"abcd\"))\nprint(check_string(\"abc1\"))"
    },
    {
      "rank": 89,
      "score": 7.4506599871439985,
      "candidate": "def check(string):\n    \"\"\"\n    >>> check('abcde1')\n    True\n    >>> check('abcde')\n    False\n    \"\"\"\n    return any(i.isnumeric() for i in string) and any(i.isalpha() for i in string)\n\n\ndef main():\n    check(input())\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()"
    },
    {
      "rank": 90,
      "score": 7.134571892399572,
      "candidate": "def check_str(str1):\n    if len(str1) == 0:\n        return False\n\n    count = 0\n    for i in str1:\n        if i.isdigit():\n            count += 1\n    if count > 0:\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    str1 = \"12345\"\n    str2 = \"ABC\"\n    str3 = \"ABC1234\"\n    str4 = \"1234\"\n    str5 = \"123456\"\n    str6 = \"\"\n    str7 = \"ABC12345\"\n    print(check_str(str1))\n    print(check_str(str2))\n    print(check_str(str3))\n    print(check_str(str4))\n    print(check_str(str5))\n    print(check_str(str6))\n    print(check_str(str7))"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "import re\n\n\ndef check_string(input_string):\n    return re.match(\"^(?=.*[0-9])(?=.*[a-zA-Z])\", input_string)\n\n\ndef main():\n    print(check_string(\"test1\"))\n    print(check_string(\"1234\"))\n    print(check_string(\"1234567890\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "def check_string(str1):\n    return any(i.isdigit() for i in str1) and any(i.isalpha() for i in str1)\n\nprint(check_string(\"abcd\"))\nprint(check_string(\"ab12\"))\nprint(check_string(\"12ab\"))\nprint(check_string(\"12ab34\"))\nprint(check_string(\"1234\"))\nprint(check_string(\"abc\"))"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def check_letter_number(str1):\n    flag = False\n    for i in str1:\n        if i.isnumeric():\n            flag = True\n            break\n    if flag:\n        flag = False\n        for i in str1:\n            if i.isalpha():\n                flag = True\n                break\n    return flag\n\n\nstr1 = \"s123\"\nprint(check_letter_number(str1))"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "import re\ndef check(string):\n    \"\"\"\n    >>> check(\"123abc\")\n    True\n    >>> check(\"1234abc\")\n    True\n    >>> check(\"1234\")\n    False\n    >>> check(\"abc\")\n    False\n    \"\"\"\n\n    return bool(re.search(r'(?=.*[a-zA-Z])(?=.*\\d)', string))\n\n\ndef check_ver2(string):\n    \"\"\"\n    >>> check_ver2(\"123abc\")\n    True\n    >>> check_ver2(\"1234abc\")\n    True\n    >>> check_ver2(\"1234\")\n    False\n    >>> check_ver2(\"abc\")\n    False\n    \"\"\"\n\n    if string[0].isdigit():\n        return False\n    if string[-1].isdigit():\n        return False\n    return bool(re.search(r'(?=.*[a-zA-Z])(?=.*\\d)', string))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def check_string(str):\n    num_flag = False\n    alpha_flag = False\n    for i in str:\n        if i.isdigit():\n            num_flag = True\n        if i.isalpha():\n            alpha_flag = True\n    if num_flag and alpha_flag:\n        return True\n    else:\n        return False\n\nprint(check_string(\"ad\"))"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def check_string(string):\n    if string.isalpha():\n        return False\n    else:\n        return True\n\n\ndef check_string_1(string):\n    if any(i.isalpha() for i in string) and any(i.isdigit() for i in string):\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(check_string_1(\"abc123\"))"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def check_string(input_string):\n    \"\"\"\n    Checks if the string has atleast one letter and one number.\n\n    >>> check_string(\"abc123\")\n    True\n\n    >>> check_string(\"123abc\")\n    True\n\n    >>> check_string(\"123abc456\")\n    False\n\n    >>> check_string(\"abc\")\n    False\n\n    >>> check_string(\"\")\n    False\n\n    >>> check_string(\"123\")\n    False\n\n    >>> check_string(\"abc123abc\")\n    False\n\n    >>> check_string(\"abc123abc123\")\n    False\n\n    >>> check_string(\"abc123abc123abc\")\n    False\n\n    >>> check_string(\"abc123abc123abc123\")\n    False\n\n    >>> check_string(\"abcabc123abc\")\n    True\n\n    >>> check_string(\"123abc123\")\n    True\n\n    >>> check_string(\"123abcabc123\")\n    True\n\n    >>> check_string(\"abcabcabc123\")\n    True\n\n    >>> check_string(\"123abcabc123abc\")\n    False\n\n    >>> check_string(\"123abcabc123abc123\")\n    False\n\n    >>> check_string(\"abcabcabc123abc123\")\n    True\n\n    >>> check_string(\"123abcabc123abc123abc\")\n    False\n\n    >>> check_string(\"abcabcabc123abc123abc123\")\n    False\n\n    >>> check_string(\"abcabcabc123abc123abc123abc\")\n    False\n\n    >>> check_string(\"abcabcabc123abc123abc123abcabc\")\n    False\n    \"\"\"\n    import re\n\n    return bool(re.search(r\"[a-zA-Z]\", input_string) and re.search(r\"\\d\", input_string))\n\n\nif __name__ == \"__main__\":\n    import"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def check_string(string):\n    numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']\n    alphabets = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n    for i in string:\n        if i in numbers:\n            return True\n        elif i in alphabets:\n            return True\n    return False\n\nprint(check_string('asd123'))\nprint(check_string('asd123asd'))\nprint(check_string('123asd'))\nprint(check_string('123'))\n\n\"\"\"\nvar string = \"asd123\"; // should return true\nvar string = \"asd123asd\"; // should return true\nvar string = \"123asd\"; // should return true\nvar string = \"123\"; // should return false\n\"\"\""
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def has_letter_number(input_str):\n    # Initialize variables\n    has_letter = False\n    has_number = False\n    # Iterate through the string\n    for i in input_str:\n        # Check if the character is a letter\n        if i.isalpha():\n            has_letter = True\n        # Check if the character is a number\n        if i.isdigit():\n            has_number = True\n    # Return the result\n    return has_letter and has_number\n\n# Define a main function\ndef main():\n\n    # Prompt the user for a string\n    input_str = input(\"Please enter a string: \")\n    # Check if the string has at least one letter and one number\n    result = has_letter_number(input_str)\n    # Display the result\n    print(\"The string has at least one letter and one number:\", result)\n\n# Call the main function\nmain()"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def check_string(string: str) -> bool:\n    \"\"\"\n    >>> check_string(\"ab3\")\n    True\n    >>> check_string(\"ab12\")\n    True\n    >>> check_string(\"ab\")\n    False\n    >>> check_string(\"12\")\n    False\n    \"\"\"\n    return any(i.isdigit() for i in string) and any(i.isalpha() for i in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    }
  ]
}