{
  "timestamp": "2025-09-14T23:31:01.101138",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 161,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def count_std(str):\n    count = 0\n    for i in range(len(str)):\n        if str[i:i+3] == \"std\":\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    str = input(\"Enter string: \")\n    print(\"Number of occurence of 'std': \", count_std(str))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def find_std(string):\n    string = string.lower()\n    return string.count(\"std\")\n\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    print(f\"The occurence of 'std' is: {find_std(string)}\")"
    },
    {
      "rank": 3,
      "score": 3.926139092254469,
      "candidate": "def find_occurence(string):\n    return string.count(\"std\")\n\ndef main():\n    print(find_occurence(\"std is a good studio\"))\n    print(find_occurence(\"std is a good stdio\"))\n    print(find_occurence(\"std is a good stdio\"))\n    print(find_occurence(\"std is a good stdio\"))\n    print(find_occurence(\"std is a good stdio\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 4,
      "score": 3.7896064077536957,
      "candidate": "def find_std(input_str):\n    return input_str.count('std')\n\n\ndef main():\n    input_str = 'std is the best'\n    result = find_std(input_str)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 5,
      "score": 3.782321827907003,
      "candidate": "def find_str(str):\n    return str.find('std')\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(find_str('This is a string'))\n\n    # These \"asserts\" are used for self-checking and not for an auto-testing\n    assert find_str('This is a string') == 8\n    assert find_str('This programing') == -1\n    assert find_str('This This This') == 8\n    assert find_str('') == -1\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
      "rank": 6,
      "score": 3.7690182832329846,
      "candidate": "def find_std(str1):\n    return str1.count('std')\n\n\nprint(find_std('std is std'))"
    },
    {
      "rank": 7,
      "score": 3.761514928204013,
      "candidate": "def find_std(string):\n    for i in range(len(string)):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            return True\n    return False\n\n\nprint(find_std('std'))\nprint(find_std('stdd'))\nprint(find_std('dstd'))\nprint(find_std('sdtd'))"
    },
    {
      "rank": 8,
      "score": 3.738947022370758,
      "candidate": "def find_std(string):\n    return string.count('std')\n\nprint(find_std('std'))\nprint(find_std('std is good'))"
    },
    {
      "rank": 9,
      "score": 3.732824384460777,
      "candidate": "def check_std(input_string):\n    result = []\n    for i in range(0, len(input_string)):\n        if input_string[i:i+3] == \"std\":\n            result.append(i)\n    return result\n\nif __name__ == '__main__':\n    input_string = \"This is the best std for ever\"\n    print(check_std(input_string))"
    },
    {
      "rank": 10,
      "score": 3.6781200142854114,
      "candidate": "def find_string(string):\n    if string == \"\":\n        return 0\n\n    string_len = len(string)\n    string_index = 0\n    string_count = 0\n\n    while string_index < string_len:\n        if string[string_index] == \"s\":\n            string_index += 1\n            if string[string_index] == \"t\":\n                string_index += 1\n                if string[string_index] == \"d\":\n                    string_count += 1\n                    string_index += 1\n                else:\n                    string_index = 0\n        else:\n            string_index = 0\n\n        string_index += 1\n\n    return string_count\n\nprint(find_string(\"stdstdstd\"))"
    },
    {
      "rank": 11,
      "score": 3.5285611131094576,
      "candidate": "def char_occurence(string):\n    occurence = 0\n    for i in range(len(string)):\n        if string[i] == \"s\":\n            if string[i+1] == \"t\":\n                if string[i+2] == \"d\":\n                    occurence += 1\n    return occurence\n\nif __name__ == \"__main__\":\n    string = \"stdsstsdstd\"\n    print(char_occurence(string))"
    },
    {
      "rank": 12,
      "score": 3.5154997612479755,
      "candidate": "def std_in_string(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\nstr1 = \"stdstdstdstdstd\"\nprint(std_in_string(str1))"
    },
    {
      "rank": 13,
      "score": 3.501766448946012,
      "candidate": "def std_in_string(str):\n\tcount = 0\n\tfor i in range(len(str)):\n\t\tif str[i:i+3] == \"std\":\n\t\t\tcount += 1\n\treturn count\n\nprint(std_in_string(\"stdsddstdsddstd\"))"
    },
    {
      "rank": 14,
      "score": 3.4877725635611796,
      "candidate": "def find_std(string):\n    \"\"\"\n    >>> find_std(\"std is awesome\")\n    ['std', 'std']\n    >>> find_std(\"std is good\")\n    ['std', 'std']\n    \"\"\"\n    return [x for x in string.split(\" \") if x == \"std\"]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 3.4843224952664444,
      "candidate": "def std_occurence(str):\n    occurence_std = 0\n    for i in range(len(str) - 2):\n        if str[i: i + 3] == 'std':\n            occurence_std += 1\n    return occurence_std\n\nprint(std_occurence(\"stdsddstd\"))"
    },
    {
      "rank": 16,
      "score": 3.4656400595580994,
      "candidate": "def find_str(str):\n    std_count = 0\n    for i in range(len(str)-2):\n        if str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd':\n            std_count += 1\n    return std_count"
    },
    {
      "rank": 17,
      "score": 3.457701058851037,
      "candidate": "def find_std(input_string):\n    return [i for i, v in enumerate(input_string) if v == 'd' and input_string[i-1] == 't' and input_string[i-2] == 's']"
    },
    {
      "rank": 18,
      "score": 3.4112724560515946,
      "candidate": "def is_std(text):\n    # Your code here\n    # print(text)\n    if len(text) < 3:\n        return 0\n    else:\n        count = 0\n        for i in range(len(text)-2):\n            if text[i:i+3] == 'std':\n                count += 1\n        return count\n\n\nprint(is_std(\"test\"))"
    },
    {
      "rank": 19,
      "score": 3.410951252187612,
      "candidate": "def find_std_in_string(str):\n    std_count = 0\n    for i in range(len(str)-2):\n        if str[i] == \"s\" and str[i+1] == \"t\" and str[i+2] == \"d\":\n            std_count += 1\n    return std_count\n\n\n\nif __name__ == \"__main__\":\n    print(find_std_in_string(\"std\"))"
    },
    {
      "rank": 20,
      "score": 3.406262911197099,
      "candidate": "def find_std(input_string):\n    pass\n\nif __name__ == '__main__':\n    input_string = 'std is a good platform to practice coding'\n    print(find_std(input_string))"
    },
    {
      "rank": 21,
      "score": 3.3837173645764542,
      "candidate": "def find_characters(string):\n    counter = 0\n    for i in range(len(string)-2):\n        if string[i] == \"s\" and string[i+1] == \"t\" and string[i+2] == \"d\":\n            counter += 1\n    return counter"
    },
    {
      "rank": 22,
      "score": 3.3692332899977053,
      "candidate": "def find_std(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_better(string):\n    count = 0\n    i = 0\n    while i < len(string):\n        if string[i:i+3] == \"std\":\n            count += 1\n        i += 1\n    return count\n\nif __name__ == '__main__':\n    print(find_std(\"std\"))\n    print(find_std(\"stdstdstd\"))\n    print(find_std(\"stdsssstdsss\"))\n    print(find_std(\"sssssssss\"))\n\n    print(find_std_better(\"std\"))\n    print(find_std_better(\"stdstdstd\"))\n    print(find_std_better(\"stdsssstdsss\"))\n    print(find_std_better(\"sssssssss\"))"
    },
    {
      "rank": 23,
      "score": 3.3238442690503462,
      "candidate": "def find_occurence(text, word):\n    # Your code here\n    return text.count(word)\n\nprint(find_occurence(\"This is the best string\", \"is\"))"
    },
    {
      "rank": 24,
      "score": 3.305838144420434,
      "candidate": "def find_occurence_of_std(str):\n    count = 0\n    for i in range(len(str) - 2):\n        if str[i:i + 3] == \"std\":\n            count += 1\n\n    return count\n\nif __name__ == \"__main__\":\n    print(find_occurence_of_std(\"std\"))\n    print(find_occurence_of_std(\"stdsstdsstdsstd\"))"
    },
    {
      "rank": 25,
      "score": 3.2712800217929825,
      "candidate": "def std_in_string(input_string):\n    return len(list(filter(lambda x: x == 'std', input_string)))\n\n\nif __name__ == \"__main__\":\n    print(std_in_string(\"This is a string\"))\n    print(std_in_string(\"This is a string std\"))\n    print(std_in_string(\"This is a string stdstd\"))"
    },
    {
      "rank": 26,
      "score": 3.256633716556678,
      "candidate": "def str_find(str1):\n    for i in range(len(str1)):\n        if str1[i]=='s' and str1[i+1]=='t' and str1[i+2]=='d':\n            return \"String Found\"\n    return \"String Not Found\"\n\nstr1=input()\nprint(str_find(str1))"
    },
    {
      "rank": 27,
      "score": 3.2483570765056164,
      "candidate": "def check_std(string):\n    if len(string) < 3:\n        return 0\n    else:\n        count = 0\n        for i in range(len(string) - 2):\n            if string[i:i+3] == 'std':\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    string = \"stdstdstddststdststdstdstd\"\n    print(check_std(string))"
    },
    {
      "rank": 28,
      "score": 3.1878490091728358,
      "candidate": "def count_std(str):\n    counter = 0\n    for i in range(len(str)-2):\n        if str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd':\n            counter += 1\n    return counter\n\nif __name__ == \"__main__\":\n    str1 = 'stdstdstd'\n    print(count_std(str1))"
    },
    {
      "rank": 29,
      "score": 3.180818012523817,
      "candidate": "def find_std(string):\n    return string.count(\"std\")\n\n\nif __name__ == \"__main__\":\n    print(find_std(\"stdstdstd\"))"
    },
    {
      "rank": 30,
      "score": 3.180697802754207,
      "candidate": "def find_char(string):\n    l = len(string)\n    count = 0\n    for i in range(l):\n        if string[i:i+3] == \"std\":\n            count += 1\n    return count\n\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    print(find_char(string))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 31,
      "score": 3.178556285755873,
      "candidate": "def find_std(str):\n    # count = 0\n    # for i in range(len(str) - 2):\n    #     if str[i] == 's' and str[i + 1] == 't' and str[i + 2] == 'd':\n    #         count += 1\n    # return count\n\n    count = 0\n    for i in range(len(str) - 2):\n        if str[i : i + 3] == 'std':\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print(find_std('stds'))\n    print(find_std('stdsds'))"
    },
    {
      "rank": 32,
      "score": 3.1718091447842305,
      "candidate": "def string_1(str):\n    return str.count(\"std\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 2. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef string_2(str):\n    return str.find(\"std\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 3. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef string_3(str):\n    return str.startswith(\"std\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 4. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef string_4(str):\n    return str.endswith(\"std\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 5. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef string_5(str):\n    return str.split(\"std\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 6. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef string_6(str):\n    return str.strip(\"std\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 7. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef string_7(str):\n    return str.replace(\"std\", \"new\")\n\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 8. list item 1. list item 1. list item 2. list item 2."
    },
    {
      "rank": 33,
      "score": 3.165631715701782,
      "candidate": "def find_std(string):\n    l = len(string)\n    count = 0\n    for i in range(l-2):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    string = 'stdstdstdstdstdstd'\n    print(find_std(string))"
    },
    {
      "rank": 34,
      "score": 3.1643755548298422,
      "candidate": "def check_std(input_str):\n    if len(input_str) < 3:\n        return False\n    if input_str[0:3] == \"std\":\n        return True\n    return False\n\ndef main():\n    str1 = \"std123\"\n    str2 = \"stddd123\"\n    str3 = \"st123\"\n    str4 = \"std\"\n    str5 = \"st\"\n    str6 = \"std123\"\n    str7 = \"stddd123\"\n    str8 = \"std123\"\n    str9 = \"std\"\n    str10 = \"st\"\n\n    print(check_std(str1))\n    print(check_std(str2))\n    print(check_std(str3))\n    print(check_std(str4))\n    print(check_std(str5))\n    print(check_std(str6))\n    print(check_std(str7))\n    print(check_std(str8))\n    print(check_std(str9))\n    print(check_std(str10))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 35,
      "score": 3.1620419846973977,
      "candidate": "def find_std(input_string):\n    index = 0\n    occurence = 0\n    while index < len(input_string):\n        if input_string[index:index+3] == \"std\":\n            occurence += 1\n        index += 1\n    return occurence"
    },
    {
      "rank": 36,
      "score": 3.157123666297637,
      "candidate": "def find_occurence(str1, str2):\n    if len(str1) < len(str2):\n        return 0\n    if str2 not in str1:\n        return 0\n    count = 0\n    for i in range(0, len(str1)-len(str2)+1):\n        if str2 == str1[i:i+len(str2)]:\n            count += 1\n    return count\n\n\nstr1 = 'stdsdfstd'\nstr2 = 'std'\n\nprint(find_occurence(str1, str2))"
    },
    {
      "rank": 37,
      "score": 3.148060138532288,
      "candidate": "def find_occurence_of_characters_in_string(string):\n    # your code goes here\n    string_list = list(string)\n    count = 0\n    for i in range(len(string_list)):\n        if string_list[i] == 's' and string_list[i+1] == 't' and string_list[i+2] == 'd':\n            count += 1\n    return count\n\n\n# print(find_occurence_of_characters_in_string('stdsddstds'))\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 2. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\ndef find_occurence_of_characters_in_string_2(string):\n    # your code goes here\n    string_list = list(string)\n    count = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == 's' and string_list[i+1] == 't' and string_list[i+2] == 'd':\n            count += 1\n    return count\n\n\n# print(find_occurence_of_characters_in_string_2('stdsddstds'))\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 3. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\ndef find_occurence_of_characters_in_string_3(string):\n    # your code goes here\n    string_list = list(string)\n    count = 0\n    for i in range(len(string_list)-2):\n        if string_list[i] == 's' and string_list[i+1] == 't' and string_list[i+2] == 'd':\n            count += 1\n    return count\n\n\n# print(find_occurence_of_characters_in_string_3('stdsddstd"
    },
    {
      "rank": 38,
      "score": 3.1305276360899446,
      "candidate": "def get_std_count(str1):\n    str1 = str1.lower()\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == 'std':\n            count += 1\n    return count\n\n\ndef main():\n    str1 = input(\"Enter a string: \")\n    count = get_std_count(str1)\n    print(\"Number of times 'std' occurs is:\", count)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 39,
      "score": 3.1209811357830173,
      "candidate": "def find_occurence(string):\n    return string.count(\"std\")\n\n\nif __name__ == '__main__':\n    print(find_occurence(\"This is a string\"))"
    },
    {
      "rank": 40,
      "score": 3.104431797502378,
      "candidate": "def get_occurences(text):\n    text = text.lower()\n    occurences = []\n    for i in range(len(text) - 2):\n        if text[i] == 's' and text[i + 1] == 't' and text[i + 2] == 'd':\n            occurences.append(i)\n    return occurences"
    },
    {
      "rank": 41,
      "score": 3.0984306179345618,
      "candidate": "def count_std(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(count_std('stdsstddsds'))"
    },
    {
      "rank": 42,
      "score": 3.085684140594985,
      "candidate": "def count_std(s):\n    \"\"\"\n    >>> count_std(\"std is awesome\")\n    ['std', 'std']\n    >>> count_std(\"stdbad is awesome\")\n    []\n    >>> count_std(\"stds is awesome\")\n    ['stds']\n    >>> count_std(\"stdsd is awesome\")\n    ['std', 'std']\n    \"\"\"\n    s_list = s.split()\n    result = []\n    for word in s_list:\n        if word == \"std\":\n            result.append(word)\n    return result\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 43,
      "score": 3.055461294854933,
      "candidate": "def find_std_occurrence(str):\n    count = 0\n    for i in range(len(str)-2):\n        if(str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd'):\n            count += 1\n    return count\n\nprint(find_std_occurrence(\"stdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstdstd"
    },
    {
      "rank": 44,
      "score": 3.0485387746740202,
      "candidate": "def count_chars(string, char):\n    return string.count(char)\n\ndef count_substrings(string, substring):\n    return string.count(substring)\n\n\ndef count_chars_v2(string, char):\n    return len([ch for ch in string if ch == char])\n\ndef count_substrings_v2(string, substring):\n    return len([sub for sub in string if sub == substring])\n\n\nprint(count_chars(\"python\", \"y\"))\nprint(count_substrings(\"python\", \"py\"))\n\nprint(count_chars_v2(\"python\", \"y\"))\nprint(count_substrings_v2(\"python\", \"py\"))"
    },
    {
      "rank": 45,
      "score": 3.045880388267751,
      "candidate": "def std_in_string(string):\n    count = 0\n    for i in range(len(string) - 2):\n        if string[i: i + 3] == \"std\":\n            count += 1\n    return count\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    print(f\"std_in_string: {std_in_string(string)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 46,
      "score": 3.043523534119086,
      "candidate": "def find_std(string):\n    return len(list(filter(lambda x: x == 'std', string)))\n\nif __name__ == '__main__':\n    string = 'stdstdstd'\n    print(find_std(string))"
    },
    {
      "rank": 47,
      "score": 3.033764102343962,
      "candidate": "def check_std(str):\n    for i in range(len(str) - 2):\n        if str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd':\n            return True\n    return False\n\n\ndef main():\n    str1 = input(\"Enter a string: \")\n    if check_std(str1):\n        print(\"'std' is present in the string\")\n    else:\n        print(\"'std' is not present in the string\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 48,
      "score": 2.993251387631033,
      "candidate": "def find_std(str):\n    res = \"\"\n    for i in range(len(str)-2):\n        if str[i:i+3] == \"std\":\n            res += str[i:i+3]\n    return res\n\nstr = \"std is a good boy\"\nprint(find_std(str))"
    },
    {
      "rank": 49,
      "score": 2.982086980445024,
      "candidate": "def count_std(str):\n    count = 0\n    for i in range(len(str)-3):\n        if str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd':\n            count += 1\n    return count\n\nprint(count_std(\"stdddddstd\"))\nprint(count_std(\"stdddstd\"))\nprint(count_std(\"std\"))\nprint(count_std(\"\"))\nprint(count_std(\"stdstddstdstdd\"))"
    },
    {
      "rank": 50,
      "score": 2.963994939209833,
      "candidate": "def count_std(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i:i+3] == \"std\":\n            count += 1\n    return count\n\nprint(count_std(\"stdstdstd\"))"
    },
    {
      "rank": 51,
      "score": 2.94217585880588,
      "candidate": "def find_occurence(string):\n    i = 0\n    for i in range(len(string)):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            return \"Found\"\n    return \"Not Found\"\n\nprint(find_occurence('std'))"
    },
    {
      "rank": 52,
      "score": 2.930867849414408,
      "candidate": "def find_char(string):\n    string = string.lower()\n    counter = 0\n    for i in range(0, len(string)):\n        if string[i] == 's':\n            if string[i+1] == 't':\n                if string[i+2] == 'd':\n                    counter += 1\n    return counter\n\n\nif __name__ == '__main__':\n    string = input()\n    print(find_char(string))"
    },
    {
      "rank": 53,
      "score": 2.9071705116680913,
      "candidate": "def find_std(str):\n    count = 0\n    for i in range(len(str)):\n        if str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd':\n            count += 1\n\n    return count\n\n\nif __name__ == '__main__':\n    print(find_std('stdstdstdstd'))"
    },
    {
      "rank": 54,
      "score": 2.890164056081244,
      "candidate": "def find_std(string):\n    count = 0\n    for i in range(len(string)):\n        if i < len(string) - 2 and string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            count += 1\n    return count\n\nprint(find_std(\"stdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstds"
    },
    {
      "rank": 55,
      "score": 2.887111849756732,
      "candidate": "def find_std(string):\n    # Write your code here.\n    return string.count(\"std\")\n\nif __name__ == \"__main__\":\n    string = input()\n    print(find_std(string))"
    },
    {
      "rank": 56,
      "score": 2.8829315215254097,
      "candidate": "def find_std_char(string):\n    string_list = list(string)\n    count = 0\n    for i in range(len(string_list)):\n        if string_list[i] == 's' and string_list[i+1] == 't' and string_list[i+2] == 'd':\n            count += 1\n    return count\n\n\nprint(find_std_char('stdstdstd'))"
    },
    {
      "rank": 57,
      "score": 2.882923312638332,
      "candidate": "def std_in_str(str):\n    str_list = list(str)\n    count_std = 0\n    count_s = 0\n    count_t = 0\n    count_d = 0\n    for i in str_list:\n        if i == 's':\n            count_s += 1\n            if count_s == 3:\n                count_std += 1\n                count_s = 0\n        elif i == 't':\n            count_t += 1\n            if count_t == 3:\n                count_std += 1\n                count_t = 0\n        elif i == 'd':\n            count_d += 1\n            if count_d == 3:\n                count_std += 1\n                count_d = 0\n    return count_std\n\n\nstr = input(\"Enter string: \")\nprint(\"Number of occurence of std is: \", std_in_str(str))"
    },
    {
      "rank": 58,
      "score": 2.8541531251033616,
      "candidate": "def count_std(str):\n    count = 0\n    for i in range(len(str)-2):\n        if str[i:i+3] == 'std':\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print(count_std('stdsddstdstdd'))"
    },
    {
      "rank": 59,
      "score": 2.8504963247670663,
      "candidate": "def find_std_in_string(text: str) -> int:\n    \"\"\"\n    >>> find_std_in_string(\"This is a good string\")\n    4\n    >>> find_std_in_string(\"This is a good string and std\")\n    5\n    >>> find_std_in_string(\"This is a good string and std\")\n    5\n    \"\"\"\n    count = 0\n    for index, char in enumerate(text):\n        if char == \"s\" and text[index + 1] == \"t\" and text[index + 2] == \"d\":\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 60,
      "score": 2.8494481522053556,
      "candidate": "def string_func(input_string):\n    occurence = 0\n    for i in range(len(input_string)):\n        if input_string[i] == 's' and input_string[i + 1] == 't' and input_string[i + 2] == 'd':\n            occurence += 1\n    return occurence\n\nprint(string_func(\"stdd\"))"
    },
    {
      "rank": 61,
      "score": 2.8453938120743927,
      "candidate": "def find_occurence(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] == 's' and str1[i + 1] == 't' and str1[i + 2] == 'd':\n            count += 1\n    return count"
    },
    {
      "rank": 62,
      "score": 2.836168926701116,
      "candidate": "def find_std(str):\n    count = 0\n    for i in range(len(str)-2):\n        if str[i]=='s' and str[i+1]=='t' and str[i+2]=='d':\n            count+=1\n    return count\n\n\ns = \"stdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstdsstd"
    },
    {
      "rank": 63,
      "score": 2.8074588597918417,
      "candidate": "def find_std(string):\n    result = []\n    string_list = list(string)\n    for i in range(len(string_list)):\n        if string_list[i] == 's':\n            if i+1 < len(string_list):\n                if string_list[i+1] == 't':\n                    if i+2 < len(string_list):\n                        if string_list[i+2] == 'd':\n                            result.append(string_list[i:i+3])\n    return result"
    },
    {
      "rank": 64,
      "score": 2.803945923433921,
      "candidate": "def find_std(str):\n    count = 0\n    for i in range(len(str)):\n        if str[i] == 's' and str[i+1] == 't' and str[i+2] == 'd':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(find_std('std'))\n    print(find_std('stdsdsds'))"
    },
    {
      "rank": 65,
      "score": 2.769680614520106,
      "candidate": "def get_std_index(str1):\n    index = []\n    for i in range(len(str1)-2):\n        if str1[i:i+3] == 'std':\n            index.append(i)\n\n    return index\n\n\nif __name__ == \"__main__\":\n    print(get_std_index(\"stdstdstdstd\"))"
    },
    {
      "rank": 66,
      "score": 2.768291153593769,
      "candidate": "def find_std(string):\n    return string.count('std')\n\nstring = input()\nprint(find_std(string))"
    },
    {
      "rank": 67,
      "score": 2.7671351232148718,
      "candidate": "def find_occurence(text):\n    result = {}\n    for i in text:\n        if i in result:\n            result[i] += 1\n        else:\n            result[i] = 1\n    return result\n\nif __name__ == '__main__':\n    print(find_occurence('stdstdstdstdstd'))"
    },
    {
      "rank": 68,
      "score": 2.765262807032524,
      "candidate": "def string_count(str):\n    return str.count('std')\n\nif __name__ == \"__main__\":\n    str = \"stdstdstdstdstdstdstdstdstdstdstdstdstdstdstd\"\n    print(string_count(str))"
    },
    {
      "rank": 69,
      "score": 2.760412881077355,
      "candidate": "def std_occurence(text):\n    count = 0\n    for i in range(len(text)):\n        if text[i] == 's' and text[i+1] == 't' and text[i+2] == 'd':\n            count += 1\n    return count\n\nprint(std_occurence(\"testestestest\"))\nprint(std_occurence(\"test\"))\nprint(std_occurence(\"st\"))"
    },
    {
      "rank": 70,
      "score": 2.749121478207732,
      "candidate": "def find_std(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i] == 's' and string[i + 1] == 't' and string[i + 2] == 'd':\n            count += 1\n    return count"
    },
    {
      "rank": 71,
      "score": 2.7408648908631763,
      "candidate": "def find_std_string(string):\n    return len(re.findall(r\"std\", string, re.IGNORECASE))\n\n\ndef find_std_string_2(string):\n    return string.lower().count(\"std\")\n\n\ndef find_std_string_3(string):\n    return string.count(\"std\")"
    },
    {
      "rank": 72,
      "score": 2.735119898116481,
      "candidate": "def find_char(str1):\n    \"\"\"\n    Returns a list of indexs of the start of the occurence of 'std' in str1\n    \"\"\"\n    i = 0\n    start_index = []\n    while i < len(str1):\n        if str1[i:i+3] == 'std':\n            start_index.append(i)\n        i += 1\n    return start_index\n\n\ndef find_char_using_index(str1):\n    \"\"\"\n    Returns a list of indexs of the start of the occurence of 'std' in str1\n    \"\"\"\n    i = 0\n    start_index = []\n    while i < len(str1):\n        if str1[i:i+3] == 'std':\n            start_index.append(i)\n            i += 3\n        else:\n            i += 1\n    return start_index\n\n\ndef main():\n    str1 = \"This is a good day for this std to be here\"\n    print(find_char(str1))\n    print(find_char_using_index(str1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 73,
      "score": 2.7278086377374087,
      "candidate": "def count_std(text):\n    return text.count('std')"
    },
    {
      "rank": 74,
      "score": 2.718856235379514,
      "candidate": "def get_std_count(str):\n    count = 0\n    str_list = list(str)\n    for i in range(len(str_list)):\n        if str_list[i] == \"s\" and str_list[i + 1] == \"t\" and str_list[i + 2] == \"d\":\n            count += 1\n    return count\n\nprint(get_std_count(\"stdsstdstdstdsstdstd\"))\nprint(get_std_count(\"stdsstdstdstdsstdsstd\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstd\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_std_count(\"stdsstdstdstdsstdstds\"))\nprint(get_"
    },
    {
      "rank": 75,
      "score": 2.6996806550405976,
      "candidate": "def find_occurence(str, std):\n    if len(str)<len(std):\n        return 0\n    else:\n        return str.count(std)\n\n#print(find_occurence('abcstdsdstd', 'std'))\n\n\"\"\"\nGiven a string, write a function to check if it is a permutation of a palindrome. A palindrome is a word, phrase, number, or other sequence of characters which reads the same backward as forward, such as madam or racecar. A permutation is a rearrangement of letters. The palindrome does not need to be limited to just a dictionary words. \n\"\"\"\ndef palindrome_permutation(str):\n    str = str.lower()\n    chars = {}\n    for char in str:\n        if char in chars:\n            chars[char] += 1\n        else:\n            chars[char] = 1\n    odd_count = 0\n    for key in chars:\n        if chars[key]%2 != 0:\n            odd_count += 1\n    return odd_count <= 1\n\n#print(palindrome_permutation('Tact Coa'))\n\n\"\"\"\nGiven a string, write a function to check if it is k-mutation from a given word. k-mutation means you can make only one mutation in the string. The output should be true or false. \n\"\"\"\ndef is_k_mutation(str1, str2, k):\n    str1 = str1.lower()\n    str2 = str2.lower()\n    if len(str1) != len(str2):\n        return False\n    count = 0\n    for i in range(len(str1)):\n        if str1[i] != str2[i]:\n            count += 1\n    if count <= k:\n        return True\n    return False\n\n#print(is_k_mutation('hello', 'hella', 1))\n\n\"\"\"\nGiven a string, find the palindrome that can be made by inserting the fewest number of characters as possible anywhere in the word. If there is more than one palindrome of minimum length that can be made,"
    },
    {
      "rank": 76,
      "score": 2.6991466938853015,
      "candidate": "#code\ndef find_std(string):\n    string=string.lower()\n    count=0\n    for i in range(0,len(string)):\n        if string[i:i+3]==\"std\":\n            count+=1\n    return count"
    },
    {
      "rank": 77,
      "score": 2.677440122697438,
      "candidate": "# def count_std(str):\n#     return str.count(\"std\")\n\n\ndef count_std(str):\n    return str.count(\"std\")\n\n\nprint(count_std(\"std is great\"))"
    },
    {
      "rank": 78,
      "score": 2.6615389998470205,
      "candidate": "def string_find(str1):\n    return len(re.findall(\"std\", str1))\n\n\ndef string_find_2(str1):\n    return len(re.compile(\"std\").findall(str1))\n\n\nif __name__ == \"__main__\":\n    print(string_find_2(\"stdstdstd\"))\n    print(string_find_2(\"stdstdstd\"))"
    },
    {
      "rank": 79,
      "score": 2.648973453061324,
      "candidate": "def find_occurence(input_string):\n    #write your code here\n    count = 0\n    for i in range(len(input_string)):\n        if input_string[i:i+3] == 'std':\n            count += 1\n    return count\n\n\nprint(find_occurence('std'))\nprint(find_occurence('stds'))\nprint(find_occurence('stdd'))\nprint(find_occurence('stdstdstd'))\nprint(find_occurence('sss'))\nprint(find_occurence(''))"
    },
    {
      "rank": 80,
      "score": 2.6400778958026456,
      "candidate": "def string_count(text):\n    count = 0\n    for i in range(len(text)-2):\n        if text[i] == 's' and text[i+1] == 't' and text[i+2] == 'd':\n            count += 1\n    return count\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\ndef string_count(text):\n    count = 0\n    for i in range(len(text)-2):\n        if text[i] == 's' and text[i+1] == 't' and text[i+2] == 'd':\n            count += 1\n    return count\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\ndef string_count(text):\n    count = 0\n    for i in range(len(text)-2):\n        if text[i] == 's' and text[i+1] == 't' and text[i+2] == 'd':\n            count += 1\n    return count\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\ndef string_count(text):\n    count = 0\n    for i in range(len(text)-2):\n        if text[i] == 's' and text[i+1] == 't' and text[i+2] == 'd':\n            count += 1\n    return count\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\ndef string_count(text):\n    count ="
    },
    {
      "rank": 81,
      "score": 2.5957531985534064,
      "candidate": "def check_std(str):\n    counter = 0\n    for i in range(len(str) - 2):\n        if str[i:i + 3] == 'std':\n            counter += 1\n    return counter"
    },
    {
      "rank": 82,
      "score": 2.580391238388681,
      "candidate": "def find_occurrence(text):\n    occurrence = 0\n    for i in range(len(text) - 2):\n        if text[i] == 's' and text[i + 1] == 't' and text[i + 2] == 'd':\n            occurrence += 1\n    return occurrence\n\n\ndef test_find_occurrence():\n    assert find_occurrence('sst') == 1\n    assert find_occurrence('sstssst') == 2\n    assert find_occurrence('sdtst') == 0\n\n\nif __name__ == '__main__':\n    test_find_occurrence()"
    },
    {
      "rank": 83,
      "score": 2.5459879622393946,
      "candidate": "def find_std(string):\n    for i in range(0, len(string)):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            return True\n    return False\n\nprint(find_std(\"stdsddsd\"))"
    },
    {
      "rank": 84,
      "score": 2.493584439832788,
      "candidate": "def find_std(str):\n    # TODO: Write your code here\n    count = 0\n    for i in range(len(str)-2):\n        if str[i:i+3] == 'std':\n            count += 1\n    return count\n\n\nprint(find_std('std'))\nprint(find_std('stds'))\nprint(find_std('stdsds'))\nprint(find_std('stdsstds'))\nprint(find_std('stdsstdsds'))\nprint(find_std('stdssdsstdsds'))\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef find_std(str):\n    # TODO: Write your code here\n    count = 0\n    for i in range(len(str)-2):\n        if str[i:i+3] == 'std':\n            count += 1\n    return count\n\n\nprint(find_std('std'))\nprint(find_std('stds'))\nprint(find_std('stdsds'))\nprint(find_std('stdsstds'))\nprint(find_std('stdsstdsds'))\nprint(find_std('stdssdsstdsds'))\n\n\"\"\"\nWrite a function to find the occurence of characters 'std' in the given string 1. list item 1. list item 1. list item 2. list item 2. list item 2. list item\n\"\"\"\n\ndef find_std(str):\n    # TODO: Write your code here\n    count = 0\n    for i in range(len(str)-2):\n        if str[i:i+3] == 'std':\n            count += 1\n    return count\n\n\nprint(find_std('std'))\nprint(find_std('stds'))\nprint(find_std('stdsds'))\nprint(find_std('stdsstds'))\nprint(find_std('stdsstdsds'))\nprint(find_std('stdssdsstdsds'))\n\n\"\"\""
    },
    {
      "rank": 85,
      "score": 2.4711445355220496,
      "candidate": "def std_check(string):\n    index = 0\n    std_count = 0\n    while index < len(string):\n        if string[index: index + 3] == \"std\":\n            std_count += 1\n        index += 1\n    return std_count\n\n\ndef main():\n    string = input(\"Enter a string to check for 'std' occurence: \")\n    print(\"Number of 'std' occurence in the given string: \", std_check(string))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 86,
      "score": 2.446832512996986,
      "candidate": "def find_occurence(s, pattern):\n    index = 0\n    result = []\n    while index < len(s):\n        if s[index:index + len(pattern)] == pattern:\n            result.append(index)\n        index += 1\n    return result\n\n\ndef find_occurence_with_iter(s, pattern):\n    index = 0\n    result = []\n    while index < len(s):\n        if s[index:index + len(pattern)] == pattern:\n            result.append(index)\n        index += 1\n    return result\n\n\nif __name__ == '__main__':\n    print(find_occurence('std is best', 'std'))\n    print(find_occurence_with_iter('std is best', 'std'))"
    },
    {
      "rank": 87,
      "score": 2.4245032112888487,
      "candidate": "def find_std(str1):\n    i = 0\n    count = 0\n    while i < len(str1):\n        if str1[i:i+3] == 'std':\n            count += 1\n        i += 1\n    return count\n\nif __name__ == '__main__':\n    print(find_std('stdstdstdstdstdstdstd'))"
    },
    {
      "rank": 88,
      "score": 2.4018966879596646,
      "candidate": "def check_string(string):\n    return string.find('std')\n\nprint(check_string('std'))\nprint(check_string('stdstdbest'))\nprint(check_string('stdbest'))\nprint(check_string('best'))\nprint(check_string('beststd'))"
    },
    {
      "rank": 89,
      "score": 2.389578175014489,
      "candidate": "# solution 1\ndef count_std(string):\n    # initializing the count\n    count = 0\n    # initializing the index\n    index = 0\n    # iterating over the string\n    while index < len(string):\n        # checking the condition\n        if string[index] == 's' and string[index+1] == 't' and string[index+2] == 'd':\n            count += 1\n            index += 3\n        else:\n            index += 1\n    # returning the count\n    return count\n\n\n# solution 2\ndef count_std(string):\n    # initializing the count\n    count = 0\n    # initializing the index\n    index = 0\n    # iterating over the string\n    while index < len(string):\n        # checking the condition\n        if string[index:index+3] == 'std':\n            count += 1\n            index += 3\n        else:\n            index += 1\n    # returning the count\n    return count"
    },
    {
      "rank": 90,
      "score": 2.3359069755507846,
      "candidate": "def find_std(string):\n    str_list = list(string)\n    count = 0\n    for i in range(len(str_list) - 2):\n        if str_list[i] == 's' and str_list[i + 1] == 't' and str_list[i + 2] == 'd':\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(find_std('stdstdstd'))"
    },
    {
      "rank": 91,
      "score": 2.293848149332354,
      "candidate": "def count_std(string):\n    return string.count('std')\n\nprint(count_std('stdsdfstds'))"
    },
    {
      "rank": 92,
      "score": 2.287625906893272,
      "candidate": "def string_occurrence(string):\n    return len([i for i in string if i in ['s', 't', 'd']])\n\n\ndef main():\n    string = input(\"Enter string: \")\n    print(string_occurrence(string))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 93,
      "score": 2.2682425259339407,
      "candidate": "def find_std(s):\n    # Your code goes here\n    std = \"std\"\n    #print(std)\n    count = 0\n    #print(s)\n    for i in range(len(s)-2):\n        if s[i:i+3] == std:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    s = input()\n    result = find_std(s)\n    print(result)"
    },
    {
      "rank": 94,
      "score": 2.260739004816286,
      "candidate": "def find_std(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i:i+3] == 'std':\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    string = 'stdsstdstdstdstd'\n    print(find_std(string))"
    },
    {
      "rank": 95,
      "score": 2.137541083743484,
      "candidate": "def get_occurence_of_std(input_string):\n    return input_string.count(\"std\")\n\nif __name__ == \"__main__\":\n    input_string = \"stdstdstd\"\n    print(get_occurence_of_std(input_string))"
    },
    {
      "rank": 96,
      "score": 2.118479922318633,
      "candidate": "def find_char_std(string):\n    count = 0\n    for i in range(len(string) - 2):\n        if string[i] == 's' and string[i + 1] == 't' and string[i + 2] == 'd':\n            count += 1\n    return count"
    },
    {
      "rank": 97,
      "score": 2.043359877671101,
      "candidate": "def find_std(string):\n    count = 0\n    for i in range(len(string)):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            count += 1\n\n    return count\n\nprint(find_std(\"stdsstdstd\"))"
    },
    {
      "rank": 98,
      "score": 2.020164938060112,
      "candidate": "def is_substring(string, sub_string):\n    for i in range(len(string) - len(sub_string) + 1):\n        if string[i:i + len(sub_string)] == sub_string:\n            return i\n    return -1\n\n\ndef count_substring(string, sub_string):\n    count = 0\n    for i in range(len(string) - len(sub_string) + 1):\n        if string[i:i + len(sub_string)] == sub_string:\n            count += 1\n    return count\n\n\ndef count_substring_inbuilt(string, sub_string):\n    return string.count(sub_string)\n\n\nprint(count_substring_inbuilt(\"AABCDDDDDECDDE\", \"BCD\"))"
    },
    {
      "rank": 99,
      "score": 2.006215542699554,
      "candidate": "def count_std(string):\n    count = 0\n    for i in range(len(string)-2):\n        if string[i] == 's' and string[i+1] == 't' and string[i+2] == 'd':\n            count += 1\n    return count\n\ndef main():\n    string = input(\"Enter a string: \")\n    print(count_std(string))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 100,
      "score": 1.6901274479551278,
      "candidate": "def find_std(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_2(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_3(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_4(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_5(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_6(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_7(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_8(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_9(str1):\n    count = 0\n    for i in range(len(str1)):\n        if str1[i:i+3] == \"std\":\n            count += 1\n    return count\n\ndef find_std_10(str"
    }
  ]
}