{
  "timestamp": "2025-09-14T22:39:04.974449",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 47,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def opposite_sign(a, b):\n    if a > 0 and b < 0 or a < 0 and b > 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(2, -3))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def check_sign(a, b):\n    if a*b < 0:\n        return True\n    else:\n        return False\n\nprint(check_sign(10, -20))\nprint(check_sign(10, 20))\nprint(check_sign(10, 20))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def opposite_sign(a, b):\n    if a < 0 and b > 0:\n        return True\n    elif a > 0 and b < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(10, -20))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def opposite_sign(x, y):\n    return x * y < 0\n\n\ndef main():\n    print(opposite_sign(10, -20))\n    print(opposite_sign(-10, 20))\n    print(opposite_sign(10, 20))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def opposite_sign(x, y):\n    return (x > 0 and y < 0) or (x < 0 and y > 0)\n\ndef opposite_sign_2(x, y):\n    return x*y < 0"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def opposite_sign(number1, number2):\n    if number1 > 0 and number2 < 0:\n        return True\n    elif number1 < 0 and number2 > 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(10, -10))\nprint(opposite_sign(10, 20))"
    },
    {
      "rank": 7,
      "score": 9.370583536698913,
      "candidate": "def check_sign(a,b):\n    if a*b<0:\n        return True\n    else:\n        return False\n\nprint(check_sign(1,2))\nprint(check_sign(-1,2))\nprint(check_sign(2,-2))\nprint(check_sign(-2,-1))"
    },
    {
      "rank": 8,
      "score": 9.234050852198141,
      "candidate": "def check_opposite_sign(num1, num2):\n    if num1 > 0 and num2 < 0:\n        return True\n    if num1 < 0 and num2 > 0:\n        return True\n    return False\n\nprint(check_opposite_sign(2, 3))\nprint(check_opposite_sign(-2, 3))\nprint(check_opposite_sign(-2, -3))\nprint(check_opposite_sign(2, -3))"
    },
    {
      "rank": 9,
      "score": 9.226766272351448,
      "candidate": "def opposite_sign(x, y):\n    if x < 0 and y > 0:\n        return True\n    elif x > 0 and y < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(2, 3))"
    },
    {
      "rank": 10,
      "score": 9.21346272767743,
      "candidate": "def check_opposite_sign(num1, num2):\n    if num1 * num2 < 0:\n        return True\n    return False\n\nif __name__ == '__main__':\n    print(\"Enter two numbers: \")\n    num1 = int(input())\n    num2 = int(input())\n    if check_opposite_sign(num1, num2):\n        print(\"The two numbers have opposite sign\")\n    else:\n        print(\"The two numbers have same sign\")"
    },
    {
      "rank": 11,
      "score": 9.205959372648458,
      "candidate": "def opposite_sign(x, y):\n    if (x < 0 and y > 0) or (x > 0 and y < 0):\n        return True\n    else:\n        return False\n\nprint(opposite_sign(1, 1))\nprint(opposite_sign(1, -1))\nprint(opposite_sign(-1, 1))\nprint(opposite_sign(-1, -1))"
    },
    {
      "rank": 12,
      "score": 9.183391466815202,
      "candidate": "def oppositeSign(x, y):\n    if (x >= 0 and y < 0) or (x < 0 and y >= 0):\n        return True\n    return False\n\nprint(oppositeSign(5, 5))\nprint(oppositeSign(-5, 5))\nprint(oppositeSign(5, -5))\nprint(oppositeSign(-5, -5))"
    },
    {
      "rank": 13,
      "score": 9.177268828905222,
      "candidate": "def oppositeSign(x, y):\n    if x > 0 and y < 0:\n        return True\n    elif x < 0 and y > 0:\n        return True\n    return False\n\nprint(oppositeSign(10, 20))\nprint(oppositeSign(10, -20))\nprint(oppositeSign(-10, 20))\nprint(oppositeSign(-10, -20))"
    },
    {
      "rank": 14,
      "score": 9.122564458729856,
      "candidate": "def check_opposite_sign(a, b):\n    if a < 0 and b > 0:\n        return True\n    elif a > 0 and b < 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    if check_opposite_sign(a, b):\n        print(\"Two numbers have opposite sign\")\n    else:\n        print(\"Two numbers have same sign\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 8.973005557553902,
      "candidate": "def opposite_sign(a, b):\n    if (a > 0 and b < 0) or (a < 0 and b > 0):\n        return True\n    return False\n\n\nprint(opposite_sign(5, -2))\nprint(opposite_sign(-5, 2))\nprint(opposite_sign(5, 5))\nprint(opposite_sign(-5, -5))"
    },
    {
      "rank": 16,
      "score": 8.95994420569242,
      "candidate": "def opposite_sign(a,b):\n    if a > 0 and b < 0:\n        return True\n    elif a < 0 and b > 0:\n        return True\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    num1 = int(input(\"Enter first number: \"))\n    num2 = int(input(\"Enter second number: \"))\n    if opposite_sign(num1, num2):\n        print(\"The numbers have opposite sign\")\n    else:\n        print(\"The numbers don't have opposite sign\")"
    },
    {
      "rank": 17,
      "score": 8.946210893390457,
      "candidate": "def opposite_sign(num1, num2):\n    if num1 > 0 and num2 < 0 or num1 < 0 and num2 > 0:\n        return True\n    else:\n        return False\n\n\nnum1 = int(input(\"Enter first number: \"))\nnum2 = int(input(\"Enter second number: \"))\nprint(opposite_sign(num1, num2))"
    },
    {
      "rank": 18,
      "score": 8.932217008005624,
      "candidate": "def oppSign(a, b):\n    if a < 0 and b > 0:\n        return True\n    elif a > 0 and b < 0:\n        return True\n    else:\n        return False\n\nprint(oppSign(10, -10))"
    },
    {
      "rank": 19,
      "score": 8.910084504002544,
      "candidate": "def check_opposite_sign(a, b):\n    if (a > 0 and b < 0) or (a < 0 and b > 0):\n        return True\n    else:\n        return False\n\nprint(check_opposite_sign(10, -20))\nprint(check_opposite_sign(-10, 20))\nprint(check_opposite_sign(-10, -20))"
    },
    {
      "rank": 20,
      "score": 8.85571690049604,
      "candidate": "def opposite_sign(x, y):\n    if (x >= 0 and y < 0) or (x < 0 and y >= 0):\n        return True\n    return False\n\nprint(opposite_sign(2, -2))\nprint(opposite_sign(-2, 2))\nprint(opposite_sign(-2, -2))\nprint(opposite_sign(2, 2))"
    },
    {
      "rank": 21,
      "score": 8.855395696632057,
      "candidate": "def oppositeSign(x, y):\n    if (x > 0 and y < 0) or (x < 0 and y > 0):\n        return True\n    return False\n\n\nprint(oppositeSign(5, -5))\nprint(oppositeSign(5, 5))\nprint(oppositeSign(-5, 5))\nprint(oppositeSign(5, 10))"
    },
    {
      "rank": 22,
      "score": 8.850707355641543,
      "candidate": "def oppositeSign(x, y):\n    if (x >= 0 and y < 0) or (x < 0 and y >= 0):\n        return True\n    else:\n        return False\n\nprint(oppositeSign(5, -5))"
    },
    {
      "rank": 23,
      "score": 8.8281618090209,
      "candidate": "def opposite_sign(x, y):\n    if x < 0 and y > 0 or x > 0 and y < 0:\n        return True\n    return False\n\n\nprint(opposite_sign(-10, -100))"
    },
    {
      "rank": 24,
      "score": 8.81367773444215,
      "candidate": "def check_opposite_sign(a,b):\n    if a*b<0:\n        return True\n    else:\n        return False\n\nprint(check_opposite_sign(1,2))\nprint(check_opposite_sign(-1,-2))\nprint(check_opposite_sign(-1,2))\nprint(check_opposite_sign(1,-2))"
    },
    {
      "rank": 25,
      "score": 8.76828871349479,
      "candidate": "def opposite_sign(a, b):\n    if a > 0 and b < 0 or a < 0 and b > 0:\n        return True\n    return False\n\n\ndef main():\n    print(opposite_sign(2, -2))\n    print(opposite_sign(-2, -2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 26,
      "score": 8.750282588864879,
      "candidate": "def opposite_sign(a, b):\n    if a * b < 0:\n        return True\n    return False\n\n\ndef main():\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    if opposite_sign(a, b):\n        print(\"The two numbers have opposite sign\")\n    else:\n        print(\"The two numbers do not have opposite sign\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 27,
      "score": 8.715724466237427,
      "candidate": "def check_opposite(x, y):\n    if x < 0 and y > 0:\n        return True\n    elif x > 0 and y < 0:\n        return True\n    return False\n\n\nprint(check_opposite(-1, 1))\nprint(check_opposite(1, -1))\nprint(check_opposite(-1, -1))\nprint(check_opposite(1, 1))"
    },
    {
      "rank": 28,
      "score": 8.692801520950061,
      "candidate": "def opposite_sign(a, b):\n    if a > 0 and b < 0:\n        return True\n    elif a < 0 and b > 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(5, -5))"
    },
    {
      "rank": 29,
      "score": 8.632293453617281,
      "candidate": "def check_sign(num1, num2):\n    if num1 * num2 < 0:\n        return True\n    return False\n\n\ndef main():\n    num1 = int(input(\"Enter the first number: \"))\n    num2 = int(input(\"Enter the second number: \"))\n    if check_sign(num1, num2):\n        print(\"The two integers have opposite sign.\")\n    else:\n        print(\"The two integers do not have opposite sign.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 30,
      "score": 8.625262456968262,
      "candidate": "def opposite_sign(num1, num2):\n    if (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0):\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(12, -15))\nprint(opposite_sign(12, 15))"
    },
    {
      "rank": 31,
      "score": 8.625142247198651,
      "candidate": "def oppositeSign(a,b):\n    if a < 0 and b < 0:\n        return True\n    elif a > 0 and b > 0:\n        return True\n    return False\n\nprint(oppositeSign(10, -10))\nprint(oppositeSign(-10, 10))\nprint(oppositeSign(10, 10))"
    },
    {
      "rank": 32,
      "score": 8.623000730200317,
      "candidate": "def oppositeSign(x, y):\n    if x * y < 0:\n        return True\n    return False\n\nprint(oppositeSign(1, -2))\nprint(oppositeSign(-1, -2))"
    },
    {
      "rank": 33,
      "score": 8.616253589228675,
      "candidate": "def opposite_sign(x, y):\n    return x * y < 0\n\nprint(opposite_sign(5, 5))\nprint(opposite_sign(5, -5))\nprint(opposite_sign(-5, -5))\nprint(opposite_sign(-5, 5))"
    },
    {
      "rank": 34,
      "score": 8.610076160146226,
      "candidate": "def check_sign(a,b):\n    if a*b<0:\n        return True\n    else:\n        return False\n\nprint(check_sign(-1,2))\nprint(check_sign(-1,-2))"
    },
    {
      "rank": 35,
      "score": 8.606486429141842,
      "candidate": "def opposite_sign(num1, num2):\n    if num1 * num2 < 0:\n        return True\n    return False\n\n\ndef main():\n    print(opposite_sign(-5, 5))\n    print(opposite_sign(3, 3))\n    print(opposite_sign(-5, -5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 8.60156811074208,
      "candidate": "def check_sign(a, b):\n    if (a > 0 and b < 0) or (a < 0 and b > 0):\n        return True\n    else:\n        return False\n\na = int(input())\nb = int(input())\nif check_sign(a, b):\n    print(\"The two integers have opposite sign.\")\nelse:\n    print(\"The two integers have same sign.\")"
    },
    {
      "rank": 37,
      "score": 8.565425580227462,
      "candidate": "def opposite_sign(a, b):\n    if (a < 0 and b > 0) or (a > 0 and b < 0):\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    print(opposite_sign(10, 15))"
    },
    {
      "rank": 38,
      "score": 8.548876241946822,
      "candidate": "def check_sign(x, y):\n    if x * y < 0:\n        return True\n    else:\n        return False\n\n\nprint(check_sign(-5, 6))"
    },
    {
      "rank": 39,
      "score": 8.542875062379007,
      "candidate": "def opposite_sign(x, y):\n    if x < 0 and y > 0:\n        return True\n    elif x > 0 and y < 0:\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    x = int(input())\n    y = int(input())\n    print(opposite_sign(x, y))"
    },
    {
      "rank": 40,
      "score": 8.53012858503943,
      "candidate": "def oppositeSign(num1, num2):\n    if (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0):\n        return True\n    return False"
    },
    {
      "rank": 41,
      "score": 8.499905739299377,
      "candidate": "def opposite_sign(a, b):\n    if a > 0 and b < 0:\n        return True\n    elif a < 0 and b > 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(2, -2))\nprint(opposite_sign(-2, 2))\nprint(opposite_sign(2, 2))"
    },
    {
      "rank": 42,
      "score": 8.490324832712195,
      "candidate": "def opposite_sign(x: int, y: int) -> bool:\n    if x < 0 and y > 0 or x > 0 and y < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(2, 4))\nprint(opposite_sign(-2, 4))\nprint(opposite_sign(2, -4))"
    },
    {
      "rank": 43,
      "score": 8.48796797856353,
      "candidate": "def opposite_sign(num1, num2):\n    if (num1 >= 0 and num2 <= 0) or (num1 <= 0 and num2 >= 0):\n        return True\n    return False\n\nprint(opposite_sign(10, -10))\nprint(opposite_sign(-10, 10))\nprint(opposite_sign(-10, -10))\nprint(opposite_sign(10, 10))"
    },
    {
      "rank": 44,
      "score": 8.478208546788407,
      "candidate": "def check_sign(num1, num2):\n    if (num1 >= 0 and num2 < 0) or (num1 < 0 and num2 >= 0):\n        return True\n    return False\n\nprint(check_sign(1, -2))\nprint(check_sign(-1, -2))\nprint(check_sign(1, 2))\nprint(check_sign(-1, 2))\nprint(check_sign(-1, -2))"
    },
    {
      "rank": 45,
      "score": 8.437695832075478,
      "candidate": "def oppositeSign(x, y):\n    if x*y < 0:\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    x = int(input(\"Enter the first number: \"))\n    y = int(input(\"Enter the second number: \"))\n    if oppositeSign(x, y):\n        print(\"Opposite Sign\")\n    else:\n        print(\"Not Opposite Sign\")"
    },
    {
      "rank": 46,
      "score": 8.426531424889468,
      "candidate": "def opposite_sign(x, y):\n    if x > 0 and y < 0:\n        return True\n    elif x < 0 and y > 0:\n        return True\n    return False\n\n\ndef main():\n    x, y = [int(num) for num in input().split()]\n    print(opposite_sign(x, y))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 47,
      "score": 8.408439383654278,
      "candidate": "def opposite_sign(num1, num2):\n    if (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0):\n        return True\n    return False"
    },
    {
      "rank": 48,
      "score": 8.386620303250325,
      "candidate": "def opposite_sign(x, y):\n    if x > 0 and y < 0:\n        return True\n    elif x < 0 and y > 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    x = int(input(\"Enter the first number: \"))\n    y = int(input(\"Enter the second number: \"))\n    if opposite_sign(x, y):\n        print(\"The given two integers have opposite sign.\")\n    else:\n        print(\"The given two integers don't have opposite sign.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 49,
      "score": 8.375312293858853,
      "candidate": "def opposite_sign(a, b):\n    return (a < 0 and b > 0) or (a > 0 and b < 0)\n\n\nprint(opposite_sign(10, -20))"
    },
    {
      "rank": 50,
      "score": 8.351614956112536,
      "candidate": "def opposite_sign(a, b):\n    if a > 0 and b < 0:\n        return True\n    elif a < 0 and b > 0:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    a, b = 12, -12\n    print(opposite_sign(a, b))"
    },
    {
      "rank": 51,
      "score": 8.334608500525688,
      "candidate": "def check_opposite_sign(x, y):\n    if x > 0 and y < 0 or x < 0 and y > 0:\n        return True\n    return False\n\nprint(check_opposite_sign(5, 1))\nprint(check_opposite_sign(1, -1))\nprint(check_opposite_sign(5, 10))"
    },
    {
      "rank": 52,
      "score": 8.331556294201176,
      "candidate": "def check_sign(a, b):\n    if (a < 0 and b > 0) or (a > 0 and b < 0):\n        return True\n    return False\n\nprint(check_sign(-1, 2))\nprint(check_sign(1, -2))\nprint(check_sign(2, 2))\nprint(check_sign(-1, -2))\nprint(check_sign(2, 2))"
    },
    {
      "rank": 53,
      "score": 8.327375965969855,
      "candidate": "def opposite_sign(number1, number2):\n    if (number1 < 0 and number2 > 0) or (number1 > 0 and number2 < 0):\n        return True\n    return False\n\nprint(opposite_sign(-1, 2))\nprint(opposite_sign(-1, -2))\nprint(opposite_sign(-1, 2))\nprint(opposite_sign(1, -2))\nprint(opposite_sign(0, 2))\nprint(opposite_sign(0, -2))"
    },
    {
      "rank": 54,
      "score": 8.327367757082776,
      "candidate": "def check_sign(x, y):\n    if x < 0 and y > 0 or x > 0 and y < 0:\n        return True\n    else:\n        return False\n\n\nprint(check_sign(3, 5))"
    },
    {
      "rank": 55,
      "score": 8.298597569547805,
      "candidate": "def opposite_sign(num1, num2):\n    if num1*num2 < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(-2, 3))"
    },
    {
      "rank": 56,
      "score": 8.294940769211511,
      "candidate": "def opposite_sign(num1, num2):\n    if num1 * num2 < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(1, -1))"
    },
    {
      "rank": 57,
      "score": 8.2938925966498,
      "candidate": "def check_opposite(a, b):\n    if a >= 0 and b < 0:\n        return True\n    elif a < 0 and b >= 0:\n        return True\n    else:\n        return False\n\nprint(check_opposite(3, 4))\nprint(check_opposite(-3, -4))\nprint(check_opposite(3, -4))\nprint(check_opposite(-3, 4))"
    },
    {
      "rank": 58,
      "score": 8.289838256518838,
      "candidate": "def oppositeSign(a,b):\n    if (a > 0 and b < 0) or (a < 0 and b > 0):\n        return True\n    return False\n\nprint(oppositeSign(12, -4))\nprint(oppositeSign(-12, 4))\nprint(oppositeSign(12, 4))\nprint(oppositeSign(12, 12))"
    },
    {
      "rank": 59,
      "score": 8.251903304236286,
      "candidate": "def opposite_sign(a,b):\n    if a * b < 0:\n        return True\n    else:\n        return False\n\na = int(input())\nb = int(input())\n\nprint(opposite_sign(a,b))"
    },
    {
      "rank": 60,
      "score": 8.214125058964552,
      "candidate": "def opposite_sign(num1, num2):\n    if num1 * num2 < 0:\n        return True\n    return False\n\nprint(opposite_sign(-5, 3))\nprint(opposite_sign(3, 3))\nprint(opposite_sign(-5, -3))"
    },
    {
      "rank": 61,
      "score": 8.212735598038213,
      "candidate": "def opposite_sign(number1, number2):\n    return ((number1 > 0 and number2 < 0) or (number1 < 0 and number2 > 0))\n\nif __name__ == \"__main__\":\n    print(opposite_sign(3, -5))\n    print(opposite_sign(3, 5))\n    print(opposite_sign(3, 3))"
    },
    {
      "rank": 62,
      "score": 8.211579567659316,
      "candidate": "def check_opposite_sign(a,b):\n    if a > 0 and b < 0:\n        return True\n    elif a < 0 and b > 0:\n        return True\n    else:\n        return False\n\nprint(check_opposite_sign(3, -4))"
    },
    {
      "rank": 63,
      "score": 8.209707251476969,
      "candidate": "def oppositeSign(a, b):\n    return a*b < 0"
    },
    {
      "rank": 64,
      "score": 8.2048573255218,
      "candidate": "def oppositeSign(x, y):\n    if x * y < 0:\n        return True\n    return False\n\nprint(oppositeSign(1, -2))\nprint(oppositeSign(2, -2))\nprint(oppositeSign(1, 1))\nprint(oppositeSign(-1, -2))"
    },
    {
      "rank": 65,
      "score": 8.193565922652176,
      "candidate": "def opposite_sign(a, b):\n    if a > 0 and b < 0:\n        return True\n    elif a < 0 and b > 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(3, -4))"
    },
    {
      "rank": 66,
      "score": 8.185309335307622,
      "candidate": "def opposite_sign(num1, num2):\n    if (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0):\n        return True\n    return False\n\n\nprint(opposite_sign(-1, 2))\nprint(opposite_sign(2, 2))\nprint(opposite_sign(1, -2))"
    },
    {
      "rank": 67,
      "score": 8.172253082181854,
      "candidate": "def opposite_sign(num1: int, num2: int) -> bool:\n    return (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0)\n\n\nif __name__ == \"__main__\":\n    assert opposite_sign(1, -1)\n    assert opposite_sign(1, -1)\n    assert not opposite_sign(1, 1)\n    assert not opposite_sign(1, 0)\n    assert not opposite_sign(0, 0)"
    },
    {
      "rank": 68,
      "score": 8.163300679823958,
      "candidate": "def opposite_sign(a,b):\n    if a*b < 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(10, -20))\nprint(opposite_sign(10, -10))\nprint(opposite_sign(10, 20))\nprint(opposite_sign(10, 10))\nprint(opposite_sign(0, 0))"
    },
    {
      "rank": 69,
      "score": 8.144125099485041,
      "candidate": "def opposite_sign(num1, num2):\n    if num1 > 0 and num2 < 0:\n        return True\n    elif num1 < 0 and num2 > 0:\n        return True\n    return False\n\nprint(opposite_sign(5, -5))\nprint(opposite_sign(-5, -10))\nprint(opposite_sign(-5, 10))\nprint(opposite_sign(5, 10))\nprint(opposite_sign(5, 10))"
    },
    {
      "rank": 70,
      "score": 8.143591138329747,
      "candidate": "def check_sign(num1, num2):\n    if (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0):\n        return True\n    else:\n        return False\n\n\nprint(check_sign(5, -10))\nprint(check_sign(-5, 10))\nprint(check_sign(-5, -10))\nprint(check_sign(5, 10))"
    },
    {
      "rank": 71,
      "score": 8.121884567141883,
      "candidate": "def check_opposite_sign(a, b):\n    return ((a > 0 and b < 0) or (a < 0 and b > 0))"
    },
    {
      "rank": 72,
      "score": 8.105983444291466,
      "candidate": "def opposite_sign(x, y):\n    if (x < 0 and y > 0) or (x > 0 and y < 0):\n        return True\n    else:\n        return False\n\nprint(opposite_sign(2, -3))"
    },
    {
      "rank": 73,
      "score": 8.08452234024709,
      "candidate": "def oppositeSign(x, y):\n    if x < 0 and y > 0:\n        return True\n    elif x > 0 and y < 0:\n        return True\n    else:\n        return False\n\nprint(oppositeSign(5, 5))\nprint(oppositeSign(-5, 5))\nprint(oppositeSign(5, -5))\nprint(oppositeSign(-5, -5))"
    },
    {
      "rank": 74,
      "score": 8.040197642997851,
      "candidate": "def opposite_sign(a, b):\n    if a < 0 and b > 0:\n        return True\n    elif a > 0 and b < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(1, 2))\nprint(opposite_sign(-1, -2))\nprint(opposite_sign(1, -2))\nprint(opposite_sign(-1, 2))"
    },
    {
      "rank": 75,
      "score": 8.024835682833125,
      "candidate": "def check_sign(x, y):\n    if x < 0 and y > 0 or x > 0 and y < 0:\n        return True\n    return False\n\nprint(check_sign(1, 2))\nprint(check_sign(-1, 2))\nprint(check_sign(1, -2))\nprint(check_sign(-1, -2))"
    },
    {
      "rank": 76,
      "score": 7.990432406683839,
      "candidate": "def opposite_sign(a, b):\n    if a*b<0:\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    a, b = int(input(\"Enter first number: \")), int(input(\"Enter second number: \"))\n\n    if opposite_sign(a, b):\n        print(\"Given numbers have opposite sign\")\n    else:\n        print(\"Given numbers don't have opposite sign\")"
    },
    {
      "rank": 77,
      "score": 7.938028884277233,
      "candidate": "def opposite_sign(x,y):\n    if x*y < 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(10, -20))\nprint(opposite_sign(10, 20))\nprint(opposite_sign(10, 10))"
    },
    {
      "rank": 78,
      "score": 7.915588979966494,
      "candidate": "def opposite_sign(x, y):\n    if x*y < 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(2, -3))\nprint(opposite_sign(1, 1))\nprint(opposite_sign(1, 2))\nprint(opposite_sign(-1, -2))"
    },
    {
      "rank": 79,
      "score": 7.8912769574414305,
      "candidate": "def check_opposite_sign(a,b):\n    if (a>0 and b<0) or (a<0 and b>0):\n        return True\n    else:\n        return False\nprint(check_opposite_sign(10,20))\nprint(check_opposite_sign(10,-20))\nprint(check_opposite_sign(-10,-20))"
    },
    {
      "rank": 80,
      "score": 7.868947655733293,
      "candidate": "def opposite_sign(a, b):\n    if a < 0 < b:\n        return True\n    return False\n\n\nprint(opposite_sign(-5, 6))"
    },
    {
      "rank": 81,
      "score": 7.84634113240411,
      "candidate": "def oppositeSign(a, b):\n    if (a < 0 and b > 0) or (a > 0 and b < 0):\n        return True\n    return False\n\nprint(oppositeSign(3, 4))"
    },
    {
      "rank": 82,
      "score": 7.834022619458933,
      "candidate": "def opposite_sign(num1, num2):\n    if (num1 < 0 and num2 > 0) or (num1 > 0 and num2 < 0):\n        return True\n    else:\n        return False\n\nprint(opposite_sign(2, -2))\nprint(opposite_sign(-2, -2))\nprint(opposite_sign(3, -2))"
    },
    {
      "rank": 83,
      "score": 7.780351419995229,
      "candidate": "def opposite_sign(a, b):\n    return ((a > 0 and b < 0) or (a < 0 and b > 0))\n\na = int(input())\nb = int(input())\n\nif opposite_sign(a, b):\n    print(\"Opposite Sign\")\nelse:\n    print(\"Not Opposite Sign\")"
    },
    {
      "rank": 84,
      "score": 7.738292593776799,
      "candidate": "def oppositeSign(a, b):\n    if a > 0 and b < 0 or a < 0 and b > 0:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 85,
      "score": 7.7320703513377165,
      "candidate": "def opposite_sign(num1, num2):\n    if (num1 < 0 and num2 > 0) or (num1 > 0 and num2 < 0):\n        return True\n    return False\n\n\nprint(opposite_sign(1, 2))\nprint(opposite_sign(-1, 2))\nprint(opposite_sign(1, -2))\nprint(opposite_sign(-1, -2))"
    },
    {
      "rank": 86,
      "score": 7.705183449260731,
      "candidate": "def opposite_sign(num1, num2):\n    if num1*num2 < 0:\n        return True\n    else:\n        return False\n\nprint(opposite_sign(12, -12))\nprint(opposite_sign(12, 12))\nprint(opposite_sign(-12, 12))\nprint(opposite_sign(-12, -12))"
    },
    {
      "rank": 87,
      "score": 7.5819855281879285,
      "candidate": "def opposite_sign(a,b):\n    if a > 0 and b < 0 or a < 0 and b > 0:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 88,
      "score": 7.562924366763077,
      "candidate": "def opposite_sign(a, b):\n    if (a > 0 and b < 0) or (a < 0 and b > 0):\n        return True\n    return False\n\n\ndef main():\n    a = int(input(\"Enter a : \"))\n    b = int(input(\"Enter b : \"))\n    if opposite_sign(a, b):\n        print(f\"{a} and {b} have opposite sign\")\n    else:\n        print(f\"{a} and {b} do not have opposite sign\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 89,
      "score": 7.4878043221155455,
      "candidate": "def opp_sign(num1, num2):\n    if(num1>0 and num2<0):\n        return True\n    elif(num1<0 and num2>0):\n        return True\n    else:\n        return False\nnum1 = int(input(\"Enter first number: \"))\nnum2 = int(input(\"Enter second number: \"))\nprint(opp_sign(num1, num2))"
    },
    {
      "rank": 90,
      "score": 7.464609382504557,
      "candidate": "def opposite_sign(num1, num2):\n    if num1 < 0 and num2 > 0:\n        return True\n    elif num1 > 0 and num2 < 0:\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(-10, 5))\nprint(opposite_sign(5, -10))\nprint(opposite_sign(10, 10))"
    },
    {
      "rank": 91,
      "score": 7.4506599871439985,
      "candidate": "def opposite_sign(a: int, b: int) -> bool:\n    \"\"\"Check if two integers have opposite sign.\n\n    Args:\n        a (int): Integer 1\n        b (int): Integer 2\n\n    Returns:\n        bool: True if opposite sign else False\n    \"\"\"\n    return a * b < 0\n\n\nif __name__ == \"__main__\":\n    print(opposite_sign(1, -2))\n    print(opposite_sign(1, 2))"
    },
    {
      "rank": 92,
      "score": 7.134571892399572,
      "candidate": "def check_opposite(n1, n2):\n    if n1 < 0 and n2 > 0 or n1 > 0 and n2 < 0:\n        return True\n    else:\n        return False\n\n\ndef main():\n    num1 = int(input(\"Please enter the first number: \"))\n    num2 = int(input(\"Please enter the second number: \"))\n    if check_opposite(num1, num2):\n        print(\"Given two integers have opposite sign.\")\n    else:\n        print(\"Given two integers do not have opposite sign.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def check_opposite_sign(a: int, b: int) -> bool:\n    \"\"\"\n    Check whether two integers have opposite sign or not.\n    >>> check_opposite_sign(5, 10)\n    True\n    >>> check_opposite_sign(5, 5)\n    False\n    >>> check_opposite_sign(5, -10)\n    True\n    \"\"\"\n    if a * b < 0:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "def check_sign(num1: int, num2: int) -> bool:\n    \"\"\"Checks whether the given two integers have opposite sign or not.\n\n    Args:\n        num1 (int): first integer\n        num2 (int): second integer\n\n    Returns:\n        bool: True if opposite sign else False\n    \"\"\"\n    return (num1 > 0 and num2 < 0) or (num1 < 0 and num2 > 0)\n\n\nif __name__ == \"__main__\":\n    print(check_sign(5, 8))\n    print(check_sign(-5, 8))\n    print(check_sign(5, -8))\n    print(check_sign(-5, -8))"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def opposite_sign(x: int, y: int) -> bool:\n    \"\"\"\n    Returns True if x and y have opposite signs.\n    >>> opposite_sign(1, 2)\n    True\n    >>> opposite_sign(-1, 2)\n    False\n    >>> opposite_sign(1, -2)\n    False\n    >>> opposite_sign(-1, -2)\n    True\n    >>> opposite_sign(0, 2)\n    False\n    >>> opposite_sign(-1, 0)\n    False\n    \"\"\"\n    return x * y < 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def opposite_sign(a, b):\n    if (a > 0 and b < 0) or (a < 0 and b > 0):\n        return True\n    else:\n        return False\n\n\nprint(opposite_sign(10, 10))"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def opposite_sign(num1: int, num2: int) -> bool:\n    \"\"\"Check whether the given two integers have opposite sign or not.\n\n    Args:\n        num1 (int): first integer\n        num2 (int): second integer\n\n    Returns:\n        bool: True if both numbers have opposite sign. False otherwise.\n    \"\"\"\n    return (num1 < 0 and num2 > 0) or (num1 > 0 and num2 < 0)\n\n\nif __name__ == \"__main__\":\n    print(opposite_sign(10, -20))\n    print(opposite_sign(-10, 20))"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def check_opposite_sign(x, y):\n    if x < 0 and y > 0:\n        return True\n    elif x > 0 and y < 0:\n        return True\n    else:\n        return False\n\n\nprint(check_opposite_sign(3, -4))\nprint(check_opposite_sign(1, -1))\nprint(check_opposite_sign(-1, -1))"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def check_opposite_sign(num1: int, num2: int) -> bool:\n    \"\"\"Checks if two numbers have opposite signs.\n\n    Args:\n        num1 (int): first number\n        num2 (int): second number\n\n    Returns:\n        bool: True if opposite sign, False otherwise\n    \"\"\"\n    if num1 < 0 < num2:\n        return True\n    elif num1 > 0 > num2:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert check_opposite_sign(1, 2) == False\n    assert check_opposite_sign(1, -2) == True\n    assert check_opposite_sign(-1, 2) == True\n    assert check_opposite_sign(-1, -2) == False\n    assert check_opposite_sign(1, 0) == False\n    assert check_opposite_sign(-1, 0) == False\n    assert check_opposite_sign(0, 0) == False\n    assert check_opposite_sign(0, 1) == False"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def check_sign(int1, int2):\n    return (int1 > 0 and int2 < 0) or (int1 < 0 and int2 > 0)\n\n\nprint(check_sign(1, -1))\nprint(check_sign(-1, 1))\nprint(check_sign(1, 1))\nprint(check_sign(-1, -1))"
    }
  ]
}