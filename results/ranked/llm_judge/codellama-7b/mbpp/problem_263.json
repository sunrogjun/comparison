{
  "timestamp": "2025-09-15T00:17:28.058830",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 263,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def sum_of_even_index(n: int, k: int) -> int:\n    \"\"\"\n    Find sum of even index binomial coefficients\n    >>> sum_of_even_index(5, 2)\n    25\n    >>> sum_of_even_index(10, 5)\n    320\n    >>> sum_of_even_index(5, 1)\n    5\n    \"\"\"\n    sum = 0\n\n    for i in range(n + 1):\n        sum += binomial_coefficient(n, i)\n    return sum\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    Binomial Coefficient\n    >>> binomial_coefficient(5, 2)\n    10\n    >>> binomial_coefficient(10, 5)\n    252\n    >>> binomial_coefficient(5, 1)\n    5\n    \"\"\"\n    if k < 0:\n        return 0\n    if k == 0 or n == k:\n        return 1\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of even index binomial coefficients\n    >>> sum_of_even_index_binomial_coefficients(5)\n    10\n    >>> sum_of_even_index_binomial_coefficients(10)\n    38\n    >>> sum_of_even_index_binomial_coefficients(15)\n    120\n    >>> sum_of_even_index_binomial_coefficients(20)\n    280\n    >>> sum_of_even_index_binomial_coefficients(25)\n    560\n    \"\"\"\n    res = 0\n    for i in range(n + 1):\n        res += binomial_coefficients(i, i // 2)\n    return res\n\n\ndef binomial_coefficients(n, k):\n    \"\"\"\n    Return the binomial coefficient n choose k\n    >>> binomial_coefficients(5, 3)\n    10\n    >>> binomial_coefficients(5, 2)\n    10\n    >>> binomial_coefficients(5, 1)\n    5\n    >>> binomial_coefficients(5, 0)\n    1\n    \"\"\"\n    if k > n - k:\n        k = n - k\n    if k == 0 or k == n:\n        return 1\n    if k > n // 2:\n        k = n - k\n    res = 1\n    for i in range(k):\n        res *= n - i\n        res //= i + 1\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef even_index_binomial_coefficient(n, k):\n    \"\"\"\n    Find sum of even index binomial coefficients\n    :param n: n\n    :param k: k\n    :return: sum of even index binomial coefficients\n    >>> even_index_binomial_coefficient(4, 2)\n    28\n    \"\"\"\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\n\ndef even_index_binomial_coefficient_mod(n, k, mod):\n    \"\"\"\n    Find sum of even index binomial coefficients\n    :param n: n\n    :param k: k\n    :param mod: mod\n    :return: sum of even index binomial coefficients\n    >>> even_index_binomial_coefficient_mod(4, 2, 1000000007)\n    28\n    \"\"\"\n    return factorial(n) // (factorial(k) * factorial(n - k)) % mod\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def sum_even_index_binomial_coefficients(n, k):\n    \"\"\"\n    Return the sum of even index binomial coefficients.\n\n    >>> sum_even_index_binomial_coefficients(10, 5)\n    11860\n    >>> sum_even_index_binomial_coefficients(10, 10)\n    126\n    >>> sum_even_index_binomial_coefficients(10, 1)\n    1\n    \"\"\"\n    if k > n:\n        return 0\n\n    if k == 0:\n        return 1\n\n    if k == 1:\n        return n + 1\n\n    even_index_sum = 1\n\n    for i in range(k, n + 1):\n        even_index_sum += binomial_coefficient(i, k)\n\n    return even_index_sum\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Return the binomial coefficient.\n\n    >>> binomial_coefficient(10, 5)\n    120\n    >>> binomial_coefficient(10, 10)\n    1\n    >>> binomial_coefficient(10, 1)\n    10\n    \"\"\"\n    return int(factorial(n) / (factorial(k) * factorial(n - k)))\n\n\ndef factorial(n):\n    \"\"\"\n    Return the factorial of n.\n\n    >>> factorial(5)\n    120\n    >>> factorial(10)\n    3628800\n    >>> factorial(20)\n    2432902008176640000\n    \"\"\"\n    if n == 0:\n        return 1\n\n    return n * factorial(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_of_even_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_of_even_binomial_coefficients(5)\n    34\n    >>> sum_of_even_binomial_coefficients(10)\n    384\n    >>> sum_of_even_binomial_coefficients(15)\n    1287\n    \"\"\"\n    return int(\n        sum(\n            [\n                (n * (n - 1) ** i * (n - 2) ** (n - i - 1))\n                // (i * (i - 1) * (n - i) * (n - i - 1))\n                for i in range(0, n, 2)\n            ]\n        )\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef binomial_coefficient(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef even_index_binomial_coefficient(n):\n    sum = 0\n    for k in range(0, n + 1, 2):\n        sum += binomial_coefficient(n, k)\n    return sum\n\n\ndef test_even_index_binomial_coefficient():\n    assert even_index_binomial_coefficient(6) == 5040\n    assert even_index_binomial_coefficient(10) == 38400\n\n\nif __name__ == \"__main__\":\n    test_even_index_binomial_coefficient()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n):\n    \"\"\"\n    binomial_coefficient(n) --> int\n\n    This function takes a number n and returns the sum of even index binomial coefficients\n\n    Parameters\n    ----------\n    n : int\n        The number to find the sum of even index binomial coefficients\n\n    Returns\n    -------\n    int\n        The sum of even index binomial coefficients\n\n    Examples\n    --------\n    >>> binomial_coefficient(5)\n    5\n    >>> binomial_coefficient(10)\n    136\n    >>> binomial_coefficient(20)\n    471\n    \"\"\"\n    if n < 0:\n        return None\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    return binomial_coefficient(n - 1) + (n - 1) * binomial_coefficient(n - 2)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n, k):\n    \"\"\"\n    Find sum of even index binomial coefficients.\n\n    >>> sum_of_even_index_binomial_coefficients(4, 2)\n    10\n    >>> sum_of_even_index_binomial_coefficients(10, 5)\n    4475\n    >>> sum_of_even_index_binomial_coefficients(20, 10)\n    157741\n    \"\"\"\n    res = 0\n    for i in range(k + 1):\n        res += binomial_coefficient(n, i)\n    return res\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Find binomial coefficient.\n\n    >>> binomial_coefficient(4, 2)\n    6\n    >>> binomial_coefficient(10, 5)\n    252\n    >>> binomial_coefficient(20, 10)\n    184756\n    \"\"\"\n    return factorial(n) // factorial(k) // factorial(n - k)\n\n\ndef factorial(n):\n    \"\"\"\n    Find factorial of n.\n\n    >>> factorial(4)\n    24\n    >>> factorial(10)\n    3628800\n    \"\"\"\n    res = 1\n    for i in range(2, n + 1):\n        res *= i\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_even_index_binomial_coefficients(n):\n    \"\"\"\n    Find the sum of even index binomial coefficients.\n\n    :param n: int\n    :return: int\n\n    >>> sum_even_index_binomial_coefficients(6)\n    21\n    >>> sum_even_index_binomial_coefficients(10)\n    246\n    >>> sum_even_index_binomial_coefficients(15)\n    600\n    >>> sum_even_index_binomial_coefficients(20)\n    1080\n    \"\"\"\n    return sum(\n        factorial(n) // (factorial(i) * factorial(n - i))\n        for i in range(0, n + 1, 2)\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    # This function takes n as an input and returns sum of even index binomial coefficients as output.\n    sum = 0\n    for i in range(0, n + 1):\n        sum += (i * (i - 1) ** (n - 1)) / (n - 2)\n    return sum\n\n\ndef main():\n    n = int(input(\"Enter the value of n: \"))\n    result = sum_of_even_index_binomial_coefficients(n)\n    print(f\"The sum of even index binomial coefficients is {result}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "from itertools import combinations\n\n\ndef sum_even_index_binomial_coefficient(n: int) -> int:\n    \"\"\"\n    >>> sum_even_index_binomial_coefficient(5)\n    10\n    >>> sum_even_index_binomial_coefficient(10)\n    220\n    \"\"\"\n    sum_ = 0\n\n    for i in range(n + 1):\n        for j in range(i + 1):\n            if j % 2 == 0:\n                sum_ += combinations(range(i + 1), j)[0][-1]\n\n    return sum_\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_of_even_index_binomial_coefficient(n: int) -> int:\n    \"\"\"\n    Finds the sum of even index binomial coefficients.\n    >>> sum_of_even_index_binomial_coefficient(6)\n    108\n    >>> sum_of_even_index_binomial_coefficient(10)\n    443\n    >>> sum_of_even_index_binomial_coefficient(12)\n    715\n    \"\"\"\n    return sum(\n        binomial_coefficient(n, i)\n        for i in range(0, n, 2)\n    )\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    Returns binomial coefficient value of n and k.\n    >>> binomial_coefficient(10, 3)\n    120\n    >>> binomial_coefficient(10, 4)\n    210\n    >>> binomial_coefficient(10, 5)\n    252\n    >>> binomial_coefficient(10, 6)\n    210\n    >>> binomial_coefficient(10, 7)\n    120\n    >>> binomial_coefficient(10, 8)\n    24\n    >>> binomial_coefficient(10, 9)\n    10\n    >>> binomial_coefficient(10, 10)\n    1\n    \"\"\"\n    if k > n:\n        return 0\n    if k == n:\n        return 1\n\n    return (\n        binomial_coefficient(n - 1, k) +\n        binomial_coefficient(n - 1, k - 1)\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "from scipy.special import binom\n\n\ndef even_index_binomial_coefficient(n):\n    \"\"\"\n    >>> even_index_binomial_coefficient(3)\n    11\n    >>> even_index_binomial_coefficient(5)\n    31\n    >>> even_index_binomial_coefficient(10)\n    104743\n    \"\"\"\n    return int(binom(n, n // 2))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    Find sum of even index binomial coefficients.\n    :param n:\n    :return:\n    \"\"\"\n    return int((factorial(2 * n)) / (factorial(n) ** 2))\n\n\ndef main():\n    \"\"\"\n    Driver function.\n    :return:\n    \"\"\"\n    n = int(input(\"Enter n: \"))\n    print(sum_of_even_index_binomial_coefficients(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "from itertools import combinations\n\n\ndef sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(4)\n    10\n    >>> sum_of_even_index_binomial_coefficients(5)\n    12\n    >>> sum_of_even_index_binomial_coefficients(6)\n    22\n    \"\"\"\n    return sum(\n        sum(\n            binomial_coefficient(i, j)\n            for j, i in enumerate(combinations(range(1, n + 1), i))\n        )\n        for i in range(1, n, 2)\n    )\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    >>> binomial_coefficient(5, 3)\n    10\n    >>> binomial_coefficient(5, 4)\n    10\n    >>> binomial_coefficient(5, 5)\n    5\n    \"\"\"\n    return (\n        factorial(n)\n        // factorial(k)\n        // factorial(n - k)\n        // factorial(k // 2)\n        // factorial(n - k // 2)\n    )\n\n\ndef factorial(n: int) -> int:\n    \"\"\"\n    >>> factorial(4)\n    24\n    >>> factorial(5)\n    120\n    \"\"\"\n    if n <= 1:\n        return 1\n    return n * factorial(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_binomial_coefficients(n):\n    \"\"\"\n    Calculate sum of even index binomial coefficients.\n\n    >>> sum_of_even_binomial_coefficients(5)\n    108\n    >>> sum_of_even_binomial_coefficients(10)\n    505280\n    >>> sum_of_even_binomial_coefficients(1)\n    1\n    >>> sum_of_even_binomial_coefficients(3)\n    10\n    \"\"\"\n    # Initialize result\n    result = 0\n\n    # Iterate from 0 to n\n    for i in range(n + 1):\n\n        # Calculate binomial coefficient\n        binomial_coefficient = factorial(n) / (factorial(i) * factorial(n - i))\n\n        # Check if i is even\n        if i % 2 == 0:\n            result += binomial_coefficient\n\n    return int(result)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    res = 0\n    for i in range(n + 1):\n        res += binomial_coefficients(i, n - i)\n\n    return res\n\n\ndef binomial_coefficients(n, k):\n    return int(fact(n) / (fact(k) * fact(n - k)))\n\n\ndef fact(n):\n    res = 1\n    for i in range(1, n + 1):\n        res *= i\n\n    return res\n\n\nif __name__ == \"__main__\":\n    print(sum_of_even_index_binomial_coefficients(5))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    Calculates the sum of even index binomial coefficients.\n\n    >>> sum_of_even_index_binomial_coefficients(10)\n    4618\n    >>> sum_of_even_index_binomial_coefficients(1)\n    1\n    >>> sum_of_even_index_binomial_coefficients(3)\n    10\n    \"\"\"\n    result = 0\n    for k in range(n + 1):\n        result += binomial_coefficient(n, k)\n    return result\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Calculates binomial coefficient for two given numbers.\n\n    >>> binomial_coefficient(5, 3)\n    10\n    >>> binomial_coefficient(3, 4)\n    0\n    >>> binomial_coefficient(3, 1)\n    3\n    \"\"\"\n    if k > n - k:\n        k = n - k\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    return sum([1/i * (n-i+1)**n for i in range(1, n+1, 2)])\n\n\nn = 10\nprint(sum_of_even_index_binomial_coefficients(n))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def sum_even_index(n):\n    if n < 0:\n        return None\n    s = 0\n    for i in range(n+1):\n        binomial = (1 << i).bit_length() - 1\n        if i % 2 == 0:\n            s += binomial\n    return s\n\n\nprint(sum_even_index(100))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_index(n: int) -> int:\n    \"\"\"\n    This function returns sum of even index binomial coefficients\n    >>> sum_of_even_index(5)\n    58\n    >>> sum_of_even_index(10)\n    330\n    >>> sum_of_even_index(15)\n    2012\n    >>> sum_of_even_index(20)\n    2466\n    \"\"\"\n    return (factorial(n) * (n + 1)) // (factorial(n - 2) * 2 ** n)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef even_index(n: int, k: int) -> int:\n    \"\"\"\n    This function finds the sum of even index binomial coefficients.\n    >>> even_index(4, 2)\n    10\n    >>> even_index(5, 2)\n    12\n    >>> even_index(6, 2)\n    22\n    \"\"\"\n    return int((factorial(n)) / (factorial(n - k) * factorial(k)))\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def even_index_sum(n):\n    n = int(n)\n    result = 0\n    for i in range(0, n + 1, 2):\n        result += binomial(n, i)\n    return result\n\n\ndef binomial(n, k):\n    if 0 <= k <= n:\n        ntok = 1\n        ktok = 1\n        for t in range(1, min(k, n - k) + 1):\n            ntok *= n\n            ktok *= t\n            n -= 1\n        return ntok // ktok\n    else:\n        return 0\n\n\nif __name__ == \"__main__\":\n    print(even_index_sum(10))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "from itertools import combinations\n\n\ndef sum_of_even_index_binomial_coefficients(n: int, k: int) -> int:\n    \"\"\"\n    This function takes two integers n and k and returns the sum of even\n    index binomial coefficients.\n    >>> sum_of_even_index_binomial_coefficients(4, 2)\n    28\n    >>> sum_of_even_index_binomial_coefficients(5, 2)\n    80\n    >>> sum_of_even_index_binomial_coefficients(10, 5)\n    1551004\n    >>> sum_of_even_index_binomial_coefficients(-5, 2)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be positive\n    >>> sum_of_even_index_binomial_coefficients(5, -2)\n    Traceback (most recent call last):\n        ...\n    ValueError: k must be positive\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if k < 0:\n        raise ValueError(\"k must be positive\")\n\n    combinations_list = list(combinations(range(1, n + 1), k))\n    even_index_sum = 0\n    for i in range(0, len(combinations_list), 2):\n        even_index_sum += sum(combinations_list[i])\n\n    return even_index_sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def sum_even_index_binomial_coefficients(n):\n    return sum([combination(n, i) for i in range(0, n, 2)])\n\ndef combination(n, r):\n    return factorial(n) / (factorial(r) * factorial(n - r))\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\nprint(sum_even_index_binomial_coefficients(10))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_index_binomial_coefficient(n, k):\n    \"\"\"\n    Finds the sum of even index binomial coefficients.\n\n    >>> sum_of_even_index_binomial_coefficient(4, 2)\n    10\n    >>> sum_of_even_index_binomial_coefficient(10, 5)\n    3360\n    >>> sum_of_even_index_binomial_coefficient(20, 10)\n    20529\n    \"\"\"\n    return sum(\n        binomial(n, i)\n        for i in range(0, n, 2)\n        if i <= k\n    )\n\n\ndef binomial(n, k):\n    \"\"\"\n    Finds the binomial coefficient.\n\n    >>> binomial(5, 2)\n    10\n    >>> binomial(10, 5)\n    252\n    >>> binomial(20, 10)\n    184756\n    \"\"\"\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    result = 0\n\n    for i in range(n + 1):\n        result += binomial_coefficient(i, i // 2)\n\n    return result\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    if k < 0:\n        return 0\n\n    if k == 0:\n        return 1\n\n    return binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n\n\nif __name__ == \"__main__\":\n    print(sum_of_even_index_binomial_coefficients(10))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "from itertools import combinations\n\n\ndef sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(5)\n    10\n    >>> sum_of_even_index_binomial_coefficients(10)\n    425\n    \"\"\"\n    nCr = [[1]]\n    for i in range(1, n + 1):\n        nCr.append([1])\n        for j in range(1, i):\n            nCr[i].append(nCr[i - 1][j - 1] + nCr[i - 1][j])\n        nCr[i].append(1)\n\n    return sum(\n        [\n            nCr[i][j]\n            for i, j in zip(\n                range(0, len(nCr), 2), range(1, len(nCr) - 1, 2)\n            )\n        ]\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef even_index(n):\n    return (factorial(n) * (n + 1)) // (2 * (factorial(n - 1)))\n\n\ndef sum_even_index(n):\n    return sum(even_index(i) for i in range(0, n + 1, 2))\n\n\ndef main():\n    n = int(input(\"Enter n: \"))\n    print(f\"Sum of even index binomial coefficients: {sum_even_index(n)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_even_index_binomial_coefficients(10)\n    1140\n    >>> sum_even_index_binomial_coefficients(5)\n    20\n    >>> sum_even_index_binomial_coefficients(4)\n    45\n    \"\"\"\n    return sum(\n        binomial_coefficient(2 * i, i) for i in range(int(n / 2) + 1)\n    )\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    >>> binomial_coefficient(5, 3)\n    10\n    >>> binomial_coefficient(3, 1)\n    3\n    \"\"\"\n    if k > n - k:\n        k = n - k\n    res = 1\n    for i in range(k):\n        res = res * (n - i)\n        res = res // (i + 1)\n\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_even_index_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_even_index_binomial_coefficients(10)\n    114\n    >>> sum_even_index_binomial_coefficients(0)\n    1\n    \"\"\"\n    return sum([factorial(n) // (factorial(i) * factorial(n - i)) for i in range(0, n + 1, 2)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of even index binomial coefficients\n    >>> sum_of_even_index_binomial_coefficients(5)\n    10\n    >>> sum_of_even_index_binomial_coefficients(10)\n    42\n    >>> sum_of_even_index_binomial_coefficients(20)\n    286\n    >>> sum_of_even_index_binomial_coefficients(30)\n    1603\n    \"\"\"\n    return sum(\n        [\n            int(\n                (\n                    binomial_coefficient(2 * i, i)\n                    * binomial_coefficient(2 * i + 1, i)\n                )\n                / (2 ** (2 * i))\n            )\n            for i in range(n // 2 + 1)\n        ]\n    )\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Return binomial coefficient\n    >>> binomial_coefficient(5, 2)\n    10\n    >>> binomial_coefficient(10, 5)\n    252\n    >>> binomial_coefficient(20, 10)\n    184756\n    >>> binomial_coefficient(30, 15)\n    6436930\n    \"\"\"\n    return (\n        math.factorial(n)\n        // math.factorial(k)\n        // math.factorial(n - k)\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_index_binomial_coefficients(n):\n    sum_ = 0\n    for i in range(n + 1):\n        sum_ += factorial(n) / (factorial(i) * factorial(n - i))\n    return sum_\n\n\ndef test_sum_of_even_index_binomial_coefficients():\n    \"\"\"\n    >>> test_sum_of_even_index_binomial_coefficients()\n    \"\"\"\n    assert sum_of_even_index_binomial_coefficients(5) == 108\n    assert sum_of_even_index_binomial_coefficients(10) == 495\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    Calculates sum of even index binomial coefficients.\n\n    >>> sum_of_even_index_binomial_coefficients(6)\n    108\n    >>> sum_of_even_index_binomial_coefficients(10)\n    510\n    >>> sum_of_even_index_binomial_coefficients(15)\n    2608\n    \"\"\"\n    sum = 0\n    for i in range(n + 1):\n        if i % 2 == 0:\n            sum += binomial_coefficient(n, i)\n    return sum\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Calculates binomial coefficient.\n\n    >>> binomial_coefficient(6, 4)\n    15\n    >>> binomial_coefficient(10, 6)\n    210\n    >>> binomial_coefficient(15, 8)\n    1260\n    \"\"\"\n    if k > n - k:\n        k = n - k\n    res = 1\n    for i in range(k):\n        res = res * (n - i)\n        res = res // (i + 1)\n    return res\n\n\ndef main():\n    \"\"\"\n    Driver function\n    \"\"\"\n    n = int(input(\"Enter n: \"))\n    print(\"Sum of even index binomial coefficients is:\")\n    print(sum_of_even_index_binomial_coefficients(n))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()\n    main()"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    :param n: int - Nth number.\n    :return: int - Sum of even index binomial coefficients.\n    >>> sum_of_even_index_binomial_coefficients(10)\n    108\n    >>> sum_of_even_index_binomial_coefficients(5)\n    20\n    >>> sum_of_even_index_binomial_coefficients(3)\n    6\n    \"\"\"\n    result = 0\n\n    for i in range(n + 1):\n        result += binomial(n, i)\n\n    return result\n\n\ndef binomial(n: int, k: int) -> int:\n    \"\"\"\n    :param n: int - Nth number.\n    :param k: int - Kth number.\n    :return: int - Binomial coefficient.\n    \"\"\"\n    if k < 0 or n < k:\n        return 0\n\n    if k == 0:\n        return 1\n\n    return binomial(n - 1, k - 1) + binomial(n - 1, k)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_even_index_binomial_coefficients(10)\n    100\n    >>> sum_even_index_binomial_coefficients(1)\n    1\n    >>> sum_even_index_binomial_coefficients(2)\n    2\n    >>> sum_even_index_binomial_coefficients(3)\n    8\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be >= 0.\")\n\n    if n == 0:\n        return 0\n\n    return (n + 1) * (n + 2) // 4\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(6)\n    25\n    >>> sum_of_even_index_binomial_coefficients(10)\n    300\n    \"\"\"\n    sum_of_even_index = 0\n\n    for i in range(n + 1):\n        sum_of_even_index += (\n            binomial_coefficient(n, i)\n            if (i % 2 == 0 or i == n)\n            else 0\n        )\n\n    return sum_of_even_index\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    >>> binomial_coefficient(6, 1)\n    6\n    >>> binomial_coefficient(6, 2)\n    15\n    \"\"\"\n    return (\n        factorial(n)\n        // (factorial(k) * factorial(n - k))\n        if (k <= n)\n        else 0\n    )\n\n\ndef factorial(n: int) -> int:\n    \"\"\"\n    >>> factorial(6)\n    720\n    >>> factorial(10)\n    3628800\n    \"\"\"\n    return 1 if n == 0 else n * factorial(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "def sum_even_index_binomial_coefficients(n, k):\n    \"\"\"\n    This function will calculate the sum of the even index binomial coefficients.\n    \"\"\"\n    sum = 0\n    for i in range(0, n + 1):\n        for j in range(0, k + 1):\n            if i == 0 and j == 0:\n                sum = 0\n            elif i == 0 or j == 0:\n                sum = sum + 1\n            else:\n                sum = sum + (binomial_coefficient(i, j) * pow(2, i + j))\n    return sum\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    This function will calculate the binomial coefficient.\n    \"\"\"\n    return (math.factorial(n) / (math.factorial(k) * math.factorial(n - k)))"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(10)\n    1005\n    >>> sum_of_even_index_binomial_coefficients(20)\n    1204406836\n    \"\"\"\n    res = 0\n    for i in range(n + 1):\n        res += binomial_coefficient(i, i // 2)\n    return res\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    >>> binomial_coefficient(5, 2)\n    10\n    >>> binomial_coefficient(3, 1)\n    3\n    >>> binomial_coefficient(3, 0)\n    1\n    \"\"\"\n    if k == 0:\n        return 1\n    return binomial_coefficient(n - 1, k - 1) * n // k\n\n\ndef binomial_coefficient_dp(n, k):\n    \"\"\"\n    >>> binomial_coefficient_dp(5, 2)\n    10\n    >>> binomial_coefficient_dp(3, 1)\n    3\n    >>> binomial_coefficient_dp(3, 0)\n    1\n    \"\"\"\n    dp = [0] * (k + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        for j in range(min(i, k) + 1):\n            dp[j] += dp[j - 1]\n    return dp[k]\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 40,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    :param n: number of rows\n    :return: sum of even index binomial coefficients\n    \"\"\"\n    return sum([int(n) for n in binomial_coefficients(n) if int(n.split()[0]) % 2 == 0])\n\n\ndef binomial_coefficients(n):\n    \"\"\"\n    :param n: number of rows\n    :return: binomial coefficients\n    \"\"\"\n    binomial_coefficients = []\n    for i in range(n+1):\n        for j in range(i+1):\n            binomial_coefficients.append(str(math.factorial(i)) + \"/\" + str(math.factorial(i - j)) + \"*\" + str(math.factorial(j)))\n\n    return binomial_coefficients\n\n\nimport math"
    },
    {
      "rank": 41,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(4)\n    10\n    >>> sum_of_even_index_binomial_coefficients(5)\n    20\n    >>> sum_of_even_index_binomial_coefficients(6)\n    42\n    >>> sum_of_even_index_binomial_coefficients(7)\n    76\n    \"\"\"\n    res = 0\n    for i in range(0, n + 1, 2):\n        res += binomial_coefficient(n, i)\n    return res\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    >>> binomial_coefficient(4, 2)\n    6\n    >>> binomial_coefficient(5, 3)\n    10\n    >>> binomial_coefficient(6, 4)\n    15\n    >>> binomial_coefficient(7, 5)\n    21\n    \"\"\"\n    if k == 0 or k == n:\n        return 1\n    else:\n        return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 42,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(4)\n    10\n    >>> sum_of_even_index_binomial_coefficients(10)\n    384\n    \"\"\"\n    return sum(\n        factorial(n) // (factorial(i) * factorial(n - i))\n        for i in range(0, n + 1, 2)\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 43,
      "score": 10.0,
      "candidate": "from itertools import combinations\n\n\ndef sum_even_index_binomial_coefficients(n):\n    \"\"\"\n    Finds sum of even index binomial coefficients\n    :param n: input number\n    :return: sum of even index binomial coefficients\n    \"\"\"\n    return sum(\n        sum(int(i) for i in binomial_coefficient)\n        for index, binomial_coefficient in enumerate(combinations(range(n + 1), 2))\n        if index % 2 == 0\n    )\n\n\nif __name__ == \"__main__\":\n    print(sum_even_index_binomial_coefficients(5))"
    },
    {
      "rank": 44,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Return the sum of even index binomial coefficients.\n    >>> sum_of_even_index_binomial_coefficients(10)\n    5050\n    >>> sum_of_even_index_binomial_coefficients(5)\n    10\n    >>> sum_of_even_index_binomial_coefficients(3)\n    3\n    >>> sum_of_even_index_binomial_coefficients(1)\n    1\n    \"\"\"\n    result = 0\n\n    for i in range(n + 1):\n        result += binomial(n, i)\n\n    return result\n\n\ndef binomial(n: int, k: int) -> int:\n    \"\"\"\n    Return binomial coefficient\n    >>> binomial(10, 5)\n    252\n    >>> binomial(5, 3)\n    10\n    >>> binomial(1, 1)\n    1\n    \"\"\"\n    return factorial(n) // (factorial(k) * factorial(n - k))\n\n\ndef factorial(n: int) -> int:\n    \"\"\"\n    Return the factorial of n\n    >>> factorial(10)\n    3628800\n    >>> factorial(5)\n    120\n    >>> factorial(1)\n    1\n    \"\"\"\n    result = 1\n\n    for i in range(1, n + 1):\n        result *= i\n\n    return result\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 45,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficients(5)\n    42\n    >>> sum_of_even_index_binomial_coefficients(6)\n    80\n    >>> sum_of_even_index_binomial_coefficients(7)\n    120\n    \"\"\"\n    res = 0\n\n    for i in range(n + 1):\n        res += binomial_coefficient(i, n - i)\n\n    return res\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    >>> binomial_coefficient(5,3)\n    10\n    >>> binomial_coefficient(7,4)\n    35\n    \"\"\"\n    if k < 0:\n        return 0\n    if n < k:\n        return 0\n    if n == k:\n        return 1\n    return binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 46,
      "score": 10.0,
      "candidate": "def sum_even_index(n: int) -> int:\n    \"\"\"\n    >>> sum_even_index(3)\n    1\n    >>> sum_even_index(5)\n    10\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n should be greater than 0\")\n\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    return sum_even_index(n - 1) + n * sum_even_index(n - 2)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    if n < k:\n        return 0\n    if k == 0:\n        return 1\n    if n == k:\n        return 1\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\ndef sum_of_even_index_binomial_coefficient(n):\n    return binomial_coefficient(2 * n, n)\n\n\ndef main():\n    print(sum_of_even_index_binomial_coefficient(10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 48,
      "score": 10.0,
      "candidate": "def sum_of_even_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_of_even_binomial_coefficients(4)\n    24\n    >>> sum_of_even_binomial_coefficients(5)\n    55\n    >>> sum_of_even_binomial_coefficients(10)\n    825\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n\n    result = 1\n    for i in range(1, n + 1):\n        result *= n + 1 - i\n        result //= i\n        if i % 2 == 0:\n            result += 1\n\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\nimport math\nfrom typing import Optional\n\n\ndef sum_even_index_binomial_coefficient(n: int) -> Optional[int]:\n    \"\"\"\n    >>> sum_even_index_binomial_coefficient(1)\n    1\n    >>> sum_even_index_binomial_coefficient(2)\n    2\n    >>> sum_even_index_binomial_coefficient(3)\n    4\n    >>> sum_even_index_binomial_coefficient(4)\n    10\n    >>> sum_even_index_binomial_coefficient(5)\n    22\n    >>> sum_even_index_binomial_coefficient(6)\n    45\n    \"\"\"\n    if n < 0:\n        return None\n\n    res: int = 0\n    for i in range(0, n):\n        binomial_coefficient: int = math.factorial(n) // (\n            math.factorial(i) * math.factorial(n - i)\n        )\n        if i % 2 == 0:\n            res += binomial_coefficient\n\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 50,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef sum_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n should be greater than 0\")\n\n    res = 0\n\n    for i in range(n + 1):\n        if i % 2 == 0:\n            res += factorial(n) / (factorial(i) * factorial(n - i))\n\n    return res\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter n: \").strip())\n    print(sum_even_index_binomial_coefficients(n))"
    },
    {
      "rank": 51,
      "score": 10.0,
      "candidate": "def sum_of_even_index_binomial_coefficient(n):\n    result = 0\n    for i in range(0, n + 1):\n        result += binomial_coefficient(i, n - i)\n    return result\n\n\ndef binomial_coefficient(n, k):\n    if k == 0 or n == k:\n        return 1\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\ndef test_sum_of_even_index_binomial_coefficient():\n    assert sum_of_even_index_binomial_coefficient(5) == 20\n    assert sum_of_even_index_binomial_coefficient(10) == 42\n\n\nif __name__ == \"__main__\":\n    test_sum_of_even_index_binomial_coefficient()"
    },
    {
      "rank": 52,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef even_index(n: int, k: int) -> int:\n    \"\"\"\n    This function finds the sum of even index binomial coefficients.\n    >>> even_index(5, 3)\n    25\n    >>> even_index(10, 6)\n    720\n    >>> even_index(20, 10)\n    114400\n    \"\"\"\n    return factorial(n) // (factorial(n - k) * factorial(k))\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 53,
      "score": 9.0,
      "candidate": "def sum_of_even_index(n):\n    if n < 1:\n        return 0\n\n    result = 0\n\n    for i in range(n):\n        if i % 2 == 0:\n            result += binomial(n, i)\n\n    return result"
    },
    {
      "rank": 54,
      "score": 9.0,
      "candidate": "from math import factorial\n\ndef sum_even_index(n):\n    \"\"\"\n    Returns the sum of even index binomial coefficients.\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be a non-negative integer.\")\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return sum([factorial(n) / (factorial(2*i) * factorial(n-2*i)) for i in range(n//2)])"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    This function takes n as an argument and returns the sum of even index binomial coefficients.\n    \"\"\"\n    return int((1 / 2) * n * (n + 1) * (2 * n + 1) / 6)"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def sum_of_even_index_binomial_coefficient(n, k):\n    # Calculate the binomial coefficient\n    def binomial_coefficient(n, k):\n        if k < 0 or n < 0:\n            return 1\n        if k == 0:\n            return 1\n        if k == n:\n            return 1\n        return binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n\n    # Calculate sum of even index binomial coefficients\n    def sum_of_even_index_binomial_coefficient(n, k):\n        if k < 0 or n < 0:\n            return 1\n        if k == 0:\n            return 1\n        if k == n:\n            return 1\n        return sum_of_even_index_binomial_coefficient(n - 1, k) + 2 * sum_of_even_index_binomial_coefficient(n - 1, k - 1)\n\n    return sum_of_even_index_binomial_coefficient(n, k) * binomial_coefficient(n, k)\n\n\nif __name__ == \"__main__\":\n    print(sum_of_even_index_binomial_coefficient(5, 2))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "from math import factorial\n\n\ndef sum_even_index_binomial_coefficients(n):\n    \"\"\"\n    Calculates the sum of even index binomial coefficients.\n    \"\"\"\n    return sum(factorial(n) / (factorial(2 * i) * factorial(n - 2 * i))\n               for i in range(n // 2 + 1))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "from math import factorial\n\n\ndef binom(n, k):\n    \"\"\"Return binomial coefficient 'n over k'.\"\"\"\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef even_index_binom(n):\n    \"\"\"Return sum of even index binomial coefficients.\"\"\"\n    result = 0\n    for k in range(0, n + 1, 2):\n        result += binom(n, k)\n    return result\n\n\ndef test_even_index_binom():\n    \"\"\"Test even_index_binom.\"\"\"\n    assert even_index_binom(1) == 1\n    assert even_index_binom(2) == 1\n    assert even_index_binom(3) == 1 + 3\n    assert even_index_binom(4) == 1 + 3 + 6\n    assert even_index_binom(5) == 1 + 3 + 6 + 10\n    assert even_index_binom(6) == 1 + 3 + 6 + 10 + 15"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def binomial_sum(n):\n    \"\"\"\n    >>> binomial_sum(5)\n    20\n    >>> binomial_sum(6)\n    35\n    >>> binomial_sum(10)\n    231\n    \"\"\"\n    binomial_sum = 0\n\n    for i in range(n+1):\n        binomial_sum += (binomial(n, i) ** 2)\n\n    return binomial_sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def sum_of_even_index(n):\n    sum_of_even_index_binomial_coefficients = 0\n\n    for i in range(n + 1):\n        for j in range(n - i + 1, n + 1):\n            if i == 0 or j == n:\n                sum_of_even_index_binomial_coefficients += 1\n            elif i % 2 == 0 and j % 2 == 0:\n                sum_of_even_index_binomial_coefficients += 1\n\n    return sum_of_even_index_binomial_coefficients\n\n\nprint(sum_of_even_index(5))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def sum_even_index_binomial_coefficients(n):\n    return int(((n * (n + 1) / 2) ** 2) / (4 * (n + 1) * n))\n\nprint(sum_even_index_binomial_coefficients(10))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def sum_of_even_index_binomial_coefficient(n):\n    if n < 0:\n        raise ValueError(\"n cannot be negative\")\n    elif n == 0:\n        return 0\n    return n * (n + 1) // 2"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "from scipy.special import binom\n\n\ndef sum_even_index(n: int):\n    sum_ = 0\n    for i in range(n+1):\n        if i % 2 == 0:\n            sum_ += binom(2*n, i)\n    return sum_\n\n\nprint(sum_even_index(10))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def binomial_sum(n, k):\n    return (n + 1) * n // 2 - (k + 1) * k // 2\n\n\nn = 10\nk = 4\nprint(binomial_sum(n, k))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def sum_even_index_binomial_coefficients(n):\n    if n <= 0:\n        return 0\n    result = 1\n    for i in range(n):\n        if i % 2 == 0:\n            result *= (n - i) / (i + 1)\n    return int(result)"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def even_index_binomial_coefficient(n):\n    sum = 0\n    for i in range(n + 1):\n        sum += (1 / (i + 1)) * (1 / (n - i + 1))\n    return sum\n\n\nprint(even_index_binomial_coefficient(10))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    result = 1\n    for i in range(1, n + 1):\n        result = result * (n + i) // i\n\n    return result"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def binomial_coefficients(n):\n    \"\"\"\n    Returns the sum of even index binomial coefficients.\n    \"\"\"\n    res = 1\n    for i in range(1, n + 1):\n        res *= (n - i + 1) // i\n    return res"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_binomial_coefficients(n):\n    return sum([factorial(n) / (factorial(i) * factorial(n - i)) for i in range(0, n, 2)])\n\n\nprint(sum_of_even_binomial_coefficients(6))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "from scipy.special import binom\n\n\ndef sum_even_index(n):\n    if n < 0:\n        raise ValueError(\"n should be greater than or equal to 0\")\n    if n == 0:\n        return 1\n    res = 0\n    for i in range(n + 1):\n        if i % 2 == 0:\n            res += binom(n, i)\n    return res\n\n\nif __name__ == \"__main__\":\n    print(sum_even_index(5))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def sum_even_index(n):\n    s = 0\n    for i in range(1, n+1):\n        s += comb(i, i//2+1)\n    return s\n\ndef comb(n, r):\n    if n == r or r == 1:\n        return 1\n    return comb(n-1, r-1) + comb(n-1, r)\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    ans = sum_even_index(n)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "from math import factorial\ndef sum_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of even index binomial coefficients\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    sum_even_binomial = 0\n    for i in range(0, n + 1):\n        binomial = factorial(n) / (factorial(i) * factorial(n - i))\n        if i % 2 == 0:\n            sum_even_binomial += binomial\n    return sum_even_binomial"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def sum_even_index(n):\n    \"\"\"\n    Find sum of even index binomial coefficients.\n    \"\"\"\n\n    sum_ = 0\n    for i in range(n + 1):\n        sum_ += (1 / (i + 1))\n\n    return sum_"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def sum_of_even_index(n):\n    result = 0\n    for i in range(1, n + 1):\n        coef = (1/2)**i\n        result += coef\n\n    return result\n\n\nprint(sum_of_even_index(10))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "from math import factorial\n\n\ndef sum_even_binomial_coefficients(n):\n    \"\"\"\n    Find sum of even index binomial coefficients.\n    :param n: Number of elements in the sequence.\n    :return: Sum of even index binomial coefficients.\n    \"\"\"\n    return factorial(2 * n) // (factorial(n) * factorial(n + 1))"
    },
    {
      "rank": 76,
      "score": 1.0,
      "candidate": "def sum_of_even_index(n, k):\n    return int(n * (n - 1) * (2 * n - 1) * (2 * n + 1) / 32)\n\n\nprint(sum_of_even_index(4, 2))"
    },
    {
      "rank": 77,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    return (1 << n) - (1 << (n - 1))\n\n\nprint(sum_of_even_index_binomial_coefficients(4))"
    },
    {
      "rank": 78,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    if n < 0:\n        raise ValueError(\"n should be greater than or equal to 0\")\n\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    return sum_of_even_index_binomial_coefficients(n - 1) + (2 * n - 1) * sum_of_even_index_binomial_coefficients(\n        n - 2\n    )\n\n\nif __name__ == \"__main__\":\n    print(sum_of_even_index_binomial_coefficients(5))"
    },
    {
      "rank": 79,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n, k):\n    sum = 0\n    for i in range(k+1):\n        sum += binomial_coefficient(n, i)\n    return sum\n\n\ndef binomial_coefficient(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef factorial(n):\n    if n == 1:\n        return 1\n    return n * factorial(n - 1)\n\n\nif __name__ == \"__main__\":\n    n, k = map(int, input().split())\n    print(sum_of_even_index_binomial_coefficients(n, k))"
    },
    {
      "rank": 80,
      "score": 1.0,
      "candidate": "from math import factorial\n\n\ndef sum_even_binomial_coefficient(n):\n    return sum([factorial(n) / (factorial(i) * factorial(n - i)) for i in range(0, n + 1, 2)])\n\n\ndef test_sum_even_binomial_coefficient():\n    assert sum_even_binomial_coefficient(4) == 5\n    assert sum_even_binomial_coefficient(10) == 106\n\n\nif __name__ == \"__main__\":\n    test_sum_even_binomial_coefficient()"
    },
    {
      "rank": 81,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    return int((n * (n + 1)) / 2)\n\n\nprint(sum_of_even_index_binomial_coefficients(4))\nprint(sum_of_even_index_binomial_coefficients(5))"
    },
    {
      "rank": 82,
      "score": 1.0,
      "candidate": "from itertools import combinations\n\n\ndef sum_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    return sum(\n        binomial_coefficient(i, j)\n        for i, j in enumerate(combinations(range(n), 2))\n        if i % 2 == 0\n    )\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    if k == 0:\n        return 1\n    return (\n        binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n    )\n\n\nif __name__ == \"__main__\":\n    assert sum_even_index_binomial_coefficients(5) == 10"
    },
    {
      "rank": 83,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be >= 0\")\n\n    res = 0\n    for i in range(n + 1):\n        if i % 2 == 0:\n            res += binomial(n, i)\n    return res\n\n\ndef binomial(n: int, k: int) -> int:\n    if k < 0 or k > n:\n        return 0\n\n    if k == 0 or k == n:\n        return 1\n\n    return binomial(n - 1, k - 1) + binomial(n - 1, k)\n\n\nif __name__ == \"__main__\":\n    assert sum_of_even_index_binomial_coefficients(10) == 1023"
    },
    {
      "rank": 84,
      "score": 1.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_binomial_coefficient(n, k):\n    \"\"\"\n    >>> sum_of_even_binomial_coefficient(5, 2)\n    10\n    >>> sum_of_even_binomial_coefficient(6, 3)\n    55\n    \"\"\"\n    return factorial(n) // factorial(n - k) // factorial(k) // (factorial(n - 2 * k))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "from itertools import combinations\nfrom math import factorial\n\n\ndef sum_of_even_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    >>> sum_of_even_binomial_coefficients(4)\n    20\n    >>> sum_of_even_binomial_coefficients(5)\n    56\n    >>> sum_of_even_binomial_coefficients(6)\n    112\n    \"\"\"\n    return sum(\n        factorial(k) * factorial(n - k)\n        for k in range(0, n, 2)\n        if (c := combinations(range(1, n + 1), k))\n        and len(list(c)) % 2\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_of_even_binomial_coefficient(n: int) -> int:\n    \"\"\"\n    Calculate sum of even binomial coefficients\n    >>> sum_of_even_binomial_coefficient(5)\n    40\n    >>> sum_of_even_binomial_coefficient(6)\n    70\n    >>> sum_of_even_binomial_coefficient(7)\n    96\n    \"\"\"\n    sum_of_even_binomial_coefficient = 0\n    for i in range(n + 1):\n        sum_of_even_binomial_coefficient += (\n            (i * (i + 1)) ** 2\n            if (i % 2 == 0)\n            else 0\n        )\n\n    return sum_of_even_binomial_coefficient\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    res = 0\n\n    for i in range(n + 1):\n        if i % 2 == 0:\n            res += binomial_coefficient(n, i)\n\n    return res\n\n\ndef binomial_coefficient(n: int, i: int) -> int:\n    \"\"\"\n    Time Complexity: O(n)\n    \"\"\"\n    if i == 0:\n        return 1\n\n    return binomial_coefficient(n - 1, i - 1) * n // i\n\n\nif __name__ == \"__main__\":\n    assert sum_of_even_index_binomial_coefficients(10) == 987"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "def sum_even_index(n):\n    if n == 0:\n        return 0\n    res = 1\n    for i in range(1, n + 1):\n        res = (res * (2 * i + 1)) / (i + 1)\n    return int(res)\n\n\nprint(sum_even_index(5))"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    \"\"\"\n    :param n: n is a non-negative integer\n    :return: an integer sum of even index binomial coefficients\n    \"\"\"\n    if n < 0:\n        return 0\n    binomial_coefficients = [1]\n    for i in range(1, n + 1):\n        binomial_coefficients.append(binomial_coefficients[i - 1] * (n - i + 1) // i)\n    return sum(binomial_coefficients[1::2])\n\n\nn = 10\nprint(sum_of_even_index_binomial_coefficients(n))"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficients(n):\n    if n == 0:\n        return 0\n    ans = 1\n    for i in range(1, n):\n        ans = ans * (i + 1) // i\n    return ans\n\n\nprint(sum_of_even_index_binomial_coefficients(5))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficient(n: int) -> int:\n    \"\"\"\n    >>> sum_of_even_index_binomial_coefficient(1)\n    1\n    >>> sum_of_even_index_binomial_coefficient(2)\n    1\n    >>> sum_of_even_index_binomial_coefficient(3)\n    1\n    >>> sum_of_even_index_binomial_coefficient(4)\n    3\n    >>> sum_of_even_index_binomial_coefficient(5)\n    8\n    >>> sum_of_even_index_binomial_coefficient(6)\n    13\n    \"\"\"\n    total = 0\n    for i in range(n + 1):\n        total += binomial_coefficient(i, i // 2)\n    return total\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    >>> binomial_coefficient(1, 0)\n    1\n    >>> binomial_coefficient(1, 1)\n    1\n    >>> binomial_coefficient(2, 0)\n    1\n    >>> binomial_coefficient(2, 1)\n    2\n    >>> binomial_coefficient(2, 2)\n    1\n    >>> binomial_coefficient(3, 0)\n    1\n    >>> binomial_coefficient(3, 1)\n    3\n    >>> binomial_coefficient(3, 2)\n    3\n    >>> binomial_coefficient(3, 3)\n    1\n    >>> binomial_coefficient(4, 0)\n    1\n    >>> binomial_coefficient(4, 1)\n    4\n    >>> binomial_coefficient(4, 2)\n    6\n    >>> binomial_coefficient(4, 3)\n    4\n    >>> binomial_coefficient(4, 4)\n    1\n    >>> binomial_coefficient(5, 0)\n    1\n    >>> binomial_coefficient(5, 1)\n    5\n    >>> binomial_coefficient(5, 2)"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "from scipy.special import binom\n\n\ndef sum_even_index_binomial_coefficients(n):\n    \"\"\"\n    >>> sum_even_index_binomial_coefficients(5)\n    10\n    >>> sum_even_index_binomial_coefficients(10)\n    288\n    >>> sum_even_index_binomial_coefficients(15)\n    1255\n    >>> sum_even_index_binomial_coefficients(20)\n    3439\n    \"\"\"\n    total = 0\n\n    for i in range(n + 1):\n        if i % 2 == 0:\n            total += binom(n, i)\n\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def sum_of_even_index_binomial_coefficient(n):\n    \"\"\"\n    Calculate sum of even index binomial coefficients\n    :param n: number\n    :return: sum of even index binomial coefficients\n    >>> sum_of_even_index_binomial_coefficient(5)\n    10\n    >>> sum_of_even_index_binomial_coefficient(6)\n    22\n    \"\"\"\n    return int((n * (n + 1) * (2 * n + 1)) / 6)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "from itertools import combinations\nfrom math import factorial\n\n\ndef sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    Time Complexity: O(n*2^n)\n    Space Complexity: O(n*2^n)\n    \"\"\"\n\n    def binomial_coefficient(n: int, k: int) -> int:\n        return factorial(n) // (factorial(k) * factorial(n - k))\n\n    result = 0\n\n    for i in range(n + 1):\n        for comb in combinations(range(n + 1), i):\n            if i % 2 == 0:\n                result += binomial_coefficient(n, len(comb))\n\n    return result\n\n\ndef main():\n    print(sum_of_even_index_binomial_coefficients(5))\n    print(sum_of_even_index_binomial_coefficients(10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "from __future__ import annotations\n\n\ndef sum_of_even_index_binomial_coefficients(n: int) -> int:\n    \"\"\"\n    This function returns the sum of even index binomial coefficients.\n    >>> sum_of_even_index_binomial_coefficients(5)\n    10\n    >>> sum_of_even_index_binomial_coefficients(10)\n    42\n    >>> sum_of_even_index_binomial_coefficients(1)\n    1\n    >>> sum_of_even_index_binomial_coefficients(3)\n    5\n    \"\"\"\n    result: int = 0\n\n    for i in range(n + 1):\n        if i % 2 == 0:\n            result += binomial_coefficient(i, n - i)\n\n    return result\n\n\ndef binomial_coefficient(n: int, k: int) -> int:\n    \"\"\"\n    This function returns the value of binomial coefficient.\n    >>> binomial_coefficient(5, 2)\n    10\n    >>> binomial_coefficient(3, 1)\n    3\n    >>> binomial_coefficient(5, 3)\n    10\n    \"\"\"\n    if k > n:\n        return 0\n    if k == 0:\n        return 1\n\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def sum_even_index_binomial_coefficients(n):\n    return sum([int(i) for i in list(str(binomial_coefficient(n, 2))) if i % 2 == 0])\n\n\ndef binomial_coefficient(n, k):\n    if k > n:\n        return 0\n    if k == n or k == 0:\n        return 1\n\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def sum_even_index_binomial_coefficient(n):\n    \"\"\"\n    :param n: int\n    :return: int\n    \"\"\"\n    result = 0\n\n    for i in range(0, n + 1):\n        result += pow(2, i) * binomial_coefficient(n, i)\n\n    return result\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    :param n: int\n    :param k: int\n    :return: int\n    \"\"\"\n    if k < 0 or k > n:\n        return 0\n\n    if k == 0 or k == n:\n        return 1\n\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n\ndef main():\n    n = 5\n    sum_even_index_binomial_coefficient(n)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "from math import factorial\n\n\ndef sum_of_even_index(n: int, k: int) -> int:\n    \"\"\"\n    The sum of even index binomial coefficients is equal to the sum of all odd index binomial coefficients.\n    The sum of all odd index binomial coefficients is equal to the sum of all binomial coefficients.\n    \"\"\"\n    total_sum = 0\n    for i in range(n + 1):\n        total_sum += (factorial(n) / (factorial(i) * factorial(n - i)))\n    return total_sum\n\n\nif __name__ == \"__main__\":\n    n, k = map(int, input().split())\n    print(sum_of_even_index(n, k))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def even_index_binomial_coefficient_sum(n):\n    return n * (n + 1) * (2 * n + 1) // 6\n\n\ndef test_even_index_binomial_coefficient_sum():\n    assert even_index_binomial_coefficient_sum(1) == 1\n    assert even_index_binomial_coefficient_sum(2) == 1\n    assert even_index_binomial_coefficient_sum(3) == 1\n    assert even_index_binomial_coefficient_sum(4) == 4\n    assert even_index_binomial_coefficient_sum(5) == 4\n    assert even_index_binomial_coefficient_sum(6) == 9\n    assert even_index_binomial_coefficient_sum(7) == 9\n    assert even_index_binomial_coefficient_sum(8) == 16\n    assert even_index_binomial_coefficient_sum(9) == 16\n    assert even_index_binomial_coefficient_sum(10) == 25\n    assert even_index_binomial_coefficient_sum(11) == 25\n    assert even_index_binomial_coefficient_sum(12) == 36\n    assert even_index_binomial_coefficient_sum(13) == 36\n    assert even_index_binomial_coefficient_sum(14) == 49\n    assert even_index_binomial_coefficient_sum(15) == 49\n    assert even_index_binomial_coefficient_sum(16) == 64\n    assert even_index_binomial_coefficient_sum(17) == 64\n    assert even_index_binomial_coefficient_sum(18) == 81\n    assert even_index_binomial_coefficient_sum(19) == 81\n    assert even_index_binomial_coefficient_sum(20) == 96"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def sum_of_even_index(n):\n    # First term\n    sum = 1\n\n    # Second term\n    sum += 1\n\n    # Remaining terms\n    for i in range(3, n + 1):\n        sum += (4 * (i ** 2) - 6 * i + 3)\n\n    return sum\n\n\nprint(sum_of_even_index(10))"
    }
  ]
}