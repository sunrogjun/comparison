{
  "timestamp": "2025-09-14T22:45:35.950756",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 61,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def difference_of_two_squares(number: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(5)\n    False\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(17)\n    True\n    >>> difference_of_two_squares(25)\n    True\n    >>> difference_of_two_squares(26)\n    False\n    >>> difference_of_two_squares(27)\n    False\n    >>> difference_of_two_squares(49)\n    True\n    >>> difference_of_two_squares(1)\n    False\n    >>> difference_of_two_squares(0)\n    False\n    >>> difference_of_two_squares(-1)\n    False\n    >>> difference_of_two_squares(-2)\n    False\n    >>> difference_of_two_squares(-3)\n    False\n    >>> difference_of_two_squares(-4)\n    False\n    >>> difference_of_two_squares(-5)\n    False\n    >>> difference_of_two_squares(-6)\n    False\n    >>> difference_of_two_squares(-7)\n    False\n    >>> difference_of_two_squares(-8)\n    False\n    >>> difference_of_two_squares(-9)\n    False\n    >>> difference_of_two_squares(-10)\n    False\n    >>> difference_of_two_squares(-11)\n    False\n    >>> difference_of_two_squares(-12)\n    True\n    >>> difference_of_two_squares(-13)\n    True\n    >>> difference_of_two_squares(-14)\n    False\n    >>> difference_of_two_squares(-15)\n    False\n    >>> difference_of_two_squares(-16)\n    False\n    >>> difference_of_two_squares(-17)\n    False\n    >>> difference_of_two_squares(-18)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "from math import sqrt\n\n\ndef is_diff_square(number: int) -> bool:\n    \"\"\"\n    Checks if the number can be represented as difference of two squares or not.\n    >>> is_diff_square(25)\n    True\n    >>> is_diff_square(3)\n    False\n    >>> is_diff_square(121)\n    True\n    >>> is_diff_square(576)\n    False\n    >>> is_diff_square(100)\n    False\n    >>> is_diff_square(1296)\n    True\n    \"\"\"\n    # A number can be written as difference of two squares only if it is of the form 4*n+1 or 4*n-1\n    if number % 4 == 1:\n        return False\n\n    if number % 4 == 2:\n        number += 1\n\n    # Let us check if there is a Pythagorean triplet whose sum is equal to the given number\n    for i in range(1, int(sqrt(number)) + 1):\n        if number - i * i > 0:\n            j = sqrt(number - i * i)\n            if j * j + i * i == number:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def can_represent(number: int) -> bool:\n    \"\"\"\n    Check whether the given number can be represented as difference of two squares or not.\n    >>> can_represent(1)\n    True\n    >>> can_represent(2)\n    True\n    >>> can_represent(3)\n    False\n    >>> can_represent(4)\n    True\n    >>> can_represent(5)\n    True\n    >>> can_represent(6)\n    True\n    >>> can_represent(7)\n    False\n    >>> can_represent(8)\n    True\n    >>> can_represent(10)\n    True\n    >>> can_represent(11)\n    False\n    >>> can_represent(12)\n    True\n    >>> can_represent(13)\n    False\n    >>> can_represent(14)\n    True\n    >>> can_represent(15)\n    True\n    >>> can_represent(16)\n    True\n    >>> can_represent(17)\n    False\n    >>> can_represent(18)\n    True\n    >>> can_represent(19)\n    False\n    >>> can_represent(20)\n    True\n    >>> can_represent(21)\n    False\n    >>> can_represent(22)\n    True\n    >>> can_represent(23)\n    False\n    >>> can_represent(24)\n    True\n    >>> can_represent(25)\n    True\n    >>> can_represent(26)\n    True\n    >>> can_represent(27)\n    False\n    >>> can_represent(28)\n    True\n    >>> can_represent(29)\n    False\n    >>> can_represent(30)\n    True\n    >>> can_represent(31)\n    False\n    >>> can_represent(32)\n    True\n    >>> can_represent(33)\n    False\n    >>> can_represent(34)\n    True\n    >>> can_represent(35)\n    False\n    >>> can_represent("
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(25)\n    True\n    >>> difference_of_two_squares(26)\n    False\n    \"\"\"\n    for i in range(1, int(num ** 0.5) + 1):\n        if (i ** 2 + (num - i ** 2) ** 2) == num:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def is_diff_of_two_squares(num):\n    \"\"\"\n    >>> is_diff_of_two_squares(4)\n    True\n    >>> is_diff_of_two_squares(100)\n    True\n    >>> is_diff_of_two_squares(5)\n    False\n    >>> is_diff_of_two_squares(0)\n    False\n    >>> is_diff_of_two_squares(1)\n    False\n    >>> is_diff_of_two_squares(-1)\n    False\n    >>> is_diff_of_two_squares(-100)\n    False\n    \"\"\"\n    for i in range(1, int(num ** 0.5) + 1):\n        if i * i + i * i > num:\n            return False\n        if num - i * i == i * i:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def differenceOfSquares(n):\n    i = 1\n    while i * i <= n:\n        k = n - i * i\n        if k >= 0 and k <= n and (i * i + k) == n:\n            return True\n        i += 1\n    return False\n\n\ndef main():\n    n = int(input(\"Enter number: \"))\n    if differenceOfSquares(n):\n        print(\"Number can be represented as difference of two squares\")\n    else:\n        print(\"Number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def can_be_represented_as_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> can_be_represented_as_difference_of_two_squares(2)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(3)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(4)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(5)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(6)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(7)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(8)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(9)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(10)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(11)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(12)\n    True\n    >>> can_be_represented_as_difference_of_two_squares(13)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(14)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(15)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(16)\n    False\n    >>> can_be_represented_as_difference_of_two_squares(17)\n    False\n    >>> can_be_represented_as_difference_of_two_squares("
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(5)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(21)\n    True\n    >>> difference_of_two_squares(22)\n    False\n    >>> difference_of_two_squares(23)\n    False\n    >>> difference_of_two_squares(24)\n    True\n    >>> difference_of_two_squares(25)\n    False\n    >>> difference_of_two_squares(26)\n    False\n    >>> difference_of_two_squares(27)\n    False\n    >>> difference_of_two_squares(28)\n    True\n    >>> difference_of_two_squares(29)\n    False\n    >>> difference_of_two_squares(30)\n    True\n    >>> difference_of_two_squares(31)\n    False\n    >>> difference_of_two_squares(32)\n    True\n    >>> difference_of_two_squares(33)\n    False\n    >>> difference_of_two_squares(34)\n    False\n    >>> difference_of_two_squares(35)\n    False\n    >>> difference_of_two_squares(36)\n    True\n    >>> difference_of_two_squares(37)\n    False\n    >>> difference_of_two_squares(38)\n    False\n    >>> difference_of_two_squares(39)\n    False\n    >>> difference_of_two_squares(40)\n    True\n    >>> difference_of_two_squares(41)\n    False\n    >>> difference_of_two_squares(42)\n    False\n    >>> difference_of_two_squares(43)\n    False\n    >>> difference_of_two_squares(44)\n    True\n    >>> difference_"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def check_difference(n: int) -> bool:\n    \"\"\"\n    check_difference will return True if the number can be represented as difference of two squares\n    >>> check_difference(9)\n    True\n    >>> check_difference(16)\n    True\n    >>> check_difference(25)\n    True\n    >>> check_difference(50)\n    True\n    >>> check_difference(100)\n    False\n    >>> check_difference(200)\n    False\n    >>> check_difference(300)\n    False\n    \"\"\"\n    i = 1\n    while i * i <= n:\n        i += 1\n    i -= 2\n    while i >= 0:\n        a = int(n - i * i)\n        b = int(n - i - 1)\n        if a * a + b * b == n:\n            return True\n        i -= 1\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "from __future__ import annotations\n\n\ndef check_diff_of_two_squares(number: int) -> bool:\n    \"\"\"\n    Return if the given number can be represented as difference of two squares or not\n    >>> check_diff_of_two_squares(3)\n    True\n    >>> check_diff_of_two_squares(13)\n    True\n    >>> check_diff_of_two_squares(10)\n    False\n    >>> check_diff_of_two_squares(15)\n    False\n    >>> check_diff_of_two_squares(2)\n    False\n    >>> check_diff_of_two_squares(1)\n    False\n    >>> check_diff_of_two_squares(0)\n    True\n    >>> check_diff_of_two_squares(-1)\n    False\n    >>> check_diff_of_two_squares(-2)\n    False\n    >>> check_diff_of_two_squares(-3)\n    False\n    >>> check_diff_of_two_squares(-4)\n    False\n    >>> check_diff_of_two_squares(-5)\n    False\n    >>> check_diff_of_two_squares(-6)\n    False\n    >>> check_diff_of_two_squares(-7)\n    False\n    >>> check_diff_of_two_squares(-8)\n    False\n    >>> check_diff_of_two_squares(-9)\n    False\n    >>> check_diff_of_two_squares(-10)\n    False\n    >>> check_diff_of_two_squares(-11)\n    False\n    >>> check_diff_of_two_squares(-12)\n    False\n    >>> check_diff_of_two_squares(-13)\n    False\n    >>> check_diff_of_two_squares(-14)\n    False\n    >>> check_diff_of_two_squares(-15)\n    False\n    >>> check_diff_of_two_squares(-16)\n    False\n    >>> check_diff_of_two_squares(-17"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def check_difference_of_two_square(number: int) -> bool:\n    \"\"\"\n    >>> check_difference_of_two_square(12)\n    True\n    >>> check_difference_of_two_square(15)\n    False\n    >>> check_difference_of_two_square(17)\n    True\n    >>> check_difference_of_two_square(25)\n    False\n    >>> check_difference_of_two_square(30)\n    False\n    >>> check_difference_of_two_square(49)\n    False\n    >>> check_difference_of_two_square(50)\n    False\n    >>> check_difference_of_two_square(55)\n    True\n    >>> check_difference_of_two_square(56)\n    True\n    >>> check_difference_of_two_square(57)\n    False\n    >>> check_difference_of_two_square(63)\n    False\n    >>> check_difference_of_two_square(64)\n    True\n    >>> check_difference_of_two_square(65)\n    True\n    >>> check_difference_of_two_square(67)\n    True\n    >>> check_difference_of_two_square(68)\n    True\n    >>> check_difference_of_two_square(69)\n    True\n    >>> check_difference_of_two_square(70)\n    False\n    >>> check_difference_of_two_square(71)\n    False\n    >>> check_difference_of_two_square(72)\n    True\n    >>> check_difference_of_two_square(73)\n    False\n    >>> check_difference_of_two_square(74)\n    True\n    >>> check_difference_of_two_square(75)\n    False\n    >>> check_difference_of_two_square(76)\n    True\n    >>> check_difference_of_two_square(77)\n    False\n    >>> check_difference_"
    },
    {
      "rank": 12,
      "score": 9.370583536698913,
      "candidate": "def is_diff_of_two_squares(num):\n    for i in range(1, int(num/2)):\n        if (i*i + (num - i*i)) ** 0.5 == int((i*i + (num - i*i)) ** 0.5):\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if is_diff_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number can't be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 9.234050852198141,
      "candidate": "def is_difference_of_two_squares(num):\n    for i in range(1, int(num ** 0.5) + 1):\n        for j in range(1, int(i ** 0.5) + 1):\n            if i ** 2 - j ** 2 == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if is_difference_of_two_squares(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 9.205959372648458,
      "candidate": "def difference_of_two_square(n):\n    i=1\n    while i*i<n:\n        j=1\n        while j*j<n:\n            if n==i*i+j*j:\n                return True\n            j+=1\n        i+=1\n    return False\n\nprint(difference_of_two_square(3))"
    },
    {
      "rank": 15,
      "score": 9.177268828905222,
      "candidate": "def is_diff_of_two_square(num):\n    i = 1\n    while i * i < num:\n        j = 1\n        while j * j < num:\n            if i * i + j * j == num:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_diff_of_two_square(121))\n    print(is_diff_of_two_square(27))"
    },
    {
      "rank": 16,
      "score": 9.122564458729856,
      "candidate": "def difference_of_two_squares(number):\n    for i in range(1, int(number/2)+1):\n        if i*i > number:\n            break\n        for j in range(i, int(number/2)+1):\n            if (i*i + j*j == number):\n                return True\n    return False\n\n\ndef main():\n    number = int(input(\"Please Enter a number: \"))\n    if difference_of_two_squares(number):\n        print(f\"{number} can be represented as difference of two squares.\")\n    else:\n        print(f\"{number} cannot be represented as difference of two squares.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 17,
      "score": 8.973005557553902,
      "candidate": "def difference_of_two_squares(n):\n    for i in range(1, n):\n        for j in range(i, n):\n            if i*i + j*j == n:\n                return True\n    return False\n\n\ndef main():\n    print(difference_of_two_squares(17))\n    print(difference_of_two_squares(25))\n    print(difference_of_two_squares(40))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 18,
      "score": 8.95994420569242,
      "candidate": "def check_diff_of_two_squares(number):\n    for i in range(1, int(number ** 0.5) + 1):\n        j = i ** 2 - number\n        if j >= 0 and j ** 0.5 == int(j ** 0.5):\n            return True\n    return False\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 19,
      "score": 8.946210893390457,
      "candidate": "def difference_of_two_squares(number):\n    for i in range(1, int(number ** 0.5)):\n        for j in range(1, int(number ** 0.5)):\n            if i ** 2 + j ** 2 == number:\n                return True\n    return False\n\n\nprint(difference_of_two_squares(25))\nprint(difference_of_two_squares(26))"
    },
    {
      "rank": 20,
      "score": 8.932217008005624,
      "candidate": "def is_square_diff(num):\n    for i in range(1, num):\n        for j in range(1, num):\n            if i*i + j*j == num:\n                return True\n    return False\n\n\nprint(is_square_diff(4))\nprint(is_square_diff(13))\nprint(is_square_diff(10))\nprint(is_square_diff(11))\nprint(is_square_diff(25))\nprint(is_square_diff(26))"
    },
    {
      "rank": 21,
      "score": 8.910084504002544,
      "candidate": "def check_diff_of_two_squares(num):\n    for i in range(1, int(num**0.5)+1):\n        for j in range(1, int(num**0.5)+1):\n            if i**2+j**2 == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 22,
      "score": 8.85571690049604,
      "candidate": "def diff_of_two_square(num):\n    for i in range(1, int(num/2)+1):\n        for j in range(1, int((num-i*i)/2)+1):\n            if (i*i+j*j) == num:\n                return True\n    return False\n\n\ndef main():\n    val1 = int(input(\"Enter first number: \"))\n    val2 = int(input(\"Enter second number: \"))\n    if diff_of_two_square(val1) and diff_of_two_square(val2):\n        print(f\"{val1} and {val2} are difference of two squares\")\n    else:\n        print(f\"{val1} and {val2} are not difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 23,
      "score": 8.850707355641543,
      "candidate": "def difference_of_two_square(num):\n    for i in range(1, int(num/2)+1):\n        if (i*i + (num - i*i)) ** 0.5 == int((i*i + (num - i*i)) ** 0.5):\n            return True\n    return False\n\n\nprint(difference_of_two_square(20))\nprint(difference_of_two_square(21))"
    },
    {
      "rank": 24,
      "score": 8.8281618090209,
      "candidate": "def isDifferenceOfSquares(n):\n    for i in range(1,int(n**0.5)+1):\n        if ((i*i+n-(i+1)*(i+1))>0) and ((i*i+n-(i+1)*(i+1))==0 or (i*i+n-(i+1)*(i+1))<0):\n            return True\n    return False"
    },
    {
      "rank": 25,
      "score": 8.81367773444215,
      "candidate": "def difference_of_squares(num):\n    for i in range(0, int(num/2)):\n        j = int(num - i**2)\n        if i**2 + j**2 == num:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    if difference_of_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")"
    },
    {
      "rank": 26,
      "score": 8.76828871349479,
      "candidate": "def difference_of_two_squares(number):\n    for i in range(1, int(number/2)+1):\n        for j in range(1, int(number/2)+1):\n            if i*i + j*j == number:\n                return True\n    return False\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    if difference_of_two_squares(number):\n        print(number, \"can be represented as difference of two squares\")\n    else:\n        print(number, \"can not be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 27,
      "score": 8.750282588864879,
      "candidate": "def is_square_difference(num):\n    for i in range(1, int(num**0.5)+1):\n        if num - i**2 == int((num - i**2)**0.5)**2:\n            return True\n    return False\n\n\nprint(is_square_difference(17))\nprint(is_square_difference(12))"
    },
    {
      "rank": 28,
      "score": 8.715724466237427,
      "candidate": "def check_diff_of_two_squares(num):\n    for i in range(1, int(num**0.5)+1):\n        if num - i**2 > 0 and (num - i**2)**0.5 % 1 == 0:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter the number: \"))\n    if check_diff_of_two_squares(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "rank": 29,
      "score": 8.692801520950061,
      "candidate": "def check(n):\n    for i in range(1, int(n/2)+1):\n        if i*i + (n - i*i)**2 == n:\n            return True\n    return False"
    },
    {
      "rank": 30,
      "score": 8.632293453617281,
      "candidate": "def check_diff_of_two_square(n):\n    i = 0\n    while i * i <= n:\n        diff = n - i * i\n        if diff >= 0:\n            j = 0\n            while j * j <= diff:\n                if diff == j * j:\n                    return True\n                j += 1\n        i += 1\n    return False\n\nif __name__ == \"__main__\":\n    print(check_diff_of_two_square(121))\n    print(check_diff_of_two_square(4))\n    print(check_diff_of_two_square(22))\n    print(check_diff_of_two_square(3))\n    print(check_diff_of_two_square(13))"
    },
    {
      "rank": 31,
      "score": 8.625262456968262,
      "candidate": "def check_diff(num):\n    for i in range(int((num**0.5)+1)):\n        for j in range(int((num**0.5)+1)):\n            if (i*i + j*j) == num:\n                return True\n    return False\n\nprint(check_diff(10))\nprint(check_diff(5))\nprint(check_diff(13))"
    },
    {
      "rank": 32,
      "score": 8.625142247198651,
      "candidate": "def is_diff_of_squares(n):\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if (i*i) - (j*j) == n:\n                return True\n    return False\n\nprint(is_diff_of_squares(5))\nprint(is_diff_of_squares(12))\nprint(is_diff_of_squares(37))\nprint(is_diff_of_squares(42))"
    },
    {
      "rank": 33,
      "score": 8.616253589228675,
      "candidate": "def check_difference_of_two_squares(n):\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if i*i-j*j == n:\n                return True\n    return False\n\nif __name__ == \"__main__\":\n    n = int(input())\n    if check_difference_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\"\"\"\nTest cases:\n\nInput 1:\n3\nOutput 1:\nYes\n\nInput 2:\n11\nOutput 2:\nYes\n\nInput 3:\n14\nOutput 3:\nNo\n\"\"\""
    },
    {
      "rank": 34,
      "score": 8.610076160146226,
      "candidate": "def is_diff_of_two_squares(n):\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            if i * i + j * j == n:\n                return True\n    return False"
    },
    {
      "rank": 35,
      "score": 8.606486429141842,
      "candidate": "def difference_of_two_squares(number):\n    for i in range(1, int(number / 2)):\n        if i * i + i * i == number:\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    result = difference_of_two_squares(num)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 8.60156811074208,
      "candidate": "def check_diff_of_two_squares(n):\n    for i in range(1, int(n**0.5)+1):\n        for j in range(1, int(n**0.5)+1):\n            if i*i + j*j == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 37,
      "score": 8.565425580227462,
      "candidate": "def difference_of_two_square(n):\n    for i in range(1, n):\n        for j in range(1, n):\n            if (i * i) + (j * j) == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(difference_of_two_square(10))\n    print(difference_of_two_square(13))"
    },
    {
      "rank": 38,
      "score": 8.548876241946822,
      "candidate": "def check_diff(num):\n    for i in range(1, num+1):\n        if i*i > num:\n            return False\n        for j in range(i+1, num+1):\n            if i*i + j*j == num:\n                return True\n    return False\n\nprint(check_diff(25))\nprint(check_diff(15))"
    },
    {
      "rank": 39,
      "score": 8.542875062379007,
      "candidate": "def differenceOfSquares(number):\n    for i in range(1, number):\n        for j in range(1, number):\n            if i*i + j*j == number:\n                return True\n    return False"
    },
    {
      "rank": 40,
      "score": 8.53012858503943,
      "candidate": "def isSquare(n):\n    for i in range(int((n ** 0.5))):\n        if (i ** 2) == (n - (i+1) ** 2):\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    if isSquare(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "rank": 41,
      "score": 8.499905739299377,
      "candidate": "def check(n):\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            if i*i+j*j==n:\n                return True\n    return False\nprint(check(3))"
    },
    {
      "rank": 42,
      "score": 8.478208546788407,
      "candidate": "def check_diff_of_two_squares(n):\n    for i in range(int(n ** 0.5) + 1):\n        for j in range(int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(n):\n        print(\"The number can be represented as difference of two squares.\")\n    else:\n        print(\"The number can not be represented as difference of two squares.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 43,
      "score": 8.437695832075478,
      "candidate": "def check_diff_of_squares(num):\n    for i in range(0, int(num/2)+1):\n        for j in range(i+1, int(num/2)+1):\n            if i*i + j*j == num:\n                return True\n    return False\n\n\nprint(check_diff_of_squares(15))\nprint(check_diff_of_squares(16))"
    },
    {
      "rank": 44,
      "score": 8.408439383654278,
      "candidate": "def check_difference_of_two_square(num):\n    for i in range(1, num):\n        for j in range(1, num):\n            if i * i + j * j == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number : \"))\n    if check_difference_of_two_square(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 45,
      "score": 8.386620303250325,
      "candidate": "def diff_of_squares(num):\n    for i in range(1,int(num/2)+1):\n        for j in range(1,int(num/2)+1):\n            if i*i + j*j == num:\n                return True\n    return False\n\nprint(diff_of_squares(121))\nprint(diff_of_squares(125))\nprint(diff_of_squares(126))"
    },
    {
      "rank": 46,
      "score": 8.375312293858853,
      "candidate": "def check_difference_of_two_square(n):\n    # if n < 0:\n    #     return False\n    # for i in range(1, n+1):\n    #     for j in range(i+1, n+1):\n    #         if i*i + j*j == n:\n    #             return True\n    # return False\n\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            if i*i + j*j == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(check_difference_of_two_square(10))\n    print(check_difference_of_two_square(12))\n    print(check_difference_of_two_square(15))"
    },
    {
      "rank": 47,
      "score": 8.351614956112536,
      "candidate": "def is_difference_of_two_squares(num):\n    \"\"\"\n    >>> is_difference_of_two_squares(1)\n    False\n    >>> is_difference_of_two_squares(2)\n    False\n    >>> is_difference_of_two_squares(3)\n    True\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(5)\n    False\n    >>> is_difference_of_two_squares(6)\n    True\n    >>> is_difference_of_two_squares(7)\n    False\n    >>> is_difference_of_two_squares(8)\n    True\n    >>> is_difference_of_two_squares(9)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(11)\n    False\n    >>> is_difference_of_two_squares(12)\n    True\n    >>> is_difference_of_two_squares(13)\n    False\n    >>> is_difference_of_two_squares(14)\n    True\n    >>> is_difference_of_two_squares(15)\n    False\n    >>> is_difference_of_two_squares(16)\n    True\n    >>> is_difference_of_two_squares(17)\n    False\n    >>> is_difference_of_two_squares(18)\n    True\n    >>> is_difference_of_two_squares(19)\n    False\n    >>> is_difference_of_two_squares(20)\n    True\n    >>> is_difference_of_two_squares(21)\n    False\n    >>> is_difference_of_two_squares(22)\n    True\n    >>> is_difference_of_two_squares(23)\n    False\n    >>> is_difference_of_two_squares(24)"
    },
    {
      "rank": 48,
      "score": 8.331556294201176,
      "candidate": "def is_diff_of_two_squares(n):\n    if n < 0:\n        return False\n    for i in range(1, int(n ** 0.5) + 1):\n        for j in range(1, int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\nprint(is_diff_of_two_squares(50))\nprint(is_diff_of_two_squares(35))\nprint(is_diff_of_two_squares(100))"
    },
    {
      "rank": 49,
      "score": 8.327375965969855,
      "candidate": "def difference_of_two_squares(n):\n    i = 1\n    while i * i < n:\n        i += 1\n    j = 1\n    while j * j < n:\n        if (n - i * i) % (j * j) == 0:\n            return True\n        j += 1\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if difference_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 50,
      "score": 8.327367757082776,
      "candidate": "def check(num):\n    if num < 0:\n        return False\n    elif num == 0:\n        return True\n    else:\n        for i in range(1, int(num ** 0.5)+1):\n            if i*i + (i+1)*(i+1) == num:\n                return True\n    return False\n\n\nnum = int(input())\nif check(num):\n    print(\"Yes\")\nelse:\n    print(\"No\")"
    },
    {
      "rank": 51,
      "score": 8.298597569547805,
      "candidate": "def diff_of_two_squares(num):\n    for i in range(1, int(num / 2) + 1):\n        if i * i + (num - i * i) * (num - i * i) == num:\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if diff_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 52,
      "score": 8.2938925966498,
      "candidate": "def check_diff_of_squares(n):\n    for a in range(1, int(n**0.5)+1):\n        b = (n - a**2)**0.5\n        if b == int(b):\n            return True\n    return False"
    },
    {
      "rank": 53,
      "score": 8.289838256518838,
      "candidate": "def difference_of_squares(n):\n    for i in range(1, n + 1):\n        for j in range(1, i):\n            if i * i - j * j == n:\n                return True\n    return False\n\n\ndef main():\n    val = int(input(\"Enter a number: \"))\n    if difference_of_squares(val):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 54,
      "score": 8.251903304236286,
      "candidate": "def diff_of_two_squares(n):\n    for i in range(int(n/2)+1):\n        for j in range(int(n/2)+1):\n            if i*i + j*j == n:\n                return True\n    return False\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if diff_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 55,
      "score": 8.214125058964552,
      "candidate": "def check_difference_of_two_squares(number):\n    for i in range(1, int(number ** 0.5) + 1):\n        for j in range(1, int(number ** 0.5) + 1):\n            if i * i + j * j == number:\n                return True\n    return False\n\n\nprint(check_difference_of_two_squares(12))\nprint(check_difference_of_two_squares(37))\nprint(check_difference_of_two_squares(52))\nprint(check_difference_of_two_squares(69))\nprint(check_difference_of_two_squares(144))"
    },
    {
      "rank": 56,
      "score": 8.212735598038213,
      "candidate": "def check_diff_of_two_square(num):\n    for i in range(1, int(num**0.5)+1):\n        if (i*i + (num - i*i))**0.5 == int((i*i + (num - i*i))**0.5):\n            return True\n    return False"
    },
    {
      "rank": 57,
      "score": 8.211579567659316,
      "candidate": "def is_diff_of_two_squares(num: int) -> bool:\n    for i in range(1, num // 2 + 1):\n        j: int = (num - i * i) ** 0.5\n        if j.is_integer():\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_diff_of_two_squares(100))\n    print(is_diff_of_two_squares(101))"
    },
    {
      "rank": 58,
      "score": 8.209707251476969,
      "candidate": "def difference_of_squares(num):\n    squares = []\n    i = 1\n    while i*i <= num:\n        squares.append(i*i)\n        i += 1\n    for i in range(len(squares)):\n        for j in range(i+1, len(squares)):\n            if squares[i] + squares[j] == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if difference_of_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 59,
      "score": 8.2048573255218,
      "candidate": "from math import sqrt\n\n\ndef check_difference_of_two_squares(number):\n    if number <= 0:\n        return False\n    else:\n        for i in range(1, int(sqrt(number)) + 1):\n            for j in range(1, int(sqrt(number)) + 1):\n                if i ** 2 - j ** 2 == number:\n                    return True\n    return False\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    if check_difference_of_two_squares(number):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 60,
      "score": 8.172253082181854,
      "candidate": "def check_diff_of_two_squares(num):\n    i = 1\n    while i * i <= num:\n        diff = num - i * i\n        j = 1\n        while j * j <= diff:\n            if i * i + j * j == num:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if check_diff_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 61,
      "score": 8.163300679823958,
      "candidate": "def is_difference_of_two_squares(n):\n    for i in range(1, int(n ** 0.5) + 1):\n        if n - i ** 2 > 0:\n            j = int((n - i ** 2) ** 0.5)\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False"
    },
    {
      "rank": 62,
      "score": 8.144125099485041,
      "candidate": "from math import sqrt\n\n\ndef is_diff_of_2_squares(n):\n    for i in range(1, int(sqrt(n)) + 1):\n        if n - i * i > 0:\n            j = sqrt(n - i * i)\n            if j == int(j):\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_diff_of_2_squares(1))\n    print(is_diff_of_2_squares(2))\n    print(is_diff_of_2_squares(3))\n    print(is_diff_of_2_squares(13))"
    },
    {
      "rank": 63,
      "score": 8.143591138329747,
      "candidate": "def diff_of_squares(n):\n    for i in range(1, n):\n        for j in range(1, n):\n            if i*i + j*j == n:\n                return True\n    return False\n\nif __name__ == '__main__':\n    n = int(input(\"Enter a number: \"))\n    if diff_of_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "rank": 64,
      "score": 8.121884567141883,
      "candidate": "def can_be_difference_of_two_squares(n):\n    i = 1\n    while i * i < n:\n        j = 1\n        while j * j < n:\n            if i * i + j * j == n:\n                return True\n            j += 1\n        i += 1\n    return False"
    },
    {
      "rank": 65,
      "score": 8.105983444291466,
      "candidate": "def is_difference_of_two_squares(number):\n    for i in range(1, int(number**0.5)+1):\n        j = (number - i**2)**0.5\n        if i**2 + j**2 == number:\n            return True\n    return False\n\n\nprint(is_difference_of_two_squares(12))\nprint(is_difference_of_two_squares(13))"
    },
    {
      "rank": 66,
      "score": 8.08452234024709,
      "candidate": "def isDifferenceOfSquares(n):\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            if i*i - j*j == n:\n                return True\n    return False"
    },
    {
      "rank": 67,
      "score": 8.024835682833125,
      "candidate": "def isDifferenceOfSquares(n):\n    for i in range(int(n**0.5)+1):\n        for j in range(i+1,int(n**0.5)+1):\n            if (i**2)+(j**2)==n:\n                return True\n    return False\n\nisDifferenceOfSquares(14)"
    },
    {
      "rank": 68,
      "score": 7.990432406683839,
      "candidate": "def check_diff(n):\n    for i in range(1, int(n/2)+1):\n        if ((i*i+i*i) == n):\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter number: \"))\n    if check_diff(num):\n        print(\"Yes\")\n    else:\n        print(\"No\")"
    },
    {
      "rank": 69,
      "score": 7.938028884277233,
      "candidate": "def is_difference_of_two_squares(n):\n    i = 0\n    while i * i <= n:\n        i += 1\n    for a in range(i):\n        b = n - a * a\n        if b >= 0 and b <= i and i * i + b * b == n:\n            return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if is_difference_of_two_squares(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 70,
      "score": 7.915588979966494,
      "candidate": "from math import sqrt\n\n\ndef is_difference_of_two_squares(num):\n    for i in range(1, int(sqrt(num)) + 1):\n        j = sqrt(num - i * i)\n        if j.is_integer():\n            return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if is_difference_of_two_squares(num):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number cannot be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 71,
      "score": 7.8912769574414305,
      "candidate": "def check_diff_of_squares(num):\n    for i in range(1, int(num/2)+1):\n        j = int((num - i*i)/2)\n        if i*i + j*j == num:\n            return True\n    return False\n\n\nprint(check_diff_of_squares(17))\nprint(check_diff_of_squares(18))\nprint(check_diff_of_squares(25))\nprint(check_diff_of_squares(36))\nprint(check_diff_of_squares(45))\nprint(check_diff_of_squares(57))\nprint(check_diff_of_squares(67))\nprint(check_diff_of_squares(76))\nprint(check_diff_of_squares(85))\nprint(check_diff_of_squares(100))"
    },
    {
      "rank": 72,
      "score": 7.868947655733293,
      "candidate": "def check(n):\n    for i in range(1, n):\n        for j in range(1, i):\n            if i*i - j*j == n:\n                return True\n    return False"
    },
    {
      "rank": 73,
      "score": 7.84634113240411,
      "candidate": "def check_difference_of_two_squares(num):\n    for i in range(1, int(num/2)+1):\n        if i*i > num:\n            break\n        for j in range(i+1, int((num-i*i)/2)+1):\n            if j*j+i*i == num:\n                return True\n    return False\n\nprint(check_difference_of_two_squares(13))\nprint(check_difference_of_two_squares(25))\nprint(check_difference_of_two_squares(4))\nprint(check_difference_of_two_squares(100))\nprint(check_difference_of_two_squares(101))"
    },
    {
      "rank": 74,
      "score": 7.834022619458933,
      "candidate": "def check_diff_of_two_squares(number):\n    for i in range(int(number / 2) + 1):\n        a = i ** 2\n        b = (number - a) ** 0.5\n        if b == int(b):\n            return True\n    return False\n\n\nprint(check_diff_of_two_squares(10))\nprint(check_diff_of_two_squares(17))"
    },
    {
      "rank": 75,
      "score": 7.780351419995229,
      "candidate": "def is_difference_of_two_square(num):\n    for i in range(0, num + 1):\n        if i ** 2 > num:\n            return False\n        if (num - i) ** 2 == num:\n            return True\n    return False\n\n\nprint(is_difference_of_two_square(5))\nprint(is_difference_of_two_square(12))\nprint(is_difference_of_two_square(13))\nprint(is_difference_of_two_square(14))\nprint(is_difference_of_two_square(17))\nprint(is_difference_of_two_square(18))\nprint(is_difference_of_two_square(25))"
    },
    {
      "rank": 76,
      "score": 7.738292593776799,
      "candidate": "def differenceOfSquares(a):\n    for i in range(1, a):\n        if (i * i) + (a - i * i) == a:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    print(differenceOfSquares(25))\n    print(differenceOfSquares(26))"
    },
    {
      "rank": 77,
      "score": 7.7320703513377165,
      "candidate": "def check_diff_of_two_squares(n):\n    for i in range(1, n+1):\n        for j in range(1, i):\n            if i*i - j*j == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(\"Enter the number:\")\n    n = int(input())\n    if check_diff_of_two_squares(n):\n        print(\"The number can be represented as difference of two squares\")\n    else:\n        print(\"The number can not be represented as difference of two squares\")"
    },
    {
      "rank": 78,
      "score": 7.705183449260731,
      "candidate": "def check_squares(num):\n    for i in range(1, int(num/2)+1):\n        if i*i > num:\n            break\n        for j in range(1, int(num/2)+1):\n            if (i*i+j*j) == num:\n                return True\n    return False\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    if check_squares(num):\n        print(f\"{num} can be represented as difference of two squares\")\n    else:\n        print(f\"{num} can not be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 79,
      "score": 7.5819855281879285,
      "candidate": "def is_sum_of_two_square(n):\n    for i in range(int((n/2)+1)):\n        if (i*i + (n-i*i)) == n:\n            return True\n    return False"
    },
    {
      "rank": 80,
      "score": 7.562924366763077,
      "candidate": "def is_difference_of_two_square(num):\n    for i in range(1, int(num/2) + 1):\n        j = int((num - i * i) ** 0.5)\n        if i * i + j * j == num:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    num = int(input(\"Enter a number: \"))\n    print(is_difference_of_two_square(num))"
    },
    {
      "rank": 81,
      "score": 7.4878043221155455,
      "candidate": "def check_difference_of_two_squares(n):\n    for i in range(int(n**0.5)+1):\n        for j in range(i, int(n**0.5)+1):\n            if i*i+j*j == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(check_difference_of_two_squares(100))"
    },
    {
      "rank": 82,
      "score": 7.464609382504557,
      "candidate": "def check(n):\n    for i in range(1, int(n ** 0.5) + 1):\n        for j in range(1, int(i ** 0.5) + 1):\n            if (i + j) ** 2 == n or (i - j) ** 2 == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check(n):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 83,
      "score": 3.0,
      "candidate": "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(1)\n    False\n    >>> difference_of_two_squares(3)\n    False\n    >>> difference_of_two_squares(4)\n    True\n    >>> difference_of_two_squares(5)\n    True\n    >>> difference_of_two_squares(6)\n    False\n    >>> difference_of_two_squares(10)\n    True\n    >>> difference_of_two_squares(11)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(14)\n    True\n    >>> difference_of_two_squares(15)\n    False\n    >>> difference_of_two_squares(16)\n    False\n    >>> difference_of_two_squares(17)\n    False\n    >>> difference_of_two_squares(18)\n    True\n    >>> difference_of_two_squares(19)\n    False\n    >>> difference_of_two_squares(20)\n    True\n    >>> difference_of_two_squares(21)\n    False\n    >>> difference_of_two_squares(22)\n    True\n    >>> difference_of_two_squares(23)\n    False\n    >>> difference_of_two_squares(24)\n    True\n    >>> difference_of_two_squares(25)\n    False\n    >>> difference_of_two_squares(26)\n    False\n    >>> difference_of_two_squares(27)\n    False\n    >>> difference_of_two_squares(28)\n    True\n    >>> difference_of_two_squares(29)\n    False\n    >>> difference_of_two_squares(30)\n    True\n    \"\"\"\n    for i in range(2, int(num / 2) + 1):\n        if num"
    },
    {
      "rank": 84,
      "score": 3.0,
      "candidate": "def is_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(2)\n    False\n    >>> is_difference_of_two_squares(3)\n    False\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(5)\n    True\n    >>> is_difference_of_two_squares(6)\n    False\n    >>> is_difference_of_two_squares(7)\n    False\n    >>> is_difference_of_two_squares(8)\n    True\n    >>> is_difference_of_two_squares(9)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(11)\n    False\n    >>> is_difference_of_two_squares(12)\n    True\n    >>> is_difference_of_two_squares(13)\n    False\n    >>> is_difference_of_two_squares(14)\n    False\n    >>> is_difference_of_two_squares(15)\n    False\n    >>> is_difference_of_two_squares(16)\n    True\n    >>> is_difference_of_two_squares(17)\n    True\n    >>> is_difference_of_two_squares(18)\n    False\n    >>> is_difference_of_two_squares(19)\n    False\n    >>> is_difference_of_two_squares(20)\n    True\n    >>> is_difference_of_two_squares(21)\n    False\n    >>> is_difference_of_two_squares(22)\n    False\n    >>> is_difference_of_two_squares(23)\n    False\n    >>> is_difference_of_two_squares(24)\n    True\n    >>> is_difference_of_two_"
    },
    {
      "rank": 85,
      "score": 3.0,
      "candidate": "def difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> difference_of_two_squares(10)\n    True\n    >>> difference_of_two_squares(11)\n    False\n    >>> difference_of_two_squares(12)\n    True\n    >>> difference_of_two_squares(13)\n    False\n    >>> difference_of_two_squares(14)\n    True\n    >>> difference_of_two_squares(15)\n    False\n    >>> difference_of_two_squares(16)\n    True\n    \"\"\"\n    for i in range(1, num + 1):\n        for j in range(1, num + 1):\n            if i * i + j * j == num:\n                return True\n    return False\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 86,
      "score": 3.0,
      "candidate": "def differenceOfTwoSquares(n):\n    # code here\n    for i in range(1, int(n ** 0.5) + 1):\n        for j in range(1, int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\ndef main():\n    n = int(input(\"Enter the number: \"))\n    if differenceOfTwoSquares(n):\n        print(n, \"can be represented as difference of two squares\")\n    else:\n        print(n, \"can't be represented as difference of two squares\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "def is_difference_of_two_squares(num: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(13)\n    False\n    >>> is_difference_of_two_squares(25)\n    True\n    \"\"\"\n    for i in range(1, int(num ** 0.5)):\n        if num - i ** 2 == int((num - i ** 2) ** 0.5) ** 2:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "def difference_of_two_squares(number):\n    i = 1\n    while i * i < number:\n        j = 1\n        while j * j < number:\n            if (i * i + j * j) == number:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\nprint(difference_of_two_squares(3))\nprint(difference_of_two_squares(5))\nprint(difference_of_two_squares(13))\nprint(difference_of_two_squares(15))\nprint(difference_of_two_squares(17))"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "def check_difference(n: int) -> bool:\n    for i in range(1, n):\n        for j in range(1, n):\n            if (i * i) + (j * j) == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert check_difference(1) == False\n    assert check_difference(4) == True\n    assert check_difference(12) == False\n    assert check_difference(100) == True"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "from math import sqrt\n\n\ndef is_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    This function will check if the given number is the difference of two squares or not.\n    >>> is_difference_of_two_squares(3)\n    False\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(10)\n    True\n    >>> is_difference_of_two_squares(12)\n    False\n    >>> is_difference_of_two_squares(100)\n    True\n    >>> is_difference_of_two_squares(-1)\n    True\n    >>> is_difference_of_two_squares(0)\n    False\n    >>> is_difference_of_two_squares(5)\n    False\n    >>> is_difference_of_two_squares(15)\n    True\n    >>> is_difference_of_two_squares(16)\n    False\n    \"\"\"\n    if n < 0:\n        return is_difference_of_two_squares(-n)\n\n    for i in range(1, int(sqrt(n)) + 1):\n        j = int(sqrt(n - i * i))\n        if i * i + j * j == n:\n            return True\n\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "from math import sqrt\n\n\ndef check_diff_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> check_diff_of_two_squares(1)\n    False\n    >>> check_diff_of_two_squares(5)\n    True\n    >>> check_diff_of_two_squares(11)\n    False\n    >>> check_diff_of_two_squares(3)\n    True\n    >>> check_diff_of_two_squares(4)\n    False\n    >>> check_diff_of_two_squares(6)\n    True\n    >>> check_diff_of_two_squares(25)\n    True\n    >>> check_diff_of_two_squares(36)\n    False\n    >>> check_diff_of_two_squares(15)\n    True\n    >>> check_diff_of_two_squares(31)\n    False\n    >>> check_diff_of_two_squares(10)\n    True\n    \"\"\"\n    for i in range(1, int(sqrt(n)) + 1):\n        if i * i + (n - i * i) ** 2 == n:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "def check_diff_of_two_squares(num):\n    for i in range(0, num+1):\n        for j in range(0, i+1):\n            if i*i+j*j == num:\n                return True\n    return False\n\n\nprint(check_diff_of_two_squares(2))\nprint(check_diff_of_two_squares(3))\nprint(check_diff_of_two_squares(4))\nprint(check_diff_of_two_squares(5))\nprint(check_diff_of_two_squares(6))\nprint(check_diff_of_two_squares(7))\nprint(check_diff_of_two_squares(8))\nprint(check_diff_of_two_squares(9))\nprint(check_diff_of_two_squares(10))\nprint(check_diff_of_two_squares(11))\nprint(check_diff_of_two_squares(12))\nprint(check_diff_of_two_squares(13))\nprint(check_diff_of_two_squares(14))\nprint(check_diff_of_two_squares(15))\nprint(check_diff_of_two_squares(16))\nprint(check_diff_of_two_squares(17))\nprint(check_diff_of_two_squares(18))\nprint(check_diff_of_two_squares(19))\nprint(check_diff_of_two_squares(20))\nprint(check_diff_of_two_squares(21))\nprint(check_diff_of_two_squares(22))\nprint(check_diff_of_two_squares(23))\nprint(check_diff_of_two_squares(24))\nprint(check_diff_of_two_squares(25))\nprint(check_diff_of_two_squares(26))\nprint(check_diff_of_two_squares(27))\nprint(check_diff_of_two_squares"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def is_difference_of_two_squares(n: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(1)\n    True\n    >>> is_difference_of_two_squares(2)\n    True\n    >>> is_difference_of_two_squares(3)\n    False\n    >>> is_difference_of_two_squares(4)\n    True\n    >>> is_difference_of_two_squares(5)\n    False\n    >>> is_difference_of_two_squares(6)\n    True\n    >>> is_difference_of_two_squares(7)\n    False\n    >>> is_difference_of_two_squares(8)\n    True\n    >>> is_difference_of_two_squares(9)\n    False\n    >>> is_difference_of_two_squares(10)\n    True\n    \"\"\"\n    for i in range(int(n ** 0.5) + 1):\n        for j in range(i, int(n ** 0.5) + 1):\n            if i ** 2 + j ** 2 == n:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "def check_diff_of_two_squares(num):\n    if num < 0:\n        return False\n\n    for i in range(1, int(num**0.5)+1):\n        if num - i*i == 0:\n            return True\n        elif num - i*i < 0:\n            break\n    return False\n\n\nprint(check_diff_of_two_squares(10))\nprint(check_diff_of_two_squares(15))\nprint(check_diff_of_two_squares(27))\nprint(check_diff_of_two_squares(121))\nprint(check_diff_of_two_squares(144))\nprint(check_diff_of_two_squares(169))\nprint(check_diff_of_two_squares(170))\nprint(check_diff_of_two_squares(171))\nprint(check_diff_of_two_squares(172))\nprint(check_diff_of_two_squares(173))\nprint(check_diff_of_two_squares(174))\nprint(check_diff_of_two_squares(175))\nprint(check_diff_of_two_squares(176))\nprint(check_diff_of_two_squares(177))\nprint(check_diff_of_two_squares(178))\nprint(check_diff_of_two_squares(179))\nprint(check_diff_of_two_squares(180))\nprint(check_diff_of_two_squares(181))\nprint(check_diff_of_two_squares(182))\nprint(check_diff_of_two_squares(183))\nprint(check_diff_of_two_squares(184))\nprint(check_diff_of_two_squares(185))\nprint(check_diff_of_two_squares(186))\nprint(check_diff_of_two_squares(187"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def check_diff_of_squares(number):\n    for i in range(int(number ** 0.5)):\n        if i ** 2 + (number - i ** 2) ** 2 == number:\n            return True\n    return False\n\nprint(check_diff_of_squares(4))\nprint(check_diff_of_squares(23))\nprint(check_diff_of_squares(24))\nprint(check_diff_of_squares(25))\nprint(check_diff_of_squares(26))\nprint(check_diff_of_squares(27))\nprint(check_diff_of_squares(28))\nprint(check_diff_of_squares(29))\nprint(check_diff_of_squares(30))\nprint(check_diff_of_squares(31))\nprint(check_diff_of_squares(32))\nprint(check_diff_of_squares(33))\nprint(check_diff_of_squares(34))\nprint(check_diff_of_squares(35))\nprint(check_diff_of_squares(36))\nprint(check_diff_of_squares(37))\nprint(check_diff_of_squares(38))\nprint(check_diff_of_squares(39))\nprint(check_diff_of_squares(40))\nprint(check_diff_of_squares(41))\nprint(check_diff_of_squares(42))\nprint(check_diff_of_squares(43))\nprint(check_diff_of_squares(44))\nprint(check_diff_of_squares(45))\nprint(check_diff_of_squares(46))\nprint(check_diff_of_squares(47))\nprint(check_diff_of_squares(48))\nprint(check_diff_of_squares(49))\nprint(check_diff_of_squares(50))\nprint(check_diff_of_squares(51))\nprint("
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def is_difference_of_two_squares(number: int) -> bool:\n    \"\"\"\n    >>> is_difference_of_two_squares(25)\n    True\n    >>> is_difference_of_two_squares(4)\n    False\n    >>> is_difference_of_two_squares(1)\n    False\n    \"\"\"\n\n    for i in range(int(number ** 0.5) + 1):\n        j = number - i * i\n        if j > 0 and j <= int(j ** 0.5) + 1:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def check_difference_of_two_square(n: int) -> bool:\n    \"\"\"\n    >>> check_difference_of_two_square(10)\n    True\n    >>> check_difference_of_two_square(11)\n    False\n    >>> check_difference_of_two_square(12)\n    True\n    >>> check_difference_of_two_square(15)\n    False\n    >>> check_difference_of_two_square(16)\n    True\n    \"\"\"\n    for i in range(1, n):\n        for j in range(1, n):\n            if i * i + j * j == n:\n                return True\n    return False\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def difference_of_two_squares(num):\n    for i in range(1, int(num**0.5)+1):\n        for j in range(1, int(num**0.5)+1):\n            if i**2+j**2==num:\n                return True\n    return False\n\nprint(difference_of_two_squares(4))\nprint(difference_of_two_squares(10))\nprint(difference_of_two_squares(11))\nprint(difference_of_two_squares(13))\nprint(difference_of_two_squares(17))\nprint(difference_of_two_squares(19))\nprint(difference_of_two_squares(20))\nprint(difference_of_two_squares(21))\nprint(difference_of_two_squares(25))\nprint(difference_of_two_squares(26))\nprint(difference_of_two_squares(27))\nprint(difference_of_two_squares(30))\nprint(difference_of_two_squares(31))\nprint(difference_of_two_squares(32))\nprint(difference_of_two_squares(33))\nprint(difference_of_two_squares(34))\nprint(difference_of_two_squares(35))\nprint(difference_of_two_squares(36))\nprint(difference_of_two_squares(37))\nprint(difference_of_two_squares(38))\nprint(difference_of_two_squares(39))\nprint(difference_of_two_squares(40))\nprint(difference_of_two_squares(41))\nprint(difference_of_two_squares(42))\nprint(difference_of_two_squares(43))\nprint(difference_of_two_squares(44))\nprint(difference_of_two_squares(45))\nprint(difference_of_two"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def is_difference_of_two_squares(num):\n    if num < 4:\n        return False\n    i = 1\n    while i * i < num:\n        j = 1\n        while j * j < num:\n            if i * i + j * j == num:\n                return True\n            j += 1\n        i += 1\n    return False\n\n\nprint(is_difference_of_two_squares(2))\nprint(is_difference_of_two_squares(3))\nprint(is_difference_of_two_squares(4))\nprint(is_difference_of_two_squares(5))\nprint(is_difference_of_two_squares(6))\nprint(is_difference_of_two_squares(7))\nprint(is_difference_of_two_squares(8))\nprint(is_difference_of_two_squares(9))\nprint(is_difference_of_two_squares(10))\nprint(is_difference_of_two_squares(11))\nprint(is_difference_of_two_squares(12))\nprint(is_difference_of_two_squares(13))\nprint(is_difference_of_two_squares(14))\nprint(is_difference_of_two_squares(15))\nprint(is_difference_of_two_squares(16))\nprint(is_difference_of_two_squares(17))\nprint(is_difference_of_two_squares(18))\nprint(is_difference_of_two_squares(19))\nprint(is_difference_of_two_squares(20))\nprint(is_difference_of_two_squares(21))\nprint(is_difference_of_two_squares(22))\nprint(is_difference_of_two_squares(23))\nprint(is_difference_of_two_squares(24))\nprint(is_difference_of_two_"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def is_diff_of_two_squares(n):\n    for i in range(int(n ** 0.5)):\n        for j in range(int(n ** 0.5)):\n            if i ** 2 - j ** 2 == n:\n                return True\n    return False\n\n\nprint(is_diff_of_two_squares(3))\nprint(is_diff_of_two_squares(4))\nprint(is_diff_of_two_squares(5))\nprint(is_diff_of_two_squares(11))"
    }
  ]
}