{
  "timestamp": "2025-09-15T01:40:11.234782",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 444,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def is_31_days(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    else:\n        return False\n\ndef main():\n    month = int(input(\"Enter a month number: \"))\n    result = is_31_days(month)\n    print(result)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def check_month(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\ndef main():\n    month = int(input(\"Enter month: \"))\n    if check_month(month):\n        print(\"It has 31 days\")\n    else:\n        print(\"It has 30 days\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def is_month_31(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    else:\n        return False\n\n\ndef main():\n    month = int(input(\"Enter a month number: \"))\n    if is_month_31(month):\n        print(\"The given month has 31 days.\")\n    else:\n        print(\"The given month does not have 31 days.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 4,
      "score": 8.776079135700996,
      "candidate": "from calendar import monthrange\n\n\ndef check_month(month):\n    days = monthrange(2018, month)\n    if days[1] == 1:\n        return True\n    return False\n\n\ndef main():\n    print(check_month(3))\n    print(check_month(2))\n    print(check_month(1))\n    print(check_month(12))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 5,
      "score": 8.76428071429013,
      "candidate": "def check_month(month):\n    if month in [1,3,5,7,8,10,12]:\n        return True\n    else:\n        return False\n\nprint(check_month(12))\nprint(check_month(11))"
    },
    {
      "rank": 6,
      "score": 8.660954344168594,
      "candidate": "def check_31_days(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        print(\"31 days\")\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        print(\"30 days\")\n    elif month == 2:\n        print(\"28 or 29 days\")\n    else:\n        print(\"Invalid month\")\n\ncheck_31_days(int(input(\"Enter a month number: \")))"
    },
    {
      "rank": 7,
      "score": 8.64930892114014,
      "candidate": "def check_month(month: int) -> bool:\n    \"\"\"\n    >>> check_month(1)\n    True\n    >>> check_month(2)\n    False\n    \"\"\"\n    return month % 2 != 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 8.63667888916188,
      "candidate": "from datetime import date\n\ndef is_month_with_31_days(month_number):\n    \"\"\"Returns True if month_number contains 31 days, False otherwise.\"\"\"\n    return date(2020, month_number, 31).replace(day=28).day == 31"
    },
    {
      "rank": 9,
      "score": 8.548754416576804,
      "candidate": "def check_31_days(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return False\n    else:\n        return False\n\n\ndef main():\n    month = int(input(\"Enter the month number: \"))\n    if check_31_days(month):\n        print(\"31 days\")\n    else:\n        print(\"Not 31 days\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 8.495256521473312,
      "candidate": "def is_month_31_days(month_num):\n    return month_num in [1, 3, 5, 7, 8, 10, 12]\n\n\ndef main():\n    month_num = int(input(\"Enter the month number: \"))\n    if is_month_31_days(month_num):\n        print(f\"Month {month_num} has 31 days\")\n    else:\n        print(f\"Month {month_num} doesn't have 31 days\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 11,
      "score": 8.467738188283516,
      "candidate": "def check_31_days(month):\n    return month in (4, 6, 9, 11)\n\n\ndef main():\n    print(check_31_days(4))\n    print(check_31_days(11))\n    print(check_31_days(9))\n    print(check_31_days(6))\n    print(check_31_days(3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 12,
      "score": 8.458625367428908,
      "candidate": "from datetime import date\n\ndef check_month(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    elif month == 2:\n        return False\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    month = int(input(\"Enter the month number: \"))\n    if check_month(month):\n        print(\"The month has 31 days.\")\n    else:\n        print(\"The month does not have 31 days.\")\n\n\"\"\"\nOutput:\n\nEnter the month number: 12\nThe month has 31 days.\n\nEnter the month number: 2\nThe month does not have 31 days.\n\"\"\""
    },
    {
      "rank": 13,
      "score": 8.429322318912574,
      "candidate": "def month_31(month):\n    if month in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(month_31(1))"
    },
    {
      "rank": 14,
      "score": 8.397031421342271,
      "candidate": "from datetime import date\n\n\ndef has31_days(month: int) -> bool:\n    try:\n        date(2020, month, 31)\n        return True\n    except ValueError:\n        return False\n\n\nif __name__ == \"__main__\":\n    assert has31_days(12) is False\n    assert has31_days(4) is True"
    },
    {
      "rank": 15,
      "score": 8.395272235752545,
      "candidate": "def is_month_31(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\ndef main():\n    month = int(input(\"Enter the month number: \"))\n    print(is_month_31(month))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 16,
      "score": 8.363577165557018,
      "candidate": "from functools import reduce\n\nMONTH_31 = [1, 3, 5, 7, 8, 10, 12]\n\n\ndef is_month_31(month):\n    return month in MONTH_31\n\n\ndef main():\n    month = int(input(\"Enter month number: \"))\n    result = is_month_31(month)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 17,
      "score": 8.36210173228669,
      "candidate": "from collections import defaultdict\n\nMONTHS = defaultdict(list)\n\n\ndef days_in_month(month):\n    \"\"\"Returns True if the given month number has 31 days.\"\"\"\n    if not MONTHS:\n        MONTHS[1] = 31\n        MONTHS[2] = 28\n        MONTHS[3] = 31\n        MONTHS[4] = 30\n        MONTHS[5] = 31\n        MONTHS[6] = 30\n        MONTHS[7] = 31\n        MONTHS[8] = 31\n        MONTHS[9] = 30\n        MONTHS[10] = 31\n        MONTHS[11] = 30\n        MONTHS[12] = 31\n    return MONTHS[month] == 31\n\n\nif __name__ == \"__main__\":\n    print(days_in_month(1))\n    print(days_in_month(2))"
    },
    {
      "rank": 18,
      "score": 8.34664119619469,
      "candidate": "from calendar import monthrange\n\n\ndef check_month(month):\n    return monthrange(2019, month)[1] == 31\n\n\nif __name__ == \"__main__\":\n    print(check_month(5))"
    },
    {
      "rank": 19,
      "score": 8.335607698606978,
      "candidate": "def has_thirty_one_days(month: int) -> bool:\n    return month in (1, 3, 5, 7, 8, 10, 12)"
    },
    {
      "rank": 20,
      "score": 8.333194801653367,
      "candidate": "from datetime import date\n\n\ndef is_31_days(month):\n    try:\n        date(2020, month, 31)\n        return True\n    except ValueError:\n        return False\n\n\nif __name__ == \"__main__\":\n    print(is_31_days(3))\n    print(is_31_days(2))"
    },
    {
      "rank": 21,
      "score": 8.330124072294156,
      "candidate": "from calendar import monthrange\n\n\ndef check_days(month):\n    if month == 2:\n        return False\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return True\n    else:\n        return False\n\n\ndef check_month(month):\n    if check_days(month):\n        return monthrange(2020, month)[1] == 31\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    print(check_month(12))"
    },
    {
      "rank": 22,
      "score": 8.293277160681555,
      "candidate": "def days(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    else:\n        return False\n\n\ndef main():\n    print(days(int(input(\"Enter month number: \"))))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 23,
      "score": 8.222325149363705,
      "candidate": "def days_in_month(month):\n    \"\"\"\n    :param month: int\n    :return: bool\n    \"\"\"\n    if month in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    elif month in [4, 6, 9, 11]:\n        return False\n    else:\n        return None\n\n\ndef main():\n    print(days_in_month(12))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 24,
      "score": 8.082211699616709,
      "candidate": "from calendar import monthrange\n\n\ndef days_in_month(month):\n    return monthrange(2020, month)[1]\n\n\ndef is_month_31_days(month):\n    return days_in_month(month) == 31\n\n\nif __name__ == \"__main__\":\n    print(is_month_31_days(5))\n    print(is_month_31_days(6))\n    print(is_month_31_days(7))"
    },
    {
      "rank": 25,
      "score": 3.926139092254469,
      "candidate": "from calendar import monthrange\n\n\ndef check_31_days(month: int) -> bool:\n    if month in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    if month in [4, 6, 9, 11]:\n        return False\n    return monthrange(2020, month)[1] == 31\n\n\nif __name__ == \"__main__\":\n    assert check_31_days(3) == True\n    assert check_31_days(2) == False\n    assert check_31_days(1) == True\n    assert check_31_days(4) == False\n    assert check_31_days(7) == True\n    assert check_31_days(8) == False\n    assert check_31_days(9) == False\n    assert check_31_days(10) == True\n    assert check_31_days(11) == True\n    assert check_31_days(12) == True"
    },
    {
      "rank": 26,
      "score": 3.782321827907003,
      "candidate": "# Time Complexity: O(1)\n# Space Complexity: O(1)\n# This solution is better than the one below\ndef is_month_has_31_days(month: int) -> bool:\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n# Time Complexity: O(1)\n# Space Complexity: O(1)\ndef is_month_has_31_days(month: int) -> bool:\n    return (month % 2 == 0 and month != 10) or month == 2"
    },
    {
      "rank": 27,
      "score": 3.7690182832329846,
      "candidate": "def check_days(month_number):\n    if month_number == 1 or month_number == 3 or month_number == 5 or month_number == 7 or month_number == 8 or month_number == 10 or month_number == 12:\n        print(\"This month has 31 days.\")\n    elif month_number == 4 or month_number == 6 or month_number == 9 or month_number == 11:\n        print(\"This month has 30 days.\")\n    elif month_number == 2:\n        print(\"This month has 28 or 29 days.\")\n    else:\n        print(\"Invalid month number.\")\n\ncheck_days(input())"
    },
    {
      "rank": 28,
      "score": 3.738947022370758,
      "candidate": "# Solution\ndef is_31_day_month(month):\n    return month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12\n\n# Tests\ndef is_31_day_month_test():\n    return (\n        is_31_day_month(1) == True\n        and is_31_day_month(2) == False\n        and is_31_day_month(3) == True\n        and is_31_day_month(4) == False\n        and is_31_day_month(5) == True\n        and is_31_day_month(6) == False\n        and is_31_day_month(7) == True\n        and is_31_day_month(8) == True\n        and is_31_day_month(9) == False\n        and is_31_day_month(10) == True\n        and is_31_day_month(11) == False\n        and is_31_day_month(12) == True\n    )\n\ndef main():\n    print(is_31_day_month_test())\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 29,
      "score": 3.732824384460777,
      "candidate": "def check_31_days(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\nif __name__ == \"__main__\":\n    assert check_31_days(1) == True\n    assert check_31_days(5) == True\n    assert check_31_days(8) == True\n    assert check_31_days(12) == True\n    assert check_31_days(4) == False\n    assert check_31_days(7) == False\n    assert check_31_days(11) == False"
    },
    {
      "rank": 30,
      "score": 3.6781200142854114,
      "candidate": "from datetime import date\n\n\ndef month_has_31(month):\n    \"\"\"\n    Check if the month has 31 days.\n    \"\"\"\n    return date(2019, month, 31).month == month\n\n\ndef test_month_has_31():\n    \"\"\"\n    >>> test_month_has_31()\n    True\n    \"\"\"\n    assert month_has_31(1)\n    assert month_has_31(3)\n    assert month_has_31(5)\n    assert month_has_31(7)\n    assert month_has_31(8)\n    assert month_has_31(10)\n    assert month_has_31(12)\n\n\ndef test_month_has_not_31():\n    \"\"\"\n    >>> test_month_has_not_31()\n    False\n    \"\"\"\n    assert not month_has_31(4)\n    assert not month_has_31(6)\n    assert not month_has_31(9)\n    assert not month_has_31(11)\n    assert not month_has_31(2)"
    },
    {
      "rank": 31,
      "score": 3.5285611131094576,
      "candidate": "from datetime import date\n\n\ndef is_month_31(month: int) -> bool:\n    \"\"\"Returns True if the month is 31 days else False.\n\n    Args:\n        month (int): The month number.\n\n    Returns:\n        bool: True if the month is 31 days else False.\n    \"\"\"\n    return date(2020, month, 31).replace(day=1).day == 1\n\n\nif __name__ == \"__main__\":\n    assert is_month_31(1) is True\n    assert is_month_31(2) is False"
    },
    {
      "rank": 32,
      "score": 3.501766448946012,
      "candidate": "def is_month_31(month_number):\n    \"\"\"\n    >>> is_month_31(1)\n    False\n    >>> is_month_31(2)\n    False\n    >>> is_month_31(3)\n    False\n    >>> is_month_31(4)\n    False\n    >>> is_month_31(5)\n    False\n    >>> is_month_31(6)\n    False\n    >>> is_month_31(7)\n    False\n    >>> is_month_31(8)\n    False\n    >>> is_month_31(9)\n    False\n    >>> is_month_31(10)\n    False\n    >>> is_month_31(11)\n    False\n    >>> is_month_31(12)\n    True\n    \"\"\"\n\n    return month_number in (1, 3, 5, 7, 8, 10, 12)\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 33,
      "score": 3.4843224952664444,
      "candidate": "def is_month_31_days(month: int) -> bool:\n    \"\"\"\n    >>> is_month_31_days(2)\n    False\n    >>> is_month_31_days(12)\n    True\n    \"\"\"\n    if month in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 34,
      "score": 3.4656400595580994,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days for each month.\n\n\"\"\"\ndef is_leap(year):\n    return year%4==0 and year%100!=0 or year%400==0\ndef daysInMonth(year,month):\n\tmonths=[0,31,28,31,30,31,30,31,31,30,31,30,31]\n\tif month in range(1,13):\n\t\tif month==2:\n\t\t\tif is_leap(year):\n\t\t\t\treturn 29\n\t\t\telse:\n\t\t\t\treturn 28\n\t\telse:\n\t\t\treturn months[month]\n\telse:\n\t\treturn \"Invalid Month\"\nprint daysInMonth(2012,2)\nprint daysInMonth(2012,3)"
    },
    {
      "rank": 35,
      "score": 3.4112724560515946,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days in a month.\n\n\"\"\"\nmonths = [31,28,31,30,31,30,31,31,30,31,30,31]\ndef is31days(month):\n    return months[month-1]==31\nprint is31days(5)"
    },
    {
      "rank": 36,
      "score": 3.410951252187612,
      "candidate": "def month_31(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\ndef main():\n    assert month_31(1) == True\n    assert month_31(2) == False\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 37,
      "score": 3.406262911197099,
      "candidate": "from calendar import monthrange\n\n\ndef is_month_has_31_days(month_number):\n    _, max_days = monthrange(2020, month_number)\n    return max_days == 31\n\n\ndef main():\n    assert is_month_has_31_days(1) is False\n    assert is_month_has_31_days(2) is False\n    assert is_month_has_31_days(3) is False\n    assert is_month_has_31_days(4) is False\n    assert is_month_has_31_days(5) is False\n    assert is_month_has_31_days(6) is False\n    assert is_month_has_31_days(7) is False\n    assert is_month_has_31_days(8) is False\n    assert is_month_has_31_days(9) is False\n    assert is_month_has_31_days(10) is False\n    assert is_month_has_31_days(11) is False\n    assert is_month_has_31_days(12) is False\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 38,
      "score": 3.3837173645764542,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nInput: 3\nOutput: true\n\"\"\"\ndef is31DayMonth(month):\n    return month in [4, 6, 9, 11]"
    },
    {
      "rank": 39,
      "score": 3.3692332899977053,
      "candidate": "def check_month(month_no):\n    if month_no in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    elif month_no in [4, 6, 9, 11]:\n        return False\n    else:\n        return None\n\n\nprint(check_month(5))\nprint(check_month(0))\nprint(check_month(2))"
    },
    {
      "rank": 40,
      "score": 3.3238442690503462,
      "candidate": "def is_month_31(month: int) -> bool:\n    \"\"\"Returns True if the month is 31 days long, otherwise False.\n\n    Args:\n        month (int): month number\n\n    Examples:\n        >>> assert is_month_31(1)\n        >>> assert not is_month_31(2)\n    \"\"\"\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n\ndef main():\n    assert not is_month_31(2)\n    assert is_month_31(1)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 41,
      "score": 3.305838144420434,
      "candidate": "# Time Complexity: O(1)\n# Space Complexity: O(1)\ndef is_month_has_31_days(month: int) -> bool:\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n\ndef main():\n    print(is_month_has_31_days(1))\n    print(is_month_has_31_days(3))\n    print(is_month_has_31_days(5))\n    print(is_month_has_31_days(7))\n    print(is_month_has_31_days(8))\n    print(is_month_has_31_days(10))\n    print(is_month_has_31_days(12))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 42,
      "score": 3.2712800217929825,
      "candidate": "def is_31_days(month: int) -> bool:\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n\nif __name__ == \"__main__\":\n    assert is_31_days(1) is True\n    assert is_31_days(3) is True\n    assert is_31_days(5) is True\n    assert is_31_days(7) is True\n    assert is_31_days(8) is True\n    assert is_31_days(10) is True\n    assert is_31_days(12) is True\n    assert is_31_days(2) is False\n    assert is_31_days(4) is False\n    assert is_31_days(6) is False\n    assert is_31_days(9) is False\n    assert is_31_days(11) is False\n    assert is_31_days(13) is False\n    assert is_31_days(14) is False"
    },
    {
      "rank": 43,
      "score": 3.256633716556678,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days in a month.\n\n\"\"\""
    },
    {
      "rank": 44,
      "score": 3.1878490091728358,
      "candidate": "from datetime import date\n\n\ndef check_days(month):\n    if month == 1:\n        return 31\n    elif month == 3:\n        return 31\n    elif month == 5:\n        return 31\n    elif month == 7:\n        return 31\n    elif month == 8:\n        return 31\n    elif month == 10:\n        return 31\n    elif month == 12:\n        return 31\n    else:\n        return 30\n\n\ndef check_month(month):\n    if month == 2:\n        return 28\n    else:\n        return check_days(month)\n\n\ndef is_31_days(year, month):\n    if date(year, month, check_month(month)) == date(year, month, check_month(month)):\n        print(\"It has 31 days\")\n    else:\n        print(\"It doesn't have 31 days\")\n\n\nis_31_days(2018, 1)\nis_31_days(2020, 1)"
    },
    {
      "rank": 45,
      "score": 3.180818012523817,
      "candidate": "# Solution\n\n\ndef month_31(month):\n    \"\"\"\n    Check if the given month number contains 31 days.\n    \"\"\"\n\n    # Create a dictionary with months and their number of days\n    months_31 = {\n        1: 31,\n        3: 31,\n        5: 31,\n        7: 31,\n        8: 31,\n        10: 31,\n        12: 31\n    }\n\n    # Check if the month exists in the dictionary\n    if month in months_31:\n        return months_31[month]\n    else:\n        return False\n\n\n# Tests\ndef test_function(test_case):\n    month = test_case[0]\n    solution = test_case[1]\n    output = month_31(month)\n\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function([1, True])\ntest_function([2, False])\ntest_function([3, True])\ntest_function([4, False])\ntest_function([5, True])\ntest_function([6, False])\ntest_function([7, True])\ntest_function([8, False])\ntest_function([9, False])\ntest_function([10, True])\ntest_function([11, False])\ntest_function([12, True])\ntest_function([13, False])\ntest_function([0, False])"
    },
    {
      "rank": 46,
      "score": 3.180697802754207,
      "candidate": "from datetime import date\n\n\ndef is_month_31_days(month_number: int) -> bool:\n    \"\"\"\n    >>> is_month_31_days(1)\n    True\n    >>> is_month_31_days(2)\n    False\n    >>> is_month_31_days(3)\n    True\n    \"\"\"\n    return bool(date(2021, month_number, 31).replace(day=1).day == 31)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 3.178556285755873,
      "candidate": "def is_month_31_days(month_no: int) -> bool:\n    \"\"\"\n    >>> is_month_31_days(1)\n    True\n    >>> is_month_31_days(2)\n    False\n    >>> is_month_31_days(12)\n    True\n    \"\"\"\n    return month_no in (1, 3, 5, 7, 8, 10, 12)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 48,
      "score": 3.1718091447842305,
      "candidate": "def is_month_31(month_num):\n    \"\"\"\n    :param month_num: int - number of the month since January\n    :return: bool - whether or not the month has 31 days\n\n    This function takes in a number from 1-12 and returns whether or not\n    that month has 31 days.\n    \"\"\"\n\n    if month_num == 1 or month_num == 3 or month_num == 5 or month_num == 7 or month_num == 8 or month_num == 10 or month_num == 12:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 49,
      "score": 3.165631715701782,
      "candidate": "def is_month_has_31_days(month):\n    month_31_days = [4, 6, 9, 11]\n\n    return month in month_31_days\n\n\ndef test_is_month_has_31_days():\n    \"\"\"\n    >>> test_is_month_has_31_days()\n    True\n    \"\"\"\n    assert is_month_has_31_days(4)\n\n\nif __name__ == \"__main__\":\n    is_month_has_31_days(4)"
    },
    {
      "rank": 50,
      "score": 3.1643755548298422,
      "candidate": "\"\"\"Question 17\nLevel 2\nQuestion:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days for each month.\n\n\"\"\"\nmonths = [31,28,31,30,31,30,31,31,30,31,30,31]\ndef is31days(month):\n    return months[month-1] == 31\n\nprint is31days(3)"
    },
    {
      "rank": 51,
      "score": 3.1620419846973977,
      "candidate": "def days_in_month(month_number: int) -> bool:\n    \"\"\"\n    >>> days_in_month(0)\n    True\n    >>> days_in_month(2)\n    False\n    \"\"\"\n    return month_number in [1, 3, 5, 7, 8, 10, 12]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 3.157123666297637,
      "candidate": "def check_days_in_month(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return \"31\"\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return \"30\"\n    elif month == 2:\n        return \"28 or 29\"\n    else:\n        return \"Invalid month number\"\n\n\ndef main():\n    print(check_days_in_month(int(input(\"Enter month number: \"))))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 53,
      "score": 3.148060138532288,
      "candidate": "from datetime import date\n\n\ndef is_month_31(month: int) -> bool:\n    \"\"\"\n    >>> is_month_31(2)\n    False\n    >>> is_month_31(3)\n    False\n    >>> is_month_31(5)\n    False\n    >>> is_month_31(7)\n    False\n    >>> is_month_31(8)\n    False\n    >>> is_month_31(10)\n    False\n    >>> is_month_31(12)\n    False\n    >>> is_month_31(4)\n    True\n    >>> is_month_31(6)\n    True\n    >>> is_month_31(9)\n    True\n    >>> is_month_31(11)\n    True\n    >>> is_month_31(1)\n    True\n    \"\"\"\n    month_list = [4, 6, 9, 11]\n    return month in month_list or (month == 1 and date.today().month == 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 3.104431797502378,
      "candidate": "def check_month_31(month_number):\n    months_31 = [4, 6, 9, 11]\n    return month_number in months_31\n\n\nif __name__ == '__main__':\n    print(check_month_31(4))"
    },
    {
      "rank": 55,
      "score": 3.0984306179345618,
      "candidate": "from datetime import date\n\n\ndef is_month_has_31_days(month: int) -> bool:\n    return date(2020, month, 31).replace(day=1).day == 1\n\n\nif __name__ == \"__main__\":\n    assert is_month_has_31_days(1) == True\n    assert is_month_has_31_days(2) == False"
    },
    {
      "rank": 56,
      "score": 3.085684140594985,
      "candidate": "def is_month_has_31_days(month_no):\n    return month_no in [1, 3, 5, 7, 8, 10, 12]\n\n\nif __name__ == \"__main__\":\n    assert is_month_has_31_days(1) == True\n    assert is_month_has_31_days(2) == False\n    assert is_month_has_31_days(3) == True\n    assert is_month_has_31_days(4) == False\n    assert is_month_has_31_days(5) == True\n    assert is_month_has_31_days(6) == False\n    assert is_month_has_31_days(7) == True\n    assert is_month_has_31_days(8) == True\n    assert is_month_has_31_days(9) == False\n    assert is_month_has_31_days(10) == True\n    assert is_month_has_31_days(11) == False\n    assert is_month_has_31_days(12) == True"
    },
    {
      "rank": 57,
      "score": 3.0485387746740202,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nExample:\nInput: 1\nOutput: True\n\"\"\"\ndef is31day(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]"
    },
    {
      "rank": 58,
      "score": 3.045880388267751,
      "candidate": "from datetime import date\n\n\n# This is the function from question\ndef check_month(month):\n    months = {\n        1: 31,\n        3: 31,\n        5: 31,\n        7: 31,\n        8: 31,\n        10: 31,\n        12: 31,\n        2: 28,\n        4: 30,\n        6: 30,\n        9: 30,\n        11: 30,\n    }\n\n    return months[month]\n\n\n# Driver code\nif __name__ == \"__main__\":\n    print(check_month(1))\n    print(check_month(3))"
    },
    {
      "rank": 59,
      "score": 3.043523534119086,
      "candidate": "def check_month(month):\n    if month in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    elif month in [4, 6, 9, 11]:\n        return False\n    else:\n        return None\n\n\nif __name__ == \"__main__\":\n    assert check_month(1) == True, \"Should be True\"\n    assert check_month(2) == None, \"Should be None\"\n    assert check_month(3) == True, \"Should be True\"\n    assert check_month(4) == False, \"Should be False\""
    },
    {
      "rank": 60,
      "score": 2.993251387631033,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days in a month.\n\n\"\"\"\nmonths_days = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\ndef is31days(month):\n    return months_days[month] == 31\n\nprint is31days(2)\nprint is31days(1)\nprint is31days(12)"
    },
    {
      "rank": 61,
      "score": 2.982086980445024,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nExample:\nInput: 1\nOutput: True\nInput: 2\nOutput: False\n\"\"\"\n\ndef is_month_31_days(month_num):\n    month_num = int(month_num)\n    return (month_num == 1 or month_num == 3 or month_num == 5 or month_num == 7 or month_num == 8 or month_num == 10 or month_num == 12)\n\ndef is_month_31_days_solution(month_num):\n    return month_num in [1, 3, 5, 7, 8, 10, 12]"
    },
    {
      "rank": 62,
      "score": 2.94217585880588,
      "candidate": "def has_31_days(month):\n    if month in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    if month in (4, 6, 9, 11):\n        return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert has_31_days(1) is True\n    assert has_31_days(2) is False\n    assert has_31_days(3) is True\n    assert has_31_days(4) is False\n    assert has_31_days(5) is True\n    assert has_31_days(6) is False\n    assert has_31_days(7) is True\n    assert has_31_days(8) is False\n    assert has_31_days(9) is True\n    assert has_31_days(10) is False\n    assert has_31_days(11) is True\n    assert has_31_days(12) is False"
    },
    {
      "rank": 63,
      "score": 2.930867849414408,
      "candidate": "def check_month(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    elif month == 2:\n        return False\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return True\n    else:\n        return False\n\nprint(check_month(1))\nprint(check_month(2))\nprint(check_month(3))\nprint(check_month(12))"
    },
    {
      "rank": 64,
      "score": 2.9071705116680913,
      "candidate": "def is_31_days(month_no):\n    if month_no in [1, 3, 5, 7, 8, 10, 12]:\n        return True\n    return False\n\n\ndef main():\n    print(is_31_days(1))\n    print(is_31_days(2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 65,
      "score": 2.890164056081244,
      "candidate": "def check_month(month):\n    return month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12\n\n\ndef check_month_2(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\nprint(check_month(5))\nprint(check_month_2(5))"
    },
    {
      "rank": 66,
      "score": 2.8829315215254097,
      "candidate": "def is_month_31(month_number):\n    return month_number in (1, 3, 5, 7, 8, 10, 12)\n\n\ndef test_is_month_31():\n    \"\"\"\n    >>> test_is_month_31()\n    \"\"\"\n    assert is_month_31(1)\n    assert is_month_31(3)\n    assert is_month_31(5)\n    assert is_month_31(7)\n    assert is_month_31(8)\n    assert is_month_31(10)\n    assert is_month_31(12)\n    assert not is_month_31(2)\n    assert not is_month_31(4)\n    assert not is_month_31(6)\n    assert not is_month_31(9)\n    assert not is_month_31(11)\n    assert not is_month_31(13)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod(verbose=True)"
    },
    {
      "rank": 67,
      "score": 2.8541531251033616,
      "candidate": "def is_month_31(month: int) -> bool:\n    \"\"\"\n    >>> is_month_31(1)\n    False\n    >>> is_month_31(2)\n    False\n    >>> is_month_31(3)\n    False\n    >>> is_month_31(4)\n    False\n    >>> is_month_31(5)\n    False\n    >>> is_month_31(6)\n    False\n    >>> is_month_31(7)\n    False\n    >>> is_month_31(8)\n    False\n    >>> is_month_31(9)\n    False\n    >>> is_month_31(10)\n    False\n    >>> is_month_31(11)\n    False\n    >>> is_month_31(12)\n    True\n    >>> is_month_31(13)\n    False\n    >>> is_month_31(14)\n    False\n    \"\"\"\n    return month % 2 == 0 and 1 <= month <= 12\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 68,
      "score": 2.8504963247670663,
      "candidate": "def is_month_31(month):\n    return month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12\n\n\ndef is_month_30(month):\n    return month == 4 or month == 6 or month == 9 or month == 11\n\n\ndef is_leap_year(year):\n    return year % 400 == 0 or (year % 4 == 0 and year % 100 != 0)\n\n\ndef check_month(month, year):\n    if is_month_31(month):\n        return True\n    if is_month_30(month):\n        return True\n    if is_leap_year(year) and month == 2:\n        return True\n    return False\n\n\ndef main():\n    print(\"May has 31 days: \" + str(check_month(5, 2021)))\n    print(\"February has 28 days: \" + str(check_month(2, 2021)))\n    print(\"June has 30 days: \" + str(check_month(6, 2021)))\n\n\nmain()"
    },
    {
      "rank": 69,
      "score": 2.8494481522053556,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days in a month.\n\n\"\"\"\ndef is31day(month):\n    lst=[0,31,28,31,30,31,30,31,31,30,31,30,31]\n    return lst[month]==31\nprint is31day(7)"
    },
    {
      "rank": 70,
      "score": 2.8453938120743927,
      "candidate": "def check_month(month_number):\n    if month_number == 1 or month_number == 3 or month_number == 5 or month_number == 7 or month_number == 8 or month_number == 10 or month_number == 12:\n        return True\n    else:\n        return False\n\n\ndef check_leap_year(year):\n    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:\n        return True\n    else:\n        return False\n\n\ndef check_days(month_number, year):\n    if check_month(month_number) and month_number != 2:\n        return True\n    elif check_month(month_number) and check_leap_year(year):\n        return True\n    else:\n        return False\n\n\ndef main():\n    print(check_days(2, 2020))\n    print(check_days(2, 2021))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 71,
      "score": 2.836168926701116,
      "candidate": "def check_31_days(month: int) -> bool:\n    \"\"\"\n    >>> check_31_days(1)\n    True\n    >>> check_31_days(3)\n    False\n    \"\"\"\n    months_31_days = (1, 3, 5, 7, 8, 10, 12)\n    return month in months_31_days\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 72,
      "score": 2.769680614520106,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the months having 31 days. Use list.count() to find the number of occurences of a element.\n\n\"\"\"\nmonths= [1,3,5,7,8,10,12]\ndef is31days(month):\n    return months.count(month)\nprint is31days(5)"
    },
    {
      "rank": 73,
      "score": 2.768291153593769,
      "candidate": "def check_31_days(month_no: int) -> bool:\n    \"\"\"\n    >>> check_31_days(2)\n    False\n    >>> check_31_days(4)\n    False\n    >>> check_31_days(6)\n    False\n    >>> check_31_days(9)\n    False\n    >>> check_31_days(11)\n    False\n    >>> check_31_days(5)\n    True\n    >>> check_31_days(7)\n    True\n    >>> check_31_days(10)\n    True\n    >>> check_31_days(12)\n    True\n    \"\"\"\n    return (month_no % 2 == 0 and month_no % 8 != 0) or month_no % 30 == 0\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 74,
      "score": 2.765262807032524,
      "candidate": "def is_month_31_days(month: int) -> bool:\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n\nif __name__ == \"__main__\":\n    assert is_month_31_days(1) is True\n    assert is_month_31_days(2) is False\n    assert is_month_31_days(3) is True\n    assert is_month_31_days(4) is False\n    assert is_month_31_days(5) is True\n    assert is_month_31_days(6) is False\n    assert is_month_31_days(7) is True\n    assert is_month_31_days(8) is True\n    assert is_month_31_days(9) is False\n    assert is_month_31_days(10) is True\n    assert is_month_31_days(11) is False\n    assert is_month_31_days(12) is True"
    },
    {
      "rank": 75,
      "score": 2.760412881077355,
      "candidate": "def is_month_has_31(month_num: int) -> bool:\n    \"\"\"\n    >>> is_month_has_31(1)\n    True\n    >>> is_month_has_31(0)\n    False\n    >>> is_month_has_31(13)\n    False\n    \"\"\"\n    return month_num in (1, 3, 5, 7, 8, 10, 12)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 76,
      "score": 2.749121478207732,
      "candidate": "def is_month_31_days(month: int) -> bool:\n    if month in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    elif month in (4, 6, 9, 11):\n        return False\n    else:\n        raise ValueError(\"Invalid month number\")\n\n\nif __name__ == \"__main__\":\n    assert is_month_31_days(1) is True\n    assert is_month_31_days(3) is True\n    assert is_month_31_days(5) is True\n    assert is_month_31_days(7) is True\n    assert is_month_31_days(8) is True\n    assert is_month_31_days(10) is True\n    assert is_month_31_days(12) is True\n    assert is_month_31_days(4) is False\n    assert is_month_31_days(6) is False\n    assert is_month_31_days(9) is False\n    assert is_month_31_days(11) is False"
    },
    {
      "rank": 77,
      "score": 2.718856235379514,
      "candidate": "def days_in_month(month_num):\n    if month_num == 1 or month_num == 3 or month_num == 5 or month_num == 7 or month_num == 8 or month_num == 10 or month_num == 12:\n        return True\n    else:\n        return False\n\nprint(days_in_month(1))"
    },
    {
      "rank": 78,
      "score": 2.6996806550405976,
      "candidate": "def check_month(month_no):\n    if month_no in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    elif month_no in (4, 6, 9, 11):\n        return False\n    else:\n        return \"Invalid month\"\n\n\nprint(check_month(12))"
    },
    {
      "rank": 79,
      "score": 2.6991466938853015,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days for each month.\n\n\"\"\""
    },
    {
      "rank": 80,
      "score": 2.677440122697438,
      "candidate": "def days_in_month(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return 31\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return 30\n    elif month == 2:\n        return 28\n\n\nif __name__ == \"__main__\":\n    print(days_in_month(2))"
    },
    {
      "rank": 81,
      "score": 2.6615389998470205,
      "candidate": "# Solution\ndef is_month_has_31_days(month):\n    \"\"\"\n    Check if a month has 31 days.\n\n    Args:\n       month(int): Month number\n    Returns:\n       bool: True if month has 31 days else False\n    \"\"\"\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    elif month == 4 or month == 6 or month == 9 or month == 11:\n        return False\n    elif month > 12 or month < 1:\n        return \"Invalid month number\"\n\n\n# Test cases\nprint(is_month_has_31_days(1))\nprint(is_month_has_31_days(2))\nprint(is_month_has_31_days(3))\nprint(is_month_has_31_days(4))\nprint(is_month_has_31_days(5))\nprint(is_month_has_31_days(6))\nprint(is_month_has_31_days(7))\nprint(is_month_has_31_days(8))\nprint(is_month_has_31_days(9))\nprint(is_month_has_31_days(10))\nprint(is_month_has_31_days(11))\nprint(is_month_has_31_days(12))\nprint(is_month_has_31_days(13))\nprint(is_month_has_31_days(0))"
    },
    {
      "rank": 82,
      "score": 2.648973453061324,
      "candidate": "def month_31(month):\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n\ndef test_month_31():\n    assert month_31(1)\n    assert month_31(3)\n    assert month_31(5)\n    assert month_31(7)\n    assert month_31(8)\n    assert month_31(10)\n    assert month_31(12)\n    assert not month_31(2)\n    assert not month_31(4)\n    assert not month_31(6)\n    assert not month_31(9)\n    assert not month_31(11)\n    assert not month_31(13)\n    assert not month_31(14)"
    },
    {
      "rank": 83,
      "score": 2.5957531985534064,
      "candidate": "from enum import Enum\n\n\nclass Month(Enum):\n    \"\"\"Month enum class.\"\"\"\n\n    JANUARY = 1\n    FEBRUARY = 2\n    MARCH = 3\n    APRIL = 4\n    MAY = 5\n    JUNE = 6\n    JULY = 7\n    AUGUST = 8\n    SEPTEMBER = 9\n    OCTOBER = 10\n    NOVEMBER = 11\n    DECEMBER = 12\n\n\ndef has_31_days(month: int) -> bool:\n    \"\"\"Return True if month has 31 days.\n\n    >>> has_31_days(1)\n    False\n    >>> has_31_days(2)\n    False\n    >>> has_31_days(3)\n    False\n    >>> has_31_days(4)\n    False\n    >>> has_31_days(5)\n    False\n    >>> has_31_days(6)\n    False\n    >>> has_31_days(7)\n    False\n    >>> has_31_days(8)\n    False\n    >>> has_31_days(9)\n    False\n    >>> has_31_days(10)\n    False\n    >>> has_31_days(11)\n    False\n    >>> has_31_days(12)\n    True\n    \"\"\"\n    months = [\n        Month.JANUARY,\n        Month.MARCH,\n        Month.MAY,\n        Month.JULY,\n        Month.AUGUST,\n        Month.OCTOBER,\n        Month.DECEMBER,\n    ]\n    return month in months\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 84,
      "score": 2.580391238388681,
      "candidate": "def check_31(month):\n    month_list = [1, 3, 5, 7, 8, 10, 12]\n    if month in month_list:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(check_31(1))\n    print(check_31(2))"
    },
    {
      "rank": 85,
      "score": 2.5459879622393946,
      "candidate": "def is_month_31(month: int) -> bool:\n    \"\"\"\n    >>> is_month_31(1)\n    False\n    >>> is_month_31(12)\n    True\n    >>> is_month_31(0)\n    Traceback (most recent call last):\n        ...\n    ValueError: Month must be between 1 and 12\n    >>> is_month_31(13)\n    Traceback (most recent call last):\n        ...\n    ValueError: Month must be between 1 and 12\n    >>> is_month_31(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: Month must be between 1 and 12\n    \"\"\"\n    if month in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    if month in (4, 6, 9, 11):\n        return False\n    if 1 <= month <= 12:\n        raise ValueError(\"Month must be between 1 and 12\")\n    raise ValueError(\"Month must be between 1 and 12\")\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 2.493584439832788,
      "candidate": "# My Solution\n\n\ndef month_check(month_num):\n    months = {1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30, 10: 31, 11: 30, 12: 31}\n    return months[month_num]\n\n\ndef is_month_has_31(month_number):\n    return month_check(month_number) == 31\n\n\ndef main():\n    month_number = int(input(\"Enter a month number: \"))\n    result = is_month_has_31(month_number)\n    if result:\n        print(\"This month has 31 days.\")\n    else:\n        print(\"This month does not have 31 days.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 87,
      "score": 2.446832512996986,
      "candidate": "def check_month(month: int) -> bool:\n    return month in (1, 3, 5, 7, 8, 10, 12)\n\n\nif __name__ == \"__main__\":\n    assert check_month(1) is True\n    assert check_month(11) is False"
    },
    {
      "rank": 88,
      "score": 2.4245032112888487,
      "candidate": "def is_month_31(month: int) -> bool:\n    \"\"\"Returns True if the month has 31 days, otherwise False.\n\n    >>> is_month_31(1)\n    False\n    >>> is_month_31(2)\n    False\n    >>> is_month_31(3)\n    False\n    >>> is_month_31(4)\n    False\n    >>> is_month_31(5)\n    False\n    >>> is_month_31(6)\n    False\n    >>> is_month_31(7)\n    False\n    >>> is_month_31(8)\n    False\n    >>> is_month_31(9)\n    False\n    >>> is_month_31(10)\n    False\n    >>> is_month_31(11)\n    False\n    >>> is_month_31(12)\n    True\n    >>> is_month_31(13)\n    False\n    >>> is_month_31(14)\n    False\n    >>> is_month_31(0)\n    False\n    \"\"\"\n    if 1 <= month <= 12:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 89,
      "score": 2.4018966879596646,
      "candidate": "\"\"\"Question:\nWrite a function to check whether the given month number contains 31 days or not.\nHints:\nUse list to store the number of days in 31 days of the month.\n\n\"\"\"\nmonths=[0,31,28,31,30,31,30,31,31,30,31,30,31]\ndef has31(month):\n\tif months[month] == 31:\n\t\treturn True\n\telse:\n\t\treturn False\nprint has31(1)\nprint has31(5)\nprint has31(12)"
    },
    {
      "rank": 90,
      "score": 2.389578175014489,
      "candidate": "from datetime import date\n\n\n# My solution\n\n\ndef is_31_days(month: int) -> bool:\n    if month in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    elif month in (4, 6, 9, 11):\n        return False\n    else:\n        raise ValueError(\"Month must be in range 1-12.\")\n\n\n# Best way\ndef is_31_days_best(month: int) -> bool:\n    return month in {1, 3, 5, 7, 8, 10, 12}\n\n\n# Some test cases\nassert is_31_days(3) is True\nassert is_31_days(2) is False\nassert is_31_days(4) is False\n\nassert is_31_days_best(3) is True\nassert is_31_days_best(2) is False\nassert is_31_days_best(4) is False"
    },
    {
      "rank": 91,
      "score": 2.3359069755507846,
      "candidate": "def is_month_31(month):\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\nif __name__ == \"__main__\":\n    assert is_month_31(5) is True\n    assert is_month_31(2) is False"
    },
    {
      "rank": 92,
      "score": 2.293848149332354,
      "candidate": "from datetime import date\n\ndef is_month_with_31_days(month_number):\n    \"\"\"\n    Return True if the given month number contains 31 days,\n    False otherwise.\n    \"\"\"\n    # month_number must be an int\n    assert isinstance(month_number, int)\n\n    # month_number must be a positive integer\n    assert month_number >= 1\n\n    # month_number must be a positive integer\n    assert month_number <= 12\n\n    # construct a date object for the given month number\n    year = 2019\n    month = month_number\n    day = 1\n\n    month_date = date(year, month, day)\n\n    # check if the month has 31 days\n    if month_date.day == 31:\n        return True\n\n    return False\n\n\nif __name__ == '__main__':\n    # test your fucntion with this main function\n    # the results should be False, True, False, True\n    print(is_month_with_31_days(1))\n    print(is_month_with_31_days(2))\n    print(is_month_with_31_days(3))\n    print(is_month_with_31_days(4))"
    },
    {
      "rank": 93,
      "score": 2.287625906893272,
      "candidate": "def check_month(month):\n    return month == 2 or month == 4 or month == 6 or month == 9 or month == 11 or month == 12\n\n\ndef check_month_with_list(month):\n    return month in [2, 4, 6, 9, 11, 12]"
    },
    {
      "rank": 94,
      "score": 2.2682425259339407,
      "candidate": "def days(month: int) -> bool:\n    \"\"\"\n    >>> days(2)\n    True\n    >>> days(4)\n    False\n    \"\"\"\n    month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n    return month_days[month - 1] == 31\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 2.260739004816286,
      "candidate": "def is_31_days(month):\n    if month in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    elif month in (4, 6, 9, 11):\n        return False\n    elif month == 2:\n        return True\n    else:\n        return False\n\nprint(is_31_days(2))"
    },
    {
      "rank": 96,
      "score": 2.118479922318633,
      "candidate": "def is_31_days(month: int) -> bool:\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\ndef test() -> None:\n    print(is_31_days(1))\n    print(is_31_days(3))\n    print(is_31_days(5))\n    print(is_31_days(7))\n    print(is_31_days(8))\n    print(is_31_days(10))\n    print(is_31_days(12))\n    print(is_31_days(2))\n    print(is_31_days(4))\n    print(is_31_days(6))\n    print(is_31_days(9))\n    print(is_31_days(11))\n\n\nif __name__ == \"__main__\":\n    test()"
    },
    {
      "rank": 97,
      "score": 2.043359877671101,
      "candidate": "def is_month_31(month):\n    if month == 1 or month == 3 or month == 5 or month == 7 or month == 8 or month == 10 or month == 12:\n        return True\n    else:\n        return False\n\n\ndef main():\n    print(is_month_31(5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 98,
      "score": 2.020164938060112,
      "candidate": "def is_month_31(month_number):\n    \"\"\"\n    Check whether the given month number contains 31 days or not.\n\n    >>> is_month_31(1)\n    False\n    >>> is_month_31(2)\n    False\n    >>> is_month_31(3)\n    False\n    >>> is_month_31(4)\n    False\n    >>> is_month_31(5)\n    False\n    >>> is_month_31(6)\n    False\n    >>> is_month_31(7)\n    False\n    >>> is_month_31(8)\n    False\n    >>> is_month_31(9)\n    False\n    >>> is_month_31(10)\n    False\n    >>> is_month_31(11)\n    False\n    >>> is_month_31(12)\n    True\n    \"\"\"\n    if month_number in (4, 6, 9, 11):\n        return False\n    return True\n\n\ndef main():\n    from doctest import testmod\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 99,
      "score": 2.006215542699554,
      "candidate": "def check_month(month: int) -> bool:\n    return month in [1, 3, 5, 7, 8, 10, 12]\n\n\nif __name__ == \"__main__\":\n    assert check_month(1) == True\n    assert check_month(2) == False\n    assert check_month(3) == True\n    assert check_month(4) == False\n    assert check_month(5) == True\n    assert check_month(6) == False\n    assert check_month(7) == True\n    assert check_month(8) == False\n    assert check_month(9) == False\n    assert check_month(10) == True\n    assert check_month(11) == False\n    assert check_month(12) == True"
    },
    {
      "rank": 100,
      "score": 1.6901274479551278,
      "candidate": "def month_31_days(month_num):\n    if month_num in (1, 3, 5, 7, 8, 10, 12):\n        return True\n    elif month_num in (4, 6, 9, 11):\n        return False\n    else:\n        raise ValueError(\"Please enter a valid month number\")\n\n\nif __name__ == \"__main__\":\n    print(month_31_days(1))\n    print(month_31_days(12))\n    print(month_31_days(6))"
    }
  ]
}