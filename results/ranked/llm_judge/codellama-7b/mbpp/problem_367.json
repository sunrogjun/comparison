{
  "timestamp": "2025-09-15T01:05:03.913482",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 367,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def shift(arr):\n    arr.insert(0, arr.pop())\n    return arr"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def shift_last_element_first(l):\n    l.insert(0, l[-1])\n    del l[-1]\n    return l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(shift_last_element_first(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def shift_last_element_to_first_position(a):\n    return a[len(a)-1:] + a[:len(a)-1]\n\n\ndef main():\n    a = list(map(int, input(\"Enter a list: \").split()))\n    print(\"After shifting last element to first position:\")\n    print(shift_last_element_to_first_position(a))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def first_to_last(li):\n    last = li.pop(-1)\n    li.insert(0, last)\n    return li\n\nprint(first_to_last([1,2,3,4,5]))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def last_first(lst):\n    return lst[-1] + lst[:-1]\n\n\nprint(last_first([1, 2, 3, 4, 5]))\nprint(last_first([1, 2, 3, 4, 5, 6]))\nprint(last_first([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def shift(lst):\n    return [lst[-1]] + lst[:-1]\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5]\n    print(f\"The list is {lst}\")\n    print(f\"The shifted list is {shift(lst)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def shift_last_element_to_first_position(l):\n    last_element = l.pop()\n    l.insert(0, last_element)\n    return l\n\n\ndef main():\n    l = [2, 4, 6, 8]\n    print(shift_last_element_to_first_position(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def shift(a):\n    b = a[-1]\n    a.pop(-1)\n    a.insert(0, b)\n\n\na = [1, 2, 3, 4, 5]\nshift(a)\nprint(a)"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def shift_last_to_first_position(input_list):\n    last_element = input_list.pop()\n    input_list.insert(0, last_element)\n    return input_list\n\n\ndef main():\n    print(shift_last_to_first_position([1, 2, 3, 4, 5, 6, 7, 8, 9]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def shift(list):\n    last = list[-1]\n    list.pop()\n    list.insert(0, last)\n    return list\n\n\na = [1, 2, 3, 4, 5]\nprint(shift(a))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def shift(list):\n    last = list[-1]\n    del list[-1]\n    list.insert(0, last)\n    return list\n\n\na = [1,2,3,4]\nprint(shift(a))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def shift_last_elem_to_first(list):\n    last_elem = list[-1]\n    del list[-1]\n    list.insert(0, last_elem)\n\n\ndef main():\n    list = [1, 2, 3, 4, 5, 6, 7, 8]\n    shift_last_elem_to_first(list)\n    print(list)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def shift_last_element_to_first_position(nums):\n    last_element = nums.pop()\n    nums.insert(0, last_element)\n\n\ndef main():\n    nums = [10, 20, 30, 40, 50]\n    shift_last_element_to_first_position(nums)\n    print(nums)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 9.234050852198141,
      "candidate": "def last_to_first(l):\n    l.insert(0, l.pop(-1))\n    return l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(last_to_first(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 9.226766272351448,
      "candidate": "def shift_first(arr):\n    n = len(arr)\n    if n == 0:\n        return arr\n    return [arr[n-1]] + arr[:n-1]\n\n\narr = [1, 2, 3, 4, 5]\nprint(shift_first(arr))"
    },
    {
      "rank": 16,
      "score": 9.21346272767743,
      "candidate": "def shift_last_element_to_first_position(input_list):\n    last_element = input_list.pop(-1)\n    input_list.insert(0, last_element)\n    return input_list\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5, 6]\n    print(\"Input list: \" + str(list1))\n    print(\"After shifting last element to first position: \" + str(shift_last_element_to_first_position(list1)))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 17,
      "score": 9.183391466815202,
      "candidate": "def shift_last_element_to_first(l):\n    first = l[0]\n    for i in range(len(l) - 1):\n        l[i] = l[i+1]\n    l[len(l)-1] = first\n    return l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(shift_last_element_to_first(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 18,
      "score": 9.177268828905222,
      "candidate": "def shift_first(l: list) -> list:\n    \"\"\"Shift last element to first position in the given list.\n    \"\"\"\n    return l[1:] + l[:1]\n\n\nif __name__ == \"__main__\":\n    assert shift_first([1, 2, 3, 4, 5]) == [5, 2, 3, 4, 1]"
    },
    {
      "rank": 19,
      "score": 9.122564458729856,
      "candidate": "def move_last_to_front(l):\n    last = l[-1]\n    l.pop(-1)\n    l.insert(0, last)\n    return l\n\nprint(move_last_to_front([1, 2, 3, 4]))\nprint(move_last_to_front([\"python\", \"is\", \"awesome\"]))"
    },
    {
      "rank": 20,
      "score": 8.973005557553902,
      "candidate": "def shift_last_element_to_first_position(list):\n    last_element = list[-1]\n    list.remove(last_element)\n    list.insert(0, last_element)\n    return list\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5]\n    print(\"Initial list is {}\".format(list1))\n    print(\"Shifted list is {}\".format(shift_last_element_to_first_position(list1)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 21,
      "score": 8.95994420569242,
      "candidate": "def shift_last_element_to_first_position(lst):\n    last_element = lst.pop()\n    lst.insert(0, last_element)\n    return lst\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6]\n    print(shift_last_element_to_first_position(lst))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 22,
      "score": 8.946210893390457,
      "candidate": "def shift_first(list1):\n    last = list1.pop()\n    list1.insert(0, last)\n    return list1\n\nprint(shift_first([1,2,3,4,5]))"
    },
    {
      "rank": 23,
      "score": 8.932217008005624,
      "candidate": "def shift_first(a):\n    a.insert(0, a.pop())\n    return a\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(shift_first(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 24,
      "score": 8.850707355641543,
      "candidate": "def reverse_list(nums):\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(1)\n    \"\"\"\n    nums.append(nums.pop(0))\n    return nums\n\n\ndef main():\n    nums = [1, 2, 3, 4, 5]\n    print(reverse_list(nums))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 25,
      "score": 8.8281618090209,
      "candidate": "def shift_last_to_first(alist):\n    last_element = alist[-1]\n    alist.pop()\n    alist.insert(0, last_element)\n\n\ndef main():\n    alist = [1, 2, 3, 4, 5]\n    shift_last_to_first(alist)\n    print(alist)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 26,
      "score": 8.81367773444215,
      "candidate": "def last_to_first(a_list):\n    first = a_list[0]\n    for i in range(len(a_list) - 1):\n        a_list[i] = a_list[i + 1]\n    a_list[-1] = first\n    return a_list\n\n\ndef last_to_first_two(a_list):\n    return a_list[-1:] + a_list[:-1]\n\n\ndef main():\n    list_a = [1, 2, 3, 4, 5]\n    print(last_to_first(list_a))\n    print(last_to_first_two(list_a))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 27,
      "score": 8.76828871349479,
      "candidate": "def shift_last_to_first(test_list):\n    last_element = test_list[-1]\n    del test_list[-1]\n    test_list.insert(0, last_element)\n    return test_list\n\n\nprint(shift_last_to_first([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 28,
      "score": 8.750282588864879,
      "candidate": "def last_to_first(alist):\n    last_element = alist[-1]\n    alist.pop(-1)\n    alist.insert(0, last_element)\n    return alist\n\n\nprint(last_to_first([1,2,3,4,5]))"
    },
    {
      "rank": 29,
      "score": 8.715724466237427,
      "candidate": "def move_last_to_first(input_list):\n    return input_list[len(input_list) - 1:] + input_list[:len(input_list) - 1]\n\n\ndef main():\n    print(\"The list after moving last element to first position:\")\n    print(move_last_to_first([1, 2, 3, 4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 30,
      "score": 8.632293453617281,
      "candidate": "def last_to_first(data):\n    last_element = data[-1]\n    data.pop(-1)\n    data.insert(0, last_element)\n\n\ndef last_to_first_without_extra_space(data):\n    data[0], data[1] = data[1], data[0]\n\n\nif __name__ == \"__main__\":\n    data = [1, 2, 3, 4, 5]\n    print(\"Before: \", data)\n    last_to_first(data)\n    print(\"After: \", data)"
    },
    {
      "rank": 31,
      "score": 8.625262456968262,
      "candidate": "def shift_last_first(l):\n    last = l[-1]\n    del l[-1]\n    l.insert(0, last)\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    shift_last_first(l)\n    print(l)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 32,
      "score": 8.625142247198651,
      "candidate": "def shift_first(input_list):\n    return input_list[len(input_list)-1:] + input_list[:len(input_list)-1]\n\n\nprint(shift_first([1, 2, 3, 4, 5, 6]))\nprint(shift_first([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]))"
    },
    {
      "rank": 33,
      "score": 8.616253589228675,
      "candidate": "def shift_first(my_list):\n    last = my_list.pop()\n    my_list.insert(0, last)\n    return my_list\n\n\ndef main():\n    my_list = [1, 2, 3, 4, 5]\n    print(\"Original list: \", my_list)\n    print(\"After shifting: \", shift_first(my_list))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 34,
      "score": 8.610076160146226,
      "candidate": "def shift_last_elem_to_first_pos(list_in: list) -> list:\n    \"\"\"Shift last element to first position in given list.\n\n    Args:\n        list_in (list): list to shift last element to first position\n\n    Returns:\n        list: list with shifted last element to first position\n    \"\"\"\n    last_elem = list_in.pop()\n    list_in.insert(0, last_elem)\n    return list_in\n\n\nif __name__ == \"__main__\":\n    list_to_shift = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(f\"Original list: {list_to_shift}\")\n    print(f\"Shifted list: {shift_last_elem_to_first_pos(list_to_shift)}\")"
    },
    {
      "rank": 35,
      "score": 8.60156811074208,
      "candidate": "def moveLastToFirst(l):\n    return l[-1:] + l[:-1]\n\n\nif __name__ == '__main__':\n    l = [1, 2, 3, 4]\n    print(moveLastToFirst(l))"
    },
    {
      "rank": 36,
      "score": 8.565425580227462,
      "candidate": "def shift_last_element(arr):\n    arr.append(arr[0])\n    arr.pop(0)\n    return arr\n\n\ndef main():\n    print(\"The array is :\", a)\n    print(\"The array after shifting is :\", shift_last_element(a))\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4, 5]\n    main()"
    },
    {
      "rank": 37,
      "score": 8.542875062379007,
      "candidate": "def move_last_element_to_first(mylist):\n    if len(mylist) < 1:\n        return mylist\n    else:\n        last_element = mylist.pop()\n        mylist.insert(0, last_element)\n    return mylist\n\n\ndef main():\n    mylist = [1, 2, 3, 4, 5, 6]\n    print(f\"mylist : {mylist}\")\n    print(f\"move_last_element_to_first : {move_last_element_to_first(mylist)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 38,
      "score": 8.53012858503943,
      "candidate": "def last_to_first(lst):\n    return lst[-1:] + lst[:-1]\n\n\ndef main():\n    print(last_to_first([1, 2, 3, 4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 39,
      "score": 8.499905739299377,
      "candidate": "def shift(input_list):\n    last_element = input_list.pop()\n    input_list.insert(0, last_element)\n    return input_list\n\nprint(shift([1, 2, 3, 4, 5]))\nprint(shift([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 40,
      "score": 8.478208546788407,
      "candidate": "def last_to_first(l):\n    l.insert(0, l.pop())\n    return l\n\nprint(last_to_first([1, 2, 3, 4]))\nprint(last_to_first([1, 2, 3, 4, 5]))\nprint(last_to_first([1, 2, 3]))\nprint(last_to_first([]))"
    },
    {
      "rank": 41,
      "score": 8.437695832075478,
      "candidate": "def shift_last_to_first(alist):\n    if len(alist) == 0:\n        return alist\n    last_element = alist.pop()\n    alist.insert(0, last_element)\n    return alist\n\n\nif __name__ == \"__main__\":\n    alist = [1, 2, 3, 4, 5]\n    print(shift_last_to_first(alist))\n    alist = []\n    print(shift_last_to_first(alist))"
    },
    {
      "rank": 42,
      "score": 8.426531424889468,
      "candidate": "def shift_list(l):\n    return l[len(l)-1:] + l[:len(l)-1]\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(shift_list(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 43,
      "score": 8.408439383654278,
      "candidate": "def shift_last_to_first(arr):\n    first_element = arr[0]\n    for i in range(len(arr) - 1):\n        arr[i] = arr[i + 1]\n    arr[-1] = first_element\n    return arr\n\n\ndef main():\n    arr_input = [int(num) for num in input(\"Enter numbers separated by space: \").split()]\n    result = shift_last_to_first(arr_input)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 44,
      "score": 8.386620303250325,
      "candidate": "def shift_first(nums):\n    last = nums.pop()\n    nums.insert(0, last)\n    return nums\n\nprint(shift_first([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 45,
      "score": 8.375312293858853,
      "candidate": "def shift_first(l):\n    return l[-1:] + l[:-1]\n\ndef main():\n    l = [1,2,3,4,5]\n    print(\"Original list is {}\".format(l))\n    print(\"Shifted list is {}\".format(shift_first(l)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 46,
      "score": 8.351614956112536,
      "candidate": "def shift_last_to_first(li):\n    last = li[-1]\n    li.pop()\n    li.insert(0, last)\n    return li\n\n\nprint(shift_last_to_first([1, 2, 3, 4, 5]))\nprint(shift_last_to_first([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 47,
      "score": 8.334608500525688,
      "candidate": "def shift(arr):\n    last = arr[-1]\n    arr.pop(-1)\n    arr.insert(0, last)\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5]\n    print(arr)\n    shift(arr)\n    print(arr)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 48,
      "score": 8.327375965969855,
      "candidate": "def shift_list(list_a):\n    last_element = list_a[-1]\n    list_a.remove(last_element)\n    list_a.insert(0, last_element)\n    return list_a\n\ndef main():\n    list_a = [1,2,3,4,5]\n    print(\"Initial list is: \", list_a)\n    print(\"Shifted list is: \", shift_list(list_a))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 49,
      "score": 8.298597569547805,
      "candidate": "def shift(list_one):\n    return list_one[-1:] + list_one[:-1]\n\n\ndef main():\n    list_one = [1, 2, 3, 4, 5, 6]\n    print(shift(list_one))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 50,
      "score": 8.2938925966498,
      "candidate": "def move_to_front(l: list) -> list:\n    return [l[-1]] + l[:-1]\n\n\ndef main():\n    l = list(map(int, input(\"Enter numbers separated by space:\").split()))\n    print(move_to_front(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 51,
      "score": 8.289838256518838,
      "candidate": "def last_to_first(nums: list) -> list:\n    \"\"\"\n    >>> last_to_first([1, 2, 3, 4, 5])\n    [5, 1, 2, 3, 4]\n    \"\"\"\n    return nums[len(nums) - 1 : 0 : -1]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 8.251903304236286,
      "candidate": "def shift_first(lst):\n    last = lst[-1]\n    for i in range(len(lst) - 1, 0, -1):\n        lst[i] = lst[i - 1]\n    lst[0] = last\n    return lst\n\n\nprint(shift_first([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 53,
      "score": 8.214125058964552,
      "candidate": "def shift_last_element_first(l):\n    last = l[-1]\n    l.pop(-1)\n    l.insert(0, last)\n    return l\n\nprint(shift_last_element_first([1, 2, 3, 4, 5]))\nprint(shift_last_element_first([1, 2, 3, 4, 5, 6]))\nprint(shift_last_element_first([]))"
    },
    {
      "rank": 54,
      "score": 8.209707251476969,
      "candidate": "def shift_last_element_to_first_position(l):\n    last_element = l.pop()\n    l.insert(0, last_element)\n\n\nl = [1, 2, 3, 4, 5]\nshift_last_element_to_first_position(l)\nprint(l)"
    },
    {
      "rank": 55,
      "score": 8.2048573255218,
      "candidate": "def first_to_last(alist):\n    return alist[-1:]+alist[:-1]\n\ndef main():\n    alist = [1,2,3,4,5,6,7,8,9,10]\n    print(\"Original List:\", alist)\n    print(\"First to last:\", first_to_last(alist))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 56,
      "score": 8.193565922652176,
      "candidate": "def shift(l):\n    if len(l) == 0:\n        return l\n\n    temp = l[-1]\n    l.pop(-1)\n    l.insert(0, temp)\n    return l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(shift(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 57,
      "score": 8.185309335307622,
      "candidate": "def reverse(list_of_elements):\n    new_list = []\n    for i in range(len(list_of_elements)):\n        new_list.append(list_of_elements[i])\n\n    return new_list\n\n\ndef shift(list_of_elements):\n    new_list = reverse(list_of_elements)\n    new_list.append(new_list[0])\n    new_list.pop(0)\n    return new_list\n\n\ndef main():\n    list_of_elements = [1, 2, 3, 4, 5, 6, 7]\n    new_list = shift(list_of_elements)\n    print(new_list)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 58,
      "score": 8.163300679823958,
      "candidate": "def shift(input_list):\n    if len(input_list) == 0:\n        return False\n    elif len(input_list) == 1:\n        return input_list\n    else:\n        last_element = input_list[-1]\n        del input_list[-1]\n        input_list.insert(0, last_element)\n        return input_list\n\nprint(shift([1, 2, 3, 4, 5]))\nprint(shift([1, 2, 3]))\nprint(shift([1]))\nprint(shift([]))"
    },
    {
      "rank": 59,
      "score": 8.144125099485041,
      "candidate": "def swap_first_last(arr):\n    temp = arr[len(arr)-1]\n    for i in range(len(arr)-1):\n        arr[i] = arr[i+1]\n    arr[len(arr)-1] = temp\n\n\narr = [1, 2, 3, 4, 5]\nswap_first_last(arr)\nprint(arr)"
    },
    {
      "rank": 60,
      "score": 8.143591138329747,
      "candidate": "def last_first(lst):\n    return lst[-1:] + lst[:-1]\n\n\nif __name__ == \"__main__\":\n    lst = [1,2,3,4,5,6,7]\n    print(last_first(lst))"
    },
    {
      "rank": 61,
      "score": 8.121884567141883,
      "candidate": "def shift_last_element_to_first_position(l):\n    l.insert(0, l.pop())\n    return l\n\n\ndef main():\n    l = [1, 2, 3, 4]\n    print(\"list:\", l)\n    print(\"after shifting last element to first position:\", shift_last_element_to_first_position(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 62,
      "score": 8.105983444291466,
      "candidate": "def last_element_to_first(list):\n    last = list[-1]\n    list.remove(last)\n    list.insert(0, last)\n    return list\n\n\ndef last_element_to_first_short(list):\n    return [list[-1]] + list[:-1]\n\n\ndef main():\n    l = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(last_element_to_first(l))\n    print(last_element_to_first_short(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 63,
      "score": 8.08452234024709,
      "candidate": "def shift(l):\n    return l[-1:] + l[:-1]\n\n\ndef main():\n    l = [1, 2, 3, 4, 5]\n    print(shift(l))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 64,
      "score": 8.040197642997851,
      "candidate": "def shift_last_element_to_first_position(list_input):\n    if not list_input:\n        return None\n    last_element = list_input[-1]\n    del list_input[-1]\n    list_input.insert(0, last_element)\n    return list_input\n\nprint(shift_last_element_to_first_position([1,2,3,4,5,6]))\nprint(shift_last_element_to_first_position([]))\nprint(shift_last_element_to_first_position([1]))"
    },
    {
      "rank": 65,
      "score": 8.024835682833125,
      "candidate": "def shift_last_element_to_first_position(input_list):\n    last_element = input_list[-1]\n    input_list.remove(last_element)\n    input_list.insert(0, last_element)\n    return input_list\n\n\ndef main():\n    print(shift_last_element_to_first_position([1, 2, 3, 4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 66,
      "score": 7.990432406683839,
      "candidate": "def shift_first(arr):\n    n = len(arr)\n    if n <= 1:\n        return arr\n    else:\n        last = arr[n-1]\n        for i in range(n-2, -1, -1):\n            arr[i+1] = arr[i]\n        arr[0] = last\n        return arr\n\n\narr = [1, 2, 3, 4, 5, 6]\nprint(shift_first(arr))"
    },
    {
      "rank": 67,
      "score": 7.938028884277233,
      "candidate": "def shift_list(l):\n    l.insert(0, l.pop())\n\nl = [1,2,3,4,5]\nshift_list(l)\nprint(l)"
    },
    {
      "rank": 68,
      "score": 7.915588979966494,
      "candidate": "def shift_first(list):\n    last = list[-1]\n    for i in range(len(list)-1,0,-1):\n        list[i] = list[i-1]\n    list[0] = last\n    return list\n\nprint(shift_first([1,2,3,4,5]))"
    },
    {
      "rank": 69,
      "score": 7.8912769574414305,
      "candidate": "def shift_first(l: list) -> list:\n    if len(l) == 0:\n        return l\n    return [l[-1]] + l[:-1]\n\n\ndef main():\n    print(shift_first([1, 2, 3, 4, 5]))\n    print(shift_first([1, 2]))\n    print(shift_first([1]))\n    print(shift_first([]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 70,
      "score": 7.868947655733293,
      "candidate": "def shift_first_pos(nums):\n    \"\"\"\n    >>> shift_first_pos([1,2,3,4])\n    [4, 1, 2, 3]\n    >>> shift_first_pos([1,2,3])\n    [3, 1, 2]\n    \"\"\"\n    return nums[len(nums)-1:] + nums[:len(nums)-1]\n\ndef shift_first_pos_inplace(nums):\n    \"\"\"\n    >>> shift_first_pos_inplace([1,2,3,4])\n    [4, 1, 2, 3]\n    >>> shift_first_pos_inplace([1,2,3])\n    [3, 1, 2]\n    \"\"\"\n    nums[0], nums[-1] = nums[-1], nums[0]\n    return nums\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 71,
      "score": 7.84634113240411,
      "candidate": "def shift(my_list):\n    last = my_list[-1]\n    del my_list[-1]\n    my_list.insert(0, last)\n    return my_list\n\n\nif __name__ == \"__main__\":\n    my_list = [1, 2, 3, 4, 5]\n    print(shift(my_list))"
    },
    {
      "rank": 72,
      "score": 7.834022619458933,
      "candidate": "def shift(arr):\n    last_ele = arr[-1]\n    for i in range(len(arr)-1, 0, -1):\n        arr[i] = arr[i-1]\n    arr[0] = last_ele\n\n\narr = [1, 2, 3, 4, 5]\nshift(arr)\nprint(arr)"
    },
    {
      "rank": 73,
      "score": 7.738292593776799,
      "candidate": "def shift(list1):\n    last_element = list1.pop()\n    list1.insert(0, last_element)\n    return list1\n\nlist1 = [1, 2, 3, 4, 5, 6]\nprint(shift(list1))"
    },
    {
      "rank": 74,
      "score": 7.705183449260731,
      "candidate": "def shift_first(list_a):\n    last_element = list_a.pop(-1)\n    list_a.insert(0, last_element)\n    return list_a\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5]\n    print(shift_first(list1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 75,
      "score": 7.562924366763077,
      "candidate": "def shift(l):\n    return l[len(l)-1:] + l[:len(l)-1]\n\n\nif __name__ == \"__main__\":\n    l = [1, 2, 3, 4, 5]\n    print(shift(l))"
    },
    {
      "rank": 76,
      "score": 7.4878043221155455,
      "candidate": "def move_last_to_first(l):\n    last = l[-1]\n    l.pop(-1)\n    l.insert(0, last)\n    return l\n\n\nif __name__ == '__main__':\n    l = [1, 2, 3, 4, 5]\n    print(move_last_to_first(l))"
    },
    {
      "rank": 77,
      "score": 7.464609382504557,
      "candidate": "def shift_last_element(l):\n    return l[-1:]+l[:-1]\n\n\nprint(shift_last_element([1, 2, 3, 4]))"
    },
    {
      "rank": 78,
      "score": 7.134571892399572,
      "candidate": "def shift_last_element_to_first(input_list):\n    input_list.insert(0, input_list.pop())\n    return input_list\n\n\ndef main():\n    print(shift_last_element_to_first([1, 2, 3, 4]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 79,
      "score": 3.4075012005919665,
      "candidate": "def shift_last_element_to_first_position(list):\n    \"\"\"\n    >>> shift_last_element_to_first_position([1,2,3,4,5])\n    [5, 1, 2, 3, 4]\n    \"\"\"\n    if len(list) == 0:\n        return list\n\n    first = list[0]\n    for i in range(len(list) - 1):\n        list[i] = list[i + 1]\n    list[len(list) - 1] = first\n    return list\n\n\ndef shift_last_element_to_first_position_inplace(list):\n    \"\"\"\n    >>> shift_last_element_to_first_position_inplace([1,2,3,4,5])\n    [5, 1, 2, 3, 4]\n    \"\"\"\n    if len(list) == 0:\n        return list\n\n    list[0] = list[len(list) - 1]\n    for i in range(len(list) - 1):\n        list[i + 1] = list[i]\n    return list\n\n\ndef main():\n    assert shift_last_element_to_first_position([1, 2, 3, 4, 5]) == [5, 1, 2, 3, 4]\n    assert shift_last_element_to_first_position([]) == []\n    assert shift_last_element_to_first_position([1]) == [1]\n    assert shift_last_element_to_first_position([1, 2]) == [2, 1]\n\n    assert shift_last_element_to_first_position_inplace([1, 2, 3, 4, 5]) == [5, 1, 2, 3, 4]\n    assert shift_last_element_to_first_position_inplace([]) == []\n    assert shift_last_element_to_first_position_inplace([1]) == [1]\n    assert shift_last_element_to_first_position_inplace([1, 2]) == [2, 1"
    },
    {
      "rank": 80,
      "score": 3.335066568409766,
      "candidate": "def move_last_to_first(a_list):\n    last_element = a_list.pop(-1)\n    a_list.insert(0, last_element)\n    return a_list\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5, 6]\n    print(f\"list1 = {list1}\")\n    print(f\"move_last_to_first(list1) = {move_last_to_first(list1)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 81,
      "score": 3.2048816262055637,
      "candidate": "def shift_last_element_to_first_position(list):\n    first_element = list[0]\n    last_element = list[-1]\n    list.remove(last_element)\n    list.insert(0, last_element)\n    list.insert(0, first_element)\n\n    return list\n\n\nprint(shift_last_element_to_first_position([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 82,
      "score": 3.2013884658944565,
      "candidate": "def shift_last_first(arr):\n    last = arr[-1]\n    del arr[-1]\n    arr.insert(0, last)\n    return arr\n\n\ndef main():\n    arr = [1, 2, 3, 4]\n    result = shift_last_first(arr)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 83,
      "score": 3.1809598806627015,
      "candidate": "def shift_last_element_to_first_position(lst):\n    lst.append(lst[0])\n    lst.remove(lst[0])\n    return lst\n\n\ndef main():\n    lst = [1, 3, 5, 7, 9]\n    print(shift_last_element_to_first_position(lst))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 84,
      "score": 3.1808185509625493,
      "candidate": "def move_last_to_first(a):\n    return a[-1:] + a[:-1]\n\n\nprint(move_last_to_first([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 85,
      "score": 3.109277113662471,
      "candidate": "def shift_last_elem_to_first_pos(lst):\n    last_elem = lst[-1]\n    lst.pop()\n    lst.insert(0, last_elem)\n    return lst\n\nprint(shift_last_elem_to_first_pos([1, 2, 3, 4, 5]))\nprint(shift_last_elem_to_first_pos([\"a\", \"b\", \"c\", \"d\", \"e\"]))\nprint(shift_last_elem_to_first_pos([\"x\", \"y\", \"z\"]))"
    },
    {
      "rank": 86,
      "score": 3.078564765732584,
      "candidate": "def shift_first(arr):\n    arr.append(arr[0])\n    del arr[0]\n    return arr\n\n\ndef main():\n    assert shift_first([1, 2, 3, 4, 5]) == [5, 2, 3, 4, 1]\n    assert shift_first([1]) == [1]\n    assert shift_first([]) == []\n    assert shift_first([\"a\", \"b\", \"c\"]) == [\"c\", \"b\", \"a\"]\n    print(\"All test cases passed!\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 87,
      "score": 3.0712984732668547,
      "candidate": "def shift_last_to_first(input_list):\n    \"\"\"\n    >>> shift_last_to_first([1, 2, 3, 4, 5])\n    [5, 1, 2, 3, 4]\n    \"\"\"\n    input_list.append(input_list.pop(0))\n    return input_list\n\n\ndef main():\n    assert shift_last_to_first([1, 2, 3, 4, 5]) == [5, 1, 2, 3, 4]\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 88,
      "score": 3.0459499909010463,
      "candidate": "def shift_last_element_to_first_position(list):\n    # Write your code here.\n    return list[len(list)-1:] + list[:len(list)-1]\n\n\nprint(shift_last_element_to_first_position([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 89,
      "score": 3.0201873708378106,
      "candidate": "def last_to_first(nums: list) -> list:\n    \"\"\"\n    Shift last element to first position in the given list\n    :param nums: list of numbers\n    :return: list with shifted element\n    >>> last_to_first([1, 2, 3, 4, 5])\n    [5, 1, 2, 3, 4]\n    >>> last_to_first([1, 2, 3, 4])\n    [4, 1, 2, 3]\n    \"\"\"\n    return nums[-1:] + nums[:-1]\n\n\ndef last_to_first_inplace(nums: list) -> None:\n    \"\"\"\n    Shift last element to first position in the given list inplace\n    :param nums: list of numbers\n    :return: None\n    >>> last_to_first_inplace([1, 2, 3, 4, 5])\n    >>> nums\n    [5, 1, 2, 3, 4]\n    >>> last_to_first_inplace([1, 2, 3, 4])\n    >>> nums\n    [4, 1, 2, 3]\n    \"\"\"\n    last_ele = nums.pop()\n    nums.insert(0, last_ele)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 90,
      "score": 3.0191503550123975,
      "candidate": "def move_last_to_first(l):\n    return [l[-1]] + l[:-1]\n\n\nprint(move_last_to_first([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 91,
      "score": 2.950329213892962,
      "candidate": "def shift_last_element(l: list) -> list:\n    \"\"\"\n    Shifts the last element to first position in the given list.\n\n    >>> shift_last_element([1, 2, 3, 4])\n    [4, 1, 2, 3]\n\n    >>> shift_last_element([1, 2, 3])\n    [3, 1, 2]\n\n    >>> shift_last_element([1, 2])\n    [2, 1]\n\n    >>> shift_last_element([1])\n    [1]\n    \"\"\"\n    return l[-1:] + l[:-1]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 92,
      "score": 2.948486257560866,
      "candidate": "def move_last_element_to_first_position(arr: list) -> list:\n    \"\"\"\n    >>> move_last_element_to_first_position([1, 2, 3, 4, 5])\n    [5, 1, 2, 3, 4]\n    >>> move_last_element_to_first_position([1, 2, 3])\n    [3, 1, 2]\n    >>> move_last_element_to_first_position([1, 2, 3, 4])\n    [4, 1, 2, 3]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n\n    return [arr[-1]] + arr[:-1]\n\n\ndef move_last_element_to_first_position_inplace(arr: list) -> None:\n    \"\"\"\n    >>> move_last_element_to_first_position_inplace([1, 2, 3, 4, 5])\n    >>> [5, 1, 2, 3, 4]\n    >>> move_last_element_to_first_position_inplace([1, 2, 3])\n    >>> [3, 1, 2]\n    >>> move_last_element_to_first_position_inplace([1, 2, 3, 4])\n    >>> [4, 1, 2, 3]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n\n    arr[0], arr[-1] = arr[-1], arr[0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 2.9342183828975092,
      "candidate": "def shift_last_element_first(l):\n    l.append(l.pop(0))\n\nl = [1, 2, 3, 4, 5, 6]\nshift_last_element_first(l)\nprint(l)\n\n\"\"\"\nWrite a python function to check if the given list contains numbers.\n\"\"\"\n\ndef list_contains_numbers(l):\n    return all(isinstance(i, int) for i in l)\n\nl = [1, 2, 3, 4, 5, 6]\nprint(list_contains_numbers(l))\n\n\"\"\"\nWrite a python function to remove duplicates from the given list.\n\"\"\"\n\ndef remove_duplicates(l):\n    return list(dict.fromkeys(l))\n\nl = [1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6]\nprint(remove_duplicates(l))\n\n\"\"\"\nWrite a python function to check if the given list is empty.\n\"\"\"\n\ndef is_list_empty(l):\n    return len(l) == 0\n\nl = []\nprint(is_list_empty(l))\n\n\"\"\"\nWrite a python function to check if the given list is sorted in ascending order.\n\"\"\"\n\ndef is_list_sorted(l):\n    return l == sorted(l)\n\nl = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(is_list_sorted(l))\n\n\"\"\"\nWrite a python function to reverse a list.\n\"\"\"\n\ndef reverse_list(l):\n    l.reverse()\n\nl = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nreverse_list(l)\nprint(l)\n\n\"\"\"\nWrite a python function to find the length of the list.\n\"\"\"\n\ndef find_length(l):\n    return len(l)\n\nl = [1, 2, 3, 4, 5,"
    },
    {
      "rank": 94,
      "score": 2.8980481075812583,
      "candidate": "def shift_last_element_to_first_position(input_list):\n    # check if list is empty\n    if len(input_list) == 0:\n        return \"Input list is empty\"\n\n    # check if list contains only one element\n    if len(input_list) == 1:\n        return \"Input list contains only one element\"\n\n    # append the last element to the front of the list\n    input_list.insert(0, input_list.pop())\n\n    return input_list\n\n\nprint(shift_last_element_to_first_position([]))\nprint(shift_last_element_to_first_position([1]))\nprint(shift_last_element_to_first_position([1, 2]))\nprint(shift_last_element_to_first_position([1, 2, 3]))\nprint(shift_last_element_to_first_position([1, 2, 3, 4]))"
    },
    {
      "rank": 95,
      "score": 2.8975394542145434,
      "candidate": "def reverse(list):\n    l = len(list)\n    for i in range(0, int(l/2)):\n        temp = list[i]\n        list[i] = list[l-1-i]\n        list[l-1-i] = temp\n    return list\n\ndef reverse_function(list):\n    if len(list) == 0:\n        return []\n    else:\n        list = list[1:] + [list[0]]\n        return list\n\n\nprint(reverse([1,2,3,4,5,6,7]))\nprint(reverse_function([1,2,3,4,5,6,7]))"
    },
    {
      "rank": 96,
      "score": 2.88023580060446,
      "candidate": "def shift_last_element(list_a):\n    \"\"\"\n    >>> shift_last_element([1,2,3,4,5])\n    [5, 1, 2, 3, 4]\n    >>> shift_last_element([1,2,3,4,5,6])\n    [6, 1, 2, 3, 4, 5]\n    \"\"\"\n    return list_a[-1:] + list_a[:-1]\n\ndef shift_last_element_inplace(list_a):\n    \"\"\"\n    >>> shift_last_element_inplace([1,2,3,4,5])\n    [5, 1, 2, 3, 4]\n    >>> shift_last_element_inplace([1,2,3,4,5,6])\n    [6, 1, 2, 3, 4, 5]\n    \"\"\"\n    list_a[-1], list_a[0] = list_a[0], list_a[-1]\n    return list_a\n\n\ndef shift_last_element_with_slicing(list_a):\n    \"\"\"\n    >>> shift_last_element_with_slicing([1,2,3,4,5])\n    [5, 1, 2, 3, 4]\n    >>> shift_last_element_with_slicing([1,2,3,4,5,6])\n    [6, 1, 2, 3, 4, 5]\n    \"\"\"\n    return list_a[1:] + [list_a[0]]\n\n\ndef shift_last_element_with_slicing_inplace(list_a):\n    \"\"\"\n    >>> shift_last_element_with_slicing_inplace([1,2,3,4,5])\n    [5, 1, 2, 3, 4]\n    >>> shift_last_element_with_slicing_inplace([1,2,3,4,5,6])\n    [6, 1, 2, 3, 4, 5]\n    \"\"\"\n    list_a[:"
    },
    {
      "rank": 97,
      "score": 2.7077990692423453,
      "candidate": "def shift_last_to_first(input_list):\n    last = input_list[-1]\n    del input_list[-1]\n    input_list.insert(0, last)\n    return input_list\n\n\nprint(shift_last_to_first([1, 2, 3, 4, 5, 6]))\nprint(shift_last_to_first([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(shift_last_to_first([]))\nprint(shift_last_to_first([1]))"
    },
    {
      "rank": 98,
      "score": 2.6865553990330397,
      "candidate": "def shift_last_element_first_position(input_list):\n    return input_list[-1:]+input_list[:-1]\n\n\nprint(shift_last_element_first_position([1, 2, 3, 4]))"
    },
    {
      "rank": 99,
      "score": 2.620518076847133,
      "candidate": "def first_position(test_list):\n    # check if list is empty or not\n    if not test_list:\n        return \"list is empty\"\n\n    # check if list is empty or not\n    elif len(test_list) == 1:\n        return test_list\n\n    # reverse list\n    test_list.reverse()\n\n    # reverse first element\n    test_list[0] = test_list[0]\n\n    # reverse list\n    test_list.reverse()\n\n    return test_list\n\n\nprint(first_position([1, 2, 3, 4, 5]))\nprint(first_position([]))\nprint(first_position([1]))"
    },
    {
      "rank": 100,
      "score": 2.5627348387878035,
      "candidate": "def shift_last_element_to_first_position(my_list):\n    # Swap first and last elements\n    my_list[0], my_list[-1] = my_list[-1], my_list[0]\n    return my_list\n\n\nif __name__ == \"__main__\":\n    my_list = [1, 2, 3, 4, 5]\n    print(f\"Original list: {my_list}\")\n    print(f\"Shifted list: {shift_last_element_to_first_position(my_list)}\")"
    }
  ]
}