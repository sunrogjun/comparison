{
  "timestamp": "2025-09-14T23:53:16.132774",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 210,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def find_first_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\nprint(find_first_even([1, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def first_even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n\nprint(first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def find_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\nprint(find_even([1,3,5,6,7,8]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def first_even(numbers):\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\nnumbers = [1, 3, 4, 5, 6, 7, 8]\nprint(first_even(numbers))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def find_first_even(input_list):\n    for num in input_list:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef main():\n    print(\"First even number in [1, 3, 5, 7, 9]: \" +\n          str(find_first_even([1, 3, 5, 7, 9])))\n\n    print(\"First even number in [2, 4, 6, 8, 10]: \" +\n          str(find_first_even([2, 4, 6, 8, 10])))\n\n    print(\"First even number in [1, 3, 5, 7]: \" +\n          str(find_first_even([1, 3, 5, 7])))\n\n    print(\"First even number in []: \" + str(find_first_even([])))\n\n    print(\"First even number in [0]: \" + str(find_first_even([0])))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def first_even_number(lst):\n    for i in lst:\n        if i%2==0:\n            return i\n    return None\n\nprint(first_even_number([1,3,5,6,7,8]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def find_even_number(nums):\n    for i in nums:\n        if i % 2 == 0:\n            return i\n\n\nprint(find_even_number([1, 2, 3, 4, 5, 6, 7]))\nprint(find_even_number([1, 3, 5, 7]))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def find_even(list_of_numbers):\n    for num in list_of_numbers:\n        if num%2 == 0:\n            return num\n\ndef main():\n    list_of_numbers = [1,2,3,4,5,6,7,8,9,10]\n    print(find_even(list_of_numbers))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def find_first_even(list):\n    for num in list:\n        if num % 2 == 0:\n            return num\n\nif __name__ == \"__main__\":\n    print(find_first_even([1,2,3,4,5,6,7,8]))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def find_first_even(numbers):\n    \"\"\"\n    >>> find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    2\n    >>> find_first_even([2, 3, 4, 5, 6, 7, 8, 9, 10])\n    2\n    >>> find_first_even([3, 4, 5, 6, 7, 8, 9, 10])\n    4\n    >>> find_first_even([4, 5, 6, 7, 8, 9, 10])\n    4\n    >>> find_first_even([5, 6, 7, 8, 9, 10])\n    6\n    >>> find_first_even([6, 7, 8, 9, 10])\n    6\n    >>> find_first_even([7, 8, 9, 10])\n    8\n    >>> find_first_even([8, 9, 10])\n    8\n    >>> find_first_even([9, 10])\n    10\n    >>> find_first_even([10])\n    10\n    >>> find_first_even([11, 12, 13])\n    \"\"\"\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\n\ndef find_first_even_v2(numbers):\n    \"\"\"\n    >>> find_first_even_v2([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    2\n    >>> find_first_even_v2([2, 3, 4, 5, 6, 7, 8, 9, 10])\n    2\n    >>> find_first_even_v2([3, 4, 5, 6, 7, 8, 9, 10])\n    4\n    >>> find_first_even_v2([4, 5,"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def first_even_number(numbers):\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    print(first_even_number(numbers))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "from typing import List\n\n\ndef find_first_even_number(input_list: List[int]) -> int:\n    \"\"\"\n    Return the first even number in a given list of numbers\n    >>> find_first_even_number([1, 3, 5, 7, 9, 11, 13])\n    10\n    >>> find_first_even_number([2, 6, 4, 8, 10, 12, 14])\n    2\n    \"\"\"\n    return next((num for num in input_list if num % 2 == 0), -1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def first_even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(first_even_number([3, 4, 5, 6, 7]))\nprint(first_even_number([2, 4, 6, 8, 10]))\nprint(first_even_number([1, 3, 5, 7, 9]))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def find_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef main():\n    print(\"First even number: \" + str(find_even_number([2, 4, 3, 8, 10, 11, 22])))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def find_even_number(input_list: list) -> int:\n    \"\"\"\n    >>> find_even_number([1,2,3,4,5,6])\n    2\n    >>> find_even_number([2,4,6])\n    2\n    >>> find_even_number([1,3,5])\n    -1\n    \"\"\"\n    for num in input_list:\n        if num % 2 == 0:\n            return num\n    return -1\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def first_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\nif __name__ == \"__main__\":\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def find_first_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\ndef find_first_even_number_with_filter(numbers):\n    return list(filter(lambda num: num % 2 == 0, numbers))[0]\n\n\ndef find_first_even_number_with_reduce(numbers):\n    return list(reduce(lambda acc, cur: acc if acc % 2 == 0 else cur, numbers))\n\n\nif __name__ == \"__main__\":\n    print(find_first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(find_first_even_number_with_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(find_first_even_number_with_reduce([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "from typing import List\n\n\ndef first_even_number(nums: List[int]) -> int:\n    \"\"\"\n    Return the first even number in a given list of numbers.\n    >>> first_even_number([1,2,3,4,5,6])\n    2\n    >>> first_even_number([2,4,6,8,10])\n    2\n    >>> first_even_number([1,3,5,7,9])\n    \"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def find_first_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\n\nprint(find_first_even([1, 2, 3, 4, 5]))\nprint(find_first_even([2, 3, 4, 5]))\nprint(find_first_even([2, 4, 6, 8, 10]))\nprint(find_first_even([1, 3, 5, 7, 9]))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def findEven(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def find_first_even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n\nprint(find_first_even_number([3, 5, 7, 9, 11]))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def find_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n    return None\n\n\nprint(find_even_number([1, 2, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def even_num(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n\nprint(even_num([3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def first_even(lst):\n    for i in lst:\n        if i % 2 == 0:\n            return i\n\n\nprint(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def find_even(list):\n    for i in list:\n        if i % 2 == 0:\n            return i\n    return None"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def find_first_even(arr):\n    for i in arr:\n        if i % 2 == 0:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def first_even(input_list):\n    for i in input_list:\n        if i % 2 == 0:\n            return i\n\n    return None\n\nprint(first_even([1,3,4,5,6,7,8]))\nprint(first_even([2,4,6,7,8]))\nprint(first_even([1,3,5,7]))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def first_even_number(nums: list) -> int:\n    \"\"\"\n    >>> first_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20])\n    2\n    >>> first_even_number([1, 3, 5, 7, 9, 11, 13, 15, 17, 19])\n    -1\n    \"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return -1\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "from typing import List\n\n\ndef first_even_number(lst: List[int]) -> int:\n    \"\"\"\n    This function will find the first even number in a given list of numbers.\n    >>> first_even_number([2, 3, 4, 5, 7, 9])\n    2\n    >>> first_even_number([2, 3, 4, 5, 7, 8])\n    2\n    >>> first_even_number([1, 3, 5, 7, 9])\n    \"\"\"\n    for num in lst:\n        if num % 2 == 0:\n            return num\n    return -1\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n\nif __name__ == '__main__':\n    print(find_even([1, 2, 3, 4, 5, 6]))\n    print(find_even([2, 3, 4, 5, 6]))"
    },
    {
      "rank": 31,
      "score": 9.0,
      "candidate": "def first_even_number(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\n\ndef first_even_number_v2(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\n\ndef main():\n    print(\"First even number in a list of numbers:\")\n    print(first_even_number([1, 2, 3, 4, 5, 6, 7, 8]))\n    print(first_even_number_v2([1, 2, 3, 4, 5, 6, 7, 8]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 32,
      "score": 9.0,
      "candidate": "def even_num(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\nprint(even_num([3, 4, 5, 6, 7, 8]))\nprint(even_num([1, 3, 5]))"
    },
    {
      "rank": 33,
      "score": 9.0,
      "candidate": "def first_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef first_even_v2(numbers):\n    return next((x for x in numbers if x % 2 == 0), None)\n\nif __name__ == \"__main__\":\n    nums = [1,2,3,4,5,6,7,8]\n    print(first_even(nums))\n    print(first_even_v2(nums))"
    },
    {
      "rank": 34,
      "score": 9.0,
      "candidate": "def first_even_number(list_of_numbers):\n    for number in list_of_numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\nprint(first_even_number([1,2,3,4,5,6,7]))\nprint(first_even_number([1,2,3,4,5,6,7,8]))"
    },
    {
      "rank": 35,
      "score": 9.0,
      "candidate": "def first_even(list):\n    for i in list:\n        if i % 2 == 0:\n            return i\n\n\ndef main():\n    print(first_even([3, 5, 6, 7, 8]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def first_even_number(nums):\n    \"\"\"\n    >>> first_even_number([2, 3, 5, 6, 7, 9, 11, 13])\n    2\n    >>> first_even_number([2, 3, 5, 6, 8, 10, 11, 13])\n    2\n    >>> first_even_number([3, 5, 6, 8, 10, 11, 13])\n    None\n    \"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def first_even(nums):\n    for i in nums:\n        if i % 2 == 0:\n            return i\n    return None\n\n\nprint(first_even([1, 3, 4, 5, 6, 7, 8]))\nprint(first_even([2, 3, 4, 5, 6, 7, 8]))\nprint(first_even([2]))\nprint(first_even([]))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def first_even_number(arr):\n    for i in arr:\n        if i % 2 == 0:\n            return i\n    return None\n\n\ndef main():\n    print(first_even_number([1, 3, 4, 5, 6, 7, 8, 9]))\n    print(first_even_number([2, 3, 4, 5, 6, 7, 8, 9]))\n    print(first_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def first_even(my_list):\n    for i in my_list:\n        if i%2==0:\n            return i\n    return None\n\nmy_list = [1,2,3,4,5,6]\n\nprint(\"My List: \", my_list)\nprint(\"First Even Number: \",first_even(my_list))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def find_first_even(numbers):\n    \"\"\"\n    >>> find_first_even([1, 2, 3, 4, 5, 6])\n    2\n\n    >>> find_first_even([1, 3, 5, 7])\n    None\n    \"\"\"\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def first_even(nums):\n    for i in range(len(nums)):\n        if nums[i] % 2 == 0:\n            return nums[i]\n    return None\n\n\nprint(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(first_even([2, 3, 4, 5, 6, 7, 8, 9]))\nprint(first_even([1, 3, 5, 7]))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def find_even_number(my_list):\n    for num in my_list:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_using_filter(my_list):\n    even_nums = list(filter(lambda num: num % 2 == 0, my_list))\n    if len(even_nums) > 0:\n        return even_nums[0]\n    return None\n\n\nprint(find_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(find_even_number_using_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n    return None\n\nprint(find_even([1,2,4,5,6]))\nprint(find_even([2,4,5,6]))\nprint(find_even([1,3,5,6]))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def first_even_number(arr):\n    \"\"\"\n    Finds the first even number in a given list of numbers.\n\n    :param arr: list of numbers\n    :return: the first even number\n    \"\"\"\n    for num in arr:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(first_even_number([3, 5, 7, 9]))\nprint(first_even_number([3, 5, 7, 9, 10]))\nprint(first_even_number([3, 5, 7, 9, 10, 11]))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def first_even(lst):\n    for num in lst:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(first_even(lst))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef find_first_even_number(numbers: List[int]) -> int:\n    \"\"\"Returns the first even number in the list.\n\n    Args:\n        numbers (List[int]): list of numbers.\n\n    Returns:\n        int: the first even number in the list.\n    \"\"\"\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n\n    return None\n\n\nprint(find_first_even_number([3, 5, 5, 8, 10, 11, 11, 11, 11]))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def find_first_even_number(input_list):\n    for num in input_list:\n        if num % 2 == 0:\n            return num\n\n\nprint(find_first_even_number([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def first_even(lst):\n    for i in lst:\n        if i % 2 == 0:\n            return i\n    return None\n\nprint(first_even([1,2,3,4,5,6,7,8,9]))\nprint(first_even([2,4,6,8,10,12,14,16,18,20]))\nprint(first_even([3,6,9,12,15,18,21,24,27,30]))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(find_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19]))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef find_even(arr: List[int]) -> int:\n    \"\"\"\n    This function takes a list of numbers and returns the first even number in the list.\n    >>> find_even([2,4,6,7,8])\n    2\n    >>> find_even([2,4,6,8])\n    2\n    >>> find_even([3,5,6,7,8])\n    6\n    >>> find_even([2,4,5,7,8])\n    -1\n    >>> find_even([3,5,6,9,10])\n    -1\n    \"\"\"\n    for num in arr:\n        if num % 2 == 0:\n            return num\n    return -1\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def find_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\nprint(find_even([1, 2, 3, 4]))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef find_first_even(nums: List[int]) -> int:\n    \"\"\"Returns the first even number in the given list of numbers.\n\n    Args:\n        nums (List[int]): list of numbers\n\n    Returns:\n        int: first even number in the list\n    \"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n\ndef main():\n    nums = [3, 5, 7, 8, 10, 11, 13, 15, 17, 19, 20]\n    print(find_first_even(nums))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def find_even(numbers):\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\n\ndef main():\n    print(find_even([1,2,3,4,5,6]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def find_first_even(input_list):\n    for i in input_list:\n        if i % 2 == 0:\n            return i\n\n\nprint(find_first_even([1, 2, 3, 4, 5]))\nprint(find_first_even([2, 3, 4, 5]))\nprint(find_first_even([2, 4, 6, 8, 10]))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def first_even_num(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef main():\n    print(first_even_num([1,2,3,4]))\n    print(first_even_num([2,4,6,8]))\n    print(first_even_num([1,3,5,7]))\n    print(first_even_num([]))\n    print(first_even_num([1,3,5,7,9]))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def first_even_num(arr):\n    for i in range(len(arr)):\n        if arr[i] % 2 == 0:\n            return arr[i]\n    return None\n\nprint(first_even_num([1,2,3,4,5,6,7]))\nprint(first_even_num([1,3,5,7]))\nprint(first_even_num([2,4,6,8]))\nprint(first_even_num([]))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef find_first_even(numbers: List[int]) -> int:\n    \"\"\"Return the first even number in a given list of numbers.\n\n    Examples:\n        >>> assert find_first_even([2, 1, 2, 3, 4, 1, 0]) == 2\n        >>> assert find_first_even([1, 3, 5, 7, 9]) == -1\n    \"\"\"\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_first_even([2, 1, 2, 3, 4, 1, 0]))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def first_even_num(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n    return None"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def first_even(arr):\n    for i in arr:\n        if i % 2 == 0:\n            return i\n    return None\n\n\nprint(first_even([1, 3, 5, 6, 7, 8]))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def first_even(list_of_nums):\n    for num in list_of_nums:\n        if num % 2 == 0:\n            return num\n\n\nprint(first_even([3, 4, 5, 6, 7]))\nprint(first_even([3, 4, 5, 6]))\nprint(first_even([3, 5, 6]))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef main():\n    nums = [1, 2, 3, 4, 5, 6, 7]\n    print(even_number(nums))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def find_even_number(list_of_numbers):\n    \"\"\"\n    >>> find_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9])\n    2\n    >>> find_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    2\n    >>> find_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20])\n    2\n    >>> find_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22])\n    2\n    \"\"\"\n    for num in list_of_numbers:\n        if num % 2 == 0:\n            return num\n\n    return None\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def even_number(list_of_numbers):\n    for number in list_of_numbers:\n        if number % 2 == 0:\n            return number\n\n\nprint(even_number([3, 4, 6, 7, 9, 11]))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def find_even_number(numbers: list) -> int:\n    \"\"\"\n    Return first even number in a given list of numbers.\n    >>> find_even_number([1, 2, 3, 4, 5, 6])\n    2\n    >>> find_even_number([2, 4, 6, 8])\n    2\n    >>> find_even_number([3, 6, 9])\n    6\n    \"\"\"\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return -1\n\n\ndef main():\n    assert find_even_number([1, 2, 3, 4, 5, 6]) == 2\n    assert find_even_number([2, 4, 6, 8]) == 2\n    assert find_even_number([3, 6, 9]) == 6\n    assert find_even_number([1, 3, 5]) == -1\n    assert find_even_number([2, 4, 6, 8, 10, 12]) == 2\n    assert find_even_number([1, 3, 5, 7]) == -1\n    assert find_even_number([2, 4, 6, 8, 10, 12, 14, 16]) == 2\n    assert find_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]) == 2\n    assert find_even_number([1, 3, 5, 7, 9]) == -1\n    assert find_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]) == 2\n    assert find_even_number([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24]) == 2\n    assert find_even_number"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def find_first_even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(find_first_even_number([3, 5, 5, 10, 11, 12, 14]))\nprint(find_first_even_number([3, 5, 5, 10, 11, 12, 14, 16]))\nprint(find_first_even_number([3, 5, 5, 10, 11, 12, 14, 16, 20]))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef main():\n    print(find_even([1, 2, 3, 4]))\n    print(find_even([1, 2, 3, 4, 5]))\n    print(find_even([2, 3, 4, 5]))\n    print(find_even([2]))\n    print(find_even([]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def first_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef main():\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    even_num = first_even_number(numbers)\n    if even_num is None:\n        print(\"No even numbers in the list\")\n    else:\n        print(\"First even number is:\", even_num)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def find_first_even(lst):\n    for i in lst:\n        if i % 2 == 0:\n            return i\n    return None"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def first_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef find_first_even_number(numbers: List[int]) -> int:\n    \"\"\"\n    Returns the first even number in the given list.\n    >>> find_first_even_number([1,2,4,6,3,8,9,10])\n    2\n    \"\"\"\n    return next((number for number in numbers if number % 2 == 0), None)\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n    test_list = [1, 2, 4, 6, 3, 8, 9, 10]\n    even_number = find_first_even_number(test_list)\n    print(even_number)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def find_even(list_of_num):\n    \"\"\"\n    Finds the first even number in a given list of numbers\n\n    :param list_of_num: list of numbers\n    :return: the first even number\n\n    >>> find_even([1, 2, 4, 9, 10, 11])\n    2\n    >>> find_even([2, 5, 6, 7, 8])\n    2\n    \"\"\"\n    for num in list_of_num:\n        if num % 2 == 0:\n            return num\n\n\ndef main():\n    print(find_even([1, 2, 4, 9, 10, 11]))\n    print(find_even([2, 5, 6, 7, 8]))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod(verbose=True)\n    main()"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(find_even([1,2,3,4,5]))\nprint(find_even([1,3,5]))\nprint(find_even([2,4,6,8,10,12]))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def find_first_even_number(arr):\n    for number in arr:\n        if number % 2 == 0:\n            return number\n    return None\n\n\nprint(find_first_even_number([3, 4, 6, 7, 9]))\nprint(find_first_even_number([3, 6, 7, 9]))\nprint(find_first_even_number([1, 3, 5, 7]))\nprint(find_first_even_number([0, 1, 3, 5, 7]))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def first_even_number(input_list):\n    for i in input_list:\n        if i % 2 == 0:\n            return i\n    return None\n\n\nprint(first_even_number([1, 3, 4, 5, 6, 7, 8]))\nprint(first_even_number([1, 3, 5, 7]))\nprint(first_even_number([]))\nprint(first_even_number([1, 3, 5, 7, 9]))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\nprint(find_even([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(find_even([1, 3, 5, 7, 9]))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def even_number(list_of_numbers):\n    for num in list_of_numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(even_number([3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def find_first_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def find_even(lst):\n    for num in lst:\n        if num % 2 == 0:\n            return num\n\nlst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]\nprint(find_even(lst))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def first_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n    return None\n\ndef first_even_number_2(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n    return None"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def first_even_number(lst):\n    for i in lst:\n        if i % 2 == 0:\n            return i\n\n\nprint(first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def find_first_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n    return None\n\nif __name__ == \"__main__\":\n    print(find_first_even([1, 2, 3, 4, 5, 6, 7]))\n    print(find_first_even([1, 3, 5, 7]))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def first_even_number(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\n\ndef first_even_number_alt(numbers):\n    return next((x for x in numbers if x % 2 == 0), None)\n\n\nif __name__ == \"__main__\":\n    print(first_even_number([1, 3, 4, 5, 6, 7, 8]))\n    print(first_even_number_alt([1, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def find_even(lst):\n    for i in lst:\n        if i%2 == 0:\n            return i\n\n    return None\n\nif __name__ == '__main__':\n    print(find_even([3, 5, 7, 10, 11, 12, 14]))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def first_even(nums):\n    for i in nums:\n        if i % 2 == 0:\n            return i\n    return None\n\nif __name__ == '__main__':\n    print(\"Enter the list of numbers:\")\n    nums = list(map(int, input().split()))\n    print(first_even(nums))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def first_even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nif __name__ == \"__main__\":\n    print(first_even_number([1, 2, 3, 4, 5]))\n    print(first_even_number([2, 3, 4, 5, 6]))\n    print(first_even_number([1, 3, 5, 7]))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def first_even(list):\n    for num in list:\n        if num%2==0:\n            return num\n    return None"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def find_first_even(arr):\n    for num in arr:\n        if num % 2 == 0:\n            return num\n\n\ndef main():\n    print(find_first_even([3, 5, 6, 7, 8]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def first_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\ndef first_even_number_with_filter(numbers):\n    return next(filter(lambda x: x % 2 == 0, numbers))\n\n\nif __name__ == \"__main__\":\n    print(first_even_number([1, 2, 3, 4, 5]))\n    print(first_even_number_with_filter([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def find_even_num(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nprint(find_even_num([1, 2, 3, 4, 5, 6, 7]))\nprint(find_even_num([1, 3, 5, 7]))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def first_even_num(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n\n\nif __name__ == \"__main__\":\n    print(first_even_num([3, 4, 6, 7, 9]))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def first_even(list):\n    for i in list:\n        if i % 2 == 0:\n            return i\n\n\nprint(first_even([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def find_even(list_of_numbers):\n    for i in list_of_numbers:\n        if i % 2 == 0:\n            return i\n\n    return None\n\n\ndef main():\n    list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(find_even(list_of_numbers))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def find_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_lambda(nums):\n    return next((num for num in nums if num % 2 == 0), None)\n\ndef find_even_lambda_map(nums):\n    return next(map(lambda x: x if x % 2 == 0 else None, nums), None)\n\nif __name__ == \"__main__\":\n    nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(find_even(nums))\n    print(find_even_lambda(nums))\n    print(find_even_lambda_map(nums))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def first_even(lst):\n    for i in lst:\n        if i % 2 == 0:\n            return i\n    return None\n\n\ndef main():\n    print(first_even([1, 2, 3, 4]))\n    print(first_even([2, 3, 4, 5]))\n    print(first_even([2, 4, 6, 8]))\n    print(first_even([]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 95,
      "score": 7.0,
      "candidate": "def find_first_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\nprint(find_first_even([1, 3, 5, 6, 8, 10, 11, 13]))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "from typing import List\n\n\ndef find_first_even_number(numbers: List[int]) -> int:\n    \"\"\"Returns the first even number from the list.\n\n    Args:\n        numbers (List[int]): list of numbers\n\n    Returns:\n        int: first even number\n    \"\"\"\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n\nprint(find_first_even_number([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def find_first_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_1(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_2(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_3(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_4(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_5(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_6(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_7(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_8(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_9(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_10(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_11(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_first_even_12(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def find_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef main():\n    print(find_even([3, 5, 6, 9, 11, 14]))\n    print(find_even([3, 5, 6, 9, 11]))\n    print(find_even([3, 5, 6, 9]))\n    print(find_even([3, 5, 6]))\n    print(find_even([3, 5]))\n    print(find_even([3]))\n    print(find_even([]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def find_first_even(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef find_first_even_with_for_else(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    else:\n        return None\n\n\ndef find_first_even_with_for_else_short_circuit(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\n\ndef find_first_even_with_filter(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    return filter(lambda x: x % 2 == 0, nums)[0]\n\n\ndef find_first_even_with_filter_short_circuit(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    return filter(lambda x: x % 2 == 0, nums)[0]\n\n\ndef find_first_even_with_lambda(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    return next(filter(lambda x: x % 2 == 0, nums))\n\n\ndef find_first_even_with_lambda_short_circuit(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    return next(filter(lambda x: x % 2 == 0, nums))\n\n\ndef find_first_even_with_list_comprehension(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    return [num for num in nums if num % 2 == 0][0]\n\n\ndef find_first_even_with_list_comprehension_short_circuit(nums):\n    \"\"\"Return the first even number in a list.\"\"\"\n    return [num for num in nums if num % 2 == 0][0]"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def find_even_number(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_2(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_3(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_4(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_5(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_6(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_7(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_8(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_9(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_10(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_11(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_12(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\ndef find_even_number_13(nums):\n    for num in"
    }
  ]
}