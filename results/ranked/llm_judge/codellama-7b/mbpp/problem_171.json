{
  "timestamp": "2025-09-14T23:35:30.925581",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 171,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "import re\n\ndef find_uppercase_lowercase_special_character_numeric(s):\n    \"\"\"\n    >>> find_uppercase_lowercase_special_character_numeric(\"AaBbCc123@!\")\n    ['Aa', 'Bb', 'Cc', '123', '@!']\n    \"\"\"\n    return re.findall(r\"[A-Z]+|[a-z]+|\\W+|\\d+\", s)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "import re\n\ndef find_values(input_string):\n    uppercase_chars = re.findall(r\"[A-Z]\", input_string)\n    lowercase_chars = re.findall(r\"[a-z]\", input_string)\n    numeric_chars = re.findall(r\"[0-9]\", input_string)\n    special_chars = re.findall(r\"[!@#$%&*]\", input_string)\n    print(\"Uppercase: \", uppercase_chars)\n    print(\"Lowercase: \", lowercase_chars)\n    print(\"Numeric: \", numeric_chars)\n    print(\"Special: \", special_chars)\n\n\nif __name__ == \"__main__\":\n    input_string = \"!@#$%&*1234567890AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\n    find_values(input_string)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "import re\n\n\ndef regex_char(string):\n    upper = re.findall(r\"[A-Z]\", string)\n    lower = re.findall(r\"[a-z]\", string)\n    special = re.findall(r\"[!@#$%&*]\", string)\n    numeric = re.findall(r\"[0-9]\", string)\n\n    return len(upper), len(lower), len(special), len(numeric)\n\n\nif __name__ == \"__main__\":\n    string = \"!@#$%&*()_+\"\n    print(regex_char(string))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "import re\ndef get_values(text):\n    result = re.findall(r\"[A-Z]+|[a-z]+|[!@#$%&]+|\\d+\", text)\n    return result\n\nif __name__ == '__main__':\n    text = \"ABCD1234!@#$efgh5678\"\n    print(get_values(text))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "import re\n\ndef check(s):\n    if len(s) == 0:\n        return \"Empty String\"\n    else:\n        pattern = re.compile(r'([A-Z]+)')\n        upper = pattern.findall(s)\n        pattern = re.compile(r'([a-z]+)')\n        lower = pattern.findall(s)\n        pattern = re.compile(r'([0-9]+)')\n        digit = pattern.findall(s)\n        pattern = re.compile(r'([^A-Za-z0-9]+)')\n        special = pattern.findall(s)\n        return [len(upper), len(lower), len(digit), len(special)]\n\n\ndef main():\n    s = input()\n    output = check(s)\n    print(*output)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "import re\n\n\ndef regex_fun(str_input):\n    upper_case = re.findall(\"[A-Z]\", str_input)\n    lower_case = re.findall(\"[a-z]\", str_input)\n    special_char = re.findall(\"[!@#$%^&*()]\", str_input)\n    numeric = re.findall(\"[0-9]\", str_input)\n\n    print(\"Upper case: \", upper_case)\n    print(\"Lower case: \", lower_case)\n    print(\"Special char: \", special_char)\n    print(\"Numeric: \", numeric)\n\n\nregex_fun(\"!@#$%^&*()aA1\")"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "import re\n\ndef check_char(string):\n    upper = re.findall(r\"[A-Z]\", string)\n    lower = re.findall(r\"[a-z]\", string)\n    num = re.findall(r\"[0-9]\", string)\n    special = re.findall(r\"[#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]\", string)\n\n    print(\"uppercase: \", len(upper))\n    print(\"lowercase: \", len(lower))\n    print(\"numeric: \", len(num))\n    print(\"special character: \", len(special))\n\ncheck_char(\"$%^&*()_+1234567890\")"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "import re\n\n\ndef regex_fun(input):\n    upper = re.findall(r\"[A-Z]\", input)\n    lower = re.findall(r\"[a-z]\", input)\n    num = re.findall(r\"[0-9]\", input)\n    special = re.findall(r\"[!@#$%^&*()\\-+]\", input)\n    return upper, lower, num, special\n\n\ndef main():\n    input = \"!@#$%^&*()_1234567890AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\n    print(regex_fun(input))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "import re\n\ndef check(string):\n    regex1 = re.compile(r\"[A-Z]\")\n    regex2 = re.compile(r\"[a-z]\")\n    regex3 = re.compile(r\"[0-9]\")\n    regex4 = re.compile(r\"[!@#$%^&*]\")\n\n    upper = regex1.findall(string)\n    lower = regex2.findall(string)\n    num = regex3.findall(string)\n    spec = regex4.findall(string)\n\n    return upper, lower, num, spec\n\n\nstring = \"!@#$%^&*abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\"\nupper, lower, num, spec = check(string)\n\nprint(\"Uppercase:\", upper)\nprint(\"Lowercase:\", lower)\nprint(\"Numeric:\", num)\nprint(\"Special:\", spec)"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "import re\n\n\ndef get_values(s):\n    upper = re.findall(r\"[A-Z]\", s)\n    lower = re.findall(r\"[a-z]\", s)\n    digits = re.findall(r\"[0-9]\", s)\n    special_char = re.findall(r\"[!@#$%^&*()]\", s)\n    return upper, lower, digits, special_char\n\n\n# test\nstring = \"!@#$%^&*()1234567890AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz\"\nprint(get_values(string))"
    },
    {
      "rank": 11,
      "score": 9.370583536698913,
      "candidate": "import re\n\ndef check(string):\n    pattern1 = re.compile(r\"[A-Z]\")\n    pattern2 = re.compile(r\"[a-z]\")\n    pattern3 = re.compile(r\"[!@#$%^&*]\")\n    pattern4 = re.compile(r\"[0-9]\")\n\n    if pattern1.search(string):\n        print(\"Uppercase\")\n    if pattern2.search(string):\n        print(\"Lowercase\")\n    if pattern3.search(string):\n        print(\"Special character\")\n    if pattern4.search(string):\n        print(\"Numeric\")\n\n\ncheck(\"Hello@123\")"
    },
    {
      "rank": 12,
      "score": 9.234050852198141,
      "candidate": "import re\n\n\ndef validate_input(string: str) -> bool:\n    if not string.isalpha():\n        return False\n    return True\n\n\ndef check(string: str) -> dict:\n    \"\"\"Check if the input is valid.\"\"\"\n    if not string.isalpha():\n        raise ValueError(\"Invalid input. Please input a valid string.\")\n\n    return string\n\n\ndef validate(string: str) -> dict:\n    \"\"\"Validate the input.\"\"\"\n    if not string.isalpha():\n        raise ValueError(\"Invalid input. Please input a valid string.\")\n\n    return re.findall(r'[A-Z]', string)\n\n\ndef validate_regex(string: str) -> dict:\n    \"\"\"Validate the input using regex.\"\"\"\n    if not string.isalpha():\n        raise ValueError(\"Invalid input. Please input a valid string.\")\n\n    return re.findall(r'[A-Z]', string)\n\n\nif __name__ == '__main__':\n    print(validate('a'))"
    },
    {
      "rank": 13,
      "score": 9.226766272351448,
      "candidate": "import re\n\ndef check(s):\n    return re.findall(\"[A-Z]\", s)\n\ndef check1(s):\n    return re.findall(\"[a-z]\", s)\n\ndef check2(s):\n    return re.findall(\"[0-9]\", s)\n\ndef check3(s):\n    return re.findall(\"[!@#$%&*]\", s)\n\ns = \"!@#$%^&*()_+\"\n\nprint(check(s))\nprint(check1(s))\nprint(check2(s))\nprint(check3(s))"
    },
    {
      "rank": 14,
      "score": 9.21346272767743,
      "candidate": "import re\n\n\ndef find_values(string):\n    uppercase = re.findall(\"[A-Z]\", string)\n    lowercase = re.findall(\"[a-z]\", string)\n    special = re.findall(\"[!@#$%&*?]\", string)\n    numeric = re.findall(\"[0-9]\", string)\n    return uppercase, lowercase, special, numeric"
    },
    {
      "rank": 15,
      "score": 9.205959372648458,
      "candidate": "import re\n\ndef check(s):\n    pattern1 = r'[A-Z]'\n    pattern2 = r'[a-z]'\n    pattern3 = r'[0-9]'\n    pattern4 = r'[!@#$%^&*]'\n\n    return len(re.findall(pattern1, s)), len(re.findall(pattern2, s)), len(re.findall(pattern3, s)), len(re.findall(pattern4, s))\n\n\nif __name__ == '__main__':\n    s = input('Enter a string: ')\n    upper, lower, numeric, special = check(s)\n    print('Uppercase: ', upper)\n    print('Lowercase: ', lower)\n    print('Numeric: ', numeric)\n    print('Special character: ', special)"
    },
    {
      "rank": 16,
      "score": 9.177268828905222,
      "candidate": "import re\n\n\ndef find_values(string):\n    upper = re.findall(r'[A-Z]', string)\n    lower = re.findall(r'[a-z]', string)\n    special = re.findall(r'[!@#$%^&*]', string)\n    numeric = re.findall(r'\\d', string)\n\n    print(f\"Uppercase: {upper}\")\n    print(f\"Lowercase: {lower}\")\n    print(f\"Special: {special}\")\n    print(f\"Numeric: {numeric}\")\n\n\nfind_values(\"Aa!@#$%^&*123\")"
    },
    {
      "rank": 17,
      "score": 9.122564458729856,
      "candidate": "import re\n\ndef check(string):\n    if re.search('[a-z]', string):\n        print(\"At least one lower case character\")\n    if re.search('[A-Z]', string):\n        print(\"At least one upper case character\")\n    if re.search('[0-9]', string):\n        print(\"At least one numeric character\")\n    if re.search('[`~!@#$%^&*()_=+\\[\\]{}\\\\|;:\\'\\\",<>/?]', string):\n        print(\"At least one special character\")\n\n\nif __name__ == '__main__':\n    check('Aa1!')\n    check('Aa')\n    check('A1')\n    check('A')\n    check('1')"
    },
    {
      "rank": 18,
      "score": 8.973005557553902,
      "candidate": "import re\n\ndef check_user(string):\n    upper_case = re.search(r\"[A-Z]\", string)\n    lower_case = re.search(r\"[a-z]\", string)\n    special_char = re.search(r\"[`~!@#$%^&*()_=+\\[\\]{}\\\\|;:'\\\",<>/?]\", string)\n    numeric_value = re.search(r\"[0-9]\", string)\n\n    if upper_case and lower_case and special_char and numeric_value:\n        return \"Strong\"\n    elif upper_case and lower_case and special_char:\n        return \"Regular\"\n    elif upper_case and lower_case and numeric_value:\n        return \"Weak\"\n    elif upper_case and special_char and numeric_value:\n        return \"Weak\"\n    elif lower_case and special_char and numeric_value:\n        return \"Weak\"\n    elif upper_case and lower_case and numeric_value:\n        return \"Weak\"\n    elif upper_case and special_char:\n        return \"Weak\"\n    elif lower_case and special_char:\n        return \"Weak\"\n    elif numeric_value and special_char:\n        return \"Weak\"\n    else:\n        return \"None\"\n\nprint(check_user(\"A1234567890\"))\nprint(check_user(\"a1234567890\"))\nprint(check_user(\"A1234567890a\"))\nprint(check_user(\"a1234567890A\"))\nprint(check_user(\"A1234567890@\"))\nprint(check_user(\"a1234567890@\"))\nprint(check_user(\"A1234567890!\"))\nprint(check_user(\"a1234567890!\"))\nprint(check_user(\"A1234567890_\"))\nprint(check_user(\"a1234567890_\"))"
    },
    {
      "rank": 19,
      "score": 8.95994420569242,
      "candidate": "import re\n\n\ndef password_check(password):\n    if len(password) >= 8:\n        if re.search(\"[0-9]\", password) is not None:\n            if re.search(\"[a-z]\", password) is not None:\n                if re.search(\"[A-Z]\", password) is not None:\n                    if re.search(\"[_@$]\", password) is not None:\n                        return True\n                    else:\n                        return \"Special character is missing.\"\n                else:\n                    return \"Uppercase letter is missing.\"\n            else:\n                return \"Lowercase letter is missing.\"\n        else:\n            return \"Numeric value is missing.\"\n    else:\n        return \"The password is too short.\"\n\n\n# password_check(\"abc@123\")\npassword = input(\"Enter the password: \")\nprint(password_check(password))"
    },
    {
      "rank": 20,
      "score": 8.946210893390457,
      "candidate": "import re\n\ndef check(string):\n    upper = re.findall(r\"[A-Z]\", string)\n    lower = re.findall(r\"[a-z]\", string)\n    num = re.findall(r\"[0-9]\", string)\n    special = re.findall(r\"[!@#$%^&*]\", string)\n    print(\"Uppercase:\", len(upper))\n    print(\"Lowercase:\", len(lower))\n    print(\"Special Character:\", len(special))\n    print(\"Numeric:\", len(num))\n\n\ncheck(\"!@#$%^&*abcdefghijklmnopqrstuvwxyz\")\ncheck(\"!@#$%^&*abcdefghijklmnopqrstuvwxyz1234567890\")\ncheck(\"!@#$%^&*abcdefghijklmnopqrstuvwxyz1234567890\")\ncheck(\"!@#$%^&*abcdefghijklmnopqrstuvwxyz1234567890\")"
    },
    {
      "rank": 21,
      "score": 8.932217008005624,
      "candidate": "import re\n\ndef test_regex(input_string):\n    upper_pattern = re.compile(r\"[A-Z]\")\n    lower_pattern = re.compile(r\"[a-z]\")\n    special_pattern = re.compile(r\"[!@#$%^&*]\")\n    numeric_pattern = re.compile(r\"[0-9]\")\n    print(f\"Uppercase: {upper_pattern.findall(input_string)}\")\n    print(f\"Lowercase: {lower_pattern.findall(input_string)}\")\n    print(f\"Special Character: {special_pattern.findall(input_string)}\")\n    print(f\"Numeric: {numeric_pattern.findall(input_string)}\")\n\nif __name__ == \"__main__\":\n    test_regex(\"Hello123!@#\")"
    },
    {
      "rank": 22,
      "score": 8.910084504002544,
      "candidate": "import re\n\n\ndef check(s):\n    if not s:\n        return False\n\n    regex = re.compile(r'[a-z]|[A-Z]|\\d|[`~!@#$%^&*()_={}\\[\\]\\|;:\\'\",<.>/?]')\n    if regex.match(s):\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    print(check(\"12345\"))\n    print(check(\"A1B2c\"))\n    print(check(\"`~!@#$%^&*()_={}|[]\\;\\':\\\"<>?,/\"))\n    print(check(\"AbC12345\"))\n    print(check(\"ABC12345\"))\n    print(check(\"12345ABC\"))\n    print(check(\"12345\"))\n    print(check(\"ABC\"))\n    print(check(\"\"))"
    },
    {
      "rank": 23,
      "score": 8.85571690049604,
      "candidate": "import re\n\ndef check(string):\n    upper = re.findall(r'[A-Z]', string)\n    lower = re.findall(r'[a-z]', string)\n    special = re.findall(r'[!@#$%^&*]', string)\n    numeric = re.findall(r'[0-9]', string)\n    return upper, lower, special, numeric\n\n\nif __name__ == '__main__':\n    string = input(\"Enter string: \")\n    upper, lower, special, numeric = check(string)\n    print(f\"Upper case: {upper}\")\n    print(f\"Lower case: {lower}\")\n    print(f\"Special character: {special}\")\n    print(f\"Numeric: {numeric}\")"
    },
    {
      "rank": 24,
      "score": 8.855395696632057,
      "candidate": "import re\n\n\ndef check(s):\n    print(\"Uppercase characters : \" + str(len(re.findall(\"[A-Z]\", s))))\n    print(\"Lowercase characters : \" + str(len(re.findall(\"[a-z]\", s))))\n    print(\"Special characters : \" + str(len(re.findall(\"[#!@$%^&*]\", s))))\n    print(\"Numeric characters : \" + str(len(re.findall(\"[0-9]\", s))))\n\n\nif __name__ == '__main__':\n    s = input()\n    check(s)"
    },
    {
      "rank": 25,
      "score": 8.850707355641543,
      "candidate": "import re\n\ndef check_char(string):\n    return re.search(\"[A-Z]\", string)\n\ndef check_char_lower(string):\n    return re.search(\"[a-z]\", string)\n\ndef check_special_char(string):\n    return re.search(\"[!@#$%^&*]\", string)\n\ndef check_numeric(string):\n    return re.search(\"[0-9]\", string)\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    if check_char(string):\n        print(\"Uppercase characters found\")\n    else:\n        print(\"No uppercase characters found\")\n    if check_char_lower(string):\n        print(\"Lowercase characters found\")\n    else:\n        print(\"No lowercase characters found\")\n    if check_special_char(string):\n        print(\"Special characters found\")\n    else:\n        print(\"No special characters found\")\n    if check_numeric(string):\n        print(\"Numeric characters found\")\n    else:\n        print(\"No numeric characters found\")"
    },
    {
      "rank": 26,
      "score": 8.8281618090209,
      "candidate": "import re\n\n\ndef find_upper_lower_special(input_str):\n    \"\"\"\n    >>> find_upper_lower_special(\"Aa1!\")\n    ('A', 'a', '!', '1')\n    \"\"\"\n    return re.findall(\"[A-Z]+\", input_str), re.findall(\"[a-z]+\", input_str), re.findall(\"[!@#$%^&*]+\", input_str), re.findall(\"[0-9]+\", input_str)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 27,
      "score": 8.81367773444215,
      "candidate": "import re\n\ndef check(string):\n    if re.match(r\"^[A-Z]+$\", string):\n        return \"uppercase\"\n    elif re.match(r\"^[a-z]+$\", string):\n        return \"lowercase\"\n    elif re.match(r\"^[A-Za-z0-9]+$\", string):\n        return \"numeric and special\"\n    elif re.match(r\"^[a-z0-9]+$\", string):\n        return \"lowercase and numeric\"\n    elif re.match(r\"^[A-Z0-9]+$\", string):\n        return \"uppercase and numeric\"\n    elif re.match(r\"^[0-9]+$\", string):\n        return \"numeric\"\n    elif re.match(r\"^[A-Za-z]+$\", string):\n        return \"alphabet\"\n    else:\n        return \"invalid\"\n\n\nif __name__ == '__main__':\n    string = input(\"Enter any string: \")\n    result = check(string)\n    print(result)"
    },
    {
      "rank": 28,
      "score": 8.76828871349479,
      "candidate": "import re\n\ndef check(string):\n    special_char = re.compile(r'[~`!@#$%^&*()_=+{}\\[\\]\\|<,/?\"]')\n    lower_case = re.compile(r'[a-z]')\n    upper_case = re.compile(r'[A-Z]')\n    numeric = re.compile(r'[0-9]')\n\n    return special_char.search(string), lower_case.search(string), upper_case.search(string), numeric.search(string)\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    result = check(string)\n    print(\"Special character: \", result[0])\n    print(\"Lower case: \", result[1])\n    print(\"Upper case: \", result[2])\n    print(\"Numeric: \", result[3])"
    },
    {
      "rank": 29,
      "score": 8.750282588864879,
      "candidate": "import re\n\n\ndef check(string):\n    if re.search('[A-Z]', string) and re.search('[a-z]', string) and re.search('[0-9]', string):\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    print(check('Aa1'))\n    print(check('Aa2'))\n    print(check('Aa3'))\n    print(check('Aa4'))\n    print(check('Aa5'))"
    },
    {
      "rank": 30,
      "score": 8.715724466237427,
      "candidate": "import re\n\ndef check(input_str):\n    up = len(re.findall(\"[A-Z]\", input_str))\n    lo = len(re.findall(\"[a-z]\", input_str))\n    nu = len(re.findall(\"[0-9]\", input_str))\n    sp = len(re.findall(\"[!@#$%^&*()]\", input_str))\n    return up, lo, nu, sp\n\ninput_str = \"!@#$%^&*()1234abcdefghijklmno\"\nprint(\"Input string:\", input_str)\nup, lo, nu, sp = check(input_str)\nprint(\"Uppercase: %d\\nLowercase: %d\\nNumeric: %d\\nSpecial: %d\" % (up, lo, nu, sp))"
    },
    {
      "rank": 31,
      "score": 8.692801520950061,
      "candidate": "import re\n\ndef check_password(password):\n    upper = re.search(\"[A-Z]+\", password)\n    lower = re.search(\"[a-z]+\", password)\n    special = re.search(\"[!@#$%&*()]*\", password)\n    numeric = re.search(\"[0-9]+\", password)\n    if upper and lower and special and numeric:\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    password = input(\"Enter password:\")\n    if check_password(password):\n        print(\"Strong password\")\n    else:\n        print(\"Weak password\")"
    },
    {
      "rank": 32,
      "score": 8.632293453617281,
      "candidate": "import re\n\n\ndef main(str):\n    p = re.compile(r\"[A-Z]+\")\n    m = p.search(str)\n    if m:\n        print(\"Uppercase:\", m.group())\n    else:\n        print(\"No Uppercase\")\n\n    p = re.compile(r\"[a-z]+\")\n    m = p.search(str)\n    if m:\n        print(\"Lowercase:\", m.group())\n    else:\n        print(\"No Lowercase\")\n\n    p = re.compile(r\"[A-Za-z]+\")\n    m = p.search(str)\n    if m:\n        print(\"Alphabets:\", m.group())\n    else:\n        print(\"No Alphabets\")\n\n    p = re.compile(r\"[0-9]+\")\n    m = p.search(str)\n    if m:\n        print(\"Numeric:\", m.group())\n    else:\n        print(\"No Numeric\")\n\n    p = re.compile(r\"[A-Za-z0-9]+\")\n    m = p.search(str)\n    if m:\n        print(\"Alphanumeric:\", m.group())\n    else:\n        print(\"No Alphanumeric\")\n\n\nif __name__ == \"__main__\":\n    main(\"Hello! 123\")"
    },
    {
      "rank": 33,
      "score": 8.625262456968262,
      "candidate": "import re\n\ndef find_upper_lower(s):\n    if len(s) == 0:\n        return 0\n    upper = len(re.findall('[A-Z]',s))\n    lower = len(re.findall('[a-z]',s))\n    special = len(re.findall('[!@#$%^&*]',s))\n    numeric = len(re.findall('[0-9]',s))\n    return upper, lower, special, numeric\n\nif __name__ == '__main__':\n    s = input()\n    result = find_upper_lower(s)\n    print(*result)"
    },
    {
      "rank": 34,
      "score": 8.625142247198651,
      "candidate": "import re\n\n\ndef check(string):\n    up = re.findall(\"[A-Z]\", string)\n    low = re.findall(\"[a-z]\", string)\n    num = re.findall(\"[0-9]\", string)\n    spec = re.findall(\"[#?!@$%^&*-]\", string)\n    print(f\"Uppercase : {len(up)}\")\n    print(f\"Lowercase : {len(low)}\")\n    print(f\"Numeric   : {len(num)}\")\n    print(f\"Special   : {len(spec)}\")\n\n\ncheck(\"Python@123\")"
    },
    {
      "rank": 35,
      "score": 8.616253589228675,
      "candidate": "import re\n\n\ndef get_char_type(input_str):\n    uppercase = re.findall(\"[A-Z]\", input_str)\n    lowercase = re.findall(\"[a-z]\", input_str)\n    special = re.findall(\"[!@#$%&*?]\", input_str)\n    numeric = re.findall(\"[0-9]\", input_str)\n    return uppercase, lowercase, special, numeric\n\n\nif __name__ == \"__main__\":\n    print(get_char_type(\"Hey! This is my 1st program!\"))"
    },
    {
      "rank": 36,
      "score": 8.610076160146226,
      "candidate": "import re\n\ndef checker(string):\n    \"\"\"\n    >>> checker(\"abc\")\n    (0, 0, 0, 3)\n    >>> checker(\"Abc\")\n    (1, 0, 0, 2)\n    >>> checker(\"aBc\")\n    (1, 1, 0, 2)\n    >>> checker(\"abc123\")\n    (0, 0, 1, 5)\n    >>> checker(\"Abc123\")\n    (1, 0, 1, 5)\n    >>> checker(\"aBc123\")\n    (1, 1, 1, 5)\n    >>> checker(\"!@#$%^&*()_+-=[]\\{}|;':,./<>?\")\n    (0, 0, 14, 21)\n    >>> checker(\"!@#$%^&*()_+-=[]\\{}|;':,./<>?123\")\n    (0, 0, 14, 24)\n    >>> checker(\"!@#$%^&*()_+-=[]\\{}|;':,./<>?ABC\")\n    (1, 0, 14, 24)\n    >>> checker(\"!@#$%^&*()_+-=[]\\{}|;':,./<>?aBc\")\n    (1, 1, 14, 24)\n    \"\"\"\n    uppercase = len(re.findall(r'[A-Z]', string))\n    lowercase = len(re.findall(r'[a-z]', string))\n    special_char = len(re.findall(r'[!@#$%^&*()_+-=[\\]{}|;:\\'\",.<>?/]', string))\n    numeric = len(re.findall(r'[0-9]', string))\n    return uppercase, lowercase, special_char, numeric\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 8.606486429141842,
      "candidate": "import re\n\ndef check_input(string):\n    if not string.isalpha():\n        return re.findall(r\"[A-Z]\", string)\n    elif not string.islower():\n        return re.findall(r\"[a-z]\", string)\n    elif not string.isnumeric():\n        return re.findall(r\"[0-9]\", string)\n    elif not string.isspace():\n        return re.findall(r\"\\s\", string)\n    else:\n        return \"Invalid input\"\n\n\nstring = input(\"Enter string: \")\nprint(check_input(string))"
    },
    {
      "rank": 38,
      "score": 8.60156811074208,
      "candidate": "import re\n\ndef check_values(input_string):\n    upper_case = len(re.findall('[A-Z]', input_string))\n    lower_case = len(re.findall('[a-z]', input_string))\n    numeric = len(re.findall('[0-9]', input_string))\n    special = len(re.findall('[!@#$%^&*]', input_string))\n    print(\"Uppercase characters:\", upper_case)\n    print(\"Lowercase characters:\", lower_case)\n    print(\"Numeric characters:\", numeric)\n    print(\"Special characters:\", special)\n\ncheck_values(\"The quick brown fox jumps over the lazy dog.\")\ncheck_values(\"Python\")\ncheck_values(\"Python123\")\ncheck_values(\"Python123!@#\")"
    },
    {
      "rank": 39,
      "score": 8.565425580227462,
      "candidate": "import re\n\ndef check(password):\n    if re.search(\"[A-Z]\", password) is None:\n        print(\"Password does not contain Uppercase\")\n    if re.search(\"[a-z]\", password) is None:\n        print(\"Password does not contain lowercase\")\n    if re.search(\"[0-9]\", password) is None:\n        print(\"Password does not contain numeric\")\n    if re.search(\"[!@#$%]\", password) is None:\n        print(\"Password does not contain special character\")\n\ncheck(\"asdfghj\")"
    },
    {
      "rank": 40,
      "score": 8.548876241946822,
      "candidate": "import re\n\n\ndef check(string):\n    upper = re.findall(r'[A-Z]', string)\n    lower = re.findall(r'[a-z]', string)\n    special = re.findall(r'[!@#$%^&*()]', string)\n    numeric = re.findall(r'[0-9]', string)\n    print(\"uppercase : \", len(upper))\n    print(\"lowercase : \", len(lower))\n    print(\"special : \", len(special))\n    print(\"numeric : \", len(numeric))\n\n\nstring = input(\"Enter a string : \")\ncheck(string)"
    },
    {
      "rank": 41,
      "score": 8.542875062379007,
      "candidate": "import re\n\ndef check(text):\n    if re.search(r'[A-Z]', text):\n        print(\"Uppercase\")\n    else:\n        print(\"No Uppercase\")\n    if re.search(r'[a-z]', text):\n        print(\"Lowercase\")\n    else:\n        print(\"No Lowercase\")\n    if re.search(r'[0-9]', text):\n        print(\"Numeric\")\n    else:\n        print(\"No Numeric\")\n    if re.search(r'[!@#$%^&*]', text):\n        print(\"Special Character\")\n    else:\n        print(\"No Special Character\")\n\ncheck(\"aA1!\")\ncheck(\"aaa\")"
    },
    {
      "rank": 42,
      "score": 8.53012858503943,
      "candidate": "import re\n\ndef check_values(string):\n    string = string.strip()\n    upper = len(re.findall(r'[A-Z]', string))\n    lower = len(re.findall(r'[a-z]', string))\n    special = len(re.findall(r'[!@#$%^&*]', string))\n    numeric = len(re.findall(r'[0-9]', string))\n    return upper, lower, special, numeric\n\n\nif __name__ == '__main__':\n    print(check_values('Abc123!@'))"
    },
    {
      "rank": 43,
      "score": 8.499905739299377,
      "candidate": "import re\n\ndef check(s):\n    result = {}\n    result[\"uppercase\"] = len(re.findall(\"[A-Z]\", s))\n    result[\"lowercase\"] = len(re.findall(\"[a-z]\", s))\n    result[\"numeric\"] = len(re.findall(\"[0-9]\", s))\n    result[\"special\"] = len(re.findall(\"[^A-Za-z0-9]\", s))\n    return result\n\nprint(check(\"Python@1234\"))\nprint(check(\"python1234\"))\nprint(check(\"Python1234\"))\nprint(check(\"Python_1234\"))\nprint(check(\"Python@1234\"))\nprint(check(\"Python@1234\"))"
    },
    {
      "rank": 44,
      "score": 8.490324832712195,
      "candidate": "import re\n\n\ndef regex(input):\n    upper = re.findall(r\"[A-Z]\", input)\n    lower = re.findall(r\"[a-z]\", input)\n    special = re.findall(r\"[!@#$%&*?]\", input)\n    numeric = re.findall(r\"[0-9]\", input)\n\n    return [upper, lower, special, numeric]\n\n\ninput = \"!@#$%Abcd123efG\"\nprint(regex(input))"
    },
    {
      "rank": 45,
      "score": 8.48796797856353,
      "candidate": "import re\n\ndef check(string):\n    pattern1 = re.compile(r\"[A-Z]\")\n    pattern2 = re.compile(r\"[a-z]\")\n    pattern3 = re.compile(r\"[0-9]\")\n    pattern4 = re.compile(r\"[!@#$%^&*]\")\n\n    if pattern1.findall(string):\n        print(\"Uppercase\")\n    if pattern2.findall(string):\n        print(\"Lowercase\")\n    if pattern3.findall(string):\n        print(\"Numeric\")\n    if pattern4.findall(string):\n        print(\"Special\")\n\ncheck(\"!@#$%^&*\")\ncheck(\"Aa1!\")\ncheck(\"123\")"
    },
    {
      "rank": 46,
      "score": 8.478208546788407,
      "candidate": "import re\n\n\ndef check_password(password):\n    if re.search(\"[A-Z]\", password):\n        print(\"At least one upper case letter\")\n    else:\n        print(\"Password must have at least one upper case letter\")\n\n    if re.search(\"[a-z]\", password):\n        print(\"At least one lower case letter\")\n    else:\n        print(\"Password must have at least one lower case letter\")\n\n    if re.search(\"[0-9]\", password):\n        print(\"At least one numeric value\")\n    else:\n        print(\"Password must have at least one numeric value\")\n\n    if re.search(\"[ !@#$%&'()*+,-./[\\\\\\]^_`{|}~\" + '\"]', password):\n        print(\"At least one special character\")\n    else:\n        print(\"Password must have at least one special character\")\n\n    if len(password) >= 8:\n        print(\"Valid password\")\n    else:\n        print(\"Password length must be at least 8 characters\")\n\n\ncheck_password(\"Abcd123$\")\ncheck_password(\"Abcd123\")\ncheck_password(\"Abcd1234\")\ncheck_password(\"Abcd12345\")"
    },
    {
      "rank": 47,
      "score": 8.437695832075478,
      "candidate": "import re\n\n\ndef check_password(password):\n    \"\"\"\n    This function checks the password\n    \"\"\"\n    if re.search(r\"[A-Z]\", password):\n        upper = \"Uppercase\"\n    else:\n        upper = \"No uppercase\"\n    if re.search(r\"[a-z]\", password):\n        lower = \"Lowercase\"\n    else:\n        lower = \"No lowercase\"\n    if re.search(r\"[0-9]\", password):\n        num = \"Numeric\"\n    else:\n        num = \"No numeric\"\n    if re.search(r\"[ !#$%&'()*+,-./[\\\\\\]^_`{|}~\" + r'\"]', password):\n        special = \"Special character\"\n    else:\n        special = \"No special character\"\n\n    return upper, lower, num, special\n\n\npassword = input(\"Enter the password: \")\nprint(check_password(password))"
    },
    {
      "rank": 48,
      "score": 8.426531424889468,
      "candidate": "import re\n\n\ndef find_values(string):\n    uppercase = re.findall(r'[A-Z]', string)\n    lowercase = re.findall(r'[a-z]', string)\n    numeric = re.findall(r'[0-9]', string)\n    special_char = re.findall(r'[^a-zA-Z0-9]', string)\n\n    return uppercase, lowercase, numeric, special_char\n\n\nif __name__ == '__main__':\n    string = 'Gl@d@2020'\n    uppercase, lowercase, numeric, special_char = find_values(string)\n    print(f'Uppercase : {uppercase}')\n    print(f'Lowercase : {lowercase}')\n    print(f'Numeric : {numeric}')\n    print(f'Special Characters : {special_char}')"
    },
    {
      "rank": 49,
      "score": 8.408439383654278,
      "candidate": "import re\n\n\ndef get_character_type(string):\n    upper_case = re.findall(r\"[A-Z]\", string)\n    lower_case = re.findall(r\"[a-z]\", string)\n    special_character = re.findall(r\"[!@#$%^&*]\", string)\n    numeric_character = re.findall(r\"[0-9]\", string)\n    print(\"Uppercase: \", upper_case)\n    print(\"Lowercase: \", lower_case)\n    print(\"Special Character: \", special_character)\n    print(\"Numeric Character: \", numeric_character)\n\n\nif __name__ == \"__main__\":\n    get_character_type(\"!@#$%^&*()_+-=[]{};:,./<>?\")\n    get_character_type(\"python\")\n    get_character_type(\"Python\")\n    get_character_type(\"12345\")\n    get_character_type(\"1a2B3c4d\")"
    },
    {
      "rank": 50,
      "score": 8.386620303250325,
      "candidate": "import re\n\ndef check(string):\n    upper = re.findall(r'[A-Z]', string)\n    lower = re.findall(r'[a-z]', string)\n    special = re.findall(r'[!@#$%^&*()_+=?<>,.]', string)\n    numeric = re.findall(r'[0-9]', string)\n    return upper, lower, special, numeric\n\nif __name__ == '__main__':\n    string = input('Enter a string: ')\n    upper, lower, special, numeric = check(string)\n    print('Upper case:', upper)\n    print('Lower case:', lower)\n    print('Special characters:', special)\n    print('Numeric characters:', numeric)"
    },
    {
      "rank": 51,
      "score": 8.375312293858853,
      "candidate": "import re\n\ndef check(string):\n    upper_case = re.findall(\"[A-Z]\", string)\n    lower_case = re.findall(\"[a-z]\", string)\n    num = re.findall(\"[0-9]\", string)\n    special_char = re.findall(\"[!@#$%^&*()_+\\-=\\[\\]{};':\\\"\\\\|,.<>\\/?]\", string)\n\n    return upper_case, lower_case, num, special_char\n\n\nif __name__ == \"__main__\":\n    string = \"Abc123!@#\"\n    print(check(string))"
    },
    {
      "rank": 52,
      "score": 8.351614956112536,
      "candidate": "import re\n\ndef char_check(str):\n    upper_case = len(re.findall(\"[A-Z]\", str))\n    lower_case = len(re.findall(\"[a-z]\", str))\n    special_char = len(re.findall(\"[`~!@#$%^&*()_|+\\-=?><,.:;']\", str))\n    numeric_value = len(re.findall(\"[0-9]\", str))\n\n    print(\"Upper case:\", upper_case)\n    print(\"Lower case:\", lower_case)\n    print(\"Special character:\", special_char)\n    print(\"Numeric value:\", numeric_value)\n\nchar_check(\"`~!@#$%^&*()_|+\\-=?><,.:;'\")"
    },
    {
      "rank": 53,
      "score": 8.331556294201176,
      "candidate": "import re\n\ndef check(string):\n    upper = re.findall(r'[A-Z]', string)\n    lower = re.findall(r'[a-z]', string)\n    num = re.findall(r'[0-9]', string)\n    special = re.findall(r'[^a-zA-Z0-9]', string)\n    return len(upper), len(lower), len(num), len(special)\n\n\nif __name__ == '__main__':\n    s = input('Enter a string: ')\n    upper, lower, num, special = check(s)\n    print(f\"Uppercase: {upper}\\nLowercase: {lower}\\nNumeric: {num}\\nSpecial: {special}\")"
    },
    {
      "rank": 54,
      "score": 8.327375965969855,
      "candidate": "import re\n\ndef regex_char(input_string):\n    pattern_numeric = re.compile(r\"\\d\")\n    pattern_special = re.compile(r\"[!@#$%^&*()]\")\n    pattern_uppercase = re.compile(r\"[A-Z]\")\n    pattern_lowercase = re.compile(r\"[a-z]\")\n    \n    numeric = pattern_numeric.findall(input_string)\n    special = pattern_special.findall(input_string)\n    uppercase = pattern_uppercase.findall(input_string)\n    lowercase = pattern_lowercase.findall(input_string)\n    \n    return numeric, special, uppercase, lowercase\n\n\nif __name__ == '__main__':\n    input_string = 'Aa!@#$%^&*()1234567890'\n    numeric, special, uppercase, lowercase = regex_char(input_string)\n    print(numeric, special, uppercase, lowercase)"
    },
    {
      "rank": 55,
      "score": 8.327367757082776,
      "candidate": "import re\n\n\ndef check(string):\n    upper = re.search(\"[A-Z]\", string)\n    lower = re.search(\"[a-z]\", string)\n    special = re.search(\"[!@#$%&*]\", string)\n    numeric = re.search(\"[0-9]\", string)\n\n    if upper:\n        print(\"Uppercase found\")\n    if lower:\n        print(\"Lowercase found\")\n    if special:\n        print(\"Special character found\")\n    if numeric:\n        print(\"Numeric found\")\n\n\ncheck(\"This is a special string\")"
    },
    {
      "rank": 56,
      "score": 8.298597569547805,
      "candidate": "import re\n\ndef get_values(string):\n    uppercase = re.findall(r'[A-Z]', string)\n    lowercase = re.findall(r'[a-z]', string)\n    special_char = re.findall(r'[^A-Za-z0-9]', string)\n    numeric = re.findall(r'[0-9]', string)\n    return uppercase, lowercase, special_char, numeric\n\nprint(get_values(\"This is a string with special characters & numbers 1234567890\"))"
    },
    {
      "rank": 57,
      "score": 8.294940769211511,
      "candidate": "import re\n\ndef check(string):\n    if re.search(r\"[A-Z]\", string):\n        uppercase = 1\n    else:\n        uppercase = 0\n\n    if re.search(r\"[a-z]\", string):\n        lowercase = 1\n    else:\n        lowercase = 0\n\n    if re.search(r\"[0-9]\", string):\n        numeric = 1\n    else:\n        numeric = 0\n\n    if re.search(r\"[`~!@#$%^&*()_|+\\-=?.;',]\", string):\n        special = 1\n    else:\n        special = 0\n\n    return uppercase, lowercase, numeric, special\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    uppercase, lowercase, numeric, special = check(string)\n    print(\"Uppercase:\", uppercase)\n    print(\"Lowercase:\", lowercase)\n    print(\"Numeric:\", numeric)\n    print(\"Special:\", special)"
    },
    {
      "rank": 58,
      "score": 8.2938925966498,
      "candidate": "import re\n\ndef check(string):\n    if re.search(r'[A-Z]', string):\n        print(\"Uppercase: Yes\")\n    else:\n        print(\"Uppercase: No\")\n    if re.search(r'[a-z]', string):\n        print(\"Lowercase: Yes\")\n    else:\n        print(\"Lowercase: No\")\n    if re.search(r'[0-9]', string):\n        print(\"Numeric: Yes\")\n    else:\n        print(\"Numeric: No\")\n    if re.search(r'[!@#$]', string):\n        print(\"Special Character: Yes\")\n    else:\n        print(\"Special Character: No\")\n\ncheck(\"HelloWorld123\")\ncheck(\"!@#$HelloWorld123\")\ncheck(\"HelloWorld123!@#$\")\ncheck(\"!@#$HelloWorld123!@#$\")\ncheck(\"123!@#$HelloWorld123!@#$\")\ncheck(\"!@#$123!@#$HelloWorld123!@#$\")\ncheck(\"!@#$123!@#$HelloWorld123!@#$!@#$\")\ncheck(\"!@#$123!@#$HelloWorld123!@#$!@#$!@#$\")\ncheck(\"!@#$123!@#$HelloWorld123!@#$!@#$!@#$!@#$\")\ncheck(\"!@#$123!@#$HelloWorld123!@#$!@#$!@#$!@#$!@#$!@#$\")\ncheck(\"!@#$123!@#$HelloWorld123!@#$!@#$!@#$!@#$!@#$!@#$!@#$!@#$\")"
    },
    {
      "rank": 59,
      "score": 8.289838256518838,
      "candidate": "import re\n\n\ndef check(string):\n    special_char = \"[-`~!@#$%^&*()_=+{}\\\\|;:\\'\\\",<.>/?]\"\n    if re.search(\"[0-9]\", string):\n        numeric = True\n    else:\n        numeric = False\n    if re.search(\"[A-Z]\", string):\n        uppercase = True\n    else:\n        uppercase = False\n    if re.search(\"[a-z]\", string):\n        lowercase = True\n    else:\n        lowercase = False\n    if re.search(special_char, string):\n        special = True\n    else:\n        special = False\n    return numeric, uppercase, lowercase, special\n\n\nif __name__ == \"__main__\":\n    s = \"P@$$word123\"\n    numeric, uppercase, lowercase, special = check(s)\n    print(numeric, uppercase, lowercase, special)"
    },
    {
      "rank": 60,
      "score": 8.251903304236286,
      "candidate": "import re\n\ndef get_special_chars(text):\n    regex_spec = re.compile(r'[^\\w\\s]')\n    return len(regex_spec.findall(text))\n\ndef get_numeric_chars(text):\n    regex_num = re.compile(r'\\d')\n    return len(regex_num.findall(text))\n\ndef get_uppercase_chars(text):\n    regex_upper = re.compile(r'[A-Z]')\n    return len(regex_upper.findall(text))\n\ndef get_lowercase_chars(text):\n    regex_lower = re.compile(r'[a-z]')\n    return len(regex_lower.findall(text))\n\ndef get_special_chars(text):\n    regex_spec = re.compile(r'[^\\w\\s]')\n    return len(regex_spec.findall(text))\n\ndef main():\n    text = input(\"Enter a text: \")\n    print(\"Uppercase:\", get_uppercase_chars(text))\n    print(\"Lowercase:\", get_lowercase_chars(text))\n    print(\"Numeric:\", get_numeric_chars(text))\n    print(\"Special:\", get_special_chars(text))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 61,
      "score": 8.214125058964552,
      "candidate": "import re\n\ndef values(string):\n    upper = re.findall(r'[A-Z]', string)\n    lower = re.findall(r'[a-z]', string)\n    num = re.findall(r'[0-9]', string)\n    special = re.findall(r'[!@#$%^&*]', string)\n    return len(upper), len(lower), len(num), len(special)\n\nstring = 'aA!@#$12345'\nprint(\"Uppercase : \", values(string)[0])\nprint(\"Lowercase : \", values(string)[1])\nprint(\"Numeric : \", values(string)[2])\nprint(\"Special : \", values(string)[3])"
    },
    {
      "rank": 62,
      "score": 8.212735598038213,
      "candidate": "import re\n\ndef check(s):\n    # Check for upper case\n    if re.search('[A-Z]', s):\n        print('Upper case')\n    else:\n        print('No Upper case')\n    \n    # Check for lower case\n    if re.search('[a-z]', s):\n        print('Lower case')\n    else:\n        print('No Lower case')\n    \n    # Check for special character\n    if re.search('[!@#$%&*()]', s):\n        print('Special character')\n    else:\n        print('No Special character')\n    \n    # Check for numeric values\n    if re.search('[0-9]', s):\n        print('Numeric value')\n    else:\n        print('No numeric value')\n\nif __name__ == '__main__':\n    check('@abc123')\n    check('abc')\n    check('abc123')"
    },
    {
      "rank": 63,
      "score": 8.211579567659316,
      "candidate": "import re\n\ndef check_pass(passwd):\n    pat_upper = re.compile(r'[A-Z]')\n    pat_lower = re.compile(r'[a-z]')\n    pat_spec = re.compile(r'[!@#$%]')\n    pat_num = re.compile(r'\\d')\n    if len(passwd) < 6:\n        print(\"Password length should be at least 6\")\n    elif not pat_upper.search(passwd):\n        print(\"Password should have at least one uppercase letter\")\n    elif not pat_lower.search(passwd):\n        print(\"Password should have at least one lowercase letter\")\n    elif not pat_spec.search(passwd):\n        print(\"Password should have at least one special character\")\n    elif not pat_num.search(passwd):\n        print(\"Password should have at least one numeric character\")\n    else:\n        print(\"Valid Password\")\n\nif __name__ == '__main__':\n    check_pass(\"Abcd123!\")"
    },
    {
      "rank": 64,
      "score": 8.209707251476969,
      "candidate": "import re\n\n\ndef validate_password(password):\n    \"\"\"\n    Return a list of all the character types\n    \"\"\"\n    upper_case = re.search(\"[A-Z]\", password)\n    lower_case = re.search(\"[a-z]\", password)\n    special_char = re.search(\"[`~!@#$%^&*()_|+\\-=?><,.:;\\'\\\\\"\"]\", password)\n    nums = re.search(\"[0-9]\", password)\n    result = [upper_case, lower_case, special_char, nums]\n    return result\n\n\npassword = \"Aa1!\"\nresult = validate_password(password)\nprint(result)"
    },
    {
      "rank": 65,
      "score": 8.2048573255218,
      "candidate": "import re\n\n\ndef check(string):\n    upper = re.findall(r\"[A-Z]\", string)\n    lower = re.findall(r\"[a-z]\", string)\n    num = re.findall(r\"[0-9]\", string)\n    special = re.findall(r\"[!@#$%&*?]\", string)\n    print(f\"Upper case letters are: {upper}\")\n    print(f\"Lower case letters are: {lower}\")\n    print(f\"Numeric values are: {num}\")\n    print(f\"Special characters are: {special}\")\n\n\ncheck(\"!@#$%^&*()_+1234567890\")"
    },
    {
      "rank": 66,
      "score": 8.172253082181854,
      "candidate": "import re\n\ndef check_password(password):\n    uppercase_flag = 0\n    lowercase_flag = 0\n    special_flag = 0\n    numeric_flag = 0\n\n    if re.search(\"[a-z]\", password):\n        uppercase_flag = 1\n\n    if re.search(\"[A-Z]\", password):\n        uppercase_flag = 1\n\n    if re.search(\"[0-9]\", password):\n        numeric_flag = 1\n\n    if re.search(\"[!@#$%&*]\", password):\n        special_flag = 1\n\n    if uppercase_flag == 1 and lowercase_flag == 1 and numeric_flag == 1 and special_flag == 1:\n        return True\n    else:\n        return False\n\n\npassword = input(\"Enter a password to check its validity: \")\n\nif check_password(password):\n    print(\"Valid Password!\")\nelse:\n    print(\"Invalid Password!\")"
    },
    {
      "rank": 67,
      "score": 8.163300679823958,
      "candidate": "import re\n\ndef check(s):\n    return re.search(\"[A-Z]\", s) is not None, re.search(\"[a-z]\", s) is not None, re.search(\"[0-9]\", s) is not None, re.search(\"[^\\w]\", s) is not None\n\nif __name__ == '__main__':\n    s = input()\n    out = check(s)\n    print(out)"
    },
    {
      "rank": 68,
      "score": 8.144125099485041,
      "candidate": "import re\n\ndef find_uppercase(string):\n    return len(re.findall(r'[A-Z]', string))\n\ndef find_lowercase(string):\n    return len(re.findall(r'[a-z]', string))\n\ndef find_numeric(string):\n    return len(re.findall(r'[0-9]', string))\n\ndef find_special_char(string):\n    return len(re.findall(r'[^A-Za-z0-9]', string))\n\nif __name__ == '__main__':\n    print(find_uppercase(\"Abcd\"))\n    print(find_lowercase(\"abcd\"))\n    print(find_numeric(\"abcd123\"))\n    print(find_special_char(\"abcd$%^\"))"
    },
    {
      "rank": 69,
      "score": 8.143591138329747,
      "candidate": "import re\n\ndef check(string):\n    pattern_upper = re.compile(r'[A-Z]')\n    pattern_lower = re.compile(r'[a-z]')\n    pattern_spec = re.compile(r'[#$@]')\n    pattern_num = re.compile(r'[0-9]')\n\n    print(pattern_upper.findall(string))\n    print(pattern_lower.findall(string))\n    print(pattern_spec.findall(string))\n    print(pattern_num.findall(string))\n\ncheck('$abcd#1234')"
    },
    {
      "rank": 70,
      "score": 8.121884567141883,
      "candidate": "import re\n\ndef check(string):\n    pattern = re.compile(r'[A-Z]')\n    upper = pattern.search(string)\n\n    pattern = re.compile(r'[a-z]')\n    lower = pattern.search(string)\n\n    pattern = re.compile(r'[0-9]')\n    numeric = pattern.search(string)\n\n    pattern = re.compile(r'[!@#$%]')\n    spec = pattern.search(string)\n\n    if upper is not None:\n        print(\"Uppercase:\", upper.group(0))\n    else:\n        print(\"Uppercase:\", None)\n\n    if lower is not None:\n        print(\"Lowercase:\", lower.group(0))\n    else:\n        print(\"Lowercase:\", None)\n\n    if numeric is not None:\n        print(\"Numeric:\", numeric.group(0))\n    else:\n        print(\"Numeric:\", None)\n\n    if spec is not None:\n        print(\"Special:\", spec.group(0))\n    else:\n        print(\"Special:\", None)\n\ncheck('!@#$%^&*()')\ncheck('hello')\ncheck('Hello123')\ncheck('H31110')\ncheck('12345')"
    },
    {
      "rank": 71,
      "score": 8.105983444291466,
      "candidate": "import re\n\n\ndef check(string):\n    upper_case = re.findall(r\"[A-Z]\", string)\n    lower_case = re.findall(r\"[a-z]\", string)\n    special_char = re.findall(r\"[!@#$%&*()\\-_+]\", string)\n    numeric_value = re.findall(r\"[0-9]\", string)\n\n    print(\"Upper Case Characters:\", upper_case)\n    print(\"Lower Case Characters:\", lower_case)\n    print(\"Special Characters:\", special_char)\n    print(\"Numeric Values:\", numeric_value)\n\n\ncheck(\"!@#$%&*()_+-=<>?\")"
    },
    {
      "rank": 72,
      "score": 8.08452234024709,
      "candidate": "import re\n\ndef find_characters(string):\n    \"\"\"\n    >>> find_characters(\"Python123\")\n    ['P', 'y', 't', 'h', 'o', 'n', '1', '2', '3']\n    \"\"\"\n    uppercase = re.findall(r\"[A-Z]\", string)\n    lowercase = re.findall(r\"[a-z]\", string)\n    special_characters = re.findall(r\"[`~!@#$%^&*()_=+\\[\\]{}\\\\|;:\\'\\\",<.>/?]\", string)\n    numeric = re.findall(r\"\\d\", string)\n    print(uppercase)\n    print(lowercase)\n    print(special_characters)\n    print(numeric)\n\nif __name__ == \"__main__\":\n    string = input(\"Enter the string: \")\n    find_characters(string)"
    },
    {
      "rank": 73,
      "score": 8.024835682833125,
      "candidate": "import re\n\ndef check(string):\n    pattern1 = r\"[A-Z]\"\n    pattern2 = r\"[a-z]\"\n    pattern3 = r\"[0-9]\"\n    pattern4 = r\"[!@#$%^&*()]\"\n    print(f\"Uppercase: {len(re.findall(pattern1, string))}\")\n    print(f\"Lowercase: {len(re.findall(pattern2, string))}\")\n    print(f\"Special Character: {len(re.findall(pattern4, string))}\")\n    print(f\"Numeric: {len(re.findall(pattern3, string))}\")\n\ncheck(\"Hello@123#World\")"
    },
    {
      "rank": 74,
      "score": 7.990432406683839,
      "candidate": "import re\n\n\ndef find_values(input_string):\n    pattern_lower = re.compile(r'[a-z]')\n    pattern_upper = re.compile(r'[A-Z]')\n    pattern_special = re.compile(r'[!@#$%^&*]')\n    pattern_numeric = re.compile(r'[0-9]')\n\n    if pattern_lower.search(input_string):\n        print(\"Lowercase:\", pattern_lower.search(input_string).group())\n\n    if pattern_upper.search(input_string):\n        print(\"Uppercase:\", pattern_upper.search(input_string).group())\n\n    if pattern_special.search(input_string):\n        print(\"Special characters:\", pattern_special.search(input_string).group())\n\n    if pattern_numeric.search(input_string):\n        print(\"Numeric:\", pattern_numeric.search(input_string).group())\n\n    return\n\n\nif __name__ == '__main__':\n    find_values(\"S!dfg6\")"
    },
    {
      "rank": 75,
      "score": 7.938028884277233,
      "candidate": "import re\n\ndef check(text):\n    upper = re.findall(r'[A-Z]', text)\n    lower = re.findall(r'[a-z]', text)\n    num = re.findall(r'[0-9]', text)\n    special = re.findall(r'[^a-zA-Z0-9]', text)\n\n    print(\"Uppercase characters: \", upper)\n    print(\"Lowercase characters: \", lower)\n    print(\"Numeric values: \", num)\n    print(\"Special characters: \", special)\n\n\nif __name__ == '__main__':\n    check(\"!@#$%^&*()_+\")"
    },
    {
      "rank": 76,
      "score": 7.915588979966494,
      "candidate": "import re\n\ndef check(s):\n    if(re.search(\"[a-z]\", s)):\n        print(\"lowercase\")\n    if(re.search(\"[A-Z]\", s)):\n        print(\"uppercase\")\n    if(re.search(\"[0-9]\", s)):\n        print(\"numeric\")\n    if(re.search(\"[A-Za-z0-9]\", s)):\n        print(\"alphanumeric\")\n\ncheck(\"Abc123\")"
    },
    {
      "rank": 77,
      "score": 7.8912769574414305,
      "candidate": "import re\n\ndef find_values(string):\n    upper = re.findall(\"[A-Z]\", string)\n    lower = re.findall(\"[a-z]\", string)\n    num = re.findall(\"[0-9]\", string)\n    special = re.findall(\"[^a-zA-Z0-9]\", string)\n    return {\n        \"upper\": upper,\n        \"lower\": lower,\n        \"numeric\": num,\n        \"special\": special\n    }\n\n\nif __name__ == '__main__':\n    print(find_values(\"This is a test123 string!@#\"))"
    },
    {
      "rank": 78,
      "score": 7.868947655733293,
      "candidate": "import re\n\ndef check(string):\n    string = string.lower()\n    upper = re.findall(r'[a-z]', string)\n    lower = re.findall(r'[a-z]', string)\n    spc = re.findall(r'[!@#$%&*]', string)\n    num = re.findall(r'[0-9]', string)\n    return upper, lower, spc, num\n\nif __name__ == '__main__':\n    string = input('Enter a string: ')\n    upper, lower, spc, num = check(string)\n    print('Uppercase: ', len(upper))\n    print('Lowercase: ', len(lower))\n    print('Special: ', len(spc))\n    print('Number: ', len(num))"
    },
    {
      "rank": 79,
      "score": 7.84634113240411,
      "candidate": "import re\n\ndef check(string):\n    print(\"uppercase: \", bool(re.search(\"[A-Z]\", string)))\n    print(\"lowercase: \", bool(re.search(\"[a-z]\", string)))\n    print(\"numeric: \", bool(re.search(\"[0-9]\", string)))\n    print(\"special character: \", bool(re.search(\"[`~!@#$%^&*()_|+\\-=?<?>,./:';\\\"]\", string)))\n\ncheck(\"This is a string\")\ncheck(\"This Is A StrinG\")\ncheck(\"this is a string\")\ncheck(\"1234\")\ncheck(\"1234asdfghjkl\")\ncheck(\"1234asdfghjkl*\")\ncheck(\"1234asdfghjkl*&\")\ncheck(\"1234asdfghjkl*&^\")\ncheck(\"1234asdfghjkl*&^%\")\ncheck(\"1234asdfghjkl*&^%$\")\ncheck(\"1234asdfghjkl*&^%$#\")"
    },
    {
      "rank": 80,
      "score": 7.834022619458933,
      "candidate": "import re\n\n\ndef check_regex(input):\n    upper = re.findall(\"[A-Z]\", input)\n    lower = re.findall(\"[a-z]\", input)\n    special_char = re.findall(\"[!@#$%&*]\", input)\n    numeric = re.findall(\"[0-9]\", input)\n\n    print(\"Uppercase characters:\", upper)\n    print(\"Lowercase characters:\", lower)\n    print(\"Special characters:\", special_char)\n    print(\"Numeric values:\", numeric)\n\n\ndef main():\n    input = input(\"Enter a string: \")\n    check_regex(input)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 81,
      "score": 7.780351419995229,
      "candidate": "import re\n\n\ndef password_check(password):\n    upper = re.findall(r'[A-Z]', password)\n    lower = re.findall(r'[a-z]', password)\n    num = re.findall(r'[0-9]', password)\n    special_char = re.findall(r'[!@#$%^&*()]', password)\n\n    if len(password) >= 6 and len(password) <= 16:\n        if len(upper) >= 1:\n            if len(lower) >= 1:\n                if len(num) >= 1:\n                    if len(special_char) >= 1:\n                        return True\n                    else:\n                        return False\n                else:\n                    return False\n            else:\n                return False\n        else:\n            return False\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    print(password_check('A12121212!'))"
    },
    {
      "rank": 82,
      "score": 7.738292593776799,
      "candidate": "import re\n\ndef get_special_char(input_string):\n    return re.findall(r'[@_!#$%^&*()<>?/\\|}{~:]', input_string)\n\ndef get_numeric_value(input_string):\n    return re.findall(r'\\d', input_string)\n\ndef get_upper_case(input_string):\n    return re.findall(r'[A-Z]', input_string)\n\ndef get_lower_case(input_string):\n    return re.findall(r'[a-z]', input_string)\n\ndef special_char_numeric(input_string):\n    special_char = get_special_char(input_string)\n    numeric_value = get_numeric_value(input_string)\n    return len(special_char) + len(numeric_value)\n\ndef get_password_strength(input_string):\n    upper_case = len(get_upper_case(input_string))\n    lower_case = len(get_lower_case(input_string))\n    special_char_numeric = special_char_numeric(input_string)\n    if len(input_string) >= 8 and upper_case >= 1 and lower_case >= 1 and special_char_numeric >= 1:\n        return \"Strong\"\n    elif len(input_string) >= 6 and upper_case >= 1 and lower_case >= 1 and special_char_numeric >= 1:\n        return \"Good\"\n    elif len(input_string) >= 4 and upper_case >= 1 and lower_case >= 1 and special_char_numeric >= 1:\n        return \"Weak\"\n    else:\n        return \"Invalid Password\"\n\nif __name__ == '__main__':\n    input_string = input(\"Enter a string: \")\n    print(get_password_strength(input_string))"
    },
    {
      "rank": 83,
      "score": 7.7320703513377165,
      "candidate": "import re\n\n\ndef check(string):\n    uppercase = re.findall(r\"[A-Z]\", string)\n    lowercase = re.findall(r\"[a-z]\", string)\n    special_characters = re.findall(r\"[!@#$%^&*()_+\\-=.,?\\':;{}[]|]\", string)\n    numeric = re.findall(r\"\\d\", string)\n    print(\"Uppercase:\", len(uppercase))\n    print(\"Lowercase:\", len(lowercase))\n    print(\"Special Characters:\", len(special_characters))\n    print(\"Numeric:\", len(numeric))\n\n\ncheck(\"Sky@123\")"
    },
    {
      "rank": 84,
      "score": 7.705183449260731,
      "candidate": "import re\n\n\ndef check(string):\n    uppercase = re.findall(r\"[A-Z]\", string)\n    lowercase = re.findall(r\"[a-z]\", string)\n    numeric = re.findall(r\"[0-9]\", string)\n    special = re.findall(r\"[`~!@#$%^&*()_|+\\-=?.;',]\", string)\n    return len(uppercase), len(lowercase), len(numeric), len(special)\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    result = check(string)\n    print(\"Number of uppercase characters: {}\".format(result[0]))\n    print(\"Number of lowercase characters: {}\".format(result[1]))\n    print(\"Number of numeric characters: {}\".format(result[2]))\n    print(\"Number of special characters: {}\".format(result[3]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 85,
      "score": 7.5819855281879285,
      "candidate": "import re\n\n\ndef check_char(char):\n    if re.match(\"[a-z]\", char):\n        return \"Lowercase\"\n    elif re.match(\"[A-Z]\", char):\n        return \"Uppercase\"\n    elif re.match(\"[0-9]\", char):\n        return \"Numeric\"\n    else:\n        return \"Special\"\n\n\nstring = input(\"Enter a string: \")\n\nupper = lower = special = numeric = 0\n\nfor char in string:\n    if check_char(char) == \"Lowercase\":\n        lower += 1\n    elif check_char(char) == \"Uppercase\":\n        upper += 1\n    elif check_char(char) == \"Special\":\n        special += 1\n    elif check_char(char) == \"Numeric\":\n        numeric += 1\n\nprint(f\"Uppercase: {upper}\")\nprint(f\"Lowercase: {lower}\")\nprint(f\"Special: {special}\")\nprint(f\"Numeric: {numeric}\")"
    },
    {
      "rank": 86,
      "score": 7.562924366763077,
      "candidate": "import re\n\ndef check(input_str):\n    if re.match(r'[A-Z]', input_str):\n        print(\"Uppercase\")\n    elif re.match(r'[a-z]', input_str):\n        print(\"Lowercase\")\n    elif re.match(r'[0-9]', input_str):\n        print(\"Numeric\")\n    elif re.match(r'[!@#$%^&*]', input_str):\n        print(\"Special Character\")\n    else:\n        print(\"Not Found\")\n\n\n\n\nif __name__ == '__main__':\n    check(input())"
    },
    {
      "rank": 87,
      "score": 7.4878043221155455,
      "candidate": "import re\n\ndef check_values(string):\n    upper = re.findall(r\"[A-Z]\", string)\n    lower = re.findall(r\"[a-z]\", string)\n    num = re.findall(r\"[0-9]\", string)\n    special = re.findall(r\"[!@#$%^&*()]\", string)\n    return len(upper), len(lower), len(num), len(special)\n\ndef main():\n    string = input(\"Enter a string: \")\n    upper, lower, num, special = check_values(string)\n    print(f\"Uppercase: {upper}\")\n    print(f\"Lowercase: {lower}\")\n    print(f\"Numeric: {num}\")\n    print(f\"Special characters: {special}\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 88,
      "score": 7.464609382504557,
      "candidate": "import re\n\ndef regex_match(input_string=None):\n    if not input_string:\n        input_string = 'dsds+dsds*dsds&dsds'\n\n    upper_case_match = re.findall(r'[A-Z]', input_string)\n    lower_case_match = re.findall(r'[a-z]', input_string)\n    numeric_match = re.findall(r'[0-9]', input_string)\n    special_characters_match = re.findall(r'[`~!@#$%^&*()_=+\\[\\]{}\\\\|;:\\'\",.<>/?]', input_string)\n\n    return upper_case_match, lower_case_match, numeric_match, special_characters_match\n\n\ndef main():\n    result = regex_match()\n    print(\"Upper case: \", result[0])\n    print(\"Lower case: \", result[1])\n    print(\"Numeric: \", result[2])\n    print(\"Special characters: \", result[3])\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 89,
      "score": 7.134571892399572,
      "candidate": "import re\n\ndef check_char(str):\n    uppercase = re.findall(r\"[A-Z]\", str)\n    lowercase = re.findall(r\"[a-z]\", str)\n    numeric = re.findall(r\"[0-9]\", str)\n    special_char = re.findall(r\"[!@#$%&'*+/,.:;^?|]\", str)\n\n    return len(uppercase), len(lowercase), len(numeric), len(special_char)\n\nprint(check_char(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(check_char(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(check_char(\"0123456789\"))\nprint(check_char(\"!@#$%&'*+/,.:;^?|\"))\nprint(check_char(\"!@#$%&'*+/,.:;^?|0123456789\"))\nprint(check_char(\"!@#$%&'*+/,.:;^?|0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "import re\n\n\ndef find_upper(string):\n    return len(re.findall(r'[A-Z]', string))\n\n\ndef find_lower(string):\n    return len(re.findall(r'[a-z]', string))\n\n\ndef find_special(string):\n    return len(re.findall(r'[!@#$%&*]', string))\n\n\ndef find_numeric(string):\n    return len(re.findall(r'[0-9]', string))\n\n\nif __name__ == '__main__':\n    print(find_upper(\"Hello World!\"))\n    print(find_lower(\"Hello World!\"))\n    print(find_special(\"Hello World!\"))\n    print(find_numeric(\"Hello World!\"))"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "import re\n\n\ndef uppercase(s):\n    upper = re.findall(r\"[A-Z]\", s)\n    return len(upper)\n\n\ndef lowercase(s):\n    lower = re.findall(r\"[a-z]\", s)\n    return len(lower)\n\n\ndef special_characters(s):\n    special = re.findall(r\"[!@#$%^&*()_+\\-=\\[\\]{};':\\\"\\\\|,.<>\\/?~`]\", s)\n    return len(special)\n\n\ndef numeric(s):\n    num = re.findall(r\"[0-9]\", s)\n    return len(num)\n\n\ndef checkio(s):\n    return uppercase(s), lowercase(s), special_characters(s), numeric(s)\n\n\nif __name__ == \"__main__\":\n    print(checkio(\"Hello World! Hi\"))\n    print(checkio(\"ABC123abc456\"))\n    print(checkio(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit!\"))"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "import re\n\n\ndef check_uppercase(string):\n    \"\"\"Checks if a given string has uppercase letters.\n\n    Args:\n        string (str): The string to be checked.\n\n    Returns:\n        bool: True if uppercase letters are found in the string, False otherwise.\n    \"\"\"\n    return bool(re.search(r\"[A-Z]\", string))\n\n\ndef check_lowercase(string):\n    \"\"\"Checks if a given string has lowercase letters.\n\n    Args:\n        string (str): The string to be checked.\n\n    Returns:\n        bool: True if lowercase letters are found in the string, False otherwise.\n    \"\"\"\n    return bool(re.search(r\"[a-z]\", string))\n\n\ndef check_special_char(string):\n    \"\"\"Checks if a given string has special characters.\n\n    Args:\n        string (str): The string to be checked.\n\n    Returns:\n        bool: True if special characters are found in the string, False otherwise.\n    \"\"\"\n    return bool(re.search(r\"[!@#$%&*)(_+\\-=.,/]\", string))\n\n\ndef check_numeric(string):\n    \"\"\"Checks if a given string has numeric values.\n\n    Args:\n        string (str): The string to be checked.\n\n    Returns:\n        bool: True if numeric values are found in the string, False otherwise.\n    \"\"\"\n    return bool(re.search(r\"[0-9]\", string))\n\n\ndef validate_password(password):\n    \"\"\"Validates a given password.\n\n    Args:\n        password (str): The password to be validated.\n\n    Returns:\n        bool: True if the password is valid, False otherwise.\n    \"\"\"\n    if len(password) >= 8 and len(password) <= 20:\n        if check_uppercase(password) and check_lowercase(password) and check_numeric(password):\n            if check_special_char(password):\n                return True\n            else:\n                return False\n        else:\n            return False\n    else:\n        return False"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "import re\n\n\ndef check_string(string: str) -> str:\n    \"\"\"Check the string for uppercase, lowercase, numeric and special character.\n\n    Args:\n        string (str): The string to check.\n\n    Returns:\n        str: The string with the count of uppercase, lowercase, numeric and special character.\n    \"\"\"\n    uppercase = re.findall(\"[A-Z]\", string)\n    lowercase = re.findall(\"[a-z]\", string)\n    special_character = re.findall(\"[!@#$%^&*()]\", string)\n    numeric = re.findall(\"[0-9]\", string)\n\n    print(f\"Uppercase: {len(uppercase)}, Lowercase: {len(lowercase)}, Numeric: {len(numeric)}, Special: {len(special_character)}\")\n\n    return string\n\n\nif __name__ == \"__main__\":\n    check_string(\"This is a string!\")"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "import re\n\n\ndef find_char_type(string: str) -> dict:\n    \"\"\"\n    >>> find_char_type(\"This is a string\")\n    {'uppercase': 0, 'lowercase': 10, 'special_char': 1, 'numeric': 0}\n    >>> find_char_type(\"This is 100$ string\")\n    {'uppercase': 0, 'lowercase': 10, 'special_char': 3, 'numeric': 2}\n    >>> find_char_type(\"This is @ string\")\n    {'uppercase': 0, 'lowercase': 10, 'special_char': 2, 'numeric': 0}\n    \"\"\"\n    uppercase = re.findall(r\"[A-Z]\", string)\n    lowercase = re.findall(r\"[a-z]\", string)\n    special_char = re.findall(r\"[`~!@#$%^&*()_|+\\-=?><.,\\/']\", string)\n    numeric = re.findall(r\"[0-9]\", string)\n    return {\n        \"uppercase\": len(uppercase),\n        \"lowercase\": len(lowercase),\n        \"special_char\": len(special_char),\n        \"numeric\": len(numeric),\n    }\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "import re\n\n\ndef check_upper_lower_special_numeric(input_string):\n    upper = re.findall(r'[A-Z]', input_string)\n    lower = re.findall(r'[a-z]', input_string)\n    special = re.findall(r'[#/@/!]', input_string)\n    numeric = re.findall(r'[0-9]', input_string)\n    return len(upper), len(lower), len(special), len(numeric)\n\n\ninput_string = 'This is an #incredible! day!!'\nprint(check_upper_lower_special_numeric(input_string))"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def find_values(string):\n    uppercase = len(re.findall(\"[A-Z]\", string))\n    lowercase = len(re.findall(\"[a-z]\", string))\n    numeric = len(re.findall(\"[0-9]\", string))\n    special_characters = len(re.findall(\"[^a-zA-Z0-9]\", string))\n    print(f\"uppercase: {uppercase}\\nlowercase: {lowercase}\\nnumeric: {numeric}\\nspecial characters: {special_characters}\")\n\n\nif __name__ == \"__main__\":\n    find_values(\"Hello world!\")"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "import re\n\n\ndef regex_char(input):\n    upper = re.findall(\"[A-Z]\", input)\n    lower = re.findall(\"[a-z]\", input)\n    num = re.findall(\"[0-9]\", input)\n    special = re.findall(\"[`~!@#$%^&*()_|+\\-=?><,./;\\':\\\"\\\\\\[\\]{}]\", input)\n\n    return len(upper), len(lower), len(num), len(special)\n\n\nassert (regex_char(\"Abc123!\") == (1, 2, 3, 1))"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "import re\n\ndef find_upper_lower_special_numeric(string):\n    uppercase = re.findall(r'[A-Z]', string)\n    lowercase = re.findall(r'[a-z]', string)\n    numeric = re.findall(r'[0-9]', string)\n    special = re.findall(r'[^\\w]', string)\n\n    return uppercase, lowercase, numeric, special\n\n\nif __name__ == '__main__':\n    s = \"IoT 2019\"\n    print(find_upper_lower_special_numeric(s))"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "import re\n\n\ndef find_values(text):\n    uppercase_values = re.findall(r'[A-Z]', text)\n    lowercase_values = re.findall(r'[a-z]', text)\n    numeric_values = re.findall(r'[0-9]', text)\n    special_values = re.findall(r'[!\"#$%&\\'()*+,-./:;<=>?@[\\]^_`{|}~]', text)\n\n    return len(uppercase_values), len(lowercase_values), len(numeric_values), len(special_values)\n\n\nif __name__ == '__main__':\n    text = input()\n    uppercase_values, lowercase_values, numeric_values, special_values = find_values(text)\n\n    print(f\"Uppercase: {uppercase_values}\")\n    print(f\"Lowercase: {lowercase_values}\")\n    print(f\"Numeric: {numeric_values}\")\n    print(f\"Special: {special_values}\")"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "import re\n\n\ndef find_uppercase(s):\n    return re.findall(r\"[A-Z]\", s)\n\n\ndef find_lowercase(s):\n    return re.findall(r\"[a-z]\", s)\n\n\ndef find_special_char(s):\n    return re.findall(r\"[!@#$%^&*?_-]\", s)\n\n\ndef find_numeric(s):\n    return re.findall(r\"[0-9]\", s)\n\n\nif __name__ == \"__main__\":\n    s = \"!@#$%^&*?_-=+,<.>/1234567890\"\n    print(find_uppercase(s))\n    print(find_lowercase(s))\n    print(find_special_char(s))\n    print(find_numeric(s))"
    }
  ]
}