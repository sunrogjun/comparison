{
  "timestamp": "2025-09-14T23:57:12.728931",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 219,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def replace_space(string):\n    new_string = \"\"\n    for ch in string:\n        if ch == \" \":\n            new_string += \"%20\"\n        else:\n            new_string += ch\n    return new_string\n\nif __name__ == '__main__':\n    string = \"Mr John Smith\"\n    print(replace_space(string))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def replace_space(string):\n    return string.replace(\" \", \"%20\")"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def replace_spaces(str):\n    return str.replace(\" \", \"%20\")\n\nif __name__ == '__main__':\n    str = input()\n    result = replace_spaces(str)\n    print(result)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def replace_blank(string, character):\n    return string.replace(' ', character)\n\ndef test_cases(string, character, solution, test_func=replace_blank):\n    if solution == test_func(string, character):\n        print(\"Congratulations!\")\n    else:\n        print(f\"That's incorrect.\")\n\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character: \")\n    print(\"Replace blank space with '{}' in string '{}': \".format(character, string), end='')\n    test_cases(string, character, string.replace(' ', character))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def replace_blank(string, char):\n    return string.replace(\" \", char)\n\n\nprint(replace_blank(\"My name is John Doe\", \"-\"))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def replace_spaces(string: str, character: str) -> str:\n    \"\"\"\n    >>> replace_spaces(\"This is a string\", \"_\")\n    'This_is_a_string'\n    \"\"\"\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def replace_blank(string, replacement):\n    return string.replace(\" \", replacement)\n\n\nif __name__ == '__main__':\n    print(replace_blank(\"Hello World\", \"!\"))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def replace_blank(str):\n    result = ''\n    for i in str:\n        if i == ' ':\n            result += '_'\n        else:\n            result += i\n    return result\n\nstr = input()\nprint(replace_blank(str))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def replace_space(string):\n    return string.replace(\" \", \"%20\")\n\nif __name__ == '__main__':\n    s = \"hello world\"\n    print(replace_space(s))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def replace_blank(str):\n    result = ''\n    for i in str:\n        if i == ' ':\n            result += '0'\n        else:\n            result += i\n    return result\n\n\ns = 'hello world'\nprint(replace_blank(s))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def replace_blank(str):\n    return str.replace(\" \", \"*\")\n\n\nif __name__ == \"__main__\":\n    str = \"Mohit\"\n    print(replace_blank(str))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def replace_space(st, ch):\n    return st.replace(\" \", ch)\n\n\nif __name__ == \"__main__\":\n    st = \"I love you\"\n    ch = \"_\"\n    print(replace_space(st, ch))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def replace_spaces(s, c):\n    # return s.replace(\" \", c)\n    return s.replace(\" \", c)\n\nif __name__ == '__main__':\n    s = \"hello world\"\n    c = \"_\"\n    print(replace_spaces(s, c))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def replace_space(string):\n    return string.replace(' ', '%20')\n\nif __name__ == '__main__':\n    print(replace_space('My name is John'))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def replace_spaces(string):\n    return string.replace(' ', '%20')\n\n\nif __name__ == '__main__':\n    print(replace_spaces('Mr John Smith'))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def replace_char(string, char):\n    return string.replace(\" \", char)\n\ndef main():\n    print(replace_char(\"This is a string\", \"@\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def replace_spaces(str):\n    return str.replace(\" \", \"%\")"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def replace_spaces(string: str, character: str) -> str:\n    \"\"\"\n    Replaces spaces with a given character.\n\n    >>> replace_spaces(\"\", \"a\")\n    ''\n    >>> replace_spaces(\"a\", \"b\")\n    'a'\n    >>> replace_spaces(\"a b\", \"c\")\n    'a c'\n    >>> replace_spaces(\"a  b\", \"c\")\n    'a cc'\n    >>> replace_spaces(\"a b c\", \"d\")\n    'a b c'\n    >>> replace_spaces(\"a   b   c   \", \"e\")\n    'a e e e'\n    >>> replace_spaces(\"a b c d\", \"e\")\n    'a b c d'\n    \"\"\"\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def replace_blank(str):\n    return str.replace(\" \", \"-\")\n\nstr = \"Hello world\"\nprint(replace_blank(str))"
    },
    {
      "rank": 20,
      "score": 9.370583536698913,
      "candidate": "def replace_spaces(s, c):\n    \"\"\"\n    :type s: str\n    :type c: str\n    :rtype: str\n    \"\"\"\n    return s.replace(' ', c)"
    },
    {
      "rank": 21,
      "score": 9.234050852198141,
      "candidate": "def replace_spaces(string, char):\n    return string.replace(\" \", char)"
    },
    {
      "rank": 22,
      "score": 9.205959372648458,
      "candidate": "def replace_blank(string, character):\n    if len(string) == 0 or len(character) == 0:\n        return None\n    else:\n        return string.replace(\" \", character)"
    },
    {
      "rank": 23,
      "score": 9.177268828905222,
      "candidate": "def replace_blanks(str, ch):\n    result = ''\n    for i in str:\n        if i == ' ':\n            result += ch\n        else:\n            result += i\n    return result\n\nprint(replace_blanks('hello world', '*'))"
    },
    {
      "rank": 24,
      "score": 8.973005557553902,
      "candidate": "def replace_blank(string, char):\n    result = \"\"\n    for i in range(len(string)):\n        if string[i] == \" \":\n            result += char\n        else:\n            result += string[i]\n    return result\n\n\nif __name__ == \"__main__\":\n    string = \"Hello world\"\n    print(replace_blank(string, \"*\"))"
    },
    {
      "rank": 25,
      "score": 8.95994420569242,
      "candidate": "def replace_blank(string, replacement):\n    return string.replace(\" \", replacement)\n\n\nif __name__ == '__main__':\n    print(replace_blank(\"Hello World\", \"*\"))\n    print(replace_blank(\"Hello World\", \" \"))\n    print(replace_blank(\"Hello World\", \"\"))\n    print(replace_blank(\"Hello World\", \"    \"))\n    print(replace_blank(\"Hello World\", \"    \"))\n    print(replace_blank(\"Hello World\", \"H\"))\n    print(replace_blank(\"Hello World\", \"He\"))\n    print(replace_blank(\"Hello World\", \"Hel\"))\n    print(replace_blank(\"Hello World\", \"Hell\"))\n    print(replace_blank(\"Hello World\", \"Hello\"))\n    print(replace_blank(\"Hello World\", \"Hello \"))\n    print(replace_blank(\"Hello World\", \"Hello W\"))\n    print(replace_blank(\"Hello World\", \"Hello Wo\"))\n    print(replace_blank(\"Hello World\", \"Hello Wor\"))\n    print(replace_blank(\"Hello World\", \"Hello Worl\"))\n    print(replace_blank(\"Hello World\", \"Hello World\"))"
    },
    {
      "rank": 26,
      "score": 8.932217008005624,
      "candidate": "def replace_blank(string, character):\n    return string.replace(' ', character)\n\nprint(replace_blank(\"Hello World\", \"@\"))"
    },
    {
      "rank": 27,
      "score": 8.910084504002544,
      "candidate": "def replace_blank(string, character):\n    if string == \"\":\n        return None\n\n    if character == \"\":\n        return None\n\n    result = \"\"\n\n    for char in string:\n        if char == \" \":\n            result += character\n        else:\n            result += char\n\n    return result\n\n\nif __name__ == '__main__':\n    string = \"Hola como estas\"\n    character = \"_\"\n    print(replace_blank(string, character))"
    },
    {
      "rank": 28,
      "score": 8.85571690049604,
      "candidate": "# My solution\n\n\ndef replace_blank(str, new_blank):\n    return str.replace(\" \", new_blank)\n\n\n# Best solution\n\n\ndef replace_blank(string, new_blank):\n    return ''.join([x if x != ' ' else new_blank for x in string])"
    },
    {
      "rank": 29,
      "score": 8.8281618090209,
      "candidate": "def replace_space(string):\n    string = string.replace(\" \",\"%20\")\n    return string\n\nprint(replace_space(\"Mr John Smith\"))"
    },
    {
      "rank": 30,
      "score": 8.81367773444215,
      "candidate": "def replace_blank(string: str, replace_char: str = '_') -> str:\n    \"\"\"Replace blank spaces with replace_char in string.\n\n    Args:\n        string (str): string to replace spaces in\n        replace_char (str, optional): character to replace spaces with. Defaults to '_'.\n\n    Returns:\n        str: string with replaced spaces\n    \"\"\"\n    return string.replace(' ', replace_char)"
    },
    {
      "rank": 31,
      "score": 8.76828871349479,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character to replace spaces: \")\n    print(replace_blank(string, character))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 32,
      "score": 8.750282588864879,
      "candidate": "def replace_space(string: str) -> str:\n    \"\"\"\n    >>> replace_space(\"Mr John Smith\")\n    'Mr%20John%20Smith'\n    \"\"\"\n    return string.replace(\" \", \"%20\")\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 8.715724466237427,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\ndef main():\n    string = \"I like python\"\n    print(replace_blank(string, \"$\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 34,
      "score": 8.692801520950061,
      "candidate": "def replace_blank(string, character):\n    new_string = \"\"\n    for i in range(len(string)):\n        if string[i] == \" \":\n            new_string += character\n        else:\n            new_string += string[i]\n    return new_string\n\n\ndef test_replace_blank():\n    assert replace_blank(\"Hello World\", \"$\") == \"Hello$World\"\n    assert replace_blank(\"Hello World\", \"*\") == \"Hello*World\"\n    assert replace_blank(\"Hello World\", \"_\") == \"Hello_World\"\n    assert replace_blank(\"Hello World\", \"&\") == \"Hello&World\""
    },
    {
      "rank": 35,
      "score": 8.632293453617281,
      "candidate": "def replace_blank(string, char):\n    return string.replace(' ', char)\n\n\nif __name__ == '__main__':\n    print(replace_blank('My name is John', '*'))"
    },
    {
      "rank": 36,
      "score": 8.616253589228675,
      "candidate": "# Time complexity O(N)\ndef replace_blank(s, blank):\n    for i in range(len(s)):\n        if s[i] == ' ':\n            s[i] = blank\n    return s\n\n# Time complexity O(N)\ndef replace_blank_opt(s, blank):\n    new = ''\n    for c in s:\n        if c == ' ':\n            new += blank\n        else:\n            new += c\n    return new\n\nif __name__ == '__main__':\n    s = 'We are happy'\n    blank = '_'\n    print(replace_blank(s, blank))\n    print(replace_blank_opt(s, blank))"
    },
    {
      "rank": 37,
      "score": 8.610076160146226,
      "candidate": "def replace_spaces(string, character):\n    \"\"\"\n    >>> replace_spaces('Mr John Smith', '*')\n    'Mr*John*Smith'\n    \"\"\"\n    # Your code here\n    return string.replace(\" \", character)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 8.606486429141842,
      "candidate": "def replace_char(string, char):\n    # replace every space with char\n    return string.replace(' ', char)\n\nprint(replace_char(\"This is a string\", '*'))"
    },
    {
      "rank": 39,
      "score": 8.60156811074208,
      "candidate": "def replace_blanks(string: str, character: str = \"-\"):\n    \"\"\"\n    >>> replace_blanks(\"This is a string\")\n    'This-is-a-string'\n    >>> replace_blanks(\"This is a string\", \" \")\n    'This is a string'\n    >>> replace_blanks(\"This is a string\", \"|\")\n    'This|is|a|string'\n    \"\"\"\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 40,
      "score": 8.565425580227462,
      "candidate": "def replace_spaces(s):\n    if len(s) == 0:\n        return s\n\n    i = 0\n    for j in range(len(s)):\n        if s[j] == \" \":\n            i += 1\n\n    res = [None] * (len(s) + 2 * i)\n    j = len(s) - 1\n    k = len(res) - 1\n    while j >= 0:\n        if s[j] != \" \":\n            res[k] = s[j]\n        else:\n            res[k] = \"0\"\n            res[k - 1] = \"2\"\n            res[k - 2] = \"%\"\n            k -= 3\n        j -= 1\n        k -= 1\n    return \"\".join(res)\n\n\nprint(replace_spaces(\"\"))\nprint(replace_spaces(\" \"))\nprint(replace_spaces(\"abc\"))\nprint(replace_spaces(\"ab c\"))\nprint(replace_spaces(\"a b c\"))\nprint(replace_spaces(\"a b  c\"))\nprint(replace_spaces(\"a  b  c\"))\nprint(replace_spaces(\"a   b   c\"))\nprint(replace_spaces(\"a    b    c\"))"
    },
    {
      "rank": 41,
      "score": 8.548876241946822,
      "candidate": "def replace_blank(string, replacement):\n    result = ''\n    for i in string:\n        if i == ' ':\n            result += replacement\n        else:\n            result += i\n    return result\n\n\ndef test_cases():\n    assert replace_blank('Hello World', '*') == 'Hello*World'\n    assert replace_blank('Hello World', '#') == 'Hello#World'\n    assert replace_blank('Hello World', '&') == 'Hello&World'\n    assert replace_blank('Hello World', '(') == 'Hello(World'\n    assert replace_blank('Hello World', ')') == 'Hello)World'\n    assert replace_blank('Hello World', '!') == 'Hello!World'\n    assert replace_blank('Hello World', '?') == 'Hello?World'\n    assert replace_blank('Hello World', '+') == 'Hello+World'\n    assert replace_blank('Hello World', '=') == 'Hello=World'\n    assert replace_blank('Hello World', '*') == 'Hello*World'\n    print(\"Test Success!\")\n\n\ntest_cases()"
    },
    {
      "rank": 42,
      "score": 8.542875062379007,
      "candidate": "def replace_blank(str, fillchar):\n    return str.replace(\" \", fillchar)\n\n#test\nprint(replace_blank(\"Mr John Smith\", \"?\"))\nprint(replace_blank(\"Hello World\", \"!\"))\nprint(replace_blank(\"How are you\", \"?\"))"
    },
    {
      "rank": 43,
      "score": 8.53012858503943,
      "candidate": "def replace_blank(string, character):\n    string_list = list(string)\n    for i in range(len(string_list)):\n        if string_list[i] == \" \":\n            string_list[i] = character\n    return \"\".join(string_list)\n\n\ndef main():\n    print(replace_blank(\"Hello World\", \"!\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 44,
      "score": 8.499905739299377,
      "candidate": "def replace_blank(string, char):\n    string = list(string)\n    for i in range(len(string)):\n        if string[i] == \" \":\n            string[i] = char\n    return \"\".join(string)\n\n\nif __name__ == '__main__':\n    test = \"Hello world\"\n    print(replace_blank(test, \"@\"))"
    },
    {
      "rank": 45,
      "score": 8.478208546788407,
      "candidate": "def replace_blank(s, c):\n    if s is None or c is None:\n        return s\n    if s == '':\n        return c\n    if c == '':\n        return s\n    return s.replace(' ', c)\n\n\nif __name__ == '__main__':\n    print(replace_blank('', ''))"
    },
    {
      "rank": 46,
      "score": 8.437695832075478,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character: \")\n    print(replace_blank(string, character))"
    },
    {
      "rank": 47,
      "score": 8.386620303250325,
      "candidate": "def replace_blank(string, character):\n    new_string = \"\"\n    for char in string:\n        if char == \" \":\n            new_string += character\n        else:\n            new_string += char\n    return new_string\n\n\nprint(replace_blank(\"Mr John Smith\", \"X\"))"
    },
    {
      "rank": 48,
      "score": 8.375312293858853,
      "candidate": "def replace_space(string: str) -> str:\n    \"\"\"\n    >>> replace_space('Mr John Smith')\n    'Mr%20John%20Smith'\n    \"\"\"\n    return string.replace(\" \", \"%20\")\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 49,
      "score": 8.331556294201176,
      "candidate": "def replace_blank(s, c):\n    string = \"\"\n    for i in s:\n        if i == \" \":\n            string += c\n        else:\n            string += i\n    return string\n\nif __name__ == '__main__':\n    print(replace_blank(\"hello world\", \"@\"))"
    },
    {
      "rank": 50,
      "score": 8.327375965969855,
      "candidate": "def replace_spaces(string):\n    return string.replace(\" \", \"%20\")\n\nif __name__ == '__main__':\n    print(replace_spaces(\"\"))\n    print(replace_spaces(\"Hello World\"))"
    },
    {
      "rank": 51,
      "score": 8.327367757082776,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character: \")\n    print(replace_blank(string, character))"
    },
    {
      "rank": 52,
      "score": 8.298597569547805,
      "candidate": "def replace_blank(string, character):\n    string_list = list(string)\n    index = 0\n    while index < len(string_list):\n        if string_list[index] == \" \":\n            string_list[index] = character\n        index += 1\n    string = \"\".join(string_list)\n    return string\n\nprint(replace_blank(\"Hello World\", \"P\"))\nprint(replace_blank(\"My name is John\", \"B\"))\nprint(replace_blank(\"My name is John\", \"\"))"
    },
    {
      "rank": 53,
      "score": 8.2938925966498,
      "candidate": "def replace_blank(string, character):\n    string_list = list(string)\n    for index, char in enumerate(string_list):\n        if char == \" \":\n            string_list[index] = character\n    return \"\".join(string_list)\n\n\ndef test_function():\n    assert replace_blank(\"Mr John Smith\", \"-\") == \"Mr-John-Smith\"\n    assert replace_blank(\"Hello World\", \"!\") == \"Hello!World\"\n    assert replace_blank(\"Aite mAme\", \"?\") == \"Aite?m?Ame\"\n    assert replace_blank(\"Aite    mAme\", \"?\") == \"Aite?m?Ame\"\n    assert replace_blank(\"Aite   mAme\", \"?\") == \"Aite?m?Ame\"\n\n\nif __name__ == '__main__':\n    test_function()"
    },
    {
      "rank": 54,
      "score": 8.289838256518838,
      "candidate": "def replace_spaces(string):\n    return string.replace(\" \", \"%\")\n\nprint(replace_spaces(\"Hello world\"))\nprint(replace_spaces(\"This is an example\"))\nprint(replace_spaces(\"How many blank spaces\"))\n\n# Time complexity is O(n)\n# Space complexity is O(n)"
    },
    {
      "rank": 55,
      "score": 8.251903304236286,
      "candidate": "def replace_blank(str):\n    return str.replace(' ', '_')\n\nif __name__ == '__main__':\n    result = replace_blank('Hello world')\n    print(result)"
    },
    {
      "rank": 56,
      "score": 8.214125058964552,
      "candidate": "def replace_space(string):\n    \"\"\"\n    >>> replace_space(\"Mr John Smith\")\n    'Mr%20John%20Smith'\n    >>> replace_space(\"Hello world\")\n    'Hello%20world'\n    >>> replace_space(\"Mr John Smith\")\n    'Mr%20John%20Smith'\n    >>> replace_space(\"Mr John Smith\")\n    'Mr%20John%20Smith'\n    \"\"\"\n    return string.replace(\" \", \"%20\")\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 57,
      "score": 8.212735598038213,
      "candidate": "def replace_blank(str):\n    result = \"\"\n    for i in str:\n        if i == \" \":\n            result += \"*\"\n        else:\n            result += i\n    return result\n\n\ndef main():\n    print(replace_blank(\"hey man\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 58,
      "score": 8.211579567659316,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character: \")\n    result = replace_blank(string, character)\n    print(result)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 59,
      "score": 8.209707251476969,
      "candidate": "def replace_blank(s):\n    new_s = ''\n    for i in s:\n        if i == ' ':\n            new_s += '*'\n        else:\n            new_s += i\n    return new_s\n\n\nif __name__ == '__main__':\n    s = 'hello world'\n    print(replace_blank(s))"
    },
    {
      "rank": 60,
      "score": 8.2048573255218,
      "candidate": "def replace_space(string):\n    return string.replace(' ', '%20')\n\n\nif __name__ == '__main__':\n    print(replace_space('this is a test'))"
    },
    {
      "rank": 61,
      "score": 8.172253082181854,
      "candidate": "def replace_blank(str):\n    if str == None:\n        return ''\n\n    count = 0\n    for ch in str:\n        if ch == ' ':\n            count += 1\n\n    result = [None] * (len(str) + count)\n    index = 0\n    for ch in str:\n        if ch == ' ':\n            result[index] = '%'\n            index += 1\n            result[index] = '2'\n            index += 1\n            result[index] = '0'\n        else:\n            result[index] = ch\n        index += 1\n    return ''.join(result)\n\n\nprint(replace_blank('hello world'))"
    },
    {
      "rank": 62,
      "score": 8.163300679823958,
      "candidate": "def replace_blank(str):\n    return str.replace(\" \", \"-\")\n\nprint(replace_blank(\"I love python\"))"
    },
    {
      "rank": 63,
      "score": 8.144125099485041,
      "candidate": "def replace_blank(string, character):\n    string_list = []\n    for i in range(len(string)):\n        if string[i] == ' ':\n            string_list.append(character)\n        else:\n            string_list.append(string[i])\n    return ''.join(string_list)\n\n\nif __name__ == '__main__':\n    string = 'I love python!'\n    character = '&'\n    print(replace_blank(string, character))"
    },
    {
      "rank": 64,
      "score": 8.143591138329747,
      "candidate": "def replace_blank(str):\n    result = \"\"\n    if len(str) == 0 or str == None:\n        return result\n    for i in str:\n        if i == \" \":\n            result += \"@\"\n        else:\n            result += i\n    return result\n\n\nstr = \"I am a student\"\nprint(replace_blank(str))"
    },
    {
      "rank": 65,
      "score": 8.105983444291466,
      "candidate": "def replace_blank(string: str, new_blank: str) -> str:\n    \"\"\"\n    >>> replace_blank(\"Hello World\", \" \")\n    'HelloWorld'\n    >>> replace_blank(\"Hello World\", \"-\")\n    'Hello-World'\n    >>> replace_blank(\"Hello World\", \"!\")\n    'Hello!World'\n    \"\"\"\n    return string.replace(\" \", new_blank)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 66,
      "score": 8.08452234024709,
      "candidate": "def replace_blanks(string, character):\n    return string.replace(\" \", character)\n\nif __name__ == '__main__':\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character to replace blank spaces: \")\n    print(replace_blanks(string, character))"
    },
    {
      "rank": 67,
      "score": 8.024835682833125,
      "candidate": "def replace_spaces(string, character):\n    return string.replace(\" \", character)\n\n\nif __name__ == '__main__':\n    print(replace_spaces(\"My name is John\", \"-\"))"
    },
    {
      "rank": 68,
      "score": 7.990432406683839,
      "candidate": "def replace_spaces(string, character):\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    character = input(\"Enter a character: \")\n    print(replace_spaces(string, character))"
    },
    {
      "rank": 69,
      "score": 7.938028884277233,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    string = \"The rain in Spain\"\n    print(replace_blank(string, \".\"))"
    },
    {
      "rank": 70,
      "score": 7.915588979966494,
      "candidate": "def replace_blanks(string, character):\n    # return string.replace(' ', character)\n    new_string = ''\n    for char in string:\n        if char == ' ':\n            new_string += character\n        else:\n            new_string += char\n    return new_string\n\n\nif __name__ == '__main__':\n    print(replace_blanks('hello world', '*'))"
    },
    {
      "rank": 71,
      "score": 7.868947655733293,
      "candidate": "# Time Complexity: O(n)\n# Space Complexity: O(n)\ndef replace_spaces(string):\n    return string.replace(\" \", \"-\")\n\nif __name__ == \"__main__\":\n    string = \"I am a string\"\n    print(replace_spaces(string))"
    },
    {
      "rank": 72,
      "score": 7.834022619458933,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\nif __name__ == '__main__':\n    print(replace_blank(\"hello world\", \"!\") == \"hello!world\")"
    },
    {
      "rank": 73,
      "score": 7.780351419995229,
      "candidate": "def replace_blanks(s, c):\n    return s.replace(' ', c)\n\n\nif __name__ == '__main__':\n    print(replace_blanks('hello world', '*'))"
    },
    {
      "rank": 74,
      "score": 7.738292593776799,
      "candidate": "def replace_blank(str):\n    return str.replace(\" \", \"_\")\n\n\nprint(replace_blank(\"a b c\"))"
    },
    {
      "rank": 75,
      "score": 7.7320703513377165,
      "candidate": "def replace_blank(string, char):\n    result = ''\n    for s in string:\n        if s == ' ':\n            result += char\n        else:\n            result += s\n    return result\n\n\nif __name__ == '__main__':\n    string = 'My name is John.'\n    print(replace_blank(string, '*'))"
    },
    {
      "rank": 76,
      "score": 7.705183449260731,
      "candidate": "def replace_blank(str):\n    result = ''\n    if str == '':\n        return str\n    for i in str:\n        if i == ' ':\n            result += '*'\n        else:\n            result += i\n    return result\n\nif __name__ == '__main__':\n    print(replace_blank(''))\n    print(replace_blank(' '))\n    print(replace_blank('hello world'))\n    print(replace_blank('hello  world'))\n    print(replace_blank('hello   world'))"
    },
    {
      "rank": 77,
      "score": 7.5819855281879285,
      "candidate": "def replace_blank(str, new):\n    if str == \"\":\n        return str\n    new_str = \"\"\n    for i in str:\n        if i == \" \":\n            new_str += new\n        else:\n            new_str += i\n    return new_str\n\n\nprint(replace_blank(\"Hello World\", \"M\"))"
    },
    {
      "rank": 78,
      "score": 7.562924366763077,
      "candidate": "def replace_spaces(string, character):\n    return string.replace(' ', character)\n\n\ndef test_replace_spaces():\n    assert replace_spaces('hello world', '!') == 'hello!world'\n\n\nif __name__ == '__main__':\n    print(replace_spaces('hello world', '!'))"
    },
    {
      "rank": 79,
      "score": 7.4878043221155455,
      "candidate": "def replace_blank(string, character):\n    result = \"\"\n    for i in string:\n        if i == \" \":\n            result += character\n        else:\n            result += i\n    return result\n\n\ndef replace_blank_2(string, character):\n    return string.replace(\" \", character)\n\n\ndef main():\n    result = replace_blank(\"hello world\", \"*\")\n    print(result)\n\n    result = replace_blank_2(\"hello world\", \"*\")\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 80,
      "score": 7.464609382504557,
      "candidate": "def replace_spaces(s):\n    return s.replace(\" \", \"%20\")\n\n\nprint(replace_spaces(\"Hello World!\"))"
    },
    {
      "rank": 81,
      "score": 3.0,
      "candidate": "def replace_space(s):\n    return s.replace(\" \", \"%20\")\n\n\ndef test_replace_space():\n    assert replace_space(\"hello world\") == \"hello%20world\""
    },
    {
      "rank": 82,
      "score": 3.0,
      "candidate": "def replace_blank(string, ch):\n    if string == None or len(string) == 0:\n        return None\n    result = []\n    for ch in string:\n        if ch == ' ':\n            result.append(ch)\n        else:\n            result.append(ch)\n    return ''.join(result)\n\n\nif __name__ == '__main__':\n    string = 'a b c'\n    print(replace_blank(string, '*'))\n    print(replace_blank(string, ''))\n    print(replace_blank(string, '  '))"
    },
    {
      "rank": 83,
      "score": 3.0,
      "candidate": "# pylint: disable=wildcard-import, unused-wildcard-import, undefined-variable\nfrom expects import *\n\nfrom lib.replace_spaces import replace_spaces\n\nwith description('replace_spaces'):\n    with it('replaces spaces with a hyphen'):\n        expect(replace_spaces('hello world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello    world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello  world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello  world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello   world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello  world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello   world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello  world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello   world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello  world')).to(equal('hello-world'))\n\n    with it('replaces multiple spaces with a hyphen'):\n        expect(replace_spaces('hello   world')).to(equal('hello-world'))"
    },
    {
      "rank": 84,
      "score": 3.0,
      "candidate": "def replace_blank(string, new_blank):\n    \"\"\"\n    Replace blank spaces with any character\n\n    :param string: The string to replace\n    :type string: str\n    :param new_blank: The new character\n    :type new_blank: str\n    :return: The string with the new character\n    :rtype: str\n    \"\"\"\n\n    return string.replace(\" \", new_blank)\n\n\ndef test_function(test_case):\n    string = test_case[0]\n    new_blank = test_case[1]\n    solution = test_case[2]\n    output = replace_blank(string, new_blank)\n\n    if output == solution:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\nstring = \"This is my 2nd string\"\nnew_blank = \"*\"\nsolution = \"This*is*my*2nd*string\"\ntest_case = [string, new_blank, solution]\ntest_function(test_case)\n\nstring = \"This is my string\"\nnew_blank = \" \"\nsolution = \"This is my string\"\ntest_case = [string, new_blank, solution]\ntest_function(test_case)"
    },
    {
      "rank": 85,
      "score": 3.0,
      "candidate": "def replace_blank(string, char):\n    return string.replace(\" \", char)\n\n\ndef test_cases():\n    assert replace_blank(\"Hello World\", \"-\") == \"Hello-World\"\n    assert replace_blank(\"   \", \"?\") == \"????\"\n\n\nif __name__ == \"__main__\":\n    test_cases()"
    },
    {
      "rank": 86,
      "score": 3.0,
      "candidate": "def replace_spaces(string, character):\n    return string.replace(\" \", character)\n\n\ndef test_replace_spaces():\n    assert replace_spaces(\"Mr John Smith\", \"1\") == \"Mr1John1Smith\""
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "def replace_blank(string: str, character: str) -> str:\n    \"\"\"\n    >>> replace_blank(\"Hello World\", \"*\")\n    'Hello*World'\n    >>> replace_blank(\"Hello World\", \" \")\n    'Hello World'\n    >>> replace_blank(\"Hello World\", \"\")\n    'HelloWorld'\n    >>> replace_blank(\"Hello World\", \"!\")\n    'Hello!World'\n    >>> replace_blank(\"Hello World\", \"$\")\n    'Hello$World'\n    >>> replace_blank(\"Hello World\", \"&\")\n    'Hello&World'\n    \"\"\"\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "def replace_spaces(s: str, c: str = '%20') -> str:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(n)\n\n    n: is the length of the input string\n\n    :param s: original string\n    :param c: replacement character\n    :return: string with blank spaces replaced by c\n    \"\"\"\n    return s.replace(' ', c)\n\n\nif __name__ == '__main__':\n    s1 = 'Mr John Smith    '\n    s2 = 'hello world'\n    print(replace_spaces(s1))\n    print(replace_spaces(s2))"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "# Time Complexity: O(n)\n# Space Complexity: O(n)\n# This is a linear time and space algorithm.\ndef replace_spaces(s):\n    return s.replace(\" \", \"%20\")\n\n# Time Complexity: O(n)\n# Space Complexity: O(n)\n# This is a linear time and space algorithm.\ndef replace_spaces2(s):\n    if s.count(\" \") == 0:\n        return s\n\n    new_s = []\n    for c in s:\n        if c == \" \":\n            new_s.append(\"%20\")\n        else:\n            new_s.append(c)\n    return \"\".join(new_s)\n\ndef main():\n    assert replace_spaces(\"Mr John Smith    \") == \"Mr%20John%20Smith\"\n    assert replace_spaces2(\"Mr John Smith    \") == \"Mr%20John%20Smith\"\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "def replace_spaces(string):\n    return string.replace(\" \", \"%\")\n\n\ndef test_replace_spaces():\n    \"\"\"Test for replace_spaces function.\"\"\"\n    assert replace_spaces(\"Mickey Mouse\") == \"Mickey%Mouse\"\n    assert replace_spaces(\"Hello world\") == \"Hello%world\"\n    assert replace_spaces(\"Mr John Smith    \") == \"Mr%John%Smith%\"\n\n\nif __name__ == \"__main__\":\n    test_replace_spaces()"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "def replace_blank(string: str, replacement: str = '-') -> str:\n    \"\"\"Replace blanks with replacement.\n\n    Args:\n        string (str): string to replace blanks.\n        replacement (str, optional): replacement char. Defaults to '-'.\n\n    Returns:\n        str: string with replaced blanks.\n    \"\"\"\n    return string.replace(' ', replacement)\n\n\nif __name__ == '__main__':\n    print(replace_blank('hello world'))"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "def replace_spaces(text, char):\n    return text.replace(' ', char)\n\n\ndef test_replace_spaces():\n    assert replace_spaces('a b', '*') == 'a*b'\n    assert replace_spaces('a  b', '*') == 'a**b'\n    assert replace_spaces('a   b', '*') == 'a***b'\n\n\nif __name__ == '__main__':\n    test_replace_spaces()"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def replace_blank(str):\n    return str.replace(\" \", \"-\")\n\n\nif __name__ == \"__main__\":\n    print(replace_blank(\"Hello World\"))"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "def replace_space(string):\n    return string.replace(\" \", \"%20\")\n\n\nif __name__ == \"__main__\":\n    print(replace_space(\"Hello World\"))"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def replace_spaces(st, ch):\n    return st.replace(' ', ch)\n\n\ndef test_replace_spaces():\n    assert replace_spaces('Mr John Smith', '#') == 'Mr#John#Smith'\n    assert replace_spaces('', '$') == ''\n    assert replace_spaces('Mr John Smith', ' ') == 'Mr John Smith'\n    assert replace_spaces('  Mr John Smith  ', ' ') == '  Mr John Smith  '\n    assert replace_spaces('  Mr John Smith  ', '$$') == '$$Mr$$John$$Smith$$'\n    assert replace_spaces('  Mr John Smith  ', '$$$') == '$$$Mr$$John$$Smith$$$'"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def replace_blank(string, character):\n    \"\"\"\n    Replace blank spaces with any character in a string.\n\n    >>> replace_blank(\"Hello World\", \"*\")\n    'Hello*World'\n\n    >>> replace_blank(\"Hello World\", \" \")\n    'Hello World'\n\n    >>> replace_blank(\"Hello World\", \"\")\n    'HelloWorld'\n\n    >>> replace_blank(\"Hello World\", \"!@#\")\n    'Hello!@#World'\n\n    >>> replace_blank(123, \"*\")\n    Traceback (most recent call last):\n        ...\n    TypeError: The first argument must be a string\n\n    >>> replace_blank(\"Hello World\", 123)\n    Traceback (most recent call last):\n        ...\n    TypeError: The second argument must be a string with length 1\n\n    >>> replace_blank(\"Hello World\", \" \")\n    'Hello World'\n\n    >>> replace_blank(\"Hello World\", \"!@#$%^&*()\")\n    'Hello!@#$%^&*()World'\n\n    >>> replace_blank(\"Hello World\", \"H\")\n    'HellOh World'\n    \"\"\"\n    if not isinstance(string, str):\n        raise TypeError(\"The first argument must be a string\")\n    if not isinstance(character, str) or len(character) != 1:\n        raise TypeError(\"The second argument must be a string with length 1\")\n\n    return string.replace(\" \", character)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def replace_blank(string: str, char: str = '_') -> str:\n    \"\"\"\n    >>> replace_blank(\"Hello World\")\n    'Hello_World'\n    >>> replace_blank(\"Hello World\", \"*\")\n    'Hello*World'\n    >>> replace_blank(\"Hello World\", \" \")\n    'Hello World'\n    >>> replace_blank(\"Hello World\", \"\")\n    'HelloWorld'\n    >>> replace_blank(\"Hello World\", None)\n    'HelloWorld'\n    >>> replace_blank(\"Hello World\", 100)\n    'Hello100World'\n    >>> replace_blank(\"Hello World\", \"100\")\n    'Hello100World'\n    >>> replace_blank(\"Hello World\", \"Hello World\")\n    'Hello WorldWorld'\n    \"\"\"\n    return string.replace(\" \", char)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def replace_blank(string, character):\n    return string.replace(\" \", character)\n\n\ndef test_replace_blank():\n    assert replace_blank(\"hello\", \"!\") == \"hello\"\n    assert replace_blank(\"hello \", \"!\") == \"hello!\"\n    assert replace_blank(\"hello  \", \"!\") == \"hello!!\"\n    assert replace_blank(\"hello   \", \"!\") == \"hello!!!\"\n\n\nif __name__ == \"__main__\":\n    test_replace_blank()"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def replace_space(s):\n    return s.replace(\" \", \"%20\")\n\n\ndef test_replace_space():\n    assert replace_space(\"Mr John Smith\") == \"Mr%20John%20Smith\"\n    assert replace_space(\"Hello World\") == \"Hello%20World\"\n    assert replace_space(\"Mr John Smith\") == \"Mr%20John%20Smith\""
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def replace_blank(string, char):\n    string_list = list(string)\n    for i in range(len(string_list)):\n        if string_list[i] == \" \":\n            string_list[i] = char\n    return \"\".join(string_list)\n\n\nif __name__ == \"__main__\":\n    print(replace_blank(\"a b c\", \"@\"))"
    }
  ]
}