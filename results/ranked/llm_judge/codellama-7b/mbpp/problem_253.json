{
  "timestamp": "2025-09-15T00:12:53.056281",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 253,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def dog_age(human_age):\n    return human_age / 7\n\n\ndef test_dog_age():\n    assert dog_age(10) == 1\n    assert dog_age(11) == 1\n    assert dog_age(12) == 1\n    assert dog_age(13) == 1\n    assert dog_age(14) == 2\n    assert dog_age(15) == 2\n    assert dog_age(16) == 2\n    assert dog_age(17) == 2\n    assert dog_age(18) == 3\n    assert dog_age(19) == 3\n    assert dog_age(20) == 3\n    assert dog_age(21) == 4\n    assert dog_age(22) == 4\n    assert dog_age(23) == 4\n    assert dog_age(24) == 4\n    assert dog_age(25) == 5\n    assert dog_age(26) == 5\n    assert dog_age(27) == 5\n    assert dog_age(28) == 5\n    assert dog_age(29) == 6\n    assert dog_age(30) == 6\n    assert dog_age(31) == 6\n    assert dog_age(32) == 6\n    assert dog_age(33) == 7\n    assert dog_age(34) == 7\n    assert dog_age(35) == 7\n    assert dog_age(36) == 7\n    assert dog_age(37) == 8\n    assert dog_age(38) == 8\n    assert dog_age(39) == 8\n    assert dog_age(40) == 8\n    assert dog_age(41) == 9\n    assert dog_age(42) == 9\n    assert dog_age(43) == 9\n    assert dog_age(44) == 9\n    assert dog_age(45) == 10\n    assert dog_age(46) == 1"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def dog_age(age):\n    if age < 1:\n        return 'Woof!'\n    elif age >= 1:\n        return age * 7\n\nprint(dog_age(0))\nprint(dog_age(1))\nprint(dog_age(2))\nprint(dog_age(3))\nprint(dog_age(10))\nprint(dog_age(20))\nprint(dog_age(30))\nprint(dog_age(40))\nprint(dog_age(50))\nprint(dog_age(60))\nprint(dog_age(70))\nprint(dog_age(80))\nprint(dog_age(90))\nprint(dog_age(100))\nprint(dog_age(110))\nprint(dog_age(120))\nprint(dog_age(130))\nprint(dog_age(140))\nprint(dog_age(150))\nprint(dog_age(160))\nprint(dog_age(170))\nprint(dog_age(180))\nprint(dog_age(190))\nprint(dog_age(200))\nprint(dog_age(210))\nprint(dog_age(220))\nprint(dog_age(230))\nprint(dog_age(240))\nprint(dog_age(250))\nprint(dog_age(260))\nprint(dog_age(270))\nprint(dog_age(280))\nprint(dog_age(290))\nprint(dog_age(300))\nprint(dog_age(310))\nprint(dog_age(320))\nprint(dog_age(330))\nprint(dog_age(340))\nprint(dog_age(350))\nprint(dog_age(360))\nprint(dog_age(370))\nprint(dog_age(380))\nprint(dog_age(390))\nprint(dog_age(400))\nprint(dog_"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "import datetime\n\n\ndef convert_dog_age(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_to_dog_age(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_to_dog_years(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v2(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v3(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v4(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v5(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v6(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v7(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v8(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v9(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v10(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef convert_dog_years_v11(human_age):\n    \"\"\"Convert human"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "from datetime import datetime\n\n\ndef dog_age(birth: str) -> int:\n    \"\"\"\n    >>> dog_age(\"1997-01-10\")\n    11\n    \"\"\"\n    return int(datetime.now().strftime(\"%Y\")) - int(birth)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def dog_age(age):\n    return age*7"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def dog_age(human_years):\n    return human_years // 7\n\n\nif __name__ == '__main__':\n    print(dog_age(2))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def dog_years(human_age):\n    return human_age * 7\n\nprint(dog_years(2))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def dog_age(human_years):\n    return human_years / 7\n\n\nif __name__ == '__main__':\n    print(dog_age(2))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "# Define a function named calc_dog_age() that takes one parameter named age_of_human.\ndef calc_dog_age(age_of_human):\n    \"\"\"Calculates a dog's age in dog's years.\n\n    Parameters\n    ----------\n    age_of_human : int\n        The human's age in years.\n\n    Returns\n    -------\n    int\n        The dog's age in dog's years.\n\n    Examples\n    --------\n    >>> calc_dog_age(10)\n    10\n    >>> calc_dog_age(11)\n    11\n    >>> calc_dog_age(12)\n    12\n    \"\"\"\n    # Calculate the dog's age in dog's years.\n    age_of_dog = age_of_human * 7\n\n    # Return the dog's age in dog's years.\n    return age_of_dog"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def dog_age(human_age):\n    \"\"\"\n    >>> dog_age(10)\n    14\n    >>> dog_age(13)\n    18\n    >>> dog_age(20)\n    24\n    >>> dog_age(50)\n    65\n    \"\"\"\n    return human_age * 7\n\ndef dog_age_2(human_age):\n    \"\"\"\n    >>> dog_age_2(10)\n    14\n    >>> dog_age_2(13)\n    18\n    >>> dog_age_2(20)\n    24\n    >>> dog_age_2(50)\n    65\n    \"\"\"\n    return human_age * 7\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def dog_age(age_in_human_years):\n    return age_in_human_years * 7\n\n\"\"\"\nWrite a function to determine the factorial of a number.\n\"\"\"\n\ndef factorial(number):\n    if number == 0:\n        return 1\n    else:\n        return number * factorial(number - 1)\n\n\"\"\"\nWrite a function to find the sum of all numbers from 1 to n inclusive.\n\"\"\"\n\ndef sum_of_numbers(n):\n    if n == 1:\n        return 1\n    else:\n        return n + sum_of_numbers(n - 1)\n\n\"\"\"\nWrite a function to determine the sum of the numbers 1 to n inclusive.\n\"\"\"\n\ndef sum_of_numbers_2(n):\n    return n * (n + 1) / 2\n\n\"\"\"\nWrite a function to find the average age of a group of people.\n\"\"\"\n\ndef average_age(ages):\n    sum_of_ages = 0\n    for age in ages:\n        sum_of_ages += age\n    return sum_of_ages / len(ages)\n\n\"\"\"\nWrite a function to find the average age of a group of people.\n\"\"\"\n\ndef average_age_2(ages):\n    return sum(ages) / len(ages)\n\n\"\"\"\nWrite a function to find the average age of a group of people.\n\"\"\"\n\ndef average_age_3(ages):\n    return sum(ages) / len(ages)\n\n\"\"\"\nWrite a function to find the average age of a group of people.\n\"\"\"\n\ndef average_age_4(ages):\n    return sum(ages) / len(ages)\n\n\"\"\"\nWrite a function to find the average age of a group of people.\n\"\"\"\n\ndef average_age_5(ages):\n    return sum(ages) / len(ages)\n\n\"\"\"\nWrite a function to find the average age of a group of people.\n\"\"\"\n\ndef average_age_6(ages):\n    return sum(ages) / len(ages)\n\n\"\"\"\nWrite a function"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def dog_years(human_years):\n    return human_years * 7\n\n\ndef main():\n    print(dog_years(1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "# Define a function with a dog's age in human years as an input\ndef dog_age(human_age):\n    \"\"\"\n    Return the age of a dog in dog's years.\n\n    >>> dog_age(10)\n    15.7\n    >>> dog_age(1)\n    2.7\n    >>> dog_age(2)\n    5.4\n    >>> dog_age(3)\n    8.1\n    \"\"\"\n    # Calculate the age of the dog in dog's years\n    dog_age = (human_age - 10) * 7\n    return dog_age\n\n# Call the function to test it\nhuman_age = int(input('Enter the age of a dog in human years: '))\nprint(dog_age(human_age))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\"\"\"\nWrite a function to calculate a dog's age in dog's years.\n\nFor example:\n\nhuman_age = 10\n\nreturns 70\n\"\"\""
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def dog_age(age):\n    return age * 7\n\n\ndef test_dog_age():\n    assert dog_age(1) == 7\n    assert dog_age(2) == 14\n    assert dog_age(3) == 21\n\n\nif __name__ == '__main__':\n    print dog_age(3)"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def dog_age(human_age):\n    return human_age / 7\n\n\nif __name__ == '__main__':\n    print dog_age(8)"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\ndef main():\n    print(dog_age(10))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def dog_age(age):\n    return age * 7\n\nif __name__ == '__main__':\n    print(dog_age(1))\n    print(dog_age(2))\n    print(dog_age(3))\n    print(dog_age(4))"
    },
    {
      "rank": 19,
      "score": 9.93190171477037,
      "candidate": "import math\n\n\ndef dog_age(human_age):\n    \"\"\"\n    >>> dog_age(1)\n    14.2\n    >>> dog_age(2)\n    28.4\n    >>> dog_age(3)\n    42.6\n    >>> dog_age(4)\n    56.8\n    \"\"\"\n    return human_age * 7\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 20,
      "score": 9.85562377639322,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\nprint(dog_age(20))"
    },
    {
      "rank": 21,
      "score": 9.85145598626796,
      "candidate": "def dog_age(human_years):\n    return human_years - 10\n\nprint(dog_age(10))\nprint(dog_age(18))\nprint(dog_age(1))"
    },
    {
      "rank": 22,
      "score": 9.844455316488794,
      "candidate": "import math\n\ndef dog_years(human_age):\n    return math.floor(human_age * 7)\n\n\nif __name__ == '__main__':\n    print(dog_years(2))\n    print(dog_years(2.5))\n    print(dog_years(2.7))\n    print(dog_years(3))\n    print(dog_years(10))\n    print(dog_years(15))\n    print(dog_years(15.5))\n    print(dog_years(16))\n    print(dog_years(20))\n    print(dog_years(25))\n    print(dog_years(30))\n    print(dog_years(35))\n    print(dog_years(40))\n    print(dog_years(45))\n    print(dog_years(50))\n    print(dog_years(55))\n    print(dog_years(60))\n    print(dog_years(65))\n    print(dog_years(70))\n    print(dog_years(75))\n    print(dog_years(80))\n    print(dog_years(85))\n    print(dog_years(90))\n    print(dog_years(95))\n    print(dog_years(100))\n    print(dog_years(105))\n    print(dog_years(110))\n    print(dog_years(115))\n    print(dog_years(120))\n    print(dog_years(125))\n    print(dog_years(130))\n    print(dog_years(135))\n    print(dog_years(140))\n    print(dog_years(145))\n    print(dog_years(150))\n    print(dog_years(155))\n    print(dog_years(160))\n    print(dog_years(16"
    },
    {
      "rank": 23,
      "score": 9.83933623233517,
      "candidate": "def convert_to_dog_years(human_age):\n    return human_age * 7\n\n\nif __name__ == '__main__':\n    age = int(input('Enter your age: '))\n    print(convert_to_dog_years(age))"
    },
    {
      "rank": 24,
      "score": 9.790154179905153,
      "candidate": "def convert_dog_age(human_age):\n    return human_age / 7"
    },
    {
      "rank": 25,
      "score": 9.749366983103112,
      "candidate": "def convert_dog_age(human_age):\n    \"\"\"\n    Converts human age to dog years.\n    \"\"\"\n    return human_age * 7\n\ndef test_convert_dog_age():\n    \"\"\"\n    Tests dog age converter.\n    \"\"\"\n    assert convert_dog_age(1) == 7\n\nif __name__ == '__main__':\n    test_convert_dog_age()"
    },
    {
      "rank": 26,
      "score": 9.718512536588424,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\"\"\"\nWrite a function that takes a number and returns the next highest number\nwith the same number of digits.\n\"\"\"\n\ndef next_highest(num):\n    return int(str(num)[::-1].zfill(len(str(num))))\n\n\n\"\"\"\nWrite a function to calculate a dog's age in dog's years.\n\"\"\"\n\ndef dog_age(human_age):\n    return human_age * 7\n\n\"\"\"\nWrite a function that takes a number and returns the next highest number\nwith the same number of digits.\n\"\"\"\n\ndef next_highest(num):\n    return int(str(num)[::-1].zfill(len(str(num))))"
    },
    {
      "rank": 27,
      "score": 9.56218585258606,
      "candidate": "def dog_age(age):\n    return age * 7\n\n\nprint(dog_age(2))"
    },
    {
      "rank": 28,
      "score": 9.546310366079043,
      "candidate": "def dog_age(human_age):\n    \"\"\"Returns dog_age.\"\"\"\n    return human_age * 7\n\nif __name__ == '__main__':\n    human_age = input('Enter your age: ')\n    print(dog_age(human_age))"
    },
    {
      "rank": 29,
      "score": 9.453457551837552,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\nprint(dog_age(1))\nprint(dog_age(20))\nprint(dog_age(8))"
    },
    {
      "rank": 30,
      "score": 9.406883124156083,
      "candidate": "def human_years_to_dog_years(human_years):\n    return human_years - 10\n\n\ndef dog_years_to_human_years(dog_years):\n    return dog_years + 10\n\n\ndef main():\n    human_age = int(input(\"Enter your age: \"))\n    dog_age = human_years_to_dog_years(human_age)\n    print(f\"You are {dog_age} dog years old.\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 31,
      "score": 9.392502261597269,
      "candidate": "def convert_age(age):\n    return age * 7"
    },
    {
      "rank": 32,
      "score": 9.15509021142277,
      "candidate": "def dog_years(age):\n    return age * 7\n\n\ndef test_dog_years():\n    assert dog_years(1) == 7\n    assert dog_years(2) == 14\n    assert dog_years(3) == 21\n\n\nif __name__ == '__main__':\n    test_dog_years()"
    },
    {
      "rank": 33,
      "score": 8.896034248495855,
      "candidate": "from datetime import datetime\n\n\ndef dog_age(date):\n    \"\"\"\n    Calculate a dog's age in dog's years.\n\n    :param date: date of birth\n    :return: dog's age\n    \"\"\"\n    today = datetime.today()\n    dog_age = today.year - date.year\n    if (today.month, today.day) < (date.month, date.day):\n        dog_age -= 1\n    return dog_age"
    },
    {
      "rank": 34,
      "score": 8.883439751649506,
      "candidate": "def dog_age(age_human):\n    \"\"\"\n    Return the age in dog years.\n    \"\"\"\n    return age_human * 7"
    },
    {
      "rank": 35,
      "score": 8.863520498046734,
      "candidate": "import datetime\n\n\ndef main():\n    dog = input(\"Enter the dog's name: \")\n    human_age = int(input(\"Enter the dog's human age: \"))\n    human_birth = int(input(\"Enter the year you turned human: \"))\n    dog_birth = human_birth - human_age\n    dog_age = datetime.datetime.now().year - dog_birth\n    print(f\"{dog} is {dog_age} years old in dog's years.\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 36,
      "score": 8.856375397410378,
      "candidate": "def convert_age(age):\n    dog_years = age * 7\n    return dog_years\n\nif __name__ == '__main__':\n    age = int(input('Enter your dog\\'s age in human years: '))\n    dog_years = convert_age(age)\n    print('Your dog is {} years old in dog\\'s years.'.format(dog_years))"
    },
    {
      "rank": 37,
      "score": 8.814589654890879,
      "candidate": "import datetime\n\n\ndef dog_age(years, months, days):\n    \"\"\"\n    Returns the age of a dog based on years, months, and days.\n    \"\"\"\n    today = datetime.date.today()\n    years_ago = datetime.date(today.year - years, today.month, today.day)\n    months_ago = datetime.date(today.year, today.month - months, today.day)\n    days_ago = datetime.date(today.year, today.month, today.day - days)\n\n    if today > years_ago:\n        return years\n\n    elif today > months_ago:\n        return years + (months / 12)\n\n    elif today > days_ago:\n        return years + (months / 12) + (days / 365)\n\n    else:\n        return False"
    },
    {
      "rank": 38,
      "score": 8.814300571413295,
      "candidate": "def dog_age(human_age):\n    # I'm assuming that the average human's lifespan is 75 years,\n    # and that a dog's lifespan is half that.\n    return human_age / 15\n\ndef test_dog_age():\n    assert dog_age(100) == 7\n    assert dog_age(1) == 0.6\n    assert dog_age(12) == 1\n    assert dog_age(50) == 3.3"
    },
    {
      "rank": 39,
      "score": 8.776754405442379,
      "candidate": "def dog_age(age):\n    return age * 7\n\ndef test_dog_age():\n    assert dog_age(1) == 7\n    assert dog_age(2) == 14\n    assert dog_age(3) == 21"
    },
    {
      "rank": 40,
      "score": 8.735904286589756,
      "candidate": "# def dog_age(age):\n#     return age*7\n\ndef dog_age(age):\n    return round(age * 7, 2)"
    },
    {
      "rank": 41,
      "score": 8.719698774422834,
      "candidate": "import math\n\n\ndef dog_age(human_age):\n    return math.ceil(human_age / 7)\n\n\ndef main():\n    print(dog_age(10))\n    print(dog_age(11))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 42,
      "score": 8.60718065571588,
      "candidate": "import datetime\n\n\ndef dog_age(name, age):\n    \"\"\"\n    Calculate a dog's age in dog's years.\n    \"\"\"\n    today = datetime.datetime.today()\n    age = age * 7\n    date_of_birth = today - datetime.timedelta(days=age)\n    print(f\"{name} is {age} days old and was born on {date_of_birth.date()}.\")\n\n\nif __name__ == '__main__':\n    dog_age(\"Charlie\", 1)"
    },
    {
      "rank": 43,
      "score": 8.607072466923231,
      "candidate": "# from datetime import date\n\ndef dog_age(name, age_as_human):\n    # age_as_human = 0\n    # dog_age = 0\n    # age_as_dog = 0\n    # name = \"\"\n    # name = input(\"What is the dog's name? \")\n    # age_as_human = int(input(\"How old is {}? \".format(name)))\n    # age_as_dog = age_as_human * 7\n    # dog_age = int(input(\"What is the dog's age in dog's years? \"))\n    # print(\"{} is {} years old in dog's years.\".format(name, dog_age))\n    return (age_as_human * 7)\n\n\ndef main():\n    print(\"This program is going to calculate a dog's age in dog's years.\")\n    # dog_age()\n    # dog_age(input(\"What is the dog's name? \"),\n    #         int(input(\"How old is {}? \".format(name)))\n    #         int(input(\"What is the dog's age in dog's years? \"))\n    #         print(\"{} is {} years old in dog's years.\".format(name, dog_age))\n    # name = input(\"What is the dog's name? \")\n    # age_as_human = int(input(\"How old is {}? \".format(name)))\n    # age_as_dog = age_as_human * 7\n    # dog_age = int(input(\"What is the dog's age in dog's years? \"))\n    # print(\"{} is {} years old in dog's years.\".format(name, dog_age))\n\n    # dog_age = int(input(\"What is the dog's age in dog's years? \"))\n    # age_as_human = 0\n    # dog_age = 0\n    # age_as_dog = 0\n    # name = \"\"\n    # name = input(\"What is the dog's name? \")\n    # age_as_human = int(input(\"How old is {}? \".format(name)))\n    # age"
    },
    {
      "rank": 44,
      "score": 8.593512988576048,
      "candidate": "def dog_age(human_age):\n    \"\"\"\n    :param human_age: int\n    :return: int\n    \"\"\"\n    return human_age * 7\n\n\nif __name__ == '__main__':\n    print(dog_age(10))"
    },
    {
      "rank": 45,
      "score": 8.592382443791303,
      "candidate": "import math\n\ndef convert_dog_age(human_age):\n    return math.floor(human_age / 7)\n\nif __name__ == '__main__':\n    assert convert_dog_age(10) == 1, \"A dog of 10 years old is 1 in dog years.\""
    },
    {
      "rank": 46,
      "score": 8.55332746664916,
      "candidate": "# def dog_age(age_in_human_years):\n#     return age_in_human_years * 7\n\ndef dog_age(age_in_human_years):\n    return age_in_human_years * 7"
    },
    {
      "rank": 47,
      "score": 8.521560170979932,
      "candidate": "def dog_age(human_age):\n    return human_age*10\n\nif __name__ == '__main__':\n    print(dog_age(20))"
    },
    {
      "rank": 48,
      "score": 8.48573679388542,
      "candidate": "def dog_age(human_age):\n    return human_age * 7"
    },
    {
      "rank": 49,
      "score": 8.47483213655401,
      "candidate": "def convert_age(human_age):\n    \"\"\"\n    Converts a human's age to a dog's age.\n    \"\"\"\n    return human_age * 7\n\nif __name__ == '__main__':\n    print(convert_age(20))"
    },
    {
      "rank": 50,
      "score": 8.446745499933552,
      "candidate": "def dog_years(human_years):\n    return human_years * 7\n\n\nassert dog_years(2) == 14"
    },
    {
      "rank": 51,
      "score": 8.438370693312374,
      "candidate": "from datetime import date\n\n\ndef dog_age(human_age):\n    return human_age * 7\n\n\ndef main():\n    human_age = int(input('Enter your age: '))\n    print(f'You are {dog_age(human_age)} years old in dog\\'s years.')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 52,
      "score": 8.428322726844966,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\n# TESTS\nassert dog_age(10) == 70\nassert dog_age(20) == 140\nassert dog_age(30) == 210"
    },
    {
      "rank": 53,
      "score": 8.412039889733295,
      "candidate": "# The dog's age in human years.\nhuman_age = int(input(\"How old is the dog? \"))\n\n# The dog's age in dog's years.\ndog_age = human_age * 7\n\n# Prints the result.\nprint(\"The dog is \" + str(dog_age) + \" years old in dog's years.\")"
    },
    {
      "rank": 54,
      "score": 8.392402717369736,
      "candidate": "import math\n\ndef dog_age(human_age):\n    return math.floor(human_age / 7)\n\ndef main():\n    human_age = float(input(\"What is your age? \"))\n    print(\"Your age in dog years is: \" + str(dog_age(human_age)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 55,
      "score": 8.382225508917411,
      "candidate": "def convert_dog_age(human_age):\n    \"\"\"\n    Return the dog's age in dog's years.\n    \"\"\"\n    return human_age * 7"
    },
    {
      "rank": 56,
      "score": 8.360897904945727,
      "candidate": "def dog_years(human_age):\n    return human_age * 7\n\nprint(dog_years(20))"
    },
    {
      "rank": 57,
      "score": 8.338880234425629,
      "candidate": "def dog_age(human_age):\n    return human_age / 7"
    },
    {
      "rank": 58,
      "score": 8.31318225703747,
      "candidate": "# Calculate the dog's age in human years.\n# Human years = (human years in a dog's life) / 7\n# Human years in a dog's life = (age in dog years) * 7\n\ndef dog_age(age_in_dog_years):\n    return round(age_in_dog_years * 7)\n\nprint(dog_age(12))"
    },
    {
      "rank": 59,
      "score": 8.29699647847545,
      "candidate": "def dog_years(human_years):\n    \"\"\"\n    Calculate a dog's age in dog's years.\n\n    Args:\n        human_years: The age of the dog in human years.\n\n    Returns:\n        The age of the dog in dog's years.\n    \"\"\"\n    return human_years * 7"
    },
    {
      "rank": 60,
      "score": 8.271157418257102,
      "candidate": "def convert_dog_age(human_age):\n    return human_age // 7\n\n\ndef main():\n    human_age = int(input('What is your age in human years? '))\n    dog_age = convert_dog_age(human_age)\n    print('You are {} in dog years'.format(dog_age))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 61,
      "score": 8.23715699751254,
      "candidate": "def dog_age(age):\n    if age <= 0:\n        return \"Invalid age\"\n    elif age < 2:\n        return \"Your dog is less than 2 years old\"\n    elif age < 4:\n        return \"Your dog is less than 4 years old\"\n    elif age < 13:\n        return \"Your dog is less than 13 years old\"\n    else:\n        return \"Your dog is at least 13 years old\""
    },
    {
      "rank": 62,
      "score": 8.235906482678837,
      "candidate": "def convert_dog_age(human_age):\n    return human_age * 7"
    },
    {
      "rank": 63,
      "score": 8.206052352749277,
      "candidate": "def convert_age(human_age):\n    dog_age = human_age * 7\n    return dog_age\n\n\ndef main():\n    human_age = int(input(\"What is your human age? \"))\n    dog_age = convert_age(human_age)\n    print(f\"You are {dog_age} years old in dog's years.\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 64,
      "score": 8.15414055487214,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\nprint(dog_age(20))"
    },
    {
      "rank": 65,
      "score": 8.128520552199635,
      "candidate": "def convert_age(human_age):\n    return human_age * 7\n\n\ndef main():\n    human_age = input('Enter your age in human years: ')\n    dog_age = convert_age(human_age)\n    print('You are', dog_age, 'in dog years')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 66,
      "score": 8.066796558994257,
      "candidate": "def dog_age(age):\n    \"\"\"\n    Takes an integer representing a dog's age in human years and returns\n    the dog's age in dog's years.\n    \"\"\"\n    return age * 7\n\n\nif __name__ == '__main__':\n    # Provide various test cases for your function.\n    # You should test edge cases, boundary cases, and corner cases.\n    assert dog_age(1) == 7\n    assert dog_age(2) == 14\n    assert dog_age(3) == 21\n    assert dog_age(5) == 35\n    assert dog_age(10) == 70\n    assert dog_age(15) == 105\n    assert dog_age(20) == 140\n    assert dog_age(25) == 175\n    assert dog_age(30) == 210\n    assert dog_age(35) == 245\n    assert dog_age(40) == 280\n    assert dog_age(45) == 315\n    assert dog_age(50) == 350\n    assert dog_age(55) == 385\n    assert dog_age(60) == 420\n    assert dog_age(65) == 455\n    assert dog_age(70) == 490\n    assert dog_age(75) == 525\n    assert dog_age(80) == 560\n    assert dog_age(85) == 595\n    assert dog_age(90) == 630\n    assert dog_age(95) == 665\n    assert dog_age(100) == 700\n    assert dog_age(105) == 735\n    assert dog_age(110) == 770\n    assert dog_age(115) == 805\n    assert dog_age(120) == 840\n    assert dog_age(125) == 875\n    assert dog"
    },
    {
      "rank": 67,
      "score": 7.988670440293954,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\nprint(dog_age(3))\nprint(dog_age(7.5))\nprint(dog_age(1))"
    },
    {
      "rank": 68,
      "score": 7.9684745264142895,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\nif __name__ == '__main__':\n    age = int(input('Enter your age in human years: '))\n    print(f'Your dog is {dog_age(age)} years old.')"
    },
    {
      "rank": 69,
      "score": 7.946593706141732,
      "candidate": "def dog_years(human_age):\n    return human_age * 7\n\nprint(dog_years(10))\n\n# =============================================================================\n\ndef add(a, b):\n    return a + b\n\ndef subtract(a, b):\n    return a - b\n\ndef multiply(a, b):\n    return a * b\n\ndef divide(a, b):\n    return a / b\n\ndef power(a, b):\n    return a ** b\n\nprint(add(1, 2))\nprint(subtract(5, 3))\nprint(multiply(2, 3))\nprint(divide(7, 3))\nprint(power(2, 4))\n\n# =============================================================================\n\ndef average(a, b):\n    return (a + b) / 2\n\ndef diff(a, b):\n    return a - b\n\ndef multiply(a, b):\n    return a * b\n\ndef divide(a, b):\n    return a / b\n\ndef power(a, b):\n    return a ** b\n\ndef main(a, b):\n    print(f'average: {average(a, b)}')\n    print(f'diff: {diff(a, b)}')\n    print(f'multiply: {multiply(a, b)}')\n    print(f'divide: {divide(a, b)}')\n    print(f'power: {power(a, b)}')\n\nmain(3, 4)\n\n# =============================================================================\n\ndef main(a, b):\n    print(f'average: {average(a, b)}')\n    print(f'diff: {diff(a, b)}')\n    print(f'multiply: {multiply(a, b)}')\n    print(f'divide: {divide(a, b)}')\n    print(f'power: {power(a, b)}')\n\nmain(3, 4)\n\n# =============================================================================\n\ndef main(a, b):\n    print(f'average: {average("
    },
    {
      "rank": 70,
      "score": 7.9264973346044085,
      "candidate": "import math\n\ndef dog_age(human_age):\n    return math.floor(human_age / 7)\n\n\"\"\"\nWrite a function to calculate a dog's age in dog's years.\n\nFor example:\n\ndog_age(10) # should return 1\ndog_age(15) # should return 2\ndog_age(20) # should return 2\n\"\"\""
    },
    {
      "rank": 71,
      "score": 7.9061514636081425,
      "candidate": "def dog_age(age):\n    return age * 7"
    },
    {
      "rank": 72,
      "score": 7.895064801957485,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\nprint(dog_age(20))"
    },
    {
      "rank": 73,
      "score": 7.846760722440151,
      "candidate": "def dog_age(age_in_human_years):\n    \"\"\"\n    Return dog's age in dog's years.\n    \"\"\"\n    return age_in_human_years * 7\n\nif __name__ == '__main__':\n    print(dog_age(1))"
    },
    {
      "rank": 74,
      "score": 7.66823141981358,
      "candidate": "def dog_years(human_years):\n    return human_years * 7\n\n\nif __name__ == '__main__':\n    assert dog_years(1) == 7\n    assert dog_years(2) == 14\n    assert dog_years(3) == 21"
    },
    {
      "rank": 75,
      "score": 7.550038432874043,
      "candidate": "from datetime import date\n\n\ndef dog_age(human_age):\n    return human_age * 7\n\n\ndef test_dog_age():\n    assert dog_age(10) == 70\n    assert dog_age(1) == 7\n    assert dog_age(18) == 126\n\n\ndef main():\n    print(dog_age(date.today().year - 1969))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 76,
      "score": 7.26555914760406,
      "candidate": "def convert_dog_age(human_age):\n    \"\"\"Converts the age of a dog to dog years.\"\"\"\n    return human_age * 7"
    },
    {
      "rank": 77,
      "score": 3.3254976068569975,
      "candidate": "def dog_age(human_age):\n    \"\"\"\n    Return the dog's age in dog's years.\n    \"\"\"\n    return human_age * 7\n\n\ndef test_dog_age():\n    \"\"\"\n    >>> test_dog_age()\n    \"\"\"\n    assert dog_age(2) == 14\n    assert dog_age(1) == 7"
    },
    {
      "rank": 78,
      "score": 3.2324747977278934,
      "candidate": "def convert_dog_age(human_age):\n    \"\"\"Convert human age to dog's age.\"\"\"\n    return human_age * 7\n\n\ndef test_convert_dog_age():\n    \"\"\"Test convert_dog_age.\"\"\"\n    assert convert_dog_age(1) == 7"
    },
    {
      "rank": 79,
      "score": 3.1302144104606313,
      "candidate": "# Time complexity: O(1)\n# Space complexity: O(1)\ndef convert_age(human_age):\n    return human_age * 7\n\n\n# Time complexity: O(1)\n# Space complexity: O(1)\ndef convert_height(human_height):\n    return human_height * 0.08\n\n\n# Time complexity: O(1)\n# Space complexity: O(1)\ndef convert_weight(human_weight):\n    return human_weight * 15"
    },
    {
      "rank": 80,
      "score": 3.1231841839472056,
      "candidate": "def human_to_dog_years(human_years):\n    return human_years * 7\n\n\nif __name__ == '__main__':\n    print(human_to_dog_years(10))"
    },
    {
      "rank": 81,
      "score": 3.090167524402961,
      "candidate": "import datetime\n\n\ndef dog_age(date):\n    today = datetime.datetime.now()\n    dog_years = (today.year - date.year)\n    if (date.month > today.month) or (date.month == today.month and date.day > today.day):\n        dog_years -= 1\n    return dog_years\n\n\ndef test_dog_age():\n    assert dog_age(datetime.datetime(2021, 1, 1)) == 0\n    assert dog_age(datetime.datetime(2022, 1, 1)) == 1\n    assert dog_age(datetime.datetime(2019, 1, 1)) == 3"
    },
    {
      "rank": 82,
      "score": 3.075419359822866,
      "candidate": "def dog_age(human_age):\n    return human_age / 7\n\n# tests\nimport unittest\n\nclass Test(unittest.TestCase):\n\n    def test_dog_age(self):\n        actual = dog_age(10)\n        expected = 1\n        self.assertEqual(actual, expected)\n\n        actual = dog_age(1)\n        expected = 1 / 7\n        self.assertEqual(actual, expected)\n\n        actual = dog_age(2)\n        expected = 2 / 7\n        self.assertEqual(actual, expected)\n\n        actual = dog_age(5)\n        expected = 5 / 7\n        self.assertEqual(actual, expected)\n\n        actual = dog_age(20)\n        expected = 20 / 7\n        self.assertEqual(actual, expected)\n\n        actual = dog_age(30)\n        expected = 30 / 7\n        self.assertEqual(actual, expected)\n\n\nif __name__ == \"__main__\":\n    unittest.main()"
    },
    {
      "rank": 83,
      "score": 3.0626532653231733,
      "candidate": "def convert_to_dog_years(human_years):\n    return human_years * 7\n\n\ndef test_convert_to_dog_years():\n    assert convert_to_dog_years(1) == 7\n    assert convert_to_dog_years(2) == 14\n\n\nif __name__ == '__main__':\n    print(convert_to_dog_years(2))"
    },
    {
      "rank": 84,
      "score": 3.026621421530368,
      "candidate": "def convert_to_dog_years(human_years):\n    return human_years * 7\n\n\nif __name__ == '__main__':\n    print(convert_to_dog_years(10))"
    },
    {
      "rank": 85,
      "score": 3.0232986118435297,
      "candidate": "from datetime import datetime\n\n\ndef convert_to_dog_years(human_age):\n    \"\"\"\n    >>> convert_to_dog_years(10)\n    22\n    \"\"\"\n    return human_age * 7\n\n\ndef dog_years_today(human_age):\n    \"\"\"\n    >>> dog_years_today(10)\n    252\n    \"\"\"\n    return convert_to_dog_years(human_age) + datetime.now().year - 1970\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 2.9458136878832315,
      "candidate": "def convert_to_dog_years(human_years):\n    \"\"\"\n    Convert human years to dog years.\n    :param human_years: int\n    :return: int\n    >>> convert_to_dog_years(1)\n    14\n    >>> convert_to_dog_years(2)\n    29\n    >>> convert_to_dog_years(3)\n    45\n    \"\"\"\n    return human_years * 7\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 87,
      "score": 2.9438071303321967,
      "candidate": "def age_in_dog_years(human_age):\n    return human_age * 7\n\n\nif __name__ == '__main__':\n    assert age_in_dog_years(10) == 70\n    assert age_in_dog_years(2) == 14\n    assert age_in_dog_years(1) == 7"
    },
    {
      "rank": 88,
      "score": 2.9438031900663995,
      "candidate": "def convert_dog_age(human_age):\n    \"\"\"\n    >>> convert_dog_age(12)\n    16\n    >>> convert_dog_age(3)\n    6\n    >>> convert_dog_age(1)\n    2\n    \"\"\"\n    return human_age * 7"
    },
    {
      "rank": 89,
      "score": 2.928238235888192,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\ndef test_dog_age():\n    assert dog_age(1) == 7\n    assert dog_age(2) == 14\n    assert dog_age(3) == 21"
    },
    {
      "rank": 90,
      "score": 2.9277351130585707,
      "candidate": "from datetime import date\n\n\ndef get_dog_age(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_2(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_3(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_4(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_5(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_6(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_7(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_8(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_9(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_10(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_11(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_12(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_13(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_14(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_15(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_16(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_17(human_years):\n    return human_years - 10\n\n\ndef get_dog_age_18(human_years):\n    return human_years"
    },
    {
      "rank": 91,
      "score": 2.9257890297957085,
      "candidate": "from datetime import date\n\n\ndef convert_dog_years(human_years):\n    return human_years * 7\n\n\ndef human_age(year_of_birth, today=date.today()):\n    return today.year - year_of_birth\n\n\ndef dog_age(year_of_birth, today=date.today()):\n    return human_age(year_of_birth, today) * 7"
    },
    {
      "rank": 92,
      "score": 2.9058940432482823,
      "candidate": "from datetime import datetime\n\n\ndef dog_age(date):\n    \"\"\"\n    Calculate a dog's age in dog's years.\n\n    Args:\n        date (str): A string representing a date.\n\n    Returns:\n        int: The age of the dog.\n\n    Examples:\n        >>> dog_age('2019-04-01')\n        4\n        >>> dog_age('2017-08-15')\n        2\n        >>> dog_age('2015-09-10')\n        1\n        >>> dog_age('2019-01-01')\n        0\n        >>> dog_age('2019-02-01')\n        0\n        >>> dog_age('2019-03-01')\n        0\n    \"\"\"\n    date_time = datetime.strptime(date, \"%Y-%m-%d\")\n    today = datetime.today()\n    return int(today.year - date_time.year)\n\n\ndef main():\n    date = input(\"Enter a date in the format of YYYY-MM-DD: \")\n    print(dog_age(date))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 93,
      "score": 2.8873261473756116,
      "candidate": "def convert_dog_years(human_age):\n    \"\"\"\n    Convert human years to dog years.\n\n    Parameters:\n    human_age (int): Human age\n\n    Returns:\n    int: Dog years\n    \"\"\"\n    return human_age * 7\n\n\ndef main():\n    \"\"\"\n    Print convert_dog_years.\n    \"\"\"\n    print(convert_dog_years(2))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 94,
      "score": 2.869348146113956,
      "candidate": "def dog_age(human_age):\n    #return human_age * 7\n    return human_age * 7\n\n\n#print(dog_age(20))\n\n\n\"\"\"\nWrite a function to calculate a dog's age in dog's years.\n\nIf the dog is less than one year old, the dog's age is its current age multiplied by 10.\nIf the dog is over one year old but less than two, the dog's age is the current age multiplied by 4.\nIf the dog is over two years old but less than three, the dog's age is the current age multiplied by 2.\nIf the dog is over three years old but less than four, the dog's age is the current age multiplied by 1.\nIf the dog is over four years old, the dog's age is the current age divided by 4.\n\"\"\"\n\ndef dog_age(human_age):\n    if human_age < 1:\n        return human_age * 10\n    elif human_age < 2:\n        return human_age * 4\n    elif human_age < 3:\n        return human_age * 2\n    elif human_age < 4:\n        return human_age * 1\n    else:\n        return human_age / 4\n\n#print(dog_age(2))\n\n\n\"\"\"\nWrite a function that calculates the total price of a meal.\n\nThe function should take three parameters:\n- price of the appetizer\n- price of the entree\n- price of the drink\n\nThe function should return the total price of the meal.\n\"\"\"\n\ndef meal_cost(app_price, ent_price, drink_price):\n    return app_price + ent_price + drink_price\n\n#print(meal_cost(1, 2, 3))\n\n\n\"\"\"\nWrite a function that takes a number as an argument and returns \"Fizz\", \"Buzz\" or \"FizzBuzz\".\n\nIf the number is a multiple of 3, return \"Fizz\".\nIf the number is a multiple of 5, return \"Buzz\".\nIf the number is a multiple of"
    },
    {
      "rank": 95,
      "score": 2.8650509929821664,
      "candidate": "def dog_age(human_age):\n    return human_age / 7\n\n\ndef test_dog_age():\n    assert dog_age(10) == 1\n    assert dog_age(8) == 1\n    assert dog_age(1) == 0"
    },
    {
      "rank": 96,
      "score": 2.855846714419487,
      "candidate": "def convert_dog_age(human_age):\n    # TODO: Write your code here\n    return human_age * 7\n\n\nif __name__ == '__main__':\n    print(convert_dog_age(2))"
    },
    {
      "rank": 97,
      "score": 2.8555904130649448,
      "candidate": "def convert_age(human_age):\n    return human_age * 7\n\n\"\"\"\nWrite a function to calculate a dog's age in human years.\n\"\"\"\n\ndef convert_age_2(dog_age):\n    return dog_age / 7"
    },
    {
      "rank": 98,
      "score": 2.82723738998527,
      "candidate": "def convert_dog_age(human_age):\n    \"\"\"Convert human years to dog years.\"\"\"\n    return human_age * 7\n\n\ndef test_convert_dog_age():\n    \"\"\"Test convert_dog_age.\"\"\"\n    assert convert_dog_age(1) == 7\n    assert convert_dog_age(2) == 14\n    assert convert_dog_age(3) == 21\n\n\nif __name__ == '__main__':\n    test_convert_dog_age()"
    },
    {
      "rank": 99,
      "score": 2.6580604353087702,
      "candidate": "def dog_age(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of seconds in a dog's life.\n\"\"\"\n\ndef dog_seconds(human_age):\n    return human_age * 7 * 365 * 24 * 60 * 60\n\n\n\"\"\"\nWrite a function to calculate how many dog's years a person is.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate how many dog's years a person is.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_age):\n    return human_age * 7\n\n\n\"\"\"\nWrite a function to calculate the number of years a dog will live.\n\"\"\"\n\ndef dog_years(human_"
    },
    {
      "rank": 100,
      "score": 2.6451547223118173,
      "candidate": "import math\n\n\ndef dog_age(human_age):\n    return math.floor(human_age / 7)\n\n\ndef test_dog_age():\n    \"\"\"\n    >>> test_dog_age()\n    \"\"\"\n    assert dog_age(8) == 1\n    assert dog_age(12) == 2\n    assert dog_age(19) == 2\n    assert dog_age(25) == 3\n    assert dog_age(80) == 11"
    }
  ]
}