{
  "timestamp": "2025-09-14T23:10:14.448695",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 115,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    Finds the sum of common divisors of two numbers.\n\n    >>> sum_of_common_divisors(6, 10)\n    12\n    >>> sum_of_common_divisors(6, 9)\n    12\n    >>> sum_of_common_divisors(6, 11)\n    12\n    >>> sum_of_common_divisors(6, 12)\n    12\n    >>> sum_of_common_divisors(6, 13)\n    12\n    >>> sum_of_common_divisors(6, 14)\n    12\n    >>> sum_of_common_divisors(6, 15)\n    12\n    >>> sum_of_common_divisors(6, 16)\n    12\n    >>> sum_of_common_divisors(6, 17)\n    12\n    >>> sum_of_common_divisors(6, 18)\n    12\n    >>> sum_of_common_divisors(6, 19)\n    12\n    >>> sum_of_common_divisors(6, 20)\n    12\n    \"\"\"\n    if num1 < num2:\n        num1, num2 = num2, num1\n\n    common_divisors = []\n    for i in range(1, num1 + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n\n    return sum(common_divisors)\n\n\ndef main():\n    assert sum_of_common_divisors(6, 10) == 12\n    assert sum_of_common_divisors(6, 9) == 12\n    assert sum_of_common_divisors(6, 11) == 12\n    assert sum_of_common_divisors(6, 12) == 12\n    assert sum_of_common_div"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def sum_common_divisors(num1: int, num2: int) -> int:\n    \"\"\"\n    >>> sum_common_divisors(12, 14)\n    2\n    >>> sum_common_divisors(12, 15)\n    3\n    \"\"\"\n    # find the divisors of num1\n    num1_divisors = set()\n    for i in range(1, num1 + 1):\n        if num1 % i == 0:\n            num1_divisors.add(i)\n\n    # find the divisors of num2\n    num2_divisors = set()\n    for i in range(1, num2 + 1):\n        if num2 % i == 0:\n            num2_divisors.add(i)\n\n    # find the intersection of the two sets\n    common_divisors = num1_divisors.intersection(num2_divisors)\n\n    return sum(common_divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(a: int, b: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(6, 10)\n    12\n    >>> sum_of_common_divisors(24, 36)\n    12\n    >>> sum_of_common_divisors(12, 36)\n    12\n    >>> sum_of_common_divisors(24, 12)\n    12\n    >>> sum_of_common_divisors(36, 12)\n    12\n    \"\"\"\n    return sum(\n        set(range(1, min(a, b) + 1))\n        & set(range(1, max(a, b) + 1, x) if a % x == 0 and b % x == 0 else set())\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    >>> sum_of_common_divisors(6, 10)\n    12\n    \"\"\"\n    divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def sum_of_divisors(num1, num2):\n    sum_of_div = 0\n    for i in range(1, num1 + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_div += i\n    return sum_of_div\n\n\nprint(sum_of_divisors(10, 20))\nprint(sum_of_divisors(10, 15))\nprint(sum_of_divisors(2, 4))\nprint(sum_of_divisors(1, 2))\nprint(sum_of_divisors(1, 1))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1: int, num2: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(48, 96)\n    144\n    >>> sum_of_common_divisors(24, 48)\n    48\n    >>> sum_of_common_divisors(12, 24)\n    12\n    >>> sum_of_common_divisors(12, 12)\n    12\n    >>> sum_of_common_divisors(12, 6)\n    6\n    >>> sum_of_common_divisors(12, 2)\n    2\n    >>> sum_of_common_divisors(12, 0)\n    0\n    >>> sum_of_common_divisors(0, 12)\n    0\n    >>> sum_of_common_divisors(0, 0)\n    0\n    \"\"\"\n    if num1 < 1 or num2 < 1:\n        return 0\n\n    divisors = set()\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.add(i)\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def sum_of_divisors(a, b):\n    \"\"\"\n    Find the sum of common divisors of two given numbers.\n\n    >>> sum_of_divisors(252, 100)\n    21\n    \"\"\"\n    return sum(set(range(1, min(a, b) + 1)) & set(range(1, a // 2 + 1)) & set(range(1, b // 2 + 1)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    \"\"\"\n    Find the sum of the common divisors of two given numbers.\n\n    >>> sum_of_common_divisors(12, 16)\n    3\n    >>> sum_of_common_divisors(10, 15)\n    3\n    >>> sum_of_common_divisors(10, 10)\n    1\n    >>> sum_of_common_divisors(1, 1)\n    1\n    \"\"\"\n    # Your code goes here\n    if a == b:\n        return a\n\n    common_divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(x: int, y: int) -> int:\n    \"\"\"\n    Return the sum of the common divisors of two numbers.\n    >>> sum_of_common_divisors(12, 16)\n    9\n    >>> sum_of_common_divisors(10, 12)\n    6\n    >>> sum_of_common_divisors(10, 15)\n    5\n    >>> sum_of_common_divisors(10, 10)\n    1\n    >>> sum_of_common_divisors(10, 1)\n    1\n    >>> sum_of_common_divisors(10, 19)\n    1\n    >>> sum_of_common_divisors(-10, 10)\n    1\n    >>> sum_of_common_divisors(10, -10)\n    1\n    >>> sum_of_common_divisors(-10, -10)\n    1\n    >>> sum_of_common_divisors(-10, -19)\n    1\n    \"\"\"\n    if x < 0 or y < 0:\n        x = abs(x)\n        y = abs(y)\n\n    x_divisors = set()\n    for i in range(1, int(x ** 0.5) + 1):\n        if x % i == 0:\n            x_divisors.add(i)\n            x_divisors.add(x // i)\n\n    y_divisors = set()\n    for i in range(1, int(y ** 0.5) + 1):\n        if y % i == 0:\n            y_divisors.add(i)\n            y_divisors.add(y // i)\n\n    return sum(x_divisors & y_divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(a: int, b: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(36, 12)\n    24\n    >>> sum_of_common_divisors(12, 36)\n    24\n    >>> sum_of_common_divisors(24, 12)\n    12\n    >>> sum_of_common_divisors(12, 24)\n    12\n    >>> sum_of_common_divisors(12, 12)\n    6\n    >>> sum_of_common_divisors(24, 24)\n    12\n    >>> sum_of_common_divisors(12, 3)\n    3\n    >>> sum_of_common_divisors(3, 12)\n    3\n    >>> sum_of_common_divisors(3, 3)\n    3\n    >>> sum_of_common_divisors(3, 3)\n    3\n    \"\"\"\n    common_divisors = [i for i in range(1, min(a, b) + 1) if a % i == 0 and b % i == 0]\n    return sum(common_divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    l1 = list(range(1, n1 + 1))\n    l2 = list(range(1, n2 + 1))\n    res = 0\n    for i in l1:\n        if n1 % i == 0:\n            for j in l2:\n                if n2 % i == 0:\n                    res += i\n    return res\n\n\nn1, n2 = 24, 36\nprint(sum_of_divisors(n1, n2))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    sum_of_common_divisors = 0\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_common_divisors += i\n    return sum_of_common_divisors\n\nprint(sum_of_common_divisors(12, 20))\nprint(sum_of_common_divisors(24, 48))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1: int, num2: int) -> int:\n    \"\"\"\n    Finds the sum of common divisors of two numbers.\n\n    >>> sum_of_common_divisors(252, 100)\n    26\n    >>> sum_of_common_divisors(10, 15)\n    1\n    >>> sum_of_common_divisors(2, 3)\n    1\n    >>> sum_of_common_divisors(12, 18)\n    6\n    \"\"\"\n    # finding the divisors of both numbers\n    num1_divisors = [x for x in range(1, num1 + 1) if num1 % x == 0]\n    num2_divisors = [x for x in range(1, num2 + 1) if num2 % x == 0]\n\n    # find the common divisors of both numbers\n    common_divisors = [x for x in num1_divisors if x in num2_divisors]\n\n    # find the sum of common divisors\n    sum_of_common_divisors = sum(common_divisors)\n\n    return sum_of_common_divisors\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    sum = 0\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_of_common_divisors(6, 9))\nprint(sum_of_common_divisors(20, 80))\nprint(sum_of_common_divisors(5, 12))\nprint(sum_of_common_divisors(12, 12))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def sum_divisors(a, b):\n    \"\"\"\n    >>> sum_divisors(6, 10)\n    12\n    >>> sum_divisors(10, 6)\n    12\n    >>> sum_divisors(10, 10)\n    10\n    >>> sum_divisors(10, 15)\n    15\n    >>> sum_divisors(15, 10)\n    15\n    >>> sum_divisors(10, 1)\n    0\n    >>> sum_divisors(1, 10)\n    0\n    >>> sum_divisors(10, 20)\n    20\n    >>> sum_divisors(20, 10)\n    20\n    \"\"\"\n    divisor = 1\n    sum = 0\n    while divisor <= a and divisor <= b:\n        if a % divisor == 0 and b % divisor == 0:\n            sum += divisor\n        divisor += 1\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    This function takes two integers and returns the sum of common divisors.\n\n    >>> sum_of_common_divisors(10, 20)\n    10\n\n    >>> sum_of_common_divisors(20, 20)\n    20\n\n    >>> sum_of_common_divisors(10, 12)\n    12\n\n    >>> sum_of_common_divisors(10, 15)\n    15\n\n    >>> sum_of_common_divisors(10, 17)\n    17\n    \"\"\"\n    if num1 > num2:\n        return sum(set(range(1, num2 + 1)) & set(range(1, num1 + 1)))\n    else:\n        return sum(set(range(1, num1 + 1)) & set(range(1, num2 + 1)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    Find the sum of common divisors of two numbers.\n\n    Parameters\n    ----------\n    num1 : int\n        First number.\n    num2 : int\n        Second number.\n\n    Returns\n    -------\n    int\n        Sum of common divisors of two numbers.\n\n    \"\"\"\n    sum = 0\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum += i\n    return sum\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = sum_of_common_divisors(test_input[0], test_input[1])\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\ntest_function(((52, 10), 38))\ntest_function(((24, 8), 24))\ntest_function(((12, 16), 48))\ntest_function(((12, 10), 24))\ntest_function(((34, 10), 44))\ntest_function(((52, 10), 52))\ntest_function(((34, 10), 34))\ntest_function(((34, 10), 10))\ntest_function(((12, 16), 12))\ntest_function(((12, 16), 16))\ntest_function(((12, 16), 24))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def sum_divisors(x, y):\n    x_divisors = [i for i in range(1, x + 1) if x % i == 0]\n    y_divisors = [i for i in range(1, y + 1) if y % i == 0]\n\n    sum_of_divisors = 0\n\n    for i in x_divisors:\n        if i in y_divisors:\n            sum_of_divisors += i\n\n    return sum_of_divisors\n\n\nprint(sum_divisors(2, 4))\nprint(sum_divisors(12, 23))\nprint(sum_divisors(4, 8))"
    },
    {
      "rank": 19,
      "score": 9.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.append(i)\n\n    return sum(divisors)\n\n\ndef main():\n    print(\"Sum of common divisors of 12 and 16 is: \" +\n          str(sum_common_divisors(12, 16)))\n    print(\"Sum of common divisors of 18 and 20 is: \" +\n          str(sum_common_divisors(18, 20)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 20,
      "score": 9.0,
      "candidate": "def sum_of_common_divisors(x, y):\n    return sum(set(range(1, min(x, y) + 1)) & set(range(1, max(x, y) + 1)))\n\n\nif __name__ == \"__main__\":\n    print(sum_of_common_divisors(12, 16))"
    },
    {
      "rank": 21,
      "score": 9.0,
      "candidate": "def sum_of_common_divisors(x, y):\n    divisors = set()\n    for i in range(1, min(x, y) + 1):\n        if x % i == 0 and y % i == 0:\n            divisors.add(i)\n\n    return sum(divisors)\n\n\nprint(sum_of_common_divisors(12, 18))"
    },
    {
      "rank": 22,
      "score": 9.0,
      "candidate": "def sum_of_common_divisors(a: int, b: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(4, 6)\n    6\n    >>> sum_of_common_divisors(4, 8)\n    4\n    >>> sum_of_common_divisors(4, 12)\n    8\n    \"\"\"\n    result = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            result += i\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    \"\"\"\n    >>> sum_of_common_divisors(10, 20)\n    30\n    >>> sum_of_common_divisors(100, 200)\n    300\n    \"\"\"\n    # initialize sum\n    sum_of_divisors = 0\n    # loop through all numbers from 1 to min(a, b)\n    for i in range(1, min(a, b) + 1):\n        # check if the numbers are divisible by i\n        if a % i == 0 and b % i == 0:\n            # add i to sum\n            sum_of_divisors += i\n    return sum_of_divisors\n\n\ndef main():\n    a = int(input(\"Enter a: \"))\n    b = int(input(\"Enter b: \"))\n    print(sum_of_common_divisors(a, b))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(n1, n2):\n    # get the divisors of n1 and n2\n    divisors1 = get_divisors(n1)\n    divisors2 = get_divisors(n2)\n\n    # find the common divisors\n    common_divisors = list(set(divisors1) & set(divisors2))\n\n    # sum up the common divisors\n    sum_divisors = sum(common_divisors)\n\n    return sum_divisors\n\n\ndef get_divisors(n):\n    # get the number of divisors\n    number_of_divisors = len([i for i in range(1, n+1) if n % i == 0])\n\n    # get the divisors\n    divisors = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n\n    return divisors"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    divisors = set()\n    for i in range(1, n1 + 1):\n        if n1 % i == 0 and n2 % i == 0:\n            divisors.add(i)\n    return sum(divisors)\n\n\nprint(sum_of_divisors(12, 24))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\nprint(sum_of_common_divisors(20, 12))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    divisors = []\n    for i in range(1, num1+1):\n        if num1%i == 0 and num2%i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nif __name__ == \"__main__\":\n    print(sum_common_divisors(12, 18))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    \"\"\"\n    Sum of the common divisors of two numbers\n    :param a: int\n    :param b: int\n    :return: int\n    \"\"\"\n    list_a = []\n    list_b = []\n    for i in range(1, a + 1):\n        if a % i == 0:\n            list_a.append(i)\n    for i in range(1, b + 1):\n        if b % i == 0:\n            list_b.append(i)\n    return sum(set(list_a) & set(list_b))\n\n\nprint(sum_of_common_divisors(15, 20))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    sum_of_divisors = 0\n    for i in range(1, num1 + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\n\nassert sum_common_divisors(12, 14) == 6, \"Test Failed\"\nassert sum_common_divisors(12, 26) == 12, \"Test Failed\"\nassert sum_common_divisors(10, 20) == 10, \"Test Failed\""
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors1 = find_divisors(num1)\n    divisors2 = find_divisors(num2)\n    sum_of_divisors = 0\n    for div1 in divisors1:\n        if div1 in divisors2:\n            sum_of_divisors += div1\n    return sum_of_divisors\n\n\ndef find_divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nif __name__ == \"__main__\":\n    print(sum_of_common_divisors(12, 14))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def sum_of_divisors(num1, num2):\n    divisors_num1 = []\n    for i in range(1, num1+1):\n        if num1 % i == 0:\n            divisors_num1.append(i)\n    divisors_num2 = []\n    for i in range(1, num2+1):\n        if num2 % i == 0:\n            divisors_num2.append(i)\n    sum_divisors = []\n    for i in divisors_num1:\n        if i in divisors_num2:\n            sum_divisors.append(i)\n    return sum(sum_divisors)\n\n\nprint(sum_of_divisors(12, 24))\nprint(sum_of_divisors(25, 40))\nprint(sum_of_divisors(12, 12))\nprint(sum_of_divisors(20, 20))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def common_divisors(a, b):\n    if a == 0 or b == 0:\n        return None\n    if a < b:\n        a, b = b, a\n    return sum([i for i in range(1, b + 1) if a % i == 0 and b % i == 0])"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a, b):\n    return sum([i for i in range(1, min(a, b) + 1) if a % i == 0 and b % i == 0])\n\n\ndef main():\n    print(\"The sum of the common divisors of 10 and 15 is: \" + str(sum_of_divisors(10, 15)))\n    print(\"The sum of the common divisors of 2 and 3 is: \" + str(sum_of_divisors(2, 3)))\n    print(\"The sum of the common divisors of 1 and 1 is: \" + str(sum_of_divisors(1, 1)))\n    print(\"The sum of the common divisors of 10 and 1 is: \" + str(sum_of_divisors(10, 1)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\n\nprint(sum_of_common_divisors(12, 16))\nprint(sum_of_common_divisors(24, 36))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a, b):\n    divisors_a = get_divisors(a)\n    divisors_b = get_divisors(b)\n    common_divisors = []\n    for div_a in divisors_a:\n        if div_a in divisors_b:\n            common_divisors.append(div_a)\n\n    return sum(common_divisors)\n\n\ndef get_divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\n\ndef main():\n    print(sum_of_divisors(2, 3))\n    print(sum_of_divisors(8, 24))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(n1, n2):\n    return sum([i for i in range(1, min(n1, n2) + 1) if n1 % i == 0 and n2 % i == 0])\n\n\n# Tests\ndef test(n1, n2, expected):\n    result = sum_of_common_divisors(n1, n2)\n    if result == expected:\n        print(\"Congratulations!\")\n    else:\n        print(\"Best Luck!\")\n\n\ntest(2, 12, 6)\ntest(8, 9, 7)\ntest(4, 16, 8)\ntest(16, 12, 8)\ntest(24, 36, 12)\ntest(4, 32, 12)"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(x, y):\n    \"\"\"\n    Return the sum of common divisors of two given numbers.\n\n    >>> sum_of_common_divisors(20, 10)\n    2\n    >>> sum_of_common_divisors(10, 15)\n    3\n    >>> sum_of_common_divisors(10, 12)\n    1\n    >>> sum_of_common_divisors(10, 13)\n    2\n    \"\"\"\n    if x < y:\n        x, y = y, x\n    sum_divisors = 0\n    for i in range(1, y + 1):\n        if x % i == 0 and y % i == 0:\n            sum_divisors += i\n    return sum_divisors\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    l1 = []\n    l2 = []\n    for i in range(1, num1 + 1):\n        if num1 % i == 0:\n            l1.append(i)\n\n    for i in range(1, num2 + 1):\n        if num2 % i == 0:\n            l2.append(i)\n\n    sum = 0\n    for i in l1:\n        if i in l2:\n            sum += i\n\n    return sum"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    return sum([i for i in range(1, min(num1, num2) + 1) if num1 % i == 0 and num2 % i == 0])\n\nprint(sum_common_divisors(10, 20))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    return sum(set(list(range(1, min(num1, num2) + 1))) & set(list(range(1, max(num1, num2) + 1))))\n\n\nprint(sum_of_common_divisors(12, 6))\nprint(sum_of_common_divisors(20, 10))\nprint(sum_of_common_divisors(24, 12))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors1 = find_divisors(num1)\n    divisors2 = find_divisors(num2)\n    common_divisors = list(set(divisors1).intersection(divisors2))\n    return sum(common_divisors)\n\n\ndef find_divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nprint(sum_of_common_divisors(6, 10))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    return sum([x for x in range(1, min(num1, num2) + 1) if num1 % x == 0 and num2 % x == 0])\n\n\nif __name__ == \"__main__\":\n    print(sum_of_common_divisors(12, 24))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a, b):\n    return sum([i for i in range(1, min(a, b) + 1) if a % i == 0 and b % i == 0])"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    \"\"\"Find the sum of common divisors of two given numbers.\"\"\"\n    divisors = set()\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.add(i)\n    return sum(divisors)\n\n\ndef main():\n    \"\"\"Print the sum of common divisors of 2 numbers.\"\"\"\n    print(\"Sum of common divisors of 2 numbers: %s\" %\n          sum_common_divisors(12, 14))  # 12 = 6 + 6, 14 = 7 + 7\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    def find_divisors(n):\n        divisors = []\n        for i in range(1, n+1):\n            if n % i == 0:\n                divisors.append(i)\n        return divisors\n    divisors_n1 = find_divisors(n1)\n    divisors_n2 = find_divisors(n2)\n    common_divisors = [divisor for divisor in divisors_n1 if divisor in divisors_n2]\n    return sum(common_divisors)\n\n\nprint(sum_of_divisors(240, 256))\nprint(sum_of_divisors(196, 37))\nprint(sum_of_divisors(240, 288))\nprint(sum_of_divisors(240, 240))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    sum_of_divisors = 0\n    for i in range(1, min(num1, num2)+1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\nprint(sum_of_common_divisors(12, 24))\nprint(sum_of_common_divisors(10, 20))\nprint(sum_of_common_divisors(20, 25))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    # Initialize result\n    result = 0\n    # Get the lower number\n    min_num = min(num1, num2)\n    # Get the higher number\n    max_num = max(num1, num2)\n    # Loop through the lower number\n    for i in range(1, min_num + 1):\n        # Check if the lower number is divisible by higher number\n        if min_num % i == 0 and max_num % i == 0:\n            # Add the divisor to result\n            result += i\n    return result"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def sum_common_divisors(a, b):\n    \"\"\"\n    Find the sum of common divisors of two given numbers.\n\n    Args:\n        a (int): Integer\n        b (int): Integer\n\n    Returns:\n        int: sum of common divisors of two given numbers.\n    \"\"\"\n\n    if a < b:\n        a, b = b, a\n\n    divisors = set()\n\n    for i in range(1, b+1):\n        if a % i == 0 and b % i == 0:\n            divisors.add(i)\n\n    return sum(divisors)\n\n\nif __name__ == '__main__':\n    print(sum_common_divisors(2, 10))\n    print(sum_common_divisors(10, 2))\n    print(sum_common_divisors(10, 10))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors = set()\n    for i in range(1, num1 + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.add(i)\n    return sum(divisors)\n\n\nprint(sum_of_common_divisors(12, 24))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def find_sum_of_common_divisors(number1, number2):\n    divisors = []\n    for i in range(1, number1+1):\n        if number1 % i == 0 and number2 % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(find_sum_of_common_divisors(12, 16))\nprint(find_sum_of_common_divisors(32, 24))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def common_divisors(a, b):\n    \"\"\"\n    >>> common_divisors(6, 9)\n    3\n    >>> common_divisors(6, 10)\n    2\n    >>> common_divisors(3, 5)\n    1\n    >>> common_divisors(3, 7)\n    1\n    \"\"\"\n\n    return sum([x for x in range(1, min(a, b) + 1) if a % x == 0 and b % x == 0])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(number_1: int, number_2: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(252, 100)\n    12\n    >>> sum_of_common_divisors(1, 100)\n    1\n    >>> sum_of_common_divisors(10, 100)\n    5\n    >>> sum_of_common_divisors(10, 1)\n    1\n    \"\"\"\n    sum_of_divisors: int = 0\n    for i in range(1, min(number_1, number_2) + 1):\n        if number_1 % i == 0 and number_2 % i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.append(i)\n\n    return sum(divisors)\n\n\nprint(sum_of_common_divisors(15, 20))\nprint(sum_of_common_divisors(25, 35))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    sum = 0\n    for i in range(1, min(n1, n2) + 1):\n        if n1 % i == 0 and n2 % i == 0:\n            sum += i\n    return sum\n\n\ndef main():\n    n1 = int(input(\"Enter n1: \"))\n    n2 = int(input(\"Enter n2: \"))\n    print(sum_of_divisors(n1, n2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(sum_of_common_divisors(24, 36))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    Find the sum of common divisors of two given numbers.\n\n    :param num1: int\n    :param num2: int\n    :return: int\n    \"\"\"\n    divisors = set()\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.add(i)\n    return sum(divisors)\n\n\nprint(sum_of_common_divisors(10, 20))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    common_divisors = []\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(x, y):\n    return sum(set(range(1, min(x, y) + 1)) & set(range(1, max(x, y) + 1)))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(n1, n2):\n    sum_of_divisors = 0\n    for i in range(1, n1+1):\n        if n1%i == 0 and n2%i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\n\nn1 = int(input(\"Enter first number: \"))\nn2 = int(input(\"Enter second number: \"))\nprint(sum_of_common_divisors(n1, n2))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    sum_of_divisors = 0\n    for i in range(1, min(n1, n2) + 1):\n        if n1 % i == 0 and n2 % i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\n\ndef main():\n    num1 = int(input(\"Enter the first number: \"))\n    num2 = int(input(\"Enter the second number: \"))\n    print(f\"Sum of common divisors of {num1} and {num2} is {sum_of_divisors(num1, num2)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors_num1 = []\n    divisors_num2 = []\n    sum_of_divisors = 0\n\n    for i in range(1, num1 + 1):\n        if num1 % i == 0:\n            divisors_num1.append(i)\n\n    for i in range(1, num2 + 1):\n        if num2 % i == 0:\n            divisors_num2.append(i)\n\n    for i in divisors_num1:\n        if i in divisors_num2:\n            sum_of_divisors += i\n\n    return sum_of_divisors\n\n\nprint(sum_of_common_divisors(12, 24))\nprint(sum_of_common_divisors(15, 21))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    Find the sum of common divisors of two given numbers.\n\n    :param num1: first number\n    :type num1: int\n    :param num2: second number\n    :type num2: int\n    :return: sum of common divisors\n    :rtype: int\n    \"\"\"\n    return sum([i for i in range(1, min(num1, num2) + 1) if num1 % i == 0 and num2 % i == 0])"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    if num1 <= 0 or num2 <= 0:\n        raise ValueError('Number should be greater than zero')\n\n    if num1 == num2:\n        return num1\n\n    divisors_num1 = get_divisors(num1)\n    divisors_num2 = get_divisors(num2)\n\n    sum_divisors = 0\n    for divisor in divisors_num1:\n        if divisor in divisors_num2:\n            sum_divisors += divisor\n\n    return sum_divisors\n\n\ndef get_divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    return sum([x for x in range(1, min(a, b) + 1) if a % x == 0 and b % x == 0])\n\n\ndef main():\n    print(sum_of_common_divisors(12, 20))\n    print(sum_of_common_divisors(15, 12))\n    print(sum_of_common_divisors(10, 10))\n    print(sum_of_common_divisors(15, 15))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def sum_of_divisors(num1, num2):\n    sum1 = 0\n    for i in range(1, num1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum1 += i\n    return sum1\n\n\nprint(sum_of_divisors(4, 12))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a: int, b: int) -> int:\n    \"\"\"\n    >>> sum_of_divisors(25, 20)\n    30\n    >>> sum_of_divisors(25, 40)\n    80\n    >>> sum_of_divisors(40, 25)\n    80\n    \"\"\"\n\n    def get_divisors(num: int) -> list:\n        \"\"\"\n        Returns a list of divisors of a number.\n        \"\"\"\n        divisors = []\n        for i in range(1, num + 1):\n            if num % i == 0:\n                divisors.append(i)\n        return divisors\n\n    divisors_a = get_divisors(a)\n    divisors_b = get_divisors(b)\n    common_divisors = [i for i in divisors_a if i in divisors_b]\n    return sum(common_divisors)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a, b):\n    \"\"\"\n    >>> sum_of_divisors(20, 10)\n    10\n    >>> sum_of_divisors(20, 15)\n    10\n    \"\"\"\n    return sum([x for x in range(1, min(a, b) + 1) if a % x == 0 and b % x == 0])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    num1_divisors = []\n    num2_divisors = []\n\n    for i in range(1, num1 + 1):\n        if num1 % i == 0:\n            num1_divisors.append(i)\n\n    for j in range(1, num2 + 1):\n        if num2 % j == 0:\n            num2_divisors.append(j)\n\n    common_divisors = []\n    for num1_div in num1_divisors:\n        if num1_div in num2_divisors:\n            common_divisors.append(num1_div)\n\n    return sum(common_divisors)\n\n\nprint(sum_of_common_divisors(12, 16))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def sum_common_divisors(number1, number2):\n    sum_divisors = 0\n    for i in range(1, min(number1, number2) + 1):\n        if number1 % i == 0 and number2 % i == 0:\n            sum_divisors += i\n\n    return sum_divisors\n\n\nprint(sum_common_divisors(10, 15))\nprint(sum_common_divisors(4, 12))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    divisors_1 = set()\n    divisors_2 = set()\n    for i in range(1, n1 + 1):\n        if n1 % i == 0:\n            divisors_1.add(i)\n    for i in range(1, n2 + 1):\n        if n2 % i == 0:\n            divisors_2.add(i)\n    return sum(divisors_1.intersection(divisors_2))\n\n\nprint(sum_of_divisors(12, 24))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    Calculate the sum of the common divisors of two given numbers.\n    :param num1:\n    :param num2:\n    :return:\n    \"\"\"\n    common_divisors = []\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\n\nprint(sum_of_common_divisors(6, 9))\nprint(sum_of_common_divisors(10, 12))\nprint(sum_of_common_divisors(12, 12))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1: int, num2: int) -> int:\n    \"\"\"\n    :param num1: int, first number\n    :param num2: int, second number\n    :return: int, sum of common divisors\n    \"\"\"\n    return sum(\n        [div for div in range(1, min(num1, num2) + 1) if num1 % div == 0 and num2 % div == 0]\n    )\n\n\ndef main():\n    \"\"\"\n    :return: void\n    \"\"\"\n    print(sum_of_common_divisors(12, 16))\n    print(sum_of_common_divisors(10, 15))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def common_divisor(a, b):\n    # get all divisors of a\n    divisors_a = []\n    for i in range(1, a + 1):\n        if a % i == 0:\n            divisors_a.append(i)\n\n    # get all divisors of b\n    divisors_b = []\n    for i in range(1, b + 1):\n        if b % i == 0:\n            divisors_b.append(i)\n\n    # find common divisors\n    common_divisors = []\n    for i in range(len(divisors_a)):\n        if divisors_a[i] in divisors_b:\n            common_divisors.append(divisors_a[i])\n\n    return sum(common_divisors)\n\n\nprint(common_divisor(12, 16))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def sum_divisors(num1, num2):\n    sum = 0\n    for i in range(1, num1+1):\n        if num1%i == 0 and num2%i == 0:\n            sum += i\n    return sum\n\nprint(sum_divisors(12, 18))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def sum_of_divisors(num1, num2):\n    return sum([i for i in range(1, min(num1, num2) + 1) if num1 % i == 0 and num2 % i == 0])\n\n\ndef main():\n    print(sum_of_divisors(12, 16))\n    print(sum_of_divisors(12, 25))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def sum_of_divisors(num1, num2):\n    divisors = set()\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.add(i)\n    return sum(divisors)\n\n\nprint(sum_of_divisors(25, 30))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    \"\"\"\n    num1: int\n    num2: int\n    return: int\n    \"\"\"\n    sum_of_divisors = 0\n    for i in range(1, num1 + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_divisors += i\n    return sum_of_divisors\n\nprint(sum_of_common_divisors(12, 24))\nprint(sum_of_common_divisors(25, 45))\nprint(sum_of_common_divisors(1, 1))\nprint(sum_of_common_divisors(1, 2))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    if a < b:\n        a, b = b, a\n    common_divisors = []\n    for i in range(1, a+1):\n        if a % i == 0 and b % i == 0:\n            common_divisors.append(i)\n    return sum(common_divisors)\n\n\nif __name__ == \"__main__\":\n    assert sum_of_common_divisors(10, 15) == 15"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors1 = get_divisors(num1)\n    divisors2 = get_divisors(num2)\n    return sum(list(divisors1.intersection(divisors2)))\n\n\ndef get_divisors(num):\n    divisors = set()\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.add(i)\n    return divisors\n\n\nif __name__ == \"__main__\":\n    print(sum_of_common_divisors(12, 20))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    return sum(set(range(1, min(num1, num2) + 1)) & set(range(1, num1)) & set(range(1, num2)))\n\n\nprint(sum_of_common_divisors(25, 10))\nprint(sum_of_common_divisors(15, 20))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    a_factors = set()\n    for i in range(1, a + 1):\n        if a % i == 0:\n            a_factors.add(i)\n    b_factors = set()\n    for i in range(1, b + 1):\n        if b % i == 0:\n            b_factors.add(i)\n    return sum(a_factors.intersection(b_factors))\n\n\nprint(sum_of_common_divisors(8, 12))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1: int, num2: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(6,10)\n    4\n    >>> sum_of_common_divisors(12,16)\n    4\n    >>> sum_of_common_divisors(12,17)\n    0\n    \"\"\"\n    sum_divisors = 0\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_divisors += i\n    return sum_divisors\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a, b):\n    sum_divisors = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum_divisors += i\n    return sum_divisors\n\nprint(sum_of_divisors(20, 10))\nprint(sum_of_divisors(3, 4))\nprint(sum_of_divisors(12, 15))\nprint(sum_of_divisors(15, 10))\nprint(sum_of_divisors(40, 20))\nprint(sum_of_divisors(10, 40))\nprint(sum_of_divisors(15, 10))\nprint(sum_of_divisors(100, 150))\nprint(sum_of_divisors(1000, 1500))\nprint(sum_of_divisors(10000, 15000))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def sum_common_divisors(num1, num2):\n    divisors = []\n    for i in range(1, num1+1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors.append(i)\n    return sum(divisors)\n\n\nprint(sum_common_divisors(12, 24))\nprint(sum_common_divisors(30, 18))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def sum_of_divisors(n1, n2):\n    sum = 0\n    for i in range(1, min(n1, n2) + 1):\n        if n1 % i == 0 and n2 % i == 0:\n            sum += i\n    return sum\n\n\nprint(sum_of_divisors(100, 200))\nprint(sum_of_divisors(15, 15))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    # A helper function to find the divisors of a number.\n    def divisors(n):\n        return set(\n            i for i in range(1, n + 1) if n % i == 0\n        )\n\n    return sum(divisors(a).intersection(divisors(b)))\n\n\nprint(sum_of_common_divisors(12, 16))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors1 = []\n    divisors2 = []\n    for i in range(1, num1 + 1):\n        if num1 % i == 0:\n            divisors1.append(i)\n    for i in range(1, num2 + 1):\n        if num2 % i == 0:\n            divisors2.append(i)\n    sum = 0\n    for j in divisors1:\n        if j in divisors2:\n            sum += j\n    return sum\n\n\nprint(sum_of_common_divisors(10, 15))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    if a < 1 or b < 1:\n        return 0\n\n    s = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            s += i\n\n    return s\n\nif __name__ == \"__main__\":\n    print(sum_of_common_divisors(2, 10))\n    print(sum_of_common_divisors(20, 100))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    sum_of_divisors = 0\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_divisors += i\n\n    return sum_of_divisors\n\n\nprint(sum_of_common_divisors(10, 20))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    divisors = 0\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            divisors += i\n    return divisors\n\n\nif __name__ == \"__main__\":\n    print(sum_of_common_divisors(12, 36))\n    print(sum_of_common_divisors(5, 12))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    # Get the list of common divisors of two numbers\n    list_of_common_divisors = [i for i in range(1, min(num1, num2) + 1) if num1 % i == 0 and num2 % i == 0]\n    # Sum the list of common divisors\n    sum_of_common_divisors = sum(list_of_common_divisors)\n    # Return the sum of common divisors\n    return sum_of_common_divisors\n\n\n# Tests\nprint(sum_of_common_divisors(20, 10))  # Should be 20\nprint(sum_of_common_divisors(1, 2))  # Should be 1\nprint(sum_of_common_divisors(2, 3))  # Should be 3\nprint(sum_of_common_divisors(12, 3))  # Should be 12\nprint(sum_of_common_divisors(12, 15))  # Should be 15\nprint(sum_of_common_divisors(15, 12))  # Should be 15\nprint(sum_of_common_divisors(100, 12))  # Should be 12"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(number_1, number_2):\n    \"\"\"\n    Finds the sum of common divisors of two given numbers\n\n    >>> sum_of_common_divisors(12, 10)\n    4\n    >>> sum_of_common_divisors(10, 15)\n    5\n    >>> sum_of_common_divisors(10, 20)\n    6\n    >>> sum_of_common_divisors(10, 10)\n    1\n    >>> sum_of_common_divisors(10, 1)\n    1\n    >>> sum_of_common_divisors(10, 0)\n    Traceback (most recent call last):\n      File \"/usr/lib/python3.5/doctest.py\", line 1330, in __run\n        compileflags, 1), test.globs)\n      File \"<doctest __main__.__test__.sum_of_common_divisors[4]>\", line 1, in <module>\n        sum_of_common_divisors(10, 0)\n      File \"solution.py\", line 16, in sum_of_common_divisors\n        raise ValueError('number_2 should be greater than zero')\n    ValueError: number_2 should be greater than zero\n    \"\"\"\n    if number_2 <= 0:\n        raise ValueError('number_2 should be greater than zero')\n    sum_of_common_divisors = 0\n    for i in range(1, number_1 + 1):\n        if number_1 % i == 0 and number_2 % i == 0:\n            sum_of_common_divisors += i\n    return sum_of_common_divisors\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def sum_of_divisors(a: int, b: int) -> int:\n    \"\"\"\n    This function takes two numbers and return the sum of common divisors\n\n    >>> sum_of_divisors(20, 10)\n    10\n    >>> sum_of_divisors(10, 20)\n    10\n    >>> sum_of_divisors(20, 20)\n    20\n    >>> sum_of_divisors(1, 20)\n    1\n    >>> sum_of_divisors(10, 1)\n    1\n    >>> sum_of_divisors(0, 20)\n    0\n    >>> sum_of_divisors(20, 0)\n    0\n    >>> sum_of_divisors(0, 0)\n    0\n    \"\"\"\n    if a < 1 or b < 1:\n        return 0\n    result = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            result += i\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(num1, num2):\n    # calculate sum of divisors of num1\n    s1 = sum(get_divisors(num1))\n    # calculate sum of divisors of num2\n    s2 = sum(get_divisors(num2))\n    return s1 + s2\n\ndef get_divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(sum_of_common_divisors(12, 16))\nprint(sum_of_common_divisors(5, 12))\nprint(sum_of_common_divisors(10, 10))"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    sum = 0\n    for i in range(1, min(a, b) + 1):\n        if a % i == 0 and b % i == 0:\n            sum += i\n    return sum\n\n\ndef main():\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(sum_of_common_divisors(a, b))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(x, y):\n    return sum(set(list(range(1, min(x, y) + 1))) & set(list(range(1, max(x, y) + 1))))\n\n\nprint(sum_of_common_divisors(15, 25))\nprint(sum_of_common_divisors(20, 25))\nprint(sum_of_common_divisors(100, 150))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(x: int, y: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(12, 15)\n    3\n    >>> sum_of_common_divisors(20, 10)\n    0\n    >>> sum_of_common_divisors(100, 200)\n    10\n    >>> sum_of_common_divisors(100, 200)\n    10\n    \"\"\"\n    return sum(\n        [\n            i\n            for i in range(1, min(x, y) + 1)\n            if x % i == 0 and y % i == 0\n        ]\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 8.0,
      "candidate": "def sum_of_common_divisors(a, b):\n    if a == 0 or b == 0:\n        return 0\n    else:\n        divisors = set()\n        for i in range(1, min(a, b) + 1):\n            if a % i == 0 and b % i == 0:\n                divisors.add(i)\n        return sum(divisors)"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def sum_of_common_divisors(num1: int, num2: int) -> int:\n    \"\"\"\n    >>> sum_of_common_divisors(4, 6)\n    12\n    >>> sum_of_common_divisors(15, 17)\n    42\n    >>> sum_of_common_divisors(25, 30)\n    90\n    >>> sum_of_common_divisors(27, 42)\n    108\n    >>> sum_of_common_divisors(12, 16)\n    12\n    >>> sum_of_common_divisors(4, 2)\n    0\n    >>> sum_of_common_divisors(2, 3)\n    0\n    >>> sum_of_common_divisors(1, 2)\n    1\n    >>> sum_of_common_divisors(1, 1)\n    1\n    >>> sum_of_common_divisors(1, 3)\n    0\n    \"\"\"\n    sum_of_divisors: int = 0\n\n    for i in range(1, min(num1, num2) + 1):\n        if num1 % i == 0 and num2 % i == 0:\n            sum_of_divisors += i\n\n    return sum_of_divisors\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def sum_of_common_divisors(x, y):\n    return sum(set(divisors(x)) & set(divisors(y)))\n\ndef divisors(n):\n    return [i for i in range(1, n + 1) if n % i == 0]\n\nprint(sum_of_common_divisors(20, 10))\nprint(sum_of_common_divisors(100, 50))\nprint(sum_of_common_divisors(36, 96))\nprint(sum_of_common_divisors(37, 96))\nprint(sum_of_common_divisors(37, 97))\n\n\"\"\"\nWrite a python function to find the sum of common divisors of two given numbers.\n\"\"\"\ndef sum_of_common_divisors(x, y):\n    return sum(set(divisors(x)) & set(divisors(y)))\n\ndef divisors(n):\n    return [i for i in range(1, n + 1) if n % i == 0]\n\nprint(sum_of_common_divisors(20, 10))\nprint(sum_of_common_divisors(100, 50))\nprint(sum_of_common_divisors(36, 96))\nprint(sum_of_common_divisors(37, 96))\nprint(sum_of_common_divisors(37, 97))\n\n\"\"\"\nWrite a python function to find the sum of common divisors of two given numbers.\n\"\"\"\ndef sum_of_common_divisors(x, y):\n    return sum(set(divisors(x)) & set(divisors(y)))\n\ndef divisors(n):\n    return [i for i in range(1, n + 1) if n % i == 0]\n\nprint(sum_of_common_divisors(20, 10))\nprint(sum_of_common_divisors(100, 50))\nprint(sum"
    }
  ]
}