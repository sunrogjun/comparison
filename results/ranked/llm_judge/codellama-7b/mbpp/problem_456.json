{
  "timestamp": "2025-09-15T01:45:30.179078",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 456,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def dec_to_oct(num):\n    octal = \"\"\n    while num > 0:\n        remainder = num % 8\n        octal = str(remainder) + octal\n        num = int(num / 8)\n    return octal\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    print(dec_to_oct(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def convert_decimal_to_octal(decimal_number):\n    \"\"\"\n    >>> convert_decimal_to_octal(1234)\n    '2322'\n    >>> convert_decimal_to_octal(-1234)\n    '-2322'\n    \"\"\"\n    if decimal_number < 0:\n        return '-' + convert_decimal_to_octal(-decimal_number)\n\n    octal_number = \"\"\n\n    while decimal_number > 0:\n        octal_number += str(decimal_number % 8)\n        decimal_number = decimal_number // 8\n\n    return octal_number[::-1]\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def decimal_to_octal(decimal_number):\n    octal_number = 0\n    counter = 0\n    while decimal_number > 0:\n        remainder = decimal_number % 8\n        octal_number += remainder * (10 ** counter)\n        decimal_number //= 8\n        counter += 1\n    return octal_number\n\n\ndef main():\n    decimal_number = 34\n    octal_number = decimal_to_octal(decimal_number)\n    print(octal_number)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def octal(num):\n    octal = ''\n    while num > 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\n\nprint(octal(8))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def to_octal(decimal):\n    octal = \"\"\n    while decimal > 0:\n        octal += str(decimal % 8)\n        decimal //= 8\n    return octal[::-1]\n\n\ndef main():\n    value = int(input(\"Enter a decimal value: \"))\n    print(f\"Octal Value: {to_octal(value)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def DecimalToOctal(decimal):\n    octal = 0\n    i = 0\n    while decimal > 0:\n        octal = octal + (decimal % 8) * (10 ** i)\n        decimal = decimal // 8\n        i += 1\n\n    return octal\n\nif __name__ == \"__main__\":\n    dec = int(input(\"Enter the decimal number: \"))\n    print(\"Octal number:\",DecimalToOctal(dec))\n\n\"\"\"\nTime Complexity: O(n), n is the number of digits in the number\nSpace Complexity: O(1)\n\nSAMPLE INPUT AND OUTPUT\nSAMPLE I\nEnter the decimal number: 150\nOctal number: 204\n\"\"\""
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def octal_converter(n):\n    octal_number = ''\n    while n > 0:\n        octal_number += str(n%8)\n        n = n//8\n    return octal_number[::-1]\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(octal_converter(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def decToOct(n):\n    octal = \"\"\n\n    while n > 0:\n        octal += str(n%8)\n        n = n//8\n\n    return octal[::-1]\n\nprint(decToOct(10))\nprint(decToOct(11))\nprint(decToOct(12))\nprint(decToOct(13))\nprint(decToOct(14))\nprint(decToOct(15))\nprint(decToOct(16))\nprint(decToOct(17))\nprint(decToOct(18))\nprint(decToOct(19))\nprint(decToOct(20))\nprint(decToOct(21))\nprint(decToOct(22))\nprint(decToOct(23))\nprint(decToOct(24))\nprint(decToOct(25))\nprint(decToOct(26))\nprint(decToOct(27))\nprint(decToOct(28))\nprint(decToOct(29))\nprint(decToOct(30))\nprint(decToOct(31))\nprint(decToOct(32))\nprint(decToOct(33))\nprint(decToOct(34))\nprint(decToOct(35))\nprint(decToOct(36))\nprint(decToOct(37))\nprint(decToOct(38))\nprint(decToOct(39))\nprint(decToOct(40))\nprint(decToOct(41))\nprint(decToOct(42))\nprint(decToOct(43))\nprint(decToOct(44))\nprint(decToOct(45))\nprint(decToOct(46))\nprint(decToOct(47))\nprint(decToOct(48))\nprint(decToOct(49))\nprint(decToOct(50))\nprint(decToOct(51))\nprint(decToOct(52))\nprint(decToOct(53))\nprint(decToOct(54))\nprint(decToOct(55"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def decimal_to_octal(n):\n    result = \"\"\n    while n > 0:\n        result = str(n % 8) + result\n        n = n // 8\n    return result\n\n\ndef main():\n    n = int(input(\"Enter a decimal number: \"))\n    print(\"Octal value of \" + str(n) + \" is: \" + str(decimal_to_octal(n)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def dec_to_oct(dec):\n    return oct(dec)\n\n\ndef main():\n    value = int(input(\"Enter a number: \"))\n    print(dec_to_oct(value))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def dec_to_oct(dec):\n    octal = \"\"\n    while dec > 0:\n        octal += str(dec % 8)\n        dec = int(dec / 8)\n    return octal[::-1]\n\n\ndef main():\n    num = int(input(\"Enter a decimal number: \"))\n    print(dec_to_oct(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def decimal_to_octal(num):\n    octal_number = 0\n    count = 0\n    while num > 0:\n        rem = num % 8\n        octal_number = octal_number + (rem * 10 ** count)\n        count += 1\n        num = int(num / 8)\n    return octal_number\n\n\ndef main():\n    val1 = int(input(\"Enter the decimal number: \"))\n    print(\"Decimal number to octal number is:\", decimal_to_octal(val1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def to_octal(decimal_num):\n    octal_num = \"\"\n    while decimal_num > 0:\n        remainder = decimal_num % 8\n        decimal_num = decimal_num // 8\n        octal_num = str(remainder) + octal_num\n    return octal_num\n\n\ndef main():\n    decimal_num = int(input(\"Enter a decimal number: \"))\n    octal_num = to_octal(decimal_num)\n    print(f\"Decimal number {decimal_num} is octal number {octal_num}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def dec_to_oct(num):\n    octal = \"\"\n    while num > 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\n\ndef dec_to_oct_2(num):\n    octal = \"\"\n    while num != 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\n\ndef main():\n    val1 = int(input(\"Enter the decimal number: \"))\n    octal1 = dec_to_oct(val1)\n    octal2 = dec_to_oct_2(val1)\n    print(octal1)\n    print(octal2)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def dec_to_oct(decimal_number):\n    octal_number = 0\n\n    while decimal_number > 0:\n        octal_number = octal_number * 10 + decimal_number % 8\n        decimal_number = decimal_number // 8\n\n    return octal_number\n\n\ndef main():\n    val1 = dec_to_oct(46)\n    val2 = dec_to_oct(12)\n    val3 = dec_to_oct(21)\n    val4 = dec_to_oct(24)\n\n    print(val1)\n    print(val2)\n    print(val3)\n    print(val4)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def dec_to_oct(n):\n    octal = \"\"\n    while n > 0:\n        octal += str(n % 8)\n        n = n // 8\n    return octal[::-1]\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \" + dec_to_oct(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def decimal_to_octal(decimal):\n    octal = 0\n    while decimal > 0:\n        octal = octal * 10 + decimal % 8\n        decimal //= 8\n    return octal\n\n\ndef main():\n    value = int(input(\"Enter an integer: \"))\n    print(\"Octal Value: \" + str(decimal_to_octal(value)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def dec_to_oct(decimal):\n    octal = 0\n    while decimal != 0:\n        octal += (decimal % 8) * (10 ** (len(str(decimal)) - 1))\n        decimal = decimal // 8\n    return octal\n\n\ndef main():\n    value = int(input(\"Enter a decimal value: \"))\n    print(dec_to_oct(value))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def dec_to_octal(decimal):\n    octal = 0\n    while decimal != 0:\n        octal = octal * 10 + decimal % 8\n        decimal = int(decimal / 8)\n    return octal\n\n\ndef main():\n    value = int(input(\"Enter a decimal value: \"))\n    print(\"Octal value is:\")\n    print(dec_to_octal(value))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def dec_to_octal(decimal_number):\n    octal = 0\n    while decimal_number != 0:\n        octal = octal * 10 + decimal_number % 8\n        decimal_number = decimal_number // 8\n    return octal\n\n\ndef main():\n    value = int(input(\"Enter a decimal number: \"))\n    print(\"Octal equivalent is: \", dec_to_octal(value))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def decimal_to_octal(n):\n    octal_num = \"\"\n    while n > 0:\n        octal_num += str(n % 8)\n        n = int(n / 8)\n    return octal_num[::-1]\n\n\ndef main():\n    val1 = int(input(\"Enter the decimal number: \"))\n    ans = decimal_to_octal(val1)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def convert_to_octal(decimal):\n    octal = 0\n    i = 0\n    while decimal > 0:\n        rem = decimal % 8\n        octal = octal + (rem * (10 ** i))\n        decimal = decimal // 8\n        i += 1\n\n    return octal\n\n\nprint(convert_to_octal(100))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def convert_to_octal(decimal):\n    octal = ''\n    while decimal != 0:\n        octal += str(decimal % 8)\n        decimal = decimal // 8\n    return octal[::-1]\n\nprint(convert_to_octal(123))\nprint(convert_to_octal(45))\nprint(convert_to_octal(12345))\nprint(convert_to_octal(7))\nprint(convert_to_octal(10))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def convert_to_octal(num):\n    octal = \"\"\n    while num != 0:\n        octal = str(num % 8) + octal\n        num = num // 8\n    return octal\n\n\ndef main():\n    val = int(input(\"Enter an integer: \"))\n    print(\"Octal number: \" + convert_to_octal(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def octal(num):\n    octal_num = 0\n    count = 0\n    while num > 0:\n        remainder = num % 8\n        octal_num = octal_num + (remainder * pow(10, count))\n        count = count + 1\n        num = int(num / 8)\n    return octal_num\n\nprint(octal(40))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def decimalToOctal(decimal_number):\n    octal_number = \"\"\n\n    # 0 can't be converted to octal\n    if decimal_number == 0:\n        return \"0\"\n\n    while decimal_number != 0:\n        octal_number += str(decimal_number % 8)\n        decimal_number = int(decimal_number / 8)\n\n    return octal_number[::-1]\n\n\ndef main():\n    val1 = int(input(\"Enter decimal number: \"))\n    octal_number = decimalToOctal(val1)\n    print(\"Octal number is: \", octal_number)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def convert_to_octal(decimal):\n    octal = 0\n    counter = 0\n    while decimal > 0:\n        octal += (decimal % 8) * (10 ** counter)\n        decimal = decimal // 8\n        counter += 1\n    return octal\n\n\ndef main():\n    decimal = int(input(\"Enter a decimal number: \"))\n    octal = convert_to_octal(decimal)\n    print(octal)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def decimal_to_octal(num):\n    octal = 0\n    while num > 0:\n        octal = octal * 10 + num % 8\n        num = num // 8\n    return octal\n\n\ndef main():\n    num = int(input(\"Enter the decimal number: \"))\n    print(decimal_to_octal(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 29,
      "score": 9.0,
      "candidate": "def dec_to_oct(n):\n    octal = ''\n    while n > 0:\n        octal += str(n % 8)\n        n = n // 8\n    return octal[::-1]\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(\"Octal number: \" + dec_to_oct(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 30,
      "score": 9.0,
      "candidate": "def dec_to_oct(decimal):\n    octal = 0\n    index = 0\n    while decimal > 0:\n        rem = decimal % 8\n        octal = octal + (rem * 10 ** index)\n        decimal = decimal // 8\n        index += 1\n    return octal\n\n\ndef main():\n    decimal = int(input(\"Enter the decimal number: \"))\n    octal = dec_to_oct(decimal)\n    print(\"Octal number:\", octal)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 31,
      "score": 9.0,
      "candidate": "def decimalToOctal(num):\n    octal = \"\"\n    while num > 0:\n        octal += str(num % 8)\n        num = int(num / 8)\n    return octal[::-1]\n\ndef main():\n    num = int(input(\"Enter decimal number: \"))\n    print(\"Octal number: \" + decimalToOctal(num))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 32,
      "score": 9.0,
      "candidate": "def dec_to_oct(dec_num):\n    oct_num = 0\n    while dec_num != 0:\n        oct_num = oct_num * 8 + dec_num % 8\n        dec_num = dec_num // 8\n    return oct_num\n\n\ndef main():\n    dec_num = int(input(\"Enter the decimal number: \"))\n    print(\"Octal number: \", dec_to_oct(dec_num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 33,
      "score": 9.0,
      "candidate": "def convert_to_octal(decimal_number):\n    octal_number = 0\n    while decimal_number > 0:\n        octal_number = octal_number * 10 + decimal_number % 8\n        decimal_number = decimal_number // 8\n    return octal_number\n\ndecimal_number = 36\nprint(\"Decimal Number:\", decimal_number)\nprint(\"Octal Number:\", convert_to_octal(decimal_number))"
    },
    {
      "rank": 34,
      "score": 9.0,
      "candidate": "def octal_number(decimal):\n    octal_number = \"\"\n    while decimal > 0:\n        octal_number = str(decimal % 8) + octal_number\n        decimal //= 8\n    return octal_number\n\n\ndef main():\n    val1 = int(input(\"Enter a decimal number: \"))\n    octal_num = octal_number(val1)\n    print(\"Octal number is:\", octal_num)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 35,
      "score": 9.0,
      "candidate": "def octal(n: int):\n    octal_num = 0\n    while n > 0:\n        octal_num += (n % 8) * 10 ** (len(str(n)) - 1)\n        n //= 8\n    return octal_num\n\n\ndef octal2(n: int):\n    return int(str(oct(n))[2:])\n\n\ndef octal3(n: int):\n    octal_num = 0\n    while n > 0:\n        octal_num += (n % 8) * 10 ** (len(str(n)) - 1)\n        n //= 8\n    return octal_num\n\n\ndef octal4(n: int):\n    octal_num = 0\n    while n > 0:\n        octal_num += (n % 8) * 10 ** (len(str(n)) - 1)\n        n //= 8\n    return octal_num\n\n\nif __name__ == \"__main__\":\n    print(octal(100))\n    print(octal2(100))\n    print(octal3(100))\n    print(octal4(100))"
    },
    {
      "rank": 36,
      "score": 9.0,
      "candidate": "# Decimal to octal\ndef deci_to_octal(num):\n    octal = ''\n\n    while num > 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\n\n# Octal to decimal\ndef octal_to_deci(num):\n    deci = 0\n    for i in range(len(num)):\n        deci += (int(num[i]) * 8 ** i)\n    return deci\n\n\ndef main():\n    decimal_number = int(input(\"Enter a decimal number: \"))\n    octal_number = deci_to_octal(decimal_number)\n    print(\"Octal number: \", octal_number)\n    decimal_number_2 = int(input(\"Enter another decimal number: \"))\n    octal_number_2 = octal_to_deci(decimal_number_2)\n    print(\"Octal number: \", octal_number_2)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 37,
      "score": 9.0,
      "candidate": "def octal_number(dec_num):\n    octal = \"\"\n    while dec_num > 0:\n        rem = dec_num % 8\n        octal += str(rem)\n        dec_num = dec_num // 8\n    return octal[::-1] or \"0\"\n\n\ndec_num = int(input(\"Enter a decimal number: \"))\noctal = octal_number(dec_num)\nprint(octal)"
    },
    {
      "rank": 38,
      "score": 9.0,
      "candidate": "def decimalToOctal(num):\n    if num < 0:\n        return None\n    octal = 0\n    while num != 0:\n        octal = octal * 10 + num % 8\n        num //= 8\n    return octal"
    },
    {
      "rank": 39,
      "score": 9.0,
      "candidate": "def octal(n):\n    octal_num = \"\"\n    while n > 0:\n        octal_num += str(n % 8)\n        n = n // 8\n    return octal_num[::-1]\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \", octal(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 40,
      "score": 9.0,
      "candidate": "def octal(num):\n    octal_number = \"\"\n    while num > 0:\n        octal_number += str(num % 8)\n        num = num // 8\n    return octal_number[::-1]\n\n\ndef main():\n    num = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \", octal(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def decimalToOctal(dec_num):\n    oct_num = 0\n    while dec_num != 0:\n        oct_num = oct_num * 10 + dec_num % 8\n        dec_num //= 8\n    return oct_num\n\nprint(decimalToOctal(56))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def octal_converter(decimal):\n    octal_string = \"\"\n    while decimal > 0:\n        octal_string += str(decimal%8)\n        decimal = decimal//8\n    return octal_string[::-1]\n\nif __name__ == \"__main__\":\n    print(octal_converter(34))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def convert_to_octal(num: int) -> str:\n    \"\"\"Convert decimal number to octal number.\n\n    Args:\n        num (int): decimal number\n\n    Returns:\n        str: octal number\n    \"\"\"\n    octal_num = 0\n    octal_string = \"\"\n    while num > 0:\n        octal_num += (num % 8) * (10 ** len(octal_string))\n        num //= 8\n        octal_string += str(octal_num)\n        octal_num = 0\n    return octal_string\n\n\nif __name__ == \"__main__\":\n    print(convert_to_octal(24))\n    print(convert_to_octal(100))\n    print(convert_to_octal(1024))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def dec_to_oct(decimal):\n    octal = 0\n    i = 0\n    while decimal != 0:\n        octal += (decimal % 8) * (10 ** i)\n        decimal = int(decimal / 8)\n        i += 1\n    return octal\n\n\ndef main():\n    value = int(input(\"Enter a decimal number: \"))\n    octal = dec_to_oct(value)\n    print(octal)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def dec_oct(n):\n    oct_num = \"\"\n    while n > 0:\n        oct_num += str(n % 8)\n        n = int(n / 8)\n    return oct_num[::-1]\n\n\nprint(dec_oct(20))\nprint(dec_oct(40))\nprint(dec_oct(100))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def convert_to_octal(number):\n    octal_number = \"\"\n    while number > 0:\n        octal_number += str(number % 8)\n        number = number // 8\n    return octal_number[::-1]\n\ndef main():\n    number = int(input(\"Enter the decimal number: \"))\n    print(\"Octal number: \", convert_to_octal(number))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def dec_to_oct(num):\n    octal = \"\"\n    while num > 0:\n        octal += str(num % 8)\n        num //= 8\n    return octal[::-1] or \"0\"\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    ans = dec_to_oct(val)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def octal_number(num):\n    octal = 0\n    while num > 0:\n        octal = octal * 10 + num % 8\n        num //= 8\n    return octal\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    ans = octal_number(val)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def octal(number):\n    return oct(number)\n\n\ndef main():\n    x = int(input(\"Enter the number: \"))\n    print(octal(x))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def octal(decimal):\n    octal = \"\"\n    while decimal > 0:\n        octal = str(decimal % 8) + octal\n        decimal = decimal // 8\n    return octal\n\ndef main():\n    decimal = int(input(\"Enter a decimal number: \"))\n    print(octal(decimal))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def decimal_to_octal(n):\n    octal = 0\n    while n != 0:\n        octal = octal * 10 + n % 8\n        n //= 8\n    return octal\n\n\nprint(decimal_to_octal(100))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def dec_to_oct(dec):\n    octal = 0\n    while dec > 0:\n        octal = octal*10 + dec%8\n        dec //= 8\n    return octal\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \", dec_to_oct(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def octal_convertor(num: int) -> str:\n    \"\"\"\n    :param num: decimal number\n    :return: octal number\n    >>> octal_convertor(10)\n    '12'\n    >>> octal_convertor(13)\n    '15'\n    >>> octal_convertor(21)\n    '25'\n    >>> octal_convertor(17)\n    '21'\n    >>> octal_convertor(22)\n    '26'\n    \"\"\"\n    return oct(num)[2:]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def decimal_to_octal(number):\n    return int(oct(number)[2:])\n\n\nprint(decimal_to_octal(10))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def decimalToOctal(num):\n    octal = \"\"\n    while num > 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\n\nprint(decimalToOctal(36))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def dec_to_oct(num):\n    octal_num = 0\n    index = 1\n    while num > 0:\n        reminder = num % 8\n        octal_num += reminder * index\n        num = num // 8\n        index *= 10\n    return octal_num\n\nprint(dec_to_oct(66))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def dec_to_octal(dec):\n    octal = \"\"\n    while dec > 0:\n        octal += str(dec % 8)\n        dec = int(dec / 8)\n    return octal[::-1]\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    print(\"Octal Value: \" + dec_to_octal(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def dec_to_oct(dec):\n    octal = \"\"\n    while dec > 0:\n        octal += str(dec % 8)\n        dec = int(dec / 8)\n    return octal[::-1]\n\n\ndef main():\n    dec = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \" + dec_to_oct(dec))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def to_octal(decimal):\n    octal = 0\n    counter = 0\n    while decimal > 0:\n        octal += (decimal % 8) * (10 ** counter)\n        counter += 1\n        decimal //= 8\n    return octal\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \", to_octal(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def convert_decimal_to_octal(number):\n    octal = 0\n    while number > 0:\n        octal = octal * 10 + number % 8\n        number = number // 8\n\n    return octal\n\n\ndef main():\n    number = int(input(\"Enter a number: \"))\n    octal = convert_decimal_to_octal(number)\n    print(\"The octal number is: \", octal)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def convert_to_octal(n):\n    if n == 0:\n        return 0\n    octal_num = 0\n    while n > 0:\n        octal_num = octal_num * 10 + n % 8\n        n = n // 8\n    return octal_num\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    if val < 0:\n        print(\"Decimal number must be positive. Try again!\")\n    else:\n        print(f\"Octal number is: {convert_to_octal(val)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def decimal_to_octal(decimal):\n    octal = \"\"\n    while decimal > 0:\n        octal += str(decimal % 8)\n        decimal //= 8\n    return octal[::-1]\n\n\ndef main():\n    decimal = 123\n    octal = decimal_to_octal(decimal)\n    print(octal)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def to_octal(num):\n    octal_num = ''\n    while num != 0:\n        octal_num = str(num % 8) + octal_num\n        num = num // 8\n    return octal_num\n\n\ndef main():\n    num = int(input(\"Enter number: \"))\n    print(\"Octal Number: \" + to_octal(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def to_octal(dec_num):\n    octal_num = \"\"\n    while dec_num > 0:\n        octal_num += str(dec_num % 8)\n        dec_num = dec_num // 8\n\n    return octal_num[::-1]\n\n\nprint(to_octal(234))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def decimal_to_octal(decimal_number):\n    octal_number = \"\"\n    while decimal_number > 0:\n        octal_number += str(decimal_number % 8)\n        decimal_number = decimal_number // 8\n    return octal_number[::-1] or \"0\"\n\n\ndef main():\n    value = 123\n    ans = decimal_to_octal(value)\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def decToOct(num):\n    octal = ''\n    while num != 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\ndef decToOct2(num):\n    octal = ''\n    while num != 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1]\n\nprint(decToOct(56))\nprint(decToOct2(56))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def octal(num):\n    octal_num = 0\n    while num > 0:\n        octal_num = octal_num * 10 + num % 8\n        num = int(num / 8)\n    return octal_num\n\n\nprint(octal(123))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def DecimalToOctal(dec_num):\n    octal_num = 0\n    while dec_num != 0:\n        octal_num = octal_num * 10 + dec_num % 8\n        dec_num = dec_num // 8\n    return octal_num\n\ndec_num = int(input(\"Enter a decimal number: \"))\nprint(DecimalToOctal(dec_num))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def octal(decimal):\n\n    octal_number = 0\n\n    while decimal != 0:\n        octal_number = octal_number * 10 + decimal % 8\n        decimal //= 8\n\n    return octal_number\n\n\ndec = int(input(\"Enter a decimal number: \"))\noct = octal(dec)\nprint(f\"The octal number is {oct}\")"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def octal_number(number):\n    octal = \"\"\n    while number > 0:\n        octal += str(number % 8)\n        number = number // 8\n    return octal[::-1]\n\n\ndef main():\n    number = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \", octal_number(number))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def octal_convertor(num):\n    octal_num = ''\n    while num > 0:\n        octal_num += str(num % 8)\n        num = num // 8\n    return octal_num[::-1]\n\ndef main():\n    num = int(input(\"Enter the decimal number: \"))\n    octal_num = octal_convertor(num)\n    print(f\"Octal number: {octal_num}\")\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def convert_decimal_to_octal(num):\n    octal = 0\n    counter = 0\n    while num!=0:\n        octal += (num%8)*(10**counter)\n        num = num//8\n        counter += 1\n    return octal\n\nprint(convert_decimal_to_octal(1234))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def dec_oct(num):\n    octal = \"\"\n    while num != 0:\n        octal += str(num % 8)\n        num //= 8\n    return octal[::-1] or '0'\n\n\nprint(dec_oct(10))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def decToOct(num):\n    octal = \"\"\n\n    while num != 0:\n        octal += str(num % 8)\n        num = int(num / 8)\n\n    return octal[::-1]\n\n\ndef main():\n    num = int(input(\"Please enter a decimal number: \"))\n    print(\"Octal number: \" + decToOct(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def dec_to_oct(num: int) -> int:\n    \"\"\"\n    :param num: decimal number\n    :return: octal number\n    \"\"\"\n    return int(oct(num)[2:])\n\n\nif __name__ == \"__main__\":\n    print(dec_to_oct(34))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def octal(num):\n    \"\"\"\n    This function takes decimal number as argument and returns octal number as str type.\n    >>> octal(10)\n    '12'\n    >>> octal(15)\n    '17'\n    >>> octal(23)\n    '25'\n    >>> octal(35)\n    '45'\n    >>> octal(100)\n    '144'\n    >>> octal(234)\n    '1066'\n    >>> octal(499)\n    '1163'\n    \"\"\"\n    oct_num = ''\n    while num > 0:\n        oct_num += str(num % 8)\n        num //= 8\n    return oct_num[::-1]\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def octal(num):\n    octal_num = 0\n    while num > 0:\n        octal_num = octal_num * 10 + (num & 1)\n        num = num >> 1\n    return octal_num\n\n\nprint(octal(100))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "# Decimal to octal\ndef octal_conv(num):\n    octal_str = \"\"\n    while num > 0:\n        remainder = num % 8\n        num = num // 8\n        octal_str = str(remainder) + octal_str\n    return octal_str\n\n\ndef main():\n    val = int(input(\"Enter a decimal number: \"))\n    print(octal_conv(val))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def octal(num):\n    octal_num = ''\n    while num > 0:\n        octal_num += str(num % 8)\n        num = num // 8\n    return octal_num[::-1]\n\nprint(octal(123))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def decToOct(n):\n    octal = []\n    while n > 0:\n        octal.insert(0, str(n%8))\n        n = n//8\n    return int(''.join(octal))\n\nprint(decToOct(40))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def decimal_to_octal(number):\n    octal = \"\"\n    while number > 0:\n        octal += str(number % 8)\n        number = number // 8\n\n    return octal[::-1]\n\n\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(123))\nprint(decimal_to_octal(5678))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def dec_to_octal(num):\n    octal_num = 0\n    while num > 0:\n        octal_num = octal_num * 10 + num % 8\n        num //= 8\n    return octal_num\n\n\ndef main():\n    num = int(input(\"Enter a decimal number: \"))\n    octal_num = dec_to_octal(num)\n    print(octal_num)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def octal(decimal):\n    \"\"\"\n    Takes decimal number as argument and returns its octal number\n    \"\"\"\n    octal_num = 0\n    count = 0\n    while decimal > 0:\n        octal_num += (decimal % 8) * (10 ** count)\n        decimal //= 8\n        count += 1\n    return octal_num\n\nprint(octal(10))\nprint(octal(5))\nprint(octal(100))\nprint(octal(200))\nprint(octal(1000))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def to_octal(decimal_num):\n    octal_num = 0\n    while decimal_num != 0:\n        octal_num = octal_num * 10 + decimal_num % 8\n        decimal_num //= 8\n    return octal_num\n\n\ndef main():\n    value = int(input(\"Enter a decimal number: \"))\n    print(\"Octal number: \" + str(to_octal(value)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def convert_to_octal(decimal):\n    octal = 0\n    counter = 0\n    while decimal > 0:\n        remainder = decimal % 8\n        octal += remainder * (10 ** counter)\n        decimal = decimal // 8\n        counter += 1\n    return octal\n\n\ndef main():\n    value = int(input(\"Enter a decimal number: \"))\n    octal = convert_to_octal(value)\n    print(f\"Octal representation of {value} is {octal}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def convert_to_octal(num):\n    octal_num = \"\"\n    while num > 0:\n        octal_num += str(num % 8)\n        num = num // 8\n    return octal_num[::-1]\n\nprint(convert_to_octal(100))"
    },
    {
      "rank": 87,
      "score": 7.0,
      "candidate": "def octal(num):\n    octal_num = \"\"\n    while num > 0:\n        rem = num % 8\n        num = num // 8\n        octal_num = str(rem) + octal_num\n\n    return octal_num\n\n\n\nnum = int(input(\"Enter a number: \"))\nprint(\"Octal number is:\", octal(num))"
    },
    {
      "rank": 88,
      "score": 7.0,
      "candidate": "def octal(decimal):\n    octal_num = 0\n    while decimal > 0:\n        octal_num = octal_num * 10 + decimal % 8\n        decimal //= 8\n    return octal_num\n\nprint(octal(34))"
    },
    {
      "rank": 89,
      "score": 7.0,
      "candidate": "def dec_oct(n):\n    oct_num = \"\"\n    while n > 0:\n        oct_num += str(n % 8)\n        n = n // 8\n    return oct_num[::-1]\n\nif __name__ == \"__main__\":\n    oct_num = dec_oct(5349)\n    print(oct_num)"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "# Solution\ndef dec_to_octal(dec):\n    octal = 0\n    i = 1\n    while dec != 0:\n        octal += (dec % 8) * i\n        dec = dec // 8\n        i *= 10\n    return octal\n\n\n# Test cases\nprint(dec_to_octal(10))\nprint(dec_to_octal(56))\nprint(dec_to_octal(32))\nprint(dec_to_octal(12))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "# Solution\ndef decimal_to_octal(dec_num):\n    octal_num = ''\n    while dec_num > 0:\n        octal_num += str(dec_num % 8)\n        dec_num = dec_num // 8\n    return octal_num[::-1]\n\n\n# Test cases\ndef decimal_to_octal_test():\n\n    # Normal cases\n    print(decimal_to_octal(25) == \"31\")\n\n    # Edge cases\n    print(decimal_to_octal(0) == \"0\")\n\n\ndecimal_to_octal_test()\n\n\n\"\"\"\ndef decimal_to_octal(dec_num):\n    octal_num = ''\n    while dec_num > 0:\n        octal_num += str(dec_num % 8)\n        dec_num = dec_num // 8\n    return octal_num[::-1]\n\"\"\""
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def decimal_to_octal(decimal: int) -> str:\n    \"\"\"\n    Return the octal value of the decimal number.\n    >>> decimal_to_octal(12)\n    '14'\n    >>> decimal_to_octal(121)\n    '141'\n    >>> decimal_to_octal(1212)\n    '1450'\n    >>> decimal_to_octal(121212)\n    '145540'\n    >>> decimal_to_octal(12121212)\n    '14554240'\n    \"\"\"\n    octal = \"\"\n    while decimal > 0:\n        octal += str(decimal % 8)\n        decimal = int(decimal / 8)\n    return octal[::-1]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def convert_to_octal(decimal_number: int) -> int:\n    \"\"\"\n    Return octal value of given decimal number.\n    >>> convert_to_octal(56)\n    70\n    >>> convert_to_octal(123)\n    151\n    >>> convert_to_octal(-123)\n    -151\n    >>> convert_to_octal(123.15)\n    151\n    >>> convert_to_octal(0)\n    0\n    >>> convert_to_octal(-123456789)\n    -1737567371\n    >>> convert_to_octal(123456789)\n    56535653455\n    >>> convert_to_octal(1.23)\n    1\n    >>> convert_to_octal(1.23456)\n    2\n    >>> convert_to_octal(1.23456789)\n    2\n    >>> convert_to_octal('123')\n    151\n    >>> convert_to_octal('1.23')\n    1\n    >>> convert_to_octal('1.23456')\n    2\n    >>> convert_to_octal('1.23456789')\n    2\n    >>> convert_to_octal('a')\n    Traceback (most recent call last):\n        ...\n    ValueError: Invalid input\n    >>> convert_to_octal('123a')\n    Traceback (most recent call last):\n        ...\n    ValueError: Invalid input\n    >>> convert_to_octal('1234567890')\n    Traceback (most recent call last):\n        ...\n    ValueError: Invalid input\n    >>> convert_to_octal('1.234567890')\n    Traceback (most recent call last):\n        ...\n    ValueError: Invalid input\n    \"\"\"\n    if not isinstance(decimal_number, (int, float)):\n        raise ValueError(\"Invalid input"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "# Solution\ndef to_octal(n):\n    result = \"\"\n    while n > 0:\n        result += str(n % 8)\n        n = n // 8\n    return result[::-1]\n\n\n# Test cases\nprint(to_octal(100))\nprint(to_octal(12345))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def dec_to_oct(dec_number):\n    # if the number is negative, raise an error\n    if dec_number < 0:\n        raise ValueError(\"dec_to_oct only accepts non-negative numbers\")\n\n    # if the number is zero, return zero\n    if dec_number == 0:\n        return 0\n\n    # initialize the octal number\n    octal = 0\n    index = 1\n    while dec_number != 0:\n        # extract the last digit from the number and multiply by the index\n        octal += (dec_number % 10) * (8 ** (index - 1))\n        # divide the number by 10 to extract the next order of magnitude\n        dec_number //= 10\n        # increment the index\n        index += 1\n    return octal\n\n\nprint(dec_to_oct(45))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def convert_octal(num: int) -> int:\n    \"\"\"\n    Return the octal value of the given decimal number.\n    >>> convert_octal(25)\n    '31'\n    >>> convert_octal(30)\n    '32'\n    >>> convert_octal(37)\n    '37'\n    >>> convert_octal(123)\n    '111101'\n    >>> convert_octal(1234567)\n    '11121011001'\n    >>> convert_octal(1234567890)\n    '112345671011001'\n    >>> convert_octal(12345678901234567890)\n    '12345678901234567890'\n    >>> convert_octal(1234567890123456789012345678901234567890)\n    '1234567890123456789012345678901234567890'\n    >>> convert_octal(25.3)\n    Traceback (most recent call last):\n    ...\n    TypeError: Only accepts integer values\n    \"\"\"\n    if not isinstance(num, int):\n        raise TypeError(\"Only accepts integer values\")\n    octal = \"\"\n    while num > 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal[::-1] or \"0\"\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def convert_decimal_to_octal(decimal_number):\n    octal_number = 0\n    index = 0\n    while decimal_number > 0:\n        remainder = decimal_number % 8\n        octal_number += remainder * pow(10, index)\n        decimal_number = decimal_number // 8\n        index += 1\n    return octal_number\n\n\ndef main():\n    decimal_number = 31\n    octal_number = convert_decimal_to_octal(decimal_number)\n    print(octal_number)\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def octal_value(num: int) -> str:\n    \"\"\"\n    >>> octal_value(345)\n    '375'\n    >>> octal_value(23)\n    '25'\n    >>> octal_value(12)\n    '14'\n    >>> octal_value(1)\n    '1'\n    >>> octal_value(-12)\n    '14'\n    >>> octal_value(-23)\n    '25'\n    >>> octal_value(-345)\n    '375'\n    \"\"\"\n    octal_num = oct(num)[2:]\n    return octal_num\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def dec_to_oct(dec: int) -> str:\n    \"\"\"\n    This function takes decimal number as input and returns\n    octal number as output.\n    >>> dec_to_oct(10)\n    '12'\n    >>> dec_to_oct(100)\n    '144'\n    >>> dec_to_oct(-10)\n    '-12'\n    >>> dec_to_oct(-100)\n    '-144'\n    >>> dec_to_oct(0)\n    '0'\n    \"\"\"\n    if dec == 0:\n        return \"0\"\n\n    if dec < 0:\n        dec = abs(dec)\n        return \"-\" + oct(dec)[2:]\n\n    return oct(dec)[2:]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def decimal_to_octal(decimal_number):\n    octal_number = \"\"\n    while decimal_number > 0:\n        octal_number += str(decimal_number % 8)\n        decimal_number = decimal_number // 8\n\n    return octal_number[::-1]\n\n\nprint(decimal_to_octal(56))"
    }
  ]
}