{
  "timestamp": "2025-09-15T01:42:00.064561",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "mbpp",
  "problem_number": 448,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def remove_uppercase(string: str) -> str:\n    \"\"\"Removes uppercase substrings from a string by using regex.\n\n    Args:\n        string (str): The string to be processed.\n\n    Returns:\n        str: The processed string.\n    \"\"\"\n    # Pattern to match uppercase substrings\n    pattern = r\"[A-Z]+\"\n\n    # Replace all uppercase substrings with an empty string\n    return re.sub(pattern, \"\", string)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(input_str):\n    \"\"\"Remove uppercase substrings from a given string by using regex.\n\n    Args:\n        input_str (str): Input string.\n\n    Returns:\n        str: Input string with uppercase substrings removed.\n    \"\"\"\n    return re.sub(r\"\\b[A-Z]+\\b\", \"\", input_str)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(string: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string.\n\n    Args:\n        string (str): given string.\n\n    Examples:\n        >>> assert remove_uppercase_substrings('helloWorld') == 'hellWrd'\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase_substrings(\"helloWorld\"))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def remove_uppercase_substring(text: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string.\n\n    Args:\n        text (str): given string.\n\n    Examples:\n        >>> assert remove_uppercase_substring(\"abABab\") == \"abab\"\n    \"\"\"\n    return \"\".join(\n        text[start:end]\n        for start, end in regex.findall(r\"\\b[a-z]+\\b\", text)\n    )\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def remove_uppercase(text: str) -> str:\n    \"\"\"Removes uppercase substrings from a given string.\n\n    Args:\n        text (str): string to remove uppercase substrings from\n\n    Returns:\n        str: string with uppercase substrings removed\n    \"\"\"\n    return \"\".join(match.group(0).lower() for match in re.finditer(\"[a-z]+\", text))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "import re\n\ndef remove_upper(text):\n    return re.sub(r'[A-Z]', '', text)\n\nif __name__ == '__main__':\n    print(remove_upper('abcd'))\n    print(remove_upper('abcdEFG'))\n    print(remove_upper('ABCD'))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def remove_uppercase_substrings(string):\n    \"\"\"Removes uppercase substrings from a given string.\n\n    Args:\n        string (str): The string to remove uppercase substrings from.\n\n    Returns:\n        str: The string with uppercase substrings removed.\n    \"\"\"\n    return re.sub(r'[A-Z]+', '', string)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string by using regex.\n\n    Args:\n        text (str): given string\n\n    Examples:\n        >>> assert remove_uppercase('abABa') == 'abAb'\n    \"\"\"\n    return re.sub(r\"([A-Z]+)\", r\"\", text)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"abABa\"))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string by using regex.\n\n    Args:\n        string (str): the string to process.\n\n    Examples:\n        >>> assert remove_uppercase(\"AaBbCcDdEeFf\") == \"abcdef\"\n        >>> assert remove_uppercase(\"aaBBccDD\") == \"aaBbCcDd\"\n        >>> assert remove_uppercase(\"aaBBccDDee\") == \"aaBbCcDdEe\"\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"AaBbCcDdEeFf\"))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "import re\n\ndef remove_uppercase(input_string):\n    \"\"\"\n    :param input_string: string\n    :return: string\n    \"\"\"\n    pattern = re.compile(r\"[A-Z]+\")\n    return pattern.sub(\"\", input_string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello World\"))"
    },
    {
      "rank": 11,
      "score": 9.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(text):\n    \"\"\"Removes uppercase substrings from a given string by using regex.\"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", text)"
    },
    {
      "rank": 12,
      "score": 9.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    # Write your code here.\n\treturn re.sub(r\"[A-Z]+\", \"\", string)\n\nif __name__ == '__main__':\n    string = input()\n    result = remove_uppercase(string)\n    print(result)"
    },
    {
      "rank": 13,
      "score": 9.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(input_string):\n    \"\"\"\n    Removes all uppercase substrings from a string.\n    \"\"\"\n    return re.sub(r'[A-Z]', '', input_string)"
    },
    {
      "rank": 14,
      "score": 9.0,
      "candidate": "import re\n\ndef remove_uppercase(input_string):\n    \"\"\"\n    >>> remove_uppercase(\"Hello World\")\n    'Hello World'\n    >>> remove_uppercase(\"Hello WORLD\")\n    'Hello World'\n    >>> remove_uppercase(\"HELLO WORLD\")\n    'Hello World'\n    >>> remove_uppercase(\"HELLO WORLD HOW ARE YOU?\")\n    'Hello World HOW ARE YOU?'\n    >>> remove_uppercase(\"HELLO WORLD HOW ARE YOU?\")\n    'Hello World HOW ARE YOU?'\n    \"\"\"\n    return re.sub(\"[A-Z]+\", \"\", input_string)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 9.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text: str):\n    \"\"\"Removes uppercase substrings from a given string.\n\n    Args:\n        text (str): the input string.\n\n    Examples:\n        >>> assert remove_uppercase('Hello World') == 'Hello World'\n        >>> assert remove_uppercase('Hello WORLD') == 'Hello'\n        >>> assert remove_uppercase('HELLO WORLD') == ''\n    \"\"\"\n    return re.sub(r'[A-Z]+', '', text)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase('Hello World'))"
    },
    {
      "rank": 16,
      "score": 9.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text):\n    return re.sub(r\"[A-Z]+\", \"\", text)\n\n\nprint(remove_uppercase(\"Hello World!\"))\nprint(remove_uppercase(\"Python\"))\nprint(remove_uppercase(\"HELLO WORLD\"))\nprint(remove_uppercase(\"HeLLo WoRlD\"))"
    },
    {
      "rank": 17,
      "score": 9.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r'[A-Z]+', '', string)\n\n\nif __name__ == '__main__': \n    print(remove_uppercase('Hello World'))\n    print(remove_uppercase('HELLO WORLD'))\n    print(remove_uppercase('HELLO World'))"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(string):\n    \"\"\"\n    >>> remove_uppercase_substrings(\"abcABC\")\n    'abc'\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substring(string):\n    return re.sub(r'[A-Z]+', '', string)\n\n\ndef test_remove_uppercase_substring():\n    assert remove_uppercase_substring('Hello world') == 'hello world'\n    assert remove_uppercase_substring('Hello world!') == 'hello world!'\n    assert remove_uppercase_substring('HELLO world!') == ' world!'\n    assert remove_uppercase_substring('Hello WORLD!') == 'hello!'\n    assert remove_uppercase_substring('HELLO WORLD!') == '!'\n    assert remove_uppercase_substring('HEllo WORLD!') == ' WORLD!'\n    assert remove_uppercase_substring('HEllo WO') == ' WO'\n    assert remove_uppercase_substring('Hello WO') == 'Hello WO'\n    assert remove_uppercase_substring('HELLO') == ''"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(text):\n    \"\"\"\n    >>> remove_uppercase_substrings('Hello World')\n    'Hello wrd'\n    >>> remove_uppercase_substrings('Hello World!')\n    'Hllo wrd!'\n    >>> remove_uppercase_substrings('Hello World!?')\n    'Hllo wrd!?'\n    >>> remove_uppercase_substrings('Hello World?!')\n    'Hllo wrd?!'\n    >>> remove_uppercase_substrings('Hello World, How are you?')\n    'Hllo wrd, hw ar yw?'\n    >>> remove_uppercase_substrings('Hello World, How are you? I am fine.')\n    'Hllo wrd, hw ar yw? I mn flne.'\n    >>> remove_uppercase_substrings('Hello World, How are you? I am fine. Thank you.')\n    'Hllo wrd, hw ar yw? I mn flne. Tnk yu.'\n    >>> remove_uppercase_substrings('Hello World, How are you? I am fine. Thank you.')\n    'Hllo wrd, hw ar yw? I mn flne. Tnk yu.'\n    \"\"\"\n    return re.sub(r'[A-Z]+', lambda m: m.group(0).lower(), text)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def remove_uppercase(string):\n    return \"\".join(\n        [x.group() for x in re.finditer(r\"(?P<low>[a-z]+)\", string.lower())]\n    )"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    result = re.sub(r\"[A-Z]+\", \"\", string)\n    return result"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text):\n    return re.sub(r\"[A-Z]+\", \"\", text)\n\n\nprint(remove_uppercase(\"abC\"))\nprint(remove_uppercase(\"abCc\"))\nprint(remove_uppercase(\"abCC\"))\nprint(remove_uppercase(\"abCCc\"))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def remove_uppercase(text):\n    return re.sub(r\"[A-Z]+\", \"\", text)"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    pattern = r\"[A-Z]+\"\n    return re.sub(pattern, \"\", string)\n\nprint(remove_uppercase(\"AaBbCc\"))\nprint(remove_uppercase(\"ABc\"))\nprint(remove_uppercase(\"aBc\"))\nprint(remove_uppercase(\"ABc\"))\nprint(remove_uppercase(\"ABc\"))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\nprint(remove_uppercase(\"Hello World!\")) # \"Hello World!\"\nprint(remove_uppercase(\"HELLO WORLD!\")) # \"Hello World!\"\nprint(remove_uppercase(\"HELLO\")) # \"\"\nprint(remove_uppercase(\"Hello\")) # \"Hello\"\nprint(remove_uppercase(\"hello\")) # \"hello\"\nprint(remove_uppercase(\"heLlo\")) # \"heLlo\"\nprint(remove_uppercase(\"HELLO\")) # \"\""
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    # 1. get all uppercase substrings\n    uppercase_strings = re.findall(r'[A-Z]+', string)\n    # 2. remove all uppercase substrings\n    for uppercase_string in uppercase_strings:\n        string = string.replace(uppercase_string, '')\n    return string\n\ndef main():\n    string = \"Hello World, Hello Uppercase World!\"\n    print(f'Original string: {string}')\n    print(f'Removed uppercase string: {remove_uppercase(string)}')\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text):\n    return re.sub(r\"[A-Z]+\", \"\", text)"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase(\"Hi this is a test for you\"))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(string):\n    # \"([A-Z]+)\" matches one or more uppercase characters\n    return re.sub(\"([A-Z]+)\", \"\", string)\n\nif __name__ == '__main__':\n    print(remove_uppercase_substrings(\"abcDEFghi\"))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(input_str):\n    return re.sub(r'[A-Z]+', '', input_str)\n\n\ndef test_remove_uppercase():\n    \"\"\"Test for remove_uppercase function.\"\"\"\n    assert remove_uppercase('Hello World') == 'helloworld'\n    assert remove_uppercase('HELLO WORLD') == 'helloworld'\n    assert remove_uppercase('HELLO WORLD!') == 'helloworld'\n    assert remove_uppercase('heLLo World') == 'hello world'\n    assert remove_uppercase('heLLo WORLD!') == 'hello world'\n    assert remove_uppercase('Hello WORLD!') == 'hello world'\n    assert remove_uppercase('Hello World!') == 'helloworld'\n    assert remove_uppercase('HeLLo World') == 'hello world'\n    assert remove_uppercase('HeLLo WORLD!') == 'hello world'\n    assert remove_uppercase('HeLLo World!') == 'hello world'"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nprint(remove_uppercase(\"Testing 123\"))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello World\"))\n    print(remove_uppercase(\"Hello World hello\"))\n    print(remove_uppercase(\"Hello world\"))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\\b\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    assert remove_uppercase(\"Hello World\") == \"hello world\""
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nprint(remove_uppercase(\"Python\"))\nprint(remove_uppercase(\"Python is awesome\"))\nprint(remove_uppercase(\"Python is very easy to learn\"))\nprint(remove_uppercase(\"Python is very easy to learn and powerfull\"))\nprint(remove_uppercase(\"Python is very easy to learn and powerfull language\"))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]\", \"\", string)"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(text):\n    \"\"\"\n    >>> remove_uppercase('Hello world')\n    'hello world'\n    >>> remove_uppercase('Hello World')\n    'hello World'\n    >>> remove_uppercase('HELLO WORLD')\n    'HELLO WORLD'\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", lambda x: x.group().lower(), text)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(text):\n    return re.sub(r\"(?<=\\w)(\\w+[A-Z]+\\w+)(?=\\w)\", \"\", text)\n\nprint(remove_uppercase_substrings(\"I Love Python\"))\nprint(remove_uppercase_substrings(\"I Love Python Programming\"))\nprint(remove_uppercase_substrings(\"I Love Python Programming 2021\"))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase_substrings(\"abcABC\"))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(input_string):\n    \"\"\"\n    >>> remove_uppercase_substrings('aBcD')\n    'aBD'\n    \"\"\"\n    return re.sub(r'[A-Z]+', lambda m: m.group(0).lower(), input_string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(text):\n    return re.sub(r'[A-Z]+', '', text)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase('Hello world'))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    \"\"\"Remove uppercase substrings from a given string by using regex.\"\"\"\n    pattern = re.compile(r'[A-Z]+')\n    return pattern.sub('', string)"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def remove_uppercase_substring(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase_substring(\"HackerEarth\"))\n    print(remove_uppercase_substring(\"HackerRank\"))\n    print(remove_uppercase_substring(\"Hackerearth\"))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(string):\n    \"\"\"\n    >>> remove_uppercase_substrings('Hello, world!')\n    'Hello, world!'\n    >>> remove_uppercase_substrings('HELLO, WORLD!')\n    'HELLO, WORLD!'\n    >>> remove_uppercase_substrings('HEllo, WORLD!')\n    'HEllo, WORLD!'\n    >>> remove_uppercase_substrings('HELLO, WORLD!')\n    'HELLO, WORLD!'\n    >>> remove_uppercase_substrings('Hello, WORLD!')\n    'Hello, WORLD!'\n    >>> remove_uppercase_substrings('Hello, world!')\n    'Hello, world!'\n    >>> remove_uppercase_substrings('HELLO, WORLD!')\n    'HELLO, WORLD!'\n    >>> remove_uppercase_substrings('Hello, WORLD!')\n    'Hello, WORLD!'\n    \"\"\"\n    return re.sub(r'[A-Z]+', '', string)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(str):\n    return re.sub(r'[A-Z]', '', str)\n\nprint(remove_uppercase(\"Hello, my name is John\"))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\ndef test_remove_uppercase():\n    \"\"\"Test for remove_uppercase function.\"\"\"\n    assert remove_uppercase(\"ABC\") == \"ABC\"\n    assert remove_uppercase(\"abc\") == \"\"\n    assert remove_uppercase(\"ABc\") == \"bc\"\n    assert remove_uppercase(\"ABc123\") == \"123\"\n    assert remove_uppercase(\"ABc123ABc\") == \"123\"\n    assert remove_uppercase(\"ABc123ABcABc\") == \"123\"\n    assert remove_uppercase(\"ABc123ABcABcABc\") == \"123\"\n    assert remove_uppercase(\"ABcABcABcABcABc\") == \"\"\n    assert remove_uppercase(\"ABcABcABcABcABcABc\") == \"\""
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r'[A-Z]+', '', string)"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]\", \"\", string)\n\nprint(remove_uppercase(\"abCdEfG\"))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\nprint(remove_uppercase(\"Hello world\"))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def remove_uppercase(string):\n    return \"\".join(\n        match.group(0) if match.start(0) == match.end(0) else \"\"\n        for match in re.finditer(r\"[a-z]+\", string)\n    )"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(str):\n    # Your code here\n    return re.sub(r'[A-Z]','',str)\n\nif __name__ == '__main__':\n    # Use the main function here to test your implementation\n    str = \"AbaC\"\n    print(remove_uppercase(str))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(input_str):\n    return re.sub(r'[A-Z]+', '', input_str)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase('Hello'))\n    print(remove_uppercase('Hello world'))\n    print(remove_uppercase('Hello, world'))\n    print(remove_uppercase('HELLO, WORLD'))\n    print(remove_uppercase('HELLO, WORLD!'))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(text):\n    return re.sub(r'[A-Z]+', '', text)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase('abCDd'))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substring(string):\n    return re.sub(r\"[A-Z]\", \"\", string)\n\nprint(remove_uppercase_substring(\"ABCabc123abc\"))\nprint(remove_uppercase_substring(\"abc\"))\nprint(remove_uppercase_substring(\"AbcAbc\"))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    pattern = re.compile(r'[A-Z]')\n    return pattern.sub('', string)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase(\"Hi there, I'm Fred!\"))\n    print(remove_uppercase(\"Hi there, I'm FRED!\"))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(str):\n    return re.sub(r'[A-Z]', '', str)\n\nprint(remove_uppercase_substrings('abCdef'))\nprint(remove_uppercase_substrings('abCdefX'))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(input_string):\n    \"\"\"\n    >>> remove_uppercase(\"abAB\")\n    'ab'\n    >>> remove_uppercase(\"abABab\")\n    'abab'\n    >>> remove_uppercase(\"ABabABAB\")\n    ''\n    >>> remove_uppercase(\"abABababAB\")\n    'ababab'\n    \"\"\"\n    pattern = re.compile(r\"([A-Z]+)\")\n    return pattern.sub(\"\", input_string)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def remove_uppercase(input_str):\n    return re.sub(r\"[A-Z]\", \"\", input_str)\n\n\ndef test_remove_uppercase():\n    assert remove_uppercase(\"AaBbCc\") == \"abc\"\n    assert remove_uppercase(\"AaBbCcDdEe\") == \"abcde\"\n    assert remove_uppercase(\"AaBbCcDdEeFf\") == \"abcdef\"\n    assert remove_uppercase(\"AaBbCcDdEeFfGg\") == \"abcdefg\"\n    assert remove_uppercase(\"AaBbCcDdEeFfGgHh\") == \"abcdefgh\"\n    assert remove_uppercase(\"AaBbCcDdEeFfGgHhIi\") == \"abcdefghi\""
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\nprint(remove_uppercase_substrings(\"abC\"))\nprint(remove_uppercase_substrings(\"abCD\"))\nprint(remove_uppercase_substrings(\"abCDE\"))\nprint(remove_uppercase_substrings(\"abc\"))\nprint(remove_uppercase_substrings(\"aBc\"))\nprint(remove_uppercase_substrings(\"aBcD\"))\nprint(remove_uppercase_substrings(\"aBcDE\"))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text):\n    return re.sub(r\"[A-Z]+\", \"\", text)\n\n\nif __name__ == \"__main__\":\n    assert remove_uppercase(\"Hello World\") == \"hello world\"\n    assert remove_uppercase(\"HELLO WORLD\") == \"hello world\"\n    assert remove_uppercase(\"HELLO\") == \"hello\""
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    string = re.sub(r'[A-Z]+', '', string)\n    return string\n\nif __name__ == '__main__':\n    print(remove_uppercase('Hello WORLD'))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    # Your code goes here\n    # string = re.sub(r'[A-Z]+', '', string)\n    string = re.sub(r'[A-Z]+', '', string)\n    return string\n\n\nif __name__ == '__main__':\n    string = input()\n    print(remove_uppercase(string))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase(\"Hello World!\"))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def remove_uppercase_substring(s):\n    return re.sub(r\"[A-Z]+\", \"\", s)"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def remove_uppercase(string: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string by using regex.\n\n    Args:\n        string (str): given string.\n\n    Examples:\n        >>> assert remove_uppercase(\"Hello World\") == \"hello world\"\n        >>> assert remove_uppercase(\"Hello WORLD\") == \"hello world\"\n        >>> assert remove_uppercase(\"HELLO WORLD\") == \"hello world\"\n        >>> assert remove_uppercase(\"HELLO WORLD!\") == \"hello world!\"\n    \"\"\"\n    return string.lower()\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello World\"))\n    print(remove_uppercase(\"Hello WORLD\"))\n    print(remove_uppercase(\"HELLO WORLD\"))\n    print(remove_uppercase(\"HELLO WORLD!\"))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\ndef test_remove_uppercase_substrings():\n    assert remove_uppercase_substrings(\"Hello, my name is John\") == \"hello, my name is john\"\n    assert remove_uppercase_substrings(\"Hello, my name is JOHN\") == \"hello, my name is \"\n    assert remove_uppercase_substrings(\"Hello, my name is JOHN. How are YOU?\") == \"hello, my name is . how are ?\"\n    assert remove_uppercase_substrings(\"Hello, my name is JOHN. How are YOU?!\") == \"hello, my name is . how are \"\n\n\nif __name__ == \"__main__\":\n    test_remove_uppercase_substrings()"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substring(string):\n    \"\"\"\n    >>> remove_uppercase_substring('hello')\n    'hello'\n    >>> remove_uppercase_substring('Hello')\n    'hell'\n    >>> remove_uppercase_substring('Hello World')\n    'hell world'\n    >>> remove_uppercase_substring('Hello World!')\n    'hell world!'\n    >>> remove_uppercase_substring('HelloWorld')\n    'hellwo'\n    \"\"\"\n    return re.sub(r'[A-Z]+', lambda match: match.group(0)[:-1], string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r'[A-Z]+', '', string)\n\n\nif __name__ == '__main__':\n    print(remove_uppercase('AaBbCc'))\n    print(remove_uppercase('AaBbCcDDdEEe'))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string by using regex.\"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", string)"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text):\n    return re.sub(r\"[A-Z]\", \"\", text)"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(string):\n    \"\"\"\n    >>> remove_uppercase_substrings(\"Python is awesome\")\n    'python is awesome'\n    >>> remove_uppercase_substrings(\"Python is awesome Python\")\n    'python is awesome python'\n    >>> remove_uppercase_substrings(\"Python is awesome python\")\n    'python is awesome python'\n    >>> remove_uppercase_substrings(\"Python Is Awesome\")\n    'python is awesome'\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(text):\n    return re.sub(r\"[A-Z]+\", \"\", text)\n\nprint(remove_uppercase(\"abcd\"))\nprint(remove_uppercase(\"ABCD\"))\nprint(remove_uppercase(\"abcdABCD\"))\nprint(remove_uppercase(\"ABCDabcd\"))\nprint(remove_uppercase(\"abcdABCDabcd\"))\nprint(remove_uppercase(\"ABCDabcdABCDabcd\"))\nprint(remove_uppercase(\"ABCDABCD\"))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string: str) -> str:\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello, world!\"))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    \"\"\"\n    :param string: str - string to remove uppercase substrings from\n    :return: str - string after uppercase substrings have been removed\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\ndef main():\n    print(remove_uppercase(\"AaBbCc\"))\n    print(remove_uppercase(\"AbCdEfGhIjKl\"))\n    print(remove_uppercase(\"Hi there, what's up?\"))\n    print(remove_uppercase(\"Just a simple sentence\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r'[A-Z]+', '', string)"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(input_string):\n    return re.sub(r'[A-Z]+', '', input_string)\n\n\nprint(remove_uppercase_substrings(\"Hello, World!\")) # \"hellow, world!\"\nprint(remove_uppercase_substrings(\"AaAAaa\")) # \"aaa\"\nprint(remove_uppercase_substrings(\"Ho Ho Ho\")) # \"ho ho ho\"\nprint(remove_uppercase_substrings(\"aAaaA\")) # \"\"\nprint(remove_uppercase_substrings(\"AaA\")) # \"\"\nprint(remove_uppercase_substrings(\"Ho\")) # \"ho\""
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substrings(string):\n    \"\"\"\n    >>> remove_uppercase_substrings(\"AABBCCaaaBbbbb\")\n    'aabbcc'\n    \"\"\"\n    return re.sub(\"[A-Z]+\", \"\", string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r'[A-Z]+', '', string)"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def remove_uppercase(string):\n    return \"\".join(\n        [char for char in string if char == char.lower() or char == char.upper()]\n    )\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello World\"))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(string):\n    pattern = re.compile(\"[A-Z]+\")\n    matches = pattern.findall(string)\n    for match in matches:\n        string = string.replace(match, \"\")\n    return string\n\n\nif __name__ == '__main__':\n    print(remove_uppercase_substrings(\"aBCde\"))\n    print(remove_uppercase_substrings(\"ABcdE\"))\n    print(remove_uppercase_substrings(\"ABCD\"))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def remove_uppercase(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nprint(remove_uppercase(\"AaBbCc\"))\nprint(remove_uppercase(\"Hello\"))\nprint(remove_uppercase(\"aabbbc\"))\nprint(remove_uppercase(\"AaaBc\"))\nprint(remove_uppercase(\"AaaBc\"))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_uppercase(strng):\n    \"\"\"Removes uppercase substrings from a given string by using regex.\"\"\"\n    return re.sub(r\"[A-Z]\", \"\", strng)"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_uppercase(text):\n    \"\"\"\n    >>> remove_uppercase(\"HELLO world\")\n    'Hello world'\n    >>> remove_uppercase(\"HELLO WORLD\")\n    'Hello WORLD'\n    >>> remove_uppercase(\"HELLO WORLD 2020\")\n    'Hello WORLD 2020'\n    \"\"\"\n    # pattern = re.compile(\"[A-Z]\")\n    # return pattern.sub(\"\", text)\n\n    pattern = re.compile(\"[A-Z]+\")\n    return pattern.sub(\"\", text)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_upper(string):\n    return re.sub(r'[A-Z]+', '', string)\n\n\nprint(remove_upper('Hello World'))\nprint(remove_upper('HELLO'))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_upper(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_upper(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nif __name__ == '__main__':\n    print(remove_upper(\"Hi I am a string\"))"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "def remove_uppercase_substring(string):\n    # Write your code here.\n    return re.sub(r\"[A-Z]+\", \"\", string)"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase_substring(string):\n    return re.sub(r\"[A-Z]+\", \"\", string)\n\n\nprint(remove_uppercase_substring(\"ABCabc\"))"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    pattern = re.compile(r'[A-Z]')\n    return pattern.sub('', string)\n\n\nprint(remove_uppercase(\"ABCabc\"))"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "import re\n\ndef remove_uppercase(string):\n    return re.sub(\"[A-Z]+\", \"\", string)\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_function = remove_uppercase(test_input)\n    if test_function == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\ntest_function((\"A\", \"\"))\ntest_function((\"AABBCC\", \"ABCC\"))\ntest_function((\"ABC\", \"\"))\ntest_function((\"abc\", \"abc\"))\ntest_function((\"abABabB\", \"abB\"))\ntest_function((\"abABAbB\", \"\"))\ntest_function((\"a\", \"\"))\ntest_function((\"A\", \"\"))\ntest_function((\"AB\", \"\"))\ntest_function((\"ABAB\", \"\"))\ntest_function((\"ABABABABAB\", \"ABAB\"))\ntest_function((\"ABABABABABABABABAB\", \"ABABABABABABABAB\"))\ntest_function((\"AABBAABB\", \"\"))\ntest_function((\"AABBAABBAABBAABB\", \"\"))\ntest_function((\"AABBAABBAABBAABBAABBAABB\", \"\"))\ntest_function((\"AABBAABBAABBAABBAABBAABBAABBAABB\", \"\"))\ntest_function((\"AABBAABBAABBAABBAABBAABBAABBAABBAABBAABB\", \"\"))\ntest_function((\"ABABABABABABABABABABABABABABABABABABABABABABAB\", \"ABABABABABABABABABABABABABABABABABABABABABABAB\"))\ntest_function((\"ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(input_string):\n    \"\"\"\n    Removes uppercase substrings from a given string by using regex.\n\n    Args:\n       input_string(string): Input string to be searched.\n    Returns:\n       string: The string without uppercase substrings.\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", input_string)\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = remove_uppercase_substrings(test_input)\n    if test_actual == test_expected:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\ntest_function(('ABCDabcd', 'abcd'))\ntest_function(('ABabcd', 'abcd'))\ntest_function(('AB123abcd', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest_function(('AB123aBCD', '123abcd'))\ntest"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "import re\n\ndef remove_uppercase(text):\n\n    # Remove uppercase letters from the string using regex\n    return re.sub(r'[A-Z]', '', text)\n\n\ndef test_remove_uppercase():\n\n    # Test case 1\n    text = 'ABCabc123'\n    expected = 'abc123'\n    actual = remove_uppercase(text)\n    assert actual == expected\n\n    # Test case 2\n    text = 'abcDEFghi'\n    expected = 'abcDEFghi'\n    actual = remove_uppercase(text)\n    assert actual == expected\n\n    # Test case 3\n    text = '123456789'\n    expected = '123456789'\n    actual = remove_uppercase(text)\n    assert actual == expected\n\n    # Test case 4\n    text = 'AbCdEfGhI'\n    expected = 'AbCdEfGhI'\n    actual = remove_uppercase(text)\n    assert actual == expected\n\n\nif __name__ == '__main__':\n    test_remove_uppercase()"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase(input_str):\n    return re.sub(r\"[A-Z]+\", \"\", input_str)\n\n\ndef test_remove_uppercase():\n    \"\"\"Test for remove_uppercase function.\"\"\"\n    assert remove_uppercase(\"AaBbCc\") == \"abc\"\n    assert remove_uppercase(\"aabbcc\") == \"aabbcc\"\n    assert remove_uppercase(\"AaBbCcDd\") == \"abcd\"\n    assert remove_uppercase(\"aabbccdd\") == \"aabbccdd\""
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"\\b[A-Z]+\\b\", \"\", string)\n\n\ndef main():\n    assert remove_uppercase(\"Hello, World!\") == \"Hello, World!\"\n    assert remove_uppercase(\"AabBcCdDeE\") == \"aabbdde\"\n    assert remove_uppercase(\"aAaaaBbB\") == \"aaaa\"\n    assert remove_uppercase(\"aAaA\") == \"\"\n    assert remove_uppercase(\"abcde\") == \"abcde\"\n    assert remove_uppercase(\"AaBbCcDdEe\") == \"\"\n    print(\"Test SUCCESS!!\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    # split the string on uppercase characters\n    # use a list comprehension to create a new list by filtering out the empty strings\n    # join the list by empty string\n    return \"\".join([s for s in re.split(\"[A-Z]+\", string) if s])\n\n\ndef test_remove_uppercase():\n    assert remove_uppercase(\"abcABC123\") == \"abc123\"\n    assert remove_uppercase(\"\") == \"\"\n    assert remove_uppercase(\"a\") == \"a\"\n    assert remove_uppercase(\"ABC\") == \"\"\n    assert remove_uppercase(\"Abc\") == \"bc\"\n    assert remove_uppercase(\"abc\") == \"abc\"\n    assert remove_uppercase(\"abcABC\") == \"abc\"\n    assert remove_uppercase(\"AbcABC\") == \"bc\"\n    assert remove_uppercase(\"abcABC123\") == \"abc123\"\n    assert remove_uppercase(\"abcABCabc\") == \"abcabc\"\n    assert remove_uppercase(\"AbcABCabc\") == \"bcabc\"\n    assert remove_uppercase(\"abcABCabcABC\") == \"abcabc\"\n    assert remove_uppercase(\"AbcABCabcABC\") == \"bcabc\"\n    assert remove_uppercase(\"abcABCabcABCabc\") == \"abcabcabc\"\n    assert remove_uppercase(\"AbcABCabcABCabc\") == \"bcabcabc\"\n    assert remove_uppercase(\"abcABCabcABCabcABC\") == \"abcabcabc\"\n    assert remove_uppercase(\"AbcABCabcABCabcABC\") == \"bcabcabc\"\n    assert remove_uppercase(\"abcABCabcABCabcABCabc\") == \"abcabcabcabc\"\n    assert remove_uppercase(\"AbcABCabcABCabcABCabc\") == \"bcabcabcabc\"\n    assert remove_uppercase(\"abcABCabcABCabcABCabcABC\") == \"abcabcabcabc\"\n    assert remove_uppercase(\"AbcABCabcABCabcABCabcABC\") == \"bcabcabcabc\"\n    assert remove_uppercase(\"abcABCabcABCabcABCabcABCabc\") == \"abcabcabcabcabc\"\n    assert remove_upper"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase(string):\n    return re.sub(r\"[A-Z]\", \"\", string)\n\n\ndef test_remove_uppercase():\n    assert remove_uppercase(\"Hello World\") == \"helloworld\"\n    assert remove_uppercase(\"aA\") == \"a\"\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello World\"))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "import re\n\n\ndef remove_uppercase(str):\n    return re.sub(r'[A-Z]+', '', str)\n\n\ndef test_remove_uppercase():\n    assert remove_uppercase('abBAc') == 'abc'\n    assert remove_uppercase('AaBbCc') == 'aabbc'\n    assert remove_uppercase('AaBbCcDD') == 'aabbcd'\n    assert remove_uppercase('AaBbCcDDe') == 'aabbcd'"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def remove_uppercase(text: str) -> str:\n    \"\"\"Remove uppercase substrings from a given string by using regex.\n\n    Args:\n        text (str): given string.\n\n    Examples:\n        >>> assert remove_uppercase('Hello World') == 'hello world'\n        >>> assert remove_uppercase('HELLO WORLD') == ''\n        >>> assert remove_uppercase('Hello World') == 'hello world'\n        >>> assert remove_uppercase('Hello World') == 'hello world'\n        >>> assert remove_uppercase('HELLO WORLD') == ''\n        >>> assert remove_uppercase('Hello World') == 'hello world'\n    \"\"\"\n    return re.sub(r\"[A-Z]+\", \"\", text)\n\n\nif __name__ == \"__main__\":\n    print(remove_uppercase(\"Hello World\"))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "import re\n\ndef remove_uppercase_substrings(str):\n    return re.sub(r'[A-Z]+', '', str)\n\nprint(remove_uppercase_substrings('aAbBcCdDeE'))\n\n\"\"\"\nWrite a function to remove lowercase substrings from a given string by using regex.\n\"\"\"\n\ndef remove_lowercase_substrings(str):\n    return re.sub(r'[a-z]+', '', str)\n\nprint(remove_lowercase_substrings('AAbBcCdDeE'))\n\n\"\"\"\nWrite a function to remove substrings from a given string by using regex. The substrings should be of a specified length.\n\"\"\"\n\ndef remove_substrings(str, length):\n    return re.sub(r'[a-z]{'+str(length)+'}', '', str)\n\nprint(remove_substrings('AAAAbBcCdDeE', 3))\n\n\"\"\"\nWrite a function to remove substrings from a given string by using regex. The substrings should start with a specific string.\n\"\"\"\n\ndef remove_substrings(str, start):\n    return re.sub(r'[a-z]'+start+'[a-z]+', '', str)\n\nprint(remove_substrings('AAAAbBcCdDeE', 'Ab'))\n\n\"\"\"\nWrite a function to remove substrings from a given string by using regex. The substrings should end with a specific string.\n\"\"\"\n\ndef remove_substrings(str, end):\n    return re.sub(r'[a-z]+'+end, '', str)\n\nprint(remove_substrings('AAAAbBcCdDeE', 'E'))\n\n\"\"\"\nWrite a function to remove substrings from a given string by using regex. The substrings should not contain a specific string.\n\"\"\"\n\ndef remove_substrings(str, not_contain):\n    return re.sub(r'[a-z]+?'+not_contain+'[a-z]+?', '', str)\n\nprint(remove_substrings('AAAAbBcCdDeE', 'B'))\n\n\"\"\"\nWrite a function"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def remove_uppercase_substrings(text):\n    \"\"\"\n    >>> remove_uppercase_substrings(\"Hello world\")\n    'Hello world'\n    >>> remove_uppercase_substrings(\"Hello world, how are you?\")\n    'Hello world, how are you?'\n    >>> remove_uppercase_substrings(\"Hello world, how are you? I am fine!\")\n    'Hello world, how are you? I am fine!'\n    >>> remove_uppercase_substrings(\"I am fine!\")\n    'I am fine!'\n    >>> remove_uppercase_substrings(\"\")\n    ''\n    \"\"\"\n\n    # split the string at all uppercase letters\n    splits = text.split(\"[A-Z]+\")\n\n    # join the string back and remove the spaces\n    return \"\".join(splits)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    }
  ]
}