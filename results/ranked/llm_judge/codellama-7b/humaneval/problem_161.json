{
  "timestamp": "2025-09-14T22:16:45.706498",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "humaneval",
  "problem_number": 161,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "# s = list(s)\n    # if s.islower():\n    #     return s.upper()\n    # elif s.isupper():\n    #     return s.lower()\n    # else:\n    #     return s\n    return s.swapcase()\n\n\ndef solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = list(s)\n    if not any(c.isalpha() for c in s):\n        s.reverse()\n    else:\n        for i in range(len(s)):\n            if s[i].isalpha():\n                s[i] = s[i].swapcase()\n    return ''.join(s)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "if not s:\n        return s\n    s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].swapcase()\n    return ''.join(s)\n\n\ndef solve2(s):\n    return s.swapcase() if not s.isalpha() else s.swapcase() if s.islower() else s\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "if len(s)==0:\n        return s[::-1]\n    else:\n        s1 = [i.upper() if i.islower() else i.lower() for i in s]\n        return ''.join(s1)\n\n\nprint(solve('ab'))\nprint(solve('Ab'))\nprint(solve('ab'))\nprint(solve('Ab'))\nprint(solve('1234'))\nprint(solve('#a@C'))\nprint(solve('1234'))\nprint(solve('1234'))\nprint(solve('1234'))\nprint(solve('1234'))\nprint(solve(''))\nprint(solve(' '))\nprint(solve('  '))\nprint(solve('    '))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaBb'))\nprint(solve('  AaB"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "if len(s) == 0:\n        return s\n    elif s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n\n\ndef solve_pythonic(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return s.swapcase() if s.isalpha() else s[::-1]"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "result = []\n    for i in s:\n        if i.isalpha():\n            result.append(i.swapcase())\n        else:\n            result.append(i)\n    return \"\".join(result)[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "s_list = list(s)\n    for i in range(len(s_list)):\n        if s_list[i].isalpha():\n            if s_list[i].islower():\n                s_list[i] = s_list[i].upper()\n            else:\n                s_list[i] = s_list[i].lower()\n    return \"\".join(s_list)\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "if s.isalpha():\n        return s.swapcase()\n    return s[::-1]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\n\n# 2nd solution\ndef solve(s):\n    return s.swapcase() if s.isalpha() else s[::-1]"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "# return s.swapcase()\n\n    # 2nd solution\n    res = ''\n    for i in s:\n        if 'a' <= i <= 'z':\n            res += i.upper()\n        elif 'A' <= i <= 'Z':\n            res += i.lower()\n        else:\n            res += i\n    return res\n\n\n    # 3rd solution\n    # return s.swapcase() if s.isalpha() else s[::-1]\n\n    # 4th solution\n    # if not s.isalpha():\n    #     return s[::-1]\n    # return s.swapcase()\n\n    # 5th solution\n    # return s.swapcase() if s.isalpha() else s[::-1]\n\n    # 6th solution\n    # return s.swapcase() if s.isalpha() else s[::-1]\n\n    # 7th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 8th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 9th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 10th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 11th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 12th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 13th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 14th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 15th solution\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\n    # 16th solution\n    # return s[::-"
    },
    {
      "rank": 9,
      "score": 9.99247653178691,
      "candidate": "result = ''\n    for char in s:\n        if char.isalpha():\n            result += char.swapcase()\n        else:\n            result += char\n    return result if result else s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 10,
      "score": 9.984877874468129,
      "candidate": "# Your code here\n    # pass\n    new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    return new_string\n\n\nprint(solve(\"ab\"))\nprint(solve(\"Ab\"))\nprint(solve(\"Abc\"))\nprint(solve(\"AbCd\"))\nprint(solve(\"1234\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"!@#$%^&*()\"))"
    },
    {
      "rank": 11,
      "score": 9.970964496754052,
      "candidate": "return \"\".join(c.swapcase() if c.isalpha() else c for c in s)"
    },
    {
      "rank": 12,
      "score": 9.953868903554122,
      "candidate": "result = []\n    for char in s:\n        if char.isalpha():\n            if char.islower():\n                result.append(char.upper())\n            else:\n                result.append(char.lower())\n        else:\n            result.append(char)\n    return ''.join(result)[::-1]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 13,
      "score": 9.9508277913081,
      "candidate": "# s1=[]\n    # for i in range(len(s)):\n    #     if s[i].isalpha():\n    #         s1.append(s[i].swapcase())\n    #     else:\n    #         s1.append(s[i])\n    # return ''.join(s1[::-1])\n\n    s1 = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s1.append(s[i].swapcase())\n        else:\n            s1.append(s[i])\n    return ''.join(s1[::-1])\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 14,
      "score": 9.936768223926249,
      "candidate": "# return ''.join([str(x) for x in s[::-1]])\n    return s.swapcase()\n    # return s.translate(s.maketrans(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\"abcdefghijklmnopqrstuvwxyz\"))\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 15,
      "score": 9.902682284509384,
      "candidate": "result = []\n    for i in s:\n        if i.isalpha():\n            if i.isupper():\n                result.append(i.lower())\n            else:\n                result.append(i.upper())\n        else:\n            result.append(i)\n    return ''.join(result)\n\n\nif __name__ == '__main__':\n    print(solve(\"abAB\"))"
    },
    {
      "rank": 16,
      "score": 9.902196751750246,
      "candidate": "res = []\n    for c in s:\n        if c.isalpha():\n            res.append(c.swapcase())\n        else:\n            res.append(c)\n    return \"\".join(res)\n\n\ndef solve(s):\n    return s.swapcase() if s.isalpha() else s\n\n\nprint(solve(\"ab\"))\nprint(solve(\"ab1\"))\nprint(solve(\"ab1a\"))\nprint(solve(\"1234\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"AbA\"))\nprint(solve(\"Ab\"))"
    },
    {
      "rank": 17,
      "score": 9.873641611431827,
      "candidate": "new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    if new_string == \"\":\n        return s[::-1]\n    else:\n        return new_string\n    # return s[::-1] if not s.isalpha() else s.swapcase()\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 18,
      "score": 9.721080929731329,
      "candidate": "result = []\n    for i in s:\n        if i.isalpha():\n            result.append(i.swapcase())\n        else:\n            result.append(i)\n    return \"\".join(result)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"1234abc#ABC\"))\nprint(solve(\"ABCabc#abc\"))\nprint(solve(\"1234ABC#abc\"))\nprint(solve(\"1234ABC#ABC\"))\nprint(solve(\"1234ABC#ABc\"))\nprint(solve(\"1234ABC#ABC\"))\nprint(solve(\"1234ABC#ABc\"))\nprint(solve(\"1234ABC#ABc\"))"
    },
    {
      "rank": 19,
      "score": 9.70341622271959,
      "candidate": "new_s = ''\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_s += i.upper()\n            else:\n                new_s += i.lower()\n        else:\n            new_s += i\n    if new_s == '':\n        new_s = s[::-1]\n    return new_s"
    },
    {
      "rank": 20,
      "score": 9.598211148621862,
      "candidate": "if len(s) == 0:\n        return s\n    else:\n        result = \"\"\n        for i in s:\n            if i.isalpha():\n                if i.islower():\n                    result += i.upper()\n                else:\n                    result += i.lower()\n            else:\n                result += i\n        return result"
    },
    {
      "rank": 21,
      "score": 9.588469273985247,
      "candidate": "# return s[::-1] if len(s) == 0 else ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n    if not s or len(s) == 0: return s[::-1]\n    return ''.join(c.lower() if c.isupper() else c.upper() for c in s)\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"\"))"
    },
    {
      "rank": 22,
      "score": 9.370583536698913,
      "candidate": "rev = ''\n    for i in s:\n        if i.isalpha():\n            rev += i.swapcase()\n        else:\n            rev += i\n    return rev or s[::-1]\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 23,
      "score": 9.234050852198141,
      "candidate": "# Your code here\n    s1 = \"\"\n    for i in s:\n        if i.isalpha():\n            s1 += i.swapcase()\n        else:\n            s1 += i\n    if s1 == \"\":\n        return s[::-1]\n    else:\n        return s1\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 24,
      "score": 9.205959372648458,
      "candidate": "# Your code here\n    result = []\n    for i in s:\n        if i.isalpha():\n            result.append(i.swapcase())\n        else:\n            result.append(i)\n    return \"\".join(result) if result else s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 25,
      "score": 9.183391466815202,
      "candidate": "res = []\n    for x in s:\n        if x.isalpha():\n            res.append(x.swapcase())\n        else:\n            res.append(x)\n    return \"\".join(res)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"123aB\"))\nprint(solve(\"A123aB\"))\nprint(solve(\"123aB4\"))"
    },
    {
      "rank": 26,
      "score": 9.177268828905222,
      "candidate": "pass\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 27,
      "score": 9.122564458729856,
      "candidate": "# your code here\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n\nif __name__ == '__main__':\n    with open('input.txt') as f:\n        test_cases = f.readlines()\n        for t in test_cases:\n            print(solve(t))"
    },
    {
      "rank": 28,
      "score": 8.95994420569242,
      "candidate": "# first, get the indices of the letters\n    letters = [i for i, c in enumerate(s) if c.isalpha()]\n    # if there are no letters, return the reversed string\n    if not letters:\n        return s[::-1]\n    # otherwise, reverse the letters and return the string\n    return s[:letters[0]] + \"\".join(c.upper() if c.islower() else c.lower() for c in s[letters[0]:letters[-1]+1]) + s[letters[-1]+1:]\n\nprint(solve(\"ab\"))"
    },
    {
      "rank": 29,
      "score": 8.932217008005624,
      "candidate": "if not s.isalpha():\n        return s[::-1]\n    return s.swapcase()"
    },
    {
      "rank": 30,
      "score": 8.910084504002544,
      "candidate": "if not s or s.isdigit():\n        return s[::-1]\n    return \"\".join(\n        [\n            c.upper() if c.islower() else c.lower()\n            for c in s\n        ]\n    )"
    },
    {
      "rank": 31,
      "score": 8.85571690049604,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].swapcase()\n    return \"\".join(s)\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 32,
      "score": 8.855395696632057,
      "candidate": "return ''.join(c.upper() if c.islower() else c.lower() if c.isupper() else c for c in s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 33,
      "score": 8.850707355641543,
      "candidate": "if not s:\n        return s\n    else:\n        return ''.join([(c.upper() if c.islower() else c.lower()) for c in s])\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 34,
      "score": 8.8281618090209,
      "candidate": "return \"\".join([c.upper() if c.islower() else c.lower() for c in s]) if s.isalpha() else s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"aBc\"))"
    },
    {
      "rank": 35,
      "score": 8.81367773444215,
      "candidate": "pass\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"Ab12c\"))"
    },
    {
      "rank": 36,
      "score": 8.76828871349479,
      "candidate": "if s.isalpha():\n        return s.swapcase()\n    if s.isdigit():\n        return s[::-1]\n    else:\n        return s[::-1].swapcase()"
    },
    {
      "rank": 37,
      "score": 8.750282588864879,
      "candidate": "output = []\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                output.append(i.upper())\n            else:\n                output.append(i.lower())\n        else:\n            output.append(i)\n    return ''.join(output[::-1])\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    print('OK')"
    },
    {
      "rank": 38,
      "score": 8.715724466237427,
      "candidate": "def get_rev_letter(letter):\n        return letter.lower() if letter.isupper() else letter.upper()\n\n    new_s = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            new_s += get_rev_letter(s[i])\n        else:\n            new_s += s[i]\n    return new_s if len(new_s) > 0 else s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 39,
      "score": 8.692801520950061,
      "candidate": "new_str = ''\n    for c in s:\n        if c.isalpha():\n            if c.islower():\n                new_str += c.upper()\n            else:\n                new_str += c.lower()\n        else:\n            new_str += c\n    if new_str == '':\n        return s[::-1]\n    return new_str\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 40,
      "score": 8.625262456968262,
      "candidate": "if not s:\n        return s\n    if not s[0].isalpha():\n        return s[::-1]\n    result = []\n    for letter in s:\n        if letter.islower():\n            result.append(letter.upper())\n        else:\n            result.append(letter.lower())\n    return ''.join(result)\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 41,
      "score": 8.625142247198651,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n    return \"\".join(s)\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 42,
      "score": 8.623000730200317,
      "candidate": "if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 43,
      "score": 8.610076160146226,
      "candidate": "if not s:\n        return s\n    new_s = []\n    for char in s:\n        if char.isalpha():\n            if char.islower():\n                new_s.append(char.upper())\n            else:\n                new_s.append(char.lower())\n        else:\n            new_s.append(char)\n    return \"\".join(new_s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\"))"
    },
    {
      "rank": 44,
      "score": 8.606486429141842,
      "candidate": "new_string = []\n    for letter in s:\n        if letter.isalpha():\n            if letter.islower():\n                new_string.append(letter.upper())\n            else:\n                new_string.append(letter.lower())\n        else:\n            new_string.append(letter)\n    return \"\".join(new_string[::-1])\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 45,
      "score": 8.565425580227462,
      "candidate": "new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    return new_string\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"abcdef\"))"
    },
    {
      "rank": 46,
      "score": 8.548876241946822,
      "candidate": "return s.swapcase() if s.isalpha() else s[::-1]"
    },
    {
      "rank": 47,
      "score": 8.542875062379007,
      "candidate": "return \"\".join(reversed(s)) if not any(x.isalpha() for x in s) else \"\".join(\n        [x.swapcase() if x.isalpha() else x for x in s]\n    )"
    },
    {
      "rank": 48,
      "score": 8.53012858503943,
      "candidate": "return ''.join(reversed(s)) if not s.isalpha() else s.swapcase()\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 49,
      "score": 8.499905739299377,
      "candidate": "if not s.isalpha():\n        return s[::-1]\n    return s.swapcase()"
    },
    {
      "rank": 50,
      "score": 8.490324832712195,
      "candidate": "if s.isalpha():\n        return s.swapcase()\n    elif not s.isalpha():\n        return s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 51,
      "score": 8.478208546788407,
      "candidate": "res = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                res.append(s[i].upper())\n            else:\n                res.append(s[i].lower())\n        else:\n            res.append(s[i])\n    return ''.join(res)\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 52,
      "score": 8.437695832075478,
      "candidate": "new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.isupper():\n                new_string += i.lower()\n            else:\n                new_string += i.upper()\n        else:\n            new_string += i\n    return new_string\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 53,
      "score": 8.386620303250325,
      "candidate": "return s.swapcase() if s.isalpha() else s[::-1]"
    },
    {
      "rank": 54,
      "score": 8.351614956112536,
      "candidate": "pass\n    #return s\n    s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n    return ''.join(s)\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 55,
      "score": 8.331556294201176,
      "candidate": "return ''.join(\n        [\n            char.upper() if char.islower() else char.lower()\n            for char in s\n            if char.isalpha()\n        ] or s[::-1]\n    )"
    },
    {
      "rank": 56,
      "score": 8.327375965969855,
      "candidate": "# return s.swapcase()\n    return \"\".join(reversed(s))\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 57,
      "score": 8.298597569547805,
      "candidate": "return ''.join(map(lambda x: x.swapcase() if x.isalpha() else x, s))\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 58,
      "score": 8.294940769211511,
      "candidate": "res = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                res += s[i].upper()\n            else:\n                res += s[i].lower()\n        else:\n            res += s[i]\n    return res if res else s[::-1]"
    },
    {
      "rank": 59,
      "score": 8.289838256518838,
      "candidate": "res = ''\n    for char in s:\n        if char.isalpha():\n            res += char.swapcase()\n        else:\n            res += char\n    return res if res else s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"AbC123\"))"
    },
    {
      "rank": 60,
      "score": 8.251903304236286,
      "candidate": "if len(s) == 0:\n        return s\n    elif not s[0].isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 61,
      "score": 8.214125058964552,
      "candidate": "result = \"\"\n    for char in s:\n        if char.isalpha():\n            if char.islower():\n                result += char.upper()\n            else:\n                result += char.lower()\n        else:\n            result += char\n    if len(result) == 0:\n        return s[::-1]\n    return result"
    },
    {
      "rank": 62,
      "score": 8.209707251476969,
      "candidate": "# Your code here\n    res = ''\n    for c in s:\n        if c.isalpha():\n            if c.islower():\n                res += c.upper()\n            else:\n                res += c.lower()\n        else:\n            res += c\n    if not res:\n        return s[::-1]\n    return res\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 63,
      "score": 8.2048573255218,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        i = 0\n        while i < len(s):\n            if s[i].isalpha():\n                if s[i].isupper():\n                    s = s[:i] + s[i].lower() + s[i+1:]\n                else:\n                    s = s[:i] + s[i].upper() + s[i+1:]\n                i += 1\n            i += 1\n        return s\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"Ab c\"))\n    print(solve(\"ab c\"))\n    print(solve(\"Ab3 c\"))\n    print(solve(\"Ab3  c\"))\n    print(solve(\"Ab3  c!\"))\n    print(solve(\"Ab3  c!d\"))\n    print(solve(\"Ab3  c!d\"))\n    print(solve(\"\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aBc\"))\n    print(solve(\"aB"
    },
    {
      "rank": 64,
      "score": 8.185309335307622,
      "candidate": "lst = list(s)\n    for i in range(len(lst)):\n        if lst[i].isalpha():\n            lst[i] = lst[i].swapcase()\n    return \"\".join(lst)\n\n\nif __name__ == \"__main__\":\n    print(solve(\"abCdEfG\"))\n    print(solve(\"ab12c\"))\n    print(solve(\"abc\"))\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"Abc\"))"
    },
    {
      "rank": 65,
      "score": 8.172253082181854,
      "candidate": "res = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                res += s[i].upper()\n            else:\n                res += s[i].lower()\n        else:\n            res += s[i]\n    if res == \"\":\n        res = s[::-1]\n    return res\n\n\nprint(solve(\"aBcDe\"))"
    },
    {
      "rank": 66,
      "score": 8.163300679823958,
      "candidate": "if not s or not s.isalnum():\n        return s[::-1]\n    \n    result = ''\n    \n    for char in s:\n        if char.isalpha():\n            if char.isupper():\n                result += char.lower()\n            else:\n                result += char.upper()\n        else:\n            result += char\n    \n    return result"
    },
    {
      "rank": 67,
      "score": 8.144125099485041,
      "candidate": "# create a variable to hold the reversed string\n    result = \"\"\n    # loop through the string\n    for i in range(len(s)):\n        # check if the character is a letter\n        if s[i].isalpha():\n            # if it is, add the opposite letter to the reversed string\n            if s[i].islower():\n                result = result + s[i].upper()\n            else:\n                result = result + s[i].lower()\n        else:\n            # if it is not a letter, add the character to the reversed string\n            result = result + s[i]\n    # return the reversed string\n    return result\n\n# print(solve(\"1234\")) # = \"4321\"\n# print(solve(\"ab\")) # = \"AB\"\n# print(solve(\"#a@C\")) # = \"#A@c\""
    },
    {
      "rank": 68,
      "score": 8.121884567141883,
      "candidate": "return s.swapcase() if s.isalnum() else s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 69,
      "score": 8.105983444291466,
      "candidate": "return s.swapcase() if s.isalpha() else s[::-1]\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 70,
      "score": 8.08452234024709,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n    return \"\".join(s)\n\nprint(solve(\"1234\")) # = \"4321\"\nprint(solve(\"ab\")) # = \"AB\"\nprint(solve(\"#a@C\")) # = \"#A@c\"\nprint(solve(\"A1234b\")) # = \"4321bA\""
    },
    {
      "rank": 71,
      "score": 8.040197642997851,
      "candidate": "# Your code here\n    if not s.isalpha():\n        return s[::-1]\n    return ''.join(map(lambda x: x.upper() if x.islower() else x.lower(), s))"
    },
    {
      "rank": 72,
      "score": 8.024835682833125,
      "candidate": "def reverse_case(c):\n        return c.swapcase() if c.isalpha() else c\n    return \"\".join(map(reverse_case, s)) if s else s[::-1]"
    },
    {
      "rank": 73,
      "score": 7.990432406683839,
      "candidate": "# Your code here\n    pass\n\n\nprint(solve(\"ab\"))"
    },
    {
      "rank": 74,
      "score": 7.938028884277233,
      "candidate": "return \"\".join(c.lower() if c.isupper() else c.upper() for c in s if c.isalpha()) or s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"!#\"))\n    print(solve(\"\"))"
    },
    {
      "rank": 75,
      "score": 7.915588979966494,
      "candidate": "# return s.swapcase()\n    return s.translate(str.maketrans(string.ascii_lowercase + string.ascii_uppercase, string.ascii_uppercase + string.ascii_lowercase))\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 76,
      "score": 7.8912769574414305,
      "candidate": "# return \"\".join(c.swapcase() if c.isalpha() else c for c in s)\n    result = []\n    for c in s:\n        if c.isalpha():\n            result.append(c.swapcase())\n        else:\n            result.append(c)\n    return \"\".join(result)\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 77,
      "score": 7.868947655733293,
      "candidate": "return s.swapcase() if s.isalpha() else s[::-1]"
    },
    {
      "rank": 78,
      "score": 7.84634113240411,
      "candidate": "if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 79,
      "score": 7.834022619458933,
      "candidate": "res = \"\"\n    for i in s:\n        if i.isalpha():\n            res += i.swapcase()\n        else:\n            res += i\n    return res if len(res) > 0 else res.swapcase()\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 80,
      "score": 7.7320703513377165,
      "candidate": "result = ''\n    for i in s:\n        if i.isalpha():\n            result += i.swapcase()\n        else:\n            result += i\n    return result if result else s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"Abc\"))\n    print(solve(\"Abc1234\"))"
    },
    {
      "rank": 81,
      "score": 7.705183449260731,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return ''.join([c.upper() if c.islower() else c.lower() if c.isupper() else c for c in s])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 82,
      "score": 7.5819855281879285,
      "candidate": "new_s = []\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_s.append(i.upper())\n            else:\n                new_s.append(i.lower())\n        else:\n            new_s.append(i)\n    return ''.join(new_s[::-1])\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"Ab\"))\n    print(solve(\"A1B2c3\"))\n    print(solve(\"A1B2c3@!#\"))\n    print(solve(\"A1B2c3@!#$%^&*()\"))"
    },
    {
      "rank": 83,
      "score": 7.562924366763077,
      "candidate": "new_s = []\n    for i in s:\n        if i.isalpha():\n            new_s.append(i.swapcase())\n        else:\n            new_s.append(i)\n    return \"\".join(new_s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 84,
      "score": 7.4506599871439985,
      "candidate": "new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    return new_string"
    },
    {
      "rank": 85,
      "score": 7.134571892399572,
      "candidate": "new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    if len(new_string) == 0:\n        return s[::-1]\n    return new_string"
    },
    {
      "rank": 86,
      "score": 3.0,
      "candidate": "return s.swapcase() if s.isalpha() else s[::-1]\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(solve(\"1234\"))\n\n    # These \"asserts\" are used for self-checking and not for an auto-testing\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    assert solve(\"AB ac\") == \"AC ab\"\n    assert solve(\"abAc\") == \"ACab\"\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "new_s = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_s += i.upper()\n            else:\n                new_s += i.lower()\n        else:\n            new_s += i\n    if not new_s:\n        new_s = s[::-1]\n    return new_s\n\n\ndef solve(s):\n    return s.swapcase() if s.isalpha() else s[::-1]"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "# Please print out this multiple-line result, \n    # end=\" \" will print this result start at same line.\n    return s[::-1] if not any(c.isalpha() for c in s) else \"\".join(c.swapcase() if c.isalpha() else c for c in s)\n\n\nif __name__ == '__main__':\n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert solve(\"Hlo, wrld\") == \"hLO, wrld\", \"Greetins\"\n    assert solve(\"1234\") == \"4321\", \"Digits\"\n    assert solve(\"Hello, world!\") == \"hELLEO, DWORL!\", \"UPPER-lower-UPPER\"\n    assert solve(\"1a2b3\") == \"3B2A1\", \"Digits+letters\"\n    assert solve(\"A man, a plan, a canal: Panama\") == \"a ANAM, a lanap, a canal: Panama\", \"Reverse!\"\n    print(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "if not s.isalpha():\n        return s[::-1]\n    else:\n        return s.swapcase()\n\n\ndef solve_two(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n        return \"\".join(x if x.isalpha() else x.swapcase() for x in s)\n\n\ndef solve_three(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s.isalpha():\n        return s[::-1]\n    else:\n        return \"\".join(\n            [x.swapcase() if x.isalpha() else x for x in s]\n        )\n\n\ndef solve_four(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return \"\".join(\n        [x"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "new_string = ''\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    return new_string\n\n\ndef solve_in_place(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    new_string = ''\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            else:\n                new_string += i.lower()\n        else:\n            new_string += i\n    return new_string\n\n\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"Ab\"))\nprint(solve(\"ab\"))\nprint(solve(\"Ab\"))\nprint(solve(\"1234\"))\nprint(solve(\"Ab\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"1234\"))\nprint(solve(\"123"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "#return s.swapcase()\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n\ndef solve2(s):\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve2(\"1234\"))\n    print(solve2(\"ab\"))\n    print(solve2(\"#a@C\"))"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "# Your code here\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution\n    return s.swapcase() if s.isalpha() else s[::-1]\n\n    # Alternative solution"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "result = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                result += i.upper()\n            else:\n                result += i.lower()\n        else:\n            result += i\n    if result == \"\":\n        return s[::-1]\n    return result\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(solve(\"1234\"))\n\n    # These \"asserts\" are used for self-checking and not for an auto-testing\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"Ab\") == \"ab\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    assert solve(\"A12b@34\") == \"4321#b@A\"\n    assert solve(\"acb\") == \"cba\"\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "# your code here\n    return ''.join(i.upper() if i.islower() else i.lower() for i in s if i.isalpha()) or s[::-1]\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(solve(\"1234\"))\n\n    # These \"asserts\" are used for self-checking and not for an auto-testing\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    assert solve(\"AB ac\") == \"ac AB\"\n    assert solve(\"ac AB\") == \"ac AB\"\n    assert solve(\"ac ac\") == \"ac ac\"\n    assert solve(\"AC ac\") == \"ac AC\"\n    assert solve(\"AaB bC\") == \"aB BA\"\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "output = ''\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                output += s[i].upper()\n            else:\n                output += s[i].lower()\n        else:\n            output += s[i]\n    return output if len(output) != 0 else s[::-1]\n\n\ndef solve2(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return ''.join([i.upper() if i.islower() else i.lower() for i in s]) if any([i.isalpha() for i in s]) else s[::-1]\n\n\ndef solve3(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return ''.join([i.upper() if i.islower() else i.lower() for i in s]) if any([i.isalpha() for i in s]) else s[::-1]"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "# your code here\n    s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].swapcase()\n    return ''.join(s)\n\n\nif __name__ == '__main__':\n    print(\"Example:\")\n    print(solve(\"1234\"))\n\n    # These \"asserts\" are used for self-checking and not for an auto-testing\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"Ab\") == \"ab\"\n    assert solve(\"Abc\") == \"acb\"\n    assert solve(\"ABC\") == \"abc\"\n    assert solve(\"abc\") == \"abc\"\n    assert solve(\"ABC1234\") == \"4321abc\"\n    assert solve(\"india\") == \"INDIA\"\n    assert solve(\"India\") == \"iNdIa\"\n    assert solve(\"1234abcd\") == \"dcba4321\"\n    assert solve(\"1234Abcd\") == \"dcba4321\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    print(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "# s.reverse()\n    # return s\n    # # return s[::-1]\n    # return s.lower()\n    # return s.upper()\n    # return s.swapcase()\n    # return s.title()\n    # return s.capitalize()\n    # return s.casefold()\n    # return s.center(5)\n    # return s.count('a')\n    # return s.encode()\n    # return s.endswith('a')\n    # return s.expandtabs(tabsize=4)\n    # return s.find('a')\n    # return s.format()\n    # return s.index('a')\n    # return s.isalnum()\n    # return s.isalpha()\n    # return s.isascii()\n    # return s.isdecimal()\n    # return s.isdigit()\n    # return s.isidentifier()\n    # return s.islower()\n    # return s.isnumeric()\n    # return s.isprintable()\n    # return s.isspace()\n    # return s.istitle()\n    # return s.isupper()\n    # return s.join('a')\n    # return s.ljust(5)\n    # return s.lower()\n    # return s.lstrip()\n    # return s.maketrans()\n    # return s.partition('a')\n    # return s.removeprefix('a')\n    # return s.removesuffix('a')\n    # return s.replace('a', 'b')\n    # return s.rfind('a')\n    # return s.rindex('a')\n    # return s.rjust(5)\n    # return s.rpartition('a')\n    # return s.rsplit('a')\n    # return s.rstrip()\n    # return s.split('a')\n    # return s.splitlines()\n    # return s.startswith('a')\n    # return s.strip()\n    # return s.swapcase()\n    # return s.title()\n    # return s.translate()\n    # return s.upper()\n    # return s.zfill(5)"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "if len(s) == 0:\n        return s\n\n    new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string += i.upper()\n            elif i.isupper():\n                new_string += i.lower()\n        else:\n            new_string += i\n    return new_string\n\n\ndef solve_2(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n\n    new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string = i.upper() + new_string\n            elif i.isupper():\n                new_string = i.lower() + new_string\n        else:\n            new_string = i + new_string\n    return new_string\n\n\ndef solve_3(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n\n    new_string = \"\"\n    for i in s:\n        if i.isalpha():\n            if i.islower():\n                new_string = i.upper() + new_string\n            elif i.isupper():\n                new"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "# your code here\n    # return s[::-1]\n    if not s.isalpha():\n        return s[::-1]\n\n    new_s = \"\"\n    for i in s:\n        if i.islower():\n            new_s += i.upper()\n        else:\n            new_s += i.lower()\n    return new_s\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"1234\"))\n    print(solve(\"Ab\"))"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "rev = ''\n    for i in s:\n        if i.isalpha():\n            rev = rev + i.swapcase()\n        else:\n            rev = rev + i\n    return rev\n\n\n\ndef solve2(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    rev = ''\n    for i in s:\n        if i.isalpha():\n            rev = rev + i.swapcase()\n        else:\n            rev = rev + i\n    return rev\n\n\n\ndef solve3(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    rev = ''\n    for i in s:\n        if i.isalpha():\n            rev = rev + i.swapcase()\n        else:\n            rev = rev + i\n    return rev\n\n\n\ndef solve4(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    rev"
    }
  ]
}