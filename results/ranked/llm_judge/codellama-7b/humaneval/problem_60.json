{
  "timestamp": "2025-09-14T21:31:38.642723",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codellama-7b",
  "dataset": "humaneval",
  "problem_number": 60,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "total = 0\n    for num in range(1, n + 1):\n        total += num\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\ndef sum_to_n_recursive(n: int):\n    \"\"\"sum_to_n_recursive is a function that sums numbers from 1 to n.\n    >>> sum_to_n_recursive(30)\n    465\n    >>> sum_to_n_recursive(100)\n    5050\n    >>> sum_to_n_recursive(5)\n    15\n    >>> sum_to_n_recursive(10)\n    55\n    >>> sum_to_n_recursive(1)\n    1\n    \"\"\"\n    if n == 0:\n        return 0\n    return n + sum_to_n_recursive(n - 1)\n\n\ndef sum_to_n_iterative(n: int):\n    \"\"\"sum_to_n_iterative is a function that sums numbers from 1 to n.\n    >>> sum_to_n_iterative(30)\n    465\n    >>> sum_to_n_iterative(100)\n    5050\n    >>> sum_to_n_iterative(5)\n    15\n    >>> sum_to_n_iterative(10)\n    55\n    >>> sum_to_n_iterative(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\ndef main():\n    n = int(input(\"Enter n: \"))\n    print(\"Sum of 1 to n:\", sum_to_n(n))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "return sum([x for x in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "return sum(range(1, n+1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\ndef sum_to_n_faster(n: int):\n    \"\"\"sum_to_n_faster is a function that sums numbers from 1 to n.\n    >>> sum_to_n_faster(30)\n    465\n    >>> sum_to_n_faster(100)\n    5050\n    >>> sum_to_n_faster(5)\n    15\n    >>> sum_to_n_faster(10)\n    55\n    >>> sum_to_n_faster(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\ndef is_prime(n: int):\n    \"\"\"is_prime is a function that returns true if the number is prime\n    >>> is_prime(2)\n    True\n    >>> is_prime(13)\n    True\n    >>> is_prime(10)\n    False\n    >>> is_prime(30)\n    False\n    >>> is_prime(1)\n    False\n    \"\"\"\n    return n > 1 and all(n % i for i in range(2, int(n ** 0.5) + 1))\n\n\ndef factorial(n: int):\n    \"\"\"factorial is a function that returns the factorial of a number\n    >>> factorial(4)\n    24\n    >>> factorial(5)\n    120\n    >>> factorial(6)\n    720\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "sum_to_n_list = []\n    for i in range(1, n + 1):\n        sum_to_n_list.append(i)\n    return sum(sum_to_n_list)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "pass\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "pass"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    else:\n        return n + sum_to_n(n-1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\ndef sum_to_n_v2(n: int):\n    \"\"\"sum_to_n_v2 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v2(30)\n    465\n    >>> sum_to_n_v2(100)\n    5050\n    >>> sum_to_n_v2(5)\n    15\n    >>> sum_to_n_v2(10)\n    55\n    >>> sum_to_n_v2(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef sum_to_n_v3(n: int):\n    \"\"\"sum_to_n_v3 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v3(30)\n    465\n    >>> sum_to_n_v3(100)\n    5050\n    >>> sum_to_n_v3(5)\n    15\n    >>> sum_to_n_v3(10)\n    55\n    >>> sum_to_n_v3(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\ndef sum_to_n_v4(n: int):\n    \"\"\"sum_to_n_v4 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v4(30)\n    465\n    >>> sum_to_n_v4(100)\n    5050\n    >>> sum_to_n_v4(5)\n    15\n    >>> sum_to_n_v4(10)\n    55\n    >>> sum_to_n_v4(1)\n    1\n    \"\"\"\n    return int(n * (n + 1) / 2)"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    else:\n        return sum_to_n(n - 1) + n\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n-1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "return sum(range(1, n+1))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    return sum_to_n(n - 1) + n\n\n\ndef sum_to_n_recursion(n: int):\n    \"\"\"sum_to_n_recursion is a recursive function that sums numbers from 1 to n.\n    >>> sum_to_n_recursion(30)\n    465\n    >>> sum_to_n_recursion(100)\n    5050\n    >>> sum_to_n_recursion(5)\n    15\n    >>> sum_to_n_recursion(10)\n    55\n    >>> sum_to_n_recursion(1)\n    1\n    \"\"\"\n    if n == 0:\n        return 0\n    return n + sum_to_n_recursion(n - 1)\n\n\ndef factorial_recursion(n: int):\n    \"\"\"factorial_recursion is a recursive function that computes the factorial of n.\n    >>> factorial_recursion(5)\n    120\n    >>> factorial_recursion(6)\n    720\n    >>> factorial_recursion(7)\n    5040\n    \"\"\"\n    if n == 0 or n == 1:\n        return 1\n    return n * factorial_recursion(n - 1)\n\n\ndef fibonacci(n: int):\n    \"\"\"fibonacci is a function that computes the nth number in the Fibonacci sequence.\n    >>> fibonacci(10)\n    55\n    >>> fibonacci(15)\n    610\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return fibonacci(n - 1) + fibonacci(n - 2)\n\n\ndef fibonacci_recursion(n: int):\n    \"\"\"fibonacci_recursion is a recursive function that computes the nth number in the Fibonacci sequence.\n    >>> fibonacci_recursion(10)"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n    print(\"The total is: \", sum_to_n(100))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "return sum(range(1, n+1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "sum_value = 0\n    for i in range(1, n + 1):\n        sum_value += i\n    return sum_value\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "sum_to_n = 0\n    for i in range(1, n+1):\n        sum_to_n += i\n    return sum_to_n\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    else:\n        return n + sum_to_n(n - 1)"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "if n <= 0:\n        return 0\n    return sum_to_n(n - 1) + n\n\n\ndef sum_to_n_v2(n: int):\n    \"\"\"sum_to_n_v2 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v2(30)\n    465\n    >>> sum_to_n_v2(100)\n    5050\n    >>> sum_to_n_v2(5)\n    15\n    >>> sum_to_n_v2(10)\n    55\n    >>> sum_to_n_v2(1)\n    1\n    \"\"\"\n    return n if n == 0 else sum_to_n_v2(n - 1) + n\n\n\ndef sum_to_n_v3(n: int):\n    \"\"\"sum_to_n_v3 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v3(30)\n    465\n    >>> sum_to_n_v3(100)\n    5050\n    >>> sum_to_n_v3(5)\n    15\n    >>> sum_to_n_v3(10)\n    55\n    >>> sum_to_n_v3(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) / 2\n\n\ndef sum_to_n_v4(n: int):\n    \"\"\"sum_to_n_v4 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v4(30)\n    465\n    >>> sum_to_n_v4(100)\n    5050\n    >>> sum_to_n_v4(5)\n    15\n    >>> sum_to_n_v4(10)\n    55\n    >>> sum_to_n_v4(1)\n    1\n    \"\"\"\n    if n <= 0:\n        return 0\n    return n + sum_to_n_v4"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 40,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\ndef sum_to_n_fast(n: int):\n    \"\"\"sum_to_n_fast is a function that sums numbers from 1 to n.\n    >>> sum_to_n_fast(30)\n    465\n    >>> sum_to_n_fast(100)\n    5050\n    >>> sum_to_n_fast(5)\n    15\n    >>> sum_to_n_fast(10)\n    55\n    >>> sum_to_n_fast(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 41,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 42,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\ndef test_sum_to_n():\n    assert sum_to_n(30) == 465\n    assert sum_to_n(100) == 5050\n    assert sum_to_n(5) == 15\n    assert sum_to_n(10) == 55\n    assert sum_to_n(1) == 1\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 43,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    else:\n        return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 44,
      "score": 10.0,
      "candidate": "# your code here\n    return 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 45,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 46,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\ndef sum_to_n_recursive(n: int):\n    \"\"\"sum_to_n_recursive is a function that sums numbers from 1 to n.\n    >>> sum_to_n_recursive(30)\n    465\n    >>> sum_to_n_recursive(100)\n    5050\n    >>> sum_to_n_recursive(5)\n    15\n    >>> sum_to_n_recursive(10)\n    55\n    >>> sum_to_n_recursive(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n + sum_to_n_recursive(n-1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n    print(sum_to_n(30))"
    },
    {
      "rank": 48,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 10.0,
      "candidate": "return sum(range(1, n+1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 50,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 51,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 53,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    else:\n        return sum_to_n(n - 1) + n\n\n\ndef main():\n    print(sum_to_n(100))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 55,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 56,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 57,
      "score": 10.0,
      "candidate": "if n <= 1:\n        return n\n    else:\n        return n + sum_to_n(n-1)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()\n    print(sum_to_n(int(input(\"Enter a number: \"))))"
    },
    {
      "rank": 58,
      "score": 10.0,
      "candidate": "# return sum(range(1, n+1))\n    s = 0\n    for i in range(1, n+1):\n        s += i\n    return s\n\n\ndef sum_to_n_recursive(n: int):\n    \"\"\"sum_to_n_recursive is a function that sums numbers from 1 to n.\n    >>> sum_to_n_recursive(30)\n    465\n    >>> sum_to_n_recursive(100)\n    5050\n    >>> sum_to_n_recursive(5)\n    15\n    >>> sum_to_n_recursive(10)\n    55\n    >>> sum_to_n_recursive(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    return n + sum_to_n_recursive(n-1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 59,
      "score": 10.0,
      "candidate": "return int((n * (n + 1)) / 2)"
    },
    {
      "rank": 60,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n    testmod()"
    },
    {
      "rank": 61,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 62,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n - 1)"
    },
    {
      "rank": 63,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n    print(sum_to_n(int(input().strip())))"
    },
    {
      "rank": 64,
      "score": 10.0,
      "candidate": "return sum(range(1, n+1))\n\n\ndef sum_to_n_2(n: int):\n    \"\"\"sum_to_n_2 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_2(30)\n    465\n    >>> sum_to_n_2(100)\n    5050\n    >>> sum_to_n_2(5)\n    15\n    >>> sum_to_n_2(10)\n    55\n    >>> sum_to_n_2(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n+1):\n        total += i\n    return total\n\n\ndef sum_to_n_3(n: int):\n    \"\"\"sum_to_n_3 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_3(30)\n    465\n    >>> sum_to_n_3(100)\n    5050\n    >>> sum_to_n_3(5)\n    15\n    >>> sum_to_n_3(10)\n    55\n    >>> sum_to_n_3(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) / 2\n\n\ndef sum_to_n_4(n: int):\n    \"\"\"sum_to_n_4 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_4(30)\n    465\n    >>> sum_to_n_4(100)\n    5050\n    >>> sum_to_n_4(5)\n    15\n    >>> sum_to_n_4(10)\n    55\n    >>> sum_to_n_4(1)\n    1\n    \"\"\"\n    return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 65,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 66,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n\n    return sum\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 67,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\ndef sum_to_n_list_comp(n: int):\n    \"\"\"sum_to_n_list_comp is a function that sums numbers from 1 to n.\n    >>> sum_to_n_list_comp(30)\n    465\n    >>> sum_to_n_list_comp(100)\n    5050\n    >>> sum_to_n_list_comp(5)\n    15\n    >>> sum_to_n_list_comp(10)\n    55\n    >>> sum_to_n_list_comp(1)\n    1\n    \"\"\"\n    return sum([i for i in range(1, n + 1)])\n\n\ndef sum_to_n_gen_exp(n: int):\n    \"\"\"sum_to_n_gen_exp is a function that sums numbers from 1 to n.\n    >>> sum_to_n_gen_exp(30)\n    465\n    >>> sum_to_n_gen_exp(100)\n    5050\n    >>> sum_to_n_gen_exp(5)\n    15\n    >>> sum_to_n_gen_exp(10)\n    55\n    >>> sum_to_n_gen_exp(1)\n    1\n    \"\"\"\n    return sum(i for i in range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()"
    },
    {
      "rank": 68,
      "score": 10.0,
      "candidate": "pass\n\n\ndef sum_to_n_no_for(n: int):\n    \"\"\"sum_to_n_no_for is a function that sums numbers from 1 to n.\n    >>> sum_to_n_no_for(30)\n    465\n    >>> sum_to_n_no_for(100)\n    5050\n    >>> sum_to_n_no_for(5)\n    15\n    >>> sum_to_n_no_for(10)\n    55\n    >>> sum_to_n_no_for(1)\n    1\n    \"\"\"\n    pass\n\n\ndef sum_to_n_no_for_no_while(n: int):\n    \"\"\"sum_to_n_no_for_no_while is a function that sums numbers from 1 to n.\n    >>> sum_to_n_no_for_no_while(30)\n    465\n    >>> sum_to_n_no_for_no_while(100)\n    5050\n    >>> sum_to_n_no_for_no_while(5)\n    15\n    >>> sum_to_n_no_for_no_while(10)\n    55\n    >>> sum_to_n_no_for_no_while(1)\n    1\n    \"\"\"\n    pass\n\n\ndef sum_to_n_no_for_no_while_no_recursion(n: int):\n    \"\"\"sum_to_n_no_for_no_while_no_recursion is a function that sums numbers from 1 to n.\n    >>> sum_to_n_no_for_no_while_no_recursion(30)\n    465\n    >>> sum_to_n_no_for_no_while_no_recursion(100)\n    5050\n    >>> sum_to_n_no_for_no_while_no_recursion(5)\n    15\n    >>> sum_to_n_no_for_no_while_no_recursion(10)\n    5"
    },
    {
      "rank": 69,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum"
    },
    {
      "rank": 70,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    else:\n        return sum_to_n(n - 1) + n\n\n\nprint(sum_to_n(5))"
    },
    {
      "rank": 71,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 72,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 73,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    else:\n        return n + sum_to_n(n - 1)\n\n\ndef sum_to_n_v2(n: int):\n    \"\"\"sum_to_n_v2 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v2(30)\n    465\n    >>> sum_to_n_v2(100)\n    5050\n    >>> sum_to_n_v2(5)\n    15\n    >>> sum_to_n_v2(10)\n    55\n    >>> sum_to_n_v2(1)\n    1\n    \"\"\"\n\n    return n if n == 1 else n + sum_to_n_v2(n - 1)\n\n\ndef sum_to_n_v3(n: int):\n    \"\"\"sum_to_n_v3 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v3(30)\n    465\n    >>> sum_to_n_v3(100)\n    5050\n    >>> sum_to_n_v3(5)\n    15\n    >>> sum_to_n_v3(10)\n    55\n    >>> sum_to_n_v3(1)\n    1\n    \"\"\"\n\n    return sum([i for i in range(1, n + 1)])\n\n\ndef sum_to_n_v4(n: int):\n    \"\"\"sum_to_n_v4 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_v4(30)\n    465\n    >>> sum_to_n_v4(100)\n    5050\n    >>> sum_to_n_v4(5)\n    15\n    >>> sum_to_n_v4(10)\n    55\n    >>> sum_to_n_v4(1)\n    1\n    \"\"\"\n\n    return (n * (n + 1)) //"
    },
    {
      "rank": 74,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 75,
      "score": 9.0,
      "candidate": "return sum(range(1, n+1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 76,
      "score": 9.0,
      "candidate": "if n <= 0:\n        return 0\n    return sum_to_n(n - 1) + n"
    },
    {
      "rank": 77,
      "score": 9.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 78,
      "score": 9.0,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 79,
      "score": 9.0,
      "candidate": "return sum(range(1, n + 1))\n\n\ndef sum_to_n_with_loop(n: int):\n    \"\"\"sum_to_n_with_loop is a function that sums numbers from 1 to n.\n    >>> sum_to_n_with_loop(30)\n    465\n    >>> sum_to_n_with_loop(100)\n    5050\n    >>> sum_to_n_with_loop(5)\n    15\n    >>> sum_to_n_with_loop(10)\n    55\n    >>> sum_to_n_with_loop(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\ndef sum_to_n_with_list(n: int):\n    \"\"\"sum_to_n_with_list is a function that sums numbers from 1 to n.\n    >>> sum_to_n_with_list(30)\n    465\n    >>> sum_to_n_with_list(100)\n    5050\n    >>> sum_to_n_with_list(5)\n    15\n    >>> sum_to_n_with_list(10)\n    55\n    >>> sum_to_n_with_list(1)\n    1\n    \"\"\"\n    return sum(list(range(1, n + 1)))\n\n\ndef sum_to_n_with_list_comp(n: int):\n    \"\"\"sum_to_n_with_list_comp is a function that sums numbers from 1 to n.\n    >>> sum_to_n_with_list_comp(30)\n    465\n    >>> sum_to_n_with_list_comp(100)\n    5050\n    >>> sum_to_n_with_list_comp(5)\n    15\n    >>> sum_to_n_with_list_comp(10)\n    55\n    >>> sum_to_n_with_list_comp(1)\n    1\n    \"\"\""
    },
    {
      "rank": 80,
      "score": 9.0,
      "candidate": "return sum(range(1, n+1))"
    },
    {
      "rank": 81,
      "score": 9.0,
      "candidate": "return sum([i for i in range(1, n + 1)])"
    },
    {
      "rank": 82,
      "score": 9.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 83,
      "score": 9.0,
      "candidate": "# return the sum of n and the sum of n - 1\n    # return n + sum_to_n(n - 1)\n    total = 0\n    for i in range(n):\n        total += i + 1\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 84,
      "score": 9.0,
      "candidate": "sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "if n <= 1:\n        return n\n    return n + sum_to_n(n-1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "return sum(range(1, n+1))\n\n\ndef sum_to_n_2(n: int):\n    \"\"\"sum_to_n_2 is a function that sums numbers from 1 to n.\n    >>> sum_to_n_2(30)\n    465\n    >>> sum_to_n_2(100)\n    5050\n    >>> sum_to_n_2(5)\n    15\n    >>> sum_to_n_2(10)\n    55\n    >>> sum_to_n_2(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "return n * (n + 1) // 2\n\n\ndef sum_to_n_without_loop(n: int):\n    \"\"\"sum_to_n_without_loop is a function that sums numbers from 1 to n.\n    >>> sum_to_n_without_loop(30)\n    465\n    >>> sum_to_n_without_loop(100)\n    5050\n    >>> sum_to_n_without_loop(5)\n    15\n    >>> sum_to_n_without_loop(10)\n    55\n    >>> sum_to_n_without_loop(1)\n    1\n    \"\"\"\n    return (n * (n + 1)) // 2\n\n\ndef sum_to_n_with_for_loop(n: int):\n    \"\"\"sum_to_n_with_for_loop is a function that sums numbers from 1 to n.\n    >>> sum_to_n_with_for_loop(30)\n    465\n    >>> sum_to_n_with_for_loop(100)\n    5050\n    >>> sum_to_n_with_for_loop(5)\n    15\n    >>> sum_to_n_with_for_loop(10)\n    55\n    >>> sum_to_n_with_for_loop(1)\n    1\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\ndef sum_to_n_with_while_loop(n: int):\n    \"\"\"sum_to_n_with_while_loop is a function that sums numbers from 1 to n.\n    >>> sum_to_n_with_while_loop(30)\n    465\n    >>> sum_to_n_with_while_loop(100)\n    5050\n    >>> sum_to_n_with_while_loop(5)\n    15\n    >>> sum_to_n_with_while_loop(10)\n    55\n    >>> sum_to_n_with_while_"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "# Base case\n    if n == 1:\n        return 1\n\n    # Recursive case\n    else:\n        return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "return sum(range(1, n+1))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "if n == 0:\n        return 0\n    else:\n        return n + sum_to_n(n-1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n - 1)"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "# Base Case\n    if n <= 0:\n        return 0\n    # Recursive Case\n    else:\n        return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "if n == 0:\n        return 0\n    else:\n        return sum_to_n(n-1) + n\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "return sum(range(1, n+1))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 8.0,
      "candidate": "if n == 1:\n        return 1\n    else:\n        return sum_to_n(n - 1) + n\n\n\ndef sum_to_n_recursive_optimized(n: int):\n    \"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 3\n    else:\n        return sum_to_n_recursive_optimized(n - 1) + n\n\n\ndef sum_to_n_recursive_optimized_2(n: int):\n    \"\"\"sum_to_n is a function that sums numbers from 1 to n.\n    >>> sum_to_n(30)\n    465\n    >>> sum_to_n(100)\n    5050\n    >>> sum_to_n(5)\n    15\n    >>> sum_to_n(10)\n    55\n    >>> sum_to_n(1)\n    1\n    \"\"\"\n    if n == 1 or n == 2:\n        return n\n    else:\n        return sum_to_n_recursive_optimized_2(n - 1) + n"
    },
    {
      "rank": 99,
      "score": 8.0,
      "candidate": "return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "return sum(range(1, n+1))\n\n\ndef sum_to_n_slow(n: int):\n    \"\"\"sum_to_n_slow is a function that sums numbers from 1 to n.\n    >>> sum_to_n_slow(30)\n    465\n    >>> sum_to_n_slow(100)\n    5050\n    >>> sum_to_n_slow(5)\n    15\n    >>> sum_to_n_slow(10)\n    55\n    >>> sum_to_n_slow(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n+1):\n        total += i\n    return total\n\n\ndef sum_to_n_slowest(n: int):\n    \"\"\"sum_to_n_slowest is a function that sums numbers from 1 to n.\n    >>> sum_to_n_slowest(30)\n    465\n    >>> sum_to_n_slowest(100)\n    5050\n    >>> sum_to_n_slowest(5)\n    15\n    >>> sum_to_n_slowest(10)\n    55\n    >>> sum_to_n_slowest(1)\n    1\n    \"\"\"\n    total = 0\n    for i in range(1, n+1):\n        total += i\n    return total"
    }
  ]
}