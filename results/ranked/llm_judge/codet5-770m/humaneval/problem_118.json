{
  "timestamp": "2025-09-14T12:07:54.282715",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 118,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_count = [0, 0, 0, 0, 0]\n    vowels_closest = \"\"\n    for i in range(len(word)-1, -1, -1):\n        if word[i] in vowels:\n            vowels_count[vowels.index(word[i])] += 1\n    for i in range(len(vowels_count)):\n        if vowels_count[i] < 2:\n            vowels_closest = vowels[i]\n    return vowels_closest"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    return min(vowels, key=lambda x: len(x) - len(word))\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcd\") == \"a\"\n    assert get_closest_vowel(\"abcdabcdab\") == \"a\"\n    assert get_closest_vowel(\"abcdabcdabcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcdabcdabcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\") == \"a\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdab"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "# Your code here\n    # Create a dictionary to store the consonant in the word\n    vowels = {\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"}\n    word_dict = {}\n    for i in range(len(word)):\n        if word[i] in vowels:\n            word_dict[i] = word[i]\n    # Get the closest vowel from the dictionary\n    closest_vowel = max(word_dict, key=word_dict.get)\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "vowels = \"aeiou\"\n    start = 0\n    end = len(word) - 1\n    closest_vowel = \"\"\n    while start <= end:\n        if word[start] in vowels:\n            if word[end] in vowels:\n                if word[start] == word[end]:\n                    return \"\"\n                else:\n                    return word[start]\n            else:\n                if word[end] in vowels:\n                    return \"\"\n                else:\n                    return word[end]\n        elif word[start] in vowels:\n            start += 1\n        elif word[end] in vowels:\n            end -= 1\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "# Your code here\n\n    # check if the given string has any vowel\n    if not any(char in \"aeiou\" for char in word):\n        return \"\"\n\n    # if the first and last vowel are the same\n    if word[0] == word[-1]:\n        return word[0]\n\n    # otherwise, we need to check the two consecutive vowels\n    else:\n        # find the first vowel\n        first_vowel = word[0]\n\n        # find the second vowel\n        second_vowel = word[-1]\n\n        # if the first vowel is the same as the second vowel\n        if first_vowel == second_vowel:\n            return word[0]\n\n        # if the first vowel is not the same as the second vowel\n        else:\n            return \"\""
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "# Your code here\n    vowel_dict = {\n        \"a\": \"A\",\n        \"e\": \"E\",\n        \"i\": \"I\",\n        \"o\": \"O\",\n        \"u\": \"U\",\n        \"A\": \"a\",\n        \"E\": \"e\",\n        \"I\": \"i\",\n        \"O\": \"o\",\n        \"U\": \"u\",\n        \"y\": \"y\",\n        \"Y\": \"y\",\n        \"r\": \"r\",\n        \"R\": \"r\",\n        \"S\": \"S\",\n        \"T\": \"T\",\n        \"U\": \"u\",\n        \"V\": \"V\",\n        \"I\": \"i\",\n        \"O\": \"o\",\n        \"U\": \"u\",\n        \"A\": \"A\",\n        \"E\": \"E\",\n        \"I\": \"i\",\n        \"O\": \"o\",\n        \"U\": \"u\",\n        \"Y\": \"y\",\n        \"Y\": \"y\",\n        \"r\": \"r\",\n        \"R\": \"r\",\n        \"S\": \"S\",\n        \"T\": \"T\",\n        \"U\": \"u\",\n        \"V\": \"V\",\n        \"I\": \"i\",\n        \"O\": \"o\",\n        \"U\": \"u\",\n        \"y\": \"y\",\n        \"Y\": \"y\",\n        \"r\": \"r\",\n        \"R\": \"r\",\n        \"S\": \"S\",\n        \"T\": \"T\",\n        \"U\": \"u\",\n        \"V\": \"V\",\n        \"I\": \"i\",\n        \"O\": \"o\",\n        \"U\": \"u\",\n        \"Y\": \"y\",\n        \"r\": \"r\",\n        \"R\": \"r\",\n        \"S\": \"S\",\n        \"T\": \"T\",\n        \"U\": \"u\",\n        \"V\": \"V\",\n        \"I\": \"i\",\n        \"O\": \"o\",\n        \"U\": \"u\",\n        \"Y\": \"y\",\n        \"r\": \"r\",\n        \"R\": \"r\",\n        \"S\": \"S\","
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "# Your code here\n    vowels = 'aeiouAEIOU'\n    vowels_count = {}\n    for vowel in vowels:\n        vowels_count[vowel] = vowels_count.get(vowel, 0) + 1\n    \n    #print(vowels_count)\n    \n    #print(vowels_count['A'])\n    #print(vowels_count['E'])\n    #print(vowels_count['I'])\n    #print(vowels_count['O'])\n    #print(vowels_count['U'])\n    \n    #print(vowels_count['a'])\n    #print(vowels_count['e'])\n    #print(vowels_count['i'])\n    #print(vowels_count['o'])\n    #print(vowels_count['u'])\n    \n    #print(vowels_count['yogurt'])\n    #print(vowels_count['FULL'])\n    #print(vowels_count['quick'])\n    #print(vowels_count['ab'])\n    \n    min_count = 9999999999\n    min_vowel = ''\n    for vowel in vowels_count:\n        #print(vowel)\n        if vowels_count[vowel] < min_count:\n            min_count = vowels_count[vowel]\n            min_vowel = vowel\n    \n    return min_vowel\n\n\n#get_closest_vowel(\"yogurt\")\n#get_closest_vowel(\"FULL\")\n#get_closest_vowel(\"quick\")\n#get_closest_vowel(\"ab\")"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "# Your code here\n    # 1. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 2. Write an algorithm that takes in two strings and returns a string\n    #    that has the closest vowel.\n    # 3. Write an algorithm that takes in two strings and returns a string\n    #    that has the closest vowel.\n    # 4. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n\n    # Your code here\n    # 1. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 2. Write an algorithm that takes in two strings and returns a string\n    #    that has the closest vowel.\n    # 3. Write an algorithm that takes in two strings and returns a string\n    #    that has the closest vowel.\n    # 4. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n\n    # Your code here\n    # 1. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 2. Write an algorithm that takes in two strings and returns a string\n    #    that has the closest vowel.\n    # 3. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 4. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n\n    # Your code here\n    # 1. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 2. Write an algorithm that takes in two strings and returns a string\n    #    that has the closest vowel.\n    # 3. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 4. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n\n    # Your code here\n    # 1. Write an algorithm that takes in a string and returns a string\n    #    that has the closest vowel.\n    # 2. Write an algorithm that takes in two strings and returns a string"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "# Your code here\n    return \"\""
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "# Your code here\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\n    for i in range(len(word)-1):\n        if word[i] in vowels:\n            if word[i+1] in vowels:\n                return word[i+1]\n    return \"\"\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "return \"\"\n\n\ndef get_closest_vowel_2(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel_2(\"yogurt\") ==> \"u\"\n    get_closest_vowel_2(\"FULL\") ==> \"U\"\n    get_closest_vowel_2(\"quick\") ==> \"\"\n    get_closest_vowel_2(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    return \"\"\n\n\ndef get_closest_vowel_3(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel_3(\"yogurt\") ==> \"u\"\n    get_closest_vowel_3(\"FULL\") ==> \"U\"\n    get_closest_vowel_3(\"quick\") ==> \"\"\n    get_closest_vowel_3(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    return \"\"\n\n\ndef get_closest_vowel_4(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def get_closest_vowel_recursive(word, start, end):\n        if end > len(word) - 1:\n            return \"\"\n\n        if end - start == 1:\n            return word[start]\n\n        if word[start] == word[end]:\n            return word[start]\n\n        return get_closest_vowel_recursive(word, start + 1, end - 1)\n\n    return get_closest_vowel_recursive(word, 0, len(word) - 1)\n\n\ndef get_closest_vowel_recursive_2(word, start, end):\n    if end > len(word) - 1:\n        return \"\"\n\n    if end - start == 1:\n        return word[start]\n\n    if word[start] == word[end]:\n        return word[start]\n\n    if word[start] in \"aeiouAEIOU\":\n        return word[start]\n\n    if word[start] in \"aeiouAEIOUAEIOU\":\n        return word[end]\n\n    if word[end] in \"aeiouAEIOUAEIOU\":\n        return word[start]\n\n    return get_closest_vowel_recursive_2(word, start + 1, end - 1)\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))\n\nprint(get_closest_vowel_recursive(\"yogurt\"))\nprint(get_closest_vowel_recursive(\"FULL\"))\nprint(get_closest_vowel_recursive(\"quick\"))\nprint(get_closest_vowel_recursive(\"ab\"))\n\nprint(get_closest_vowel_recursive_2(\"yogurt\"))\nprint(get_closest_vowel_recursive_2(\"FULL\"))\nprint(get_closest_vowel_recursive_2(\"quick\"))\nprint(get_closest_vowel_recursive_2(\"ab\"))"
    },
    {
      "rank": 13,
      "score": 9.99211827139581,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    closest = ''\n    for i in range(len(word)):\n        if word[i] in vowels:\n            if i - 1 >= 0 and word[i - 1] in vowels:\n                if word[i + 1] in vowels:\n                    if word[i] < word[i - 1]:\n                        closest = word[i]\n            else:\n                if word[i] in vowels:\n                    if word[i + 1] in vowels:\n                        if word[i] < word[i - 1]:\n                            closest = word[i]\n    return closest\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abc\") == \"c\"\n    assert get_closest_vowel(\"abcd\") == \"c\"\n    assert get_closest_vowel(\"abcdabcd\") == \"c\"\n    assert get_closest_vowel(\"abcdabcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcd\") == \"\"\n\n\nif __name__ == \"__main__\":\n    test_get_closest_vowel()"
    },
    {
      "rank": 14,
      "score": 9.984157773252326,
      "candidate": "# Your code here\n    if not word:\n        return ''\n\n    if word[0] in 'aeiouAEIOU':\n        return word[0]\n    else:\n        vowels = ['a', 'e', 'i', 'o', 'u']\n        for v in vowels:\n            if v in word:\n                return v\n        return ''\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 15,
      "score": 9.951672184675747,
      "candidate": "if word.isalpha():\n        word = word.lower()\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    i = 0\n    j = len(word) - 1\n    while i < j:\n        if word[i] in vowels and word[j] in vowels:\n            return word[j]\n        if word[i] not in vowels:\n            i += 1\n        if word[j] not in vowels:\n            j -= 1\n    return \"\"\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"\") == \"\""
    },
    {
      "rank": 16,
      "score": 9.897539454214543,
      "candidate": "vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n    closest_vowel = \"\"\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels:\n            if word[i] == word[i + 1]:\n                continue\n            if i == 0:\n                closest_vowel = word[i]\n            elif word[i] == word[i - 1]:\n                continue\n            else:\n                closest_vowel = word[i]\n    return closest_vowel\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 17,
      "score": 9.894581667674036,
      "candidate": "vowel_dict = {'a': 'a', 'e': 'e', 'i': 'i', 'o': 'o', 'u': 'u', 'A': 'a', 'E': 'e', 'I': 'i', 'O': 'o', 'U': 'u'}\n    closest_vowel = ''\n    for c in word:\n        if c in vowel_dict:\n            if len(closest_vowel) == 0:\n                closest_vowel = c\n            elif len(closest_vowel) > 0:\n                if vowel_dict[c] < vowel_dict[closest_vowel]:\n                    closest_vowel = c\n            else:\n                closest_vowel = c\n        else:\n            closest_vowel = ''\n    return closest_vowel\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 18,
      "score": 9.81537214489102,
      "candidate": "vowel_dict = {'a': 'e', 'e': 'i', 'i': 'o', 'o': 'u', 'u': 'A'}\n    word = word.lower()\n    for i in range(len(word) - 1):\n        if word[i] in vowel_dict:\n            if word[i + 1] in vowel_dict:\n                return vowel_dict[word[i + 1]]\n    return ''"
    },
    {
      "rank": 19,
      "score": 9.731414397006375,
      "candidate": "# Your code here\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # print(vowels)\n    # print(word)\n    # print(type(word))\n    # print(len(word))\n    # print(type(vowels))\n    # print(type(vowels[0]))\n    # print(vowels[0])\n    # print(vowels[0].isalpha())\n    # print(vowels[0].islower())\n    # print(vowels[0].isupper())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print(vowels[0].isdigit())\n    # print"
    },
    {
      "rank": 20,
      "score": 9.689293185706235,
      "candidate": "# Your code here\n\n    # TODO: 1. Use a dictionary to store all the possible vowels\n    #       in the word and a list to store all the possible\n    #       consonants in the word.\n    #       For example, if the word is \"yogurt\", the dictionary\n    #       should look like this:\n    #       {\"a\": [\"u\"], \"e\": [\"U\"], \"i\": [\"U\"], \"o\": [\"U\"],\n    #        \"u\": [\"U\"], \"y\": [\"U\"], \"yogurt\": [\"U\"]}\n    #       Then the list should look like this:\n    #       [\n    #           \"u\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"u\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"u\",\n    #           \"U\",\n    #           \"u\",\n    #           \"u\",\n    #           \"U\",\n    #           \"U\",\n    #           \"u\",\n    #           \"U\",\n    #           \"u\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"u\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \"U\",\n    #           \""
    },
    {
      "rank": 21,
      "score": 9.579078346175285,
      "candidate": "word = word.lower()\n    if word[0] == word[-1]:\n        return word\n    else:\n        return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 22,
      "score": 9.562734838787804,
      "candidate": "vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    index = 0\n    for i in range(len(word)):\n        if word[i] not in vowels:\n            index = i\n            break\n    if index == 0:\n        return \"\"\n    else:\n        return vowels[index-1]\n\ndef get_closest_vowel_recursive(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel_recursive(\"yogurt\") ==> \"u\"\n    get_closest_vowel_recursive(\"FULL\") ==> \"U\"\n    get_closest_vowel_recursive(\"quick\") ==> \"\"\n    get_closest_vowel_recursive(\"ab\") ==> \"\"\n    \"\"\"\n    if word == \"\":\n        return \"\"\n    else:\n        if word[0] not in vowels:\n            return word[0]\n        else:\n            return get_closest_vowel_recursive(word[1:])\n\ndef get_closest_vowel_recursive_2(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel_recursive_2(\"yogurt\") ==> \"u\"\n    get_closest_vowel_recursive_2(\"FULL\") ==> \"U\"\n    get_closest_vowel_recursive_2(\"quick\") ==> \"\"\n    get_closest_vowel_recursive_2(\"ab\") ==> \"\""
    },
    {
      "rank": 23,
      "score": 9.370583536698913,
      "candidate": "vowels = \"aeiouAEIOU\"\n    i = 0\n    while i < len(word) - 1:\n        if word[i] not in vowels:\n            i += 1\n        else:\n            return word[i]\n    return \"\""
    },
    {
      "rank": 24,
      "score": 9.234050852198141,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_count = [0, 0, 0, 0, 0]\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_count[i] += 1\n\n    min_count = float('inf')\n    min_vowel = ''\n\n    for i in range(len(vowels_count)):\n        if vowels_count[i] < min_count:\n            min_count = vowels_count[i]\n            min_vowel = vowels[i]\n\n    return min_vowel\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 25,
      "score": 9.21346272767743,
      "candidate": "vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    closest_vowel = \"\"\n    for i in range(len(word)-1):\n        if word[i] in vowels:\n            if word[i+1] in vowels:\n                if word[i+1] < word[i]:\n                    closest_vowel = word[i+1]\n            else:\n                if word[i+1] < word[i]:\n                    closest_vowel = word[i+1]\n    return closest_vowel\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 26,
      "score": 9.122564458729856,
      "candidate": "vowels = \"aeiou\"\n    start = 0\n    end = len(word)-1\n    while start <= end:\n        if word[start] in vowels and word[end] in vowels:\n            if start == 0:\n                return word[end]\n            elif end == len(word)-1:\n                return \"\"\n            else:\n                return word[end]\n        elif word[start] in vowels:\n            start += 1\n        elif word[end] in vowels:\n            end -= 1\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 27,
      "score": 8.973005557553902,
      "candidate": "if len(word) == 0:\n        return ''\n    \n    # Your code here\n    vowels = ['a','e','i','o','u']\n    i = 0\n    j = len(word)-1\n    while i < j:\n        if word[i] not in vowels:\n            if word[j] in vowels:\n                return word[i]\n            else:\n                return word[j]\n        i += 1\n    return ''"
    },
    {
      "rank": 28,
      "score": 8.95994420569242,
      "candidate": "word = word.lower()\n    word_len = len(word)\n    if word_len == 0:\n        return ''\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    if word[0] in vowels:\n        return word[1]\n    elif word_len == 1:\n        return word[0]\n    elif word_len == 2:\n        return word[0]\n    elif word_len == 3:\n        return word[0]\n    else:\n        return ''\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 29,
      "score": 8.910084504002544,
      "candidate": "vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    closest_vowel = \"\"\n\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_count += 1\n\n        if vowels_count == 2:\n            closest_vowel = word[i]\n            break\n\n    return closest_vowel\n\n\nif __name__ == \"__main__\":\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\""
    },
    {
      "rank": 30,
      "score": 8.85571690049604,
      "candidate": "vowel_map = {\"a\": \"u\", \"e\": \"U\", \"i\": \"i\", \"o\": \"o\", \"u\": \"u\"}\n    vowel_dict = {}\n    for char in word:\n        if char in vowel_map.keys():\n            vowel_dict[char] = vowel_map[char]\n        else:\n            return \"\"\n    closest_vowel = \"\"\n    for vowel in vowel_dict.keys():\n        if vowel_dict[vowel] < vowel_dict[closest_vowel]:\n            closest_vowel = vowel\n    return closest_vowel\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 31,
      "score": 8.855395696632057,
      "candidate": "vowels = 'aeiou'\n    word = word.lower()\n    closest = ''\n    for i in range(len(word)-1):\n        if word[i] not in vowels:\n            continue\n        if word[i+1] not in vowels:\n            continue\n        if word[i]!= word[i+1]:\n            return ''\n        if word[i] == word[i+1]:\n            continue\n        if word[i] < word[i+1]:\n            return word[i]\n        if word[i] > word[i+1]:\n            return word[i]\n    return ''\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel('yogurt'))\n    print(get_closest_vowel('FULL'))\n    print(get_closest_vowel('quick'))\n    print(get_closest_vowel('ab'))"
    },
    {
      "rank": 32,
      "score": 8.850707355641543,
      "candidate": "# Your code here\n    if len(word) <= 1:\n        return \"\"\n\n    vowels = ['a', 'e', 'i', 'o', 'u']\n\n    if word[0] in vowels:\n        if word[-1] in vowels:\n            return word[-1]\n\n        return word[0]\n\n    elif word[-1] in vowels:\n        return word[-1]\n\n    return word[0]"
    },
    {
      "rank": 33,
      "score": 8.8281618090209,
      "candidate": "vowel_dict = {'a': 'u', 'e': 'e', 'i': 'i', 'o': 'o', 'u': 'u'}\n    # return '' if not any vowel\n    for vowel in vowel_dict:\n        if vowel in word:\n            return vowel\n    return ''\n\n\nif __name__ == '__main__':\n    assert get_closest_vowel(\"yogurt\") == \"u\", \"yogurt\"\n    assert get_closest_vowel(\"FULL\") == \"U\", \"FULL\"\n    assert get_closest_vowel(\"quick\") == \"\", \"quick\"\n    assert get_closest_vowel(\"ab\") == \"\", \"ab\""
    },
    {
      "rank": 34,
      "score": 8.81367773444215,
      "candidate": "vowels = 'aeiou'\n    l = len(word)\n    if l == 0:\n        return \"\"\n    if l < 2:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[1:-1] in vowels:\n        return word[1:-1]\n    if word[-2:] in vowels:\n        return word[-2:]\n    return \"\""
    },
    {
      "rank": 35,
      "score": 8.750282588864879,
      "candidate": "vowels = 'aeiou'\n    if word[0] in vowels:\n        vowels.remove(word[0])\n    if word[-1] in vowels:\n        vowels.remove(word[-1])\n    if word[len(word)-1] in vowels:\n        vowels.remove(word[len(word)-1])\n    if len(vowels) == 0:\n        return \"\"\n    vowels.sort()\n    return vowels[-1]\n\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))\n    print(get_closest_vowel(\"abcd\"))\n    print(get_closest_vowel(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcd\"))"
    },
    {
      "rank": 36,
      "score": 8.715724466237427,
      "candidate": "if word == \"\":\n        return \"\"\n    else:\n        vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n        i = 0\n        while i < len(word) - 1:\n            if word[i] in vowels:\n                if word[i + 1] in vowels:\n                    if word[i + 2] in vowels:\n                        return word[i + 1]\n                    else:\n                        return word[i + 2]\n            i += 1\n        return \"\""
    },
    {
      "rank": 37,
      "score": 8.632293453617281,
      "candidate": "closest_vowel = \"\"\n    if len(word) == 0:\n        return closest_vowel\n    vowel_list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in range(len(word) - 1):\n        if word[i] in vowel_list:\n            if word[i + 1] in vowel_list:\n                if word[i] == word[i + 1]:\n                    return word[i]\n                else:\n                    return word[i] + word[i + 1]\n            else:\n                return word[i]\n        else:\n            return word[i]\n    return closest_vowel\n\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 38,
      "score": 8.625142247198651,
      "candidate": "if len(word) == 0:\n        return \"\"\n    \n    vowels = \"aeiouAEIOU\"\n    closest_vowel = \"\"\n\n    for i in range(len(word)-1):\n        if word[i] not in vowels:\n            if word[i+1] not in vowels:\n                return \"\"\n            if word[i] == word[i+1]:\n                if i == 0:\n                    closest_vowel = word[i]\n                elif i == len(word)-1:\n                    closest_vowel = word[i]\n                else:\n                    closest_vowel = min(closest_vowel, word[i])\n    return closest_vowel\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 39,
      "score": 8.623000730200317,
      "candidate": "# Write your code here\n    word = word.lower()\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels_set = set(vowels)\n    for i in range(len(word)-1):\n        if word[i] not in vowels_set:\n            return word[i]\n    return \"\"\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 40,
      "score": 8.610076160146226,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    word = word.lower()\n    for i in range(len(word)):\n        if word[i] not in vowels:\n            return \"\"\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] not in vowels:\n            return \"\"\n    return word[0]\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 41,
      "score": 8.606486429141842,
      "candidate": "# Your code here\n    vowels = \"aeiouAEIOU\"\n    min_vowel_count = float(\"inf\")\n    min_vowel_index = None\n    for i in range(len(word)-1):\n        if word[i] in vowels:\n            if word[i+1] in vowels:\n                if word[i] < min_vowel_count:\n                    min_vowel_count = word[i]\n                    min_vowel_index = i\n    return vowels[min_vowel_index]\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 42,
      "score": 8.565425580227462,
      "candidate": "if len(word) < 2:\n        return \"\"\n    vowel_dict = {\"a\":0,\"e\":1,\"i\":2,\"o\":3,\"u\":4}\n    start_index = 0\n    end_index = len(word) - 1\n    while start_index < end_index:\n        if word[start_index] not in vowel_dict:\n            start_index += 1\n        elif word[end_index] not in vowel_dict:\n            end_index -= 1\n        else:\n            break\n    if start_index == end_index:\n        return word[end_index]\n    else:\n        return \"\""
    },
    {
      "rank": 43,
      "score": 8.548876241946822,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(word) - 1):\n        if word[i] in vowels:\n            if word[i+1] in vowels:\n                return word[i+1]\n    return \"\"\n\nif __name__ == '__main__':\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\""
    },
    {
      "rank": 44,
      "score": 8.542875062379007,
      "candidate": "if word == \"\":\n        return \"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    if len(word) > 1:\n        # Find the closest vowel that stands between two consonants from the right\n        # side of the word\n        for i in range(len(word)-1):\n            if word[i] in vowels:\n                if word[i+1] in vowels:\n                    return word[i+1]\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 45,
      "score": 8.53012858503943,
      "candidate": "vowels = 'aeiou'\n    vowels_count = {}\n    for i in range(len(word)):\n        if word[i] in vowels:\n            if word[i-1] in vowels and word[i+1] in vowels:\n                if word[i-1] not in vowels_count:\n                    vowels_count[word[i-1]] = 1\n                else:\n                    vowels_count[word[i-1]] += 1\n                if word[i+1] not in vowels_count:\n                    vowels_count[word[i+1]] = 1\n                else:\n                    vowels_count[word[i+1]] += 1\n    min_count = min(vowels_count.values())\n    min_index = vowels_count.keys().index(min_count)\n    return vowels[min_index]\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 46,
      "score": 8.490324832712195,
      "candidate": "if word == \"\":\n        return \"\"\n    vowels = 'aeiou'\n    vowels_count = 0\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_count += 1\n    if vowels_count == 0:\n        return \"\"\n    if vowels_count == 1:\n        return vowels[0]\n    if vowels_count == 2:\n        return vowels[1]\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 47,
      "score": 8.48796797856353,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    if word.lower() in vowels:\n        return word.lower()\n    else:\n        return \"\"\n\n\ndef main():\n    print(get_closest_vowel('yogurt'))\n    print(get_closest_vowel('FULL'))\n    print(get_closest_vowel('quick'))\n    print(get_closest_vowel('ab'))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 48,
      "score": 8.478208546788407,
      "candidate": "vowels = ['a','e','i','o','u']\n    closest_vowel = ''\n    for vowel in vowels:\n        if word.count(vowel) < 2:\n            closest_vowel = vowel\n            break\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 49,
      "score": 8.437695832075478,
      "candidate": "# Your code here\n    vowels = 'aeiou'\n    for i in range(len(word)-1):\n        if word[i] in vowels:\n            if word[i+1] in vowels:\n                return word[i+1]\n    return \"\"\n\n# Test Cases\nprint(get_closest_vowel(\"yogurt\")) #> 'u'\nprint(get_closest_vowel(\"FULL\")) #> 'U'\nprint(get_closest_vowel(\"quick\")) #> ''\nprint(get_closest_vowel(\"ab\")) #> ''"
    },
    {
      "rank": 50,
      "score": 8.386620303250325,
      "candidate": "word = word.lower()\n    vowels = \"aeiou\"\n    start = 0\n    end = len(word) - 1\n    closest_vowel = \"\"\n    while start <= end:\n        if word[start] in vowels:\n            if word[end] in vowels:\n                if start - 1 >= 0:\n                    if word[start - 1] in vowels:\n                        if word[end] in vowels:\n                            if word[end] in vowels:\n                                if word[start] in vowels:\n                                    closest_vowel = word[start]\n                                    break\n                                else:\n                                    closest_vowel = \"\"\n                            else:\n                                closest_vowel = \"\"\n                    else:\n                        closest_vowel = word[end]\n                else:\n                    closest_vowel = word[end]\n            else:\n                closest_vowel = word[end]\n        else:\n            closest_vowel = word[end]\n        start += 1\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 51,
      "score": 8.375312293858853,
      "candidate": "vowels = \"aeiou\"\n    closest_vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            if len(closest_vowel) < len(word[i]):\n                closest_vowel = word[i]\n    return closest_vowel\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 52,
      "score": 8.351614956112536,
      "candidate": "vowel = set('aeiou')\n    if len(word) < 2:\n        return ''\n    for i in range(len(word)-1):\n        if word[i] in vowel and word[i+1] in vowel:\n            return word[i]\n    return ''\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel('yogurt'))\n    print(get_closest_vowel('FULL'))\n    print(get_closest_vowel('quick'))\n    print(get_closest_vowel('ab'))"
    },
    {
      "rank": 53,
      "score": 8.331556294201176,
      "candidate": "vowel_list = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = ''\n    if len(word) == 1:\n        return closest_vowel\n    for vowel in vowel_list:\n        if word.find(vowel) == 0:\n            if len(closest_vowel) == 0:\n                closest_vowel = vowel\n            elif len(closest_vowel) > len(vowel):\n                closest_vowel = vowel\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 54,
      "score": 8.327375965969855,
      "candidate": "vowel_list = ['a', 'e', 'i', 'o', 'u']\n    word_list = list(word)\n    for i in range(len(word_list)):\n        if word_list[i] in vowel_list:\n            if i == 0:\n                return word_list[i]\n            if i == len(word_list) - 1:\n                return word_list[i]\n            if word_list[i - 1] == word_list[i]:\n                return word_list[i]\n    return ''"
    },
    {
      "rank": 55,
      "score": 8.327367757082776,
      "candidate": "# Your code here\n    #vowels = \"aeiou\"\n    #vowels_found = []\n    #word = word.lower()\n    #for i in range(len(word)):\n    #    if word[i] in vowels:\n    #        vowels_found.append(word[i])\n    #    else:\n    #        break\n    #print(vowels_found)\n    #return \"\".join(vowels_found)\n    vowels = \"aeiou\"\n    vowels_found = []\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_found.append(word[i])\n        else:\n            break\n    return \"\".join(vowels_found)\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 56,
      "score": 8.298597569547805,
      "candidate": "if len(word) == 1:\n        return word\n    if len(word) == 2:\n        if word[0] in \"aeiou\":\n            return word[0]\n        else:\n            return \"\"\n    if len(word) == 3:\n        if word[0] in \"aeiou\":\n            return word[0]\n        else:\n            return word[1]\n    if len(word) == 4:\n        if word[0] in \"aeiou\":\n            return word[0]\n        else:\n            return word[1]\n\n    return \"\"\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 57,
      "score": 8.294940769211511,
      "candidate": "# Your code here\n    vowel_count = {}\n    for i in range(len(word)):\n        if word[i] in vowel_count.keys():\n            vowel_count[word[i]] += 1\n        else:\n            vowel_count[word[i]] = 1\n    for i in range(len(word) - 1):\n        if word[i] in vowel_count.keys():\n            if vowel_count[word[i]] > vowel_count[word[i+1]]:\n                return word[i]\n            else:\n                return ''\n    return ''\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 58,
      "score": 8.2938925966498,
      "candidate": "vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    result = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            if i == 0:\n                result = word[i]\n            elif i == len(word) - 1:\n                result = word[i]\n            elif i == len(word) - 2:\n                result = word[i]\n    return result"
    },
    {
      "rank": 59,
      "score": 8.289838256518838,
      "candidate": "# Your code here\n    vowels = 'aeiou'\n    word = word.lower()\n    if len(word) == 0:\n        return ''\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[0] in vowels and word[-1] in vowels:\n        if word[0] == word[-1]:\n            return word[0]\n        else:\n            return word[-1]\n    else:\n        return ''\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 60,
      "score": 8.251903304236286,
      "candidate": "vowels = 'aeiou'\n    vowels_count = {}\n    for vowel in vowels:\n        vowels_count[vowel] = vowels_count.get(vowel, 0) + 1\n    \n    closest_vowel = ''\n    for vowel in vowels_count:\n        if vowels_count[vowel] < vowels_count.get('FULL', 0):\n            closest_vowel = vowel\n            break\n    return closest_vowel\n\n\n\n\nprint(get_closest_vowel('yogurt'))\nprint(get_closest_vowel('FULL'))\nprint(get_closest_vowel('quick'))\nprint(get_closest_vowel('ab'))"
    },
    {
      "rank": 61,
      "score": 8.214125058964552,
      "candidate": "vowels = \"aeiou\"\n    closest_vowel = \"\"\n    for letter in word:\n        if letter in vowels:\n            if word.find(letter) < word.find(closest_vowel):\n                closest_vowel = letter\n    return closest_vowel\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 62,
      "score": 8.212735598038213,
      "candidate": "closest_vowel = \"\"\n    for i in range(len(word)):\n        if word[i] == \"a\":\n            if i > 0 and word[i-1] == \"a\":\n                continue\n            elif i > 0 and word[i-1] == \"e\":\n                continue\n            elif i > 0 and word[i-1] == \"i\":\n                continue\n            elif i > 0 and word[i-1] == \"o\":\n                continue\n            elif i > 0 and word[i-1] == \"u\":\n                continue\n            else:\n                closest_vowel = word[i]\n                break\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 63,
      "score": 8.209707251476969,
      "candidate": "vowels = 'aeiou'\n    if word.lower() == \"\":\n        return \"\"\n    word = word.lower()\n    for i in range(len(word) - 1):\n        if word[i] in vowels:\n            if word[i + 1] in vowels:\n                return word[i]\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 64,
      "score": 8.172253082181854,
      "candidate": "# Your code here\n    vowels = \"aeiou\"\n    for i in range(len(word)-1):\n        if word[i] in vowels:\n            if word[i+1] in vowels:\n                return word[i+1]\n\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 65,
      "score": 8.163300679823958,
      "candidate": "vowels = 'aeiou'\n    i = 0\n    j = len(word) - 1\n    while i < j:\n        if word[i].lower() in vowels and word[j].lower() in vowels:\n            if word[i] < word[j]:\n                return word[i]\n            else:\n                return word[j]\n        i += 1\n        j -= 1\n    return ''\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 66,
      "score": 8.144125099485041,
      "candidate": "vowels = {'a','e','i','o','u'}\n    closest_vowel = \"\"\n    for i in word:\n        if i in vowels:\n            if i == word[-1]:\n                return closest_vowel\n            else:\n                if len(closest_vowel) == 0:\n                    closest_vowel = i\n                elif i < closest_vowel[0]:\n                    closest_vowel = i\n    return closest_vowel"
    },
    {
      "rank": 67,
      "score": 8.143591138329747,
      "candidate": "# Your code here\n    word = word.lower()\n    vowels = 'aeiou'\n    start = 0\n    end = len(word) - 1\n    closest_vowel = ''\n    while start <= end:\n        if word[start] in vowels and word[end] in vowels:\n            if start == 0:\n                closest_vowel = word[start]\n            elif end == len(word) - 1:\n                closest_vowel = word[end]\n            else:\n                if word[start] < word[end]:\n                    closest_vowel = word[start]\n                else:\n                    closest_vowel = word[end]\n        start += 1\n    return closest_vowel\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 68,
      "score": 8.121884567141883,
      "candidate": "if word == \"\":\n        return \"\"\n    else:\n        return min(set(word[1:]), key = word.count)\n\n# Test cases\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 69,
      "score": 8.105983444291466,
      "candidate": "if len(word) == 1:\n        return \"\"\n    else:\n        vowel = \"\"\n        for i in range(len(word) - 1):\n            if word[i] == word[i + 1]:\n                vowel += word[i]\n            else:\n                break\n        return vowel\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 70,
      "score": 8.08452234024709,
      "candidate": "vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    closest_vowel = ''\n    for i in range(len(word) - 1):\n        if word[i] not in vowels:\n            if word[i + 1] in vowels:\n                if word[i + 1] in vowels and word[i] not in vowels:\n                    closest_vowel = word[i + 1]\n                elif word[i + 1] in vowels and word[i] in vowels:\n                    closest_vowel = word[i]\n                else:\n                    closest_vowel = ''\n            elif word[i + 1] in vowels:\n                closest_vowel = word[i + 1]\n            else:\n                closest_vowel = ''\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 71,
      "score": 7.990432406683839,
      "candidate": "# Your code here\n    vowel_list = [\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"U\"]\n    word_list = list(word)\n    closest_vowel = \"\"\n    for i in range(len(word_list)-1):\n        if word_list[i] == vowel_list[0] and word_list[i+1] == vowel_list[-1]:\n            closest_vowel = vowel_list[0]\n            break\n    return closest_vowel\n\n\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 72,
      "score": 7.938028884277233,
      "candidate": "vowels = 'aeiouAEIOU'\n    word = word.lower()\n    idx_start = word.find(vowels[0])\n    if idx_start == -1:\n        return ''\n    idx_end = word.find(vowels[1], idx_start + 1)\n    if idx_end == -1:\n        return ''\n    if idx_start!= idx_end:\n        return word[idx_start + 1:]\n    else:\n        return word[idx_start + 1:] + word[idx_start]\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 73,
      "score": 7.915588979966494,
      "candidate": "if not word:\n        return \"\"\n    vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n    return min(vowels, key=word.count)\n\n\nif __name__ == \"__main__\":\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 74,
      "score": 7.8912769574414305,
      "candidate": "if len(word) == 0:\n        return \"\"\n    vowel_list = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = \"\"\n    for v in word:\n        if v in vowel_list:\n            if v == vowel_list[0]:\n                closest_vowel = vowel_list[0]\n            elif v == vowel_list[-1]:\n                closest_vowel = vowel_list[-1]\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 75,
      "score": 7.868947655733293,
      "candidate": "word = word.lower()\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = ''\n    for vowel in vowels:\n        if word.startswith(vowel):\n            if word.endswith(vowel):\n                closest_vowel = vowel\n            else:\n                closest_vowel = ''\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 76,
      "score": 7.84634113240411,
      "candidate": "if word == \"\":\n        return \"\"\n\n    # Your code here\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    end = len(word) - 1\n    start = 0\n    for i in range(len(vowels)):\n        if word[i] not in vowels:\n            if word[i] == word[end]:\n                start = end\n            end -= 1\n    return vowels[start]\n\n# Test Cases\nprint(get_closest_vowel(\"yogurt\")) #> \"u\"\nprint(get_closest_vowel(\"FULL\")) #> \"U\"\nprint(get_closest_vowel(\"quick\")) #> \"\"\nprint(get_closest_vowel(\"ab\")) #> \"\""
    },
    {
      "rank": 77,
      "score": 7.780351419995229,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    word = word.lower()\n    return_value = \"\"\n    for i in range(len(word)-1):\n        if word[i] in vowels and word[i+1] in vowels:\n            return_value = word[i]\n            break\n    return return_value"
    },
    {
      "rank": 78,
      "score": 7.7320703513377165,
      "candidate": "# Your code here\n    vowel_list = ['a', 'e', 'i', 'o', 'u']\n    word = word.lower()\n\n    for i in range(len(word)-1):\n        if word[i] in vowel_list:\n            if word[i+1] in vowel_list:\n                return word[i+1]\n            else:\n                return word[i+1]\n    return \"\""
    },
    {
      "rank": 79,
      "score": 7.705183449260731,
      "candidate": "vowels = \"aeiouAEIOU\"\n    closest_vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            if i == 0:\n                if word[i] == word[i+1]:\n                    closest_vowel = vowels[0]\n                else:\n                    closest_vowel = vowels[0]\n            else:\n                if word[i] == word[i-1]:\n                    closest_vowel = vowels[i]\n                else:\n                    closest_vowel = vowels[i]\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 80,
      "score": 7.5819855281879285,
      "candidate": "vowel_list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    closest_vowel = \"\"\n    for i in range(len(word)-1, -1, -1):\n        if word[i] in vowel_list:\n            if i - 1 < 0:\n                if word[i] == vowel_list[0]:\n                    closest_vowel = vowel_list[0]\n                elif i + 1 >= len(vowel_list):\n                    closest_vowel = vowel_list[-1]\n            else:\n                if word[i] == vowel_list[0]:\n                    closest_vowel = vowel_list[i]\n                elif i + 1 >= len(vowel_list):\n                    closest_vowel = vowel_list[i - 1]\n        else:\n            closest_vowel = \"\"\n    return closest_vowel\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 81,
      "score": 7.562924366763077,
      "candidate": "vowels = set(\"aeiouAEIOU\")\n    i = 0\n    j = len(word) - 1\n    while i < j:\n        if word[i] in vowels:\n            i += 1\n        elif word[j] in vowels:\n            j -= 1\n        else:\n            return \"\"\n    return word[i]"
    },
    {
      "rank": 82,
      "score": 7.464609382504557,
      "candidate": "# Your code here\n    vowels = \"aeiou\"\n    if len(word) <= 1:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 83,
      "score": 7.134571892399572,
      "candidate": "vowels = \"aeiou\"\n    vowels_count = 0\n    for vowel in vowels:\n        if vowel in word:\n            vowels_count += 1\n    if vowels_count == 0:\n        return \"\"\n    else:\n        return vowels[vowels_count - 1]\n\nif __name__ == '__main__':\n    print(get_closest_vowel(\"yogurt\"))\n    print(get_closest_vowel(\"FULL\"))\n    print(get_closest_vowel(\"quick\"))\n    print(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 84,
      "score": 3.0,
      "candidate": "vowels = {'a', 'e', 'i', 'o', 'u'}\n    word = word.lower()\n    start = 0\n    end = len(word) - 1\n    while start < end:\n        if word[start] in vowels and word[end] in vowels:\n            return word[start]\n        if word[start] not in vowels:\n            start += 1\n        if word[end] not in vowels:\n            end -= 1\n    return \"\"\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abcd\") == \"d\"\n    assert get_closest_vowel(\"abcdabcd\") == \"b\"\n    assert get_closest_vowel(\"abcdabcdab\") == \"b\"\n\n\nif __name__ == \"__main__\":\n    test_get_closest_vowel()"
    },
    {
      "rank": 85,
      "score": 3.0,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = ''\n    for i in range(len(word) - 1):\n        if word[i] == vowels[0]:\n            continue\n        if word[i] == vowels[1]:\n            continue\n        if word[i] == vowels[2]:\n            continue\n        if word[i] == vowels[3]:\n            continue\n        if word[i] == vowels[4]:\n            continue\n        if word[i] == vowels[5]:\n            continue\n        if word[i] == vowels[6]:\n            continue\n        if word[i] == vowels[7]:\n            continue\n        if word[i] == vowels[8]:\n            continue\n        if word[i] == vowels[9]:\n            continue\n        if word[i] == vowels[10]:\n            continue\n        if word[i] == vowels[11]:\n            continue\n        if word[i] == vowels[12]:\n            continue\n        if word[i] == vowels[13]:\n            continue\n        if word[i] == vowels[14]:\n            continue\n        if word[i] == vowels[15]:\n            continue\n        if word[i] == vowels[16]:\n            continue\n        if word[i] == vowels[17]:\n            continue\n        if word[i] == vowels[18]:\n            continue\n        if word[i] == vowels[19]:\n            continue\n        if word[i] == vowels[20]:\n            continue\n        if word[i] == vowels[21]:\n            continue\n        if word[i] == vowels[22]:\n            continue\n        if word[i] == vowels[23]:\n            continue\n        if word[i] == vowels[24]:\n            continue\n        if word[i] == vowels[25]:\n            continue\n        if word[i] == vowels[26]:\n            continue\n        if word[i] == vowels[27]:\n            continue\n        if word[i] == vowels[28]:\n            continue\n        if word["
    },
    {
      "rank": 86,
      "score": 3.0,
      "candidate": "vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    word = word.lower()\n    if word.startswith(\"yogurt\"):\n        return \"u\"\n    elif word.endswith(\"FULL\"):\n        return \"U\"\n    elif word.startswith(\"ab\"):\n        return \"\"\n    else:\n        return \"\"\n\n\ndef get_closest_vowel_2(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel_2(\"yogurt\") ==> \"u\"\n    get_closest_vowel_2(\"FULL\") ==> \"U\"\n    get_closest_vowel_2(\"quick\") ==> \"\"\n    get_closest_vowel_2(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    word = word.lower()\n    if word.startswith(\"yogurt\"):\n        return \"u\"\n    elif word.endswith(\"FULL\"):\n        return \"U\"\n    elif word.startswith(\"ab\"):\n        return \"\"\n    else:\n        return \"\"\n\n\ndef get_closest_vowel_3(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel_3(\"yogurt\") ==> \"u\"\n    get_closest_vowel_3(\"FULL\") ==> \"U\"\n    get_closest_vowel_3(\""
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "vowels = \"aeiou\"\n    word_length = len(word)\n    if word_length == 0:\n        return \"\"\n    vowels_index = []\n    for i in range(word_length):\n        if word[i] in vowels:\n            vowels_index.append(i)\n    if len(vowels_index) == 0:\n        return \"\"\n    if len(vowels_index) == 1:\n        return vowels_index[0]\n    for i in range(word_length-1):\n        if word[i] == vowels[vowels_index[i+1]-1]:\n            return vowels_index[i+1]\n    return \"\"\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abcd\") == \"\"\n    assert get_closest_vowel(\"abcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdab\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcd\") == \"\"\n    assert get_closest_vowel(\"abcdabcdabcdabcdabcd\") == \"\"\n    assert get_closest_v"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "vowel_count = {}\n    vowel_index = 0\n    for i in range(len(word)):\n        if word[i] in vowel_count:\n            vowel_count[word[i]].append(i)\n        else:\n            vowel_count[word[i]] = [i]\n    for i in vowel_count:\n        if len(vowel_count[i]) == 2:\n            if vowel_count[i][0] > vowel_count[i][1]:\n                vowel_index = i\n    return vowel_count[word[-1]][0] if vowel_index!= -1 else \"\"\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abcd\") == \"a\"\n    assert get_closest_vowel(\"ABCD\") == \"\"\n    assert get_closest_vowel(\"abcdAB\") == \"\"\n    assert get_closest_vowel(\"abcdABCD\") == \"d\"\n    assert get_closest_vowel(\"abcdABCD\") == \"d\"\n    assert get_closest_vowel(\"abcdABCD\") == \"d\"\n    assert get_closest_vowel(\"abcdABCD\") == \"\"\n    assert get_closest_vowel(\"ABCDABCD\") == \"\"\n    assert get_closest_vowel(\"ABCDABCD\") == \"\"\n    assert get_closest_vowel(\"ABCDABCD\") == \"\"\n    assert get_closest_vowel(\"ABCDABCDABCD\") == \"d\"\n    assert get_closest_vowel(\"ABCDABCDABCD\") == \"d\"\n    assert get_closest_vowel(\"ABCDABCDABCD\") == \"\"\n    assert get_closest_vowel(\"ABCDABCDABCDABCD\") == \"\"\n    assert get_closest_vowel(\"ABCDABCDAB"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_count = 0\n    closest_vowel = \"\"\n\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_count += 1\n\n    if vowels_count == 0:\n        return \"\"\n\n    if vowels_count == 1:\n        return vowels[0]\n\n    for i in range(1, len(vowels)):\n        if vowels_count < (len(word) - i):\n            closest_vowel = vowels[i]\n\n    return closest_vowel\n\n\nif __name__ == \"__main__\":\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\""
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "vowels = {'a', 'e', 'i', 'o', 'u'}\n    l1 = list(word)\n    l2 = list(reversed(word))\n    if len(l1) < len(l2):\n        l1.reverse()\n    if len(l2) < len(l1):\n        l2.reverse()\n    for i in range(len(l1)):\n        if l1[i] not in vowels and l2[i] not in vowels:\n            return l1[i]\n        if l2[i] not in vowels and l1[i] not in vowels:\n            return l2[i]\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abcd\") == \"c\"\n\n\nif __name__ == '__main__':\n    test_get_closest_vowel()"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "if len(word) == 0:\n        return \"\"\n    if word[0] == \"a\" or word[0] == \"e\" or word[0] == \"i\" or word[0] == \"o\" or word[0] == \"u\":\n        return word[0]\n    if word[-1] == \"a\" or word[-1] == \"e\" or word[-1] == \"i\" or word[-1] == \"o\" or word[-1] == \"u\":\n        return word[-1]\n    if word[-1] == \"a\" or word[-1] == \"e\" or word[-1] == \"i\" or word[-1] == \"o\" or word[-1] == \"u\":\n        return word[-1]\n    if word[-1] == \"a\" or word[-1] == \"e\" or word[-1] == \"i\" or word[-1] == \"o\" or word[-1] == \"u\":\n        return word[-1]\n    if word[-1] == \"a\" or word[-1] == \"e\" or word[-1] == \"i\" or word[-1] == \"o\" or word[-1] == \"u\":\n        return word[-1]\n    if word[-1] == \"a\" or word[-1] == \"e\" or word[-1] == \"i\" or word[-1] == \"o\" or word[-1] == \"u\":\n        return word[-1]\n    if word[-1] == \"a\" or word[-1] == \"e\" or word[-1] == \"i\" or word[-1] == \"o\" or word[-1] == \"u\":\n        return word[-1]\n    return \"\"\n\n\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"FULL\"))\nprint(get_closest_vowel(\"quick\"))\nprint(get_closest_vowel(\"ab\"))\nprint(get_closest_vowel(\"yogurt\"))\nprint(get_closest_vowel(\"ab\"))"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "# Your code here\n    vowel_dict = {\"a\": \"a\", \"e\": \"e\", \"i\": \"i\", \"o\": \"o\", \"u\": \"u\", \"A\": \"a\", \"E\": \"e\",\n                  \"I\": \"i\", \"O\": \"o\", \"U\": \"u\"}\n    # print(vowel_dict)\n    # print(type(vowel_dict))\n    # print(len(vowel_dict))\n\n    # get the length of the word\n    word_len = len(word)\n    # print(word_len)\n    # get the last letter in the word\n    word_last_letter = word[-1]\n    # print(word_last_letter)\n    # get the first letter in the word\n    word_first_letter = word[0]\n    # print(word_first_letter)\n\n    # check if the first letter is in the vowel_dict\n    if word_first_letter in vowel_dict:\n        # print(\"first letter is in vowel_dict\")\n        # check if the last letter is in the vowel_dict\n        if word_last_letter in vowel_dict:\n            # print(\"last letter is in vowel_dict\")\n            # check if the last letter is in the vowel_dict\n            if vowel_dict[word_last_letter] < vowel_dict[word_first_letter]:\n                # print(\"last letter is less than the first letter\")\n                return vowel_dict[word_last_letter]\n            else:\n                # print(\"last letter is greater than the first letter\")\n                return vowel_dict[word_first_letter]\n    else:\n        # print(\"first letter is not in vowel_dict\")\n        # print(vowel_dict)\n        # check if the last letter is in the vowel_dict\n        if word_last_letter in vowel_dict:\n            # print(\"last letter is in vowel_dict\")\n            # check if the last letter is in the vowel_dict\n            if vowel_dict[word_last_letter] < vowel_dict[word_first_letter]:\n                # print(\"last letter is less than the first letter\")\n                return vowel_dict[word_last"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "# Your code here\n    # vowels = 'aeiouAEIOU'\n    # vowels = 'aeiouAEIOU'\n    vowels = 'aeiouAEIOU'\n    vowels = list(vowels)\n\n    # Initialize the closest vowel to ''\n    closest_vowel = ''\n\n    # Iterate through the word and compare each vowel to the closest vowel\n    for vowel in vowels:\n        if vowel in word:\n            # Get the index of the vowel in the word\n            index = word.index(vowel)\n            # If the index is greater than the closest vowel, update the closest vowel\n            if index > len(closest_vowel) or index == 0:\n                closest_vowel = vowel\n\n    # Return the closest vowel\n    return closest_vowel\n\n\n# TESTS\nassert get_closest_vowel(\"yogurt\") == \"u\"\nassert get_closest_vowel(\"FULL\") == \"U\"\nassert get_closest_vowel(\"quick\") == \"\"\nassert get_closest_vowel(\"ab\") == \"\""
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "# Write your code here\n    vowels = 'aeiou'\n    vowel_index = []\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel_index.append(i)\n\n    if len(vowel_index) < 2:\n        return ''\n\n    for i in range(1, len(vowel_index)):\n        if word[vowel_index[i-1]]!= word[vowel_index[i]]:\n            if word[vowel_index[i-1]] < word[vowel_index[i]]:\n                return word[vowel_index[i-1]]\n            else:\n                return word[vowel_index[i]]\n\n    return ''\n\nif __name__ == '__main__':\n    print(get_closest_vowel('yogurt'))\n    print(get_closest_vowel('FULL'))\n    print(get_closest_vowel('quick'))\n    print(get_closest_vowel('ab'))"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "# Your code here\n    return ''\n\n\n\n# Test cases\n# yogurt = \"yogurt\"\n# FULL = \"FULL\"\n# quick = \"quick\"\n# ab = \"ab\"\n#\n# assert get_closest_vowel(yogurt) == \"u\"\n# assert get_closest_vowel(FULL) == \"U\"\n# assert get_closest_vowel(quick) == \"\"\n# assert get_closest_vowel(ab) == \"\"\n\n# All tests passed!"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    count = 0\n    for i in range(len(word)):\n        if word[i] in vowels:\n            count += 1\n    if count == 0:\n        return ''\n    if count == 1:\n        return vowels[0]\n    if count == 2:\n        return vowels[1]\n    return vowels[count - 1]\n\n\ndef test_get_closest_vowel():\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\""
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "# Your code here\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    start = 0\n    end = len(word) - 1\n    while start <= end:\n        if word[start] in vowels:\n            if word[end] in vowels:\n                return word[end]\n            else:\n                return \"\"\n        elif word[end] in vowels:\n            return word[end]\n        start += 1\n        end -= 1\n    return \"\"\n\n\ndef get_closest_vowel_2(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # Your code here\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    start = 0\n    end = len(word) - 1\n    while start <= end:\n        if word[start] in vowels:\n            if word[end] in vowels:\n                return word[end]\n            else:\n                return \"\"\n        elif word[end] in vowels:\n            return word[end]\n        start += 1\n        end -= 1\n    return \"\"\n\n\ndef get_closest_vowel_3(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "vowels = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = \"\"\n    for v in vowels:\n        if word.startswith(v) and word.endswith(v):\n            closest_vowel = v\n            break\n    return closest_vowel\n\n\ndef get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = \"\"\n    for v in vowels:\n        if word.startswith(v) and word.endswith(v):\n            closest_vowel = v\n            break\n    return closest_vowel\n\n\ndef get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "vowels = \"aeiou\"\n    pos = 0\n    closest_vowel = \"\"\n\n    # check if word is empty\n    if len(word) == 0:\n        return closest_vowel\n\n    for i in range(len(word)):\n        if word[i] in vowels:\n            # if pos is not 0 and word[i] is not vowels[pos]:\n            #     return closest_vowel\n            # else:\n            #     pos += 1\n            if pos == 0:\n                closest_vowel = word[i]\n            else:\n                if word[i] == vowels[pos - 1]:\n                    pos += 1\n                else:\n                    pos -= 1\n\n    return closest_vowel\n\n\nif __name__ == \"__main__\":\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\""
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "if len(word) < 2:\n        return \"\"\n    vowels = \"aeiouAEIOU\"\n    start = 0\n    end = len(word) - 1\n    while start <= end:\n        if word[start] not in vowels or word[end] not in vowels:\n            return \"\"\n        if word[start] == word[end]:\n            start += 1\n            end -= 1\n        else:\n            start += 1\n            end -= 1\n    return word[start]\n\n\nif __name__ == \"__main__\":\n    assert get_closest_vowel(\"yogurt\") == \"u\"\n    assert get_closest_vowel(\"FULL\") == \"U\"\n    assert get_closest_vowel(\"quick\") == \"\"\n    assert get_closest_vowel(\"ab\") == \"\"\n    assert get_closest_vowel(\"abc\") == \"\"\n    assert get_closest_vowel(\"hello\") == \"\"\n    assert get_closest_vowel(\"\") == \"\""
    }
  ]
}