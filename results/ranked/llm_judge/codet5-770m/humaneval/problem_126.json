{
  "timestamp": "2025-09-14T12:11:28.765143",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 126,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "lst.sort()\n    return lst == sorted(lst)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "seen = set()\n    for num in lst:\n        if num in seen:\n            return False\n        seen.add(num)\n    return True"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(is_sorted(lst))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False\n\n\n#is_sorted([5]) \u279e True\n#is_sorted([1, 2, 3, 4, 5]) \u279e True\n#is_sorted([1, 3, 2, 4, 5]) \u279e False\n#is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n#is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n#is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n#is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n#is_sorted([1, 2, 2, 2, 3, 4]) \u279e False"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False\n\nprint(is_sorted([5]))"
    },
    {
      "rank": 7,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 8,
      "score": 8.0,
      "candidate": "if lst == []:\n        return True\n    if lst == sorted(lst):\n        return True\n    return False\n\nis_sorted([1, 2, 3, 4, 5])\nis_sorted([1, 3, 2, 4, 5])\nis_sorted([1, 2, 3, 4, 5, 6])\nis_sorted([1, 2, 3, 4, 5, 6, 7])\nis_sorted([1, 3, 2, 4, 5, 6, 7])\nis_sorted([1, 2, 2, 3, 3, 4])\nis_sorted([1, 2, 2, 2, 3, 4])"
    },
    {
      "rank": 9,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    elif lst[0] <= lst[1]:\n        return is_sorted(lst[2:])\n    else:\n        return False\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 10,
      "score": 8.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    return False"
    },
    {
      "rank": 11,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 12,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    else:\n        return is_sorted(lst[1:])\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 13,
      "score": 8.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False"
    },
    {
      "rank": 14,
      "score": 8.0,
      "candidate": "if lst == None:\n        return False\n    elif len(lst) == 1:\n        return True\n    else:\n        return lst[0] < lst[1] or lst[0] > lst[len(lst)-1]\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 15,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    if lst[0] > lst[-1]:\n        return False\n    else:\n        for i in range(len(lst) - 1, 0, -1):\n            if lst[i] > lst[i - 1]:\n                return False\n        return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 16,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 17,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "n = len(lst)\n    for i in range(n-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    for i in range(len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "if len(lst) == 0:\n        return False\n    for i in range(len(lst) - 1):\n        if lst[i] > lst[i + 1]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n\ndef is_sorted2(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted2([5]) \u279e True\n    is_sorted2([1, 2, 3, 4, 5]) \u279e True\n    is_sorted2([1, 3, 2, 4, 5]) \u279e False\n    is_sorted2([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted2([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted2([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted2([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted2([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "for i in range(len(lst)):\n        for j in range(i+1, len(lst)):\n            if lst[i] > lst[j]:\n                return False\n    return True"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "lst.sort()\n    return lst == lst[::-1]\n\n\nis_sorted([1, 2, 3, 4, 5])  # True\nis_sorted([1, 3, 2, 4, 5])  # True\nis_sorted([1, 2, 3, 4, 5, 6])  # True\nis_sorted([1, 2, 3, 4, 5, 6, 7])  # True\nis_sorted([1, 3, 2, 4, 5, 6, 7])  # False\nis_sorted([1, 2, 2, 3, 3, 4])  # True\nis_sorted([1, 2, 2, 2, 3, 4])  # False"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "seen = set()\n    for num in lst:\n        if num in seen:\n            return False\n        seen.add(num)\n    return True"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return lst[0] == lst[0]\n\n    if lst[0] < lst[1]:\n        return False\n\n    left = 0\n    right = len(lst) - 1\n\n    while left < right:\n        mid = left + (right - left) // 2\n\n        if lst[mid] > lst[left]:\n            right = mid - 1\n        else:\n            left = mid + 1\n\n    return lst[left] == lst[left]\n\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False\n\n\n# is_sorted([5]) \u279e True\n# is_sorted([1, 2, 3, 4, 5]) \u279e True\n# is_sorted([1, 3, 2, 4, 5]) \u279e False\n# is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n# is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n# is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n# is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n# is_sorted([1, 2, 2, 2, 3, 4]) \u279e False"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "if not lst:\n        return True\n    if len(lst) == 1:\n        return lst[0] == lst[0]\n    for i in range(1, len(lst)):\n        if lst[i] < lst[i-1]:\n            return False\n    return True"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    elif len(lst) == 2:\n        return lst[0] <= lst[1]\n    elif len(lst) == 3:\n        return lst[0] <= lst[1] and lst[0] <= lst[2]\n    elif len(lst) == 4:\n        return lst[0] <= lst[1] and lst[1] <= lst[2] and lst[2] <= lst[3]\n    elif len(lst) == 5:\n        return lst[0] <= lst[1] and lst[1] <= lst[2] and lst[2] <= lst[3] and lst[3] <= lst[4]\n    else:\n        return False\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n\n    lst_copy = lst.copy()\n    lst_copy.sort()\n    if lst_copy[0] == lst_copy[-1]:\n        return False\n    else:\n        return True"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "if len(lst) < 2:\n        return True\n\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "if len(lst) == 0:\n        return False\n    if len(lst) == 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    if lst[0] < lst[1]:\n        return True\n    return is_sorted(lst[2:])\n\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "if lst == []:\n        return False\n\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    assert is_sorted([5]) == True\n    assert is_sorted([1, 2, 3, 4, 5]) == True\n    assert is_sorted([1, 3, 2, 4, 5]) == False\n    assert is_sorted([1, 2, 3, 4, 5, 6]) == True\n    assert is_sorted([1, 2, 3, 4, 5, 6, 7]) == True\n    assert is_sorted([1, 3, 2, 4, 5, 6, 7]) == False\n    assert is_sorted([1, 2, 2, 3, 3, 4]) == True\n    assert is_sorted([1, 2, 2, 2, 3, 4]) == False"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "if len(lst) < 2:\n        return True\n\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n\n    return True"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    elif len(lst) == 2:\n        return lst[0] < lst[1]\n    else:\n        if lst[0] > lst[1]:\n            return is_sorted(lst[1:])\n        elif lst[1] > lst[0]:\n            return is_sorted(lst[:-1])\n        else:\n            return False"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    for i in range(0, len(lst) - 1):\n        if lst[i] > lst[i + 1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return lst[0] == lst[0]\n    if lst[0] > lst[1]:\n        return False\n    else:\n        return is_sorted(lst[1:])\n\n\nis_sorted([5])  #\u279e True\nis_sorted([1, 2, 3, 4, 5])  #\u279e True\nis_sorted([1, 3, 2, 4, 5])  #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6])  #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7])  #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7])  #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4])  #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4])  #\u279e False"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "for i in range(0, len(lst)):\n        for j in range(0, len(lst)-1):\n            if lst[j] > lst[j+1]:\n                return False\n    return True\n\nis_sorted([5]) \u279e True\nis_sorted([1, 2, 3, 4, 5]) \u279e True\nis_sorted([1, 3, 2, 4, 5]) \u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) \u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) \u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) \u279e False"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i-1] > lst[i]:\n            return False\n    return True"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "if len(lst) < 2:\n        return True\n    elif lst[0] > lst[-1]:\n        return False\n    else:\n        for i in range(1, len(lst)):\n            if lst[i] > lst[i-1]:\n                return False\n        return True"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    for i in range(0, len(lst) - 1):\n        if lst[i] > lst[i + 1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i - 1]:\n            return False\n\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "if len(lst) == 0:\n        return True\n    if len(lst) == 1:\n        return lst[0] == lst[0]\n    if lst[0] > lst[1]:\n        return False\n    if lst[0] == lst[1]:\n        return is_sorted(lst[2:])\n    return is_sorted(lst[1:])\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    else:\n        for i in range(len(lst) - 1):\n            if lst[i] > lst[i + 1]:\n                return False\n        return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    elif lst[0] > lst[1]:\n        return False\n    else:\n        for i in range(len(lst)):\n            if lst[i] > lst[i+1]:\n                return False\n        return True"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "return sorted(lst) == sorted(set(lst))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "if len(lst) == 0:\n        return True\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        for j in range(i+1, len(lst)):\n            if lst[i] > lst[j]:\n                return False\n    return True\n\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "lst.sort()\n    return lst == sorted(lst)\n\n\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "for i in range(len(lst)):\n        for j in range(i + 1, len(lst)):\n            if lst[i] > lst[j]:\n                return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    if len(lst) == 2:\n        if lst[0] < lst[1]:\n            return True\n        else:\n            return False\n    return is_sorted(lst[1:]) or is_sorted(lst[0:-1])"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "if len(lst) < 2:\n        return True\n    else:\n        if lst[0] > lst[1]:\n            return False\n        else:\n            return is_sorted(lst[1:])\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "lst.sort()\n    if lst == lst[::-1]:\n        return True\n    else:\n        return False\n\n\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    if lst[0] == lst[1]:\n        return is_sorted(lst[2:])\n    else:\n        return False\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "if lst is None or len(lst) == 0:\n        return True\n    elif len(lst) == 1:\n        return lst[0] == lst[0]\n    else:\n        if lst[0] > lst[1]:\n            return False\n        else:\n            return is_sorted(lst[1:])\n\n\nif __name__ == '__main__':\n    lst = [5]\n    print(is_sorted(lst))\n\n    lst = [1, 2, 3, 4, 5]\n    print(is_sorted(lst))\n\n    lst = [1, 3, 2, 4, 5]\n    print(is_sorted(lst))\n\n    lst = [1, 2, 3, 4, 5, 6]\n    print(is_sorted(lst))\n\n    lst = [1, 2, 3, 4, 5, 6, 7]\n    print(is_sorted(lst))\n\n    lst = [1, 2, 2, 3, 3, 4]\n    print(is_sorted(lst))\n\n    lst = [1, 2, 2, 2, 3, 4]\n    print(is_sorted(lst))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\nis_sorted([5]) \u279e True\nis_sorted([1, 2, 3, 4, 5]) \u279e True\nis_sorted([1, 3, 2, 4, 5]) \u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) \u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) \u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) \u279e False"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i-1] > lst[i]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "if lst == []:\n        return False\n    if lst[0] < lst[1]:\n        return False\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "lst.sort()\n    return lst == lst[::-1]\n\nprint(is_sorted([5])) #\u279e True\nprint(is_sorted([1, 2, 3, 4, 5])) #\u279e True\nprint(is_sorted([1, 3, 2, 4, 5])) #\u279e False\nprint(is_sorted([1, 2, 3, 4, 5, 6])) #\u279e True\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7])) #\u279e True\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7])) #\u279e False\nprint(is_sorted([1, 2, 2, 3, 3, 4])) #\u279e True\nprint(is_sorted([1, 2, 2, 2, 3, 4])) #\u279e False"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    elif len(lst) == 2:\n        if lst[0] > lst[1]:\n            return True\n        else:\n            return False\n    else:\n        return is_sorted(lst[1:]) or is_sorted(lst[:-1])"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "for i in range(len(lst)):\n        for j in range(i + 1, len(lst)):\n            if lst[i] > lst[j]:\n                return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "if not lst: return False\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]: return False\n    return True\n\nprint(is_sorted([5])) #\u279e True\nprint(is_sorted([1, 2, 3, 4, 5])) #\u279e True\nprint(is_sorted([1, 3, 2, 4, 5])) #\u279e False\nprint(is_sorted([1, 2, 3, 4, 5, 6])) #\u279e True\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7])) #\u279e True\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7])) #\u279e False\nprint(is_sorted([1, 2, 2, 3, 3, 4])) #\u279e True\nprint(is_sorted([1, 2, 2, 2, 3, 4])) #\u279e False"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "if len(lst) < 2:\n        return True\n\n    i = 0\n    while i < len(lst) - 1:\n        if lst[i] > lst[i + 1]:\n            return False\n        i += 1\n    return True\n\n\nif __name__ == '__main__':\n    lst = [5, 1, 2, 3, 4, 5]\n    assert is_sorted(lst) == True\n\n    lst = [1, 2, 3, 4, 5, 6]\n    assert is_sorted(lst) == True\n\n    lst = [1, 2, 3, 4, 5, 6, 7]\n    assert is_sorted(lst) == False\n\n    lst = [1, 2, 2, 3, 3, 4]\n    assert is_sorted(lst) == False"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "for i in range(0, len(lst) - 1):\n        if lst[i] > lst[i + 1]:\n            return False\n    return True"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    if lst[0] > lst[-1]:\n        return False\n    return is_sorted(lst[1:-1])\n\nis_sorted([5])\nis_sorted([1, 2, 3, 4, 5])\nis_sorted([1, 3, 2, 4, 5])\nis_sorted([1, 2, 3, 4, 5, 6])\nis_sorted([1, 2, 3, 4, 5, 6, 7])\nis_sorted([1, 3, 2, 4, 5, 6, 7])\nis_sorted([1, 2, 2, 3, 3, 4])\nis_sorted([1, 2, 2, 2, 3, 4])"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    else:\n        for i in range(1, len(lst)):\n            if lst[i] > lst[i-1]:\n                return False\n        return True\n\n\nif __name__ == '__main__':\n    print(is_sorted([5]))\n    print(is_sorted([1, 2, 3, 4, 5]))\n    print(is_sorted([1, 3, 2, 4, 5]))\n    print(is_sorted([1, 2, 3, 4, 5, 6]))\n    print(is_sorted([1, 2, 3, 4, 5, 6, 7]))\n    print(is_sorted([1, 3, 2, 4, 5, 6, 7]))\n    print(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    if lst[0] < lst[1]:\n        return False\n    for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n#is_sorted([5]) #\u279e True\n#is_sorted([1, 2, 3, 4, 5]) #\u279e True\n#is_sorted([1, 3, 2, 4, 5]) #\u279e False\n#is_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\n#is_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\n#is_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\n#is_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\n#is_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "for i in range(1,len(lst)):\n        if lst[i]>lst[i-1]:\n            return False\n    return True\n\n\nprint(is_sorted([1,2,3,4,5]))\nprint(is_sorted([1,3,2,4,5]))\nprint(is_sorted([1,2,3,4,5,6]))\nprint(is_sorted([1,3,2,4,5,6,7]))\nprint(is_sorted([1,2,2,3,3,4]))\nprint(is_sorted([1,2,2,2,3,4]))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "if lst == sorted(lst):\n        return True\n    else:\n        return False\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "for i in range(1, len(lst)):\n        if lst[i] > lst[i-1]:\n            return False\n    return True\n\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "for i in range(len(lst)-1, -1, -1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))\nprint(is_sorted([1, 2, 2, 2, 3, 4]))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "for i in range(len(lst) - 1):\n        if lst[i] > lst[i + 1]:\n            return False\n    return True\n\n\nprint(is_sorted([5]))\nprint(is_sorted([1, 2, 3, 4, 5]))\nprint(is_sorted([1, 3, 2, 4, 5]))\nprint(is_sorted([1, 2, 3, 4, 5, 6]))\nprint(is_sorted([1, 2, 3, 4, 5, 6, 7]))\nprint(is_sorted([1, 3, 2, 4, 5, 6, 7]))\nprint(is_sorted([1, 2, 2, 3, 3, 4]))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "if len(lst) <= 1:\n        return True\n\n    for i in range(1, len(lst)):\n        if lst[i] < lst[i-1]:\n            return False\n\n    return True"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "if len(lst) == 1:\n        return True\n    for i in range(len(lst) - 1):\n        if lst[i] > lst[i + 1]:\n            return False\n    return True\n\nis_sorted([5]) \u279e True\nis_sorted([1, 2, 3, 4, 5]) \u279e True\nis_sorted([1, 3, 2, 4, 5]) \u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) \u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) \u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) \u279e False"
    },
    {
      "rank": 90,
      "score": 7.0,
      "candidate": "if len(lst) < 2:\n        return True\n    for i in range(1, len(lst)):\n        if lst[i] < lst[i-1]:\n            return False\n    return True"
    },
    {
      "rank": 91,
      "score": 7.0,
      "candidate": "if len(lst) == 1:\n        return True\n    for i in range(len(lst) - 1):\n        if lst[i] > lst[i+1]:\n            return False\n    return True"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "for i in range(0, len(lst)-1):\n        for j in range(i+1, len(lst)):\n            if lst[i] > lst[j]:\n                return False\n    return True\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "if len(lst) == 1:\n        return True\n    elif lst[0] > lst[-1]:\n        return False\n    else:\n        return is_sorted(lst[1:]) or is_sorted(lst[:-1])\n\n\ndef is_sorted2(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted2([5]) \u279e True\n    is_sorted2([1, 2, 3, 4, 5]) \u279e True\n    is_sorted2([1, 3, 2, 4, 5]) \u279e False\n    is_sorted2([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted2([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted2([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted2([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted2([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n    if len(lst) == 1:\n        return True\n    elif lst[0] > lst[-1]:\n        return False\n    else:\n        return is_sorted2(lst[1:]) or is_sorted2(lst[:-1])\n\n\ndef is_sorted3(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted3([5]) \u279e True\n    is_sorted3([1, 2, 3, 4, 5]) \u279e True\n    is_sorted3([1, 3, 2, 4, 5]) \u279e False\n    is_sorted3([1, 2, 3, 4, 5, 6]) \u279e True"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "if len(lst) <= 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    return is_sorted(lst[1:])\n\n\ndef is_sorted(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5]) \u279e True\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\n    is_sorted([1, 3, 2, 4, 5]) \u279e False\n    is_sorted([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n    if len(lst) <= 1:\n        return True\n    if lst[0] > lst[1]:\n        return False\n    l, r = 0, len(lst) - 1\n    while l < r:\n        mid = (l + r) // 2\n        if lst[mid] < lst[mid+1]:\n            l = mid + 1\n        else:\n            r = mid - 1\n    if lst[l] > lst[r]:\n        return True\n    return False\n\n\ndef is_sorted(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted([5]) \u279e True\n    is_sorted([1, 2, 3, 4, 5]) \u279e True\n    is_sorted([1, 3, 2, 4, 5]) \ufffd"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "if len(lst) == 1:\n        return True\n\n    for i in range(len(lst)-1):\n        if lst[i] > lst[i+1]:\n            return False\n\n    return True\n\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "if len(lst) < 2:\n        return True\n\n    l, r = 0, len(lst) - 1\n\n    while l <= r:\n        mid = l + (r - l)//2\n\n        if lst[mid] < lst[r]:\n            l = mid + 1\n        else:\n            r = mid - 1\n\n    return lst[l] == lst[r]\n\n\nis_sorted([5]) #\u279e True\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "for i in range(0, len(lst)):\n        for j in range(0, i):\n            if lst[i] > lst[j]:\n                return False\n    return True\n\n\n# is_sorted([5]) #\u279e True\n# is_sorted([1, 2, 3, 4, 5]) #\u279e True\n# is_sorted([1, 3, 2, 4, 5]) #\u279e False\n# is_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\n# is_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\n# is_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\n# is_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\n# is_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "if lst == []:\n        return True\n    if lst == [1]:\n        return True\n    if lst == [1, 2, 3]:\n        return True\n    if lst == [1, 2, 3, 4]:\n        return True\n    if lst == [1, 2, 3, 4, 5]:\n        return False\n    if lst == [1, 3, 2, 4, 5]:\n        return False\n    if lst == [1, 3, 2, 4, 5, 6]:\n        return True\n    if lst == [1, 3, 2, 4, 5, 6, 7]:\n        return True\n    if lst == [1, 2, 2, 3, 3, 4]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 4]:\n        return False\n    if lst == [1, 2, 2, 2, 3, 4, 5]:\n        return False\n    if lst == [1, 2, 2, 2, 3, 4, 5, 6, 7]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]:\n        return True\n    if lst == [1, 2, 2, 2, 3, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]:\n        return True\n    if lst == [1, 2,"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "lst.sort()\n    return lst == sorted(lst)\n\n\ndef is_sorted_recur(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted_recur([5]) \u279e True\n    is_sorted_recur([1, 2, 3, 4, 5]) \u279e True\n    is_sorted_recur([1, 3, 2, 4, 5]) \u279e False\n    is_sorted_recur([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted_recur([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted_recur([1, 3, 2, 4, 5, 6, 7]) \u279e False\n    is_sorted_recur([1, 2, 2, 3, 3, 4]) \u279e True\n    is_sorted_recur([1, 2, 2, 2, 3, 4]) \u279e False\n    '''\n    if not lst:\n        return True\n    if lst[0] < lst[1]:\n        return False\n    return is_sorted_recur(lst[1:])\n\n\ndef is_sorted_recursive(lst):\n    '''\n    Given a list of numbers, return whether or not they are sorted\n    in ascending order. If list has more than 1 duplicate of the same\n    number, return False. Assume no negative numbers and only integers.\n\n    Examples\n    is_sorted_recursive([5]) \u279e True\n    is_sorted_recursive([1, 2, 3, 4, 5]) \u279e True\n    is_sorted_recursive([1, 3, 2, 4, 5]) \u279e False\n    is_sorted_recursive([1, 2, 3, 4, 5, 6]) \u279e True\n    is_sorted_recursive([1, 2, 3, 4, 5, 6, 7]) \u279e True\n    is_sorted_recursive([1,"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "if not lst:\n        return False\n    n = len(lst)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            if lst[i] > lst[j]:\n                return False\n    return True\n\nis_sorted([1, 2, 3, 4, 5]) #\u279e True\nis_sorted([1, 3, 2, 4, 5]) #\u279e False\nis_sorted([1, 2, 3, 4, 5, 6]) #\u279e True\nis_sorted([1, 2, 3, 4, 5, 6, 7]) #\u279e True\nis_sorted([1, 3, 2, 4, 5, 6, 7]) #\u279e False\nis_sorted([1, 2, 2, 3, 3, 4]) #\u279e True\nis_sorted([1, 2, 2, 2, 3, 4]) #\u279e False"
    }
  ]
}