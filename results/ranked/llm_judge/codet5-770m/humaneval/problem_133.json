{
  "timestamp": "2025-09-14T12:14:36.549630",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 133,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n\ndef main():\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "return sum([round(i**2, 0) for i in lst])\n\n\ndef sum_squares2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([i**2 for i in lst])\n\n\ndef sum_squares3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([i**2 for i in lst])\n\n\ndef sum_squares4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "return sum([round(x**2, int(round(x**0.5))) for x in lst])\n\n\nif __name__ == '__main__':\n    lst = [1,2,3]\n    print(sum_squares(lst))\n\n    lst = [1,4,9]\n    print(sum_squares(lst))\n\n    lst = [1,3,5,7]\n    print(sum_squares(lst))\n\n    lst = [1.4,4.2,0]\n    print(sum_squares(lst))\n\n    lst = [-2.4,1,1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "output = 0\n    for i in lst:\n        output += i ** 2\n    return int(output)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))\n\n\ndef sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    output = 0\n    for i in lst:\n        output += i ** 2\n    return int(output)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))\n\n\ndef sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "sum_squares_lst = [round(x, int(math.ceil(math.sqrt(x)))) for x in lst]\n    return sum(sum_squares_lst)\n\n\ndef test_sum_squares():\n    assert sum_squares([1,2,3]) == 14\n    assert sum_squares([1,4,9]) == 98\n    assert sum_squares([1,3,5,7]) == 84\n    assert sum_squares([1.4,4.2,0]) == 29\n    assert sum_squares([-2.4,1,1]) == 6"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "return sum(map(lambda x: round(x**2, 0), lst))\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x**2, 0), lst))\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: round(x**2, 0), lst))\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "output = 0\n    for i in lst:\n        output += int(i)**2\n    return output\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    output = 0\n    for i in lst:\n        output += i**2\n    return output\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    output = 0\n    for i in lst:\n        output += i**2\n    return int(output)**2\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "sum_squared = 0\n    for element in lst:\n        sum_squared += round(element**2, 0)\n    return sum_squared\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "return sum([round(num**2, 0) for num in lst])\n\n\ndef main():\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "if lst == []:\n        return 0\n    sum_squared_lst = []\n    for num in lst:\n        sum_squared_lst.append(num ** 2)\n    return sum(sum_squared_lst)\n\n\nif __name__ == '__main__':\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "sum_squares_lst = []\n    for i in lst:\n        sum_squares_lst.append(round(i**2, int(round(i))))\n    return sum(sum_squares_lst)\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squares_lst = []\n    for i in lst:\n        sum_squares_lst.append(round(i**2, int(round(i))))\n    return sum(sum_squares_lst)\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squares_lst = []\n    for i in lst:\n        sum_squares_lst.append(round(i**2, int(round(i))))\n    return sum(sum_squares_lst)\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers.\n    You need"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "lst = [int(i) for i in lst]\n    result = 0\n    for i in lst:\n        result += i ** 2\n    return result\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [i for i in lst]\n    result = 0\n    for i in lst:\n        result += i ** 2\n    return result\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [i for i in lst]\n    result = 0\n    for i in lst:\n        result += i ** 2\n    return result\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i**2\n    return round(sum, 2)\n\n\ndef main():\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "total = 0\n    for i in lst:\n        total += i**2\n    return total\n\n\nif __name__ == '__main__':\n    assert sum_squares([1, 2, 3]) == 14, 'Test 1 failed'\n    assert sum_squares([1, 4, 9]) == 98, 'Test 2 failed'\n    assert sum_squares([1, 3, 5, 7]) == 84, 'Test 3 failed'\n    assert sum_squares([1.4, 4.2, 0]) == 29, 'Test 4 failed'\n    assert sum_squares([-2.4, 1, 1]) == 6, 'Test 5 failed'"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "sum_squared_lst = 0\n    for i in lst:\n        sum_squared_lst += i ** 2\n    return int(round(sum_squared_lst))\n\n\ndef test_sum_squares():\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6\n\n\nif __name__ == \"__main__\":\n    test_sum_squares()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i ** 2\n    return round(sum, 2)\n\n\n\n\n\nif __name__ == '__main__':\n    lst = [1,2,3,4,5,6,7,8,9]\n    print(lst)\n    print(sum_squares(lst))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "sum = 0\n    for x in lst:\n        sum += int(x) ** 2\n    return sum"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i**2\n    return round(sum_of_squares, int(len(lst)**0.5))\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "sum = 0\n    for num in lst:\n        sum += num ** 2\n    return round(sum, 0)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "sum_sq = 0\n    for i in lst:\n        sum_sq += i**2\n    return int(sum_sq)\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_sq = 0\n    for i in lst:\n        sum_sq += i**2\n    return round(sum_sq, 1)\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_sq = 0\n    for i in lst:\n        sum_sq += i**2\n    return round(sum_sq, 2)\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = ["
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "sum_sq = 0\n    for i in lst:\n        sum_sq += i ** 2\n    return round(sum_sq, int(round(sum_sq)))\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 22,
      "score": 9.993251387631034,
      "candidate": "return sum(map(lambda x: round(x*x, int(round(abs(x))+1)), lst))\n\n\ndef test_sum_squares():\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6\n\n\nif __name__ == \"__main__\":\n    test_sum_squares()"
    },
    {
      "rank": 23,
      "score": 9.982086980445024,
      "candidate": "return sum([round(i**2, int(round(i**2))) for i in lst])\n\n\ndef main():\n    lst = [1, 2, 3]\n    print(f\"The sum of squared numbers in the given list is: {sum_squares(lst)}\")\n    lst = [1, 4, 9]\n    print(f\"The sum of squared numbers in the given list is: {sum_squares(lst)}\")\n    lst = [1, 3, 5, 7]\n    print(f\"The sum of squared numbers in the given list is: {sum_squares(lst)}\")\n    lst = [1.4, 4.2, 0]\n    print(f\"The sum of squared numbers in the given list is: {sum_squares(lst)}\")\n    lst = [-2.4, 1, 1]\n    print(f\"The sum of squared numbers in the given list is: {sum_squares(lst)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 24,
      "score": 9.94217585880588,
      "candidate": "sum = 0\n    for num in lst:\n        sum += num**2\n    return int(sum)\n\n\nif __name__ == \"__main__\":\n    lst = [1,2,3]\n    print(sum_squares(lst))"
    },
    {
      "rank": 25,
      "score": 9.930867849414408,
      "candidate": "sq_lst = []\n    for i in lst:\n        sq_lst.append(int(round(i**2)))\n    return sum(sq_lst)"
    },
    {
      "rank": 26,
      "score": 9.907170511668092,
      "candidate": "return sum(i**2 for i in lst)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))\n\n\ndef sum_squares2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(i**2 for i in lst)\n\n\nprint(sum_squares2([1, 2, 3]))\nprint(sum_squares2([1, 4, 9]))\nprint(sum_squares2([1, 3, 5, 7]))\nprint(sum_squares2([1.4, 4.2, 0]))\nprint(sum_squares2([-2.4, 1, 1]))\n\n\ndef sum_squares3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6"
    },
    {
      "rank": 27,
      "score": 9.890164056081243,
      "candidate": "sum = 0\n    for num in lst:\n        sum += num ** 2\n    return int(sum)\n\n\ndef sum_squares2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num ** 2\n    return int(sum)\n\n\ndef sum_squares3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += num ** 2\n    return int(sum)\n\n\ndef sum_squares4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the"
    },
    {
      "rank": 28,
      "score": 9.887111849756732,
      "candidate": "sum_of_squares = 0\n    for number in lst:\n        sum_of_squares += int(number**2)\n    return sum_of_squares\n\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 29,
      "score": 9.849448152205355,
      "candidate": "sqr_sum = 0\n    for num in lst:\n        sqr_sum += num * num\n    return round(sqr_sum, int(sqr_sum))\n\n\nprint(sum_squares([1, 2, 3]))"
    },
    {
      "rank": 30,
      "score": 9.769680614520107,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i ** 2\n    return int(round(sum))\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 31,
      "score": 9.768291153593768,
      "candidate": "# Your code here\n    sum = 0\n    for i in lst:\n        sum += i**2\n    return sum\n\n\n\nif __name__ == \"__main__\":\n    lst = [1,2,3]\n    print(sum_squares(lst))"
    },
    {
      "rank": 32,
      "score": 9.765262807032524,
      "candidate": "total = 0\n    for num in lst:\n        total += num * num\n    return total\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 33,
      "score": 9.760412881077356,
      "candidate": "total = 0\n    for i in lst:\n        total += i ** 2\n    return total\n\n\ndef test_sum_squares():\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6\n\n\nif __name__ == \"__main__\":\n    test_sum_squares()"
    },
    {
      "rank": 34,
      "score": 9.749121478207732,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i ** 2\n    return sum\n\n\ndef sum_squares_1(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i ** 2\n    return sum\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i ** 2\n    return round(sum, int(round(max(lst))))\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3"
    },
    {
      "rank": 35,
      "score": 9.718856235379514,
      "candidate": "return sum([round(x**2, 0) for x in lst])\n\n\ndef sum_squares_2(lst):\n    \"\"\"\n    Given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([round(x**2, 0) for x in lst])\n\n\ndef sum_squares_3(lst):\n    \"\"\"\n    Given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([round(x**2, 0) for x in lst])\n\n\ndef sum_squares_4(lst):\n    \"\"\"\n    Given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0]"
    },
    {
      "rank": 36,
      "score": 9.699146693885302,
      "candidate": "sum_squared = 0\n    for i in lst:\n        sum_squared += int(i) ** 2\n    return sum_squared\n\n\ndef sum_squares2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squared = 0\n    for i in lst:\n        sum_squared += int(i) ** 2\n    return sum_squared\n\n\ndef sum_squares3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squared = 0\n    for i in lst:\n        sum_squared += int(i) ** 2\n    return sum_squared\n\n\ndef sum_squares4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst ="
    },
    {
      "rank": 37,
      "score": 9.677440122697439,
      "candidate": "return sum(map(lambda x: round(x**2, int(round(x,0))), lst))\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 38,
      "score": 9.640077895802646,
      "candidate": "s = 0\n    for i in lst:\n        s += i ** 2\n    return int(round(s, 0))\n\n\nif __name__ == '__main__':\n    print(sum_squares([1,2,3]))\n    print(sum_squares([1,4,9]))\n    print(sum_squares([1,3,5,7]))\n    print(sum_squares([1.4,4.2,0]))\n    print(sum_squares([-2.4,1,1]))"
    },
    {
      "rank": 39,
      "score": 9.595753198553407,
      "candidate": "sum_squares = 0\n    for num in lst:\n        sum_squares += num**2\n    return round(sum_squares, 0)\n\n\ndef main():\n    lst = [1, 2, 3]\n    print(f'The sum of squares in the given list is {sum_squares(lst)}')\n    lst = [1, 4, 9]\n    print(f'The sum of squares in the given list is {sum_squares(lst)}')\n    lst = [1, 3, 5, 7]\n    print(f'The sum of squares in the given list is {sum_squares(lst)}')\n    lst = [1.4, 4.2, 0]\n    print(f'The sum of squares in the given list is {sum_squares(lst)}')\n    lst = [-2.4, 1, 1]\n    print(f'The sum of squares in the given list is {sum_squares(lst)}')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 40,
      "score": 9.58039123838868,
      "candidate": "sum = 0\n    for num in lst:\n        sum += num**2\n    return sum\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3]\n    print(sum_squares(lst))"
    },
    {
      "rank": 41,
      "score": 9.493584439832787,
      "candidate": "sum_squared_lst = []\n    for number in lst:\n        sum_squared_lst.append(int(round(number ** 2)))\n    return sum(sum_squared_lst)\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 42,
      "score": 9.47114453552205,
      "candidate": "sum_of_squares = 0\n    for num in lst:\n        sum_of_squares += num ** 2\n    return sum_of_squares\n\n\ndef sum_squares_recursive(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if not lst:\n        return 0\n    return lst[0] + sum_squares_recursive(lst[1:])\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: x ** 2, lst))\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = ["
    },
    {
      "rank": 43,
      "score": 9.42450321128885,
      "candidate": "lst_list = list(lst)\n    sum_squares_list = 0\n    for i in lst_list:\n        sum_squares_list += i * i\n    return round(sum_squares_list, int(max(lst_list) + 1))\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squares_list = 0\n    for i in lst:\n        sum_squares_list += i ** 2\n    return round(sum_squares_list, int(max(lst) + 1))\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squares_list = 0\n    for i in lst:\n        sum_squares_list += i ** 2\n    return round(sum_squares_list, int(max(lst) + 1))\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers"
    },
    {
      "rank": 44,
      "score": 9.401896687959665,
      "candidate": "sum_squared = 0\n    for item in lst:\n        sum_squared += (item**2)\n    return round(sum_squared, int(max(lst)))\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squared = 0\n    for item in lst:\n        sum_squared += (item**2)\n    return round(sum_squared, int(max(lst)))\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squared = 0\n    for item in lst:\n        sum_squared += (item**2)\n    return round(sum_squared, int(max(lst)))\n\n\ndef sum_squares_4(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first"
    },
    {
      "rank": 45,
      "score": 9.335906975550785,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i ** 2\n    return sum\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 46,
      "score": 9.260739004816287,
      "candidate": "total = 0\n    for i in lst:\n        total += i**2\n    return total\n\n\nif __name__ == \"__main__\":\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 47,
      "score": 9.137541083743484,
      "candidate": "total = 0\n    for i in lst:\n        total += int(i ** 2)\n    return total\n\n\nlst = [1, 2, 3]\nprint(sum_squares(lst))\n\nlst = [1, 4, 9]\nprint(sum_squares(lst))\n\nlst = [1, 3, 5, 7]\nprint(sum_squares(lst))\n\nlst = [1.4, 4.2, 0]\nprint(sum_squares(lst))\n\nlst = [-2.4, 1, 1]\nprint(sum_squares(lst))"
    },
    {
      "rank": 48,
      "score": 9.118479922318633,
      "candidate": "return sum([round(i, int(round(i))) for i in lst])\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 49,
      "score": 9.060337442492328,
      "candidate": "sum_squared_lst = 0\n    for i in lst:\n        sum_squared_lst += i * i\n    return round(sum_squared_lst, int(max(lst)))\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 50,
      "score": 9.054655470211907,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i * i\n    return round(sum_of_squares, 0)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 51,
      "score": 9.044278705366173,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i**2\n    return int(round(sum))\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 52,
      "score": 9.038426088443575,
      "candidate": "if not lst:\n        return 0\n    return sum([x**2 for x in lst])\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 53,
      "score": 9.020823121893637,
      "candidate": "total_sum = 0\n    for i in lst:\n        total_sum += int(i**2)\n    return total_sum\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3]\n    print(sum_squares(lst))"
    },
    {
      "rank": 54,
      "score": 9.01604746432385,
      "candidate": "return sum([round(x, 2) for x in lst])\n\n\ndef main():\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 55,
      "score": 9.006215542699554,
      "candidate": "sum = 0\n    for i in lst:\n        sum += int(i**2)\n    return sum\n\n\nlst = [1, 2, 3]\nprint(sum_squares(lst))\nlst = [1, 4, 9]\nprint(sum_squares(lst))\nlst = [1, 3, 5, 7]\nprint(sum_squares(lst))\nlst = [1.4, 4.2, 0]\nprint(sum_squares(lst))\nlst = [-2.4, 1, 1]\nprint(sum_squares(lst))"
    },
    {
      "rank": 56,
      "score": 8.973378055587066,
      "candidate": "return sum([round(x ** 2, 0) for x in lst])"
    },
    {
      "rank": 57,
      "score": 8.846534258217865,
      "candidate": "sum_squares = 0\n    for num in lst:\n        sum_squares += num * num\n    return int(round(sum_squares))\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 58,
      "score": 8.835822274622334,
      "candidate": "return sum([round(i ** 2, int(round(i ** 0.5))) for i in lst])\n\n\ndef sum_squares_1(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([round(i ** 2, int(round(i ** 0.5))) for i in lst])\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n    print(sum_squares_1(lst))"
    },
    {
      "rank": 59,
      "score": 8.761329515178183,
      "candidate": "lst = [int(i) for i in lst]\n    return sum(i**2 for i in lst)\n\n\nprint(sum_squares([1,2,3]))\nprint(sum_squares([1,4,9]))\nprint(sum_squares([1,3,5,7]))\nprint(sum_squares([1.4,4.2,0]))\nprint(sum_squares([-2.4,1,1]))"
    },
    {
      "rank": 60,
      "score": 8.74374398881408,
      "candidate": "return sum([round(x**2, 2) for x in lst])\n\n\nif __name__ == '__main__':\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 61,
      "score": 8.732446410642655,
      "candidate": "total = 0\n    for x in lst:\n        total += x ** 2\n    return total\n\n\nif __name__ == \"__main__\":\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 62,
      "score": 8.690127447955128,
      "candidate": "sum_squares = 0\n    for i in lst:\n        sum_squares += i**2\n    return int(sum_squares)\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3]\n    print(sum_squares(lst))"
    },
    {
      "rank": 63,
      "score": 8.656042861442971,
      "candidate": "return sum(map(lambda x: round(x**2, int(round(x))), lst))\n\n\ndef main():\n    print(sum_squares([1,2,3]))\n    print(sum_squares([1,4,9]))\n    print(sum_squares([1,3,5,7]))\n    print(sum_squares([1.4,4.2,0]))\n    print(sum_squares([-2.4,1,1]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 64,
      "score": 8.638162964118825,
      "candidate": "sum = 0\n    for num in lst:\n        sum += num ** 2\n    return sum\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 65,
      "score": 8.573637182691835,
      "candidate": "total = 0\n    for i in lst:\n        total += i ** 2\n    return total\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))\n\n# Time Complexity: O(n)\n# Space Complexity: O(1)"
    },
    {
      "rank": 66,
      "score": 8.567000904156602,
      "candidate": "sum_squares_list = []\n    for i in lst:\n        sum_squares_list.append(round(i ** 2, int(round(i ** 0.5, 0))))\n    return sum(sum_squares_list)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 67,
      "score": 8.5259012464963,
      "candidate": "total = 0\n    for i in lst:\n        total += i**2\n    return total\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 68,
      "score": 8.478392801057332,
      "candidate": "lst_sum = 0\n    for i in lst:\n        lst_sum += i**2\n    return int(lst_sum)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 69,
      "score": 8.470780444272735,
      "candidate": "return sum(round(x ** 2, 0) for x in lst)\n\n\ndef main():\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 70,
      "score": 8.416360497028114,
      "candidate": "lst = list(map(int, lst))\n    sum = 0\n    for num in lst:\n        sum += num**2\n    return sum"
    },
    {
      "rank": 71,
      "score": 8.353131031234264,
      "candidate": "return sum([round(i**2, 0) for i in lst])\n\n\nif __name__ == \"__main__\":\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 72,
      "score": 8.353124628302343,
      "candidate": "return sum(map(lambda x: round(x**2, int(round(x, 0))), lst))\n\n\nif __name__ == \"__main__\":\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 73,
      "score": 8.330683882025067,
      "candidate": "return sum(round(i ** 2, 0) for i in lst)\n\n\nif __name__ == '__main__':\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 74,
      "score": 8.327831577762757,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i ** 2\n    return round(sum_of_squares, int(round(sum_of_squares)))\n\n\ndef test_sum_squares():\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6"
    },
    {
      "rank": 75,
      "score": 8.323851617862472,
      "candidate": "sum_squared = 0\n    for i in lst:\n        sum_squared += i**2\n    return round(sum_squared, int(len(lst) / 2))\n\n\nprint(sum_squares([1, 2, 3]))"
    },
    {
      "rank": 76,
      "score": 8.29426235508208,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i**2\n    return round(sum_of_squares, int(round(sum_of_squares)))\n\n\nif __name__ == '__main__':\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 77,
      "score": 8.262809840552045,
      "candidate": "lst_squared = []\n    for i in lst:\n        lst_squared.append(i ** 2)\n    return sum(lst_squared)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 78,
      "score": 8.242319059317722,
      "candidate": "sum = 0\n    for i in lst:\n        sum = sum + i ** 2\n    return int(round(sum, 0))\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 79,
      "score": 8.237837964975299,
      "candidate": "return sum(map(lambda x: round(x ** 2, 0), lst))\n\n\ndef main():\n    \"\"\"This is the main function\n    \"\"\"\n    # Test Case 1\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n    # Test Case 2\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n\n    # Test Case 3\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n\n    # Test Case 4\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n\n    # Test Case 5\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 80,
      "score": 8.232135181879624,
      "candidate": "sum_squares = 0\n    for item in lst:\n        sum_squares += int(item ** 2)\n    return sum_squares\n\n\nif __name__ == '__main__':\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 81,
      "score": 8.210195355376111,
      "candidate": "sum_squares_lst = 0\n    for i in lst:\n        sum_squares_lst += i**2\n    return round(sum_squares_lst, int(round(max(lst))))\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 82,
      "score": 8.180444864325121,
      "candidate": "return sum(map(lambda x: int(x ** 2), lst))\n\n\nif __name__ == '__main__':\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 83,
      "score": 8.090315054991173,
      "candidate": "result = 0\n    for i in lst:\n        result += i ** 2\n    return result\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 84,
      "score": 8.012973804582094,
      "candidate": "sum_of_squares = 0\n    for num in lst:\n        sum_of_squares += num * num\n    return int(sum_of_squares)"
    },
    {
      "rank": 85,
      "score": 7.968315420955746,
      "candidate": "sum = 0\n    for x in lst:\n        sum += x**2\n    return int(sum)\n\n\nif __name__ == '__main__':\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6"
    },
    {
      "rank": 86,
      "score": 7.893646000923681,
      "candidate": "lst = list(map(int, lst))\n    return sum(map(lambda x: x**2, lst))\n\n\nif __name__ == '__main__':\n    print(sum_squares([1,2,3]))\n    print(sum_squares([1,4,9]))\n    print(sum_squares([1,3,5,7]))\n    print(sum_squares([1.4,4.2,0]))\n    print(sum_squares([-2.4,1,1]))"
    },
    {
      "rank": 87,
      "score": 7.888792651821197,
      "candidate": "return sum([round(x**2, 1) for x in lst])\n\n\nif __name__ == \"__main__\":\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 88,
      "score": 7.698265149027904,
      "candidate": "s = 0\n    for i in lst:\n        s += i ** 2\n    return int(s)\n\n\nprint(sum_squares([1, 2, 3]))\nprint(sum_squares([1, 4, 9]))\nprint(sum_squares([1, 3, 5, 7]))\nprint(sum_squares([1.4, 4.2, 0]))\nprint(sum_squares([-2.4, 1, 1]))"
    },
    {
      "rank": 89,
      "score": 7.680173096131332,
      "candidate": "return sum(map(lambda x: round(x**2, 1), lst))\n\n\ndef sum_squares2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([round(x**2, 1) for x in lst])"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "sum_squares_lst = []\n    for i in lst:\n        sum_squares_lst.append(round(i**2, 3))\n    return sum_squares_lst\n\n\ndef test_sum_squares():\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6\n\n\nif __name__ == '__main__':\n    test_sum_squares()"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i ** 2\n    return sum\n\n\ndef sum_squares_2(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i ** 2\n    return sum\n\n\ndef sum_squares_3(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i ** 2\n    return sum"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "return sum([round(i**2, 0) for i in lst])\n\n\ndef main():\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "sum_squares_lst = 0\n    for i in lst:\n        sum_squares_lst += i**2\n    return sum_squares_lst\n\n\nif __name__ == \"__main__\":\n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert sum_squares([1, 2, 3]) == 14, \"First\"\n    assert sum_squares([1, 4, 9]) == 98, \"Second\"\n    assert sum_squares([1, 3, 5, 7]) == 84, \"Third\"\n    assert sum_squares([1.4, 4.2, 0]) == 29, \"Fourth\"\n    assert sum_squares([-2.4, 1, 1]) == 6, \"Fifth\"\n\n    # These \"asserts\" using only for auto-testing\n    assert sum_squares([]) == 0, \"Empty\"\n    assert sum_squares([1]) == 1, \"One\"\n    assert sum_squares([1, 2, 3]) == 14, \"Two\"\n    assert sum_squares([1, 4, 9]) == 98, \"Three\"\n    assert sum_squares([1, 3, 5, 7]) == 84, \"Four\"\n    assert sum_squares([1.4, 4.2, 0]) == 29, \"Fifth\"\n    assert sum_squares([-2.4, 1, 1]) == 6, \"Sixth\""
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i**2\n    return sum_of_squares\n\n\nif __name__ == \"__main__\":\n    assert sum_squares([1, 2, 3]) == 14\n    assert sum_squares([1, 4, 9]) == 98\n    assert sum_squares([1, 3, 5, 7]) == 84\n    assert sum_squares([1.4, 4.2, 0]) == 29\n    assert sum_squares([-2.4, 1, 1]) == 6"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i**2\n    return round(sum_of_squares, 0)\n\n\ndef main():\n    print(sum_squares([1, 2, 3]))\n    print(sum_squares([1, 4, 9]))\n    print(sum_squares([1, 3, 5, 7]))\n    print(sum_squares([1.4, 4.2, 0]))\n    print(sum_squares([-2.4, 1, 1]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "if len(lst) < 1:\n        return 0\n    lst_sum = 0\n    for element in lst:\n        lst_sum += int(element) ** 2\n    return lst_sum\n\n\ndef sum_squares_2(lst):\n    \"\"\"\n    Given a list of numbers, return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 1:\n        return 0\n    lst_sum = 0\n    for element in lst:\n        lst_sum += element ** 2\n    return lst_sum\n\n\ndef sum_squares_3(lst):\n    \"\"\"\n    Given a list of numbers, return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 1:\n        return 0\n    lst_sum = 0\n    for element in lst:\n        lst_sum += element ** 2\n    return lst_sum ** 2\n\n\ndef sum_squares_4(lst):\n    \"\"\"\n    Given a list of numbers, return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst ="
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in lst:\n        sum += i ** 2\n    return round(sum, int(round(sum, 0)))\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += int(i) ** 2\n    return sum_of_squares\n\n\ndef sum_squares2(lst):\n    \"\"\"\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n\ndef sum_squares3(lst):\n    \"\"\"\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n\ndef sum_squares4(lst):\n    \"\"\"\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i ** 2\n    return sum_of_squares"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i ** 2\n    return round(sum_of_squares, int(max(lst) + 1))\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3]\n    print(sum_squares(lst))\n    lst = [1, 4, 9]\n    print(sum_squares(lst))\n    lst = [1, 3, 5, 7]\n    print(sum_squares(lst))\n    lst = [1.4, 4.2, 0]\n    print(sum_squares(lst))\n    lst = [-2.4, 1, 1]\n    print(sum_squares(lst))"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in lst:\n        sum += int(i)**2\n    return sum\n\n\ndef sum_squares_2(lst):\n    \"\"\"Given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i**2\n    return sum\n\n\ndef sum_squares_3(lst):\n    \"\"\"Given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i**2\n    return sum\n\n\ndef sum_squares_4(lst):\n    \"\"\"Given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst ="
    }
  ]
}