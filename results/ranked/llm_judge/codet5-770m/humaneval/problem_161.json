{
  "timestamp": "2025-09-14T12:27:04.186145",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 161,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1][:1] + s[::-1][1:]\n\n\ndef solve2(s):\n    \"\"\"\n    :type s: str\n    :rtype: str\n    \"\"\"\n    return ''.join(reversed(s))\n\n\nif __name__ == '__main__':\n    assert solve('1234') == '4321'\n    assert solve('ab') == 'AB'\n    assert solve('#a@C') == '#A@c'\n    assert solve2('1234') == '4321'\n    assert solve2('ab') == 'AB'\n    assert solve2('#a@C') == '#A@c'"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "result = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if i < len(s)-1:\n                result += s[i].upper()\n            else:\n                result += s[i].lower()\n        else:\n            if i < len(s)-1:\n                result += s[i].lower()\n            else:\n                result += s[i].upper()\n    return result\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].lower() if s[i].islower() else s[i].upper()\n        elif s[i].isdigit():\n            s[i] = s[i] if s[i].isdigit() else s[i].lower()\n    return ''.join(s)\n\n\ns = input()\nprint(solve(s))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].capitalize()\n\n\ndef solve_2(s):\n    \"\"\"Solution using backtracking.\n    \"\"\"\n    if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].capitalize() + solve_2(s[1:])\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve_2(\"1234\"))\n    print(solve_2(\"ab\"))\n    print(solve_2(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "if not s:\n        return s[::-1]\n    return s[::-1].lower() + s[1::-1].upper() + s[::-1][::-1]\n\n\ndef solve2(s):\n    \"\"\"Solution to problem 5.\n    Given a string s, return the string reversed by changing the first and last characters of the string.\n    Examples\n    solve2(\"1234\") = \"4321\"\n    solve2(\"ab\") = \"AB\"\n    solve2(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return s[::-1][::-1] + s[1::-1][::-1] + s[::-1][1::-1]\n\n\ndef solve3(s):\n    \"\"\"Solution to problem 6.\n    Given a string s, return the string reversed by changing the first character of the string and the last two characters.\n    Examples\n    solve3(\"1234\") = \"4321\"\n    solve3(\"ab\") = \"AB\"\n    solve3(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return s[::-1][::-2] + s[1::-1][::-2] + s[::-1][1::-2]\n\n\ndef solve4(s):\n    \"\"\"Solution to problem 7.\n    Given a string s, return the string reversed by changing the first character of the string and the last two characters.\n    Examples\n    solve4(\"1234\") = \"4321\"\n    solve4(\"ab\") = \"AB\"\n    solve4(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return s[::-1][::-2] + s[1::-1][::-2] + s[::-1][1::-2]\n\n\nif __name__ == '__main__':\n    s = input()\n    print(solve(s))\n    print(solve2(s))\n    print(solve3(s))\n    print"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n        else:\n            s[i] = s[i].upper()\n    return \"\".join(s)\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "if s.isalpha():\n        return s[::-1]\n    else:\n        return s[::-1]"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + s[0].lower()[::-1]\n    else:\n        return solve(s[::-1]) + s[0] + solve(s[1:])\n\nprint(solve(\"1234\"))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "s = list(s)\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            if i > 0:\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n            i += 1\n        else:\n            i += 1\n    return \"\".join(s)\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"123456789\"))\n    print(solve(\"#a@C@ABC\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 9.370583536698913,
      "candidate": "if s == \"\":\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].upper()\n        else:\n            return s[::-1].lower()\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 11,
      "score": 9.234050852198141,
      "candidate": "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + solve(s[0].upper() + s[0].lower()[::-1])\n    else:\n        return solve(s[::-1])"
    },
    {
      "rank": 12,
      "score": 9.226766272351448,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s[0]\n    else:\n        return s[::-1][:1].upper() + s[::-1][1:]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 13,
      "score": 9.21346272767743,
      "candidate": "if s == \"\":\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 14,
      "score": 9.205959372648458,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + s[0].upper() + solve(s[2:])\n        else:\n            return solve(s[1:]) + s[0] + solve(s[2:])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 15,
      "score": 9.183391466815202,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s\n    else:\n        return s[0] + solve(s[1:])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 16,
      "score": 9.177268828905222,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 17,
      "score": 9.122564458729856,
      "candidate": "# Your code here\n    if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:]) + solve(s[0].upper())\n    else:\n        return solve(s[::-1]) + solve(s[0])\n    \n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 18,
      "score": 8.973005557553902,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1] + s[1:]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 19,
      "score": 8.95994420569242,
      "candidate": "if s[0].isalpha():\n        return s[::-1]\n    return s\n\ndef main():\n    s = input()\n    print(solve(s))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 20,
      "score": 8.946210893390457,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].lower() + s[1:]\n        else:\n            return s[::-1].upper() + s[1:]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 21,
      "score": 8.932217008005624,
      "candidate": "s = s.lower()\n    return s[::-1] if s else s"
    },
    {
      "rank": 22,
      "score": 8.910084504002544,
      "candidate": "return s[::-1] if len(s) > 0 else s\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 23,
      "score": 8.85571690049604,
      "candidate": "if not s:\n        return \"\"\n    if not s[0].isalpha():\n        return s[::-1]\n    return s[::-1].upper() + s[1:]"
    },
    {
      "rank": 24,
      "score": 8.855395696632057,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace(s[0], s[0].upper())\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 25,
      "score": 8.850707355641543,
      "candidate": "# Your code here\n    if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].lower() + s[1:]\n    else:\n        return s[::-1].upper() + s[1:]\n\nprint(solve(\"ab\"))\nprint(solve(\"1234\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 26,
      "score": 8.8281618090209,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + s[0].upper() + solve(s[2:])\n        else:\n            return solve(s[1:]) + solve(s[0])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 27,
      "score": 8.81367773444215,
      "candidate": "result = \"\"\n    for i in s:\n        if i.isalpha():\n            result += i.lower()[::-1] if i.isupper() else i.upper()[::-1]\n        else:\n            result += i\n    return result[::-1] if len(result) else s\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 28,
      "score": 8.76828871349479,
      "candidate": "new = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if i > 0:\n                new += s[i-1].upper()\n            else:\n                new += s[i].upper()\n        else:\n            new += s[i]\n    return new\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 29,
      "score": 8.750282588864879,
      "candidate": "if len(s) > 0:\n        if s[0].isalpha():\n            return s[::-1].lower()\n        return s[::-1].upper()\n    return s[::-1]"
    },
    {
      "rank": 30,
      "score": 8.715724466237427,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace(\" \", \"\").replace(\"#\", \"\").replace(\"a\", \"\").replace(\"b\", \"\").replace(\"c\", \"\").replace(\"d\", \"\").replace(\"e\", \"\").replace(\"f\", \"\").replace(\"g\", \"\").replace(\"h\", \"\").replace(\"i\", \"\").replace(\"j\", \"\").replace(\"k\", \"\").replace(\"l\", \"\").replace(\"m\", \"\").replace(\"n\", \"\").replace(\"o\", \"\").replace(\"p\", \"\").replace(\"q\", \"\").replace(\"r\", \"\").replace(\"s\", \"\").replace(\"t\", \"\").replace(\"u\", \"\").replace(\"v\", \"\").replace(\"w\", \"\").replace(\"x\", \"\").replace(\"y\", \"\").replace(\"z\", \"\")"
    },
    {
      "rank": 31,
      "score": 8.692801520950061,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace(s[0], s[1])\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 32,
      "score": 8.632293453617281,
      "candidate": "if not s:\n        return s[::-1]\n    s = list(s)\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if i < len(s) - 1 else s[i].lower()\n        i += 1\n    return ''.join(s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 33,
      "score": 8.625262456968262,
      "candidate": "result = \"\"\n    for i in s:\n        if i.isalpha():\n            result = result + i.lower()[::-1] + i.upper()\n        else:\n            result = result + i\n    return result"
    },
    {
      "rank": 34,
      "score": 8.625142247198651,
      "candidate": "s = list(s)\n    if not s:\n        return \"\"\n    if s[0].isalpha():\n        return s[::-1][::-1]\n    else:\n        return s[::-1]"
    },
    {
      "rank": 35,
      "score": 8.623000730200317,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1][0] + s[::-1][1:]\n\n\nif __name__ == \"__main__\":\n    s = input(\"Enter a string: \")\n    print(\"Original string: \", s)\n    print(\"Reverse string: \", solve(s))"
    },
    {
      "rank": 36,
      "score": 8.616253589228675,
      "candidate": "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].lower() + solve(s[0].upper())\n    else:\n        return solve(s[1:]) + s[0]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 37,
      "score": 8.610076160146226,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    return s[::-1].replace(s[0], s[0].upper())"
    },
    {
      "rank": 38,
      "score": 8.606486429141842,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]).lower() + s[0].upper()\n        else:\n            return solve(s[1:]).upper() + s[0]"
    },
    {
      "rank": 39,
      "score": 8.60156811074208,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].upper() + s[::-1].lower() + s[::-1].upper() + s[::-1].lower()\n\n\n\nprint(solve(\"ab\"))\nprint(solve(\"1234\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 40,
      "score": 8.565425580227462,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n    if len(s) == 0:\n        return \"\".join(reversed(s))\n    else:\n        return \"\".join(s)"
    },
    {
      "rank": 41,
      "score": 8.548876241946822,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + solve(s[0].upper())\n    else:\n        return solve(s[::-1]) + solve(s[0].lower())\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 42,
      "score": 8.542875062379007,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()"
    },
    {
      "rank": 43,
      "score": 8.53012858503943,
      "candidate": "s = list(s)\n    i = 0\n    j = len(s) - 1\n    while i < j:\n        if s[i].isalpha():\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n        elif s[i].isdigit():\n            i += 1\n        else:\n            i += 1\n            j -= 1\n    return \"\".join(s)\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"abcd\"))"
    },
    {
      "rank": 44,
      "score": 8.499905739299377,
      "candidate": "new_str = ''\n    for i in range(len(s)):\n        if s[i].isalpha():\n            new_str = s[i].lower() + new_str + s[i].upper()\n        else:\n            new_str = s[i].lower() + new_str\n    return new_str\n\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 45,
      "score": 8.490324832712195,
      "candidate": "if s.isalpha():\n        return s.lower().upper()[::-1]\n    else:\n        return s"
    },
    {
      "rank": 46,
      "score": 8.48796797856353,
      "candidate": "if s == \"\":\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].lower() + s[1:]\n    else:\n        return s[::-1].upper() + s[1:]"
    },
    {
      "rank": 47,
      "score": 8.478208546788407,
      "candidate": "if len(s) > 0:\n        return s[::-1]\n    else:\n        return s\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 48,
      "score": 8.437695832075478,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].upper() if s[0].isalpha() else s[::-1].lower()\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"\"))"
    },
    {
      "rank": 49,
      "score": 8.426531424889468,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n\n    if s[0] == '#' or s[0] == '@':\n        return s[::-1][1:] + s[::-1][:-1]\n\n    return s[::-1][::-1]"
    },
    {
      "rank": 50,
      "score": 8.408439383654278,
      "candidate": "if s == \"\":\n        return \"\"\n    else:\n        s = s[::-1]\n        if s[0].isalpha():\n            s = s[::-1]\n            return s\n        else:\n            return s[::-1]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 51,
      "score": 8.386620303250325,
      "candidate": "if s == \"\":\n        return \"\"\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + solve(s[0].lower())\n    else:\n        return solve(s[1:]) + s[0].lower() + solve(s[0].upper())\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 52,
      "score": 8.375312293858853,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].lower()\n        else:\n            return s[::-1].upper()"
    },
    {
      "rank": 53,
      "score": 8.351614956112536,
      "candidate": "s = list(s)\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if s[i].isupper() else s[i].lower()\n            i += 1\n        else:\n            s[i] = s[i].upper() if s[i].isupper() else s[i].lower()\n            i += 1\n\n    return \"\".join(s)\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 54,
      "score": 8.334608500525688,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1].lower() + s[1:]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 55,
      "score": 8.331556294201176,
      "candidate": "if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:])\n    else:\n        return solve(s[::-1]) + s[0]"
    },
    {
      "rank": 56,
      "score": 8.327375965969855,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1].replace('a', s[0].upper()).replace('b', s[0].lower()).replace('c', s[0].upper()).replace('d', s[0].lower()).replace('e', s[0].upper()).replace('f', s[0].lower()).replace('g', s[0].upper()).replace('h', s[0].lower())\n\nif __name__ == '__main__':\n    s = input()\n    print(solve(s))"
    },
    {
      "rank": 57,
      "score": 8.327367757082776,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        s_list = list(s)\n        for i in range(len(s)):\n            if s_list[i].isalpha():\n                s_list[i] = s_list[i].upper() if i < len(s)-1 else s_list[i].lower()\n            else:\n                s_list[i] = s_list[i]\n        return \"\".join(s_list)"
    },
    {
      "rank": 58,
      "score": 8.298597569547805,
      "candidate": "if s == \"\":\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 59,
      "score": 8.294940769211511,
      "candidate": "if s:\n        return s[::-1]\n    else:\n        return \"\"\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 60,
      "score": 8.2938925966498,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    return s[::-1]"
    },
    {
      "rank": 61,
      "score": 8.289838256518838,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].upper() + s[1:]\n    else:\n        return s[::-1].lower() + s[1:]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n    print(solve(\"1234\"))"
    },
    {
      "rank": 62,
      "score": 8.251903304236286,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[1:][::-1] + s[0]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 63,
      "score": 8.214125058964552,
      "candidate": "if not s:\n        return s\n    # check if the string contains no letters\n    if not s[0].isalpha():\n        return s[::-1]\n    # if no letters, reverse the string\n    else:\n        return s[::-1].upper() + s[::-1].lower() + s[::-1].upper()\n\n\ndef main():\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 64,
      "score": 8.212735598038213,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[1:].lower() + s[0].upper() + s[::-1]\n        else:\n            return s[::-1]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 65,
      "score": 8.211579567659316,
      "candidate": "s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            elif s[i].isupper():\n                s[i] = s[i].lower()\n            else:\n                s[i] = s[i].upper() + s[i].lower()\n        else:\n            s[i] = s[i][::-1]\n    return \"\".join(s)\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 66,
      "score": 8.209707251476969,
      "candidate": "result = ''\n    for c in s:\n        if c.isalpha():\n            if c.isupper():\n                result += c.lower()\n            else:\n                result += c.upper()\n        else:\n            result += c\n    return result\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 67,
      "score": 8.2048573255218,
      "candidate": "return s[::-1] if s else \"\"\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 68,
      "score": 8.193565922652176,
      "candidate": "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + solve(s[2:])\n    else:\n        return solve(s[1:]) + solve(s[0].lower())\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 69,
      "score": 8.185309335307622,
      "candidate": "if s[0].isalpha():\n        return s[::-1].upper()\n    else:\n        return s[::-1]\n\n\nif __name__ == '__main__':\n    assert solve(\"1234\") == \"4321\"\n    assert solve(\"ab\") == \"AB\"\n    assert solve(\"#a@C\") == \"#A@c\"\n    assert solve(\"\") == \"\"\n    assert solve(\"\") == \"\""
    },
    {
      "rank": 70,
      "score": 8.172253082181854,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s[0]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + s[0].upper() + solve(s[1:])\n        else:\n            return solve(s[1:]) + s[0].lower() + solve(s[1:])\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 71,
      "score": 8.163300679823958,
      "candidate": "if s == \"\":\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]).lower() + solve(s[:1]).upper() + s[0].upper()\n        else:\n            return solve(s[1:]) + solve(s[:1])\n\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 72,
      "score": 8.144125099485041,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].lower()\n    if s[0].isupper():\n        return s[::-1].upper()\n    return s[::-1]"
    },
    {
      "rank": 73,
      "score": 8.143591138329747,
      "candidate": "if s:\n        if s[0].isalpha():\n            return s[::-1].lower() + s[1:]\n        else:\n            return s[::-1]\n    else:\n        return s[::-1]\n\n\nif __name__ == '__main__':\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 74,
      "score": 8.121884567141883,
      "candidate": "result = \"\"\n    if not s:\n        return result\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].isupper():\n                result += s[i].lower()[::-1]\n            else:\n                result += s[i].upper()[::-1]\n        else:\n            result += s[i]\n    return result\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 75,
      "score": 8.105983444291466,
      "candidate": "if s.isalpha():\n        return s[::-1].lower() + s[1:]\n    else:\n        return s[::-1]\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 76,
      "score": 8.08452234024709,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    return s[::-1].upper() + s[::-1].lower() + s[::-1].upper()[::-1] + s[::-1].lower()[::-1]\n\n\nif __name__ == '__main__':\n    s = '1234'\n    print(solve(s))"
    },
    {
      "rank": 77,
      "score": 8.040197642997851,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[1:][::-1] + s[0] + s[2:]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 78,
      "score": 8.024835682833125,
      "candidate": "if s.isalpha():\n        return s[::-1].upper() if s[0].isupper() else s[::-1].lower()\n    else:\n        return s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 79,
      "score": 7.990432406683839,
      "candidate": "if s == \"\":\n        return \"\"\n    if s[0].isalpha():\n        return s[::-1].lower()\n    else:\n        return s[::-1].upper()"
    },
    {
      "rank": 80,
      "score": 7.938028884277233,
      "candidate": "if s == \"\":\n        return \"\"\n    else:\n        return s[::-1]\n\n\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))\nprint(solve(\"1234\"))"
    },
    {
      "rank": 81,
      "score": 7.915588979966494,
      "candidate": "if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return solve(s[1:]) + solve(s[:1])\n    else:\n        return solve(s[::-1]) + solve(s[1:])[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 82,
      "score": 7.8912769574414305,
      "candidate": "if s == \"\":\n        return \"\"\n    else:\n        if s[0].isalpha():\n            return s[::-1].upper()\n        else:\n            return s[::-1]\n\n\nif __name__ == \"__main__\":\n    print(solve(\"1234\"))\n    print(solve(\"ab\"))\n    print(solve(\"#a@C\"))"
    },
    {
      "rank": 83,
      "score": 7.868947655733293,
      "candidate": "if s[0].isalpha():\n        return s[1:].upper() + s[0].lower()[::-1]\n    else:\n        return s[::-1]\n\n\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 84,
      "score": 7.84634113240411,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    elif len(s) == 1:\n        return s\n    elif s[0].isalpha():\n        return s[1:] + s[0] + s[0].upper()\n    else:\n        return s[::-1]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 85,
      "score": 7.834022619458933,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[::-1].upper()\n        else:\n            return s[::-1].lower()\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 86,
      "score": 7.780351419995229,
      "candidate": "if s == '':\n        return ''\n    elif s[0].isalpha():\n        return s[::-1]\n    else:\n        return solve(s[1:]) + s[0] + solve(s[::-1])\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 87,
      "score": 7.738292593776799,
      "candidate": "if not s:\n        return s[::-1]\n    else:\n        s = s.lower()\n        s = s[::-1]\n        s = s.upper()\n        s = s[::-1]\n        s = s.replace('@', '')\n        return s"
    },
    {
      "rank": 88,
      "score": 7.7320703513377165,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if len(s) == 1:\n        return s[::-1]\n    if s[0].isupper():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()"
    },
    {
      "rank": 89,
      "score": 7.705183449260731,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return s[1:].upper() + s[0].lower() + s[::-1]\n        else:\n            return s[::-1]"
    },
    {
      "rank": 90,
      "score": 7.5819855281879285,
      "candidate": "if not s:\n        return \"\"\n    s = s.lower()\n    if s[0] == \"#\":\n        s = s[1:]\n    if s[0] == \"a\":\n        s = s[1:]\n        s = s.upper()\n    return s\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 91,
      "score": 7.562924366763077,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[::-1].upper()\n    return s[::-1].lower()\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 92,
      "score": 7.4878043221155455,
      "candidate": "if len(s) > 0:\n        return s[::-1]\n    else:\n        return s[::-1]\n\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 93,
      "score": 7.464609382504557,
      "candidate": "if len(s)==0:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[1:]) + solve(s[0].upper()+s[1:])\n        else:\n            return solve(s[1:]) + solve(s[0])\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 94,
      "score": 7.4506599871439985,
      "candidate": "return s[::-1] if len(s) > 0 else s\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 95,
      "score": 7.134571892399572,
      "candidate": "s = s.lower()\n    if len(s) == 0:\n        return s[::-1]\n    else:\n        return s[::-1][::-1]\n\nprint(solve(\"1234\"))\nprint(solve(\"ab\"))\nprint(solve(\"#a@C\"))"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].upper() + solve(s[0].lower())\n    else:\n        return solve(s[1:]) + s[0]\n\n\ndef solve_2(s):\n    \"\"\"You are given a string s.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve_2(s[1:]) + s[0].upper() + solve_2(s[0].lower())\n    else:\n        return solve_2(s[1:]) + s[0]\n\n\ndef solve_3(s):\n    \"\"\"You are given a string s.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return solve_3(s[1:]) + s[0].upper() + solve_3(s[0].lower())\n    else:\n        return solve_3(s[1:]) + s[0]\n\n\ndef solve_4(s):\n    \"\"\"You are given a string s.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if s[0].isalpha():\n        return"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "return \"\".join(list(reversed(s)))\n\n\ndef solve2(s):\n    return s[::-1]\n\n\ndef solve3(s):\n    return s[::2]\n\n\ndef solve4(s):\n    return s[::-2]\n\n\ndef solve5(s):\n    return s[::-3]\n\n\ndef solve6(s):\n    return s[::-4]\n\n\ndef solve7(s):\n    return s[::-5]\n\n\ndef solve8(s):\n    return s[::-6]\n\n\ndef solve9(s):\n    return s[::-7]\n\n\ndef solve10(s):\n    return s[::-8]\n\n\ndef solve11(s):\n    return s[::-9]\n\n\ndef solve12(s):\n    return s[::-10]\n\n\ndef solve13(s):\n    return s[::-11]\n\n\ndef solve14(s):\n    return s[::-12]\n\n\ndef solve15(s):\n    return s[::-13]\n\n\ndef solve16(s):\n    return s[::-14]\n\n\ndef solve17(s):\n    return s[::-15]\n\n\ndef solve18(s):\n    return s[::-16]\n\n\ndef solve19(s):\n    return s[::-17]\n\n\ndef solve20(s):\n    return s[::-18]\n\n\ndef solve21(s):\n    return s[::-19]\n\n\ndef solve22(s):\n    return s[::-20]\n\n\ndef solve23(s):\n    return s[::-21]\n\n\ndef solve24(s):\n    return s[::-22]\n\n\ndef solve25(s):\n    return s[::-23]\n\n\ndef solve26(s):\n    return s[::-24]\n\n\ndef solve27(s):\n    return s[::-25]\n\n\ndef solve28(s):\n    return s[::-26]\n\n\ndef solve29(s):"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "if not s:\n        return s[::-1]\n    return s[::-1][:1] + s[::-1][1:] + s[::-1][::-1]\n\n\ndef solve_2(s):\n    \"\"\"\n    Solution:\n    \"\"\"\n    if not s:\n        return s\n    return s[::-1][::-1] + s[::-1][::-1][::-1] + s[::-1][::-1][::-1]\n\n\nif __name__ == \"__main__\":\n    s = \"1234\"\n    print(solve(s))\n    print(solve_2(s))"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "if len(s) == 0:\n        return s[::-1]\n    else:\n        return ''.join([i[::-1] if i.isalpha() else i for i in s])\n\n\nif __name__ == '__main__':\n    import unittest\n    class Test(unittest.TestCase):\n        def test_case1(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case2(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case3(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case4(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case5(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case6(self):\n            self.assertEqual(solve('1234'), '4321')\n            self.assertEqual(solve('ab'), 'AB')\n            self.assertEqual(solve('#a@C'), '#A@c')\n            self.assertEqual(solve(''), '')\n\n        def test_case7("
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "if not s:\n        return ''\n    result = ''\n    for i in range(len(s)):\n        if s[i].isalpha():\n            result = result + s[i].lower() if i > 0 else s[i].upper()\n        else:\n            result = result + s[i] if i > 0 else s[i]\n    return result\n\n\ndef test_solve():\n    assert solve('ab') == 'AB'\n    assert solve('1234') == '4321'\n    assert solve('#a@C') == '#A@c'\n    assert solve('') == ''\n    assert solve('') == ''\n\n\nif __name__ == '__main__':\n    test_solve()"
    }
  ]
}