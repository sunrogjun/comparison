{
  "timestamp": "2025-09-14T12:25:18.531053",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 157,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "return a == b == c and abs(a - b) == abs(a - c)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "if abs(a + b + c) == 2:\n        return True\n    return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "return (a + b == c) and (a + c == b or b + c == a)\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) == (b + c) or (a + c == b or b + c == a))\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return (a + b + c) == (c + b or a + c == b)\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return a + b == (c + b) or a + c == (b + c)\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-ang"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "return ((a + b) == c and (a + c) == b)\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "if a == b and b == c:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    elif a == b or b == c or a == c:\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_2(a, b, c):\n    return a + b > c"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "return (a + b == c) or (a + c == b) or (a == c + b)\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "if a + b > c:\n        return False\n    return True\n\ndef right_angle_triangle_no_loop(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return True if a + b > c else False\n\ndef right_angle_triangle_no_loop_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if a + b == c:\n        return True\n    return False\n\ndef right_angle_triangle_no_loop_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if a + b == c:\n        return True\n    return False\n\ndef right_angle_triangle_no_loop_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "if a > b and b > c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(1, 2, -3))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "if a+b>c:\n        return False\n    else:\n        return True\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "return (a == b + c) and (a == b or a == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "if a + b > c:\n        return False\n    return True\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "if a + b == c:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angled(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angled(3, 4, 5) == True\n    triangle_is_right_angled(1, 2, 3) == False\n    '''\n    return right_angle_triangle(a, b, c)\n\n\ndef triangle_is_right_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle(3, 4, 5) == True\n    triangle_is_right_angle(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef triangle_is_right_angle_and_right_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle_and_right_angle(3, 4, 5) == True\n    triangle_is_right_angle_and_right_angle(1, 2, 3) == False\n    '''\n    return triangle_is_right_angle(a, b, c) and triangle_is_right_angle(a, b, c)\n\n\ndef triangle_is_right_angle_and_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-ang"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "if a == b and c == b:\n        return True\n    elif a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "return a == b + c"
    },
    {
      "rank": 16,
      "score": 9.0,
      "candidate": "if (a + b) > c:\n        return False\n    return True"
    },
    {
      "rank": 17,
      "score": 8.0,
      "candidate": "return (a + b + c) % 2 == 0\n\n\ndef main():\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))\n    print(right_angle_triangle(1, 4, 2))\n    print(right_angle_triangle(2, 1, 3))\n    print(right_angle_triangle(4, 3, 2))\n    print(right_angle_triangle(4, 2, 1))\n    print(right_angle_triangle(3, 4, 5))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "if a == b and c == b:\n        return True\n    elif a == b or a == c or b == c:\n        return False\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "if a == b == c:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "if a + b > c:\n        return False\n    if a == b == c:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "return ((a + b) == c and (a + c) == b)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "return (a + b + c) % 2 == 0\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "return (a + b + c) == (a + b) and (a + c) == (b + c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "if a == b and b == c:\n        return True\n    if a == b or b == c or c == a:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(1, 2, -3))\nprint(right_angle_triangle(3, 4, -5))\nprint(right_angle_triangle(3, -4, 5))\nprint(right_angle_triangle(3, 4, -1))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "if a < b + c:\n        return False\n    return a == b == c\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "return (a + b > c) and (a + c > b) and (b + c > a)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(4, 5, 6))\nprint(right_angle_triangle(5, 6, 7))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "return a == b and b == c\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "if (a + b == c) or (a + c == b) or (b + c == a):\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "if a == b and a == c:\n        return True\n    elif a == b or b == c or c == a:\n        return False\n    else:\n        return False"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "if a == b == c:\n        return True\n    elif a == b or a == c or b == c:\n        return False\n    else:\n        return True\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 6))\nprint(right_angle_triangle(6, 2, 1))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "if a > b + c:\n        return False\n    elif b > a + c:\n        return False\n    elif c > a + b:\n        return False\n    else:\n        return True\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "if a > b + c or b > a + c or c > a + b:\n        return False\n    else:\n        return True\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(4, 5, 6) == True\n    assert right_angle_triangle(4, 5, 7) == False\n\ntest_right_angle_triangle()"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "return a == b and b == c"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "if a+b>c:\n        return False\n    else:\n        return True\n\ndef main():\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "if a + b > c:\n        return False\n    else:\n        return True\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "if a == b == c:\n        return True\n    elif a == b or a == c or b == c:\n        return False\n    else:\n        return True\n\n\nif __name__ == \"__main__\":\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "if a + b < c:\n        return False\n    return True\n\nprint(right_angle_triangle(3, 4, 5))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "if (a + b == c) or (a == b and b == c):\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "if abs(a + b) == abs(c):\n        return True\n    else:\n        return False"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "if a == b or a == c or b == c:\n        return True\n    return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(3, 4, 5))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "return (a + b) == c\n\n\ndef right_angle_circle(r):\n    '''\n    Given the radius of a circle. Return True if the radius is right-angled, False\n    otherwise.\n    A right-angled circle is a circle in which one angle is right angle or 90 degree.\n    Example:\n    right_angle_circle(3) == True\n    right_angle_circle(1) == False\n    '''\n    return r == (r + r) / 2\n\n\ndef right_angle_circle(r):\n    '''\n    Given the radius of a circle. Return True if the radius is right-angled, False\n    otherwise.\n    A right-angled circle is a circle in which one angle is right angle or 90 degree.\n    Example:\n    right_angle_circle(3) == True\n    right_angle_circle(1) == False\n    '''\n    return r == (r + r / 2)"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "return a == b and b == c\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "return (a + b > c) and (b + c > a) and (c + a > b)"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "if a > b and a > c:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "if a == b and a == c:\n        return True\n    if a!= b or b!= c or c!= a:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(4, 5, 6))\nprint(right_angle_triangle(1, 4, 6))\nprint(right_angle_triangle(2, 4, 6))\nprint(right_angle_triangle(1, 1, 1))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "if (a + b) % c == 0:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "if (a + b == c):\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "if a == b == c:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "return ((a + b) == c) or ((a + c) == b)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "if a == b + c:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef main():\n    '''\n    Driver code\n    '''\n    a, b, c = map(int, input().split())\n    print(right_angle_triangle(a, b, c))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "return a == b and b == c\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "if a + b > c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "return (a + b == c) or (a == b and b == c) or (a == c and b == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "if a+b+c==180:\n        return True\n    return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "return ((a * a) + (b * b) == c * c)\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "return a == b and b == c and c == a"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "if a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "return ((a+b) == c) or ((a+c) == b) or ((b+c) == a)"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "return a == b and b == c\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "if a > b + c:\n        return False\n    elif a == b and b == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "return (a + b) == c and (a + c) == b and (a + b == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "return a == b and b == c or a == c and b == c\n\n\ndef right_angle_sphere(r):\n    '''\n    Given the radius of a sphere. Return True if the radius is a right-angle \n    sphere, False otherwise.\n    Example:\n    right_angle_sphere(4) == True\n    right_angle_sphere(3) == False\n    '''\n    return r == 3 or r == 6 or r == 9"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "if a > b and a > c:\n        return True\n    elif b > c:\n        return True\n    else:\n        return False\n\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "return abs(a + b - c) == 1\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(2, 3, 5))\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "return (a + b + c) % 2 == 0\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(5, 1, 3))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "if a < b + c:\n        return False\n    if b < a + c:\n        return False\n    return True\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(1, 3, 2))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "if (a == b and b == c) or (a == c and b == c):\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\nprint(right_angle_triangle(4, 3, 2))\nprint(right_angle_triangle(2, 3, 1))\nprint(right_angle_triangle(5, 3, 2))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "return (a + b == c) and (a == b or a == c)\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "if a == b and b == c:\n        return True\n    elif a!= b or b!= c or c!= a:\n        return False\n    else:\n        return True\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))"
    },
    {
      "rank": 74,
      "score": 1.0,
      "candidate": "return (a + b == c) and (a == c or a == b or b == c)\n\n\ndef right_angle_triangle_no_return(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return (a + b == c) and (a == c or a == b or b == c)\n\n\ndef right_angle_triangle_no_return_no_return(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return (a + b == c) and (a == c or a == b or b == c)\n\n\ndef triangle_of_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the length of the \n    triangle.\n    Example:\n    triangle_of_sides(3, 4, 5) == 3\n    triangle_of_sides(1, 2, 3) == 2\n    '''\n    return a + b + c\n\n\ndef triangle_of_sides_no_return(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return the length of the \n    triangle.\n    Example:\n    triangle_of_sides(3, 4, 5) == 3\n    triangle_of_sides(1, 2, 3) == 2\n    '''\n    return a + b + c\n\n\ndef triangle_of"
    },
    {
      "rank": 75,
      "score": 1.0,
      "candidate": "return a == b and b == c and c == 90\n\n\ndef right_angle_sphere(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_sphere(3) == True\n    right_angle_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9\n\n\ndef right_angle_sphere2(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_sphere(3) == True\n    right_angle_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9\n\n\ndef is_sphere(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    is_sphere(3) == True\n    is_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9\n\n\ndef is_sphere2(r):\n    '''\n    Given the radius of a sphere. Return True if the sphere is a right-angled\n    sphere, False otherwise.\n    A right-angled sphere is a sphere in which one angle is right angle or \n    90 degree.\n    Example:\n    is_sphere(3) == True\n    is_sphere(1) == False\n    '''\n    return r == 3 or r == 6 or r == 9"
    },
    {
      "rank": 76,
      "score": 1.0,
      "candidate": "if a == b and b == c:\n        return True\n    return False\n\n\ndef right_angle_circle(r):\n    '''\n    Given the radius of a circle, return True if the radius is right or \n    90 degree.\n    Example:\n    right_angle_circle(3) == True\n    right_angle_circle(1) == False\n    '''\n    if r == 3:\n        return True\n    return False\n\n\ndef right_angle_square(s):\n    '''\n    Given the length of a square, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_square(3) == True\n    right_angle_square(1) == False\n    '''\n    if s == 3:\n        return True\n    return False\n\n\ndef right_angle_pentagon(p):\n    '''\n    Given the length of a pentagon, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_pentagon(3) == True\n    right_angle_pentagon(1) == False\n    '''\n    if p == 3:\n        return True\n    return False\n\n\ndef right_angle_hexagon(h):\n    '''\n    Given the length of a hexagon, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_hexagon(3) == True\n    right_angle_hexagon(1) == False\n    '''\n    if h == 3:\n        return True\n    return False\n\n\ndef right_angle_hexagon_cuboid(h):\n    '''\n    Given the length of a hexagon, return True if the length is right or \n    90 degree.\n    Example:\n    right_angle_hexagon_cuboid(3) == True\n    right_angle_hexagon_cuboid(1) == False\n    '''\n    if h == 3:\n        return True\n    return False\n\n\ndef right_angle_hexagon_cuboid_square(h):\n    '''\n    Given the length of a hexagon, return True if"
    },
    {
      "rank": 77,
      "score": 1.0,
      "candidate": "return ((a + b + c) % 2 == 0)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) % 2 == 0) and ((a + b + c) == (a + b + c) / 2)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) % 2 == 0) and ((a + b + c) == (a + b + c) / 2) and ((a + b + c)!= (a + b + c) / 2)\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return ((a + b + c) % 2 == 0) and ((a + b + c) == (a + b + c) / 2) and ((a + b + c)!= (a + b + c) / 2"
    },
    {
      "rank": 78,
      "score": 1.0,
      "candidate": "return a == b and b == c and c == a\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return a == b or b == c or c == a\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3, 4, 5) == True\n    right_angle_triangle_4(1, 2, 3) == False\n    '''\n    return a == b or b == c or c == a\n\n\ndef right_angle_triangle_5(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle"
    },
    {
      "rank": 79,
      "score": 1.0,
      "candidate": "return (a + b) == c or (a + c) == b or (b + c) == a\n\n\ndef right_angle_triangle2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle2(3, 4, 5) == True\n    right_angle_triangle2(1, 2, 3) == False\n    '''\n    return a == b and b == c and c == a"
    },
    {
      "rank": 80,
      "score": 1.0,
      "candidate": "if a == b and b == c:\n        return True\n    elif a!= b and b!= c and c!= a:\n        return False\n    else:\n        return False\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n\n\nif __name__ == '__main__':\n    test_right_angle_triangle()"
    },
    {
      "rank": 81,
      "score": 1.0,
      "candidate": "return (a + b + c) % 2 == 0\n\n\ndef right_angle_trig(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_trig(3, 4, 5) == True\n    right_angle_trig(1, 2, 3) == False\n    '''\n    return (a + b + c) == (a + b + c) / 2\n\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_1(3, 4, 5) == True\n    right_angle_triangle_1(1, 2, 3) == False\n    '''\n    return a == (b + c) / 2\n\n\ndef right_angle_trig_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_trig_1(3, 4, 5) == True\n    right_angle_trig_1(1, 2, 3) == False\n    '''\n    return a == (b + c) / 2\n\n\ndef right_angle_trig_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_trig"
    },
    {
      "rank": 82,
      "score": 1.0,
      "candidate": "return a == b + c and (a == b or a == c)\n\n\ndef main():\n    print(right_angle_triangle(3, 4, 5))\n    print(right_angle_triangle(1, 2, 3))\n    print(right_angle_triangle(1, 2, 4))\n    print(right_angle_triangle(1, 2, 3))\n    print(right_angle_triangle(1, 2, 4))\n    print(right_angle_triangle(1, 2, 5))\n    print(right_angle_triangle(1, 2, 6))\n    print(right_angle_triangle(1, 2, 7))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 83,
      "score": 1.0,
      "candidate": "return a == b and b == c or a == c and b == c\n\ndef left_angle_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a left-angled triangle, False otherwise.\n    A left-angled triangle is a triangle in which one angle is left angle or \n    90 degree. Example:\n    left_angle_triangle(3, 4, 5) == True\n    left_angle_triangle(1, 2, 3) == False\n    '''\n    return a == b or a == c and b == c\n\ndef right_angle_hexagon(a, b, c):\n    '''\n    Given the lengths of the three sides of a hexagon. Return True if the three\n    sides form a right-angled hexagon, False otherwise.\n    A right-angled hexagon is a hexagon in which one angle is right angle or \n    90 degree. Example:\n    right_angle_hexagon(3, 4, 5) == True\n    right_angle_hexagon(1, 2, 3) == False\n    '''\n    return a == b or a == c and b == c\n\ndef left_angle_hexagon(a, b, c):\n    '''\n    Given the lengths of the three sides of a hexagon. Return True if the three\n    sides form a left-angled hexagon, False otherwise.\n    A left-angled hexagon is a hexagon in which one angle is left angle or \n    90 degree. Example:\n    left_angle_hexagon(3, 4, 5) == True\n    left_angle_hexagon(1, 2, 3) == False\n    '''\n    return a == b or a == c and b == c"
    },
    {
      "rank": 84,
      "score": 1.0,
      "candidate": "return a == b + c\n\n\ndef check(candidate):\n    assert candidate(3, 4, 5) == True, \"Test failed\"\n    assert candidate(1, 2, 3) == False, \"Test failed\"\n    print(\"Test passed!\")\n\n\ncheck(right_angle_triangle)"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "if a < b + c:\n        return False\n    elif a > b or b > c or c > a:\n        return False\n    return True\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    if a < b + c:\n        return False\n    elif a > b or b > c or c > a:\n        return False\n    return True"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "if a > b + c:\n        return False\n    elif a > b and b > c:\n        return False\n    elif a > c:\n        return False\n    elif b > c:\n        return False\n    else:\n        return True\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(3, 4, 5) == False\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(1, 2, 3) == True\n\n\ntest_right_angle_triangle()"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "return a == b and b == c and c == a or a == c and b == c and c == a\n\n\ndef is_triangle(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they form a\n    triangle, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_triangle(3, 4, 5) == True\n    is_triangle(1, 2, 3) == False\n    '''\n    return a == b and b == c and c == a\n\n\ndef is_sides_equal(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they are\n    equal, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_sides_equal(3, 4, 5) == True\n    is_sides_equal(1, 2, 3) == False\n    '''\n    return a == b or b == c or c == a\n\n\ndef is_sides_not_equal(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they are\n    not equal, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_sides_not_equal(3, 4, 5) == True\n    is_sides_not_equal(1, 2, 3) == False\n    '''\n    return a!= b or b!= c or c!= a\n\n\ndef is_sides_greater_than(a, b, c):\n    '''\n    Given two lengths of the three sides of a triangle, return True if they are\n    greater than or equal to the other sides of a triangle, False otherwise.\n    A triangle is a triangle in which one side is right angle or 90 degree.\n    Example:\n    is_sides_greater_than(3, 4, 5) == True\n    is_sides_greater_than(1, 2, 3) == False\n    '''\n    return a > b"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "if (a + b > c):\n        return False\n    return True\n\n\ndef left_angle_triangle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a left-angled triangle, False otherwise.\n    A left-angled triangle is a triangle in which one angle is left angle or \n    90 degree. Example:\n    left_angle_triangle(3, 4, 5) == True\n    left_angle_triangle(1, 2, 3) == False\n    '''\n    if (a + c > b):\n        return False\n    return True\n\n\ndef right_angle_triangle_with_side(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree. Example:\n    right_angle_triangle_with_side(3, 4, 5) == True\n    right_angle_triangle_with_side(1, 2, 3) == False\n    '''\n    if (a + b > c):\n        return False\n    return True\n\n\ndef left_angle_triangle_with_side(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a left-angled triangle, False otherwise.\n    A left-angled triangle is a triangle in which one angle is left angle or \n    90 degree. Example:\n    left_angle_triangle_with_side(3, 4, 5) == True\n    left_angle_triangle_with_side(1, 2, 3) == False\n    '''\n    if (a + c > b):\n        return False\n    return True"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\n\ndef right_angle_triangle_4(a, b, c, d):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3, 4, 5) == True\n    right_angle_triangle_4(1, 2, 3) == False\n    '''\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b) or (d == a and d == b)"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle(3, 4, 5))\nprint(right_angle_triangle(1, 2, 3))\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle_2(3, 4, 5))\nprint(right_angle_triangle_2(1, 2, 3))\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    if (a + b) == c:\n        return True\n    else:\n        return False\n\nprint(right_angle_triangle_3(3, 4, 5))\nprint(right_angle_triangle_3(1, 2, 3))\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_tri"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "return a == b + c and b == c + a\n\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_1(3, 4, 5) == True\n    right_angle_triangle_1(1, 2, 3) == False\n    '''\n    return (a == b or b == c or c == a) and (a + b == c + a)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return (a == b or b == c or c == a) and (a + b == c + b)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return (a == b or b == c or c == a) and (a + b == c + c)\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "if a == 0 or b == 0 or c == 0:\n        return False\n    return ((b**2 + c**2 - a**2) == 0)\n\n\ndef right_angle_triangle_squares(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_squares(3, 4, 5) == True\n    right_angle_triangle_squares(1, 2, 3) == False\n    '''\n    if a == 0 or b == 0 or c == 0:\n        return False\n    return ((b**2 + c**2 - a**2) == 0) and ((b**2 + c**2 - a**2) == 0)\n\n\ndef right_angle_triangle_squares_squares(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_squares_squares(3, 4, 5) == True\n    right_angle_triangle_squares_squares(1, 2, 3) == False\n    '''\n    if a == 0 or b == 0 or c == 0:\n        return False\n    return ((b**2 + c**2 - a**2) == 0) and ((b**2 + c**2 - a**2) == 0) and ((b**2 + c**2 - a**2) == 0)"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "return ((a + b) == c) or ((a + c) == b)\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return ((a + b) == c) or ((a + c) == b)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return ((a + b) == c) or ((a + c) == b)\n\n\ndef right_angle_triangle_4(a, b, c, d):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3, 4, 5) == True\n    right_angle_triangle_4(1, 2, 3) == False\n    '''\n    return ((a + b) == c) or ((a + c) == d) or ((a + d) == b)"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "if a == b and b == c:\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_fast(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    return a == b and b == c and c == a"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "if a == b and c == b:\n        return True\n    elif a == b or c == b:\n        return False\n    elif a == c or c == c:\n        return False\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    if a == b and c == b:\n        return True\n    elif a == b or c == b:\n        return False\n    elif a == c or c == c:\n        return False\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    if a == b and c == b:\n        return True\n    elif a == b or c == b:\n        return False\n    elif a == c or c == c:\n        return False"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "if (a + b + c) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_with_hypotenuse(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if abs(a - b) == abs(c - b):\n        return True\n    elif abs(a - b) == abs(c - c):\n        return True\n    else:\n        return False\n\n\ndef right_angle_triangle_with_hypotenuse_with_hypotenuse(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle(3, 4, 5) == True\n    right_angle_triangle(1, 2, 3) == False\n    '''\n    if a == b == c:\n        return True\n    elif a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle(1, 3, 2) == True\n    assert right_angle_triangle(1, 2, 3) == False\n\n\ndef test_right_angle_triangle_with_hypotenuse():\n    assert right_angle_triangle_with_hypotenuse(3, 4, 5) == True\n    assert right_angle"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "return (a + b) == c\n\n\ndef right_angle_triangle_1(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_1(3, 4, 5) == True\n    right_angle_triangle_1(1, 2, 3) == False\n    '''\n    return (a + b) == c\n\n\ndef right_angle_triangle_2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_2(3, 4, 5) == True\n    right_angle_triangle_2(1, 2, 3) == False\n    '''\n    return (a + b) == (c + a)\n\n\ndef right_angle_triangle_3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_3(3, 4, 5) == True\n    right_angle_triangle_3(1, 2, 3) == False\n    '''\n    return (a + b) == (c + b)\n\n\ndef right_angle_triangle_4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle_4(3"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "if a == b and a == c:\n        return True\n    return False\n\n\ndef right_angle_triangle2(a, b, c):\n    return a == b or b == c or c == a\n\n\ndef test_right_angle_triangle():\n    assert right_angle_triangle(3, 4, 5) == True\n    assert right_angle_triangle(1, 2, 3) == False\n    assert right_angle_triangle2(3, 4, 5) == True\n    assert right_angle_triangle2(1, 2, 3) == False\n\n\nif __name__ == '__main__':\n    test_right_angle_triangle()"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "if (a + b + c) % 2 == 0:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angle(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle(3, 4, 5) == True\n    triangle_is_right_angle(1, 2, 3) == False\n    '''\n    if a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angle_with_negative_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle_with_negative_sides(3, 4, 5) == True\n    triangle_is_right_angle_with_negative_sides(1, 2, 3) == False\n    '''\n    if a == b or b == c or c == a:\n        return True\n    else:\n        return False\n\n\ndef triangle_is_right_angle_with_positive_sides(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    triangle_is_right_angle_with_positive_sides(3, 4, 5) == True\n    triangle_is_right_angle_with_positive_sides(1, 2, 3) == False\n    '''\n    if a == b or b == c or c == a:\n        return True\n    else:\n        return False"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "return a == b and b == c\n\n\ndef right_angle_triangle2(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle2(3, 4, 5) == True\n    right_angle_triangle2(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef right_angle_triangle3(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle3(3, 4, 5) == True\n    right_angle_triangle3(1, 2, 3) == False\n    '''\n    return a == b and b == c\n\n\ndef right_angle_triangle4(a, b, c):\n    '''\n    Given the lengths of the three sides of a triangle. Return True if the three\n    sides form a right-angled triangle, False otherwise.\n    A right-angled triangle is a triangle in which one angle is right angle or \n    90 degree.\n    Example:\n    right_angle_triangle4(3, 4, 5) == True\n    right_angle_triangle4(1, 2, 3) == False\n    '''\n    return a == b and b == c"
    }
  ]
}