{
  "timestamp": "2025-09-14T11:31:44.791692",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 36,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "result = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            result += 1\n        if i % 15 == 1:\n            result += 2\n        if i % 15 == 2:\n            result += 3\n        if i % 15 == 3:\n            result += 4\n        if i % 15 == 4:\n            result += 5\n        if i % 15 == 5:\n            result += 6\n        if i % 15 == 6:\n            result += 7\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(n):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 2\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += fizz_buzz(i // 11)\n        elif i % 13 == 0:\n            count += fizz_buzz(i // 13)\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(1, n) if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            if count % 3 == 0:\n                count += 1\n                if count % 5 == 0:\n                    count += 1\n        elif i % 13 == 0:\n            count += 1\n            if count % 3 == 0:\n                count += 1\n                if count % 5 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(1, n+1) if i % 11 == 0 or i % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(n) if str(i).count(\"7\") % 11 == 0 or str(i).count(\"7\") % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(n):\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        elif i % 3 == 0:\n            count += 1\n        elif i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(1, n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "return sum([1 for i in range(1, n + 1) if (i % 11) == 0 or (i % 13) == 0])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        if i % 7 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "return sum(\n        1\n        for i in range(1, n + 1)\n        if (i % 11 == 0 or i % 13 == 0)\n        and (i % 3 == 0 or i % 5 == 0)\n    )"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0)"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n        if count == 0:\n            print(\"FizzBuzz\")\n        elif count == 1:\n            print(\"Fizz\")\n        elif count == 2:\n            print(\"Buzz\")\n        else:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0) and (i % 13 == 0))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(n):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(n):\n        if i % 15 == 7:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(1, n) if i % 11 == 0 or i % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "return sum(1 for i in range(n) if i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "count = 0\n    for x in range(n):\n        if x % 7 == 0:\n            count += 1\n        if x % 11 == 0:\n            count += 1\n        if x % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 9.993251387631034,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and i!= 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 9.982086980445024,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0) and (i % 13 == 0))\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 39,
      "score": 9.963994939209833,
      "candidate": "return sum([1 for i in range(n) if (i % 3 == 0 and i % 5 == 0) or (i % 3 == 0 and i % 5!= 0)])\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 40,
      "score": 9.94217585880588,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(fizz_buzz(int(input())))"
    },
    {
      "rank": 41,
      "score": 9.930867849414408,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 42,
      "score": 9.907170511668092,
      "candidate": "return sum(1 for num in range(n) if (num % 3 == 0 or num % 5 == 0) and (num % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 43,
      "score": 9.887111849756732,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 44,
      "score": 9.88293152152541,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += fizz_buzz(i)\n        elif i % 13 == 0:\n            count += buzz_buzz(i)\n    return count\n\n\ndef fizz_buzz_iterative(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz_iterative(50)\n    0\n    >>> fizz_buzz_iterative(78)\n    2\n    >>> fizz_buzz_iterative(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            yield i\n        elif i % 11 == 0:\n            yield fizz_buzz_iterative(i)\n        elif i % 13 == 0:\n            yield buzz_buzz_iterative(i)\n\n\ndef fizz_buzz_recursive(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz_recursive(50)\n    0\n    >>> fizz_buzz_recursive(78)\n    2\n    >>> fizz_buzz_recursive(79)\n    3\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 and i % 13 == 0:\n            yield i\n        elif i % 11 == 0:\n            yield fizz_buzz_recursive(i)\n        elif i % 13 == 0:\n            yield buzz_buzz_recursive(i)\n        elif i % 11 == 0 and i % 13 == 0:\n            yield i\n        else:\n            yield i\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 45,
      "score": 9.882923312638333,
      "candidate": "count = 0\n    for i in range(n):\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        elif i % 3 == 0:\n            count += 1\n        elif i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 46,
      "score": 9.854153125103362,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 9.850496324767066,
      "candidate": "return sum(1 for i in range(n) if i % 11 == 0 or i % 13 == 0 and i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 48,
      "score": 9.849448152205355,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += (i % 11)\n        elif i % 13 == 0:\n            count += (i % 13)\n        else:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 9.845393812074393,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 50,
      "score": 9.807458859791842,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            print(\"Fizz\")\n        elif i % 13 == 0:\n            count += 1\n            print(\"Buzz\")\n        else:\n            print(i)\n    return count\n\n\nif __name__ == '__main__':\n    print(fizz_buzz(int(input().strip())))"
    },
    {
      "rank": 51,
      "score": 9.769680614520107,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0 and i % 5 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 9.768291153593768,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(fizz_buzz(int(input().strip())))"
    },
    {
      "rank": 53,
      "score": 9.76713512321487,
      "candidate": "return sum(1 for i in range(1, n + 1) if i % 11 == 0 or i % 13 == 0 or str(i)[:2] == '7')\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 9.765262807032524,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            if i % 13 == 0:\n                count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 55,
      "score": 9.760412881077356,
      "candidate": "return sum(1 for i in range(n) if i % 3 == 0 and i % 5 == 0)\n\n\ndef fizz_buzz_n_times(n: int):\n    \"\"\"Return the number of times the digit 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz_n_times(50)\n    0\n    >>> fizz_buzz_n_times(78)\n    2\n    >>> fizz_buzz_n_times(79)\n    3\n    \"\"\"\n    return sum(1 for i in range(n) if i % 3 == 0 and i % 5 == 0 and i % 11 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 56,
      "score": 9.72780863773741,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        if (i % 11) == 0 and (i % 13) == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n        if i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 57,
      "score": 9.718856235379514,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 58,
      "score": 9.699680655040597,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 and i % 13 == 0) or (i % 3 == 0 and i % 5 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 59,
      "score": 9.699146693885302,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0) or (i % 13 == 0))"
    },
    {
      "rank": 60,
      "score": 9.677440122697439,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 61,
      "score": 9.661538999847021,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += i\n        elif i % 13 == 0:\n            count += i\n        else:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 62,
      "score": 9.640077895802646,
      "candidate": "return sum(1 for i in range(1, n+1) if i % 3 == 0 or i % 5 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 63,
      "score": 9.58039123838868,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n            print(\"FizzBuzz\")\n        elif i % 13 == 0:\n            count += 1\n            print(\"Buzz\")\n        else:\n            print(i)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 64,
      "score": 9.545987962239394,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        if i % 11 == 0:\n            count += 1\n            if count > 1:\n                break\n        if i % 13 == 0:\n            count += 1\n            if count > 1:\n                break\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 65,
      "score": 9.493584439832787,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 66,
      "score": 9.47114453552205,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if (i % 11 == 0) and (i % 13 == 0):\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 67,
      "score": 9.446832512996986,
      "candidate": "return sum(i for i in range(1, n + 1) if str(i).count(\"7\") % 11 == 0 or str(i).count(\"7\") % 13 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 68,
      "score": 9.42450321128885,
      "candidate": "return sum(1 for i in range(n) if i % 3 == 0 or i % 5 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 69,
      "score": 9.401896687959665,
      "candidate": "count = 0\n    for x in range(1, n + 1):\n        if x % 3 == 0 and x % 5 == 0:\n            count += 1\n        if x % 3 == 0:\n            count += 1\n        if x % 5 == 0:\n            count += 1\n        if count == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 70,
      "score": 9.389578175014488,
      "candidate": "return sum(1 for i in range(1, n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 71,
      "score": 9.335906975550785,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 and i % 13 == 0) or (i % 3 == 0 and i % 5 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 72,
      "score": 9.293848149332355,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 15 == 0:\n            count += 1\n        if i % 3 == 0:\n            count += 1\n        if i % 5 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 73,
      "score": 9.287625906893272,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 74,
      "score": 9.260739004816287,
      "candidate": "fizz_buzz_count = 0\n    for i in range(n):\n        if i % 3 == 0 and i % 5 == 0:\n            fizz_buzz_count += 1\n        if i % 5 == 0:\n            fizz_buzz_count += 1\n        if i % 3 == 0:\n            fizz_buzz_count += 1\n    return fizz_buzz_count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 75,
      "score": 9.137541083743484,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 and i % 13 == 0) or (i % 3 == 0 and i % 5 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 76,
      "score": 9.118479922318633,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and i!= 7)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 77,
      "score": 9.0433598776711,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += i\n        elif i % 13 == 0:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 78,
      "score": 9.020164938060113,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += (i % 11)\n        elif i % 13 == 0:\n            count += (i % 13)\n        else:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 79,
      "score": 8.690127447955128,
      "candidate": "return sum([1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 80,
      "score": 6.5,
      "candidate": "return sum(1 for i in range(n) if i % 15 == 7)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 81,
      "score": 6.5,
      "candidate": "return sum(1 for i in range(1, n + 1) if i % 11 == 0 or i % 13 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 82,
      "score": 6.5,
      "candidate": "return sum(1 for i in range(1, n + 1) if str(i).count('7') % 11 == 0 or str(i).count('7') % 13 == 0)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 83,
      "score": 3.0,
      "candidate": "return sum(1 for num in range(1, n) if num % 11 == 0 or num % 13 == 0)"
    },
    {
      "rank": 84,
      "score": 3.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if (i % 11 == 0) and (i % 13 == 0):\n            count += 1\n        elif i % 11 == 0:\n            count += fizz_buzz(i // 11)\n        elif i % 13 == 0:\n            count += fizz_buzz(i // 13)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 85,
      "score": 3.0,
      "candidate": "return sum(1 for i in range(1, n + 1) if (i % 11 == 0 or i % 13 == 0) and i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 3.0,
      "candidate": "return sum(i for i in range(1, n + 1) if i % 3 == 0 and i % 5 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "return sum(1 for i in range(1, n + 1) if (i % 11 == 0 or i % 13 == 0))"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "fizz_buzz_count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            fizz_buzz_count += 1\n        if i % 11 == 0:\n            fizz_buzz_count += i\n        if i % 13 == 0:\n            fizz_buzz_count += i\n    return fizz_buzz_count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n    return count"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "return sum(1 for x in range(n) if x % 15 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "fizz_buzz_count = 0\n    for i in range(1, n+1):\n        if i % 11 == 0 or i % 13 == 0:\n            fizz_buzz_count += 1\n    return fizz_buzz_count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "return sum(1 for i in range(n) if str(i) == '7')"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "return sum(1 for i in range(1, n+1) if i % 7 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "return sum(1 for i in range(n) if (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "fizz = 0\n    buzz = 0\n    for num in range(1, n + 1):\n        if num % 7 == 0:\n            fizz += 1\n        if num % 11 == 0:\n            buzz += 1\n    return fizz + buzz\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "return sum(1 for digit in str(n) if digit == '7')\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 and i % 13 == 0:\n            count += 1\n        elif i % 11 == 0:\n            count += 1\n        elif i % 13 == 0:\n            count += 1\n        else:\n            continue\n    return count"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "return sum(1 for i in range(n) if (i % 11 == 0 or i % 13 == 0) and (i % 7 == 0))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    }
  ]
}