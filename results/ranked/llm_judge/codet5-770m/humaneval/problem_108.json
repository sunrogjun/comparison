{
  "timestamp": "2025-09-14T12:03:27.614269",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 108,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "count = 0\n    for num in arr:\n        if num >= 0:\n            num = num - 10\n        else:\n            num = num + 10\n        sum_ = 0\n        while num > 0:\n            sum_ += num % 10\n            num //= 10\n        if sum_ > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "sum_of_digits = 0\n    for num in arr:\n        sum_of_digits += num\n    return sum_of_digits > 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "if arr == []:\n        return 0\n    if arr[0] < 0:\n        arr[0] *= -1\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod(verbose=True)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "return sum(x > 0 for x in arr)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "count = 0\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "count = 0\n    for num in arr:\n        if sum(int(digit) for digit in str(num)) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "return sum([num for num in arr if num > 0 and sum([int(digit) for digit in str(num)]) > 0])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "count = 0\n    for num in arr:\n        if (num > 0):\n            count += num\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "arr.sort()\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n    return count\n\n\ndef main():\n    import doctest\n    doctest.testmod()\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "n = len(arr)\n    if n <= 1:\n        return 0\n    s = 0\n    for i in arr:\n        s += i\n        if s > 0:\n            return n - s\n    return 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "# Your code here\n    count = 0\n\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "if len(arr) == 0:\n        return 0\n\n    digit_sum = 0\n    count = 0\n\n    for num in arr:\n        digit_sum += num\n\n        if digit_sum > 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 9.943555924878366,
      "candidate": "res = 0\n    for i in arr:\n        if i > 0:\n            res += i % 10\n        if i < 0:\n            res += i // 10\n    return res"
    },
    {
      "rank": 14,
      "score": 9.941465760762705,
      "candidate": "count = 0\n    for num in arr:\n        if sum(int(c) for c in str(num)) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 9.925248162383532,
      "candidate": "if arr == []:\n        return 0\n    else:\n        sum = 0\n        for i in arr:\n            if i > 0:\n                sum += i\n        return sum\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 9.918084463350558,
      "candidate": "return sum(int(i) for i in str(sum(arr)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod(verbose=True)"
    },
    {
      "rank": 17,
      "score": 9.903729429895922,
      "candidate": "if not arr:\n        return 0\n\n    # Your code here\n    count = 0\n    for num in arr:\n        count += num if num > 0 else num * -1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 18,
      "score": 9.790195619194341,
      "candidate": "count = 0\n    for i in arr:\n        if sum([int(j) for j in str(i)]) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 9.735572267761025,
      "candidate": "return sum(map(int, str(arr)))"
    },
    {
      "rank": 20,
      "score": 9.700948343979832,
      "candidate": "res = 0\n    for i in arr:\n        if i < 0:\n            res += i * -1\n        else:\n            res += i\n    return res\n\n\ndef count_nums_v2(arr):\n    \"\"\"\n    Write a function count_nums_v2 which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums_v2([]) == 0\n    >>> count_nums_v2([-1, 11, -11]) == 1\n    >>> count_nums_v2([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n    for i in arr:\n        if i < 0:\n            res += i * -1\n        else:\n            res += i\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 21,
      "score": 9.694789087507244,
      "candidate": "count = 0\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 22,
      "score": 9.667953487775392,
      "candidate": "if not arr:\n        return 0\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += (num - (num % 10))\n    return count\n\n\ndef main():\n    import doctest\n    doctest.testmod()\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 23,
      "score": 9.646924074666178,
      "candidate": "res = 0\n    for num in arr:\n        sum_num = 0\n        if num > 0:\n            for i in str(num):\n                sum_num += int(i)\n            if sum_num > 0:\n                res += 1\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 24,
      "score": 9.634121262966971,
      "candidate": "count = 0\n    for num in arr:\n        sum_num = 0\n        for digit in str(num):\n            sum_num += int(digit)\n        if sum_num > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 25,
      "score": 9.510082469030056,
      "candidate": "if len(arr) <= 0:\n        return 0\n\n    if len(arr) == 1:\n        return 1\n\n    result = 0\n\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            result += 1\n\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 26,
      "score": 6.5,
      "candidate": "return sum([int(x) for x in str(sum(arr)) if int(x) > 0])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 27,
      "score": 6.5,
      "candidate": "return sum(map(int, str(sum(arr))))\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 28,
      "score": 3.926139092254469,
      "candidate": "if len(arr) == 0:\n        return 0\n    count = 0\n    for x in arr:\n        if sum(int(i) for i in str(x)) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 3.7896064077536957,
      "candidate": "count = 0\n    for num in arr:\n        if num > 0:\n            count += num\n        else:\n            if num == 0:\n                continue\n            else:\n                count += num // 10\n                count += num % 10\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 30,
      "score": 3.782321827907003,
      "candidate": "if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    if len(arr) == 2:\n        return 2 if arr[0] + arr[1] > 0 else 3\n    elif len(arr) == 3:\n        return 3 if arr[0] + arr[1] + arr[2] > 0 else 4\n    else:\n        return count_nums(arr[1:]) + count_nums(arr[2:])"
    },
    {
      "rank": 31,
      "score": 3.7690182832329846,
      "candidate": "count = 0\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 32,
      "score": 3.761514928204013,
      "candidate": "result = 0\n    for num in arr:\n        if num > 0:\n            result += num\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 3.6781200142854114,
      "candidate": "count = 0\n    for num in arr:\n        if num >= 0:\n            count += num\n        else:\n            count -= num\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 34,
      "score": 3.5154997612479755,
      "candidate": "count = 0\n    for num in arr:\n        if sum([int(digit) for digit in str(num)]) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 35,
      "score": 3.4843224952664444,
      "candidate": "count = 0\n    for num in arr:\n        if num >= 0:\n            num_str = str(num)\n            count += len(num_str)\n        else:\n            num_str = str(abs(num))\n            count += len(num_str)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 36,
      "score": 3.4656400595580994,
      "candidate": "if arr == []:\n        return 0\n    else:\n        return sum([int(num) for num in str(arr)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 3.4112724560515946,
      "candidate": "count = 0\n\n    for num in arr:\n        if num > 0:\n            num = str(num)\n        else:\n            num = '-' + num\n\n        if sum(int(num[i]) for i in range(len(num))) > 0:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 3.410951252187612,
      "candidate": "sum = 0\n    count = 0\n    for num in arr:\n        if sum > 0:\n            count += 1\n        sum += num\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 39,
      "score": 3.406262911197099,
      "candidate": "if arr == []:\n        return 0\n    else:\n        sum_of_digits = 0\n        for num in arr:\n            sum_of_digits += num\n        return sum_of_digits > 0"
    },
    {
      "rank": 40,
      "score": 3.3837173645764542,
      "candidate": "if arr == []:\n        return 0\n    count = 0\n    for num in arr:\n        if num > 0:\n            sum = 0\n            for i in str(num):\n                sum += int(i)\n            if sum > 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 41,
      "score": 3.3692332899977053,
      "candidate": "count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 42,
      "score": 3.3238442690503462,
      "candidate": "if not arr:\n        return 0\n\n    count = 0\n    for num in arr:\n        if num >= 0:\n            count += (num % 10)\n        else:\n            count += num % 10\n\n    return count\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 43,
      "score": 3.305838144420434,
      "candidate": "count = 0\n    for num in arr:\n        if num > 0:\n            num = str(num)\n            if sum(int(digit) for digit in num) > 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 44,
      "score": 3.2712800217929825,
      "candidate": "s = 0\n    for n in arr:\n        s += n\n    return s\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 45,
      "score": 3.256633716556678,
      "candidate": "count = 0\n    for num in arr:\n        if sum(int(x) for x in str(num)) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 46,
      "score": 3.2483570765056164,
      "candidate": "return sum(map(int, str(arr)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 3.1878490091728358,
      "candidate": "if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n    else:\n        count = 0\n        for i in range(len(arr)):\n            count += sum(map(int, str(arr[i])))\n        return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 48,
      "score": 3.180818012523817,
      "candidate": "count = 0\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            count += 1\n    return count"
    },
    {
      "rank": 49,
      "score": 3.180697802754207,
      "candidate": "if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n    else:\n        return count_nums(arr[1:]) + count_nums(arr[:-1])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 50,
      "score": 3.178556285755873,
      "candidate": "count = 0\n    for num in arr:\n        count += (num > 0) * (num % 10)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 51,
      "score": 3.165631715701782,
      "candidate": "if len(arr) == 0:\n        return 0\n\n    count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n\n    return count"
    },
    {
      "rank": 52,
      "score": 3.157123666297637,
      "candidate": "count = 0\n    for num in arr:\n        count += (num > 0)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 53,
      "score": 3.1305276360899446,
      "candidate": "if arr is None:\n        return 0\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    else:\n        return count_nums(arr[1:]) + count_nums(arr[:-1])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 3.1209811357830173,
      "candidate": "count = 0\n    for num in arr:\n        if num > 0:\n            sum_num = 0\n            for i in str(num):\n                sum_num += int(i)\n            if sum_num > 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 55,
      "score": 3.104431797502378,
      "candidate": "if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n    else:\n        return count_nums(arr[1:]) + count_nums(arr[:-1])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 56,
      "score": 3.0984306179345618,
      "candidate": "if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n        else:\n            if count > 0:\n                count = 0\n            else:\n                count += 1\n    return count"
    },
    {
      "rank": 57,
      "score": 3.085684140594985,
      "candidate": "count = 0\n    for num in arr:\n        if num > 0:\n            num_sum = 0\n            while num > 0:\n                num_sum += num % 10\n                num = num // 10\n            if num_sum > 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 58,
      "score": 3.055461294854933,
      "candidate": "if arr == []:\n        return 0\n    if arr[0] < 0:\n        arr = [a for a in arr if a < 0]\n    if arr[0] == 0:\n        return 1\n    count = 0\n    for i in arr:\n        count += i\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 59,
      "score": 3.0485387746740202,
      "candidate": "count = 0\n    for i in arr:\n        count += sum(map(int, str(i)))\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 60,
      "score": 3.043523534119086,
      "candidate": "count = 0\n    for num in arr:\n        if num > 0:\n            num_str = str(num)\n            if sum([int(x) for x in num_str]) > 0:\n                count += 1\n    return count\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 61,
      "score": 2.993251387631033,
      "candidate": "# Your code here\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n        else:\n            break\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 62,
      "score": 2.982086980445024,
      "candidate": "count = 0\n    for i in arr:\n        if sum(str(i)) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 63,
      "score": 2.963994939209833,
      "candidate": "if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n\n    count = 0\n    for i in arr:\n        count += (i // 10)\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 64,
      "score": 2.94217585880588,
      "candidate": "count = 0\n    for num in arr:\n        if (num > 0):\n            count = count + (num // 10)\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 65,
      "score": 2.930867849414408,
      "candidate": "total = 0\n    for x in arr:\n        if x < 0:\n            total += x * -1\n        else:\n            total += x\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 66,
      "score": 2.9071705116680913,
      "candidate": "if not arr:\n        return 0\n    if len(arr) == 1:\n        return 1\n    if arr[0] < 0:\n        arr = [abs(i) for i in arr]\n    counter = 0\n    for i in arr:\n        counter += sum([int(j) for j in str(i)])\n    return counter\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 67,
      "score": 2.890164056081244,
      "candidate": "count = 0\n\n    for num in arr:\n        sum_of_digits = 0\n\n        while num > 0:\n            sum_of_digits += num % 10\n            num //= 10\n\n        if sum_of_digits > 0:\n            count += 1\n\n    return count"
    },
    {
      "rank": 68,
      "score": 2.882923312638332,
      "candidate": "if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += count_nums(arr[1:])\n        elif num < 0:\n            count += count_nums(arr[:-1])\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 69,
      "score": 2.8541531251033616,
      "candidate": "if not arr:\n        return 0\n    total = 0\n    for i in arr:\n        total += int(i)\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 70,
      "score": 2.8494481522053556,
      "candidate": "if arr == []:\n        return 0\n    if arr[0] < 0:\n        arr = [x for x in arr]\n    return sum(int(x) for x in str(arr))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 71,
      "score": 2.8453938120743927,
      "candidate": "return sum([int(x) for x in str(arr) if sum([int(x) for x in str(arr)]) > 0])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 72,
      "score": 2.803945923433921,
      "candidate": "if not arr:\n        return 0\n    else:\n        sum = 0\n        for i in arr:\n            sum += i\n        return sum > 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 73,
      "score": 2.769680614520106,
      "candidate": "arr_sum = []\n    for num in arr:\n        arr_sum.append(sum(map(int, str(num))))\n    return sum(arr_sum) > 0\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 74,
      "score": 2.768291153593769,
      "candidate": "res = 0\n    for num in arr:\n        if num > 0:\n            if num % 10 > 0:\n                res += 1\n        elif num < 0:\n            if num % 10 < 0:\n                res += 1\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 75,
      "score": 2.7671351232148718,
      "candidate": "count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 76,
      "score": 2.765262807032524,
      "candidate": "counter = 0\n    for num in arr:\n        if num > 0:\n            num = str(num)\n            sum_num = 0\n            for i in num:\n                sum_num += int(i)\n            if sum_num > 0:\n                counter += 1\n    return counter\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 77,
      "score": 2.760412881077355,
      "candidate": "if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n    elif len(arr) == 2:\n        return 2\n    else:\n        # for i in range(len(arr)):\n        #     if arr[i] > 0:\n        #         if i == 0:\n        #             return 1\n        #         elif arr[i] - arr[i-1] > 0:\n        #             return 2\n        #         else:\n        #             return 0\n        # else:\n        #     return 0\n        return 1\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod(verbose=True)"
    },
    {
      "rank": 78,
      "score": 2.749121478207732,
      "candidate": "count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 79,
      "score": 2.7408648908631763,
      "candidate": "if len(arr) == 0:\n        return 0\n    sum_ = 0\n    for i in arr:\n        sum_ += i\n    return sum_ > 0\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 80,
      "score": 2.735119898116481,
      "candidate": "if not arr:\n        return 0\n    total = 0\n    for num in arr:\n        total += num\n        if total > 0:\n            return 1\n    return 0"
    },
    {
      "rank": 81,
      "score": 2.7278086377374087,
      "candidate": "if not arr:\n        return 0\n    if not arr[0]:\n        return 1\n    if not arr[0][0]:\n        return 1\n    if arr[0][0] > 0:\n        return 0\n\n    return count_nums(arr[1:]) + count_nums(arr[1:-1])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 82,
      "score": 2.718856235379514,
      "candidate": "if not arr:\n        return 0\n    res = 0\n    for i in arr:\n        if i < 0:\n            res += abs(i)\n        else:\n            res += i\n    return res\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 83,
      "score": 2.6996806550405976,
      "candidate": "count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 84,
      "score": 2.6991466938853015,
      "candidate": "count = 0\n    for x in arr:\n        sum_of_digits = 0\n        if x >= 0:\n            sum_of_digits = x\n        else:\n            sum_of_digits = -x\n        if sum_of_digits > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 85,
      "score": 2.677440122697438,
      "candidate": "if not arr:\n        return 0\n    digit_sum = 0\n    for num in arr:\n        digit_sum += num\n        if digit_sum > 0:\n            return 1\n    return 0\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 2.6615389998470205,
      "candidate": "count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 87,
      "score": 2.648973453061324,
      "candidate": "count = 0\n    for num in arr:\n        if (num > 0):\n            sum = 0\n            for digit in str(num):\n                sum += int(digit)\n            if (sum > 0):\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 88,
      "score": 2.6400778958026456,
      "candidate": "count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 89,
      "score": 2.5957531985534064,
      "candidate": "if arr == []:\n        return 0\n\n    if len(arr) == 1:\n        return 1\n\n    arr.sort()\n    return sum(map(lambda x: x[0] + x[1], enumerate(arr)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 90,
      "score": 2.5459879622393946,
      "candidate": "num_sum = 0\n    for i in arr:\n        num_sum += int(i)\n\n    if num_sum > 0:\n        return len(arr)\n    else:\n        return 0\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 91,
      "score": 2.493584439832788,
      "candidate": "count = 0\n    for x in arr:\n        if sum(map(int, str(abs(x)))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 92,
      "score": 2.446832512996986,
      "candidate": "if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    # if the number is negative, we want to make the first signed digit negative\n    if arr[0] < 0:\n        arr[0] *= -1\n    # if the number is negative, we want to make the first signed digit positive\n    if arr[0] < 0:\n        arr[0] *= -1\n    # we will need to check if the sum of the digits of arr is greater than 0\n    count = 0\n    for i in arr:\n        if i > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 2.4245032112888487,
      "candidate": "if arr == []:\n        return 0\n    elif arr[0] < 0:\n        arr.insert(0, -arr[0])\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 2.287625906893272,
      "candidate": "count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 2.260739004816286,
      "candidate": "if not arr:\n        return 0\n\n    count = 0\n    for i in arr:\n        count += sum(int(x) for x in str(i))\n\n    return count\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 2.137541083743484,
      "candidate": "count = 0\n    for i in arr:\n        count += i if i > 0 else 0\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 2.118479922318633,
      "candidate": "counter = 0\n    for num in arr:\n        if num > 0:\n            if sum(str(num)) > 0:\n                counter += 1\n    return counter\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 2.043359877671101,
      "candidate": "if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n    else:\n        return sum(map(int, str(arr)))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 99,
      "score": 2.006215542699554,
      "candidate": "count = 0\n    for num in arr:\n        count += num_sum(num)\n    return count\n\n\ndef num_sum(num):\n    \"\"\"\n    Return the number of digits of a number which has a sum of digits > 0.\n    >>> num_sum(123) == 0\n    >>> num_sum(-123) == 1\n    >>> num_sum(12) == 1\n    >>> num_sum(0) == 0\n    >>> num_sum(-0) == 0\n    >>> num_sum(-1) == 1\n    >>> num_sum(1) == 1\n    >>> num_sum(1.1) == 2\n    \"\"\"\n    count = 0\n    if num < 0:\n        num = num * -1\n    while num > 0:\n        count += 1\n        num = num // 10\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 100,
      "score": 1.6901274479551278,
      "candidate": "count = 0\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    }
  ]
}