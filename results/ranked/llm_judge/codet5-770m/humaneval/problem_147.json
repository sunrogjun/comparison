{
  "timestamp": "2025-09-14T12:20:52.558699",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 147,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    a = [1] * n\n    a[0] = 1\n    a[1] = 3\n    a[2] = 7\n    a[3] = 13\n    a[4] = 21\n    count = 0\n    for i in range(2, n):\n        for j in range(i):\n            for k in range(i+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "# Runtime: 36 ms\n    # Memory: 13.4 MB\n\n    # Runtime: 36 ms, faster than 96.66% of Python3 online submissions for Max Triples.\n    # Memory: 13.4 MB, less than 66.50% of Python3 online submissions for Max Triples.\n\n    result = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if (i * i - i + 1) % 3 == 0 and (j * j - j + 1) % 3 == 0 and (k * k - k + 1) % 3 == 0:\n                    result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "res = 0\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            for k in range(1, j+1):\n                if i*i - i + 1 == k*k - k + 1 and i*i - i + 1 % 3 == 0:\n                    res += 1\n    return res"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i > j and i > k and a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "result = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if i * i - i + 1 == k * k - k + 1 and i + j + k % 3 == 0:\n                    result += 1\n    return result\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "num_triples = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    num_triples += 1\n    return num_triples\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] * a[j] - a[k] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "a = [i * i - i + 1 for i in range(1, n+1)]\n    ans = 0\n    for i in range(1, n):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    ans += 1\n    return ans\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))\n    print(get_max_triples(6))\n    print(get_max_triples(10))\n    print(get_max_triples(17))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "# Runtime: 28 ms\n    # Memory: 13.2 MB\n    a = [i for i in range(1, n + 1)]\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            for k in range(j, n + 1):\n                if i * i - i + 1 == k * k - k + 1 and (i + j + k) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n + 1):\n        for j in range(i):\n            for k in range(i, n + 1):\n                if i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the length of the array: \"))\n    print(get_max_triples(n))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "a = [1]\n    count = 0\n    for i in range(1, n):\n        a.append(i * i - i + 1)\n    for i in range(n-1):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "count = 0\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            for k in range(1, i+1):\n                if i*i-i+j*j-k*k==3:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "# Runtime: 36 ms, faster than 98.94% of Python3 online submissions for Get Max Triples.\n    # Memory Usage: 13.9 MB, less than 10.00% of Python3 online submissions for Get Max Triples.\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    a.sort()\n\n    ans = 0\n    for i in range(len(a) - 2):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] == 3:\n                    ans += 1\n    return ans\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    return len([x for x in a if x % 3 == 0])\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "a = [1, 3, 7, 13, 21]\n    max_triples = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j+1, n):\n                if (i*i - i+1) % 3 == 0 and (j*j - j+1) % 3 == 0 and (k*k - k+1) % 3 == 0:\n                    max_triples += 1\n    return max_triples\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 20,
      "score": 9.995006026846964,
      "candidate": "a = [i*i-i+1 for i in range(1,n+1)]\n    count = 0\n    for i in range(len(a)-2):\n        for j in range(len(a)-2):\n            for k in range(len(a)-2):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 21,
      "score": 9.931306178634388,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if (a[i] * a[j] - a[k] + a[k] + a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 22,
      "score": 9.916462768819981,
      "candidate": "a = list(range(1, n+1))\n\n    count = 0\n\n    for i in range(1, len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] * a[j] - a[k] == 3:\n                    count += 1\n\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 23,
      "score": 9.88936728032763,
      "candidate": "a = [i * i - i + 1 for i in range(n)]\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\ndef main():\n    print(get_max_triples(5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 24,
      "score": 9.888591632631963,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] * a[j] - a[k] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 25,
      "score": 9.88559142093505,
      "candidate": "a = []\n    for i in range(1,n+1):\n        a.append(i*i-i+1)\n    count = 0\n    for i in range(1,n+1):\n        for j in range(1,n+1):\n            for k in range(1,n+1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 26,
      "score": 9.854919983341102,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count"
    },
    {
      "rank": 27,
      "score": 9.826294477204067,
      "candidate": "ans = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, len(a)):\n        for j in range(i):\n            for k in range(j):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    ans += 1\n    return ans\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 28,
      "score": 9.814349893873722,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 29,
      "score": 9.798578391925682,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 30,
      "score": 9.777763684730042,
      "candidate": "a = [1, 3, 7, 13, 21]\n    cnt = 0\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            for k in range(j, n+1):\n                if (i*i - i+1) % 3 == 0:\n                    cnt += 1\n    return cnt\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 31,
      "score": 9.761305690796105,
      "candidate": "# Runtime: 48 ms\n    # Memory: 13.5 MB\n\n    # Solution 1 :\n    # Another solution is to use a set to store the value of a[i] and a[j] in a[i], a[j] and a[k]\n    # and check if a[i] + a[j] + a[k] is multiple of 3.\n\n    # Time Complexity: O(n^2)\n    # Space Complexity: O(n)\n\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n    # Solution 2 :\n    # Another solution is to use a list to store the value of a[i] and a[j] in a[i], a[j] and a[k]\n    # and check if a[i] + a[j] + a[k] is multiple of 3.\n\n    # Time Complexity: O(n^2)\n    # Space Complexity: O(n)\n\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n    # Solution 3 :\n    # Another solution is to use a list to store the value of a[i] and a[j] in a[i], a[j] and a[k]\n    # and check if a[i] + a[j] + a[k] is multiple of 3.\n\n    # Time Complexity: O(n^2)\n    # Space Complexity: O(n)"
    },
    {
      "rank": 32,
      "score": 9.74024035526538,
      "candidate": "# Solution 1\n    # Runtime: 40 ms, faster than 88.77% of Python3 online submissions for Max Triples.\n    # Memory Usage: 13.9 MB, less than 100.00% of Python3 online submissions for Max Triples.\n    return sum(i * i - i + 1 for i in range(1, n + 1)) % 3\n\n    # Solution 2\n    # Runtime: 64 ms, faster than 91.77% of Python3 online submissions for Max Triples.\n    # Memory Usage: 13.9 MB, less than 100.00% of Python3 online submissions for Max Triples.\n    return sum(i * i + j * j for i in range(1, n + 1) for j in range(1, n + 1) if i + j > n // 3)\n\n    # Solution 3\n    # Runtime: 32 ms, faster than 91.77% of Python3 online submissions for Max Triples.\n    # Memory Usage: 13.9 MB, less than 100.00% of Python3 online submissions for Max Triples.\n    return sum(i * j * (i + j) // 3 for i in range(1, n + 1) for j in range(1, n + 1) if i + j > n // 3)\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 33,
      "score": 9.689489516407624,
      "candidate": "if n == 0:\n        return 0\n    a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i]*a[j]*a[k]%3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 34,
      "score": 9.557403549090152,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 35,
      "score": 9.548287849510722,
      "candidate": "count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 36,
      "score": 9.47284317110102,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nn = 5\nprint(get_max_triples(n))"
    },
    {
      "rank": 37,
      "score": 9.292086309476614,
      "candidate": "def get_sum(a):\n        return sum(a)\n\n    def get_count(a):\n        return a.count(3)\n\n    return get_count(range(1, n + 1)) * get_count(range(1, n + 1)) * get_count(range(1, n + 1))\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 38,
      "score": 9.111264590867663,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if i*i - i + 1 == k*k - k + 1:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 39,
      "score": 8.992735192751333,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        if a[i] % 3 == 0:\n            for j in range(i+1, n):\n                if a[j] % 3 == 0:\n                    for k in range(j+1, n):\n                        if a[k] % 3 == 0:\n                            count += 1\n    return count"
    },
    {
      "rank": 40,
      "score": 8.97648630055139,
      "candidate": "# Time Complexity: O(n^2)\n    # Space Complexity: O(1)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            for k in range(j, n+1):\n                if i*i - i + 1 == k*k - k + 1 and i*i - i + 1 % 3 == 0:\n                    count += 1\n    return count"
    },
    {
      "rank": 41,
      "score": 8.779705287326276,
      "candidate": "a = [i for i in range(1, n+1)]\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 42,
      "score": 8.720720946939492,
      "candidate": "count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i!= j and i!= k and j!= k and (i + j + k) % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 43,
      "score": 8.623261539528489,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nn = 5\nprint(get_max_triples(n))"
    },
    {
      "rank": 44,
      "score": 8.551047744187692,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    count += 1\n\n    return count\n\n\nprint(get_max_triples(5))\nprint(get_max_triples(15))\nprint(get_max_triples(18))\nprint(get_max_triples(30))\nprint(get_max_triples(45))\nprint(get_max_triples(100))"
    },
    {
      "rank": 45,
      "score": 8.538424342429204,
      "candidate": "a = [i*i-i+1 for i in range(1,n+1)]\n    a = [i for i in a if i%3 == 0]\n    return len(a)\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 46,
      "score": 8.531550862208217,
      "candidate": "a = [i * i - i + 1 for i in range(1, n + 1)]\n\n    count = 0\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 47,
      "score": 8.51531448935733,
      "candidate": "a = [1, 3, 7, 13, 21]\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    ans += 1\n    return ans\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 48,
      "score": 8.506137025672833,
      "candidate": "result = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] * a[j] * a[k] % 3 == 0:\n                    result += 1\n    return result\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 49,
      "score": 8.475781389010185,
      "candidate": "a = [1, 3, 7, 13, 21]\n    ans = 0\n    for i in a:\n        for j in a:\n            for k in a:\n                if i * i - i + 1 == k * k - k + 1:\n                    ans += 1\n    return ans\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 50,
      "score": 8.418520800675525,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)-1):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count"
    },
    {
      "rank": 51,
      "score": 8.402811062784679,
      "candidate": "a = list(range(1,n+1))\n    count = 0\n    for i in range(1,len(a)):\n        for j in range(i+1,len(a)):\n            for k in range(j+1,len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 52,
      "score": 8.394669296022817,
      "candidate": "a = [i * i - i + 1 for i in range(1, n + 1)]\n    return sum([a[i] * a[j] * a[k] for i in range(len(a)) for j in range(len(a)) for k in range(len(a)) if a[i] + a[j] + a[k] % 3 == 0])\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 53,
      "score": 8.36536256482294,
      "candidate": "a = [1, 3, 7, 13, 21]\n    result = 0\n    for i in range(n-1):\n        for j in range(n-i-1):\n            for k in range(n-j-1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 54,
      "score": 8.360155139942739,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 55,
      "score": 8.360149229544044,
      "candidate": "a = [1, 3, 7, 13, 21]\n    n = len(a)\n    result = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i]*a[j]*a[k]%3 == 0:\n                    result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 56,
      "score": 8.359993076429392,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 57,
      "score": 8.326486071669247,
      "candidate": "a = []\n    for i in range(1, n):\n        a.append(i*i - i + 1)\n    triple = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triple += 1\n    return triple\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 58,
      "score": 8.27861448689892,
      "candidate": "a = [1, 3, 7, 13, 21]\n    n = len(a)\n    count = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 59,
      "score": 8.276781733159153,
      "candidate": "if n < 3:\n        return 0\n    else:\n        return n*(n+1)//2\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 60,
      "score": 8.25373077108831,
      "candidate": "a = [i*i - i + 1 for i in range(1, n+1)]\n    count = 0\n    for i in range(len(a)):\n        for j in range(len(a)):\n            for k in range(len(a)):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 61,
      "score": 8.2007525243343,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] * a[j] * a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 62,
      "score": 8.18530052942235,
      "candidate": "a = [i * i - i + 1 for i in range(1, n + 1)]\n    res = 0\n    for i in a:\n        for j in a:\n            for k in a:\n                if i + j + k == 3:\n                    res += 1\n    return res\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 63,
      "score": 8.153386747402896,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 64,
      "score": 8.11755577725681,
      "candidate": "a = [i for i in range(1, n+1)]\n    # a = [i for i in range(1, n+1)]\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if (i*i - i+1) % 3 == 0 and (j*j - j+1) % 3 == 0 and (k*k - k+1) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 65,
      "score": 8.079825241124052,
      "candidate": "a = list(range(1, n + 1))\n    total = 0\n\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] * a[j] - a[k] + a[k] % 3 == 0:\n                    total += 1\n\n    return total\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 66,
      "score": 8.046163853802275,
      "candidate": "a = [i * i - i + 1 for i in range(1, n + 1)]\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 67,
      "score": 7.966297466841009,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 68,
      "score": 7.917579063116882,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] * a[j] - a[k] == 3:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))\nprint(get_max_triples(10))\nprint(get_max_triples(5))"
    },
    {
      "rank": 69,
      "score": 7.9121765279121705,
      "candidate": "if n < 3:\n        return 0\n    a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i < j < k and a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 70,
      "score": 7.8234740247397525,
      "candidate": "a = [i*i - i+1 for i in range(1, n+1)]\n    return len(set(a))"
    },
    {
      "rank": 71,
      "score": 7.80974998851386,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] * a[j] * a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 72,
      "score": 7.738963199847726,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 73,
      "score": 7.5013362069721365,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j + 1, n):\n                if a[i] * a[j] - a[k] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 74,
      "score": 3.4152698729458115,
      "candidate": "result = 0\n    for i in range(1, n):\n        for j in range(i, n):\n            for k in range(j, n):\n                if i * i - i + j * j + k % 3 == 0:\n                    result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    assert get_max_triples(5) == 1\n    assert get_max_triples(6) == 2\n    assert get_max_triples(7) == 3\n    assert get_max_triples(8) == 4\n    assert get_max_triples(10) == 5\n    assert get_max_triples(11) == 6\n    assert get_max_triples(12) == 7\n    assert get_max_triples(13) == 8\n    assert get_max_triples(14) == 9\n    assert get_max_triples(15) == 11\n    assert get_max_triples(16) == 12\n    assert get_max_triples(17) == 13\n    assert get_max_triples(18) == 14\n    assert get_max_triples(19) == 15\n    assert get_max_triples(20) == 16\n    assert get_max_triples(21) == 17\n    assert get_max_triples(22) == 18\n    assert get_max_triples(23) == 19\n    assert get_max_triples(24) == 20\n    assert get_max_triples(25) == 21\n    assert get_max_triples(26) == 22\n    assert get_max_triples(27) == 23\n    assert get_max_triples(28) == 24\n    assert get_max_triples(29) == 25\n    assert get_max_triples(30) == 26\n    assert get_max_triples(31) == 27\n    assert get_max_triples(32) == 28\n    assert get_max_triples(33) == 29\n    assert get_max_triples(34) == 30\n    assert get_max_triples(35) == 31\n    assert get_max_triples(36) =="
    },
    {
      "rank": 75,
      "score": 3.39572516760882,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in a:\n        for j in a:\n            for k in a:\n                if (i*i - i + 1) % 3 == 0 and (j*j - j + 1) % 3 == 0 and (k*k - k + 1) % 3 == 0:\n                    count += 1\n    return count\n\n\n\n\nn = 5\nprint(get_max_triples(n))"
    },
    {
      "rank": 76,
      "score": 3.3661848077141223,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 77,
      "score": 3.2709538824308466,
      "candidate": "return 0\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 78,
      "score": 3.263397184323037,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(get_max_triples(5))"
    },
    {
      "rank": 79,
      "score": 3.222087126267861,
      "candidate": "a = [1] * n\n    ans = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    ans += 1\n    return ans\n\n\ndef get_max_triples_2(n):\n    \"\"\"\n    Solution :\n        Given a positive integer n. You have to create an integer array a of length n.\n            For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n            Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n            and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    ans = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 == k * k - k + 1 and i * i - i + 1 == j * j - j + 1:\n                    ans += 1\n    return ans\n\n\ndef get_max_triples_3(n):\n    \"\"\"\n    Solution :\n        Given a positive integer n. You have to create an integer array a of length n.\n            For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n            Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n            and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = ["
    },
    {
      "rank": 80,
      "score": 3.2219136761813103,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i < j < k:\n                    if a[i] + a[j] + a[k] == 3:\n                        count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 81,
      "score": 3.2193819720464334,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i, n):\n            for k in range(j, n):\n                if a[i] * a[j] * a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 82,
      "score": 3.1651525979870345,
      "candidate": "a = []\n    for i in range(1, n+1):\n        a.append(i*i - i + 1)\n    return sum(a)%3\n\n\ndef get_max_triples2(n):\n    \"\"\"\n    Solution:\n        Time Complexity : O(n^2)\n        Space Complexity : O(n)\n\n    \"\"\"\n    a = [i for i in range(1, n+1)]\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\ndef get_max_triples3(n):\n    \"\"\"\n    Solution:\n        Time Complexity : O(n)\n        Space Complexity : O(n)\n\n    \"\"\"\n    a = [i for i in range(1, n+1)]\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\ndef get_max_triples4(n):\n    \"\"\"\n    Solution:\n        Time Complexity : O(n^2)\n        Space Complexity : O(n)\n\n    \"\"\"\n    a = [i for i in range(1, n+1)]\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if a[i] + a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\ndef get_max_triples5(n):\n    \"\"\"\n    Solution:\n        Time Complexity : O(n^2)\n        Space Complexity : O(n)\n\n    \"\"\""
    },
    {
      "rank": 83,
      "score": 3.1464912117682107,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            if (a[i] + a[j]) % 3 == 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 84,
      "score": 3.0927769381834844,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        if (a[i] % 3 == 0):\n            for j in range(i + 1, n):\n                if (a[j] % 3 == 0):\n                    for k in range(j + 1, n):\n                        if (a[k] % 3 == 0):\n                            count += 1\n    return count\n\n\nprint(get_max_triples(5))"
    },
    {
      "rank": 85,
      "score": 3.0875026717365945,
      "candidate": "a = [1, 3, 7, 13, 21]\n    ans = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(j+1, n):\n                if i * i - i + 1 == k * k - k + 1:\n                    ans += 1\n    return ans\n\n\nprint(get_max_triples(5))\nprint(get_max_triples(6))\nprint(get_max_triples(7))\nprint(get_max_triples(8))\nprint(get_max_triples(9))\nprint(get_max_triples(10))"
    },
    {
      "rank": 86,
      "score": 3.0848467798007237,
      "candidate": "a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n\n    count = 0\n\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            for k in range(1, n + 1):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n\n    return count\n\n\nif __name__ == '__main__':\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 87,
      "score": 3.056393170651284,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 88,
      "score": 3.026210938323971,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (i * i - i + 1) % 3 == 0 and (j * j - j + 1) % 3 == 0 and (k * k - k + 1) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 89,
      "score": 2.990326969440313,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\nprint(get_max_triples(5))\nprint(get_max_triples(6))\nprint(get_max_triples(8))\nprint(get_max_triples(7))\nprint(get_max_triples(8))\nprint(get_max_triples(9))\nprint(get_max_triples(10))\nprint(get_max_triples(11))\nprint(get_max_triples(12))\nprint(get_max_triples(13))\nprint(get_max_triples(14))\nprint(get_max_triples(15))\nprint(get_max_triples(16))\nprint(get_max_triples(17))\nprint(get_max_triples(18))\nprint(get_max_triples(19))\nprint(get_max_triples(20))\nprint(get_max_triples(21))\nprint(get_max_triples(22))\nprint(get_max_triples(23))\nprint(get_max_triples(24))\nprint(get_max_triples(25))\nprint(get_max_triples(26))\nprint(get_max_triples(27))\nprint(get_max_triples(28))\nprint(get_max_triples(29))\nprint(get_max_triples(30))\nprint(get_max_triples(31))\nprint(get_max_triples(32))\nprint(get_max_triples(33))\nprint(get_max_triples(34))\nprint(get_max_triples(35))\nprint(get_max_triples(36))\nprint(get_max_triples(37))\nprint(get_max_"
    },
    {
      "rank": 90,
      "score": 2.9212426875558153,
      "candidate": "# Runtime: 48 ms\n    # Memory: 13.9 MB\n\n    count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 91,
      "score": 2.8960277842875946,
      "candidate": "count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (i * i - i + 1) % 3 == 0 and (j * j - j + 1) % 3 == 0 and (k * k - k + 1) % 3 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))\n    print(get_max_triples(1))\n    print(get_max_triples(2))\n    print(get_max_triples(3))\n    print(get_max_triples(4))\n    print(get_max_triples(5))\n    print(get_max_triples(6))\n    print(get_max_triples(7))\n    print(get_max_triples(8))\n    print(get_max_triples(9))\n    print(get_max_triples(10))\n    print(get_max_triples(11))\n    print(get_max_triples(12))\n    print(get_max_triples(13))\n    print(get_max_triples(14))\n    print(get_max_triples(15))\n    print(get_max_triples(16))\n    print(get_max_triples(17))\n    print(get_max_triples(18))\n    print(get_max_triples(19))\n    print(get_max_triples(20))\n    print(get_max_triples(21))\n    print(get_max_triples(22))\n    print(get_max_triples(23))\n    print(get_max_triples(24))\n    print(get_max_triples(25))\n    print(get_max_triples(26))\n    print(get_max_triples(27))\n    print(get_max_triples(28))\n    print(get_max_triples(29))\n    print(get_max_triples(30"
    },
    {
      "rank": 92,
      "score": 2.8748772229406354,
      "candidate": "# solution 1\n    count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i):\n                if i * i - i + 1 == j * j - j + 1:\n                    count += 1\n    return count\n\n    # solution 2\n    count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i):\n                if i * i - i + 1 == j * j - j + 1 and i + j + k == 3:\n                    count += 1\n    return count\n\n    # solution 3\n    count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i):\n                if i * i - i + 1 == j * j - j + 1 and i + j + k == 3 and i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n    # solution 4\n    count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i):\n                if i * i - i + 1 == j * j - j + 1 and i + j + k == 3 and i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n    # solution 5\n    count = 0\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i):\n            for k in range(i):\n                if i * i - i + 1 == j * j - j + 1 and i + j + k == 3 and i * i - i + 1 == k * k - k + 1:\n                    count += 1\n    return count\n\n    # solution 6\n    count = 0\n    a ="
    },
    {
      "rank": 93,
      "score": 2.8706229557817715,
      "candidate": "# creating a array of values\n    a = [i * i - i + 1 for i in range(1, n + 1)]\n    # creating a dictionary with the values of the array\n    dict = {}\n    for i in range(1, n + 1):\n        dict[a[i]] = i\n    \n    # creating a list with the values of the array\n    b = [a[i] for i in range(1, n + 1)]\n    # creating a list with the values of the array\n    c = [a[i] + a[j] + a[k] for i in range(1, n + 1) for j in range(1, n + 1) for k in range(1, n + 1) if a[i] + a[j] + a[k] % 3 == 0]\n    \n    # creating a dictionary with the list of values of the array\n    d = {}\n    for i in range(1, n + 1):\n        d[b[i]] = i\n    for j in range(1, n + 1):\n        d[c[j]] = j\n\n    # creating a dictionary with the list of values of the array\n    e = {}\n    for i in range(1, n + 1):\n        e[d[i]] = i\n    \n    # creating a list with the values of the array\n    f = [e[i] for i in range(1, n + 1)]\n    \n    # returning the sum of the elements of the list\n    return sum(f)\n\n\n# Driver Code\nn = 5\nprint(get_max_triples(n))\n\n# This code is contributed by Nikhil Kumar Singh(nikhilkumar.singh@gmail.com)"
    },
    {
      "rank": 94,
      "score": 2.8600670410661153,
      "candidate": "result = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if i*i - i+1 == j*j - j+1 == k*k - k+1 and i*i - i+1!= k*k - k+1 and i*i - i+1!= j*j - k+1:\n                    result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    assert get_max_triples(5) == 1\n    assert get_max_triples(1) == 1\n    assert get_max_triples(2) == 1\n    assert get_max_triples(3) == 1\n    assert get_max_triples(4) == 2\n    assert get_max_triples(5) == 3\n    assert get_max_triples(6) == 1"
    },
    {
      "rank": 95,
      "score": 2.8481823671049376,
      "candidate": "a = [1, 3, 7, 13, 21]\n    ans = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (i * i - i + 1) % 3 == 0:\n                    ans += 1\n    return ans\n\n\ndef main():\n    n = 5\n    print(get_max_triples(n))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 96,
      "score": 2.837539214698063,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] * i - a[j] + a[k] == 3:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))"
    },
    {
      "rank": 97,
      "score": 2.7144180491819068,
      "candidate": "num_triples = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 == k * k - k + 1 and i + j + k == 3:\n                    num_triples += 1\n    return num_triples\n\n\nif __name__ == \"__main__\":\n    n = 5\n    print(get_max_triples(n))"
    },
    {
      "rank": 98,
      "score": 2.689231734095978,
      "candidate": "a = [i * i - i + 1 for i in range(n)]\n    result = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    result += 1\n    return result\n\n\ndef main():\n    n = 5\n    print(get_max_triples(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 99,
      "score": 2.618678000639471,
      "candidate": "a = [1, 3, 7, 13, 21]\n    count = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i]*a[j]*a[k]%3==0:\n                    count += 1\n    return count\n\nif __name__ == \"__main__\":\n    print(get_max_triples(5))\n    print(get_max_triples(1))\n    print(get_max_triples(2))\n    print(get_max_triples(3))\n    print(get_max_triples(4))\n    print(get_max_triples(5))\n    print(get_max_triples(6))\n    print(get_max_triples(7))\n    print(get_max_triples(8))\n    print(get_max_triples(9))\n    print(get_max_triples(10))\n    print(get_max_triples(11))\n    print(get_max_triples(12))\n    print(get_max_triples(13))\n    print(get_max_triples(14))\n    print(get_max_triples(15))\n    print(get_max_triples(16))\n    print(get_max_triples(17))\n    print(get_max_triples(18))\n    print(get_max_triples(19))\n    print(get_max_triples(20))\n    print(get_max_triples(21))\n    print(get_max_triples(22))\n    print(get_max_triples(23))\n    print(get_max_triples(24))\n    print(get_max_triples(25))\n    print(get_max_triples(26))\n    print(get_max_triples(27))\n    print(get_max_triples(28))\n    print(get_max_triples(29))\n    print(get_max_triples(30))\n    print(get_max_tri"
    },
    {
      "rank": 100,
      "score": 2.463356393057759,
      "candidate": "def is_multiple_of_3(num):\n        return num%3==0\n    def is_multiple_of_3_sum(num):\n        return sum(num)%3==0\n    def is_multiple_of_3_sum_sum(num):\n        return sum(num)==sum(num) and is_multiple_of_3(num)\n    a = [1, 3, 7, 13, 21]\n    result = 0\n    for i in range(len(a)):\n        if is_multiple_of_3(a[i]) and is_multiple_of_3_sum(a[i]) and is_multiple_of_3_sum_sum(a[i]):\n            result+=1\n    return result\n\n\n\nprint(get_max_triples(5))"
    }
  ]
}