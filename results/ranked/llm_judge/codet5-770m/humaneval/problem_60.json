{
  "timestamp": "2025-09-14T11:42:16.608770",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 60,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "return n * (n + 1) // 2\n\n\ndef sum_of_n(n: int):\n    \"\"\"sum_of_n is a function that sums numbers from 1 to n.\n    >>> sum_of_n(30)\n    465\n    >>> sum_of_n(100)\n    5050\n    >>> sum_of_n(5)\n    15\n    >>> sum_of_n(10)\n    55\n    >>> sum_of_n(1)\n    1\n    \"\"\"\n    return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "return (n + 1) * (n + 2) / 3\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "sum = 0\n    for num in range(1, n + 1):\n        sum += num\n    return sum\n\n\ndef sum_to_n_rec(n: int):\n    \"\"\"sum_to_n_rec is a function that sums numbers from 1 to n.\n    >>> sum_to_n_rec(30)\n    465\n    >>> sum_to_n_rec(100)\n    5050\n    >>> sum_to_n_rec(5)\n    15\n    >>> sum_to_n_rec(10)\n    55\n    >>> sum_to_n_rec(1)\n    1\n    \"\"\"\n    sum = 0\n    for num in range(1, n + 1):\n        sum += num\n        if sum > n:\n            return num\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\ndef sum_to_n_rec(n: int):\n    \"\"\"sum_to_n_rec is a function that sums numbers from 1 to n.\n    >>> sum_to_n_rec(30)\n    465\n    >>> sum_to_n_rec(100)\n    5050\n    >>> sum_to_n_rec(5)\n    15\n    >>> sum_to_n_rec(10)\n    55\n    >>> sum_to_n_rec(1)\n    1\n    \"\"\"\n    return sum([i for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "return n + sum(range(1, n + 1))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    print(sum_to_n(int(input())))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "return sum([n] * n)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "sum = 0\n    for x in range(1, n + 1):\n        sum += x\n    return sum"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "if n < 1:\n        return None\n    if n == 1:\n        return 1\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "return (n * (n + 1)) // 2\n\n\ndef main():\n    \"\"\"\n    >>> main()\n    465\n    >>> main()\n    5050\n    >>> main()\n    15\n    >>> main()\n    55\n    >>> main()\n    1\n    \"\"\"\n    n = int(input())\n    print(sum_to_n(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "sum = 0\n    for x in range(1, n+1):\n        sum += x\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    print(sum_to_n(int(input())))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "return n + sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "return (n * (n + 1)) // 2\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "if n == 1:\n        return 1\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "return sum([i + 1 for i in range(n)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "return sum([x for x in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "return n + sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "return sum([n] + [n + i for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "if n <= 0:\n        return 0\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "return n * (n + 1) / 2\n\n\ndef main():\n    print(sum_to_n(int(input())))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 9.993251387631034,
      "candidate": "return n + sum_to_n(n-1)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 37,
      "score": 9.982086980445024,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 38,
      "score": 9.963994939209833,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 39,
      "score": 9.94217585880588,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum"
    },
    {
      "rank": 40,
      "score": 9.930867849414408,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(sum_to_n(int(input().strip())))"
    },
    {
      "rank": 41,
      "score": 9.907170511668092,
      "candidate": "return n + (sum_to_n(n-1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 42,
      "score": 9.887111849756732,
      "candidate": "return sum([num for num in range(1, n + 1)])"
    },
    {
      "rank": 43,
      "score": 9.88293152152541,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    print(sum_to_n(int(input().strip())))"
    },
    {
      "rank": 44,
      "score": 9.882923312638333,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 45,
      "score": 9.854153125103362,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 46,
      "score": 9.849448152205355,
      "candidate": "return sum([i for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 9.845393812074393,
      "candidate": "sum_ = 0\n    for i in range(1, n + 1):\n        sum_ += i\n    return sum_"
    },
    {
      "rank": 48,
      "score": 9.807458859791842,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 9.769680614520107,
      "candidate": "return sum([n for n in range(1, n+1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 50,
      "score": 9.768291153593768,
      "candidate": "return sum(range(1, n+1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 51,
      "score": 9.76713512321487,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 9.765262807032524,
      "candidate": "return sum([n + i for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 53,
      "score": 9.760412881077356,
      "candidate": "sum = 0\n    for x in range(1, n + 1):\n        sum += x\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 9.72780863773741,
      "candidate": "if n < 1:\n        return 0\n    return n * (n + 1) // 2\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 55,
      "score": 9.718856235379514,
      "candidate": "return sum(range(1, n + 1))"
    },
    {
      "rank": 56,
      "score": 9.699680655040597,
      "candidate": "return sum([n * i for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 57,
      "score": 9.699146693885302,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    print(sum_to_n(int(input().strip())))"
    },
    {
      "rank": 58,
      "score": 9.677440122697439,
      "candidate": "if n < 2:\n        return 1\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 59,
      "score": 9.661538999847021,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 60,
      "score": 9.640077895802646,
      "candidate": "if n < 1:\n        return 0\n    return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 61,
      "score": 9.58039123838868,
      "candidate": "total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 62,
      "score": 9.545987962239394,
      "candidate": "sum_ = 0\n    for i in range(1, n + 1):\n        sum_ += i\n    return sum_\n\n\nif __name__ == \"__main__\":\n    print(sum_to_n(int(input().strip())))"
    },
    {
      "rank": 63,
      "score": 9.493584439832787,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 64,
      "score": 9.47114453552205,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 65,
      "score": 9.446832512996986,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 66,
      "score": 9.42450321128885,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 67,
      "score": 9.401896687959665,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 68,
      "score": 9.389578175014488,
      "candidate": "if n < 2:\n        return n\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 69,
      "score": 9.335906975550785,
      "candidate": "return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 70,
      "score": 9.293848149332355,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 71,
      "score": 9.287625906893272,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 72,
      "score": 9.260739004816287,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 73,
      "score": 9.137541083743484,
      "candidate": "return sum(range(1, n+1))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 74,
      "score": 9.118479922318633,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 75,
      "score": 9.0433598776711,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 76,
      "score": 9.020164938060113,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 77,
      "score": 8.690127447955128,
      "candidate": "total = 0\n    for x in range(1, n + 1):\n        total += x\n    return total\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 78,
      "score": 6.5,
      "candidate": "result = 0\n    for i in range(1, n + 1):\n        result += i\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 79,
      "score": 6.5,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 80,
      "score": 6.5,
      "candidate": "return sum([i for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 81,
      "score": 6.5,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 82,
      "score": 6.5,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 83,
      "score": 6.5,
      "candidate": "return sum([i for i in range(1, n + 1)])"
    },
    {
      "rank": 84,
      "score": 6.5,
      "candidate": "return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 85,
      "score": 6.5,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 6.5,
      "candidate": "return sum(range(1, n + 1))"
    },
    {
      "rank": 87,
      "score": 6.5,
      "candidate": "sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 88,
      "score": 6.5,
      "candidate": "return n * (n + 1) // 2"
    },
    {
      "rank": 89,
      "score": 6.5,
      "candidate": "sum = 0\n    for num in range(1, n+1):\n        sum += num\n    return sum\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 90,
      "score": 6.5,
      "candidate": "return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 91,
      "score": 6.5,
      "candidate": "return sum(range(1, n + 1))\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 92,
      "score": 6.5,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 6.5,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 6.5,
      "candidate": "return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "return sum([i + 1 for i in range(1, n + 1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "return sum([x for x in range(1, n+1)])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "return (n + 1) * (n + 2) * (2 * (n + 1) + 1) / 6\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "if n == 0:\n        return 0\n    return n + sum_to_n(n - 1)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    }
  ]
}