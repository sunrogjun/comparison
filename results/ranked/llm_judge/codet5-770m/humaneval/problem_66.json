{
  "timestamp": "2025-09-14T11:44:53.308198",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 66,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "return sum([ord(ch) for ch in s if ch.isupper()])\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "return sum([ord(c) for c in s if c.isupper()])"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "result = 0\n    for i in s:\n        if i.isupper():\n            result += ord(i)\n\n    return result\n\n\nif __name__ == '__main__':\n    print(digitSum(''))\n    print(digitSum('abAB'))\n    print(digitSum('abcCd'))\n    print(digitSum('helloE'))\n    print(digitSum('woArBld'))\n    print(digitSum('aAaaaXa'))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "return sum([ord(c) for c in s if ord(c) > 65 and ord(c) <= 90])\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "if not s:\n        return 0\n\n    return sum(c.isupper() for c in s)"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "return sum([ord(c) for c in s if c.isupper()])"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "if s == \"\":\n        return 0\n    else:\n        return sum([ord(ch) for ch in s])\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "return sum([ord(x) for x in s if x.isupper()])\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "s = s.upper()\n    return sum(int(c) for c in s)\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "return sum(ord(c) for c in s if c.isupper())\n\n\nif __name__ == '__main__':\n    s = input()\n    result = digitSum(s)\n    print(result)"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "return sum([ord(ch) for ch in s if ch.isupper()])\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in s:\n        if ord(i) >= 65 and ord(i) <= 90:\n            sum += ord(i)\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "return sum(ord(c) for c in s.upper())\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "sum = 0\n    for char in s:\n        if ord(char) > 128:\n            sum += ord(char) - 64\n\n    return sum"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "return sum([ord(c) for c in s if c.isupper()])"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "sum = 0\n    for c in s:\n        if c.isupper():\n            sum += ord(c) - ord('A')\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in s:\n        if i.isupper():\n            sum += ord(i) - ord('A') + 1\n    return sum\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "s = s.upper()\n    return sum(ord(i) - 64 for i in s)\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "total = 0\n    for char in s:\n        if char.isupper():\n            total += ord(char)\n    return total\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "# Your code here\n    sum = 0\n    for ch in s:\n        sum += ord(ch)\n    return sum\n\n\n# Add your test cases here.\ntest_cases = [\n    \"abAB\",\n    \"abcCd\",\n    \"helloE\",\n    \"woArBld\",\n    \"aAaaaXa\"\n]\n\nfor test_case in test_cases:\n    print(digitSum(test_case))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            sum += ord(s[i])\n    return sum"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "return sum(ord(c) for c in s if c.isupper())\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "sum = 0\n    for char in s:\n        if ord(char) > ord(\"A\") and ord(char) < ord(\"Z\"):\n            sum += ord(char)\n    return sum"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "sum = 0\n    for c in s:\n        if c.isupper():\n            sum += ord(c)\n    return sum\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "return sum(ord(c) for c in s if c.isupper())"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in s:\n        sum += int(i.upper())\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i)\n\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "return sum(chr(ord('a') + i).isupper() for i in range(len(s)))\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "if len(s) == 0:\n        return 0\n    else:\n        return sum(ord(c) for c in s if c.isupper())\n\n\ndef main():\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "total = 0\n    for letter in s:\n        total += ord(letter)\n    return total\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 31,
      "score": 9.993251387631034,
      "candidate": "s = s.upper()\n    return sum([int(x) for x in s])\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 32,
      "score": 9.963994939209833,
      "candidate": "sum_upper = 0\n    for char in s:\n        if char.isupper():\n            sum_upper += ord(char)\n    return sum_upper\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 33,
      "score": 9.94217585880588,
      "candidate": "sum_upper_characters = 0\n    for char in s:\n        sum_upper_characters += ord(char)\n\n    return sum_upper_characters\n\n\ndef main():\n    \"\"\"Main function\"\"\"\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 34,
      "score": 9.930867849414408,
      "candidate": "s_length = len(s)\n    return sum(ord(c) for c in s if ord(c) > ord('A') and ord(c) <= ord('Z'))\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 35,
      "score": 9.907170511668092,
      "candidate": "sum_upper = 0\n    for char in s:\n        sum_upper += ord(char)\n\n    return sum_upper"
    },
    {
      "rank": 36,
      "score": 9.887111849756732,
      "candidate": "sum = 0\n    for i in range(len(s)):\n        sum += ord(s[i])\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 37,
      "score": 9.88293152152541,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 38,
      "score": 9.882923312638333,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 39,
      "score": 9.854153125103362,
      "candidate": "sum = 0\n    for i in range(len(s)):\n        sum += ord(s[i])\n\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 40,
      "score": 9.849448152205355,
      "candidate": "sum = 0\n    for i in s:\n        if ord(i) > 127:\n            sum += ord(i) - 64\n        else:\n            sum += ord(i)\n\n    return sum\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 41,
      "score": 9.845393812074393,
      "candidate": "return sum([ord(c) for c in s if c.isupper()])\n\n\ndef main():\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 42,
      "score": 9.807458859791842,
      "candidate": "s = str(s)\n    sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 43,
      "score": 9.769680614520107,
      "candidate": "sum = 0\n    for char in s:\n        if ord(char) > 32 and ord(char) <= 126:\n            sum += ord(char)\n    return sum"
    },
    {
      "rank": 44,
      "score": 9.768291153593768,
      "candidate": "s = s.upper()\n    sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 45,
      "score": 9.76713512321487,
      "candidate": "s = s.upper()\n    sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum\n\n\nif __name__ == '__main__':\n    s = input()\n    result = digitSum(s)\n    print(result)"
    },
    {
      "rank": 46,
      "score": 9.765262807032524,
      "candidate": "return sum(chr(ord(c) + 1).upper() for c in s if c.isupper())\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 47,
      "score": 9.760412881077356,
      "candidate": "sum_of_upper = 0\n    for char in s:\n        if char.isupper():\n            sum_of_upper += ord(char)\n    return sum_of_upper\n\n\nif __name__ == '__main__':\n    s = input()\n    print(digitSum(s))"
    },
    {
      "rank": 48,
      "score": 9.72780863773741,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum"
    },
    {
      "rank": 49,
      "score": 9.718856235379514,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum"
    },
    {
      "rank": 50,
      "score": 9.699680655040597,
      "candidate": "total = 0\n    for i in s:\n        total += ord(i) - 64\n    return total\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 51,
      "score": 9.699146693885302,
      "candidate": "return sum(ord(c) for c in s if ord(c) <= 122 and c.isupper())\n\n\nif __name__ == '__main__':\n    print(digitSum(''))\n    print(digitSum('abAB'))\n    print(digitSum('abcCd'))\n    print(digitSum('helloE'))\n    print(digitSum('woArBld'))\n    print(digitSum('aAaaaXa'))"
    },
    {
      "rank": 52,
      "score": 9.677440122697439,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum\n\n\nif __name__ == '__main__':\n    s = input()\n    print(digitSum(s))"
    },
    {
      "rank": 53,
      "score": 9.661538999847021,
      "candidate": "return sum([ord(c) for c in s if c.isupper()])"
    },
    {
      "rank": 54,
      "score": 9.640077895802646,
      "candidate": "return sum(ord(c) - 64 for c in s if c.isupper())"
    },
    {
      "rank": 55,
      "score": 9.58039123838868,
      "candidate": "return sum([ord(c) for c in s if ord(c) < 128])\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 56,
      "score": 9.545987962239394,
      "candidate": "return sum(c for c in s if c.isupper())\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 57,
      "score": 9.493584439832787,
      "candidate": "return sum([ord(c) for c in s])\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 58,
      "score": 9.47114453552205,
      "candidate": "return sum(ord(c) for c in s.upper())\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 59,
      "score": 9.446832512996986,
      "candidate": "if s == \"\":\n        return 0\n    s = s.upper()\n    return sum(ord(c) for c in s)"
    },
    {
      "rank": 60,
      "score": 9.42450321128885,
      "candidate": "sum = 0\n    for i in s:\n        if i.isupper():\n            sum += ord(i) - 64\n    return sum\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 61,
      "score": 9.401896687959665,
      "candidate": "return sum([ord(c) for c in s if ord(c) >= 65 and ord(c) <= 90])\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 62,
      "score": 9.389578175014488,
      "candidate": "s = s.upper()\n    sum = 0\n    for char in s:\n        sum += ord(char)\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 63,
      "score": 9.335906975550785,
      "candidate": "sum = 0\n    for c in s:\n        sum += ord(c) - 64\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 64,
      "score": 9.293848149332355,
      "candidate": "return sum(ord(char) for char in s if char.isupper())\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153\n    assert digitSum(\"fXoJg\") == 17\n    assert digitSum(\"sXeE\") == 0\n    assert digitSum(\"a\") == 0\n    assert digitSum(\"\") == 0"
    },
    {
      "rank": 65,
      "score": 9.287625906893272,
      "candidate": "sum = 0\n    for i in s:\n        if ord(i) > 127:\n            sum += ord(i) - 64\n        else:\n            sum += ord(i)\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 66,
      "score": 9.260739004816287,
      "candidate": "sum = 0\n    for ch in s:\n        sum += ord(ch) - 64\n    return sum\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 67,
      "score": 9.137541083743484,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - ord('A') + 1\n\n    return sum"
    },
    {
      "rank": 68,
      "score": 9.118479922318633,
      "candidate": "sum = 0\n    for i in range(len(s)):\n        if ord(s[i]) > 64:\n            sum += ord(s[i]) - 64\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 69,
      "score": 9.0433598776711,
      "candidate": "result = 0\n    for i in s:\n        if i.isupper():\n            result += ord(i)\n    return result\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 70,
      "score": 9.020164938060113,
      "candidate": "return sum(ord(c) - 65 for c in s if c.isupper())\n\n\nif __name__ == '__main__':\n    assert digitSum('') == 0\n    assert digitSum('abAB') == 131\n    assert digitSum('abcCd') == 67\n    assert digitSum('helloE') == 69\n    assert digitSum('woArBld') == 131\n    assert digitSum('aAaaaXa') == 153"
    },
    {
      "rank": 71,
      "score": 8.444444444444445,
      "candidate": "sum = 0\n    for char in s:\n        sum += ord(char)\n\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 72,
      "score": 8.444444444444445,
      "candidate": "total = 0\n    for i in s:\n        total += ord(i)\n    return total\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 73,
      "score": 8.444444444444445,
      "candidate": "total = 0\n    for i in s:\n        total += ord(i) - ord('A') + 1\n    return total"
    },
    {
      "rank": 74,
      "score": 8.444444444444445,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum\n\n\nprint(digitSum(\"\"))\nprint(digitSum(\"abAB\"))\nprint(digitSum(\"abcCd\"))\nprint(digitSum(\"helloE\"))\nprint(digitSum(\"woArBld\"))\nprint(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 75,
      "score": 8.444444444444445,
      "candidate": "return sum([ord(c) for c in s if c.isupper()])\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 76,
      "score": 8.444444444444445,
      "candidate": "return sum(ord(c) for c in s if ord(c) > 32)"
    },
    {
      "rank": 77,
      "score": 8.444444444444445,
      "candidate": "return sum(ord(c) for c in s.upper())\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))"
    },
    {
      "rank": 78,
      "score": 8.444444444444445,
      "candidate": "return sum(ord(c) for c in s.upper())"
    },
    {
      "rank": 79,
      "score": 8.444444444444445,
      "candidate": "return sum(ord(c) for c in s)\n\n\nif __name__ == '__main__':\n    s = input()\n    print(digitSum(s))"
    },
    {
      "rank": 80,
      "score": 8.444444444444445,
      "candidate": "return sum(ord(c) for c in s if ord(c) > 64)\n\n\nif __name__ == '__main__':\n    s = input()\n    print(digitSum(s))"
    },
    {
      "rank": 81,
      "score": 8.444444444444445,
      "candidate": "if s == \"\":\n        return 0\n    elif s[0].isupper():\n        return int(s[0]) + digitSum(s[1:])\n    else:\n        return int(s[0]) + digitSum(s[1:]) + int(s[2:])"
    },
    {
      "rank": 82,
      "score": 3.0,
      "candidate": "sum = 0\n    for char in s:\n        sum += ord(char)\n\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 83,
      "score": 3.0,
      "candidate": "sum_list = []\n    for i in s:\n        if i.isupper():\n            sum_list.append(ord(i))\n    return sum(sum_list)\n\n\nif __name__ == '__main__':\n    assert digitSum('') == 0\n    assert digitSum('abAB') == 131\n    assert digitSum('abcCd') == 67\n    assert digitSum('helloE') == 69\n    assert digitSum('woArBld') == 131\n    assert digitSum('aAaaaXa') == 153"
    },
    {
      "rank": 84,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in range(len(s)):\n        sum += ord(s[i])\n    return sum\n\n\ndef digitSum_two(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum_two(\"\") => 0\n        digitSum_two(\"abAB\") => 131\n        digitSum_two(\"abcCd\") => 67\n        digitSum_two(\"helloE\") => 69\n        digitSum_two(\"woArBld\") => 131\n        digitSum_two(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        sum += ord(s[i])\n    return sum\n\n\ndef digitSum_three(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum_three(\"\") => 0\n        digitSum_three(\"abAB\") => 131\n        digitSum_three(\"abcCd\") => 67\n        digitSum_three(\"helloE\") => 69\n        digitSum_three(\"woArBld\") => 131\n        digitSum_three(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        sum += ord(s[i])\n    return sum\n\n\ndef digitSum_four(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum_four(\"\") => 0\n        digitSum_four(\"abAB\") => 131\n        digitSum_four(\"abcCd\") => 67\n        digitSum_four(\"helloE\") => 69\n        digitSum_four(\"woArBld\") => 131\n        digitSum_four(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        sum += ord("
    },
    {
      "rank": 85,
      "score": 3.0,
      "candidate": "sum_upper_codes = 0\n    for c in s:\n        if ord(c) > 127:\n            sum_upper_codes += ord(c) - 64\n    return sum_upper_codes\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 86,
      "score": 3.0,
      "candidate": "s = s.upper()\n    sum = 0\n    for i in s:\n        sum += ord(i)\n    return sum\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i) - 64\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            sum += ord(s[i])\n    return sum\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in s:\n        if ord(i) > ord('A') and ord(i) < ord('Z'):\n            sum += ord(i) - ord('A')\n    return sum\n\n\ndef digitSum2(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if ord(i) > ord('A') and ord(i) < ord('Z'):\n            sum += ord(i) - ord('A')\n    return sum\n\n\ndef digitSum3(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if ord(i) > ord('A') and ord(i) < ord('Z'):\n            sum += ord(i) - ord('A')\n    return sum"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "return sum([ord(c) for c in s if ord(c) > 48 and ord(c) < 58])\n\n\ndef main():\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "s = s.upper()\n    return sum(int(i) for i in s)\n\n\ndef digitSum2(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum2(\"\") => 0\n        digitSum2(\"abAB\") => 131\n        digitSum2(\"abcCd\") => 67\n        digitSum2(\"helloE\") => 69\n        digitSum2(\"woArBld\") => 131\n        digitSum2(\"aAaaaXa\") => 153\n    \"\"\"\n\n    return sum(ord(i) for i in s.upper())\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153\n    assert digitSum2(\"\") == 0\n    assert digitSum2(\"abAB\") == 131\n    assert digitSum2(\"abcCd\") == 67\n    assert digitSum2(\"helloE\") == 69\n    assert digitSum2(\"woArBld\") == 131\n    assert digitSum2(\"aAaaaXa\") == 153"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "sum = 0\n    for char in s:\n        sum += ord(char)\n    return sum\n\n\nif __name__ == '__main__':\n    assert digitSum('') == 0\n    assert digitSum('abAB') == 131\n    assert digitSum('abcCd') == 67\n    assert digitSum('helloE') == 69\n    assert digitSum('woArBld') == 131\n    assert digitSum('aAaaaXa') == 153"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "result = 0\n    for i in range(len(s)):\n        if s[i].isalpha():\n            result += int(s[i])\n    return result\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "sum_of_upper_codes = 0\n    for i in s:\n        sum_of_upper_codes += ord(i)\n    return sum_of_upper_codes\n\n\nif __name__ == '__main__':\n    assert digitSum('') == 0\n    assert digitSum('abAB') == 131\n    assert digitSum('abcCd') == 67\n    assert digitSum('helloE') == 69\n    assert digitSum('woArBld') == 131\n    assert digitSum('aAaaaXa') == 153"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in s:\n        if ord(i) > 128:\n            sum += (ord(i) - 128)\n        else:\n            sum += ord(i)\n    return sum\n\n\ndef digitSum2(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum2(\"\") => 0\n        digitSum2(\"abAB\") => 131\n        digitSum2(\"abcCd\") => 67\n        digitSum2(\"helloE\") => 69\n        digitSum2(\"woArBld\") => 131\n        digitSum2(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if ord(i) > 128:\n            sum += (ord(i) - 128)\n        else:\n            sum += ord(i)\n    return sum\n\n\ndef digitSum3(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum3(\"\") => 0\n        digitSum3(\"abAB\") => 131\n        digitSum3(\"abcCd\") => 67\n        digitSum3(\"helloE\") => 69\n        digitSum3(\"woArBld\") => 131\n        digitSum3(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in s:\n        if ord(i) > 128:\n            sum += (ord(i) - 128)\n        else:\n            sum += ord(i)\n    return sum\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153\n    assert digitSum2(\"\") == 0\n    assert digitSum2(\"abAB\") == 131\n    assert digitSum2(\"abcCd\") == 67"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "sum = 0\n    for i in s:\n        sum += ord(i)\n\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "sum_of_upper_chars = 0\n    for c in s:\n        sum_of_upper_chars += ord(c)\n    return sum_of_upper_chars\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "if not s:\n        return 0\n    total = 0\n    for char in s:\n        total += ord(char) - 64\n    return total\n\n\nassert digitSum(\"\") == 0\nassert digitSum(\"abAB\") == 131\nassert digitSum(\"abcCd\") == 67\nassert digitSum(\"helloE\") == 69\nassert digitSum(\"woArBld\") == 131\nassert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "# Your code here\n    sum = 0\n    for i in s:\n        if i.isupper():\n            sum += ord(i)\n\n    return sum\n\n\nif __name__ == '__main__':\n    assert digitSum(\"\") == 0\n    assert digitSum(\"abAB\") == 131\n    assert digitSum(\"abcCd\") == 67\n    assert digitSum(\"helloE\") == 69\n    assert digitSum(\"woArBld\") == 131\n    assert digitSum(\"aAaaaXa\") == 153"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "return sum([ord(c) for c in s])\n\n\ndef digitSum2(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s.upper())\n\n\nif __name__ == '__main__':\n    print(digitSum(\"\"))\n    print(digitSum(\"abAB\"))\n    print(digitSum(\"abcCd\"))\n    print(digitSum(\"helloE\"))\n    print(digitSum(\"woArBld\"))\n    print(digitSum(\"aAaaaXa\"))\n    print(digitSum2(\"\"))\n    print(digitSum2(\"abAB\"))\n    print(digitSum2(\"abcCd\"))\n    print(digitSum2(\"helloE\"))\n    print(digitSum2(\"woArBld\"))\n    print(digitSum2(\"aAaaaXa\"))\n    print(digitSum2(\"aaaaaXa\"))\n    print(digitSum2(\"aaaaaXaXa\"))\n    print(digitSum2(\"aaaaaXa\"))\n    print(digitSum2(\"aaaaaXaXa\"))\n    print(digitSum2(\"aaaaaXaXa\"))\n    print(digitSum2(\"aaaaaXa\"))\n    print(digitSum2(\"aaaaaXa\"))"
    }
  ]
}