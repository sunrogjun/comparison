{
  "timestamp": "2025-09-14T11:27:46.472378",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "humaneval",
  "problem_number": 27,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "return string[::-1].upper() + string[1::-1].lower()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "return string.lower().upper() + string.upper()\n\n\ndef flip_case2(string: str) -> str:\n    \"\"\" For a given string, flip uppercase characters to lowercase and lowercase to uppercase.\n    >>> flip_case2('Hello')\n    'hELLO'\n    \"\"\"\n    return string.upper() + string.lower()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "return string.lower() + string.upper()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "return string.lower() if string.islower() else string.upper()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "return ''.join(char.upper() if char.islower() else char.lower() for char in string)\n\n\ndef flip_case_v2(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\n    return ''.join(char.upper() if char.islower() else char.lower() for char in string)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "return string.swapcase() if string.islower() else string.upper()\n\n\ndef flip_case_with_exception(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case_with_exception('Hello')\n    'hELLO'\n    \"\"\"\n    try:\n        return string.swapcase() if string.islower() else string.upper()\n    except Exception as e:\n        print(e)\n        return string\n\n\nif __name__ == '__main__':\n    string = input('Enter a string: ')\n    result = flip_case(string)\n    print(f'Flipped string: {result}')\n    result = flip_case_with_exception(string)\n    print(f'Flipped string with exception: {result}')"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "return string.upper() + string.lower()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "return string.lower().upper() + string.upper().lower()\n\n\ndef flip_case_no_break(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n    'hELLO'\n    \"\"\"\n    return string.lower().upper() + string.upper().lower()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "return string.lower().upper() + string.upper().lower()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "return ''.join([char.upper() if char.islower() else char.lower() for char in string])"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "return \"\".join(c.upper() if c.islower() else c.lower() for c in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "return string.lower() if string.islower() else string.upper()\n\n\ndef flip_case_with_list(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case_with_list('Hello')\n    'hELLO'\n    \"\"\"\n    return ''.join(x.upper() if x.islower() else x.lower() for x in string)"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "return string[::-1].capitalize() + string[::-1].lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "return string.upper() + string.lower()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\ndef flip_case_2(string: str) -> str:\n    \"\"\" For a given string, flip uppercase characters to lowercase.\n    >>> flip_case_2('Hello')\n    'hELLO'\n    \"\"\"\n    return string.lower() if string.isupper() else string.upper()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "return ''.join(x.upper() if x.islower() else x.lower() for x in string)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "return ''.join(x.lower() if x.islower() else x.upper() for x in string)\n\n\ndef flip_case2(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case2('Hello')\n    'hELLO'\n    \"\"\"\n    return ''.join(x.upper() if x.isupper() else x.lower() for x in string)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    print(flip_case('Hello'))\n    print(flip_case('hELLO'))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "return string.upper() + string.lower()"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "return string.swapcase().upper()"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "return string[::-1]"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "return string.lower().upper() + string.upper().lower()\n\n\ndef flip_case_1(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case_1('Hello')\n    'hELLO'\n    \"\"\"\n    return string.lower() + string.upper()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "return string[::-1].lower()\n\n\nif __name__ == '__main__':\n    print(flip_case('Hello'))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "return ''.join(x.upper() if x.islower() else x.lower() for x in string)\n\n\ndef flip_case_recursive(string: str) -> str:\n    \"\"\" For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    >>> flip_case_recursive('Hello')\n    'hELLO'\n    \"\"\"\n    if string == '':\n        return ''\n    return flip_case(string[0]) + flip_case_recursive(string[1:])"
    },
    {
      "rank": 27,
      "score": 9.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 28,
      "score": 9.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 29,
      "score": 9.0,
      "candidate": "if string.islower():\n        return string.upper()\n    else:\n        return string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 30,
      "score": 9.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 31,
      "score": 9.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    string = input('Enter a string: ')\n    print(flip_case(string))"
    },
    {
      "rank": 32,
      "score": 9.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 33,
      "score": 9.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 34,
      "score": 9.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 35,
      "score": 9.0,
      "candidate": "return ''.join([x.upper() if x.islower() else x.lower() for x in string])"
    },
    {
      "rank": 36,
      "score": 9.0,
      "candidate": "return string.lower() if string.islower() else string.upper()"
    },
    {
      "rank": 37,
      "score": 9.0,
      "candidate": "return \"\".join(chr(ord(c) + 1) if c.isupper() else c for c in string)"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "return string.lower() + string.upper()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "return \"\".join([char.upper() if char.islower() else char.lower() for char in string])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "return string.lower() + string.upper()\n\n\nif __name__ == '__main__':\n    string = input('Enter string: ')\n    print(flip_case(string))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "return ''.join(c.lower() if c.islower() else c.upper() for c in string)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "return string.lower() if string.islower() else string.upper()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "return string[::-1].lower() + string[1:].upper()"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "return ''.join(char.upper() if char.islower() else char.lower() for char in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "return ''.join([x.upper() if x.islower() else x.lower() for x in string])\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "return string[::-1].upper() + string[1:].lower()\n\n\nif __name__ == '__main__':\n    print(flip_case('Hello'))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "return string[::-1].upper() + string[1::-1].lower()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "return ''.join(c.upper() if c.islower() else c.lower() for c in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "return ''.join(i.upper() if i.islower() else i.lower() for i in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "return ''.join([char.upper() if char.islower() else char.lower() for char in string])"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "return string[::-1] if string[0].islower() else string[1:] + string[0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "return string[::-1]"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == \"__main__\":\n    print(flip_case(\"Hello\"))\n    print(flip_case(\"hELLO\"))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "return \"\".join(c.upper() if c.islower() else c.lower() for c in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "return ''.join(chr(ord(c) + 1) if c.islower() else c for c in string).upper()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "return \"\".join([c.upper() if c.islower() else c.lower() for c in string])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "return string[::-1]\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "return string[::-1].lower()"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "return string.lower() if string.islower() else string.upper()"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "return string.upper() if string.isupper() else string.lower()"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "if not string:\n        return ''\n\n    return string[::-1].lower() + string[1:].upper()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "if string.islower():\n        return string.upper()\n    return string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "return string.lower() if string.islower() else string.upper()\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "return string[::-1].lower() + string[1:].upper()"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "return \"\".join(c.upper() if c.islower() else c.lower() for c in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "return \"\".join(char.upper() if char.islower() else char.lower() for char in string)\n\n\nif __name__ == '__main__':\n    print(flip_case('Hello'))\n    print(flip_case('hELLO'))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "return string[::-1].upper() + string[1:].lower()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "return string[::-1].upper() + string[::-1].lower()"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "return \"\".join(c.lower() if c.islower() else c.upper() for c in string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "if string:\n        return ''.join(x.upper() if x.islower() else x.lower() for x in string)\n    return string\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "return string.swapcase()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "return string.lower() + string.upper()\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "return string[::-1].lower()"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "if string is None:\n        return None\n    return string[::-1] + string[1:][::-1]"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "return \"\".join([char.upper() if char.islower() else char.lower() for char in string])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "return ''.join(c.upper() if c.islower() else c.lower() for c in string)\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "return string.upper() if string.islower() else string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "return ''.join([c.upper() if c.islower() else c.lower() for c in string])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "return string.upper() + string.lower()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "return \"\".join([char.upper() if char.islower() else char.lower() for char in string])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 98,
      "score": 8.0,
      "candidate": "return string.lower() if string.islower() else string.upper()\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 99,
      "score": 8.0,
      "candidate": "return string.lower() if string.islower() else string.upper()\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 100,
      "score": 7.0,
      "candidate": "return string.upper() if string[0].islower() else string.lower()"
    }
  ]
}