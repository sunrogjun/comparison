{
  "timestamp": "2025-09-14T13:20:34.046520",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 119,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def max_freq(arr):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_item = i\n    return max_freq_item\n\n\ndef max_freq_recursive(arr, max_freq):\n    if max_freq == 0:\n        return max_freq_item\n    else:\n        max_freq = max(max_freq, arr[max_freq_item])\n        return max_freq_recursive(arr, max_freq)\n\n\ndef max_freq_iterative(arr):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_item = i\n    return max_freq_item\n\n\ndef main():\n    print(\"max_freq: \" + str(max_freq(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))\n    print(\"max_freq_recursive: \" + str(max_freq_recursive(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))\n    print(\"max_freq_iterative: \" + str(max_freq_iterative(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))\n\n\nmain()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def maximum_frequency(arr):\n    freq = {}\n    for item in arr:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    return max(freq, key=freq.get)\n\nprint(maximum_frequency([1,2,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def max_frequency(l):\n    dic = {}\n    for i in l:\n        dic[i] = dic.get(i, 0) + 1\n\n    return max(dic, key=dic.get)\n\n\nif __name__ == \"__main__\":\n    print(max_frequency([1, 2, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def maximum_freq(arr):\n    freq_dict = {}\n    for i in arr:\n        if i in freq_dict.keys():\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    max_freq = max(freq_dict.values())\n    max_freq_key = max(freq_dict.keys())\n    return max_freq_key\n\n\n\n\n\nprint(maximum_freq([1,2,3,4,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def max_freq(arr):\n    max_freq = -1\n    max_freq_item = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_item = i\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    print(max_freq([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def find_max_freq(l):\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    freq = {}\n    for i in l:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5]))\n    print(find_max_freq([1, 2, 3, 4, 5]))\n    print(find_max_freq([1, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def find_max_freq(arr):\n    freq_dict = {}\n    for i in arr:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    for key in freq_dict.keys():\n        if freq_dict[key] > len(arr) // 2:\n            return key\n\n\nprint(find_max_freq([1, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def max_freq(a):\n    max_freq = 0\n    max_freq_idx = -1\n    for i in range(len(a)):\n        if a[i] > max_freq:\n            max_freq = a[i]\n            max_freq_idx = i\n    return max_freq_idx\n\n\nprint(max_freq([1, 2, 3, 2, 3, 2, 1, 2, 3, 3, 3, 2, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def find_max_freq(list):\n    max_freq = 0\n    max_index = 0\n    for i, x in enumerate(list):\n        if x > max_freq:\n            max_freq = x\n            max_index = i\n\n    return max_index\n\n\nprint(find_max_freq([1, 2, 3, 4, 2, 2, 3, 2, 2, 2, 4, 5, 3, 2, 3, 2, 2, 2, 3, 2, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 5, 4, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 4, 5, 5, 4, 4, 5, 5, 5, 4, 5, 4, 5, 5, 5, 5, 4, 4, 5, 5, 5, 5, 4, 5, 5, 5, 4, 5, 4, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def find_item_max_freq(arr):\n    if len(arr) == 0:\n        return None\n    if len(arr) == 1:\n        return arr[0]\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return arr[max_freq_index]\n\n\ndef main():\n    arr = [3, 2, 4, 1, 1, 4, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 6, 5, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 5, 5, 6, 6, 6, 5, 6, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def find_max_freq(lst):\n    freq = {}\n    for i in range(len(lst)):\n        if lst[i] in freq:\n            freq[lst[i]] += 1\n        else:\n            freq[lst[i]] = 1\n    \n    max_freq = 0\n    max_freq_item = ''\n    for key, value in freq.items():\n        if value > max_freq:\n            max_freq = value\n            max_freq_item = key\n    \n    return max_freq_item\n\n\nprint(find_max_freq([1,1,2,2,3,3,4,4,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def max_freq(list_of_nums):\n    max_freq = list_of_nums[0]\n    for i in list_of_nums:\n        if i > max_freq:\n            max_freq = i\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    print(max_freq([1, 2, 3, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_item = None\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_item = i\n    return max_item\n\n\nprint(find_max_freq([1, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def find_max_freq(lst):\n    dic = {}\n    max_freq = 0\n    for i in lst:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n\n    for i in dic:\n        if dic[i] > max_freq:\n            max_freq = dic[i]\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3, 3, 4, 4, 3, 4, 3, 4, 2, 2, 2, 1, 4, 1, 2, 3, 2, 3, 2, 2, 2, 2, 4, 3, 4, 4, 4, 4, 4, 4, 2, 2, 2, 4, 1, 4, 2, 2, 4, 4, 2, 4, 4, 3, 4, 2, 3, 2, 3, 2, 3, 4, 4, 3, 3, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 2, 2, 2, 4, 4, 3, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def find_max_freq(a):\n    a = sorted(a)\n    freq = {}\n    for i in a:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    max_freq = max(freq, key=freq.get)\n    return freq[max_freq]\n\n\nif __name__ == \"__main__\":\n    a = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2"
    },
    {
      "rank": 16,
      "score": 9.370583536698913,
      "candidate": "def find_max_freq(arr):\n    freq_dict = {}\n    for i in arr:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    return max(freq_dict.items(), key=lambda x: x[1])[0]\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5]\n    print(find_max_freq(arr))"
    },
    {
      "rank": 17,
      "score": 9.234050852198141,
      "candidate": "def maximum_frequency(l):\n    d = {}\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n    return max(d, key=d.get)\n\nprint(maximum_frequency([1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6]))"
    },
    {
      "rank": 18,
      "score": 9.21346272767743,
      "candidate": "def find_max_frequency(a):\n    # Write your code here\n    d = {}\n    for item in a:\n        if item not in d:\n            d[item] = 1\n        else:\n            d[item] += 1\n    \n    return max(d, key=d.get)\n\n\nif __name__ == '__main__':\n    print(find_max_frequency([3, 2, 2, 3, 2, 3, 1]))\n    print(find_max_frequency([1, 2, 3, 4, 2, 1, 1, 2]))\n    print(find_max_frequency([1, 2, 3, 4, 2, 1, 2, 3]))"
    },
    {
      "rank": 19,
      "score": 9.205959372648458,
      "candidate": "def find_max_freq(lst):\n    freq = {}\n    for i in range(len(lst)):\n        if lst[i] not in freq:\n            freq[lst[i]] = 1\n        else:\n            freq[lst[i]] += 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == '__main__':\n    assert find_max_freq([1, 1, 2, 2, 2, 2, 3, 3, 3, 3]) == 3"
    },
    {
      "rank": 20,
      "score": 9.177268828905222,
      "candidate": "def max_freq(lst):\n    max_freq = 0\n    max_item = \"\"\n    for item in lst:\n        if lst.count(item) > max_freq:\n            max_freq = lst.count(item)\n            max_item = item\n    return max_item\n\nprint(max_freq([1, 2, 3, 4, 5, 5, 3, 4, 2]))\nprint(max_freq([3, 2, 1, 1, 2, 3]))\nprint(max_freq([3, 2, 1, 1, 2, 3, 4, 5, 4, 3, 4, 2, 5, 4, 3, 5, 4, 3, 3, 2, 1, 2, 4, 2]))\nprint(max_freq([4, 5, 4, 4, 4, 5, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4"
    },
    {
      "rank": 21,
      "score": 9.122564458729856,
      "candidate": "def find_max_freq(items):\n    count = {}\n    max_freq = 0\n    for item in items:\n        if item in count:\n            count[item] += 1\n        else:\n            count[item] = 1\n\n        if count[item] > max_freq:\n            max_freq = count[item]\n            max_freq_item = item\n    return max_freq_item\n\n\nprint(find_max_freq([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"a\"]))"
    },
    {
      "rank": 22,
      "score": 8.973005557553902,
      "candidate": "def max_freq(a):\n    dic = {}\n    for i in a:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    max_freq = max(dic.values())\n    for i in dic.keys():\n        if dic[i] == max_freq:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(max_freq([1, 1, 2, 2, 3, 3, 4, 5, 5, 6]))\n    print(max_freq([1, 1, 2, 2, 3, 3, 4, 5, 5, 6]))\n    print(max_freq([]))\n    print(max_freq([1, 1, 1, 1, 1, 1, 1, 1]))"
    },
    {
      "rank": 23,
      "score": 8.95994420569242,
      "candidate": "def max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    return max(freq, key=freq.get)\n\n\nprint(max_freq([1, 2, 1, 3, 4, 4, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5"
    },
    {
      "rank": 24,
      "score": 8.946210893390457,
      "candidate": "def max_frequency(lst):\n    max_freq = 0\n    max_freq_idx = 0\n    for idx, value in enumerate(lst):\n        if value > max_freq:\n            max_freq = value\n            max_freq_idx = idx\n    return lst[max_freq_idx]\n\nif __name__ == \"__main__\":\n    print(max_frequency([1,1,2,2,3,3,4,4,5,5,5,6,6,7,7,7,7,8,8,9,9]))"
    },
    {
      "rank": 25,
      "score": 8.932217008005624,
      "candidate": "def max_frequency(lst):\n    dict = {}\n    for i in lst:\n        if i in dict:\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    max_freq = max(dict.values())\n    max_freq_index = dict.keys().index(max_freq)\n    return lst[max_freq_index]\n\nlst = [1, 1, 2, 2, 1, 3, 3, 4, 4, 3, 2, 1, 1, 1, 1, 4, 3, 2, 2, 4]\nprint(max_frequency(lst))"
    },
    {
      "rank": 26,
      "score": 8.910084504002544,
      "candidate": "def find_max_freq(arr):\n    freq_dict = {}\n    for item in arr:\n        if item in freq_dict:\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n    max_freq_item = None\n    max_freq_value = 0\n    for key in freq_dict:\n        if freq_dict[key] > max_freq_value:\n            max_freq_item = key\n            max_freq_value = freq_dict[key]\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 1, 3, 3, 2, 1, 2, 2, 1]\n    print(find_max_freq(arr))"
    },
    {
      "rank": 27,
      "score": 8.85571690049604,
      "candidate": "def find_item_with_max_freq(items):\n    freq = {}\n    for item in items:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    print(find_item_with_max_freq([1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6]))"
    },
    {
      "rank": 28,
      "score": 8.850707355641543,
      "candidate": "def maximum_freq(list):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(list)):\n        if list[i] > max_freq:\n            max_freq = list[i]\n            max_freq_index = i\n    return max_freq_index\n\nprint(maximum_freq([1,2,3,4,4,3,2,1]))\nprint(maximum_freq([1,2,3,4,4,3,2,1]))"
    },
    {
      "rank": 29,
      "score": 8.8281618090209,
      "candidate": "def max_freq(data):\n    freq = {}\n    for i in data:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    max_freq = ''\n    for i in freq:\n        if freq[i] > len(max_freq):\n            max_freq = i\n    return max_freq\n\n\nif __name__ == '__main__':\n    data = [1, 2, 1, 1, 3, 2, 2, 3, 4, 2, 4, 4, 4, 4, 5, 6, 4, 6, 5]\n    print(max_freq(data))"
    },
    {
      "rank": 30,
      "score": 8.81367773444215,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        freq[i] = freq.get(i, 0) + 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 5, 5, 5, 6]))"
    },
    {
      "rank": 31,
      "score": 8.76828871349479,
      "candidate": "def maximum_frequency(arr):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n\n    return max_freq_index\n\n\nprint(maximum_frequency([1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]))"
    },
    {
      "rank": 32,
      "score": 8.750282588864879,
      "candidate": "class Solution:\n    def findMaxFrequency(self, nums: List[int]) -> int:\n        d = {}\n        for n in nums:\n            if n in d:\n                d[n] += 1\n            else:\n                d[n] = 1\n        return max(d, key=d.get)"
    },
    {
      "rank": 33,
      "score": 8.715724466237427,
      "candidate": "def find_max_freq(lst):\n    if len(lst) == 0:\n        return -1\n    if len(lst) == 1:\n        return lst[0]\n    freq = {}\n    for item in lst:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    max_freq = None\n    max_freq_item = None\n    for key in freq:\n        if max_freq is None or freq[key] > max_freq:\n            max_freq = freq[key]\n            max_freq_item = key\n    return max_freq_item\n\n\nprint(find_max_freq([1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4]))"
    },
    {
      "rank": 34,
      "score": 8.692801520950061,
      "candidate": "def find_max_freq(lst):\n    if len(lst) == 0:\n        return None\n\n    if len(lst) == 1:\n        return lst[0]\n\n    freq = {}\n    for i in lst:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n\n    max_freq = None\n    max_freq_count = None\n    for key, val in freq.items():\n        if max_freq == None or val > max_freq_count:\n            max_freq = key\n            max_freq_count = val\n\n    return max_freq\n\n\nprint(find_max_freq([1, 1, 1, 1, 2, 2, 2, 3, 3]))\nprint(find_max_freq([1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3]))\nprint(find_max_freq([1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3"
    },
    {
      "rank": 35,
      "score": 8.632293453617281,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    for i in freq:\n        if freq[i] > len(arr)//2:\n            return i\n\n\nprint(find_max_freq([1, 1, 1, 2, 2, 3, 3, 3, 4, 4]))"
    },
    {
      "rank": 36,
      "score": 8.625262456968262,
      "candidate": "def find_max_freq(list_of_freq):\n    max_freq = list_of_freq[0]\n    max_index = 0\n    for i in range(len(list_of_freq)):\n        if list_of_freq[i] > max_freq:\n            max_freq = list_of_freq[i]\n            max_index = i\n    return max_index\n\n\nif __name__ == '__main__':\n    list_of_freq = [1, 3, 3, 2, 2, 2, 1, 2, 3, 2]\n    print(find_max_freq(list_of_freq))"
    },
    {
      "rank": 37,
      "score": 8.625142247198651,
      "candidate": "def max_freq(list):\n    freq_dict = {}\n    for i in range(len(list)):\n        freq_dict[list[i]] = freq_dict.get(list[i], 0) + 1\n    max_freq = 0\n    max_freq_item = None\n    for key, val in freq_dict.items():\n        if val > max_freq:\n            max_freq = val\n            max_freq_item = key\n    return max_freq_item\n\nprint(max_freq([1, 3, 2, 2, 1, 3, 2]))"
    },
    {
      "rank": 38,
      "score": 8.616253589228675,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    return max(freq, key=freq.get)\n\n\narr = [1, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5]\n\nprint(find_max_freq(arr))"
    },
    {
      "rank": 39,
      "score": 8.610076160146226,
      "candidate": "def maximum_frequency(arr):\n    return max(set(arr), key=arr.count)\n\n\nif __name__ == \"__main__\":\n    assert maximum_frequency([1, 2, 3, 2, 4, 3, 2, 2, 1]) == 2\n    assert maximum_frequency([1, 2, 3, 2, 4, 3, 2, 2, 1]) == 4\n    assert maximum_frequency([1, 2, 3, 2, 4, 3, 2, 2, 1]) == 1"
    },
    {
      "rank": 40,
      "score": 8.606486429141842,
      "candidate": "def max_freq(lst):\n    freq = {}\n    for item in lst:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n\n    max_item = max(freq, key=freq.get)\n    return max_item\n\nprint(max_freq([1,1,2,1,2,3,3,4,4,4,5,5]))"
    },
    {
      "rank": 41,
      "score": 8.60156811074208,
      "candidate": "def find_max_freq(lst):\n    # Your code here\n    freq_dict = {}\n    for i in lst:\n        if i not in freq_dict:\n            freq_dict[i] = 1\n        else:\n            freq_dict[i] += 1\n    max_freq = max(freq_dict.values())\n    return max_freq\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n    print(find_max_freq(lst))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 42,
      "score": 8.565425580227462,
      "candidate": "def max_freq(lst):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(lst)):\n        if lst[i] > max_freq:\n            max_freq = lst[i]\n            max_freq_index = i\n    return max_freq_index\n\n\nprint(max_freq([1, 2, 2, 3, 4, 5, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9]))"
    },
    {
      "rank": 43,
      "score": 8.548876241946822,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return max_freq_index\n\n\ndef main():\n    print(find_max_freq([1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 44,
      "score": 8.542875062379007,
      "candidate": "def find_max_freq(lst):\n    freq = {}\n\n    for x in lst:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n\n    max_freq = 0\n    max_freq_item = None\n\n    for x in freq:\n        if freq[x] > max_freq:\n            max_freq = freq[x]\n            max_freq_item = x\n\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 4, 3, 1, 2, 4, 3, 4, 1, 2, 4, 3, 4]))"
    },
    {
      "rank": 45,
      "score": 8.53012858503943,
      "candidate": "def max_freq(lst):\n    max_freq_key = -1\n    max_freq_value = -1\n    for key, value in enumerate(lst):\n        if value > max_freq_value:\n            max_freq_value = value\n            max_freq_key = key\n\n    return lst[max_freq_key]\n\n\nif __name__ == '__main__':\n    print(max_freq([1, 2, 2, 3, 1, 1, 2, 3]))"
    },
    {
      "rank": 46,
      "score": 8.499905739299377,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_idx = 0\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_idx = i\n    return max_idx\n\n\narr = [1, 3, 3, 3, 4, 4, 4, 4, 3, 2, 2, 3]\nprint(find_max_freq(arr))"
    },
    {
      "rank": 47,
      "score": 8.478208546788407,
      "candidate": "def max_freq(arr):\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(arr)):\n        if arr[i] == max_freq:\n            max_freq_index = i\n    return max_freq_index\n\nprint(max_freq([1, 2, 1, 2, 3, 1, 4, 4, 1, 3, 1, 2, 3, 3, 4, 4, 4, 5]))\nprint(max_freq([1, 2, 1, 2, 3, 1, 4, 4, 1, 3, 1, 2, 3, 3, 4, 4, 4, 5]))\nprint(max_freq([1, 2, 1, 2, 3, 1, 4, 4, 1, 3, 1, 2, 3, 3, 4, 4, 4, 5]))"
    },
    {
      "rank": 48,
      "score": 8.437695832075478,
      "candidate": "def find_max_frequency(arr):\n    if not arr:\n        return -1\n    max_freq = -1\n    max_freq_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return max_freq_index\n\n\ndef find_max_frequency_v2(arr):\n    if not arr:\n        return -1\n    max_freq = -1\n    max_freq_index = -1\n    freq_dict = {}\n    for i in range(len(arr)):\n        if arr[i] not in freq_dict:\n            freq_dict[arr[i]] = 1\n        else:\n            freq_dict[arr[i]] += 1\n    for k, v in freq_dict.items():\n        if v > max_freq:\n            max_freq = v\n            max_freq_index = k\n    return max_freq_index\n\n\nif __name__ == \"__main__\":\n    print(find_max_frequency([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]))\n    print(find_max_frequency([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))\n    print(find_max_frequency([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5]))"
    },
    {
      "rank": 49,
      "score": 8.408439383654278,
      "candidate": "def find_max_freq(lst):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(lst)):\n        if lst[i] > max_freq:\n            max_freq = lst[i]\n            max_freq_item = i\n    return max_freq_item\n\nprint(find_max_freq([3, 5, 2, 1, 3, 2, 5, 3, 1, 5, 3]))"
    },
    {
      "rank": 50,
      "score": 8.386620303250325,
      "candidate": "def find_max_frequency(arr):\n    max_frequency = 0\n    max_index = 0\n    for i, val in enumerate(arr):\n        if val > max_frequency:\n            max_frequency = val\n            max_index = i\n    return arr[max_index]\n\n\narr = [1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\nprint(find_max_frequency(arr))"
    },
    {
      "rank": 51,
      "score": 8.375312293858853,
      "candidate": "def find_item(arr, max_freq):\n    return max(arr, key = arr.count)\n\n\nif __name__ == \"__main__\":\n    print(find_item([1, 2, 3, 4, 5, 6], 3))"
    },
    {
      "rank": 52,
      "score": 8.351614956112536,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    return max(freq, key=freq.get)\n\nif __name__ == '__main__':\n    print(find_max_freq([1,2,2,3,3,2,4,2,2,4]))"
    },
    {
      "rank": 53,
      "score": 8.331556294201176,
      "candidate": "def find_max_freq(arr):\n    freq_dict = {}\n    for element in arr:\n        if element not in freq_dict:\n            freq_dict[element] = 1\n        else:\n            freq_dict[element] += 1\n\n    max_freq = 0\n    max_freq_item = None\n    for key, value in freq_dict.items():\n        if value > max_freq:\n            max_freq = value\n            max_freq_item = key\n\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6"
    },
    {
      "rank": 54,
      "score": 8.327375965969855,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    return max(freq, key=freq.get)\n\n\nprint(find_max_freq([1, 2, 2, 3, 4, 2, 3, 4, 5]))"
    },
    {
      "rank": 55,
      "score": 8.327367757082776,
      "candidate": "def find_max_freq(arr):\n    dic = {}\n    for item in arr:\n        if item in dic:\n            dic[item] += 1\n        else:\n            dic[item] = 1\n\n    for key in dic:\n        if dic[key] > len(arr) // 2:\n            return key\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([\"a\", \"b\", \"a\", \"b\", \"a\", \"b\"]))"
    },
    {
      "rank": 56,
      "score": 8.298597569547805,
      "candidate": "def max_freq(lst):\n    if len(lst) == 0:\n        return None\n    else:\n        max_freq = 0\n        max_freq_item = None\n        for item in lst:\n            if lst.count(item) > max_freq:\n                max_freq = lst.count(item)\n                max_freq_item = item\n\n        return max_freq_item\n\n\nprint(max_freq([1, 3, 2, 1, 3, 2, 1, 3]))\nprint(max_freq([1, 1, 1, 1, 1, 1, 1]))"
    },
    {
      "rank": 57,
      "score": 8.2938925966498,
      "candidate": "def find_max_freq(lst):\n    # your code here\n    lst.sort()\n    return lst[-1]\n\n\nprint(find_max_freq([1,2,2,3,3,4,4,5,5,5,5,5]))"
    },
    {
      "rank": 58,
      "score": 8.289838256518838,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for x in arr:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n    max_freq = None\n    max_val = 0\n    for k, v in freq.items():\n        if v > max_val:\n            max_freq = k\n            max_val = v\n    return max_freq\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 4, 5, 5, 5, 5, 5]\n    print(find_max_freq(arr))"
    },
    {
      "rank": 59,
      "score": 8.251903304236286,
      "candidate": "def find_max_freq(l):\n    freq = {}\n    max_freq = 0\n    for i in l:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n\n    for i in freq:\n        if freq[i] > max_freq:\n            max_freq = freq[i]\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 2, 1, 2, 3, 4, 2, 3, 2, 3, 3, 2, 1]))"
    },
    {
      "rank": 60,
      "score": 8.214125058964552,
      "candidate": "def find_max_frequency(a):\n    freq = {}\n    for item in a:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    max_freq = max(freq.values())\n    for item in freq:\n        if freq[item] == max_freq:\n            return item\n    return None\n\n\nprint(find_max_frequency([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))"
    },
    {
      "rank": 61,
      "score": 8.212735598038213,
      "candidate": "def find_max_freq(a):\n    freq_dict = {}\n    for item in a:\n        if item not in freq_dict:\n            freq_dict[item] = 1\n        else:\n            freq_dict[item] += 1\n\n    max_freq = max(freq_dict.values())\n    max_item = freq_dict.keys()[freq_dict.values().index(max_freq)]\n\n    return max_item\n\nprint(find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))"
    },
    {
      "rank": 62,
      "score": 8.211579567659316,
      "candidate": "def max_frequency(list):\n    freq_dict = {}\n    for item in list:\n        if item not in freq_dict:\n            freq_dict[item] = 1\n        else:\n            freq_dict[item] += 1\n    max_freq = max(freq_dict, key=freq_dict.get)\n    return max_freq\n\nif __name__ == '__main__':\n    print(max_frequency([1, 2, 3, 2, 2, 3, 1, 1, 2, 2, 2, 2, 1, 2, 2]))"
    },
    {
      "rank": 63,
      "score": 8.209707251476969,
      "candidate": "def max_freq(lst):\n    freq_dict = {}\n    for item in lst:\n        if item in freq_dict.keys():\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n    max_freq = max(freq_dict.values())\n    for item in freq_dict.keys():\n        if freq_dict[item] == max_freq:\n            return item"
    },
    {
      "rank": 64,
      "score": 8.2048573255218,
      "candidate": "def max_freq(lst):\n    freq = {}\n    for item in lst:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    max_freq_item = max(freq, key=freq.get)\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3, 4, 5, 1, 3, 2, 5, 4, 6, 7]\n    print(max_freq(lst))"
    },
    {
      "rank": 65,
      "score": 8.172253082181854,
      "candidate": "def max_frequency(lst):\n    dic = {}\n    for i in lst:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n\n    return max(dic, key=dic.get)\n\n\nlst = [1, 2, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,"
    },
    {
      "rank": 66,
      "score": 8.163300679823958,
      "candidate": "def find_max_freq(l):\n    freq_dict = {}\n    for i in l:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    max_value = max(freq_dict.values())\n    for i in freq_dict:\n        if freq_dict[i] == max_value:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(find_max_freq([\"a\", \"a\", \"b\", \"b\", \"c\", \"a\", \"a\", \"a\", \"a\"]))"
    },
    {
      "rank": 67,
      "score": 8.144125099485041,
      "candidate": "def find_max_frequency(arr):\n    count = {}\n    for i in range(len(arr)):\n        if arr[i] in count:\n            count[arr[i]] += 1\n        else:\n            count[arr[i]] = 1\n    \n    max_freq = 0\n    max_num = 0\n    for k, v in count.items():\n        if v > max_freq:\n            max_freq = v\n            max_num = k\n    \n    return max_num\n\n\nprint(find_max_frequency([1,2,1,2,3,3,4,4,4]))"
    },
    {
      "rank": 68,
      "score": 8.143591138329747,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_item = None\n\n    for item in arr:\n        if max_freq < item:\n            max_freq = item\n            max_freq_item = item\n\n    return max_freq_item"
    },
    {
      "rank": 69,
      "score": 8.121884567141883,
      "candidate": "from collections import Counter\n\n\ndef find_item_with_max_freq(lst):\n    freq = Counter(lst)\n    return max(freq, key=freq.get)\n\n\nprint(find_item_with_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 70,
      "score": 8.105983444291466,
      "candidate": "def find_max_freq(lst):\n    freq_dict = {}\n    for i in lst:\n        if i not in freq_dict:\n            freq_dict[i] = 1\n        else:\n            freq_dict[i] += 1\n\n    max_freq = max(freq_dict.values())\n    max_freq_index = freq_dict.keys()[freq_dict.values().index(max_freq)]\n\n    return max_freq_index\n\nprint(find_max_freq([1, 2, 1, 2, 3, 4, 3, 2]))"
    },
    {
      "rank": 71,
      "score": 8.08452234024709,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == '__main__':\n    print(find_max_freq([1, 2, 2, 3, 4, 4, 3, 2, 2, 1]))\n    print(find_max_freq([1, 2, 2, 3, 4, 4, 3, 2, 2, 1]))"
    },
    {
      "rank": 72,
      "score": 8.024835682833125,
      "candidate": "def find_max_freq(lst):\n    dic = {}\n    for x in lst:\n        if x not in dic.keys():\n            dic[x] = 1\n        else:\n            dic[x] += 1\n    return max(dic.items(), key=lambda x: x[1])[0]"
    },
    {
      "rank": 73,
      "score": 7.990432406683839,
      "candidate": "def max_freq(arr):\n    count = {}\n    for i in arr:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n    return max(count, key=count.get)\n\n\nprint(max_freq([1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5]))"
    },
    {
      "rank": 74,
      "score": 7.938028884277233,
      "candidate": "def find_max_freq(list_):\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(list_)):\n        if list_[i] > max_freq:\n            max_freq = list_[i]\n            max_freq_index = i\n    return max_freq_index\n\n\nif __name__ == \"__main__\":\n    assert find_max_freq([1, 2, 2, 2, 3, 3]) == 1\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3]) == 2\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3]) == 3\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3]) == 3\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3]) == 3"
    },
    {
      "rank": 75,
      "score": 7.915588979966494,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return max_freq_index\n\n\narr = [1, 3, 2, 4, 5, 5, 2, 3, 4, 2, 2]\nprint(find_max_freq(arr))"
    },
    {
      "rank": 76,
      "score": 7.8912769574414305,
      "candidate": "def find_max_freq(nums):\n    count = dict()\n\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n\n    max_val = max(count.values())\n    max_val_index = count.values().index(max_val)\n\n    return nums[max_val_index]\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 1, 2, 2, 3, 3, 4, 4]))"
    },
    {
      "rank": 77,
      "score": 7.868947655733293,
      "candidate": "def find_max_freq(lst):\n    max_freq = 0\n    max_freq_item = None\n    for item in lst:\n        if item[1] > max_freq:\n            max_freq = item[1]\n            max_freq_item = item\n    return max_freq_item\n\n\nprint(find_max_freq([1, 1, 1, 2, 2, 2, 3, 3]))"
    },
    {
      "rank": 78,
      "score": 7.84634113240411,
      "candidate": "def find_max_freq(list):\n    count = dict()\n    for item in list:\n        if item in count:\n            count[item] += 1\n        else:\n            count[item] = 1\n    max_freq = max(count.values())\n    max_item = list(filter(lambda item: count[item] == max_freq, count.keys()))[0]\n    return max_item\n\nprint(find_max_freq([1,1,1,1,2,2,2,2,2,2,3,3,3,4,4,4,4,4,4,4,4,4,4,4]))"
    },
    {
      "rank": 79,
      "score": 7.834022619458933,
      "candidate": "def max_freq(arr):\n    freq = {}\n    for x in arr:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n\n    max_val = max(freq.values())\n    for key, value in freq.items():\n        if value == max_val:\n            return key\n\n\nif __name__ == \"__main__\":\n    assert max_freq([1, 1, 2, 2, 2, 3, 3, 4, 4]) == 2\n    assert max_freq([1, 1, 2, 2, 2, 3, 3, 4, 4]) == 3"
    },
    {
      "rank": 80,
      "score": 7.780351419995229,
      "candidate": "def find_max_frequency(list_of_numbers):\n    max_frequency = 0\n    max_num = None\n    for num in list_of_numbers:\n        if num > max_frequency:\n            max_frequency = num\n            max_num = num\n    return max_num\n\n\nlist_of_numbers = [3, 2, 1, 5, 4, 6, 2, 6]\nprint(find_max_frequency(list_of_numbers))"
    },
    {
      "rank": 81,
      "score": 7.738292593776799,
      "candidate": "def find_max_freq(list):\n    freq = {}\n    for item in list:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    return max(freq, key=freq.get)\n\n\nprint(find_max_freq([1, 2, 3, 2, 2, 3, 3, 3]))"
    },
    {
      "rank": 82,
      "score": 7.7320703513377165,
      "candidate": "def max_freq(arr):\n    freq_dict = {}\n    max_freq = 0\n    for val in arr:\n        if val not in freq_dict:\n            freq_dict[val] = 1\n        else:\n            freq_dict[val] += 1\n\n        if freq_dict[val] > max_freq:\n            max_freq = freq_dict[val]\n            idx = val\n\n    return idx"
    },
    {
      "rank": 83,
      "score": 7.705183449260731,
      "candidate": "def find_max_freq(items):\n    max_freq = 0\n    max_freq_item = None\n    for item in items:\n        if items.count(item) > max_freq:\n            max_freq = items.count(item)\n            max_freq_item = item\n\n    return max_freq_item\n\n\nprint(find_max_freq([\"a\", \"a\", \"b\", \"c\", \"b\", \"a\", \"a\", \"c\", \"b\", \"a\"]))"
    },
    {
      "rank": 84,
      "score": 7.5819855281879285,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_index = i\n    return max_index\n\n\n\narr = [1, 2, 2, 3, 3, 4, 4, 4, 4]\nprint(find_max_freq(arr))"
    },
    {
      "rank": 85,
      "score": 7.562924366763077,
      "candidate": "def find_max_freq(lst):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(lst)):\n        if lst[i] in lst:\n            lst.remove(lst[i])\n        else:\n            if lst.count(lst[0]) > max_freq:\n                max_freq = lst.count(lst[0])\n                max_freq_item = lst[0]\n    return max_freq_item\n\nprint(find_max_freq([1, 2, 3, 4, 4, 5, 6, 6]))"
    },
    {
      "rank": 86,
      "score": 7.4878043221155455,
      "candidate": "def max_freq(arr):\n    freq = {}\n    for i in range(len(arr)):\n        if arr[i] not in freq:\n            freq[arr[i]] = 1\n        else:\n            freq[arr[i]] += 1\n    max_freq = max(freq.items(), key=lambda x: x[1])[0]\n    return max_freq\n\n\narr = [1, 3, 4, 5, 6, 7, 8, 9, 1, 4, 7, 6]\nprint(max_freq(arr))"
    },
    {
      "rank": 87,
      "score": 7.464609382504557,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n\n    max_freq = max(freq, key=freq.get)\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    assert find_max_freq([1, 1, 2, 2, 1, 3, 3]) == 2"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "def find_max_freq(arr):\n    if len(arr) == 0:\n        return None\n\n    max_freq = 0\n    max_freq_index = 0\n\n    for index, val in enumerate(arr):\n        if val > max_freq:\n            max_freq = val\n            max_freq_index = index\n\n    return arr[max_freq_index]\n\n\nprint(find_max_freq([1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3]))"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "def find_max_freq(l):\n    # Your code here\n    freq_dict = {}\n    for item in l:\n        if item in freq_dict:\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n\n    max_freq = max(freq_dict, key=freq_dict.get)\n    return max_freq\n\n\n\n\nprint(find_max_freq([\"a\", \"b\", \"c\", \"a\", \"c\", \"b\"]))"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    max_freq = None\n    max_freq_index = None\n    for key, value in freq.items():\n        if max_freq is None or value > max_freq:\n            max_freq = value\n            max_freq_index = key\n    return max_freq_index\n\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(find_max_freq(arr))"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "def find_max_freq(nums):\n    # Fill this in.\n    pass\n\n\nprint(find_max_freq([2, 2, 3, 3, 3, 3, 3, 4, 4]))"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "def find_max_frequency(arr):\n    freq_dict = {}\n    max_freq = -1\n    for item in arr:\n        if item in freq_dict:\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n\n        if freq_dict[item] > max_freq:\n            max_freq = freq_dict[item]\n\n    return max_freq\n\n\nif __name__ == '__main__':\n    assert find_max_frequency([1, 2, 1, 1, 1, 2, 2, 2, 2, 2]) == 2\n    assert find_max_frequency([1, 2, 3, 1, 1, 2, 2, 2, 2, 2]) == 3\n    assert find_max_frequency([1, 2, 2, 2, 2, 2, 2, 2]) == 2\n    assert find_max_frequency([1, 2, 3, 3, 3, 3, 3, 3, 3]) == 3"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_item = None\n    for item in arr:\n        if item in arr:\n            arr.remove(item)\n        if len(arr) == 0:\n            return max_freq_item\n        if item > max_freq:\n            max_freq = item\n            max_freq_item = item\n    return max_freq_item\n\n\ndef test_find_max_freq():\n    assert find_max_freq([]) == None\n    assert find_max_freq([1]) == 1\n    assert find_max_freq([1, 2, 3, 4, 5, 6]) == 2\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8]) == 5\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 9\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 10\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == 11\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 12\n\n\ntest_find_max_freq()"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "def find_max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    arr = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5]\n    print(find_max_freq(arr))"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def find_max_freq(l):\n    # Write your code here\n    l.sort()\n    freq_dict = {}\n    for i in range(len(l)):\n        if l[i] not in freq_dict:\n            freq_dict[l[i]] = 1\n        else:\n            freq_dict[l[i]] += 1\n    return max(freq_dict, key=freq_dict.get)\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4]))\n    print(find_max_freq([4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4]))\n    print(find_max_freq([3, 4, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 3, 2, 3, 2, 2, 3, 2, 2, 2, 3, 4, 3, 4, 4, 2, 4, 3, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def find_max_frequency(arr):\n    freq_dict = {}\n    max_frequency = -1\n    for i in arr:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    for key, value in freq_dict.items():\n        if value > max_frequency:\n            max_frequency = value\n            max_key = key\n    return max_key\n\n\nif __name__ == \"__main__\":\n    assert find_max_frequency([1, 1, 1, 2, 2, 2, 3]) == 2\n    assert find_max_frequency([1, 1, 1, 2, 2, 2, 3]) == 3\n    assert find_max_frequency([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 9\n    assert find_max_frequency([]) == None"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def maximum_frequency(arr):\n    max_frequency = 0\n    max_freq_index = 0\n\n    for i, val in enumerate(arr):\n        if val > max_frequency:\n            max_frequency = val\n            max_freq_index = i\n\n    return arr[max_freq_index]\n\n\nif __name__ == '__main__':\n    assert maximum_frequency([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 8\n    assert maximum_frequency([4, 2, 1, 3, 5, 6, 7, 8]) == 6\n    assert maximum_frequency([1, 1, 1, 1, 1, 1]) == 1"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def find_max_freq(arr):\n    max_freq = -1\n    max_freq_index = -1\n\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n\n    return max_freq_index\n\n\ndef main():\n    arr = [1, 2, 3, 4, 2, 2, 2, 3, 3, 4, 2, 4, 4, 2, 4]\n    print(find_max_freq(arr))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def maximum_frequency(lst):\n    max_freq = 0\n    max_item = None\n    for item in lst:\n        if item in lst:\n            lst.remove(item)\n        if max_freq < len(lst):\n            max_freq = len(lst)\n            max_item = item\n    return max_item\n\n\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def max_freq(arr):\n    max_freq_dict = {}\n    for x in arr:\n        if x not in max_freq_dict:\n            max_freq_dict[x] = 1\n        else:\n            max_freq_dict[x] += 1\n    max_freq_dict_sorted = sorted(max_freq_dict.items(), key=lambda x: x[1], reverse=True)\n    return max_freq_dict_sorted[0][0]\n\n\nprint(max_freq([1, 2, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4]))"
    }
  ]
}