{
  "timestamp": "2025-09-14T15:59:04.541415",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 480,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n):\n    return n*(n+1)/2\n\nprint(geometric_progression_series(9))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def geometric_sum(n):\n    return n**2 + n + 1\n\n\nif __name__ == \"__main__\":\n    print(geometric_sum(0))\n    print(geometric_sum(1))\n    print(geometric_sum(2))\n    print(geometric_sum(3))\n    print(geometric_sum(4))\n    print(geometric_sum(5))\n    print(geometric_sum(6))\n    print(geometric_sum(7))\n    print(geometric_sum(8))\n    print(geometric_sum(9))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n):\n    total = 0\n    for i in range(1, n+1):\n        total += i\n    return total\n\n\nprint(geometric_progression_series(1000))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def geometric_progression(n):\n    if n < 1:\n        return 0\n\n    return n * geometric_progression(n-1) + (n-1) * geometric_progression(n-2)\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression(10))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def geometric_series(n):\n    s = 1\n    for i in range(2, n):\n        s *= i\n    return s\n\ndef main():\n    print(geometric_series(10))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def geometric_series(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i\n    return sum\n\nprint(geometric_series(9))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def geometric_progression(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\nif __name__ == \"__main__\":\n    print(geometric_progression(1000))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def geometric_progression_sum(n):\n    sum = 0\n    for i in range(1, n):\n        sum += (i ** (n - i))\n    return sum\n\nprint(geometric_progression_sum(10))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n):\n    return (n + 1) * (n + 2) / 3\n\n\ndef main():\n    print(geometric_progression_series(10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def geometric_progression(n):\n    # Write your code here\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression(4))\n    print(geometric_progression(5))\n    print(geometric_progression(7))\n    print(geometric_progression(9))\n    print(geometric_progression(10))\n    print(geometric_progression(100))\n    print(geometric_progression(10000))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n):\n    if n < 2:\n        return n\n    else:\n        return n + geometric_progression_series(n-1)\n\n\nprint(geometric_progression_series(10))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n, p):\n    sum = 0\n    for i in range(n):\n        sum += p ** i\n    return sum\n\n\nprint(geometric_progression_series(100, 1))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 1\n    else:\n        return n * geometric_progression(n - 1)\n\n\nprint(geometric_progression(10))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def geometric_sum(n):\n    sum_of_geometric_series = 0\n    for i in range(1, n + 1):\n        sum_of_geometric_series += i\n    return sum_of_geometric_series\n\n\nprint(geometric_sum(100))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n):\n    return n * (n + 1) // 2\n\n\ndef main():\n    print(geometric_progression_series(1))\n    print(geometric_progression_series(2))\n    print(geometric_progression_series(3))\n    print(geometric_progression_series(4))\n    print(geometric_progression_series(5))\n    print(geometric_progression_series(6))\n    print(geometric_progression_series(7))\n    print(geometric_progression_series(8))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def geometric_progression_series(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**2\n    return sum\n\n\nn = int(input(\"Enter a number:\"))\nprint(geometric_progression_series(n))"
    },
    {
      "rank": 17,
      "score": 9.990685229831412,
      "candidate": "def geometric_series(n):\n\ts = 0\n\tfor i in range(1,n):\n\t\ts += i**2\n\treturn s\n\nprint(geometric_series(10))\n\n#Answer: 1342"
    },
    {
      "rank": 18,
      "score": 9.942885309162246,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 1\n    return n * geometric_progression(n - 1)\n\nprint(geometric_progression(3))"
    },
    {
      "rank": 19,
      "score": 9.924159625053749,
      "candidate": "import math\n\ndef geometric_progression(n):\n\tsum = 0\n\tfor i in range(1, n+1):\n\t\tsum += math.pow(i, math.floor(math.log(n)/math.log(i)))\n\treturn sum\n\n\nif __name__ == \"__main__\":\n\tprint(geometric_progression(10000))"
    },
    {
      "rank": 20,
      "score": 9.878910264071733,
      "candidate": "def sum_of_geometric_progression(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum = sum + i\n    return sum\n\n\nprint(sum_of_geometric_progression(10))"
    },
    {
      "rank": 21,
      "score": 9.877936659656912,
      "candidate": "def geometric_series(n):\n    if n == 0:\n        return 0\n    return n + geometric_series(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(geometric_series(5))"
    },
    {
      "rank": 22,
      "score": 9.858460491623452,
      "candidate": "def sum_geometric_progression(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\nprint(sum_geometric_progression(100))"
    },
    {
      "rank": 23,
      "score": 9.812840505817375,
      "candidate": "def geometric_progression_series(n):\n    return sum([1/(i+1) for i in range(n)])\n\nif __name__ == \"__main__\":\n    print(geometric_progression_series(1000000))"
    },
    {
      "rank": 24,
      "score": 9.724995158471465,
      "candidate": "def geometric_sum(n):\n    if n == 1:\n        return 1\n    return n*geometric_sum(n-1)\n\nprint(geometric_sum(5))"
    },
    {
      "rank": 25,
      "score": 9.654671627286408,
      "candidate": "def geometric_series(n):\n    return n ** (1 / 2) * (n ** (1 / 3) - n ** (1 / 5))\n\n\nprint(geometric_series(10))"
    },
    {
      "rank": 26,
      "score": 9.6295654715845,
      "candidate": "def geometric_progression_series(n):\n    \"\"\"\n    :param n:\n    :return:\n    \"\"\"\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression_series(100))"
    },
    {
      "rank": 27,
      "score": 9.370583536698913,
      "candidate": "def geometric_progression_sum(n):\n    \"\"\"\n    Time complexity: O(n^2)\n    Space complexity: O(n)\n    \"\"\"\n    if n == 1:\n        return 1\n\n    return n * geometric_progression_sum(n - 1)\n\n\nif __name__ == '__main__':\n    print(geometric_progression_sum(10))"
    },
    {
      "rank": 28,
      "score": 9.234050852198141,
      "candidate": "def geometric_progression_series(n, m):\n    \"\"\"\n    :type n: int\n    :type m: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    return n * geometric_progression_series(n - 1, m) + m * geometric_progression_series(n - 1, m - 1)\n\n\nprint(geometric_progression_series(10, 10))\nprint(geometric_progression_series(10, 1))"
    },
    {
      "rank": 29,
      "score": 9.226766272351448,
      "candidate": "def geometric_progression(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i\n    return sum\n\nn = int(input(\"Enter a number: \"))\nprint(geometric_progression(n))"
    },
    {
      "rank": 30,
      "score": 9.205959372648458,
      "candidate": "def geometric_progression(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression(5))"
    },
    {
      "rank": 31,
      "score": 9.183391466815202,
      "candidate": "def geometric_progression(n):\n    \"\"\"\n    :param n: int\n    :return: int\n    \"\"\"\n    sum_ = 0\n    for i in range(1, n + 1):\n        sum_ += i\n    return sum_\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression(10))"
    },
    {
      "rank": 32,
      "score": 9.122564458729856,
      "candidate": "def sum_geometric_progression_series(n):\n    sum_ = 0\n    i = 1\n    while i <= n:\n        sum_ += i\n        i += 1\n    return sum_\n\n\nprint(sum_geometric_progression_series(10))"
    },
    {
      "rank": 33,
      "score": 8.973005557553902,
      "candidate": "def geometric_progression(n):\n    \"\"\"\n    :param n: the number of terms in the series\n    :return: the sum of the geometric progression series\n    \"\"\"\n    if n <= 0:\n        return 0\n    return n * geometric_progression(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression(10))"
    },
    {
      "rank": 34,
      "score": 8.95994420569242,
      "candidate": "def geometric_series(n):\n    \"\"\"\n    n: int > 0\n    returns: int\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return n + geometric_series(n - 1)\n\nprint(geometric_series(10))"
    },
    {
      "rank": 35,
      "score": 8.946210893390457,
      "candidate": "def sum_of_geometric_progression(n):\n    return sum(range(1,n+1))\n\nprint(sum_of_geometric_progression(10))"
    },
    {
      "rank": 36,
      "score": 8.910084504002544,
      "candidate": "def geometric_progression_series(n):\n    \"\"\"\n    :param n: int\n    :return: int\n    \"\"\"\n    if n == 1:\n        return 1\n    return n * geometric_progression_series(n - 1)\n\n\nprint(geometric_progression_series(1))"
    },
    {
      "rank": 37,
      "score": 8.902145503295483,
      "candidate": "def geometric_progression(n):\n    return (n * (n + 1) * (2 * n + 1) * (3 * n + 2)) // 6\n\n\nprint(geometric_progression(7))"
    },
    {
      "rank": 38,
      "score": 8.855395696632057,
      "candidate": "def sum_geometric_progression(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i**i\n    return sum\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter number: \"))\n    print(sum_geometric_progression(n))"
    },
    {
      "rank": 39,
      "score": 8.8281618090209,
      "candidate": "def geometric_progression_series(n):\n    total = 0\n    for i in range(1, n+1):\n        total += i\n    return total\n\nprint(geometric_progression_series(100))"
    },
    {
      "rank": 40,
      "score": 8.76828871349479,
      "candidate": "def geometric_series(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nprint(geometric_series(10))"
    },
    {
      "rank": 41,
      "score": 8.715724466237427,
      "candidate": "def geometric_series(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return n + geometric_series(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(geometric_series(10))"
    },
    {
      "rank": 42,
      "score": 8.632293453617281,
      "candidate": "def sum_geometric_series(n):\n    if n <= 1:\n        return n\n    return n + sum_geometric_series(n - 1)\n\n\nprint(sum_geometric_series(10))"
    },
    {
      "rank": 43,
      "score": 8.625262456968262,
      "candidate": "def geometric_series(n):\n    \"\"\"\n    n: int\n    Returns sum of geometric progression series.\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return n * geometric_series(n - 1)\n\n\nprint(geometric_series(100))"
    },
    {
      "rank": 44,
      "score": 8.625142247198651,
      "candidate": "def geometric_series(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**i\n    return sum\n\ndef main():\n    n = int(input(\"Enter n: \"))\n    print(\"Sum of geometric progression series is: \", geometric_series(n))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 45,
      "score": 8.616253589228675,
      "candidate": "def geometric_progression_sum(n):\n    return sum([i**j for i in range(1, n+1) for j in range(1, n+1)])\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression_sum(10000))"
    },
    {
      "rank": 46,
      "score": 8.608819999274287,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 1\n    else:\n        return n * geometric_progression(n-1)\n\nprint(geometric_progression(10))"
    },
    {
      "rank": 47,
      "score": 8.606486429141842,
      "candidate": "def geometric_progression_series(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression_series(4))\nprint(geometric_progression_series(5))\nprint(geometric_progression_series(6))\nprint(geometric_progression_series(7))\nprint(geometric_progression_series(8))\nprint(geometric_progression_series(9))\nprint(geometric_progression_series(10))"
    },
    {
      "rank": 48,
      "score": 8.60156811074208,
      "candidate": "def sum_geometric_series(n):\n    s = 1\n    for i in range(1, n+1):\n        s *= i\n    return s\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of terms: \"))\n    print(sum_geometric_series(n))"
    },
    {
      "rank": 49,
      "score": 8.548876241946822,
      "candidate": "def geometric_progression_series(n):\n    return 1 + (n - 1) * (n - 2) * (n - 3) / 6\n\nif __name__ == \"__main__\":\n    print(geometric_progression_series(100))"
    },
    {
      "rank": 50,
      "score": 8.53012858503943,
      "candidate": "def geometric_progression_series(n):\n    \"\"\"\n    :param n: int\n    :return: int\n    \"\"\"\n    if n <= 1:\n        return n\n    return n * geometric_progression_series(n - 1)\n\n\nif __name__ == \"__main__\":\n    assert geometric_progression_series(5) == 120\n    assert geometric_progression_series(10) == 602\n    assert geometric_progression_series(100) == 3125"
    },
    {
      "rank": 51,
      "score": 8.499905739299377,
      "candidate": "def geometric_series(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    a = 1\n    b = 1\n    sum = 0\n    while b <= n:\n        sum += a\n        a = b\n        b = a + b\n    return sum\n\nprint(geometric_series(10))"
    },
    {
      "rank": 52,
      "score": 8.492983219118464,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 1\n    else:\n        return n * geometric_progression(n-1)\n\n\nprint(geometric_progression(5))"
    },
    {
      "rank": 53,
      "score": 8.490324832712195,
      "candidate": "def geometric_progression_series(n):\n    series = 1\n    for i in range(1, n+1):\n        series += i\n\n    return series\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression_series(3))\n    print(geometric_progression_series(7))\n    print(geometric_progression_series(10))"
    },
    {
      "rank": 54,
      "score": 8.437695832075478,
      "candidate": "def geometric_progression(n):\n    if n <= 1:\n        return n\n    else:\n        return n * geometric_progression(n-1)\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of terms: \"))\n    print(f\"The sum of the geometric progression series is {geometric_progression(n)}\")"
    },
    {
      "rank": 55,
      "score": 8.408439383654278,
      "candidate": "def geometric_progression_series(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i\n    return sum\n\nprint(geometric_progression_series(5))\nprint(geometric_progression_series(3))\nprint(geometric_progression_series(1))\nprint(geometric_progression_series(10))\nprint(geometric_progression_series(0))"
    },
    {
      "rank": 56,
      "score": 8.386620303250325,
      "candidate": "def geometric_progression(n):\n    \"\"\"\n    Returns the sum of geometric progression series.\n    \"\"\"\n    if n < 1:\n        raise ValueError('n must be greater than or equal to 1')\n\n    return sum([i**2 for i in range(1, n + 1)])\n\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n = int(input('Enter the number of terms: '))\n    print(f'The sum of geometric progression series is {geometric_progression(n)}')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 57,
      "score": 8.375312293858853,
      "candidate": "def geometric_progression(n):\n    \"\"\"\n    Return the sum of geometric progression series.\n    \"\"\"\n    series = []\n    for i in range(1, n + 1):\n        series.append(i)\n        series.append(series[-1] * i)\n    return sum(series)\n\n\nprint(geometric_progression(100))"
    },
    {
      "rank": 58,
      "score": 8.351614956112536,
      "candidate": "def geometric_progression(n, sum_of_series):\n    if n == 0:\n        return 0\n    else:\n        return n * geometric_progression(n-1, sum_of_series) + sum_of_series\n\nprint(geometric_progression(5, 0))\nprint(geometric_progression(10, 0))\nprint(geometric_progression(20, 0))"
    },
    {
      "rank": 59,
      "score": 8.331556294201176,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 0\n    else:\n        return n * geometric_progression(n - 1)\n\nif __name__ == '__main__':\n    print(geometric_progression(9))"
    },
    {
      "rank": 60,
      "score": 8.327375965969855,
      "candidate": "def geometric_progression(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression(5))"
    },
    {
      "rank": 61,
      "score": 8.327367757082776,
      "candidate": "def sum_geometric_progression_series(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(sum_geometric_progression_series(10))"
    },
    {
      "rank": 62,
      "score": 8.294940769211511,
      "candidate": "def geometric_progression(n):\n    return n * (n + 1) // 2\n\n\nprint(geometric_progression(5))"
    },
    {
      "rank": 63,
      "score": 8.2938925966498,
      "candidate": "def sum_geometric(n):\n    result = 0\n    for i in range(n):\n        result += i**2\n    return result\n\n\nif __name__ == \"__main__\":\n    print(sum_geometric(1000))"
    },
    {
      "rank": 64,
      "score": 8.289838256518838,
      "candidate": "def geometric_progression(n):\n    total = 0\n    for i in range(1, n + 1):\n        total += i\n    return total\n\n\ndef main():\n    print(geometric_progression(100))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 65,
      "score": 8.280613371145561,
      "candidate": "def geometric_progression(n):\n    return (n**2) + (n - 1)\n\n\nprint(geometric_progression(9))"
    },
    {
      "rank": 66,
      "score": 8.251903304236286,
      "candidate": "def geometric_progression_sum(n):\n    if n == 1:\n        return 1\n    else:\n        return n + geometric_progression_sum(n-1)\n\n\ndef main():\n    n = int(input())\n    print(geometric_progression_sum(n))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 67,
      "score": 8.248390367878367,
      "candidate": "def geometric_progression(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression(100))"
    },
    {
      "rank": 68,
      "score": 8.214125058964552,
      "candidate": "import math\n\n\ndef geometric_progression(n):\n    return sum(range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    assert geometric_progression(0) == 0\n    assert geometric_progression(1) == 1\n    assert geometric_progression(2) == 2\n    assert geometric_progression(3) == 6\n    assert geometric_progression(4) == 24\n    assert geometric_progression(5) == 60\n    assert geometric_progression(6) == 90\n    assert geometric_progression(7) == 120\n    assert geometric_progression(8) == 240\n    assert geometric_progression(9) == 480\n    assert geometric_progression(10) == 640\n    assert geometric_progression(11) == 720\n    assert geometric_progression(12) == 960\n    assert geometric_progression(13) == 1280\n    assert geometric_progression(14) == 1440\n    assert geometric_progression(15) == 1600\n    assert geometric_progression(16) == 1920\n    assert geometric_progression(17) == 2160\n    assert geometric_progression(18) == 2320\n    assert geometric_progression(19) == 2400\n    assert geometric_progression(20) == 2440\n    assert geometric_progression(21) == 2800\n    assert geometric_progression(22) == 3200\n    assert geometric_progression(23) == 3600\n    assert geometric_progression(24) == 4800\n    assert geometric_progression(25) == 4200\n    assert geometric_progression(26) == 4800\n    assert geometric_progression(27) == 6400\n    assert geometric_progression(28) == 6400\n    assert geometric_progression(29) == 7200\n    assert geometric_progression(30) == 7200\n    assert geometric_progression(31) == 7200\n    assert geometric_progression(32) == 6200\n    assert geometric_progression(33) == 6200\n    assert"
    },
    {
      "rank": 69,
      "score": 8.212735598038213,
      "candidate": "def geometric_sum(n):\n    if n < 2:\n        return n\n    return n + geometric_sum(n-1)\n\nprint(geometric_sum(5))"
    },
    {
      "rank": 70,
      "score": 8.2048573255218,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 1\n    else:\n        return n * geometric_progression(n-1)\n\nprint(geometric_progression(6))"
    },
    {
      "rank": 71,
      "score": 8.193565922652176,
      "candidate": "def sum_geometric_progression(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 3\n    else:\n        return n * sum_geometric_progression(n - 1) + sum_geometric_progression(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(sum_geometric_progression(5))"
    },
    {
      "rank": 72,
      "score": 8.185309335307622,
      "candidate": "def sum_geometric_progression_series(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    return n * sum_geometric_progression_series(n - 1)\n\n\nif __name__ == \"__main__\":\n    assert sum_geometric_progression_series(0) == 0\n    assert sum_geometric_progression_series(1) == 1\n    assert sum_geometric_progression_series(2) == 2\n    assert sum_geometric_progression_series(3) == 6\n    assert sum_geometric_progression_series(4) == 24\n    assert sum_geometric_progression_series(5) == 120\n    assert sum_geometric_progression_series(6) == 62880"
    },
    {
      "rank": 73,
      "score": 8.179564342560925,
      "candidate": "def sum_geometric_progression_series(n):\n    return sum([n**i for i in range(1, n+1)])\n\n\nprint(sum_geometric_progression_series(5))"
    },
    {
      "rank": 74,
      "score": 8.163300679823958,
      "candidate": "def sum_geometric(n):\n    sum = 0\n    i = 1\n    while i <= n:\n        sum += i\n        i += 1\n    return sum\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(sum_geometric(n))"
    },
    {
      "rank": 75,
      "score": 8.144125099485041,
      "candidate": "def geometric_sum(n, k):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % k == 0:\n            sum += i\n    return sum\n\n\nprint(geometric_sum(10, 4))"
    },
    {
      "rank": 76,
      "score": 8.143591138329747,
      "candidate": "def geometric_series(n):\n    return sum([(n * (n + 1)) / 2])\n\n\nprint(geometric_series(5))"
    },
    {
      "rank": 77,
      "score": 8.121884567141883,
      "candidate": "def geometric_progression_sum(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression_sum(100))"
    },
    {
      "rank": 78,
      "score": 8.105983444291466,
      "candidate": "def sum_geometric_progression_series(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    sum = 0\n    for i in range(n):\n        sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    print(sum_geometric_progression_series(10))"
    },
    {
      "rank": 79,
      "score": 8.093417897505768,
      "candidate": "def sum_of_geometric_progression_series(n):\n    return n*(n+1)/2\n\nn = int(input())\nprint(sum_of_geometric_progression_series(n))"
    },
    {
      "rank": 80,
      "score": 8.040197642997851,
      "candidate": "def geometric_progression_sum(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\ndef main():\n    print(geometric_progression_sum(6))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 81,
      "score": 8.024835682833125,
      "candidate": "def geometric_progression_series(n):\n    sum_series = 0\n    for i in range(1, n + 1):\n        sum_series += i\n    return sum_series\n\n\nprint(geometric_progression_series(100))"
    },
    {
      "rank": 82,
      "score": 7.990432406683839,
      "candidate": "def geometric_progression_series(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression_series(10))"
    },
    {
      "rank": 83,
      "score": 7.938028884277233,
      "candidate": "def geometric_progression(n):\n    if n == 1:\n        return 1\n    else:\n        return n * geometric_progression(n - 1)\n\n\ndef main():\n    print(geometric_progression(5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 84,
      "score": 7.8912769574414305,
      "candidate": "def geometric_series(n):\n    sum = 0\n    i = 1\n    while i <= n:\n        sum += i\n        i += 1\n    return sum\n\nprint(geometric_series(1000))"
    },
    {
      "rank": 85,
      "score": 7.868947655733293,
      "candidate": "def geometric_progression_series(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nprint(geometric_progression_series(10))"
    },
    {
      "rank": 86,
      "score": 7.84634113240411,
      "candidate": "def geometric_series(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    assert geometric_series(1) == 1\n    assert geometric_series(2) == 2\n    assert geometric_series(3) == 6\n    assert geometric_series(4) == 24"
    },
    {
      "rank": 87,
      "score": 7.834022619458933,
      "candidate": "def geometric_series(n):\n    return sum(x**n for x in range(1, n+1))\n\n\nif __name__ == '__main__':\n    print(geometric_series(5))"
    },
    {
      "rank": 88,
      "score": 7.738292593776799,
      "candidate": "import math\n\n\ndef geometric_progression(n):\n    return math.factorial(n) / (math.factorial(n - 1) * math.factorial(n - 2))\n\n\ndef sum_geometric_progression(n):\n    return geometric_progression(n) + geometric_progression(n + 1) + geometric_progression(n + 2)\n\n\nif __name__ == \"__main__\":\n    print(sum_geometric_progression(3))"
    },
    {
      "rank": 89,
      "score": 7.705183449260731,
      "candidate": "def geometric_progression_series(n):\n    series = [1]\n    for i in range(1, n+1):\n        series.append(series[i-1] + series[i])\n    return series[n]\n\n\nif __name__ == \"__main__\":\n    print(geometric_progression_series(4))"
    },
    {
      "rank": 90,
      "score": 7.5819855281879285,
      "candidate": "def geometric_progression(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i\n    return sum\n\nprint(geometric_progression(100))"
    },
    {
      "rank": 91,
      "score": 7.562924366763077,
      "candidate": "def geometric_series(n):\n    if n <= 1:\n        return n\n    return n * geometric_series(n - 1)\n\n\nprint(geometric_series(5))"
    },
    {
      "rank": 92,
      "score": 7.4878043221155455,
      "candidate": "def sum_geometric_progression(n, k):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** k\n    return sum\n\n\nif __name__ == '__main__':\n    print(sum_geometric_progression(100, 3))"
    },
    {
      "rank": 93,
      "score": 7.464609382504557,
      "candidate": "def geometric_series(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 4\n    else:\n        return n * geometric_series(n-1)\n\nprint(geometric_series(5))\nprint(geometric_series(7))\nprint(geometric_series(10))"
    },
    {
      "rank": 94,
      "score": 7.4506599871439985,
      "candidate": "def geometric_sum(n):\n    if n == 1:\n        return 1\n    return n * geometric_sum(n - 1)\n\nif __name__ == \"__main__\":\n    print(geometric_sum(4))"
    },
    {
      "rank": 95,
      "score": 7.134571892399572,
      "candidate": "def geometric_progression(n):\n    if n == 0:\n        return 0\n    else:\n        return n * geometric_progression(n - 1)\n\n\ndef main():\n    print(geometric_progression(5))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def geometric_progression(n):\n    # Write your code here\n    sum = 0\n    for i in range(n+1):\n        sum = sum + i\n    return sum\n\n\nprint(geometric_progression(6))"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "import math\n\n\ndef sum_geometric_series(n):\n    return math.factorial(n) / (math.factorial(n - 1) * math.factorial(n - 2))\n\n\nif __name__ == '__main__':\n    assert sum_geometric_series(0) == 1\n    assert sum_geometric_series(1) == 1\n    assert sum_geometric_series(2) == 6\n    assert sum_geometric_series(3) == 24\n    assert sum_geometric_series(4) == 120\n    assert sum_geometric_series(5) == 384\n    assert sum_geometric_series(6) == 5040\n    assert sum_geometric_series(7) == 16384\n    assert sum_geometric_series(8) == 1048576\n    assert sum_geometric_series(9) == 1048577\n    assert sum_geometric_series(10) == 52428800"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def geometric_progression_series(n):\n    return n * (n - 1)\n\n\nprint(geometric_progression_series(6))"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def geometric_progression(n):\n    # Write your code here.\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\nprint(geometric_progression(6))"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def geometric_progression_series(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30\n    if n == 32:\n        return 31\n    if n == 33:\n        return 32\n    if n == 34:\n        return 33\n    if n == 35:\n        return 34\n    if n == 36:\n        return 35\n    if n == 37:\n        return 36\n    if n == 38:\n        return 37\n    if n == 39:\n        return 38\n    if n == 40:\n        return 39\n    if n == 41:\n        return 40\n    if n == 42:\n        return 41\n    if n == 43:\n        return 42\n    if n == 44:\n        return 43\n    if n == 45"
    }
  ]
}