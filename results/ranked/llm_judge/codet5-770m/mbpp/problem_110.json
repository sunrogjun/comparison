{
  "timestamp": "2025-09-14T13:16:33.410728",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 110,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "class Solution:\n    def threeSum(self, nums: List[int]) -> List[int]:\n        nums.sort()\n        if len(nums) < 3:\n            return []\n        for i in range(len(nums) - 2):\n            for j in range(i + 1, len(nums) - 1):\n                if j > i + 1:\n                    return [nums[i], nums[j], nums[i + j]]"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    a = 0\n    b = len(arr) - 1\n    c = len(arr) - 2\n    while a < b and c >= a:\n        if arr[a] + arr[b] + arr[c] == 0:\n            return [a, b, c]\n        elif arr[a] + arr[b] + arr[c] < 0:\n            a += 1\n        else:\n            b -= 1\n        c -= 1\n    return None\n\n\nprint(triplet([-3, 0, 3, 3, 1, -1, -2, 2, -4]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    n = len(arr)\n    if n < 3:\n        return -1\n    i = 0\n    j = n - 2\n    k = n - 1\n    while i < j and k >= 0:\n        if arr[i] + arr[j] + arr[k] == 0:\n            return [arr[i], arr[j], arr[k]]\n        elif arr[i] + arr[j] + arr[k] > 0:\n            k -= 1\n        else:\n            j -= 1\n    return -1\n\n\nif __name__ == \"__main__\":\n    arr = [0, 0, 0]\n    print(triplet_sum(arr))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i == 0:\n            continue\n        elif arr[i] == arr[i-1]:\n            return [arr[i], arr[i-1], arr[i+1]]\n        elif arr[i] + arr[i+1] > arr[i+2]:\n            return [arr[i], arr[i+1], arr[i+2]]\n\n\nprint(find_triplet([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def threeSum(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: List[int]\n        \"\"\"\n        nums.sort()\n        for i in range(len(nums) - 2):\n            j, k = i + 1, len(nums) - 1\n            while j < k:\n                sum_ = nums[i] + nums[j] + nums[k]\n                if sum_ > 0:\n                    k -= 1\n                elif sum_ < 0:\n                    j += 1\n                else:\n                    return [nums[i], nums[j], nums[k]]\n        return None"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        left = i + 1\n        right = len(arr) - 1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] == 0:\n                return [i, left + 1, right + 1]\n            elif arr[i] + arr[left] + arr[right] > 0:\n                right -= 1\n            else:\n                left += 1\n    return [-1, -1, -1]\n\n\nprint(triplet_sum([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def triplet_with_sum(arr, n):\n    if len(arr) < 3:\n        return []\n\n    arr.sort()\n    for i in range(0, len(arr) - 2):\n        j = i + 1\n        k = len(arr) - 1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == n:\n                return [arr[i], arr[j], arr[k]]\n            elif arr[i] + arr[j] + arr[k] > n:\n                k -= 1\n            else:\n                j += 1\n    return []\n\n\nprint(triplet_with_sum([-1, 0, 1, 2, -1, -4], 3))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-1):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        j = i+1\n        k = len(arr)-1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == 2020:\n                return (arr[i], arr[j], arr[k])\n            elif arr[i] + arr[j] + arr[k] > 2020:\n                k -= 1\n            else:\n                j += 1\n    return None\n\n\nif __name__ == '__main__':\n    arr = [0, 0, 0]\n    print(find_triplet(arr))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i > 0 and arr[i] == arr[i-2]:\n            continue\n        if i < len(arr)-1 and arr[i] == arr[i+1]:\n            continue\n        if i < len(arr)-2 and arr[i] == arr[i+2]:\n            return (arr[i], arr[i+1], arr[i+2])\n\nif __name__ == '__main__':\n    arr = [1,2,3,4,5,6,7,8,9]\n    print(triplet(arr))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def triplet(arr, n):\n    arr = sorted(arr)\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            if arr[i] + arr[j] == n:\n                return [i, j, n]\n\n\nif __name__ == \"__main__\":\n    arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    first = 0\n    second = len(arr) - 1\n    while first < second:\n        if arr[first] + arr[second] < 0:\n            first += 1\n        elif arr[first] + arr[second] > 0:\n            second -= 1\n        else:\n            return [arr[first], arr[second], arr[first] + arr[second]]\n    return []\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([-1, -2, -3, -4, -5, -6, -7, -8, -9]))\n    print(find_triplet([-2, -3, -4, -5]))\n    print(find_triplet([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20]))\n    print(find_triplet([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20]))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def triplet_with_sum(arr, target):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if arr[i] + arr[i + 1] < target:\n            return [arr[i], arr[i + 1], target - arr[i]]\n    return [arr[-1], arr[-2], target]\n\n\nprint(triplet_with_sum([1, 2, 3, 4, 5], 6))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    l = 0\n    r = len(arr) - 1\n\n    while l < r:\n        if arr[l] + arr[r] > 0:\n            r -= 1\n        elif arr[l] + arr[r] < 0:\n            l += 1\n        else:\n            return arr[l], arr[r], arr[l] + arr[r]\n\n\nprint(triplet_with_sum([-2, 0, 1, 2, -1, -4]))"
    },
    {
      "rank": 14,
      "score": 9.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        if i > 0 and arr[i] + arr[i - 1] > arr[i - 2]:\n            return arr[i - 1], arr[i], arr[i - 2]\n\narr = [2, 4, 6, 8, 10]\nprint(find_triplet(arr))"
    },
    {
      "rank": 15,
      "score": 9.0,
      "candidate": "def triplet(nums):\n    min_sum = float('inf')\n    min_index = float('inf')\n    for i in range(len(nums)):\n        for j in range(len(nums)):\n            for k in range(len(nums)):\n                if i!= j and i!= k and j!= k:\n                    sum_of_triplet = nums[i] + nums[j] + nums[k]\n                    if sum_of_triplet < min_sum:\n                        min_sum = sum_of_triplet\n                        min_index = i\n    return min_index, min_index, min_index\n\n\nif __name__ == '__main__':\n    print(triplet([1, 4, 2, 6, 5, 7, 3, 8]))"
    },
    {
      "rank": 16,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i > 0 and arr[i] + arr[i-1] < arr[i]:\n            return arr[i], arr[i-1], arr[i-1] + arr[i]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6]\n    print(triplet_with_sum(arr))"
    },
    {
      "rank": 17,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 1):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        j = i + 1\n        k = len(arr) - 1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == 0:\n                return [arr[i], arr[j], arr[k]]\n            elif arr[i] + arr[j] + arr[k] > 0:\n                k -= 1\n            else:\n                j += 1\n    return None\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([-1, 0, 1, 2, -1, -2, 3, 4]))\n    print(find_triplet([-1, -1, -1]))\n    print(find_triplet([-1, -1, -1, -1, -1]))"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        left = i + 1\n        right = len(arr)-1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] == 0:\n                return arr[i], arr[left], arr[right]\n            elif arr[i] + arr[left] + arr[right] > 0:\n                right -= 1\n            else:\n                left += 1\n    return None\n\n\nif __name__ == \"__main__\":\n    print(triplet([-1, -2, 0, 2, 3, -1, -4]))\n    print(triplet([1, -2, -3, -4, 4, 5, -6]))\n    print(triplet([-1, -2, -3, -4, 4, 5, -6]))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        if i + 1 < len(arr) - 1 and arr[i] == arr[i + 1]:\n            continue\n        if i + 2 < len(arr) - 1 and arr[i] == arr[i + 2]:\n            continue\n        if arr[i] + arr[i + 1] + arr[i + 2] == arr[i + 1] + arr[i + 2]:\n            return [arr[i], arr[i + 1], arr[i + 2]]\n    return None\n\n\narr = [-1, 0, -2, 1, 2, -1, -2, -3, 4, 5, -1, -2, -3, 4, 5, -2, -3, 5, -4, -1, -2, -3, 4, -5, -2, -4, -5, -6, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7, -7,"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        else:\n            left = i + 1\n            right = n - 1\n            while left < right:\n                if arr[left] + arr[right] > arr[i]:\n                    right -= 1\n                else:\n                    left += 1\n            return arr[i], arr[left], arr[right]\n\n\nif __name__ == \"__main__\":\n    print(triplet_with_sum([-1, 0, 1, 2, -1, -3, 4]))\n    print(triplet_with_sum([-1, 0, 1, 2, -1, -3, 4, -2, -4]))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n\n    for i in range(0, len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n\n        j = i + 1\n        k = len(arr) - 1\n\n        while j < k:\n            if arr[i] + arr[j] + arr[k] < arr[i + j] + arr[k + 1]:\n                k -= 1\n            else:\n                j += 1\n\n        if arr[i] + arr[j] + arr[k] == arr[i + j] + arr[k + 1]:\n            return [arr[i], arr[j], arr[k]]\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([1, 0, -2, 3, -3]))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        else:\n            if arr[i] + arr[i+1] + arr[i+2] == arr[-1]:\n                return arr[i], arr[i+1], arr[i+2]\n\nprint(triplet_with_sum([-1, 2, -3, 4, -1, -3, 1, 2]))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def find_triplet_with_sum(arr, sum):\n    for i in range(len(arr)-2):\n        for j in range(i+1, len(arr)-1):\n            for k in range(j+1, len(arr)):\n                if arr[i] + arr[j] + arr[k] == sum:\n                    return [arr[i], arr[j], arr[k]]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(find_triplet_with_sum(arr, 10))\n    print(find_triplet_with_sum(arr, 15))\n    print(find_triplet_with_sum(arr, 20))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(0, len(arr) - 2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i + 1 < len(arr) - 2 and arr[i] == arr[i+1]:\n            continue\n        if arr[i] + arr[i+1] + arr[i+2] < arr[i+2]:\n            return arr[i], arr[i+1], arr[i+2]\n    return -1, -1, -1\n\n\nif __name__ == \"__main__\":\n    print(triplet([-1, 0, 1, 2, -1, -4]))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def triplet(arr, n):\n    arr.sort()\n    for i in range(n - 2):\n        left = i + 1\n        right = n - 1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] > 0:\n                right -= 1\n            elif arr[i] + arr[left] + arr[right] < 0:\n                left += 1\n            else:\n                return arr[i], arr[left], arr[right]\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [0, -1, 1, -2, 2, -3, 3, -4, 4]\n    n = len(arr)\n    print(triplet(arr, n))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef triplet(arr: List[int]) -> List[int]:\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        j = i + 1\n        k = len(arr) - 1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == 0:\n                return [arr[i], arr[j], arr[k]]\n            elif arr[i] + arr[j] + arr[k] > 0:\n                k -= 1\n            else:\n                j += 1\n    return [-1, -1, -1]\n\n\nif __name__ == \"__main__\":\n    print(triplet([-1, 0, -1, 0, -1, 1, 1, 1]))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        j = i + 1\n        k = len(arr) - 1\n        while j < k:\n            sum = arr[i] + arr[j] + arr[k]\n            if sum < 0:\n                k -= 1\n            elif sum > 0:\n                j += 1\n            else:\n                return [arr[i], arr[j], arr[k]]\n\nif __name__ == \"__main__\":\n    print(find_triplet([-2, -1, 0, 1, 2, -1, -4]))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 1):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        else:\n            if i == 0 or arr[i-1] == arr[i]:\n                if i == len(arr) - 1:\n                    return arr[i], arr[i], arr[i]\n                else:\n                    return arr[i], arr[i], arr[i-1]\n\n\narr = [0, 0, 0, 1, 1, 1, 2, 2, 2]\nprint(triplet_sum(arr))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    n = len(arr)\n    if n < 3:\n        return None\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if arr[i] + arr[j] + arr[k] == 2020:\n                    return [arr[i], arr[j], arr[k]]\n\nprint(find_triplet([1,-1,-2,-3,3,5,5,5,5,5]))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        j = i+1\n        k = len(arr)-1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == 0:\n                return [arr[i], arr[j], arr[k]]\n            elif arr[i] + arr[j] + arr[k] > 0:\n                k -= 1\n            else:\n                j += 1\n    return [-1, -1, -1]\n\n\nprint(triplet_with_sum([-1, -2, -3, -4, -5, -6]))\nprint(triplet_with_sum([-1, -2, -3, -4, -5, -6]))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    if len(arr) < 3:\n        return False\n\n    if sum(arr) < 3:\n        return False\n\n    arr.sort()\n\n    for i in range(0, len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n\n        j = i + 1\n        k = len(arr) - 1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == 3:\n                return [arr[i], arr[j], arr[k]]\n            elif arr[i] + arr[j] + arr[k] < 3:\n                j += 1\n            else:\n                k -= 1\n\n    return False\n\n\nprint(triplet_sum([-1, 2, 3, -3, 4, -5, -6, 6, -6, -7, -6, -8, -7, -9, -10]))\nprint(triplet_sum([-1, 2, 3, -3, 4, -5, -6, 6, -6, -7, -8, -7, -9, -10]))\nprint(triplet_sum([-1, 2, 3, -3, 4, -5, -6, 6, -6, -7, -8, -7, -9, -10]))\nprint(triplet_sum([-1, 2, -3, 4, -5, -6, 6, -6, -7, -8, -7, -9, -10]))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n-2):\n        left = i+1\n        right = n-1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] > 0:\n                right -= 1\n            elif arr[i] + arr[left] + arr[right] < 0:\n                left += 1\n            else:\n                return [arr[i], arr[left], arr[right]]\n    return []\n\n\nprint(triplet_with_sum([-1, -2, -3, -4, -5]))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i == 0 or arr[i-1] == arr[i]:\n            continue\n        if i > 0 and arr[i-1] == arr[i-2]:\n            return arr[i], arr[i-1], arr[i-2]\n    return None, None, None\n\n\nif __name__ == \"__main__\":\n    arr = [1, -1, -2, -3, 2, 3, -1, -4, -5]\n    print(triplet_sum(arr))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr = sorted(arr)\n    for i in range(len(arr)-2):\n        if i == 0:\n            continue\n        elif i == len(arr)-1:\n            return arr[i], arr[i+1], arr[i+2]\n        elif arr[i] + arr[i+1] + arr[i+2] == arr[i+1] + arr[i]:\n            return arr[i], arr[i+1], arr[i+2]\n\nprint(triplet_sum([-1,1,2,-3,4,5]))\nprint(triplet_sum([-1,2,-3,4,5,-6,7,-8,-9,10,11,12,13,14,15]))\nprint(triplet_sum([-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15]))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if arr[i] + arr[i+1] + arr[i+2] > 0:\n            return arr[i], arr[i+1], arr[i+2]\n\nif __name__ == \"__main__\":\n    arr = list(map(int, input(\"Enter the numbers: \").split()))\n    print(\"The triplet with sum of the given array is:\", find_triplet(arr))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    l = len(arr)\n    for i in range(l - 2):\n        if i == 0 or arr[i] == arr[i - 1]:\n            continue\n        if arr[i] + arr[i + 1] + arr[i + 2] < 0:\n            return arr[i], arr[i + 1], arr[i + 2]\n\n\nif __name__ == '__main__':\n    print(find_triplet([-1, 1, -2, -3, 4, -5, -6]))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n\n    for i in range(len(arr)):\n        if i == 0 or arr[i] > arr[i-1]:\n            break\n\n        left = i + 1\n        right = len(arr) - 1\n\n        while left < right:\n            if arr[left] + arr[right] < arr[i]:\n                left += 1\n            elif arr[left] + arr[right] > arr[i]:\n                right -= 1\n            else:\n                return arr[i], arr[left], arr[right]\n    return None\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 4, 5]\n    print(find_triplet(arr))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        else:\n            j = i + 1\n            k = len(arr) - 1\n            while j < k:\n                if arr[i] + arr[j] + arr[k] > 0:\n                    k -= 1\n                else:\n                    j += 1\n            if arr[i] + arr[j] + arr[k] == 0:\n                return arr[i], arr[j], arr[k]\n    return None\n\nprint(triplet([-4, -3, -2, -1, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def find_triplet(arr, target):\n    arr = sorted(arr)\n    for i in range(len(arr)-1):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if arr[i] + arr[i+1] < target:\n            return arr[i], arr[i+1], arr[i+2]\n    return -1, -1, -1\n\nif __name__ == \"__main__\":\n    print(find_triplet([-1,0,1,2,-1,-2,-3,4], 0))\n    print(find_triplet([-1,0,1,2,-1,-2,-3,4], 3))\n    print(find_triplet([-1,0,1,2,-1,-2,-3,4], 8))\n    print(find_triplet([-1,0,1,2,-1,-2,-3,4], 2))\n    print(find_triplet([-1,0,1,2,-1,-2,-3,4], 4))\n    print(find_triplet([-1,0,1,2,-1,-2,-3,4], 5))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    if len(arr) < 3:\n        return False\n    i, j, k = 0, 0, 0\n    while i < len(arr) - 1:\n        if arr[i] + arr[j] + arr[k] > 0:\n            k += 1\n        else:\n            j += 1\n        i += 1\n    return i == len(arr) - 1 and j == len(arr) - 1 and k == len(arr) - 1\n\n\nif __name__ == '__main__':\n    print(find_triplet([-1, 2, -3, 4]))\n    print(find_triplet([0, -3, 2, 1]))\n    print(find_triplet([-1, 0, 1, 2]))\n    print(find_triplet([1, 0, 2, -1]))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr, n):\n    arr.sort()\n    for i in range(n):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        j, k = i + 1, n - 1\n        while j < k:\n            sum_arr = arr[i] + arr[j] + arr[k]\n            if sum_arr < 0:\n                j += 1\n            elif sum_arr > 0:\n                k -= 1\n            else:\n                return arr[i], arr[j], arr[k]\n\n\nif __name__ == \"__main__\":\n    print(triplet_with_sum([-1, 2, -3, 4, -5, 6], 6))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n):\n                if arr[i]+arr[j]+arr[k] == 2020:\n                    return (arr[i], arr[j], arr[k])\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n-1):\n        j = i+1\n        k = n-1\n        while j<k:\n            if arr[i] + arr[j] + arr[k] > 0:\n                k -= 1\n            elif arr[i] + arr[j] + arr[k] < 0:\n                j += 1\n            else:\n                return [arr[i], arr[j], arr[k]]\n\narr = [0, -1, -2, 0, 1, 2, -1, -3, 4, -2, -4]\nprint(triplet(arr))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def find_triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i == 0 or arr[i] == arr[i - 1]:\n            continue\n        if arr[i] + arr[i + 1] > arr[i + 2]:\n            return [arr[i], arr[i + 1], arr[i + 2]]\n    return False\n\n\nif __name__ == \"__main__\":\n    print(find_triplet_sum([-2, -1, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        j = i + 1\n        k = len(arr) - 1\n        while j < k:\n            sum = arr[i] + arr[j] + arr[k]\n            if sum < 0:\n                k -= 1\n            elif sum > 0:\n                j += 1\n            else:\n                return arr[i], arr[j], arr[k]\n    return None\n\n\nif __name__ == \"__main__\":\n    print(triplet_with_sum([-1, 0, 1, 2, -1, -4]))\n    print(triplet_with_sum([0, 1, 2, -1, -4]))\n    print(triplet_with_sum([0, -1, -1, -4]))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr = sorted(arr)\n    for i in range(len(arr) - 1):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        elif i > 0 and arr[i] + arr[i - 1] > arr[i]:\n            break\n        else:\n            return arr[i], arr[i - 1], arr[i + 1]\n\n\nprint(triplet_with_sum([-1, 0, 1, 2, -1, -4]))\nprint(triplet_with_sum([0, -1, -4, -3, -1, 0, 1]))\nprint(triplet_with_sum([-1, -2, -3, -4, -5]))\nprint(triplet_with_sum([-1, -2, -3, -4, -5, -6]))\nprint(triplet_with_sum([-1, -2, -3, -4, -5, -6, -7, -8, -9]))\nprint(triplet_with_sum([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]))\nprint(triplet_with_sum([-1, -2, -3, -4, -5, -6, -7, -8, -9]))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i == 0 or arr[i] == arr[i-1]:\n            continue\n        j = i + 1\n        k = len(arr)-1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] < arr[0]:\n                j += 1\n            elif arr[i] + arr[j] + arr[k] > arr[0]:\n                k -= 1\n            else:\n                return arr[i], arr[j], arr[k]\n    return None\n\n\nif __name__ == \"__main__\":\n    print(triplet_sum([-1, 0, 1, 2, -1, -4, 3, -2, -5, 4, -3, -5, 6]))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(0, len(arr) - 2):\n        if i == 0 or arr[i] > arr[i - 1]:\n            j = i + 1\n            k = len(arr) - 1\n            while j < k:\n                if arr[i] + arr[j] + arr[k] == 0:\n                    return arr[i], arr[j], arr[k]\n                elif arr[i] + arr[j] + arr[k] > 0:\n                    k -= 1\n                else:\n                    j += 1\n    return None\n\n\nprint(triplet([-2, 1, 0, 2, -3]))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    if len(arr) < 3:\n        return None\n    left = 0\n    right = len(arr) - 1\n    while left < right:\n        if arr[left] + arr[right] > 0:\n            right -= 1\n        elif arr[left] + arr[right] < 0:\n            left += 1\n        else:\n            return arr[left], arr[right], arr[left] + arr[right]\n    return None\n\n\nif __name__ == \"__main__\":\n    print(triplet_sum([-1, -2, -3, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def find_triplet_with_sum(array):\n    for i in range(len(array)):\n        for j in range(len(array)):\n            if i > j:\n                if array[i] + array[j] > array[i] + array[j+1]:\n                    return [array[i], array[j], array[i] + array[j+1]]\n\n\nif __name__ == \"__main__\":\n    print(find_triplet_with_sum([-2, 3, -2, -1, 4, 2]))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    l = len(arr) - 1\n    m = 0\n    r = 0\n    while m < l - 2:\n        if arr[m] + arr[m + 1] + arr[m + 2] < 0:\n            m += 1\n        else:\n            r = m + 1\n            break\n    return r\n\n\narr = [3, -2, 4, -1, 0, 5]\nprint(triplet(arr))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(0, len(arr) - 2):\n        if i == 0 or arr[i] == arr[i - 1]:\n            continue\n        else:\n            return arr[i], arr[i + 1], arr[i + 2]\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6]\n    print(triplet_with_sum(arr))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(0, len(arr) - 2):\n        left = i + 1\n        right = len(arr) - 1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] == 2020:\n                return (arr[i], arr[left], arr[right])\n            elif arr[i] + arr[left] + arr[right] < 2020:\n                left += 1\n            else:\n                right -= 1\n    return None\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([-1, -3, -3, -2, -1, 2, 3, 4, 4, 5, 5, 5, 5]))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    i = 0\n    j = len(arr) - 1\n    k = len(arr) - 1\n    while i < j and k > 0:\n        if arr[i] + arr[j] + arr[k] == 0:\n            return arr[i], arr[j], arr[k]\n        elif arr[i] + arr[j] + arr[k] > 0:\n            k -= 1\n        else:\n            i += 1\n    return None\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([-2, 2, -3, 4, -1, 5, -1, -4, -5, -6, -7]))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        for j in range(i+1, len(arr)-1):\n            for k in range(j+1, len(arr)):\n                if arr[i] + arr[j] + arr[k] == 2020:\n                    return arr[i], arr[j], arr[k]\n\nprint(triplet([1,2,3,4,5,6,7,8,9]))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    left = 0\n    right = len(arr) - 1\n    while left < right:\n        if arr[left] + arr[right] < arr[0]:\n            left += 1\n        elif arr[left] + arr[right] > arr[0]:\n            right -= 1\n        else:\n            return arr[left], arr[right]\n    return None\n\nprint(triplet([0, 0, 0]))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n-2):\n        for j in range(i+1, n-1):\n            for k in range(j+1, n-1):\n                if arr[i] + arr[j] + arr[k] == 2020:\n                    return arr[i], arr[j], arr[k]\n\n\narr = [1, 2, 3, 4, 5, 6, 7]\nprint(triplet(arr))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    l = 0\n    r = len(arr) - 1\n    while l < r:\n        if arr[l] + arr[r] == 0:\n            return [arr[l], arr[r], arr[l] + arr[r]]\n        elif arr[l] + arr[r] < 0:\n            l += 1\n        else:\n            r -= 1\n\nprint(triplet([0, 1, -1, -2, 2, 3, 4, 5]))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    l = len(arr)-2\n    for i in range(l):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        left = i+1\n        right = len(arr)-1\n        while left < right:\n            if arr[left] + arr[right] == arr[i] + arr[l] + arr[r]:\n                return [arr[i], arr[l], arr[r]]\n            elif arr[left] + arr[right] < arr[i] + arr[l]:\n                left += 1\n            else:\n                right -= 1\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [2, 7, 11, 15]\n    print(triplet_sum(arr))\n    arr = [3, 6, -2, 4, -1, 5]\n    print(triplet_sum(arr))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        left = i+1\n        right = len(arr)-1\n        while left < right:\n            if arr[left] + arr[right] < arr[i] + arr[right+1]:\n                right -= 1\n            else:\n                return arr[i], arr[left], arr[right]\n                break\n        left += 1\n    return None\n\n\nif __name__ == '__main__':\n    print(find_triplet([1, 3, 2, 4, 5]))\n    print(find_triplet([-1, 0, 2, 3, -1]))\n    print(find_triplet([-1, -1, -1, -1, -1]))\n    print(find_triplet([-2, -2, -2, -2, -2, -2, -2, -2]))\n    print(find_triplet([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2]))\n    print(find_triplet([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]))\n    print(find_triplet([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n-1):\n        j, k = i+1, n-1\n        while j<k:\n            if arr[i] + arr[j] + arr[k] == 0:\n                return [arr[i], arr[j], arr[k]]\n            elif arr[i] + arr[j] + arr[k] > 0:\n                k -= 1\n            else:\n                j += 1\n    return []\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7]\n    print(triplet_sum(arr))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i + 1 < len(arr) - 2 and arr[i] == arr[i+1]:\n            continue\n        if i + 2 < len(arr) - 2 and arr[i] == arr[i+2]:\n            return arr[i], arr[i+1], arr[i+2]\n\n\nprint(find_triplet([2, 2, 4]))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    if not arr:\n        return None\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        for j in range(i+1, len(arr)-1):\n            if j > i+1 and arr[j] == arr[j-1]:\n                continue\n            if arr[i] + arr[j] > arr[i+1] + arr[j+1]:\n                return (arr[i], arr[j], arr[i+1] + arr[j+1])\n    return None\n\n\nif __name__ == \"__main__\":\n    print(triplet([1, -2, 3, -4]))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if arr[i] + arr[i+1] + arr[i+2] > 0:\n            return arr[i], arr[i+1], arr[i+2]\n\n\nif __name__ == \"__main__\":\n    arr = [0, -1, 2, -3, -4, -5, -6, -7, -8, -9, -10, -11]\n    print(triplet_sum(arr))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    n = len(arr)\n    left = 0\n    right = n - 1\n    while left < right:\n        if arr[left] + arr[right] > 0:\n            right -= 1\n        elif arr[left] + arr[right] < 0:\n            left += 1\n        else:\n            return arr[left], arr[right], arr[left] + arr[right]\n    return None\n\nif __name__ == \"__main__\":\n    arr = [-2, -1, 0, 2, 3, 4]\n    print(triplet(arr))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i == 0 or arr[i] == arr[i-1]:\n            continue\n        left = i + 1\n        right = len(arr) - 1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] == arr[i+1] + arr[right-1]:\n                return [arr[i], arr[left], arr[right]]\n            elif arr[i] + arr[left] + arr[right] > arr[i+1] + arr[right-1]:\n                right -= 1\n            elif arr[i] + arr[left] + arr[right] < arr[i+1] + arr[right-1]:\n                left += 1\n    return False\n\n\nprint(find_triplet([2, 3, 1, 4, 7]))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr = sorted(arr)\n    for i in range(len(arr) - 1):\n        for j in range(i + 1, len(arr)):\n            if arr[i] + arr[j] > 0:\n                break\n            elif arr[i] + arr[j] == 0:\n                return arr[i], arr[j], arr[i] + arr[j]\n\n\nif __name__ == \"__main__\":\n    print(triplet([0, 0, 1, 1, 2]))\n    print(triplet([-1, -1, -1, -1, -1, -1, -1]))\n    print(triplet([-1, -1, -1, -1, -1, -1, -1]))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    # Write your code here\n    arr.sort()\n    m = 0\n    n = len(arr) - 1\n    for i in range(0, n - 1):\n        if m == 0:\n            a = arr[i]\n            b = arr[i + 1]\n            c = arr[i + 2]\n            if a + b + c == arr[n - 1]:\n                return [a, b, c]\n        if m == 1:\n            a = arr[i]\n            b = arr[i + 1]\n            c = arr[i + 2]\n            if a + b + c == arr[n - 2]:\n                return [a, b, c]\n        if m == 2:\n            a = arr[i]\n            b = arr[i + 1]\n            c = arr[i + 2]\n            if a + b + c == arr[n - 1]:\n                return [a, b, c]\n        m += 1"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "from typing import List\n\n\ndef triplet_with_sum(nums: List[int]) -> int:\n    nums.sort()\n    left = 0\n    right = len(nums) - 1\n    while left < right:\n        if nums[left] + nums[right] == 0:\n            return nums[left], nums[right], nums[left] + nums[right]\n        elif nums[left] + nums[right] > 0:\n            right -= 1\n        else:\n            left += 1\n\n\nif __name__ == \"__main__\":\n    nums = [0, 0, 0, 0, 0, 0, 0]\n    print(triplet_with_sum(nums))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        left = i+1\n        right = n-1\n        while left < right:\n            sum = arr[i] + arr[left] + arr[right]\n            if sum < 0:\n                left += 1\n            elif sum > 0:\n                right -= 1\n            else:\n                return arr[i], arr[left], arr[right]\n    return -1, -1, -1\n\nprint(triplet_with_sum([-1,-2,-3,-4,-5,-6,-7,-8,-9]))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    n = len(arr)\n    if n < 3:\n        return False\n    for i in range(n - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        j = i + 1\n        k = n - 1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] == arr[n - 2]:\n                return [arr[i], arr[j], arr[k]]\n            j += 1\n            k -= 1\n    return False\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([-1, -1, -1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3]))\n    print(find_triplet([-1, -1, -1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3]))\n    print(find_triplet([-1, -1, -1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3]))\n    print(find_triplet([-1, -1, -1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3]))\n    print(find_triplet([-1, -1, -1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3]))\n    print(find_triplet([-1, -1, -1, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i > 0 and arr[i] == arr[i-2]:\n            continue\n        j = i+1\n        k = len(arr)-1\n        while j < k:\n            if arr[i] + arr[j] + arr[k] < 0:\n                j += 1\n            elif arr[i] + arr[j] + arr[k] > 0:\n                k -= 1\n            else:\n                return [arr[i], arr[j], arr[k]]\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [1, 3, -1, 2, -4]\n    print(triplet_with_sum(arr))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        if i > 0 and arr[i] == arr[i - 2]:\n            continue\n        if i > 0 and arr[i] == arr[i - 3]:\n            continue\n        if i > 0 and arr[i] == arr[i - 4]:\n            continue\n        if i > 0 and arr[i] == arr[i - 5]:\n            continue\n        return arr[i], arr[i + 1], arr[i + 2]\n\n\nif __name__ == \"__main__\":\n    print(triplet_with_sum([-1, -2, -3, -4, -5, -6, -7, -8, -9]))\n    print(triplet_with_sum([0, 0, 0]))\n    print(triplet_with_sum([-1, -2, -3, -4]))\n    print(triplet_with_sum([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]))\n    print(triplet_with_sum([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11]))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    n = len(arr)\n    if n < 3:\n        return False\n    arr.sort()\n    left = 0\n    right = n - 1\n    while left < right:\n        sum = arr[left] + arr[right]\n        if sum < 0:\n            left += 1\n        elif sum > 0:\n            right -= 1\n        else:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    assert triplet_sum([-1, -2, -3, -4, -5])\n    assert triplet_sum([0, 1, 2, 3, 4])\n    assert triplet_sum([-1, -2, -3, -4, -5, -6, -7])\n    assert triplet_sum([0, -1, -2, -3, -4, -5, -6, -7])\n    assert triplet_sum([])\n    assert triplet_sum([0])\n    assert triplet_sum([0, 0])\n    assert triplet_sum([-1, -2, -3, -4, -5])\n    assert triplet_sum([-1, -2, -3, -4, -5, -6, -7])\n    assert triplet_sum([])\n    assert triplet_sum([0, 0, 0, 0])"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    # find the smallest element\n    min_elem = min(arr)\n\n    # find the largest element\n    max_elem = max(arr)\n\n    # find the triplet\n    triplet = (min_elem, max_elem, max_elem - min_elem)\n\n    return triplet\n\n# Driver program\narr = [1, -1, 1, -1, 2, 2, 2, 2]\nprint(find_triplet(arr))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr, n):\n    arr.sort()\n    for i in range(n-1):\n        if i == 0 or arr[i] > arr[i-1]:\n            left = i + 1\n            right = n-1\n            while left < right:\n                if arr[left] + arr[right] == n:\n                    return [arr[i], arr[left], arr[right]]\n                elif arr[left] + arr[right] > n:\n                    right -= 1\n                else:\n                    left += 1\n    return [-1, -1, -1]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6]\n    n = 6\n    print(triplet_with_sum(arr, n))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(0, len(arr)-2):\n        if arr[i] + arr[i+1] + arr[i+2] == 0:\n            return arr[i], arr[i+1], arr[i+2]\n\n\nprint(find_triplet([-1, 0, 1, 2, -1, -4]))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i == 0:\n            if arr[i] == arr[i + 1]:\n                return arr[i], arr[i + 1], arr[i + 2]\n        elif i == len(arr) - 1:\n            if arr[i] == arr[i - 1]:\n                return arr[i], arr[i - 1], arr[i - 2]\n        else:\n            if arr[i] + arr[i + 1] + arr[i - 1] == arr[i + 2]:\n                return arr[i], arr[i + 1], arr[i - 2]"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    l1 = 0\n    l2 = len(arr) - 1\n    while l1 < l2:\n        sum = arr[l1] + arr[l2]\n        if sum > 0:\n            l2 -= 1\n        elif sum < 0:\n            l1 += 1\n        else:\n            return arr[l1], arr[l2]\n    return None, None\n\n\nprint(triplet_with_sum([-1, -2, -3, -4, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    low = 0\n    high = len(arr) - 1\n\n    while low < high:\n        curr_sum = arr[low] + arr[high]\n        if curr_sum == 0:\n            return [arr[low], arr[high], curr_sum]\n        elif curr_sum < 0:\n            low += 1\n        else:\n            high -= 1\n\n\narr = [1, -2, 0, 2, -3, 4, -5, -7]\nprint(find_triplet(arr))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    if len(arr) < 3:\n        return -1\n    for i in range(len(arr) - 1):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        if i + 1 < len(arr) - 1 and arr[i] == arr[i + 1]:\n            continue\n        if arr[i] + arr[i + 1] + arr[i + 2] < arr[i + 1] + arr[i + 2]:\n            return arr[i], arr[i + 1], arr[i + 2]\n    return -1\n\nprint(find_triplet([-1, 0, 1, 2, -1, -4, 3]))\nprint(find_triplet([-1, -4, -1, -3, 1, 1, 4, 4, 4]))\nprint(find_triplet([-1, -2, -1, -3, 2, 2, 3, 3]))\nprint(find_triplet([-1, -2, -1, -3, 2, 2, 3, 3, 3, 3, 3, 4]))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i > 0 and arr[i] == arr[i-1] + arr[i+1]:\n            return arr[i], arr[i-1], arr[i+1]\n\nprint(triplet([0,0,0]))\nprint(triplet([2,0,0,2]))\nprint(triplet([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def triplet_sum(arr, n):\n    arr.sort()\n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if arr[i] + arr[j] == n:\n                return [arr[i], arr[j], n]\n\n    return [-1, -1, -1]\n\n\nif __name__ == \"__main__\":\n    arr = [4, -1, -1, 1, 1, 2, 2, -1]\n    n = len(arr)\n    print(triplet_sum(arr, n))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        for j in range(i + 1, n - 1):\n            if j > i + 1:\n                break\n            if arr[i] + arr[j] == arr[i + j]:\n                return arr[i], arr[j], arr[i + j]\n    return None\n\n\nprint(triplet_sum([-4, -3, -2, 1, 2, 3, 4]))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr):\n    arr.sort()\n    for i in range(len(arr) - 1):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        for j in range(i + 1, len(arr)):\n            if j > i + 1 and arr[j] == arr[j - 1]:\n                continue\n            if arr[i] + arr[j] == arr[i + j]:\n                return arr[i], arr[j], arr[i + j]\n\n\narr = [3, 2, 4, 1, 5]\nprint(triplet_with_sum(arr))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        left = i + 1\n        right = len(arr) - 1\n        while left < right:\n            if arr[left] + arr[right] == arr[i] + arr[left] + arr[right]:\n                return [arr[i], arr[left], arr[right]]\n            elif arr[left] + arr[right] > arr[i] + arr[left] + arr[right]:\n                right -= 1\n            else:\n                left += 1\n    return []\n\n\nif __name__ == \"__main__\":\n    print(triplet([-1, -2, 0, 1, 2, 3, -4, -5]))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    n = len(arr)\n    left = 0\n    right = n - 1\n    while left < right:\n        sum_ = arr[left] + arr[right]\n        if sum_ < 0:\n            right -= 1\n        elif sum_ > 0:\n            left += 1\n        else:\n            return arr[left], arr[right]\n    return -1, -1\n\n\nif __name__ == \"__main__\":\n    print(find_triplet([-1, -2, -3, -4, -5]))\n    print(find_triplet([-1, -2, -3, -4, -5, -6]))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr)-1):\n        left = i + 1\n        right = len(arr)-1\n        while left < right:\n            if arr[i] + arr[left] + arr[right] == 3:\n                return [arr[i], arr[left], arr[right]]\n            elif arr[i] + arr[left] + arr[right] < 3:\n                left += 1\n            else:\n                right -= 1\n\n\nprint(find_triplet([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def triplet_with_sum(arr, n):\n    arr.sort()\n    for i in range(n-1):\n        for j in range(i+1,n):\n            k = n-j-1\n            if arr[i] + arr[j] + arr[k] == n:\n                return [i, j, k]\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4]\n    print(triplet_with_sum(arr, 3))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    left = 0\n    right = len(arr) - 1\n    while left < right:\n        if arr[left] + arr[right] == 0:\n            return arr[left], arr[right]\n        elif arr[left] + arr[right] > 0:\n            right -= 1\n        else:\n            left += 1\n    return None\n\n\nif __name__ == '__main__':\n    assert triplet_sum([2, 2, 2]) == (0, 0)\n    assert triplet_sum([-2, -2, -2, -2]) == (2, 2)\n    assert triplet_sum([-2, -2, -2, -2, -2]) == (3, 3)\n    assert triplet_sum([-1, 0, 0, 0]) == (1, 0)"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n\n    for i in range(len(arr)):\n        if i == 0 or i == len(arr) - 1:\n            if arr[i] + arr[i - 1] > arr[i + 1]:\n                return [arr[i], arr[i - 1], arr[i + 1]]\n        else:\n            if arr[i] + arr[i - 1] > arr[i + 1] + arr[i + 2]:\n                return [arr[i], arr[i - 1], arr[i + 2]]\n\n\nprint(find_triplet([-1, 0, 1, 2, 3, -1, -2, -3, 4, 5]))"
    },
    {
      "rank": 92,
      "score": 7.0,
      "candidate": "def triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i-1]:\n            continue\n        if i > 0 and arr[i] + arr[i+1] > arr[i+2]:\n            return arr[i], arr[i+1], arr[i+2]\n\narr = [2, 3, 4, 5, -1]\nprint(triplet(arr))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        if i > 0 and arr[i] == arr[i - 2]:\n            continue\n        if i > 0 and arr[i] == arr[i - 1] + arr[i - 2]:\n            return arr[i], arr[i - 1], arr[i - 2]\n\n\nprint(find_triplet([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def triplet_with_sum(arr, n):\n    arr.sort()\n    for i in range(n - 2):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        elif i > 0 and arr[i] + arr[i + 1] == arr[i + 2]:\n            return arr[i], arr[i + 1], arr[i + 2]\n\n    return -1, -1, -1\n\n\nprint(triplet_with_sum([-1, -1, -1], 3))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    i = 0\n    j = len(arr) - 1\n    k = len(arr) - 1\n    while i < j and k > 0:\n        if arr[i] + arr[j] + arr[k] > 0:\n            k -= 1\n        elif arr[i] + arr[j] + arr[k] < 0:\n            i += 1\n        else:\n            return arr[i], arr[j], arr[k]\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7]\n    print(find_triplet(arr))\n    arr = [-1, -2, -3, -4, -5, -6, -7]\n    print(find_triplet(arr))\n    arr = [-1, -2, -3, -4, -5, -6, -7, -8]\n    print(find_triplet(arr))\n    arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(find_triplet(arr))\n    arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n    print(find_triplet(arr))\n    arr = [-1, -2, -3"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def find_triplet(arr):\n    if len(arr) < 3:\n        return False\n    arr.sort()\n    for i in range(len(arr)-2):\n        for j in range(i+1, len(arr)-1):\n            for k in range(j+1, len(arr)):\n                if arr[i] + arr[j] + arr[k] == arr[i]+arr[j]+arr[k]:\n                    return [arr[i], arr[j], arr[k]]\n    return False\n\n\nprint(find_triplet([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def triplet_sum(arr):\n    arr.sort()\n    if arr[0] + arr[1] + arr[2] > 0:\n        return 0\n    elif arr[0] + arr[1] + arr[2] == 0:\n        return 0\n    elif arr[0] + arr[1] > 0:\n        return arr[0] + arr[1] + arr[2]\n    else:\n        return arr[0] + arr[1] - arr[2]\n\n\nif __name__ == '__main__':\n    arr = [0, 0, 0]\n    print(triplet_sum(arr))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def find_triplet(arr):\n    for i in range(len(arr) - 2):\n        for j in range(i + 1, len(arr) - 1):\n            for k in range(j + 1, len(arr)):\n                if (arr[i] + arr[j] + arr[k]) == 2020:\n                    return [arr[i], arr[j], arr[k]]\n\n\nprint(find_triplet([1, 3, 2, 4]))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def triplet(arr, target):\n    n = len(arr)\n    left = 0\n    right = n - 1\n    while left < right:\n        if arr[left] + arr[right] == target:\n            return [arr[left], arr[right]]\n        elif arr[left] + arr[right] > target:\n            right -= 1\n        else:\n            left += 1\n    return [-1, -1]\n\n\narr = [-1, -1, 0, 1, 2, 3, 4]\ntarget = 5\nprint(triplet(arr, target))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def find_triplet(arr):\n    arr.sort()\n    for i in range(len(arr) - 1):\n        if i > 0 and arr[i] == arr[i - 1]:\n            continue\n        for j in range(i + 1, len(arr)):\n            if j > i + 1 and arr[j] == arr[j - 1]:\n                continue\n            if arr[i] + arr[j] < arr[i + j]:\n                return arr[i], arr[j], arr[i + j]\n\n\nif __name__ == \"__main__\":\n    assert find_triplet([0, 0, 0]) == (0, 0, 0)\n    assert find_triplet([1, 2, 3]) == (1, 2, 3)\n    assert find_triplet([1, -1, -1]) == (-1, -1, -1)\n    assert find_triplet([-1, -1, -1]) == (-1, -1, -1)"
    }
  ]
}