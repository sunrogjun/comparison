{
  "timestamp": "2025-09-14T14:52:37.292217",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 328,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def find_max_divisor(a, b):\n    if a > b:\n        return a\n    elif a == b:\n        return b\n    else:\n        return b\n\n\nprint(find_max_divisor(4, 7))\nprint(find_max_divisor(3, 2))\nprint(find_max_divisor(3, 5))\nprint(find_max_divisor(4, 6))\nprint(find_max_divisor(6, 7))\nprint(find_max_divisor(7, 4))\nprint(find_max_divisor(6, 5))\nprint(find_max_divisor(3, 2))\nprint(find_max_divisor(3, 5))\nprint(find_max_divisor(3, 6))\nprint(find_max_divisor(6, 7))\nprint(find_max_divisor(7, 4))\nprint(find_max_divisor(4, 6))\nprint(find_max_divisor(6, 5))\nprint(find_max_divisor(3, 2))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return a\n    else:\n        return max(max_divisor(a, b//a), max_divisor(b, a//b))\n\nprint(max_divisor(1, 2))\nprint(max_divisor(1, 3))\nprint(max_divisor(2, 3))\nprint(max_divisor(4, 5))\nprint(max_divisor(5, 6))\nprint(max_divisor(7, 10))\nprint(max_divisor(8, 10))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def max_occuring_divisor(a, b):\n    if a > b:\n        return 1\n    else:\n        return 0\n\nprint(max_occuring_divisor(5, 6))\nprint(max_occuring_divisor(5, 8))\nprint(max_occuring_divisor(1, 1))\nprint(max_occuring_divisor(2, 5))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def max_divisor(a,b):\n    if a<b:\n        return 0\n    else:\n        return 1\n\nprint(max_divisor(10,20))\nprint(max_divisor(5,10))\nprint(max_divisor(7,5))\nprint(max_divisor(2,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10))\nprint(max_divisor(5,10"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def max_divisor(x,y):\n    if y>x:\n        return 0\n    else:\n        return 1\n\nprint(max_divisor(2,5))\nprint(max_divisor(2,8))\nprint(max_divisor(2,6))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def find_max_divisor(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a <= 0 or b <= 0:\n        return -1\n    return max(a, b)\n\n\ndef main():\n    print(find_max_divisor(1, 1))\n    print(find_max_divisor(2, 3))\n    print(find_max_divisor(6, 2))\n    print(find_max_divisor(3, 3))\n    print(find_max_divisor(3, 4))\n    print(find_max_divisor(4, 4))\n    print(find_max_divisor(4, 5))\n    print(find_max_divisor(5, 5))\n    print(find_max_divisor(6, 6))\n    print(find_max_divisor(7, 7))\n    print(find_max_divisor(7, 8))\n    print(find_max_divisor(8, 8))\n    print(find_max_divisor(8, 9))\n    print(find_max_divisor(9, 9))\n    print(find_max_divisor(9, 10))\n    print(find_max_divisor(10, 10))\n    print(find_max_divisor(11, 11))\n    print(find_max_divisor(11, 12))\n    print(find_max_divisor(12, 11))\n    print(find_max_divisor(12, 12))\n    print(find_max_divisor(12, 13))\n    print(find_max_divisor(13, 12))\n    print(find_max_divisor(13, 13))\n    print(find_max_divisor(13, 14))\n    print(find_max_divisor(14, 13))\n    print(find_max_divisor(14, 14))\n    print(find_max_divisor(14, 15))\n    print(find_max_divisor(15, 15))\n    print(find_max_divisor(15, 16))\n    print"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def max_divisor(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return max(a, b, max_divisor(a - 1, b - 1))\n\n\nprint(max_divisor(5, 3))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def max_occuring_divisor(a, b):\n    if b == 0:\n        return 0\n    return max(a % b, max_occuring_divisor(a, b - 1))\n\n\nprint(max_occuring_divisor(2, 2))\nprint(max_occuring_divisor(3, 2))\nprint(max_occuring_divisor(4, 2))\nprint(max_occuring_divisor(5, 2))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def max_divisor(a, b):\n    if a < b:\n        return 1\n    else:\n        return 0\n\n\nif __name__ == \"__main__\":\n    a = int(input(\"Enter a: \"))\n    b = int(input(\"Enter b: \"))\n    print(max_divisor(a, b))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return a\n    elif a < b:\n        return max_divisor(a, b/2)\n    else:\n        return max_divisor(b, a/2)\n\n\ndef main():\n    print(max_divisor(2, 4))\n    print(max_divisor(5, 8))\n\n\nmain()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def max_divisor(a,b):\n    count = 0\n    for i in range(a,b+1):\n        if a%i == 0 and b%i == 0:\n            count+=1\n    return count\n\n\nprint(max_divisor(2,3))\nprint(max_divisor(2,4))\nprint(max_divisor(3,4))\nprint(max_divisor(5,8))\nprint(max_divisor(5,12))\nprint(max_divisor(2,4))\nprint(max_divisor(2,7))\nprint(max_divisor(2,9))\nprint(max_divisor(2,11))\nprint(max_divisor(3,6))\nprint(max_divisor(3,11))\nprint(max_divisor(2,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,9))\nprint(max_divisor(3,"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def max_divisor(a,b):\n    if a>b:\n        return 1\n    else:\n        return 0\n\nif __name__ == \"__main__\":\n    print(max_divisor(5,7))\n    print(max_divisor(5,9))\n    print(max_divisor(4,8))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def max_divisor(a,b):\n    if(a > b):\n        return a\n    else:\n        return b"
    },
    {
      "rank": 14,
      "score": 9.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    if b > a:\n        return b\n    return max(a, b)\n\n\nif __name__ == \"__main__\":\n    print(max_divisor(4, 5))\n    print(max_divisor(8, 5))\n    print(max_divisor(5, 10))"
    },
    {
      "rank": 15,
      "score": 9.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return 1\n    else:\n        return max(max(a, b), a % b)\n\n\nif __name__ == \"__main__\":\n    print(max_divisor(5, 10))\n    print(max_divisor(7, 8))\n    print(max_divisor(10, 20))\n    print(max_divisor(5, 10))"
    },
    {
      "rank": 16,
      "score": 9.0,
      "candidate": "def max_divisor(a,b):\n    if a<b:\n        return a\n    else:\n        return b\n\nif __name__ == \"__main__\":\n    print(max_divisor(2,4))\n    print(max_divisor(6,8))"
    },
    {
      "rank": 17,
      "score": 9.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return 0\n    elif a == 0:\n        return b\n    elif a == b:\n        return 1\n    else:\n        return max(a//b, max_divisor(a, b-1))\n\n\nprint(max_divisor(3, 4))\nprint(max_divisor(5, 6))\nprint(max_divisor(7, 8))"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return 1\n    else:\n        return max(a, b // a)\n\n\nprint(max_divisor(2, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(5, 4))\nprint(max_divisor(2, 4))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    max_divisor = a\n    while a!= b:\n        if a % b == 0:\n            a //= b\n        else:\n            max_divisor = max(max_divisor, b)\n            b //= a\n    return max_divisor\n\nprint(max_divisor(2, 6))\nprint(max_divisor(3, 6))\nprint(max_divisor(3, 4))\nprint(max_divisor(10, 15))\nprint(max_divisor(20, 30))\nprint(max_divisor(10, 9))\nprint(max_divisor(5, 10))\nprint(max_divisor(5, 5))\nprint(max_divisor(5, 5))\nprint(max_divisor(5, 5))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "def max_divisor(x, y):\n    if x == y:\n        return x\n    if x % y == 0:\n        return y\n    return max_divisor(y, x % y)\n\n\nprint(max_divisor(3, 6))\nprint(max_divisor(2, 3))\nprint(max_divisor(3, 6))\nprint(max_divisor(5, 6))\nprint(max_divisor(5, 3))\nprint(max_divisor(1, 2))\nprint(max_divisor(1, 2))\nprint(max_divisor(1, 2))\nprint(max_divisor(1, 2))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return 0\n    if a == 0:\n        return b\n    return max(a, b//a)\n\n\ndef main():\n    print(max_divisor(10, 4))\n    print(max_divisor(10, 3))\n    print(max_divisor(10, 5))\n    print(max_divisor(5, 6))\n    print(max_divisor(10, 2))\n    print(max_divisor(5, 1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a < b:\n        return max(a, b)\n    else:\n        return a\n\n\nif __name__ == \"__main__\":\n    a = int(input())\n    b = int(input())\n    print(max_divisor(a, b))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return 0\n    if b == 1:\n        return a\n    return max(a, max_divisor(a%b, b))\n\nprint(max_divisor(3, 2))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def max_divisor(x, y):\n    if x > y:\n        return x\n    if y < x:\n        return y\n    else:\n        return max_divisor(y, x)\n\n\nprint(max_divisor(3, 5))\nprint(max_divisor(10, 20))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return b\n    else:\n        return a\n\n\na = int(input(\"Enter a: \"))\nb = int(input(\"Enter b: \"))\nprint(f\"Maximum occuring divisor of {a} and {b} is {max_divisor(a, b)}\")"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n    if b == 0:\n        return 0\n    elif a == 0:\n        return 1\n    else:\n        return 1 + max(a % b, find_max_divisor(a, b - 1))\n\n\ndef main():\n    a = int(input(\"Enter the first number: \"))\n    b = int(input(\"Enter the second number: \"))\n    print(find_max_divisor(a, b))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    else:\n        return b\n\nprint(max_divisor(2, 3))\nprint(max_divisor(3, 2))\nprint(max_divisor(2, 3))\nprint(max_divisor(1, 2))\nprint(max_divisor(1, 3))\nprint(max_divisor(2, 3))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n    max_divisor = 0\n    for i in range(a, b + 1):\n        if a % i == 0:\n            max_divisor = i\n    return max_divisor\n\n\ndef main():\n    a = int(input())\n    b = int(input())\n    print(find_max_divisor(a, b))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1\n    else:\n        return max(max_divisor(a, b-1), max_divisor(a-1, b))\n\n\nprint(max_divisor(5, 3))\nprint(max_divisor(4, 5))\nprint(max_divisor(5, 6))\nprint(max_divisor(5, 7))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a < b:\n        a, b = b, a\n\n    if a % b == 0:\n        return b\n    else:\n        return a\n\n\nprint(max_divisor(10, 20))\nprint(max_divisor(20, 30))\nprint(max_divisor(30, 40))\nprint(max_divisor(10, 30))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def max_divisor(a,b):\n    if a <= b:\n        return max(a,b)\n    else:\n        return a\n\nprint(max_divisor(3,5))\nprint(max_divisor(5,7))\nprint(max_divisor(7,10))\nprint(max_divisor(10,20))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def max_occuring_divisor(interval):\n    if interval[0] > interval[1]:\n        return interval[1]\n    else:\n        return interval[0]\n\n\nprint(max_occuring_divisor([4, 7, 10, 12, 13]))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def max_divisor(a,b):\n    if a>b:\n        return a\n    else:\n        return b"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    return (a / b) * max(a, b)\n\n\nprint(max_divisor(4, 5))\nprint(max_divisor(2, 4))\nprint(max_divisor(3, 5))\nprint(max_divisor(2, 3))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n    if a > b:\n        return 1\n    if a == b:\n        return 0\n\n    max_divisor = 0\n    i = 1\n    while i <= b:\n        if b % i == 0:\n            max_divisor = max(max_divisor, i)\n        i += 1\n    return max_divisor\n\n\nprint(find_max_divisor(5, 8))\nprint(find_max_divisor(5, 3))\nprint(find_max_divisor(7, 9))\nprint(find_max_divisor(9, 8))\nprint(find_max_divisor(6, 7))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def max_divisor(a,b):\n    if a > b:\n        return a\n    else:\n        return b"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    # your code here\n    if a > b:\n        return b\n    else:\n        return a\n\n\nprint(max_divisor(5, 3))\nprint(max_divisor(5, 10))\nprint(max_divisor(2, 3))\nprint(max_divisor(1, 5))\nprint(max_divisor(2, 10))\nprint(max_divisor(5, 7))\nprint(max_divisor(5, 10))\nprint(max_divisor(5, 11))\nprint(max_divisor(5, 12))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a < b:\n        return max(a, b)\n    else:\n        return max(b, a)\n\nprint(max_divisor(3, 5))\nprint(max_divisor(5, 3))\nprint(max_divisor(10, 20))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    \"\"\"\n    :param a:\n    :param b:\n    :return:\n    \"\"\"\n    i = 1\n    j = 1\n    while i <= b:\n        if a % i == 0 and b % i == 0:\n            return i\n        i = i + 1\n    return -1\n\n\nif __name__ == '__main__':\n    print(max_divisor(3, 6))\n    print(max_divisor(5, 4))\n    print(max_divisor(6, 7))\n    print(max_divisor(4, 7))\n    print(max_divisor(6, 8))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return 1\n    return max(a, b)\n\n\ndef main():\n    a = int(input())\n    b = int(input())\n    print(max_divisor(a, b))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    elif a == b:\n        return b\n    else:\n        return max(max_divisor(b, a-1), b)\n\n\nprint(max_divisor(3, 5))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return max(a, b) // max(a, b)\n\n\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 5))\nprint(max_divisor(3, 6))\nprint(max_divisor(5, 3))\nprint(max_divisor(10, 3))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return 1\n    else:\n        return max(a, b, a % b)\n\n\nprint(max_divisor(10, 20))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def max_divisor(a,b):\n    if a<b:\n        return b\n    else:\n        return a\n\nprint(max_divisor(10,20))\nprint(max_divisor(10,30))\nprint(max_divisor(10,30,10))\nprint(max_divisor(30,10))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    return max(a // i for i in range(1, b+1))\n\n\na = int(input(\"Enter the first interval: \"))\nb = int(input(\"Enter the second interval: \"))\nprint(max_divisor(a, b))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def findMaxDivisor(a, b):\n    # Write your code here\n    if a < b:\n        return a\n    else:\n        return b\n\n\nprint(findMaxDivisor(4, 5))\nprint(findMaxDivisor(3, 4))\nprint(findMaxDivisor(3, 4))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n    if b < a:\n        a, b = b, a\n    if a == b:\n        return 0\n    if a == 1:\n        return 1\n    return max(find_max_divisor(a-1, b), find_max_divisor(a, b-1))\n\n\nprint(find_max_divisor(7, 5))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def max_divisor(n1, n2):\n    return max(n1, n2)\n\n\nif __name__ == \"__main__\":\n    print(max_divisor(3, 3))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    return b\n\nprint(max_divisor(3, 5))\nprint(max_divisor(5, 3))\nprint(max_divisor(2, 4))\nprint(max_divisor(2, 1))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return a\n    max_a = a\n    max_b = b\n    while a > b:\n        max_a = max(max_a, a % b)\n        b = b // b\n    max_a = max(max_a, b)\n    return max_a\n\n\nif __name__ == \"__main__\":\n    print(max_divisor(4, 5))\n    print(max_divisor(4, 9))\n    print(max_divisor(4, 6))\n    print(max_divisor(4, 5))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def find_divisor(a, b):\n    if a < b:\n        return a\n    else:\n        return b\n\nif __name__ == '__main__':\n    a = int(input(\"Enter the first interval: \"))\n    b = int(input(\"Enter the second interval: \"))\n    print(\"The maximum occuring divisor is\", find_divisor(a, b))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    return max(a // b, b // a)\n\n\ndef test_max_divisor():\n    assert max_divisor(2, 3) == 2\n    assert max_divisor(5, 10) == 5\n    assert max_divisor(12, 3) == 3\n    assert max_divisor(8, 10) == 9\n    assert max_divisor(4, 10) == 8"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    return max(a // b, 1)\n\n\nif __name__ == \"__main__\":\n    print(max_divisor(3, 2))\n    print(max_divisor(4, 3))\n    print(max_divisor(10, 20))\n    print(max_divisor(5, 9))\n    print(max_divisor(3, 6))\n    print(max_divisor(1, 1))\n    print(max_divisor(2, 2))\n    print(max_divisor(2, 3))\n    print(max_divisor(2, 4))\n    print(max_divisor(4, 4))\n    print(max_divisor(3, 4))\n    print(max_divisor(4, 5))\n    print(max_divisor(5, 6))\n    print(max_divisor(6, 7))\n    print(max_divisor(7, 8))\n    print(max_divisor(7, 9))\n    print(max_divisor(9, 10))\n    print(max_divisor(10, 11))\n    print(max_divisor(11, 12))\n    print(max_divisor(12, 13))\n    print(max_divisor(13, 14))\n    print(max_divisor(14, 15))\n    print(max_divisor(15, 16))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        a, b = b, a\n    if a == b:\n        return a\n    return max_divisor(b, a % b)\n\na, b = int(input()), int(input())\nprint(max_divisor(a, b))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def divisor_finder(a, b):\n    max_count = 0\n    a = max(a, b)\n    while a > 0:\n        if a % b == 0:\n            max_count += 1\n        a -= 1\n    return max_count\n\nif __name__ == '__main__':\n    a = int(input(\"Enter the first number: \"))\n    b = int(input(\"Enter the second number: \"))\n    print(\"Maximum occuring divisor is: \", divisor_finder(a, b))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def max_occuring_divisor(a, b):\n    if a == b:\n        return 0\n    if a == 0:\n        return 1\n    if b == 0:\n        return 1\n\n    if a > b:\n        return max_occuring_divisor(b, a)\n    else:\n        return max_occuring_divisor(a, b)\n\n\nprint(max_occuring_divisor(4, 2))\nprint(max_occuring_divisor(3, 4))\nprint(max_occuring_divisor(4, 5))\nprint(max_occuring_divisor(1, 0))\nprint(max_occuring_divisor(1, 1))\nprint(max_occuring_divisor(1, 2))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n    max_divisor = 0\n    i = 0\n    j = 0\n    while i < len(a) and j < len(b):\n        if a[i] % b[j] == 0:\n            max_divisor = max(max_divisor, b[j])\n            i += 1\n            j += 1\n        else:\n            i += 1\n            j += 1\n    return max_divisor\n\n\na = [2, 3, 4, 5]\nb = [2, 3, 4]\nprint(find_max_divisor(a, b))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def max_divisor(x, y):\n    return max(x % y, y % x)\n\n\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 2))\nprint(max_divisor(3, 5))\nprint(max_divisor(1, 2))\nprint(max_divisor(1, 3))\nprint(max_divisor(5, 5))\nprint(max_divisor(1, 7))\nprint(max_divisor(7, 7))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def find_divisor(a,b):\n    if a > b:\n        a,b = b,a\n    if b == 0:\n        return 0\n    elif b == 1:\n        return 1\n    else:\n        return max(a//b, find_divisor(a, b//b))\n\nprint(find_divisor(10,15))\nprint(find_divisor(2,3))\nprint(find_divisor(4,7))\nprint(find_divisor(4,10))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def find_divisor(n):\n    a = 1\n    b = n\n    while a <= b:\n        mid = (a + b) // 2\n        if n % mid == 0:\n            b = mid\n        else:\n            a = mid + 1\n    return b\n\nprint(find_divisor(100))\nprint(find_divisor(4))\nprint(find_divisor(3))\nprint(find_divisor(2))\nprint(find_divisor(1))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b < a:\n        return b\n    else:\n        return a\n\n\nprint(max_divisor(2, 3))\nprint(max_divisor(2, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(5, 4))\nprint(max_divisor(6, 4))\nprint(max_divisor(4, 7))\nprint(max_divisor(2, 3))\nprint(max_divisor(2, 5))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return a\n    else:\n        return max(a, b)\n\n\na = int(input(\"Enter the start: \"))\nb = int(input(\"Enter the end: \"))\nprint(\"The maximum occuring divisor is \", max_divisor(a, b))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return a\n    if a < b:\n        return max_divisor(a, b)\n    return max_divisor(b, a)\n\n\nprint(max_divisor(2, 3))\nprint(max_divisor(3, 5))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return a\n    else:\n        return max(a, b)\n\nprint(max_divisor(2, 5))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return a\n    else:\n        return max(a, max_divisor(b, a % b))\n\nprint(max_divisor(2, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 6))\nprint(max_divisor(2, 6))\nprint(max_divisor(2, 5))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1\n    else:\n        return 2\n\n\na = int(input(\"Enter the minimum number: \"))\nb = int(input(\"Enter the maximum number: \"))\n\nprint(max_divisor(a, b))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def max_divisor(start, end):\n    # Your code here\n    if start > end:\n        return 0\n    return max(start, end // 2)\n\n\nprint(max_divisor(2, 5))\nprint(max_divisor(3, 6))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a < b:\n        return a\n    else:\n        return b\n\n\nif __name__ == \"__main__\":\n    a = int(input(\"Enter the first interval: \"))\n    b = int(input(\"Enter the second interval: \"))\n    print(max_divisor(a, b))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a == b:\n        return 0\n    if a < b:\n        return 1\n    return max(max_divisor(a, b-1), max_divisor(a-1, b))\n\n\nprint(max_divisor(2, 4))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b > a:\n        return a\n    else:\n        return b\n\n\nprint(max_divisor(2, 3))\nprint(max_divisor(1, 3))\nprint(max_divisor(10, 2))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n    if a > b:\n        return 1\n    else:\n        return 0\n\n\nprint(find_max_divisor(2, 4))\nprint(find_max_divisor(5, 8))\nprint(find_max_divisor(6, 4))\nprint(find_max_divisor(2, 1))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def find_divisor(a, b):\n    if a > b:\n        a, b = b, a\n    if a == b:\n        return 1\n    if a % b == 0:\n        return b\n    return find_divisor(b, a % b)\n\n\nif __name__ == \"__main__\":\n    a, b = int(input()), int(input())\n    print(find_divisor(a, b))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a > b:\n        return 1\n    else:\n        return max(a, b)\n\n\nprint(max_divisor(2, 3))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def find_divisor(a,b):\n    if b>a:\n        return a\n    else:\n        return b\n\ndef find_max_divisor(a,b):\n    return find_divisor(a,b)\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nprint(find_max_divisor(a,b))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    m = 0\n    for i in range(a, b+1):\n        if a % i == 0:\n            m = i\n    return m\n\n\nprint(max_divisor(1, 7))\nprint(max_divisor(2, 4))\nprint(max_divisor(2, 2))\nprint(max_divisor(3, 5))\nprint(max_divisor(7, 5))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def max_divisor(a,b):\n    m=0\n    for i in range(b):\n        if(a%i==0):\n            m=i\n    return m\n\nprint(max_divisor(3,5))\nprint(max_divisor(3,7))\nprint(max_divisor(5,10))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def max_occuring_divisor(a, b):\n  max_divisor = 0\n  while a < b:\n    if a % b == 0:\n      max_divisor = b\n    a += 1\n  return max_divisor\n\n\na = int(input())\nb = int(input())\nprint(max_occuring_divisor(a, b))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return 0\n    return a//b\n\n\na = int(input(\"Enter the first value: \"))\nb = int(input(\"Enter the second value: \"))\n\nprint(\"The maximum occuring divisor is \", max_divisor(a, b))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    max_divisor = 0\n    for divisor in range(a, b + 1):\n        if a % divisor == 0 and b % divisor == 0:\n            max_divisor = divisor\n    return max_divisor\n\nprint(max_divisor(6, 20))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def max_divisor(a,b):\n    if a>b:\n        return 0\n    else:\n        return 1\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\n\nprint(\"Maximum divisor is:\", max_divisor(a,b))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    # Write your code here\n    max_divisor = 0\n    if a > b:\n        return max_divisor\n    for i in range(1, b + 1):\n        if a % i == 0:\n            max_divisor = max(max_divisor, i)\n    return max_divisor\n\n\nprint(max_divisor(5, 20))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def find_max_divisor(a, b):\n  count = 0\n  for i in range(a, b+1):\n    if a % i == 0:\n      count += 1\n  return count\n\nprint(find_max_divisor(10, 20))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def max_divisor(x, y):\n    if y == 0:\n        return 0\n    if x == 0:\n        return 0\n    if y > x:\n        return 1\n    return max(max_divisor(x - 1, y), max_divisor(x - 1, y - 1))\n\nprint(max_divisor(3, 4))\nprint(max_divisor(3, -4))\nprint(max_divisor(5, 5))\nprint(max_divisor(6, 5))\nprint(max_divisor(10, 6))\nprint(max_divisor(10, 7))\nprint(max_divisor(10, -6))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if b > a:\n        return a\n    else:\n        return b\n\na = int(input())\nb = int(input())\n\nprint(max_divisor(a, b))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def find_max_divisor(a,b):\n  if (a>b):\n    return 1\n  else:\n    return b\n\nif __name__ == \"__main__\":\n  print(find_max_divisor(10,3))\n  print(find_max_divisor(3,5))\n  print(find_max_divisor(2,3))\n  print(find_max_divisor(3,10))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    else:\n        return b\n\n\nprint(max_divisor(3, 4))\nprint(max_divisor(2, 3))\nprint(max_divisor(6, 6))\nprint(max_divisor(9, 6))\nprint(max_divisor(3, 4))\nprint(max_divisor(1, 3))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def max_occuring_divisor(a, b):\n    max_count = a\n    for i in range(1, b + 1):\n        if a % i == 0:\n            max_count = max(max_count, i)\n    return max_count\n\n\na = int(input(\"Enter the first interval: \"))\nb = int(input(\"Enter the second interval: \"))\nprint(max_occuring_divisor(a, b))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    elif a == b:\n        return b\n    else:\n        return max(a, b)\n\n\nif __name__ == '__main__':\n    print(max_divisor(10, 20))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return 1\n    elif a == b:\n        return 0\n    else:\n        return max(a, b)\n\n\nprint(max_divisor(3, 5))\nprint(max_divisor(1, 2))\nprint(max_divisor(4, 2))\nprint(max_divisor(1, 6))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def divisor(a, b):\n    if a < b:\n        return a\n    else:\n        return b\n\n\ndef max_divisor(a, b):\n    a = divisor(a, b)\n    if a == 0:\n        return 0\n    else:\n        return a\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nprint(f\"The maximum occuring divisor is: {max_divisor(a, b)}\")"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return a\n    elif a < b:\n        return b\n    return max(a, b)\n\n\nif __name__ == '__main__':\n    print(max_divisor(2, 5))\n    print(max_divisor(3, 4))\n    print(max_divisor(4, 5))\n    print(max_divisor(5, 4))\n    print(max_divisor(2, 7))\n    print(max_divisor(6, 8))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def max_divisor(a, b):\n    if a > b:\n        return max(a, b)\n    else:\n        return max(b, a)\n\nif __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    print(max_divisor(a, b))"
    },
    {
      "rank": 93,
      "score": 7.0,
      "candidate": "def find_max_divisor(a,b):\n    if b<a:\n        return b\n    if a==1:\n        return b\n    for i in range(1,b+1):\n        if a%i==0:\n            return i\n\n\nprint(find_max_divisor(2,3))\nprint(find_max_divisor(2,4))\nprint(find_max_divisor(2,6))\nprint(find_max_divisor(5,6))\nprint(find_max_divisor(5,8))\nprint(find_max_divisor(5,10))\nprint(find_max_divisor(1,1))\nprint(find_max_divisor(1,3))\nprint(find_max_divisor(5,10))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def max_divisor(a, b):\n    if b == 0:\n        return a\n    else:\n        return max(max_divisor(a, b-1), a)\n\nprint(max_divisor(2, 7))\nprint(max_divisor(3, 6))\nprint(max_divisor(2, 3))\nprint(max_divisor(2, 5))\nprint(max_divisor(2, -2))\nprint(max_divisor(2, -2))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def max_divisor(a, b):\n    # Write your code here\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return b\n    else:\n        return a\n\nprint(max_divisor(3, 4))\nprint(max_divisor(2, 3))\nprint(max_divisor(2, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(3, 4))\nprint(max_divisor(3, 4))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max_divisor(4, 3))\nprint(max"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def max_divisor(x, y):\n    if x == y:\n        return x\n    if x == -1 or y == -1:\n        return -1\n    return max(x, y)\n\n\ndef max_divisor_2(x, y):\n    return max(x // y, y // x)\n\n\nprint(max_divisor(3, 5))\nprint(max_divisor_2(3, 5))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def max_divisor(a, b):\n    # write your code here\n    if a < b:\n        return max(a, b)\n    else:\n        return max(b, a)\n\n\nprint(max_divisor(3, 7))\nprint(max_divisor(5, 7))\nprint(max_divisor(10, 7))\nprint(max_divisor(7, 7))\nprint(max_divisor(10, 10))\nprint(max_divisor(8, 6))\nprint(max_divisor(8, 8))\nprint(max_divisor(8, 7))\nprint(max_divisor(8, 8))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def max_divisor(a, b):\n    if b > a:\n        return b\n    else:\n        return a\n\n\nprint(max_divisor(1, 6))\nprint(max_divisor(2, 6))\nprint(max_divisor(3, 6))\nprint(max_divisor(6, 12))\nprint(max_divisor(6, 12))\nprint(max_divisor(12, 12))\nprint(max_divisor(12, 12))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def max_occuring_divisor(a, b):\n    if a == b:\n        return a\n    if a > b:\n        return max_occuring_divisor(b, a)\n    else:\n        return max_occuring_divisor(a, b)\n\n\nprint(max_occuring_divisor(10, 20))\nprint(max_occuring_divisor(10, 30))\nprint(max_occuring_divisor(20, 30))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def divisor_find(a, b):\n    max_divisor = 0\n    i = 0\n    while i < len(a) and i < len(b):\n        if a[i] % b[i] == 0:\n            max_divisor = max(max_divisor, b[i])\n            i += 1\n        else:\n            i += 1\n    if i == len(a):\n        return max_divisor\n    else:\n        return max_divisor\n\n\nif __name__ == '__main__':\n    print(divisor_find(4, 5))\n    print(divisor_find(3, 5))\n    print(divisor_find(1, 2))\n    print(divisor_find(1, 5))\n    print(divisor_find(2, 3))\n    print(divisor_find(2, 4))\n    print(divisor_find(2, 6))\n    print(divisor_find(2, 7))\n    print(divisor_find(2, 8))\n    print(divisor_find(2, 9))\n    print(divisor_find(4, 10))\n    print(divisor_find(7, 10))\n    print(divisor_find(8, 9))\n    print(divisor_find(2, 4))\n    print(divisor_find(3, 4))\n    print(divisor_find(6, 6))\n    print(divisor_find(2, 4))\n    print(divisor_find(7, 4))\n    print(divisor_find(8, 6))\n    print(divisor_find(8, 5))\n    print(divisor_find(8, 3))\n    print(divisor_find(8, 2))\n    print(divisor_find(8, 1))\n    print(divisor_find(8, 0))\n    print(divisor_find(9, 3))\n    print(divisor_find(2, 3))\n    print(divisor_find(2, 4))\n    print(divisor_find(3, 4))\n    print(divisor_find(3, 2))\n    print(divisor_"
    }
  ]
}