{
  "timestamp": "2025-09-14T14:35:27.376499",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 289,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def count_binary_seq(n):\n    count = 0\n    for i in range(2**n):\n        if sum(bin(i)) == sum(bin(i - 1)):\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_binary_seq(2) == 2\n    assert count_binary_seq(3) == 3\n    assert count_binary_seq(4) == 2\n    assert count_binary_seq(5) == 1\n    assert count_binary_seq(6) == 1\n    assert count_binary_seq(7) == 2\n    assert count_binary_seq(8) == 2\n    assert count_binary_seq(9) == 3"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def count_2n_bits(n):\n    count = 0\n    while n > 0:\n        count += n & 1\n        n >>= 1\n    return count\n\nprint(count_2n_bits(10))\nprint(count_2n_bits(11))\nprint(count_2n_bits(12))\nprint(count_2n_bits(13))\nprint(count_2n_bits(14))\nprint(count_2n_bits(15))\nprint(count_2n_bits(16))\nprint(count_2n_bits(17))\nprint(count_2n_bits(18))\nprint(count_2n_bits(19))\nprint(count_2n_bits(20))\nprint(count_2n_bits(21))\nprint(count_2n_bits(22))\nprint(count_2n_bits(23))\nprint(count_2n_bits(24))\nprint(count_2n_bits(25))\nprint(count_2n_bits(26))\nprint(count_2n_bits(27))\nprint(count_2n_bits(28))\nprint(count_2n_bits(29))\nprint(count_2n_bits(30))\nprint(count_2n_bits(31))\nprint(count_2n_bits(32))\nprint(count_2n_bits(33))\nprint(count_2n_bits(34))\nprint(count_2n_bits(35))\nprint(count_2n_bits(36))\nprint(count_2n_bits(37))\nprint(count_2n_bits(38))\nprint(count_2n_bits(39))\nprint(count_2n_bits(40))\nprint(count_2n_bits(41))\nprint(count_2n_bits(42))\nprint(count_2n_bits(43))\nprint(count_2n_bits(44))\nprint(count_2n_bits(45))\nprint(count_2n_bits(46))\nprint(count_2n_bits(47))\nprint(count_2n_bits(48))\nprint"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        # create a list to store the number of bits needed\n        sum_list = [0] * (2**n)\n        # loop through the list\n        for i in range(2**n):\n            # check if the sum of the first n bits is same as the sum of the last n bits\n            if sum_list[i] == sum_list[-1]:\n                # increment the number of bits\n                sum_list[i] += 1\n            else:\n                # if not, increment the number of bits\n                sum_list[i] = 1\n        # get the count of the count\n        return sum_list.count(0)\n\n\ns = Solution()\nprint(s.countBits(5))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i!= j:\n                if bin(i)[-2:] == bin(j)[-2:]:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_binary_sequences(5))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "class Solution:\n    def twoSum(self, n: int, target: int) -> int:\n        count = 0\n        for i in range(n):\n            for j in range(i + 1, n):\n                if (target - i) == (target - j):\n                    count += 1\n        return count"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        if n < 2:\n            return 0\n        else:\n            return bin(n).count(\"1\")\n\n\ns = Solution()\nprint(s.countBits(1))\nprint(s.countBits(2))\nprint(s.countBits(3))\nprint(s.countBits(4))\nprint(s.countBits(5))\nprint(s.countBits(6))\nprint(s.countBits(7))\nprint(s.countBits(8))\nprint(s.countBits(9))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if (i + j) % 2 == 0:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_binary_sequences(1))\n    print(count_binary_sequences(2))\n    print(count_binary_sequences(3))\n    print(count_binary_sequences(4))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def count_bin(n, sum_of_first_n_bits, sum_of_last_n_bits):\n\treturn sum_of_first_n_bits * (n - 1) + sum_of_last_n_bits\n\nprint(count_bin(2, 2, 2))\nprint(count_bin(2, 8, 8))\nprint(count_bin(2, 8, 10))\nprint(count_bin(2, 8, 12))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def count_bin_seq(n, sum_1, sum_2):\n    count = 0\n    for i in range(n+1):\n        if (i & 1) == 0:\n            if (sum_1 == sum_2):\n                count += 1\n        sum_1 = sum_1 >> 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_bin_seq(2, 0, 0))"
    },
    {
      "rank": 10,
      "score": 9.991401750613612,
      "candidate": "class Solution:\n    def count_bits(self, n: int) -> int:\n        if n <= 1:\n            return 0\n        else:\n            return self.count_bits(n - 1) + self.count_bits(n - 2)"
    },
    {
      "rank": 11,
      "score": 9.972244412226821,
      "candidate": "def count_bitwise_sum_same_as_last(n):\n    count = 0\n    for i in range(1, n):\n        for j in range(i):\n            if i ^ j == (i & j):\n                count += 1\n    return count\n\ndef main():\n    n = 2\n    print(count_bitwise_sum_same_as_last(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 12,
      "score": 9.947278746918997,
      "candidate": "def count_of_2n_bit(n):\n    count = 0\n    if n == 1:\n        return 1\n    while n > 1:\n        if n & 1 == 0:\n            count += 1\n        n >>= 1\n    return count\n\nprint(count_of_2n_bit(5))"
    },
    {
      "rank": 13,
      "score": 9.943699087989964,
      "candidate": "def count_same_sum_bit(n):\n    res = 0\n    for i in range(1, n + 1):\n        res += (i & 1)\n    return res\n\n\nif __name__ == \"__main__\":\n    print(count_same_sum_bit(5))"
    },
    {
      "rank": 14,
      "score": 9.928238235888191,
      "candidate": "def count_binary(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return count_binary(n-1) + count_binary(n-2)\n\nprint(count_binary(5))"
    },
    {
      "rank": 15,
      "score": 9.92773511305857,
      "candidate": "def count_same_bit_sequence(n):\n    count = 0\n\n    for i in range(1, n):\n        if (i % 2) == (n - i) // 2:\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_same_bit_sequence(7))"
    },
    {
      "rank": 16,
      "score": 9.875615147614324,
      "candidate": "def count_seq(n):\n    count = 0\n    while n > 0:\n        count += (n & 1)\n        n >>= 1\n    return count\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(count_seq(n))"
    },
    {
      "rank": 17,
      "score": 9.855590413064945,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 1:\n            return 0\n        if n == 2:\n            return 1\n        if n % 2 == 0:\n            return self.countBits(n//2) + self.countBits(n//2 - 1)\n        return self.countBits(n-1) + self.countBits(n//2)\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.countBits(3)\n    print s.countBits(4)\n    print s.countBits(7)"
    },
    {
      "rank": 18,
      "score": 9.83753871992657,
      "candidate": "def count_bin_seq(n):\n    count = 0\n    for i in range(2 ** n - 1):\n        if bin(i)[2:] == bin(i + 1)[2:]:\n            count += 1\n    return count\n\n\nprint(count_bin_seq(5))\nprint(count_bin_seq(7))"
    },
    {
      "rank": 19,
      "score": 9.746149377050584,
      "candidate": "def count_bin_sequences(n):\n    count = 0\n    for i in range(2**(n-1)):\n        if i%2 == 0:\n            if i == 0 or i == 1:\n                continue\n            else:\n                if i == (2**n-1):\n                    count += 1\n    return count\n\n\nprint(count_bin_sequences(2))"
    },
    {
      "rank": 20,
      "score": 9.712910410220639,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i!= j:\n                if bin(i) + bin(j) == bin(n):\n                    count += 1\n    return count\n\nprint(count_binary_sequences(2))"
    },
    {
      "rank": 21,
      "score": 9.706997524006955,
      "candidate": "def count_sequence(n):\n    if n <= 0:\n        return 0\n    return count_sequence(n-1) + count_sequence(n-2)\n\n\nprint(count_sequence(4))"
    },
    {
      "rank": 22,
      "score": 9.645154722311817,
      "candidate": "def count_binary(n):\n    count = 0\n    for i in range(2**n):\n        if sum(bin(i)[2:]) == sum(bin(i-1)[2:]):\n            count += 1\n    return count\n\n\nprint(count_binary(3))\nprint(count_binary(4))\nprint(count_binary(5))\nprint(count_binary(6))\nprint(count_binary(7))\nprint(count_binary(8))\nprint(count_binary(9))\nprint(count_binary(10))"
    },
    {
      "rank": 23,
      "score": 9.522983460495785,
      "candidate": "def count_two_bits_same(n):\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(i - 1):\n            count += 1\n    return count\n\nprint(count_two_bits_same(5))\nprint(count_two_bits_same(6))\nprint(count_two_bits_same(7))"
    },
    {
      "rank": 24,
      "score": 9.37126117501846,
      "candidate": "def count_sequences(n):\n    res = 0\n    for i in range(2**n):\n        if i & 1:\n            res += 1\n    return res\n\n\nprint(count_sequences(3))"
    },
    {
      "rank": 25,
      "score": 9.085948343328187,
      "candidate": "def count_seq(n):\n    count = 0\n    for i in range(2 ** n):\n        if i & (1 << n - 1):\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_seq(5))"
    },
    {
      "rank": 26,
      "score": 9.075039436695493,
      "candidate": "def count_same_sum_2n(n):\n    count = 0\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            if (i + j) == (2*i + 2*j):\n                count += 1\n    return count\n\n\nprint(count_same_sum_2n(5))"
    },
    {
      "rank": 27,
      "score": 9.068886685571735,
      "candidate": "def count_sequences(n):\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            if (i + j) == n:\n                count += 1\n    return count\n\n\nprint(count_sequences(4))"
    },
    {
      "rank": 28,
      "score": 9.050381002788466,
      "candidate": "def count_bin_seq(n):\n    count = 0\n    for i in range(2**n):\n        if (bin(i).count(\"1\") == bin(i).count(\"0\")) and (bin(i).count(\"1\") == bin(i).count(\"0\")):\n            count += 1\n    return count\n\n\nprint(count_bin_seq(5))"
    },
    {
      "rank": 29,
      "score": 9.000502856158482,
      "candidate": "def count_bin_seq(n):\n    count = 0\n    if n == 1:\n        count = 1\n    else:\n        count = count_bin_seq(n-1) + count_bin_seq(n-2)\n    return count\n\n\nprint(count_bin_seq(5))"
    },
    {
      "rank": 30,
      "score": 8.867154248667784,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    while n > 0:\n        if n & 1 == 0:\n            count += 1\n        n >>= 1\n    return count\n\n\nprint(count_binary_sequences(7))\nprint(count_binary_sequences(10))\nprint(count_binary_sequences(15))\nprint(count_binary_sequences(30))\nprint(count_binary_sequences(25))\nprint(count_binary_sequences(35))\nprint(count_binary_sequences(40))\nprint(count_binary_sequences(45))"
    },
    {
      "rank": 31,
      "score": 8.855892932580174,
      "candidate": "def count_seq(n):\n    count = 0\n    while n > 1:\n        if (n & 1) == 0:\n            count += 1\n        n >>= 1\n    return count\n\n\ndef main():\n    print(count_seq(2))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 32,
      "score": 8.844417946564612,
      "candidate": "def count_bit_sequences(n):\n    count = 0\n    for i in range(1, n+1):\n        for j in range(1, i+1):\n            if (i & 1) == (j & 1):\n                count += 1\n    return count\n\nprint(count_bit_sequences(5))"
    },
    {
      "rank": 33,
      "score": 8.6952317228692,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    for i in range(2**n):\n        if i & (1 << n):\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print(count_binary_sequences(10))\n    print(count_binary_sequences(2))\n    print(count_binary_sequences(3))\n    print(count_binary_sequences(4))\n    print(count_binary_sequences(5))\n    print(count_binary_sequences(6))\n    print(count_binary_sequences(7))\n    print(count_binary_sequences(8))\n    print(count_binary_sequences(9))"
    },
    {
      "rank": 34,
      "score": 8.66689406231469,
      "candidate": "def count_bits(n, s):\n    count = 0\n    for i in range(0, n - 1):\n        if i == 0:\n            count += (s & (s - 1))\n        else:\n            count += (s & (s - 1))\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_bits(2, 10))"
    },
    {
      "rank": 35,
      "score": 8.65488409202092,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    for i in range(2**n):\n        if sum(bin(i)[2:]) == sum(bin(i)[2:-1]):\n            count += 1\n    return count\n\nprint(count_binary_sequences(3))"
    },
    {
      "rank": 36,
      "score": 8.64809724717905,
      "candidate": "def count_2n_bits(n):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return count_2n_bits(n - 1) + count_2n_bits(n - 2)\n\n\nprint(count_2n_bits(3))"
    },
    {
      "rank": 37,
      "score": 8.585327943167513,
      "candidate": "def count_binary_sequence(n):\n\tbinary_sequence = []\n\tfor i in range(2**n):\n\t\tbinary_sequence.append(bin(i))\n\tcount = 0\n\tfor i in range(len(binary_sequence)-1):\n\t\tif binary_sequence[i] == binary_sequence[i+1]:\n\t\t\tcount += 1\n\treturn count\n\nif __name__ == \"__main__\":\n\tprint(count_binary_sequence(3))"
    },
    {
      "rank": 38,
      "score": 8.580262451319905,
      "candidate": "def count_bin_sequences(n):\n    count = 0\n    for i in range(0, 2**n):\n        if i % 2 == 0:\n            count += 1\n    return count\n\nprint(count_bin_sequences(3))"
    },
    {
      "rank": 39,
      "score": 8.57731887189631,
      "candidate": "def count_same_sum(n):\n    count = 0\n    for i in range(2**n):\n        if bin(i)[2:] == bin(n)[2:]:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_same_sum(5))"
    },
    {
      "rank": 40,
      "score": 8.565853758040921,
      "candidate": "def count_binary_sequences(n):\n    # Write your code here\n    count = 0\n    for i in range(2 ** n):\n        if (sum(bin(i)[2:]) == sum(bin(i)[3:])):\n            count += 1\n    return count\n\nprint(count_binary_sequences(5))"
    },
    {
      "rank": 41,
      "score": 8.551477106038199,
      "candidate": "def count_sequence(n):\n    res = 0\n    for i in range(1, n+1):\n        res += (i & (i-1))\n    return res\n\n\nprint(count_sequence(5))"
    },
    {
      "rank": 42,
      "score": 8.514705439732333,
      "candidate": "def count_bitwise_sum(n):\n    res = 0\n    for i in range(1, n):\n        res += 2**i\n    return res\n\n\nif __name__ == '__main__':\n    print(count_bitwise_sum(10))"
    },
    {
      "rank": 43,
      "score": 8.484246239677141,
      "candidate": "def count_2n(n, sum_of_first_bits, sum_of_last_bits):\n    count = 0\n    if n == 1:\n        return 0\n    elif n == 2:\n        if sum_of_first_bits == sum_of_last_bits:\n            count += 1\n    else:\n        if sum_of_first_bits + sum_of_last_bits == n:\n            count += 1\n        else:\n            count += count_2n(n-1, sum_of_first_bits, sum_of_last_bits)\n    return count\n\n\ndef main():\n    print(count_2n(2, 0, 0))\n    print(count_2n(2, 1, 1))\n    print(count_2n(2, 2, 2))\n    print(count_2n(2, 3, 5))\n\n\nmain()"
    },
    {
      "rank": 44,
      "score": 8.480133742422096,
      "candidate": "def count_seq(n):\n    # Write your code here\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (i+j)%2 == 0:\n                count += 1\n    return count\n\n\ndef main():\n    print(count_seq(10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 45,
      "score": 8.446540961667854,
      "candidate": "def count_seq_sum(n):\n    if n == 1:\n        return 1\n    else:\n        return count_seq_sum(n-1) + count_seq_sum(n-2)\n\n\nif __name__ == \"__main__\":\n    print(count_seq_sum(5))"
    },
    {
      "rank": 46,
      "score": 8.438910582301892,
      "candidate": "class Solution:\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        count = 0\n        for i in range(2 ** n):\n            if sum(bin(i)[2:]) == sum(bin(i)[::-2]):\n                count += 1\n        return count\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.countBits(4))"
    },
    {
      "rank": 47,
      "score": 8.414920294596508,
      "candidate": "def count_same_sum(n):\n    return count_same_sum_rec(n, 0)\n\n\ndef count_same_sum_rec(n, s):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1 if s == 0 else 0\n\n    count = 0\n    for i in range(2**n):\n        if s == 0:\n            count += count_same_sum_rec(n-1, i)\n        else:\n            count += count_same_sum_rec(n-1, i-s)\n\n    return count\n\n\nif __name__ == '__main__':\n    n = 2\n    print(count_same_sum(n))"
    },
    {
      "rank": 48,
      "score": 8.36832426401228,
      "candidate": "def count_of_2n_bits_same_sum(n):\n    count = 0\n    for i in range(n):\n        count += 1 if (i & 1) == (n-i-1) else 0\n    return count\n\n\nprint(count_of_2n_bits_same_sum(2))\nprint(count_of_2n_bits_same_sum(1))\nprint(count_of_2n_bits_same_sum(0))\nprint(count_of_2n_bits_same_sum(7))"
    },
    {
      "rank": 49,
      "score": 8.34844829209528,
      "candidate": "def count_of_two_bits(n):\n    count = 0\n    for i in range(2**n):\n        count += (i & 1)\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_of_two_bits(3))"
    },
    {
      "rank": 50,
      "score": 8.324850007029202,
      "candidate": "def count_bin_seq(n):\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    return count_bin_seq(n-1) + count_bin_seq(n-2)\n\nif __name__ == \"__main__\":\n    print(count_bin_seq(3))"
    },
    {
      "rank": 51,
      "score": 8.254443190391335,
      "candidate": "def binary_sequence_sum(n):\n    count = 0\n    for i in range(1, n):\n        if i & 1:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    n = 5\n    print(binary_sequence_sum(n))"
    },
    {
      "rank": 52,
      "score": 8.251959946211114,
      "candidate": "def count_bits_same_as_sum(n: int):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 1:\n        return 0\n\n    count = 0\n    for i in range(n):\n        for j in range(n):\n            if i!= j:\n                if (i + j) & 1 == 0:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_bits_same_as_sum(2))"
    },
    {
      "rank": 53,
      "score": 8.238724056574785,
      "candidate": "def count_same_bits(n):\n    count = 0\n    while (n > 1):\n        count += n & 1\n        n >>= 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_same_bits(4) == 1\n    assert count_same_bits(8) == 2\n    assert count_same_bits(16) == 3"
    },
    {
      "rank": 54,
      "score": 8.213906557455646,
      "candidate": "def count_bits(n):\n    if n == 1:\n        return 0\n\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(1, i + 1):\n            if (i & 1) == (j & 1):\n                count += 1\n\n    return count\n\n\nif __name__ == '__main__':\n    print(count_bits(10))"
    },
    {
      "rank": 55,
      "score": 8.179945345056344,
      "candidate": "def count_bits(n):\n    count = 0\n    for i in range(2**n):\n        if sum(bin(i)[2:]) == sum(bin(i)[2:][::-1]):\n            count += 1\n    return count\n\n\nprint(count_bits(2))"
    },
    {
      "rank": 56,
      "score": 8.149308319002614,
      "candidate": "def count_same_sum_2n(n):\n    res = 0\n    for i in range(2**n):\n        if i == (2**n - 1):\n            res += 1\n        else:\n            res += i % 2\n    return res\n\nif __name__ == \"__main__\":\n    assert count_same_sum_2n(3) == 2\n    assert count_same_sum_2n(5) == 4\n    assert count_same_sum_2n(6) == 9\n    assert count_same_sum_2n(7) == 13"
    },
    {
      "rank": 57,
      "score": 8.112962067258238,
      "candidate": "def count_bitwise_sum(n):\n\tcount = 0\n\tfor i in range(1, n + 1):\n\t\tfor j in range(i, n + 1):\n\t\t\tif bin(i).count('1') == bin(j).count('1'):\n\t\t\t\tcount += 1\n\treturn count\n\nprint(count_bitwise_sum(3))"
    },
    {
      "rank": 58,
      "score": 8.100365259923162,
      "candidate": "def count_bin_seq(n: int) -> int:\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return count_bin_seq(n-1) + count_bin_seq(n-2)\n\n\nif __name__ == \"__main__\":\n    print(count_bin_seq(3))"
    },
    {
      "rank": 59,
      "score": 8.072154573480748,
      "candidate": "def count_of_same_sum(n):\n    if n <= 0:\n        return 0\n    count = 0\n    for i in range(n, 0, -1):\n        count += i\n        if i % 2 == 0:\n            count += i // 2\n    return count\n\nprint(count_of_same_sum(4))"
    },
    {
      "rank": 60,
      "score": 7.865399926896975,
      "candidate": "def count_bin(n):\n    count = 0\n    for i in range(1, n+1):\n        count += (2**i)\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_bin(3) == 2\n    assert count_bin(4) == 2\n    assert count_bin(5) == 2"
    },
    {
      "rank": 61,
      "score": 7.860297688096927,
      "candidate": "def count_bin_sequences(n):\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            if bin(i)[2:] == bin(j)[2:]:\n                count += 1\n    return count\n\n\nprint(count_bin_sequences(5))"
    },
    {
      "rank": 62,
      "score": 7.737228133114101,
      "candidate": "def count_seq(n, s):\n\tif n == 1:\n\t\treturn 0\n\tif n == 2:\n\t\treturn 1\n\treturn count_seq(n-1, s-s%2) + count_seq(n-2, s-s%2)\n\n\n\nprint(count_seq(4, 0))"
    },
    {
      "rank": 63,
      "score": 7.721597980745724,
      "candidate": "def count_bin_sequences(n):\n    if n == 1:\n        return 0\n    else:\n        return 1 + count_bin_sequences(n-1)\n\nprint(count_bin_sequences(2))"
    },
    {
      "rank": 64,
      "score": 7.659999544134748,
      "candidate": "def count_seq_2n(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return count_seq_2n(n-1)+count_seq_2n(n-2)\n\ndef main():\n    n = 5\n    print(count_seq_2n(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 65,
      "score": 7.640979693653737,
      "candidate": "def count_bin_seq(n):\n    # write your code here\n    count = 0\n    for i in range(1, n + 1):\n        count += i & 1\n    return count\n\n\nprint(count_bin_seq(2))"
    },
    {
      "rank": 66,
      "score": 3.552724485427587,
      "candidate": "def count_two_bits(n):\n    count = 0\n    for i in range(n):\n        count += 1 if (i & (i + 1)) == 0 else 0\n    return count\n\nprint(count_two_bits(5))\nprint(count_two_bits(6))\nprint(count_two_bits(7))\nprint(count_two_bits(8))\nprint(count_two_bits(9))\nprint(count_two_bits(10))\nprint(count_two_bits(11))\nprint(count_two_bits(12))\nprint(count_two_bits(13))\nprint(count_two_bits(14))\nprint(count_two_bits(15))\nprint(count_two_bits(16))\nprint(count_two_bits(17))\nprint(count_two_bits(18))\nprint(count_two_bits(19))\nprint(count_two_bits(20))\nprint(count_two_bits(21))\nprint(count_two_bits(22))\nprint(count_two_bits(23))\nprint(count_two_bits(24))\nprint(count_two_bits(25))\nprint(count_two_bits(26))\nprint(count_two_bits(27))\nprint(count_two_bits(28))\nprint(count_two_bits(29))\nprint(count_two_bits(30))\nprint(count_two_bits(31))\nprint(count_two_bits(32))\nprint(count_two_bits(33))\nprint(count_two_bits(34))\nprint(count_two_bits(35))\nprint(count_two_bits(36))\nprint(count_two_bits(37))\nprint(count_two_bits(38))\nprint(count_two_bits(39))\nprint(count_two_bits(40))\nprint(count_two_bits(41))\nprint(count_two_bits(42))\nprint(count_two_bits(43))\nprint(count_two_bits(44))\nprint(count_two_bits(45))\nprint(count_two_bits(46))"
    },
    {
      "rank": 67,
      "score": 3.3699927791766204,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        if n == 2:\n            return 2\n        if n == 3:\n            return 3\n\n        def countBits(n):\n            count = 0\n            for i in range(2**n):\n                count += i\n            return count\n\n        return countBits(n)\n\ns = Solution()\nprint(s.countBits(1))\nprint(s.countBits(2))\nprint(s.countBits(3))\nprint(s.countBits(4))\nprint(s.countBits(5))"
    },
    {
      "rank": 68,
      "score": 3.339025746686511,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        count = 0\n        for i in range(2**n):\n            count += i%2\n        return count\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    print sol.countBits(2)"
    },
    {
      "rank": 69,
      "score": 3.320390741195726,
      "candidate": "def count_sequences(n):\n    count = 0\n    if n % 2 == 1:\n        count = count + 1\n    for i in range(1, n // 2 + 1):\n        if (n - i) % 2 == 0:\n            count = count + 1\n    return count\n\nprint(count_sequences(10))\nprint(count_sequences(15))\nprint(count_sequences(20))\nprint(count_sequences(30))\nprint(count_sequences(40))\nprint(count_sequences(50))\nprint(count_sequences(60))\nprint(count_sequences(70))\nprint(count_sequences(80))\nprint(count_sequences(90))\nprint(count_sequences(100))\nprint(count_sequences(110))\nprint(count_sequences(120))\nprint(count_sequences(130))\nprint(count_sequences(140))\nprint(count_sequences(150))\nprint(count_sequences(160))\nprint(count_sequences(170))\nprint(count_sequences(180))\nprint(count_sequences(170))\nprint(count_sequences(180))\nprint(count_sequences(170))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))\nprint(count_sequences(180))"
    },
    {
      "rank": 70,
      "score": 3.2876658765313285,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        return self.countBitsRecu(n)\n\n    def countBitsRecu(self, n):\n        if n <= 0:\n            return 0\n        if n == 1:\n            return 1\n        return self.countBitsRecu(n - 1) + self.countBitsRecu(n - 2)\n\n    def countBits2(self, n: int) -> int:\n        count = 0\n        for i in range(n):\n            count += self.countBits(i)\n        return count\n\n    def countBits3(self, n: int) -> int:\n        count = 0\n        for i in range(n - 1, -1, -1):\n            count += self.countBits(i)\n        return count\n\n    def countBits4(self, n: int) -> int:\n        count = 0\n        for i in range(n - 1, -1, -1):\n            count += self.countBits2(i)\n        return count\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.countBits(4))\n    print(s.countBits2(4))\n    print(s.countBits3(4))\n    print(s.countBits4(4))"
    },
    {
      "rank": 71,
      "score": 3.268602155203518,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n <= 1:\n            return 0\n        dp = [0 for i in range(n)]\n        dp[0] = 1\n        dp[1] = 1\n        for i in range(2, n):\n            dp[i] = dp[i-1] + dp[i-2]\n        return dp[n-1]\n\nif __name__ == '__main__':\n    sol = Solution()\n    print sol.countBits(2)"
    },
    {
      "rank": 72,
      "score": 3.226690988335242,
      "candidate": "class Solution(object):\n    def twoSum(self, num, target):\n        \"\"\"\n        :type num: int\n        :type target: int\n        :rtype: int\n        \"\"\"\n        # count = 0\n        # for i in range(1, num+1):\n        #     for j in range(i+1, num+1):\n        #         if i + j == target:\n        #             count += 1\n        # return count\n        if num == target:\n            return 1\n        return 0"
    },
    {
      "rank": 73,
      "score": 3.131494306420985,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        count = 0\n        for i in range(n):\n            for j in range(i+1, n+1):\n                if (i + j) % 2 == 0:\n                    count += 1\n        return count\n\na = Solution()\nprint(a.countBits(8))"
    },
    {
      "rank": 74,
      "score": 3.126572608766672,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        count = 0\n        for i in range(1, n+1):\n            for j in range(1, n+1):\n                if i == j:\n                    continue\n                if i & 1 == j & 1:\n                    count += 1\n        return count\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.countBits(5))"
    },
    {
      "rank": 75,
      "score": 3.126488461927945,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        return self.countBitsHelper(n, 0, 0)\n\n    def countBitsHelper(self, n, current_sum, previous_sum):\n        if n == 0:\n            return 1\n        if n == 1:\n            return 0\n        if n == 2:\n            if current_sum == previous_sum:\n                return 1\n            if current_sum > previous_sum:\n                return self.countBitsHelper(n - 1, current_sum - 2, previous_sum)\n            return self.countBitsHelper(n - 1, current_sum - 1, previous_sum)\n\n\nif __name__ == '__main__':\n    s = Solution()\n    assert s.countBits(1) == 0\n    assert s.countBits(2) == 1\n    assert s.countBits(3) == 2\n    assert s.countBits(4) == 4\n    assert s.countBits(5) == 6\n    assert s.countBits(6) == 8\n    assert s.countBits(7) == 16\n    assert s.countBits(8) == 32\n    assert s.countBits(9) == 64\n    assert s.countBits(10) == 128\n    assert s.countBits(11) == 256\n    assert s.countBits(12) == 512\n    assert s.countBits(13) == 1024"
    },
    {
      "rank": 76,
      "score": 3.1249894000291114,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        count = 0\n        if n == 1:\n            return 1\n        if n == 2:\n            return 1\n        if n == 3:\n            return 2\n        if n == 4:\n            return 4\n        if n == 5:\n            return 8\n        if n == 6:\n            return 16\n        if n == 7:\n            return 32\n        if n == 8:\n            return 64\n        if n == 9:\n            return 128\n        if n == 10:\n            return 256\n        if n == 11:\n            return 512\n        if n == 12:\n            return 1024\n        if n == 13:\n            return 2048\n        if n == 14:\n            return 4096\n        if n == 15:\n            return 8192\n        if n == 16:\n            return 16384\n        if n == 17:\n            return 32768\n        if n == 18:\n            return 65536\n        if n == 19:\n            return 131072\n        if n == 20:\n            return 262144\n        if n == 21:\n            return 524288\n        if n == 22:\n            return 1048576\n        if n == 23:\n            return 2097152\n        if n == 24:\n            return 4194304\n        if n == 25:\n            return 8388608\n        if n == 26:\n            return 16777216\n        if n == 27:\n            return 4394432\n        if n == 28:\n            return 262144\n        if n == 29:\n            return 1048576\n        if n == 30:\n            return 2097152\n        if n == 31:\n            return 524288\n        if n == 32:\n            return 16777216\n        if n == 33:\n            return 4394432\n        if n == 34:\n            return 8388608\n        if n == 35:\n            return 2097152\n        if n == 36:\n            return 4394432\n        if n == 37:\n            return 16777216\n        if n == 38:\n            return 4394432\n        if n == 39:\n            return 838860"
    },
    {
      "rank": 77,
      "score": 3.1099865664083457,
      "candidate": "def count_bin_seq(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n % 2 == 0:\n        return count_bin_seq(n // 2) + count_bin_seq(n // 2 + 1)\n    else:\n        return count_bin_seq(n // 2 + 1) + count_bin_seq(n // 2)\n\n\nprint(count_bin_seq(3))\nprint(count_bin_seq(5))\nprint(count_bin_seq(10))\nprint(count_bin_seq(20))\nprint(count_bin_seq(30))\nprint(count_bin_seq(40))"
    },
    {
      "rank": 78,
      "score": 3.084686795048112,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        if n < 1:\n            return 0\n        if n == 1:\n            return 1\n        if n % 2 == 0:\n            return self.countBits(n // 2)\n        return self.countBits(n // 2 + 1)\n\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    print(sol.countBits(2))"
    },
    {
      "rank": 79,
      "score": 3.0731022582516645,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        count = 0\n        for i in range(2**n):\n            if i & 1:\n                count += 1\n        return count\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.countBits(5))"
    },
    {
      "rank": 80,
      "score": 3.0689014325541932,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n <= 1:\n            return 0\n        count = 0\n        for i in range(1, n):\n            for j in range(i+1, n+1):\n                if (i + j) % 2 == 0:\n                    count += 1\n        return count\n\na = Solution()\nprint(a.countBits(5))"
    },
    {
      "rank": 81,
      "score": 3.0236348716407733,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        if n == 1:\n            return 1\n        if n == 2:\n            return 2\n        if n == 3:\n            return 4\n        if n == 4:\n            return 8\n        if n == 5:\n            return 16\n        if n == 6:\n            return 32\n        if n == 7:\n            return 64\n        if n == 8:\n            return 128\n        if n == 9:\n            return 256\n        if n == 10:\n            return 512\n        if n == 11:\n            return 1024\n        if n == 12:\n            return 2048\n        if n == 13:\n            return 4096\n        if n == 14:\n            return 8192\n        if n == 15:\n            return 16384\n        if n == 16:\n            return 32768\n        if n == 17:\n            return 65536\n        if n == 18:\n            return 131072\n        if n == 19:\n            return 262144\n        if n == 20:\n            return 524288\n        if n == 21:\n            return 1048576\n        if n == 22:\n            return 2097152\n        if n == 23:\n            return 4194304\n        if n == 24:\n            return 16777216\n        if n == 25:\n            return 8388608\n        if n == 26:\n            return 4194304\n        if n == 27:\n            return 262144\n        if n == 28:\n            return 1048576\n        if n == 29:\n            return 2097152\n        if n == 30:\n            return 16777216\n        if n == 31:\n            return 524288\n        if n == 32:\n            return 16777216\n        if n == 33:\n            return 1048576\n        if n == 34:\n            return 2097152\n        if n == 35:\n            return 16777216\n        if n == 36:\n            return 4194304\n        if n == 37:\n            return 262144\n        if n == 38:\n            return 1048576\n        if n == 39:\n            return 2097152\n        if n == 40"
    },
    {
      "rank": 82,
      "score": 2.9516074945900854,
      "candidate": "class Solution:\n    def twoSum(self, n: int, a: int, b: int) -> int:\n        count = 0\n        if n == 1:\n            return 0\n        if n == 2:\n            if a == b:\n                count += 1\n            return count\n        if n == 3:\n            if a + b == 3:\n                count += 1\n            return count\n        if n == 4:\n            if a + b + c == 4:\n                count += 1\n            return count\n        if n == 5:\n            if a + b + c + d == 5:\n                count += 1\n            return count\n        if n == 6:\n            if a + b + c + d + e == 6:\n                count += 1\n            return count\n        if n == 7:\n            if a + b + c + d + e + f == 7:\n                count += 1\n            return count\n        if n == 8:\n            if a + b + c + d + e + f + g == 8:\n                count += 1\n            return count\n        if n == 9:\n            if a + b + c + d + e + f + g + h == 9:\n                count += 1\n            return count\n        if n == 10:\n            if a + b + c + d + e + f + g + h + i == 10:\n                count += 1\n            return count\n        if n == 11:\n            if a + b + c + d + e + f + g + h + i + j == 11:\n                count += 1\n            return count\n        if n == 12:\n            if a + b + c + d + e + f + g + h + i + j + k == 12:\n                count += 1\n            return count\n        if n == 13:\n            if a + b + c + d + e + f + g + h + i + j + k + l == 13:\n                count += 1\n            return count\n        if n == 14:\n            if a + b + c + d + e + f + g + h + i + j + k + l + m == 14:\n                count += 1\n            return count\n        if n == 15:\n            if a"
    },
    {
      "rank": 83,
      "score": 2.9209782948297125,
      "candidate": "class Solution:\n    def twoSum(self, n: int, a: int, b: int) -> int:\n        if n == 1:\n            return 0\n        if n == 2:\n            return 1\n        if n == 3:\n            return 2\n        if n == 4:\n            return 4\n        if n == 5:\n            return 8\n        if n == 6:\n            return 16\n        if n == 7:\n            return 32\n        if n == 8:\n            return 64\n        if n == 9:\n            return 128\n        if n == 10:\n            return 256\n        if n == 11:\n            return 512\n        if n == 12:\n            return 1024\n        if n == 13:\n            return 2048\n        if n == 14:\n            return 4096\n        if n == 15:\n            return 8192\n        if n == 16:\n            return 16384\n        if n == 17:\n            return 32768\n        if n == 18:\n            return 65536\n        if n == 19:\n            return 131072\n        if n == 20:\n            return 262144\n        if n == 21:\n            return 524288\n        if n == 22:\n            return 1048576\n        if n == 23:\n            return 2097152\n        if n == 24:\n            return 4194304\n        if n == 25:\n            return 16777216\n        if n == 26:\n            return 4294967295\n        if n == 27:\n            return 84502356\n        if n == 28:\n            return 536870912\n        if n == 29:\n            return 1073741824\n        if n == 30:\n            return 104857600\n        if n == 31:\n            return 209715200\n        if n == 32:\n            return 1677721600\n        if n == 33:\n            return 429496729500\n        if n == 34:\n            return 8450235600\n        if n == 35:\n            return 107374182400\n        if n == 36:\n            return 10485760000\n        if n == 37:\n            return 209715200\n        if n == 38:\n            return 16"
    },
    {
      "rank": 84,
      "score": 2.9180463188468324,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        if n <= 0:\n            return 0\n        else:\n            return self.countBits(n-1) + self.countBits(n-2)\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.countBits(3))"
    },
    {
      "rank": 85,
      "score": 2.891775668452075,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        dp = [0] * (n+1)\n        dp[0] = 1\n        dp[1] = 1\n        for i in range(2, n+1):\n            dp[i] = dp[i-1] + dp[i-2]\n        return dp[n]\n\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    print sol.countBits(2)"
    },
    {
      "rank": 86,
      "score": 2.885318248690781,
      "candidate": "def count_bits(n):\n    if n == 1:\n        return 0\n\n    if n == 2:\n        return 1\n\n    if n == 3:\n        return 2\n\n    if n == 4:\n        return 3\n\n    if n == 5:\n        return 4\n\n    if n == 6:\n        return 5\n\n    return 0\n\n\nprint(count_bits(5))\nprint(count_bits(6))\nprint(count_bits(7))"
    },
    {
      "rank": 87,
      "score": 2.8652212018542893,
      "candidate": "def count_2n_bits(n):\n    if n == 0:\n        return 0\n    return 1 + count_2n_bits(n - 1)\n\n\nif __name__ == '__main__':\n    print(count_2n_bits(0))\n    print(count_2n_bits(1))\n    print(count_2n_bits(2))\n    print(count_2n_bits(3))\n    print(count_2n_bits(4))\n    print(count_2n_bits(5))\n    print(count_2n_bits(6))\n    print(count_2n_bits(7))\n    print(count_2n_bits(8))\n    print(count_2n_bits(9))"
    },
    {
      "rank": 88,
      "score": 2.8627621464037447,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        count = 0\n        for i in range(n):\n            count += self.get_count(i)\n        return count\n\n    def get_count(self, i):\n        if i == 0 or i == n - 1:\n            return 1\n        return self.get_count(i-1) + self.get_count(i+1)\n\n\ns = Solution()\nprint s.countBits(10)"
    },
    {
      "rank": 89,
      "score": 2.8387764301640743,
      "candidate": "def count_bin(n):\n    count = 0\n    for i in range(2**n):\n        if sum(i) == sum(i[::-1]):\n            count += 1\n    return count\n\n\nprint(count_bin(4))\nprint(count_bin(8))\nprint(count_bin(16))\nprint(count_bin(32))\nprint(count_bin(64))\nprint(count_bin(128))"
    },
    {
      "rank": 90,
      "score": 2.8369945862504102,
      "candidate": "def count_binary_sequences(n, arr):\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    return sum(count_binary_sequences(n-1, arr) + count_binary_sequences(n-2, arr))\n\n\ndef test():\n    assert count_binary_sequences(2, [0, 1]) == 1\n    assert count_binary_sequences(2, [0, 0]) == 0\n    assert count_binary_sequences(2, [1, 0]) == 1\n    assert count_binary_sequences(2, [0, 1, 0, 0, 0]) == 1\n    assert count_binary_sequences(2, [1, 1, 1]) == 1\n\n\ntest()"
    },
    {
      "rank": 91,
      "score": 2.8322890167541486,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 1:\n            return 0\n        elif n == 2:\n            return 1\n        else:\n            return self.countBits(n - 1) + self.countBits(n - 2)\n\na = Solution()\nprint a.countBits(1)\nprint a.countBits(2)\nprint a.countBits(4)"
    },
    {
      "rank": 92,
      "score": 2.8145839286815364,
      "candidate": "def count_binary_sequences(n):\n    n_bits = 1\n    count = 0\n\n    while (n_bits <= n):\n        n_bits *= 2\n        count += n_bits\n\n    return count\n\n\nprint(count_binary_sequences(5))\nprint(count_binary_sequences(7))\nprint(count_binary_sequences(8))\nprint(count_binary_sequences(11))"
    },
    {
      "rank": 93,
      "score": 2.809466046416186,
      "candidate": "class Solution(object):\n    def countBits(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        if n == 2:\n            return 2\n        if n % 2 == 0:\n            return self.countBits(n - 1) + self.countBits(n - 2)\n        else:\n            return self.countBits(n - 1) + self.countBits(n - 2) + self.countBits(n - 3)"
    },
    {
      "rank": 94,
      "score": 2.789776458528418,
      "candidate": "class Solution:\n    def countBits(self, n: int) -> int:\n        if n < 0:\n            return 0\n        \n        return bin(n).count('1') + bin(n).count('0')\n        \n\n\nprint(Solution().countBits(2))"
    },
    {
      "rank": 95,
      "score": 2.7542814171429266,
      "candidate": "def count_bin_seq_of_2n(n):\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(1, i + 1):\n            if i == j:\n                continue\n            if i & 1 == j & 1:\n                count += 1\n    return count\n\n\nprint(count_bin_seq_of_2n(10))\nprint(count_bin_seq_of_2n(11))\nprint(count_bin_seq_of_2n(12))\nprint(count_bin_seq_of_2n(13))\nprint(count_bin_seq_of_2n(14))\nprint(count_bin_seq_of_2n(15))\nprint(count_bin_seq_of_2n(16))\nprint(count_bin_seq_of_2n(17))\nprint(count_bin_seq_of_2n(18))\nprint(count_bin_seq_of_2n(19))\nprint(count_bin_seq_of_2n(20))\nprint(count_bin_seq_of_2n(21))\nprint(count_bin_seq_of_2n(22))\nprint(count_bin_seq_of_2n(23))\nprint(count_bin_seq_of_2n(24))\nprint(count_bin_seq_of_2n(25))\nprint(count_bin_seq_of_2n(26))\nprint(count_bin_seq_of_2n(27))\nprint(count_bin_seq_of_2n(28))\nprint(count_bin_seq_of_2n(29))\nprint(count_bin_seq_of_2n(30))\nprint(count_bin_seq_of_2n(31))\nprint(count_bin_seq_of_2n(32))\nprint(count_bin_seq_of_2n(33))\nprint(count_bin_seq_of_2n(34))\nprint(count_bin_seq_of_2n(35))\nprint(count_bin_seq_of_2n(36))"
    },
    {
      "rank": 96,
      "score": 2.6455091078829516,
      "candidate": "def count_binary_sequences(n):\n    count = 0\n    for i in range(2**n):\n        if i & (i-1) == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    assert count_binary_sequences(3) == 1\n    assert count_binary_sequences(4) == 1\n    assert count_binary_sequences(5) == 1\n    assert count_binary_sequences(6) == 2\n    assert count_binary_sequences(7) == 2\n    assert count_binary_sequences(8) == 3"
    },
    {
      "rank": 97,
      "score": 2.61278275909789,
      "candidate": "def count_bin_seq(n):\n    return count_bin_seq_helper(2 ** n)\n\n\ndef count_bin_seq_helper(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return count_bin_seq_helper(n-1) + count_bin_seq_helper(n-2)\n\n\nprint(count_bin_seq(3))\nprint(count_bin_seq(4))\nprint(count_bin_seq(5))\nprint(count_bin_seq(6))\nprint(count_bin_seq(7))\nprint(count_bin_seq(8))\nprint(count_bin_seq(9))"
    },
    {
      "rank": 98,
      "score": 2.5971522479021942,
      "candidate": "def count_bin_seq_sum(n):\n    if n==0: return 0\n    if n==1: return 1\n    if n==2: return 2\n    if n==3: return 3\n    if n==4: return 4\n    if n==5: return 5\n    if n==6: return 6\n    if n==7: return 7\n    if n==8: return 8\n    if n==9: return 9\n    if n==10: return 10\n    if n==11: return 11\n    if n==12: return 12\n    if n==13: return 13\n    if n==14: return 14\n    if n==15: return 15\n    if n==16: return 16\n    if n==17: return 17\n    if n==18: return 18\n    if n==19: return 19\n    if n==20: return 20\n    if n==21: return 21\n    if n==22: return 22\n    if n==23: return 23\n    if n==24: return 24\n    if n==25: return 25\n    if n==26: return 26\n    if n==27: return 27\n    if n==28: return 28\n    if n==29: return 29\n    if n==30: return 30\n    if n==31: return 31\n    if n==32: return 32\n    if n==33: return 33\n    if n==34: return 34\n    if n==35: return 35\n    if n==36: return 36\n    if n==37: return 37\n    if n==38: return 38\n    if n==39: return 39\n    if n==40: return 40\n    if n==41: return 41\n    if n==42: return 42\n    if n==43: return 43\n    if n==44: return 44\n    if n==45: return 45\n    if n==46: return 46\n    if n==47: return 47\n    if n==48: return 48\n    if n==49: return 49\n    if n==50: return 50\n    if n==51: return 51\n    if n==52: return 52\n    if n==53: return 53\n    if n==54: return 54\n    if"
    },
    {
      "rank": 99,
      "score": 2.5351348828855493,
      "candidate": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> int:\n        if len(nums) < 2:\n            return 0\n        nums.sort()\n        left = 0\n        right = len(nums) - 1\n        while left < right:\n            if nums[left] + nums[right] == target:\n                return 1\n            elif nums[left] + nums[right] < target:\n                left += 1\n            else:\n                right -= 1\n        return 0\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    print(sol.twoSum([1, 2, 3, 4], 7))\n    print(sol.twoSum([1, 2, 3, 4], 8))\n    print(sol.twoSum([1, 2, 3, 4], 10))\n    print(sol.twoSum([1, 2, 3, 4], 11))\n    print(sol.twoSum([1, 2, 3, 4], 12))"
    },
    {
      "rank": 100,
      "score": 2.4877697681537585,
      "candidate": "def count_binary(n):\n    count = 0\n    for i in range(2**n):\n        if i % 2 == 0:\n            if i == 0:\n                count += 1\n            else:\n                count += count\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_binary(3) == 3\n    assert count_binary(5) == 2\n    assert count_binary(7) == 2\n    assert count_binary(11) == 2\n    assert count_binary(15) == 4"
    }
  ]
}