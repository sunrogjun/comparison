{
  "timestamp": "2025-09-14T13:05:33.637543",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 85,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def divisors(num):\n    if num == 1:\n        return 1\n    else:\n        divisors_count = 0\n        for i in range(2, num):\n            if num % i == 0:\n                divisors_count += 1\n        return divisors_count\n\n\nif __name__ == \"__main__\":\n    print(divisors(1))\n    print(divisors(2))\n    print(divisors(3))\n    print(divisors(4))\n    print(divisors(5))\n    print(divisors(6))\n    print(divisors(7))\n    print(divisors(8))\n    print(divisors(9))\n    print(divisors(10))\n    print(divisors(11))\n    print(divisors(12))\n    print(divisors(13))\n    print(divisors(14))\n    print(divisors(15))\n    print(divisors(16))\n    print(divisors(17))\n    print(divisors(18))\n    print(divisors(19))\n    print(divisors(20))\n    print(divisors(21))\n    print(divisors(22))\n    print(divisors(23))\n    print(divisors(24))\n    print(divisors(25))\n    print(divisors(26))\n    print(divisors(27))\n    print(divisors(28))\n    print(divisors(29))\n    print(divisors(30))\n    print(divisors(31))\n    print(divisors(32))\n    print(divisors(33))\n    print(divisors(34))\n    print(divisors(35))\n    print(divisors(36))\n    print(divisors(37))\n    print(divisors(38))\n    print(divisors(39))\n    print(divisors(40))\n    print(divisors(41))\n    print(divisors(42))\n    print(divisors("
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def divisors(n):\n    return len([x for x in range(1,n) if n % x == 0])\n\n\nif __name__ == \"__main__\":\n    print(divisors(10))\n    print(divisors(12))\n    print(divisors(17))\n    print(divisors(21))\n    print(divisors(23))\n    print(divisors(24))\n    print(divisors(25))\n    print(divisors(31))\n    print(divisors(35))\n    print(divisors(37))\n    print(divisors(41))\n    print(divisors(42))\n    print(divisors(43))\n    print(divisors(44))\n    print(divisors(45))\n    print(divisors(46))\n    print(divisors(47))\n    print(divisors(48))\n    print(divisors(49))\n    print(divisors(50))\n    print(divisors(51))\n    print(divisors(52))\n    print(divisors(53))\n    print(divisors(54))\n    print(divisors(55))\n    print(divisors(56))\n    print(divisors(57))\n    print(divisors(58))\n    print(divisors(59))\n    print(divisors(60))\n    print(divisors(61))\n    print(divisors(62))\n    print(divisors(63))\n    print(divisors(64))\n    print(divisors(65))\n    print(divisors(66))\n    print(divisors(67))\n    print(divisors(68))\n    print(divisors(69))\n    print(divisors(70))\n    print(divisors(71))\n    print(divisors(72))\n    print(divisors(73))\n    print(divisors(74))\n    print(divisors(75))\n    print(divisors(76))\n    print(divisors("
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n\nn = int(input(\"Enter a number: \"))\nprint(divisors(n))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def divisors(num):\n    if num == 0:\n        return 0\n    if num == 1:\n        return 1\n    divisors_count = 0\n    for i in range(1, num):\n        if num % i == 0:\n            divisors_count += 1\n    return divisors_count\n\n\nif __name__ == \"__main__\":\n    print(divisors(1))\n    print(divisors(2))\n    print(divisors(3))\n    print(divisors(4))\n    print(divisors(5))\n    print(divisors(6))\n    print(divisors(7))\n    print(divisors(8))\n    print(divisors(9))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def divisors(num):\n    if num==1:\n        return 1\n    else:\n        return num/2 + divisors(num-1)\n\nprint(divisors(8))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def divisors(n):\n    div = 0\n    for i in range(1,n):\n        if n%i == 0:\n            div += 1\n    return div\n\nn = int(input())\nprint(divisors(n))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nif __name__ == '__main__':\n    print(divisors(7))\n    print(divisors(4))\n    print(divisors(8))\n    print(divisors(2))\n    print(divisors(11))\n    print(divisors(12))\n    print(divisors(19))\n    print(divisors(15))\n    print(divisors(19))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    n = int(input(\"Enter the number: \"))\n    print(divisors(n))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1,num+1):\n        if num % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(6))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count\n\nprint(divisors(10))\nprint(divisors(18))\nprint(divisors(10))\nprint(divisors(17))\nprint(divisors(10))\nprint(divisors(16))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(divisors(50))\nprint(divisors(51))\nprint(divisors(52))\nprint(divisors(53))\nprint(divisors(54))\nprint(divisors(55))\nprint(divisors"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(6))\nprint(divisors(19))\nprint(divisors(5))\nprint(divisors(3))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))\nprint(divisors(7))\nprint(divisors(1))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def divisors(n):\n    divisors = [1]\n    i = 2\n    while i*i <= n:\n        if n%i == 0:\n            divisors.append(i)\n        i += 1\n    return divisors\n\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(divisors("
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def divisors(n):\n    divisors = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors += 1\n    return divisors\n\nprint(divisors(20))\nprint(divisors(1))\nprint(divisors(0))\nprint(divisors(3))\nprint(divisors(5))\nprint(divisors(7))\nprint(divisors(11))\nprint(divisors(13))\nprint(divisors(17))\nprint(divisors(19))\nprint(divisors(23))\nprint(divisors(27))\nprint(divisors(29))\nprint(divisors(31))\nprint(divisors(37))\nprint(divisors(39))\nprint(divisors(41))\nprint(divisors(43))\nprint(divisors(48))\nprint(divisors(50))\nprint(divisors(52))\nprint(divisors(54))\nprint(divisors(58))\nprint(divisors(59))\nprint(divisors(61))\nprint(divisors(62))\nprint(divisors(63))\nprint(divisors(64))\nprint(divisors(65))\nprint(divisors(66))\nprint(divisors(67))\nprint(divisors(68))\nprint(divisors(69))\nprint(divisors(70))\nprint(divisors(71))\nprint(divisors(72))\nprint(divisors(73))\nprint(divisors(74))\nprint(divisors(75))\nprint(divisors(76))\nprint(divisors(77))\nprint(divisors(78))\nprint(divisors(79))\nprint(divisors(80))\nprint(divisors(81))\nprint(divisors(82))\nprint(divisors(83))\nprint(divisors(84))\nprint(divisors(85))\nprint(divisors(86))\nprint(divisors(87))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def divisors(n):\n    div = 1\n    for i in range(1,n):\n        if n%i == 0:\n            div = div + 1\n    return div\n\nprint(divisors(4))\nprint(divisors(8))\nprint(divisors(16))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            count += 1\n    return count\n\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def divisors(n):\n    divisors = [1]\n    for i in range(2, int(n**0.5)+1):\n        if n%i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(15))"
    },
    {
      "rank": 17,
      "score": 9.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, int(n**0.5)+1):\n        if n%i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(15))"
    },
    {
      "rank": 18,
      "score": 9.0,
      "candidate": "def divisors(x):\n    count = 0\n    for i in range(1,x):\n        if x%i == 0:\n            count += 1\n    return count\n\nprint(divisors(20))"
    },
    {
      "rank": 19,
      "score": 9.0,
      "candidate": "def divisors(x):\n    count = 0\n    for i in range(1,x):\n        if x%i == 0:\n            count += 1\n    return count\n\nx = int(input(\"Enter a number: \"))\nprint(divisors(x))"
    },
    {
      "rank": 20,
      "score": 9.0,
      "candidate": "def divisors(n):\n    divisors = [i for i in range(1, n + 1) if n % i == 0]\n    return len(divisors)\n\nprint(divisors(10))\nprint(divisors(100))"
    },
    {
      "rank": 21,
      "score": 9.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nprint(divisors(int(input(\"Enter the number: \"))))"
    },
    {
      "rank": 22,
      "score": 9.0,
      "candidate": "def divisors(num):\n    div = 0\n    for i in range(1,num+1):\n        if num%i == 0:\n            div += 1\n    return div\n\nif __name__ == '__main__':\n    print(divisors(20))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nprint(divisors(5))\nprint(divisors(15))\nprint(divisors(20))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def divisors(num):\n    \"\"\"\n    :type num: int\n    :rtype: int\n    \"\"\"\n    if num == 0:\n        return 0\n    if num == 1:\n        return 1\n    count = 0\n    for i in range(2, num):\n        if num % i == 0:\n            count += 1\n    return count\n\n\ndef main():\n    \"\"\"\n    :rtype: None\n    \"\"\"\n    num = int(input(\"Enter a number: \"))\n    print(\"Number of divisors is: \", divisors(num))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            count += 1\n    return count\n\nprint(divisors(int(input())))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1,n):\n        if n%i == 0:\n            count +=1\n    return count\n\nprint(divisors(20))\nprint(divisors(10))\nprint(divisors(1))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = [1]\n    for i in range(2,n):\n        if n%i == 0:\n            divisors.append(i)\n    return(len(divisors))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def divisors(num):\n    \"\"\"\n    :type num: int\n    :rtype: int\n    \"\"\"\n    if num == 1:\n        return 0\n    if num == 2:\n        return 1\n    if num % 2 == 0:\n        return 2\n    if num % 3 == 0:\n        return 3\n    if num % 5 == 0:\n        return 5\n\n\nprint(divisors(18))\nprint(divisors(12))\nprint(divisors(7))\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(10))\nprint(divisors(7))\nprint(divisors(6))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(4))\nprint(divisors(9))\nprint(divisors(100))\nprint(divisors(5))\nprint(divisors(2))\nprint(divisors(3))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def divisors(num):\n    div = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            div.append(i)\n    return div\n\n\nprint(divisors(10))\nprint(divisors(1024))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def divisors(num):\n    \"\"\"\n    :type num: int\n    :rtype: int\n    \"\"\"\n    if num <= 0:\n        return 0\n    count = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            count += 1\n    return count\n\nprint(divisors(30))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1,num+1):\n        if num % i == 0:\n            count += 1\n    return count\n\nprint(divisors(7))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, num+1):\n        if num%i == 0:\n            count += 1\n    return count\n\nprint(divisors(int(input(\"Enter a number: \"))))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(8))\nprint(divisors(12))\nprint(divisors(20))\nprint(divisors(7))\nprint(divisors(11))\nprint(divisors(5))\nprint(divisors(3))\nprint(divisors(1))\nprint(divisors(2))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def count_divisors(num):\n    count = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_divisors(15))\n    print(count_divisors(4))\n    print(count_divisors(10))\n    print(count_divisors(7))\n    print(count_divisors(2))\n    print(count_divisors(3))\n    print(count_divisors(5))\n    print(count_divisors(12))\n    print(count_divisors(13))\n    print(count_divisors(14))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = [1]\n    for i in range(2, n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\nprint(divisors(15))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = 0\n    for i in range(1,n+1):\n        if n % i == 0:\n            divisors += 1\n    return divisors\n\n\nprint(divisors(6))\nprint(divisors(11))\nprint(divisors(5))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(2))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(10))\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(4))\nprint(divisors(3))\nprint(divisors(7))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divs = [1]\n    for i in range(2, n):\n        if n % i == 0:\n            divs.append(i)\n    return len(divs)\n\n\nprint(divisors(100))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def divisors(x):\n    count = 0\n    for i in range(1, x+1):\n        if x%i == 0:\n            count += 1\n    return count\n\nprint(divisors(2))\nprint(divisors(6))\nprint(divisors(10))\nprint(divisors(3))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def divisors(num):\n    # Check for even number of divisors\n    if num % 2 == 0:\n        return 0\n    # Check for odd number of divisors\n    else:\n        return 1 + sum([divisors(n) for n in range(1, num) if num % n == 0])\n\n\nprint(divisors(15))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, num):\n        if num % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(12))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divs = []\n    for i in range(1,n+1):\n        if n % i == 0:\n            divs.append(i)\n    return divs\n\nprint(divisors(7))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\nif __name__ == '__main__':\n    print(divisors(4))\n    print(divisors(10))\n    print(divisors(12))\n    print(divisors(4))\n    print(divisors(18))\n    print(divisors(3))\n    print(divisors(2))\n    print(divisors(1))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5) + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nprint(divisors(7))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def count_divisors(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\n\ndef test_count_divisors():\n    assert count_divisors(5) == 1\n    assert count_divisors(15) == 2\n    assert count_divisors(22) == 3\n    assert count_divisors(3) == 2\n    assert count_divisors(4) == 1\n    assert count_divisors(6) == 1\n    assert count_divisors(10) == 1\n    assert count_divisors(9) == 2\n    assert count_divisors(4) == 1\n    assert count_divisors(5) == 1\n    assert count_divisors(3) == 1\n    assert count_divisors(7) == 2\n    assert count_divisors(2) == 1\n    assert count_divisors(1) == 0"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def divisors(n):\n    if n == 1:\n        return 0\n    else:\n        return 1 + sum(divisors(x) for x in range(2, n))\n\nprint(divisors(15))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def divisors(num):\n\tcount = 0\n\tfor i in range(1, num + 1):\n\t\tif num % i == 0:\n\t\t\tcount += 1\n\treturn count"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, num + 1):\n        if num % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(15))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nprint(divisors(12))\nprint(divisors(15))\nprint(divisors(19))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def divisors(x):\n    divisors = []\n    for i in range(1, x):\n        if x % i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(15))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = 0\n    for i in range(1,num+1):\n        if num % i == 0:\n            divisors = divisors + 1\n    return divisors\n\nprint(divisors(20))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(11))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(19))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1,n+1):\n        if n%i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(10))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1,n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\nif __name__ == \"__main__\":\n    print(divisors(int(input(\"Enter a number to find divisors of: \"))))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num%i == 0:\n            divisors.append(i)\n    return divisors\n\n\nif __name__ == \"__main__\":\n    print(divisors(25))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def divisors(num):\n    return sum([1 for i in range(1, num+1) if num % i == 0])\n\nprint(divisors(12))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1,n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\nif __name__ == \"__main__\":\n    print(divisors(10))\n    print(divisors(15))\n    print(divisors(20))\n    print(divisors(30))\n    print(divisors(40))\n    print(divisors(50))\n    print(divisors(60))\n    print(divisors(70))\n    print(divisors(80))\n    print(divisors(90))\n    print(divisors(100))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divs = [1]\n    for i in range(2,num+1):\n        if num % i == 0:\n            divs.append(i)\n    return len(divs)\n\nprint(divisors(12))\nprint(divisors(2))\nprint(divisors(1))\nprint(divisors(3))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def divisors(n):\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        return n - 1 + sum(divisors(n-d) for d in range(1, n))\n\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(divisors(50))\nprint(divisors(51"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def divisors(num):\n    if num == 1:\n        return 0\n    else:\n        return (num // 2) + (num // 3) + (num // 5)\n\nprint(divisors(7))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def divisors(n):\n    \"\"\"\n    Function to find the number of divisors of a given integer\n    :param n: integer to be checked\n    :return: count of divisors\n    \"\"\"\n    if n == 1:\n        return 0\n    else:\n        return 1 + divisors(n-1)\n\nprint(divisors(3))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(\"Number of divisors of {} is {}\".format(n, divisors(n)))\n\n\nmain()"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def divisors(num):\n    \"\"\"\n    Return the number of divisors of a given integer.\n    \"\"\"\n    count = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(10))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(divisors(50))\nprint(divisors(51))\nprint(divisors(52))\nprint(divisors(53))\nprint(divisors(54))\nprint(divisors(55))\nprint(divisors(56))\nprint(divisors(57))\nprint(divisors(58))\nprint"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1,n+1):\n        if n % i == 0:\n            count += 1\n    return count\n\nprint(divisors(20))\nprint(divisors(30))\nprint(divisors(40))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n+1):\n        if n%i == 0:\n            divisors.append(i)\n    return len(divisors)\n\nprint(divisors(10))\nprint(divisors(15))\nprint(divisors(20))\nprint(divisors(25))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def divisors(n):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n\n    i = 1\n    while i <= n/2:\n        if n % i == 0:\n            return divisors(n//i) + 1\n        i += 1\n\n    return 0\n\nprint(divisors(20))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = [i for i in range(1,num+1) if num%i == 0]\n    return len(divisors)\n\n\nprint(divisors(7))\nprint(divisors(12))\nprint(divisors(1))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors += 1\n    return divisors\n\n\nif __name__ == '__main__':\n    print(divisors(10))\n    print(divisors(12))\n    print(divisors(4))\n    print(divisors(1))\n    print(divisors(3))\n    print(divisors(5))\n    print(divisors(6))\n    print(divisors(7))\n    print(divisors(8))\n    print(divisors(10))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            count += 1\n    return count\n\nprint(divisors(12))\nprint(divisors(14))\nprint(divisors(13))\nprint(divisors(10))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nprint(divisors(5))\nprint(divisors(16))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = [1]\n    for i in range(2, n):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\n\nprint(divisors(15))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = [i for i in range(1, n+1) if n % i == 0]\n    return len(divisors)\n\n\nprint(divisors(12))\nprint(divisors(5))\nprint(divisors(10))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return divisors\n\n\ndef main():\n    print(divisors(15))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def divisors(num):\n    # if num == 0:\n    #     return 0\n    divisors = []\n    for i in range(1,num+1):\n        if num % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nprint(divisors(3))\nprint(divisors(1))\nprint(divisors(2))\nprint(divisors(7))\nprint(divisors(15))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nprint(divisors(10))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def count_divisors(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 1:\n        return 0\n    divisors = []\n    for i in range(1, n):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nif __name__ == \"__main__\":\n    print(count_divisors(11))\n    print(count_divisors(7))\n    print(count_divisors(17))\n    print(count_divisors(14))\n    print(count_divisors(13))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def divisors(x):\n    if x <= 0:\n        return 0\n    divisors = [x]\n    for i in range(2, x):\n        if x % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\nprint(divisors(15))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1,n+1):\n        if n%i == 0:\n            count += 1\n    return count\n\nprint(divisors(12))\nprint(divisors(15))\nprint(divisors(14))\nprint(divisors(1))\nprint(divisors(1.5))\nprint(divisors(2))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def divisors(num):\n    count = 0\n    for i in range(1, int(num**0.5)+1):\n        if num % i == 0:\n            count += 1\n    return count"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1,n):\n        if n%i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(16))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def count_divisors(num):\n    # Find all the divisors of num\n    divisors = [1]\n    for i in range(2, num + 1):\n        if num % i == 0:\n            divisors.append(i)\n\n    return len(divisors)\n\nprint(count_divisors(12))\nprint(count_divisors(17))\nprint(count_divisors(19))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def divisors(n):\n    if n == 1:\n        return 0\n    return 1 + sum(divisors(i) for i in range(2, int(n**0.5)+1))\n\nif __name__ == '__main__':\n    print(divisors(int(input())))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n+1):\n        if n % i == 0:\n            divisors.append(i)\n    return divisors\n\nprint(divisors(5))\nprint(divisors(7))\nprint(divisors(11))\nprint(divisors(13))\nprint(divisors(17))\nprint(divisors(19))\nprint(divisors(23))\nprint(divisors(29))\nprint(divisors(27))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1, n):\n        if n % i == 0:\n            count += 1\n    return count\n\n\nprint(divisors(11))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def divisors(n):\n    if n == 1:\n        return 0\n    div = []\n    for i in range(1, n+1):\n        if n%i == 0:\n            div.append(i)\n    return len(div)\n\nprint(divisors(10))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = 0\n    for i in range(1, n):\n        if n % i == 0:\n            divisors += 1\n    return divisors\n\n\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def divisors(n):\n    count = 0\n    for i in range(1,n+1):\n        if n%i == 0:\n            count += 1\n    return count\n\nprint(divisors(10))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nprint(divisors(5))\nprint(divisors(10))\nprint(divisors(20))\nprint(divisors(30))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def count_divisors(number):\n    divisors = 0\n    for i in range(1, number+1):\n        if number % i == 0:\n            divisors += 1\n    return divisors\n\n\nprint(count_divisors(4))\nprint(count_divisors(3))\nprint(count_divisors(2))\nprint(count_divisors(6))\nprint(count_divisors(5))\nprint(count_divisors(8))\nprint(count_divisors(7))\nprint(count_divisors(9))\nprint(count_divisors(1))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = []\n    for i in range(1,n):\n        if n%i == 0:\n            divisors.append(i)\n    return len(divisors)\n\nprint(divisors(30))"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def divisors(n):\n    # Create a dictionary to hold divisors\n    divisors = {}\n    # Initialize the number of divisors to zero\n    divisors[0] = 0\n    # Iterate through all divisors\n    for div in range(1, n + 1):\n        # If the current divisor is divisible by any other divisor, then it is a divisor\n        if n % div == 0:\n            # If the divisor is not already present in the dictionary, then add it to the dictionary\n            if div not in divisors:\n                divisors[div] = 1\n            # Otherwise, increment the number of divisors by 1\n            else:\n                divisors[div] += 1\n    return divisors\n\n\nif __name__ == \"__main__\":\n    print(divisors(10))\n    print(divisors(5))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def divisors(num):\n    # num is an integer\n    divisors = [1]\n    # print(divisors)\n    for i in range(2, num):\n        if num % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\nprint(divisors(11))\nprint(divisors(100))\nprint(divisors(999))"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def divisors(n):\n    div = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            div += 1\n    return div\n\n\nprint(divisors(10))"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num):\n        if num % i == 0:\n            divisors.append(i)\n    return len(divisors)\n\n\nprint(divisors(15))\nprint(divisors(20))\nprint(divisors(30))\nprint(divisors(4))\nprint(divisors(1))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "def divisors(num):\n    divisors = []\n    for i in range(1, num+1):\n        if num%i == 0:\n            divisors.append(i)\n    return divisors\n\n\nprint(divisors(10))"
    },
    {
      "rank": 98,
      "score": 8.0,
      "candidate": "def divisors(n):\n    divisors = [i for i in range(n+1) if n%i == 0]\n    return len(divisors)\n\n\nif __name__ == \"__main__\":\n    print(divisors(5))\n    print(divisors(15))"
    },
    {
      "rank": 99,
      "score": 8.0,
      "candidate": "def divisors(n):\n    if n < 1:\n        return 0\n\n    divisors = []\n    for i in range(1, n):\n        if n % i == 0:\n            divisors.append(i)\n\n    return len(divisors)\n\n\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(7))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def divisors(n):\n    if n == 1:\n        return 0\n    else:\n        return n * divisors(n - 1)\n\n\nprint(divisors(2))\nprint(divisors(3))\nprint(divisors(4))\nprint(divisors(5))\nprint(divisors(6))\nprint(divisors(7))\nprint(divisors(8))\nprint(divisors(9))\nprint(divisors(10))\nprint(divisors(11))\nprint(divisors(12))\nprint(divisors(13))\nprint(divisors(14))\nprint(divisors(15))\nprint(divisors(16))\nprint(divisors(17))\nprint(divisors(18))\nprint(divisors(19))\nprint(divisors(20))\nprint(divisors(21))\nprint(divisors(22))\nprint(divisors(23))\nprint(divisors(24))\nprint(divisors(25))\nprint(divisors(26))\nprint(divisors(27))\nprint(divisors(28))\nprint(divisors(29))\nprint(divisors(30))\nprint(divisors(31))\nprint(divisors(32))\nprint(divisors(33))\nprint(divisors(34))\nprint(divisors(35))\nprint(divisors(36))\nprint(divisors(37))\nprint(divisors(38))\nprint(divisors(39))\nprint(divisors(40))\nprint(divisors(41))\nprint(divisors(42))\nprint(divisors(43))\nprint(divisors(44))\nprint(divisors(45))\nprint(divisors(46))\nprint(divisors(47))\nprint(divisors(48))\nprint(divisors(49))\nprint(divisors(50))\nprint(divisors(51))\nprint(divisors(52))\nprint(divisors(53))\nprint(div"
    }
  ]
}