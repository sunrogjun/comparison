{
  "timestamp": "2025-09-14T14:28:06.407931",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 273,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def check_equal(list_of_items, string):\n    return all(item == string for item in list_of_items)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def check(list, string):\n    return list == string\n\nprint(check([1,2,3,4], \"3\"))\nprint(check([1,2,3,4], \"1\"))\nprint(check([1,2,3,4], \"2\"))\nprint(check([1,2,3,4], \"3\"))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def check_string(list, string):\n    for item in list:\n        if item!= string:\n            return False\n    return True\n\n\ndef main():\n    list = ['a', 'b', 'c', 'a', 'd', 'e']\n    string = 'd'\n    print(check_string(list, string))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def equal(string, list):\n    for i in list:\n        if string == i:\n            return True\n    return False\n\n\nprint(equal(\"ab\", [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,173,164,165,166,167,168,168,169,170,173,170,174,175,176,179,180,186,189,190,191,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,208,210,211,212,213,214,215,216,217,218,219,230,231,232,233,234,235,236,237,238,239,240,241,242,"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def check_list(list, string):\n    if set(string) == set(list):\n        return True\n    else:\n        return False\n\nprint(check_list([\"a\",\"b\",\"c\",\"d\",\"e\"], \"e\"))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def all_equal(list_, string):\n    for i in list_:\n        if i!= string:\n            return False\n    return True\n\nprint(all_equal([1, 2, 3], \"3\"))\nprint(all_equal([1, 2, 3], \"1\"))\nprint(all_equal([1, 2, 3], \"2\"))\nprint(all_equal([1, 2, 3], \"3\"))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def check_equal(list, string):\n    if list == string:\n        return True\n    else:\n        return False\n\nprint(check_equal([1,2,3,4,5,6,7,8,9], \"1234\"))\nprint(check_equal([1,2,3,4,5,6,7,8,9], \"123456\"))\nprint(check_equal([1,2,3,4,5,6,7,8,9], \"123456\"))\nprint(check_equal([1,2,3,4,5,6,7,8,9], \"123456\"))"
    },
    {
      "rank": 8,
      "score": 9.370583536698913,
      "candidate": "def check_equal(list_, string):\n    for i in range(len(list_)):\n        if list_[i]!= string:\n            return False\n    return True\n\nlist = ['a', 'b', 'c', 'd']\nstring = 'c'\n\nprint(check_equal(list, string))"
    },
    {
      "rank": 9,
      "score": 9.234050852198141,
      "candidate": "def equal_string(list_of_string, string):\n    return set(list_of_string) == set(string)\n\n\nif __name__ == '__main__':\n    print(equal_string([\"a\", \"a\", \"a\", \"b\"], \"a\"))"
    },
    {
      "rank": 10,
      "score": 9.226766272351448,
      "candidate": "def check_equal(list_1, string):\n    return list(set(list_1) == set(string))\n\n\nprint(check_equal([1, 2, 3, 4, 5], \"hello\"))\nprint(check_equal([1, 2, 3, 4, 5], \"world\"))"
    },
    {
      "rank": 11,
      "score": 9.21346272767743,
      "candidate": "def check_equal(lst, string):\n    if len(lst)!= len(string):\n        return False\n\n    for i in range(len(lst)):\n        if lst[i]!= string[i]:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    lst = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]\n    string = \"b\"\n\n    print(check_equal(lst, string))"
    },
    {
      "rank": 12,
      "score": 9.183391466815202,
      "candidate": "def check(list, string):\n    for i in range(len(list)):\n        if list[i]!= string:\n            return False\n    return True\n\nprint(check([1, 2, 3, 4, 5], \"5\"))\nprint(check([1, 2, 3, 4, 5], \"4\"))\nprint(check([1, 2, 3, 4, 5], \"3\"))\nprint(check([1, 2, 3, 4, 5], \"2\"))"
    },
    {
      "rank": 13,
      "score": 9.122564458729856,
      "candidate": "def string_equal(string1, string2):\n    if len(string1)!= len(string2):\n        return False\n\n    for i in range(len(string1)):\n        if string1[i]!= string2[i]:\n            return False\n\n    return True\n\n\nprint(string_equal('hello', 'hello'))\nprint(string_equal('hello', 'hello'))\nprint(string_equal('hello', 'world'))\nprint(string_equal('hello', 'goodbye'))"
    },
    {
      "rank": 14,
      "score": 8.95994420569242,
      "candidate": "def equal_string(list, string):\n    for i in range(len(list)):\n        if list[i]!= string:\n            return False\n    return True\n\ndef main():\n    list1 = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\n    list2 = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"]\n    list3 = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"]\n\n    print(equal_string(list1, \"e\"))\n    print(equal_string(list2, \"e\"))\n    print(equal_string(list3, \"e\"))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 8.946210893390457,
      "candidate": "def check_equality(lst, s):\n    return all(x == s for x in lst)\n\n\nprint(check_equality([1, 2, 3, 4, 5, 6], \"1\"))\nprint(check_equality([1, 2, 3, 4, 5, 6], \"2\"))\nprint(check_equality([1, 2, 3, 4, 5, 6], \"3\"))\nprint(check_equality([1, 2, 3, 4, 5, 6], \"4\"))\nprint(check_equality([1, 2, 3, 4, 5, 6], \"5\"))\nprint(check_equality([1, 2, 3, 4, 5, 6], \"6\"))"
    },
    {
      "rank": 16,
      "score": 8.932217008005624,
      "candidate": "def check_string_equality(list_of_items, string_to_check):\n    for i in list_of_items:\n        if i!= string_to_check:\n            return False\n    return True\n\n\nprint(check_string_equality([1, 2, 3, 4, 5], \"b\"))\nprint(check_string_equality([1, 2, 3, 4, 5], \"c\"))"
    },
    {
      "rank": 17,
      "score": 8.92876693971089,
      "candidate": "def equal(lis, s):\n    for i in lis:\n        if i!= s:\n            return False\n    return True\n\n\nprint(equal([1, 2, 3, 4, 5, 6], \"5\"))\nprint(equal([1, 2, 3, 4, 5, 6], \"1\"))\nprint(equal([1, 2, 3, 4, 5, 6], \"2\"))\nprint(equal([1, 2, 3, 4, 5, 6], \"3\"))\nprint(equal([1, 2, 3, 4, 5, 6], \"4\"))"
    },
    {
      "rank": 18,
      "score": 8.910084504002544,
      "candidate": "def is_equal(list, string):\n    if len(list) == len(string):\n        for i in range(len(list)):\n            if list[i]!= string[i]:\n                return False\n    else:\n        return False\n    return True\n\nlist = ['a', 'b', 'c', 'd']\nstring = 'a'\nprint(is_equal(list, string))"
    },
    {
      "rank": 19,
      "score": 8.85571690049604,
      "candidate": "def check_string(lst, string):\n    for i in range(len(lst)):\n        if lst[i]!= string:\n            return False\n    return True\n\nprint(check_string([1, 2, 3, 4, 5], 'a'))"
    },
    {
      "rank": 20,
      "score": 8.850707355641543,
      "candidate": "def check_equal_to(list_1, list_2, string):\n    if len(list_1)!= len(list_2):\n        return False\n\n    for i in range(0, len(list_1)):\n        if list_1[i]!= list_2[i]:\n            return False\n\n    return True"
    },
    {
      "rank": 21,
      "score": 8.81367773444215,
      "candidate": "def check_list(l, s):\n    for i in l:\n        if i!= s:\n            return False\n    return True\n\nprint(check_list([1, 2, 3, 4], '2'))\nprint(check_list([1, 2, 3, 4], '3'))\nprint(check_list([1, 2, 3, 4], '4'))\nprint(check_list([1, 2, 3, 4], '5'))\nprint(check_list([1, 2, 3, 4], '6'))"
    },
    {
      "rank": 22,
      "score": 8.701078161001123,
      "candidate": "def check_string(lst, string):\n    for i in range(len(lst)):\n        if lst[i]!= string:\n            return False\n    return True\n\n\nlst = ['a', 'b', 'c', 'd']\nstring = 'a'\nprint(check_string(lst, string))"
    },
    {
      "rank": 23,
      "score": 8.625262456968262,
      "candidate": "def check_equal(list_of_strings, string):\n    for i in range(len(list_of_strings)):\n        if list_of_strings[i]!= string:\n            return False\n    return True\n\ndef main():\n    print(check_equal([\"a\",\"b\",\"c\"], \"b\"))\n    print(check_equal([\"a\",\"b\",\"c\"], \"a\"))\n    print(check_equal([\"a\",\"b\",\"c\"], \"a\"))\n    print(check_equal([\"a\",\"b\",\"c\"], \"c\"))\n    print(check_equal([\"a\",\"b\",\"c\"], \"b\"))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 24,
      "score": 8.623000730200317,
      "candidate": "def check_equal(lis, string):\n    return all(x == string for x in lis)\n\n\nlis = [\"apple\", \"banana\", \"cherry\"]\nstring = \"apple\"\n\nprint(check_equal(lis, string))"
    },
    {
      "rank": 25,
      "score": 8.616253589228675,
      "candidate": "def check_equal_list(list, string):\n    if list == []:\n        return True\n    for item in list:\n        if item!= string:\n            return False\n    return True\n\ndef main():\n    list = ['a','b','c']\n    string = 'b'\n    print(check_equal_list(list, string))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 26,
      "score": 8.610076160146226,
      "candidate": "def check_string(list_of_items, string):\n    return set(list_of_items) == set(string)\n\n\nprint(check_string([1, 2, 3, 4, 5], \"4\"))\nprint(check_string([1, 2, 3, 4, 5], \"3\"))\nprint(check_string([1, 2, 3, 4, 5], \"5\"))"
    },
    {
      "rank": 27,
      "score": 8.608819999274287,
      "candidate": "def is_equal(lst, string):\n  return all(x == string for x in lst)\n\nprint(is_equal([1, 2, 3, 4, 5], \"a\"))\nprint(is_equal([1, 2, 3, 4, 5], \"b\"))\nprint(is_equal([1, 2, 3, 4, 5], \"c\"))\nprint(is_equal([1, 2, 3, 4, 5], \"d\"))"
    },
    {
      "rank": 28,
      "score": 8.606486429141842,
      "candidate": "def check_equal_string(list, string):\n    for i in list:\n        if i!= string:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    print(check_equal_string([1, 2, 3, 4, 5], \"5\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"4\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"3\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"4\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"1\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"5\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"3\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"4\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"2\"))\n    print(check_equal_string([1, 2, 3, 4, 5], \"1\"))"
    },
    {
      "rank": 29,
      "score": 8.53012858503943,
      "candidate": "def check_equal(lis, s):\n    if len(lis)!= len(s):\n        return False\n    for i in lis:\n        if i!= s:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    print(check_equal([1, 2, 3, 4, 5, 6], 'a'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'b'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'c'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'd'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'a'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'e'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'f'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'g'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'h'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'i'))\n    print(check_equal([1, 2, 3, 4, 5, 6], 'j'))"
    },
    {
      "rank": 30,
      "score": 8.499905739299377,
      "candidate": "def is_equal(arr, str):\n    if len(arr) == len(str):\n        for i in range(len(arr)):\n            if arr[i]!= str[i]:\n                return False\n        return True\n    else:\n        return False\n\n\nprint(is_equal([1, 2, 3, 4], \"abc\"))\nprint(is_equal([1, 2, 3, 4, 5], \"abc\"))\nprint(is_equal([1, 2, 3, 4, 5, 6], \"abc\"))"
    },
    {
      "rank": 31,
      "score": 8.492983219118464,
      "candidate": "def equal_to(l, s):\n    return all(s in item for item in l)\n\n\nassert equal_to([1, 2, 3, 4, 5], \"1\")\nassert equal_to([1, 2, 3, 4, 5], \"2\")\nassert equal_to([1, 2, 3, 4, 5], \"3\")\nassert equal_to([1, 2, 3, 4, 5], \"4\")\nassert not equal_to([1, 2, 3, 4, 5], \"1\")\nassert not equal_to([1, 2, 3, 4, 5], \"2\")"
    },
    {
      "rank": 32,
      "score": 8.490324832712195,
      "candidate": "def all_equal_string(lst, string):\n    for i in lst:\n        if i!= string:\n            return False\n    return True\n\n\nlst = [\"apple\", \"banana\", \"cherry\"]\nstring = \"apple\"\n\nprint(all_equal_string(lst, string))"
    },
    {
      "rank": 33,
      "score": 8.478208546788407,
      "candidate": "def is_equal(lst, string):\n    return all(string in item for item in lst)\n\nprint(is_equal([1, 2, 3, 4, 5], \"ab\"))\nprint(is_equal([1, 2, 3, 4, 5], \"abcd\"))\nprint(is_equal([1, 2, 3, 4, 5], \"abcdabcd\"))\nprint(is_equal([1, 2, 3, 4, 5], \"abcdabcdabcdabcd\"))\nprint(is_equal([1, 2, 3, 4, 5], \"abcdabcdabcdabcd\"))"
    },
    {
      "rank": 34,
      "score": 8.437695832075478,
      "candidate": "def check_if_all_items_equal(list_of_strings, string_to_check):\n    if len(list_of_strings) == len(set(list_of_strings)):\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    print(check_if_all_items_equal([\"a\", \"b\", \"c\"], \"a\"))\n    print(check_if_all_items_equal([\"a\", \"b\", \"c\"], \"a\"))\n    print(check_if_all_items_equal([\"a\", \"b\", \"c\"], \"b\"))\n    print(check_if_all_items_equal([\"a\", \"b\", \"c\"], \"d\"))"
    },
    {
      "rank": 35,
      "score": 8.426531424889468,
      "candidate": "def check(list, string):\n    for i in list:\n        if i!= string:\n            return False\n    return True\n\nprint(check([1,2,3,4,5,6,7], \"test\"))"
    },
    {
      "rank": 36,
      "score": 8.386620303250325,
      "candidate": "def check_equal(list_1, string):\n\n    for i in range(len(list_1)):\n        if list_1[i]!= string:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n\n    list_1 = ['a', 'b', 'c', 'd', 'e']\n    string = 'e'\n\n    assert check_equal(list_1, string) == True"
    },
    {
      "rank": 37,
      "score": 8.375312293858853,
      "candidate": "def check_equal_string(list_of_items, string):\n    return all(item == string for item in list_of_items)\n\n\nif __name__ == \"__main__\":\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"c\") is True\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"b\") is False\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"a\") is False\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"b\") is True\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"d\") is False\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"a\") is True\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"b\") is False\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"b\") is True\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"d\") is False\n    assert check_equal_string([\"a\", \"b\", \"c\"], \"d\") is True"
    },
    {
      "rank": 38,
      "score": 8.351614956112536,
      "candidate": "def all_equal(lst, string):\n    for i in lst:\n        if i!= string:\n            return False\n    return True\n\nlst = [1,2,3,4,5]\nstring = 'a'\n\nprint(all_equal(lst, string))"
    },
    {
      "rank": 39,
      "score": 8.331556294201176,
      "candidate": "def all_equal(string, list):\n    return string == \"\".join(list)\n\nprint(all_equal(\"\", [\"a\", \"b\", \"c\"]))\nprint(all_equal(\"\", [\"a\", \"b\", \"c\", \"d\"]))\nprint(all_equal(\"\", [\"a\", \"b\"]))\nprint(all_equal(\"\", []))\nprint(all_equal(\"\", [\"a\", \"b\", \"c\", \"d\"]))"
    },
    {
      "rank": 40,
      "score": 8.327375965969855,
      "candidate": "def check_equality(lst, string):\n    if len(string)!= len(lst):\n        return False\n\n    for i in range(0, len(string)):\n        if lst[i]!= string[i]:\n            return False\n\n    return True\n\n\nprint(check_equality([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], \"1\"))\nprint(check_equality([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], \"1\"))"
    },
    {
      "rank": 41,
      "score": 8.327367757082776,
      "candidate": "def check_equal(lst, string):\n    return all(item == string for item in lst)\n\nprint(check_equal([1, 2, 3, 4, 5], \"1\"))\nprint(check_equal([1, 2, 3, 4, 5], \"2\"))\nprint(check_equal([1, 2, 3, 4, 5], \"3\"))\nprint(check_equal([1, 2, 3, 4, 5], \"4\"))\nprint(check_equal([1, 2, 3, 4, 5], \"5\"))\nprint(check_equal([1, 2, 3, 4, 5], \"6\"))\nprint(check_equal([1, 2, 3, 4, 5], \"7\"))\nprint(check_equal([1, 2, 3, 4, 5], \"8\"))\nprint(check_equal([1, 2, 3, 4, 5], \"9\"))\nprint(check_equal([1, 2, 3, 4, 5], \"10\"))"
    },
    {
      "rank": 42,
      "score": 8.294940769211511,
      "candidate": "def check_list(list, string):\n    return all(str(item) == string for item in list)"
    },
    {
      "rank": 43,
      "score": 8.2938925966498,
      "candidate": "def check_equal(list_a, string):\n    for i in range(len(list_a)):\n        if list_a[i]!= string:\n            return False\n    return True\n\n\nprint(check_equal([1, 2, 3, 4, 5], \"a\"))\nprint(check_equal([1, 2, 3, 4, 5], \"b\"))\nprint(check_equal([1, 2, 3, 4, 5], \"c\"))\nprint(check_equal([1, 2, 3, 4, 5], \"d\"))"
    },
    {
      "rank": 44,
      "score": 8.251903304236286,
      "candidate": "def is_equal(list_, string):\n    return list(set(list_) == set(string))\n\n\nprint(is_equal([1, 2, 3, 4, 5], \"abc\"))\nprint(is_equal([1, 2, 3, 4, 5], \"bbb\"))\nprint(is_equal([1, 2, 3, 4, 5], \"ccc\"))\nprint(is_equal([1, 2, 3, 4, 5], \"ddd\"))"
    },
    {
      "rank": 45,
      "score": 8.214125058964552,
      "candidate": "def check(l,s):\n    for i in range(len(l)):\n        if l[i]!= s[i]:\n            return False\n    return True\n\n\nl = [\"one\",\"two\",\"three\",\"four\",\"five\",\"six\",\"seven\",\"eight\",\"nine\",\"ten\",\"eleven\",\"twelve\",\"thirteen\",\"fourteen\",\"fifteen\",\"sixteen\",\"seventeen\",\"eighteen\",\"nineteen\"]\ns = \"twenty\"\n\nprint(check(l,s))\nprint(check(l,s[::-1]))"
    },
    {
      "rank": 46,
      "score": 8.209707251476969,
      "candidate": "def check_equal(list1, string):\n    for i in range(len(list1)):\n        if list1[i]!= string:\n            return False\n    return True\n\nprint(check_equal([1,2,3,4], 'a'))\nprint(check_equal([1,2,3,4], 'b'))\nprint(check_equal([1,2,3,4], 'c'))\nprint(check_equal([1,2,3,4], 'd'))\nprint(check_equal([1,2,3,4], 'e'))"
    },
    {
      "rank": 47,
      "score": 8.179564342560925,
      "candidate": "def check_list_equal(list, string):\n    # Your code here\n    return all(x == string for x in list)\n\n\nprint(check_list_equal([1, 2, 3, 4, 5], 'a'))\nprint(check_list_equal([1, 2, 3, 4, 5], 'b'))\nprint(check_list_equal([1, 2, 3, 4, 5], 'c'))\nprint(check_list_equal([1, 2, 3, 4, 5], 'd'))\nprint(check_list_equal([1, 2, 3, 4, 5], 'e'))"
    },
    {
      "rank": 48,
      "score": 8.163300679823958,
      "candidate": "def compare_to_string(list, string):\n    if len(list)!= len(string):\n        return False\n    for i in range(len(list)):\n        if list[i]!= string[i]:\n            return False\n    return True\n\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"6\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"4\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"1\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"5\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"7\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"2\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"3\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"1\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"4\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"5\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"6\"))\nprint(compare_to_string([1, 2, 3, 4, 5, 6, 7], \"1\"))"
    },
    {
      "rank": 49,
      "score": 8.143591138329747,
      "candidate": "def check_equal_string(list, string):\n    return all(item == string for item in list)\n\n\nif __name__ == \"__main__\":\n    print(check_equal_string([1, 2, 3], \"a\"))\n    print(check_equal_string([1, 2, 3], \"b\"))\n    print(check_equal_string([1, 2, 3], \"a\"))\n    print(check_equal_string([1, 2, 3], \"c\"))"
    },
    {
      "rank": 50,
      "score": 8.105983444291466,
      "candidate": "def check_eq(list_, string):\n    if list_ == list(string):\n        return True\n    else:\n        return False\n\nprint(check_eq([1,2,3,4], \"abc\"))"
    },
    {
      "rank": 51,
      "score": 8.093417897505768,
      "candidate": "def check_equal(my_list, my_string):\n    if len(my_list)!= len(my_string):\n        return False\n\n    for i in range(len(my_list)):\n        if my_list[i]!= my_string[i]:\n            return False\n\n    return True\n\n\nprint(check_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"9\"))\nprint(check_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"9\"))"
    },
    {
      "rank": 52,
      "score": 8.08452234024709,
      "candidate": "def check_string(list_of_items, string):\n    return all(item == string for item in list_of_items)\n\nprint(check_string([1,2,3,4,5], \"1\"))\nprint(check_string([1,2,3,4,5], \"2\"))\nprint(check_string([1,2,3,4,5], \"3\"))\nprint(check_string([1,2,3,4,5], \"4\"))\nprint(check_string([1,2,3,4,5], \"5\"))"
    },
    {
      "rank": 53,
      "score": 8.040197642997851,
      "candidate": "def equal_string(string, list):\n    if len(string)!= len(list):\n        return False\n    for i in range(len(string)):\n        if string[i]!= list[i]:\n            return False\n    return True\n\nprint(equal_string(\"abc\", [\"a\", \"b\", \"c\"]))"
    },
    {
      "rank": 54,
      "score": 8.024835682833125,
      "candidate": "def string_equality(lst, s):\n    for i in range(len(lst)):\n        if lst[i]!= s:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    assert string_equality([1, 2, 3, 4], \"1\") == True\n    assert string_equality([1, 2, 3, 4], \"2\") == False\n    assert string_equality([1, 2, 3, 4, 5], \"1\") == True\n    assert string_equality([1, 2, 3, 4, 5], \"2\") == False\n    assert string_equality([1, 2, 3, 4, 5, 6], \"1\") == False\n    assert string_equality([1, 2, 3, 4, 5, 6], \"5\") == True\n    assert string_equality([1, 2, 3, 4, 5, 6, 7], \"1\") == False\n    assert string_equality([1, 2, 3, 4, 5, 6, 7], \"2\") == False"
    },
    {
      "rank": 55,
      "score": 7.990432406683839,
      "candidate": "def compare_lists(list1, list2, string):\n    for i in range(len(list1)):\n        if list1[i]!= list2[i] or i == len(list1)-1:\n            return False\n    return True\n\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [1, 2, 3, 4, 5]\nstring = \"hello\"\nprint(compare_lists(list1, list2, string))"
    },
    {
      "rank": 56,
      "score": 7.938028884277233,
      "candidate": "def is_equal(my_list, my_string):\n    my_list_set = set(my_list)\n    my_string_set = set(my_string)\n\n    if my_string_set.issubset(my_list_set):\n        return True\n    else:\n        return False"
    },
    {
      "rank": 57,
      "score": 7.915588979966494,
      "candidate": "def check_if_string_equal(list, string):\n    if len(list)!= len(string):\n        return False\n    for i in range(len(list)):\n        if list[i]!= string[i]:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert check_if_string_equal([\"a\", \"a\", \"b\"], \"b\") == True\n    assert check_if_string_equal([\"a\", \"b\"], \"a\") == False\n    assert check_if_string_equal([\"a\", \"a\"], \"a\") == True\n    assert check_if_string_equal([\"a\", \"b\"], \"b\") == False\n    assert check_if_string_equal([\"a\", \"b\"], \"c\") == True\n    assert check_if_string_equal([\"a\", \"b\"], \"c\") == False"
    },
    {
      "rank": 58,
      "score": 7.84634113240411,
      "candidate": "def check_equal(list_, string):\n    for i in range(len(list_)):\n        if list_[i]!= string:\n            return False\n    return True\n\nprint(check_equal([1, 2, 3, 4, 5], 'a'))\nprint(check_equal([1, 2, 3, 4, 5], 'b'))\nprint(check_equal([1, 2, 3, 4, 5], 'c'))\nprint(check_equal([1, 2, 3, 4, 5], 'd'))\nprint(check_equal([1, 2, 3, 4, 5], 'e'))"
    },
    {
      "rank": 59,
      "score": 7.780351419995229,
      "candidate": "def string_equality(lst, str):\n    if len(lst)!= len(set(lst)):\n        return False\n    for item in lst:\n        if item!= str:\n            return False\n    return True\n\n\nlst = [\"a\", \"b\", \"c\"]\nstr = \"b\"\nprint(string_equality(lst, str))"
    },
    {
      "rank": 60,
      "score": 7.738292593776799,
      "candidate": "def check_equal(list_1, list_2, string):\n    if len(list_1)!= len(list_2):\n        return False\n    for i in range(len(list_1)):\n        if list_1[i]!= list_2[i]:\n            return False\n    return True\n\nprint(check_equal([1,2,3,4,5], [1,2,3,4,5], \"abc\"))\nprint(check_equal([1,2,3,4,5], [1,2,3,4,5], \"ab\"))"
    },
    {
      "rank": 61,
      "score": 7.7320703513377165,
      "candidate": "def check_string(str1, str2):\n    if str1 == str2:\n        return True\n    else:\n        return False\n\n\nprint(check_string(\"ab\", \"a\"))\nprint(check_string(\"ab\", \"ab\"))\nprint(check_string(\"ab\", \"abc\"))\nprint(check_string(\"ab\", \"bab\"))\nprint(check_string(\"ab\", \"ab\"))\nprint(check_string(\"ab\", \"ab\"))\nprint(check_string(\"ab\", \"aba\"))"
    },
    {
      "rank": 62,
      "score": 7.705183449260731,
      "candidate": "def check_string(str, lst):\n    return all(item == str for item in lst)\n\n\nprint(check_string('abcd', ['a', 'b', 'c', 'd', 'e']))\nprint(check_string('abcd', ['a', 'b', 'c', 'd', 'e']))\nprint(check_string('abcd', ['a', 'b', 'c', 'd', 'e', 'f']))"
    },
    {
      "rank": 63,
      "score": 7.5819855281879285,
      "candidate": "def check_equal_to(my_list, string):\n    return all([my_list[i] == string for i in range(len(my_list))])\n\nmy_list = [\"a\", \"b\", \"c\", \"a\", \"a\"]\nstring = \"b\"\n\nprint(check_equal_to(my_list, string))"
    },
    {
      "rank": 64,
      "score": 7.562924366763077,
      "candidate": "def check_equal_string(list_of_items, string):\n    for item in list_of_items:\n        if item!= string:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    list_of_items = ['a', 'b', 'c']\n    string = 'b'\n    print(check_equal_string(list_of_items, string))"
    },
    {
      "rank": 65,
      "score": 7.4878043221155455,
      "candidate": "def check_equal(lst, str):\n    if len(lst) == len(str):\n        return True\n    else:\n        return False\n\n\nprint(check_equal([1, 2, 3, 4, 5], \"a\"))\nprint(check_equal([1, 2, 3, 4, 5], \"b\"))\nprint(check_equal([1, 2, 3, 4, 5], \"c\"))\nprint(check_equal([1, 2, 3, 4, 5], \"d\"))"
    },
    {
      "rank": 66,
      "score": 7.134571892399572,
      "candidate": "def all_equal(lst, str):\n    return all(x == str for x in lst)\n\nlst = [1, 2, 3, 4, 5]\nstr = \"hello\"\n\nprint(all_equal(lst, str))"
    },
    {
      "rank": 67,
      "score": 3.5178301511787287,
      "candidate": "def check_string(list_of_strings, string_to_check):\n    for i in list_of_strings:\n        if i!= string_to_check:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    list_of_strings = [\"a\", \"b\", \"c\"]\n    string_to_check = \"b\"\n    print(check_string(list_of_strings, string_to_check))"
    },
    {
      "rank": 68,
      "score": 3.4983205814333282,
      "candidate": "def check_equal_string(list_of_items, string):\n    return list_of_items == string\n\n\nprint(check_equal_string([1,2,3], \"hello\"))\nprint(check_equal_string([1,2,3,4,5,6], \"world\"))\nprint(check_equal_string([1,2,3,4,5,6,7,8,9], \"goodbye\"))\nprint(check_equal_string([1,2,3,4,5,6,7,8,9], \"hello\"))\nprint(check_equal_string([1,2,3,4,5,6,7,8,9], \"goodbye\"))"
    },
    {
      "rank": 69,
      "score": 3.3594215569144312,
      "candidate": "def check_equality(list, string):\n    if list == string:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    list = [\"a\", \"b\", \"c\"]\n    string = \"a\"\n    print(check_equality(list, string))"
    },
    {
      "rank": 70,
      "score": 3.311236720018705,
      "candidate": "def check_equality(list, string):\n    if len(list)!= len(string):\n        return False\n\n    for i in range(len(list)):\n        if list[i]!= string[i]:\n            return False\n\n    return True\n\nprint(check_equality([1, 2, 3], \"abc\"))\nprint(check_equality([1, 2, 3, 4], \"abc\"))\nprint(check_equality([1, 2, 3, 4, 5], \"abc\"))\nprint(check_equality([1, 2, 3, 4, 5, 6, 7, 8, 9], \"abc\"))\nprint(check_equality([1, 2, 3, 4, 5, 6, 7, 8, 9], \"ab\"))\nprint(check_equality([1, 2, 3, 4, 5, 6, 7, 8, 9], \"ab\"))\nprint(check_equality([1, 2, 3, 4, 5, 6, 7, 8, 9], \"abababab\"))"
    },
    {
      "rank": 71,
      "score": 3.279446851487576,
      "candidate": "def check(list, string):\n    return all(item == string for item in list)\n\n\nprint(check([1, 2, 3, 4, 5, 6], \"4\"))\nprint(check([1, 2, 3, 4, 5, 6], \"6\"))"
    },
    {
      "rank": 72,
      "score": 3.260927807911989,
      "candidate": "def all_equal(list_of_strings, string):\n    return all(x == string for x in list_of_strings)\n\n\nprint(all_equal([\"one\", \"two\", \"three\"], \"three\"))\nprint(all_equal([\"one\", \"two\", \"three\"], \"four\"))\nprint(all_equal([\"one\", \"two\", \"three\"], \"one\"))\nprint(all_equal([\"one\", \"two\", \"three\"], \"two\"))\nprint(all_equal([\"one\", \"two\", \"three\"], \"four\"))\nprint(all_equal([\"one\", \"two\", \"three\"], \"one\"))"
    },
    {
      "rank": 73,
      "score": 3.2202141029542353,
      "candidate": "def check_equal_string(list, string):\n    if list == string:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    print(check_equal_string([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"ab\"))\n    print(check_equal_string([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"abcd\"))\n    print(check_equal_string([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"abcdab\"))\n    print(check_equal_string([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"abcdabcd\"))"
    },
    {
      "rank": 74,
      "score": 3.207969938205895,
      "candidate": "def check_equal_string(str1, str2):\n    for i in str1:\n        if i not in str2:\n            return False\n    return True\n\n\nprint(check_equal_string(\"a\", \"b\"))\nprint(check_equal_string(\"a\", \"c\"))\nprint(check_equal_string(\"a\", \"d\"))\nprint(check_equal_string(\"a\", \"e\"))\nprint(check_equal_string(\"a\", \"f\"))"
    },
    {
      "rank": 75,
      "score": 3.184470414819228,
      "candidate": "def check_string(str1, str2):\n    return str1 == str2\n\n\nprint(check_string(\"a\", \"b\"))\nprint(check_string(\"a\", \"c\"))\nprint(check_string(\"a\", \"b\"))\nprint(check_string(\"a\", \"d\"))\nprint(check_string(\"a\", \"e\"))"
    },
    {
      "rank": 76,
      "score": 3.1688828120238193,
      "candidate": "def check(string, lst):\n    if len(string)!= len(lst):\n        return False\n    for i in range(len(string)):\n        if string[i]!= lst[i]:\n            return False\n    return True\n\nprint(check(\"abcd\", [\"a\", \"b\", \"c\", \"d\"]))\nprint(check(\"abcd\", [\"a\", \"b\", \"c\"]))\nprint(check(\"abcd\", [\"b\", \"c\"]))\nprint(check(\"abcd\", [\"a\", \"b\", \"c\"]))\nprint(check(\"abcd\", [\"a\", \"b\", \"c\", \"d\"]))"
    },
    {
      "rank": 77,
      "score": 3.1277373262375283,
      "candidate": "def check_equal(l: list, s: str):\n    return all([s in s for s in l])\n\n\ndef test():\n    assert check_equal([\"a\", \"b\", \"c\"], \"a\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"c\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"d\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"d\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"e\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"f\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"g\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"h\")\n    assert not check_equal([\"a\", \"b\", \"c\"], \"i\")\n    assert not check_equal([\"a\", \"b\", \"c\"], \"j\")\n    assert not check_equal([\"a\", \"b\", \"c\"], \"k\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"l\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"m\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"n\")\n    assert not check_equal([\"a\", \"b\", \"c\"], \"o\")\n    assert not check_equal([\"a\", \"b\", \"c\"], \"p\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"q\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"r\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"s\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"t\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"u\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"v\")\n    assert check_equal([\"a\", \"b\", \"c\"], \"w\")\n    assert check_equal([\"a\", \"b"
    },
    {
      "rank": 78,
      "score": 3.122874505872861,
      "candidate": "def check_equal(arr, str):\n    return all(str in x for x in arr)\n\n\nprint(check_equal([\"a\", \"b\", \"c\"], \"b\"))\nprint(check_equal([\"a\", \"b\", \"c\"], \"a\"))\nprint(check_equal([\"a\", \"b\", \"c\"], \"d\"))\nprint(check_equal([\"a\", \"b\", \"c\"], \"e\"))"
    },
    {
      "rank": 79,
      "score": 3.106844093082393,
      "candidate": "def is_equal(list1, list2, str):\n    if len(list1)!= len(list2):\n        return False\n    for i in range(len(list1)):\n        if list1[i]!= list2[i]:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    assert is_equal([1, 2, 3, 4], [1, 2, 3, 4], \"3\") == True\n    assert is_equal([1, 2, 3, 4], [1, 2, 3], \"4\") == False"
    },
    {
      "rank": 80,
      "score": 3.0822671723324517,
      "candidate": "def check_equality(list_of_items, string):\n    if set(list_of_items) == set(string):\n        return True\n    else:\n        return False\n\nlist_of_items = ['a', 'b', 'c']\nstring = 'c'\nprint(check_equality(list_of_items, string))"
    },
    {
      "rank": 81,
      "score": 3.0710136223016167,
      "candidate": "def check_string(lst, string):\n    return all(item == string for item in lst)\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    string = \"abc\"\n    print(check_string(lst, string))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 82,
      "score": 3.066932820195502,
      "candidate": "def check_equal_string(list_item, string):\n    return list_item == string\n\n\nif __name__ == \"__main__\":\n    list_item = [\"A\", \"B\", \"C\"]\n    string = \"A\"\n\n    print(check_equal_string(list_item, string))"
    },
    {
      "rank": 83,
      "score": 3.0295960032009783,
      "candidate": "def check_string(list, string):\n    if len(list)!= len(set(list)):\n        return False\n\n    for item in list:\n        if item!= string:\n            return False\n\n    return True\n\n\nif __name__ == \"__main__\":\n    print(check_string([1, 2, 3, 4, 5], \"4\"))"
    },
    {
      "rank": 84,
      "score": 2.9755165586626866,
      "candidate": "def check_equal_string(arr, string):\n    return all(x == string for x in arr)\n\n\nif __name__ == \"__main__\":\n    assert check_equal_string([1, 2, 3], \"3\")\n    assert check_equal_string([1, 2, 3, 4], \"4\")\n    assert check_equal_string([1, 2, 3, 4, 5], \"4\")\n    assert check_equal_string([1, 2, 3, 4, 5, 6], \"4\")\n    assert check_equal_string([1, 2, 3, 4, 5, 6, 7], \"1\")\n    assert check_equal_string([1, 2, 3, 4, 5, 6, 7, 8], \"8\")\n    assert check_equal_string([1, 2, 3, 4, 5, 6, 7, 8, 9], \"9\")\n    assert check_equal_string([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"1\")"
    },
    {
      "rank": 85,
      "score": 2.925311558135246,
      "candidate": "def is_equal(list_of_items, string):\n    for i in list_of_items:\n        if i!= string:\n            return False\n    return True\n\n\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"a\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"b\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"c\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"d\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"e\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"f\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"g\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"h\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"i\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"j\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"k\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"l\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"m\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"n\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"o\"))\nprint(is_equal([1,2,3,4,5,6,7,8,9], \"p\"))\nprint(is"
    },
    {
      "rank": 86,
      "score": 2.9008241250702858,
      "candidate": "def check_equality(lst, string):\n    if lst == string:\n        return True\n    else:\n        return False\n\n\nprint(check_equality([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],\"A\"))\nprint(check_equality([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],\"B\"))\nprint(check_equality([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],\"C\"))"
    },
    {
      "rank": 87,
      "score": 2.894867792210587,
      "candidate": "def is_equal(list_of_items, string):\n    for item in list_of_items:\n        if item!= string:\n            return False\n    return True\n\n\nprint(is_equal([1, 2, 3, 4, 5], \"a\"))\nprint(is_equal([1, 2, 3, 4, 5], \"b\"))"
    },
    {
      "rank": 88,
      "score": 2.842437984443763,
      "candidate": "def check_equal(list, string):\n  if set(list) == set(string):\n    return True\n  return False\n\n\ndef test_check_equal():\n  assert check_equal([1, 2, 3], \"abc\")\n  assert check_equal([1, 2, 3], \"a\")\n  assert check_equal([1, 2, 3], \"b\")\n  assert check_equal([1, 2, 3], \"c\")\n  assert check_equal([1, 2, 3], \"a\")\n  assert check_equal([1, 2, 3], \"b\")\n  assert check_equal([1, 2, 3], \"c\")\n  assert check_equal([1, 2, 3], \"d\")\n  assert check_equal([1, 2, 3], \"e\")\n  assert check_equal([1, 2, 3], \"f\")\n  assert check_equal([1, 2, 3], \"g\")\n  assert check_equal([1, 2, 3], \"h\")\n  assert check_equal([1, 2, 3], \"i\")\n  assert check_equal([1, 2, 3], \"j\")\n  assert check_equal([1, 2, 3], \"k\")\n  assert check_equal([1, 2, 3], \"l\")\n  assert check_equal([1, 2, 3], \"m\")\n  assert check_equal([1, 2, 3], \"n\")\n  assert check_equal([1, 2, 3], \"o\")\n  assert check_equal([1, 2, 3], \"p\")\n  assert check_equal([1, 2, 3], \"q\")\n  assert check_equal([1, 2, 3], \"r\")\n  assert check_equal([1, 2, 3], \"s\")\n  assert check_equal([1, 2, 3], \"t\")\n  assert check_equal([1, 2, 3], \"u\")\n  assert check_equal([1, 2, 3], \"v\")\n  assert check_equal([1, 2, 3], \"w\")\n  assert check_equal([1, 2, 3], \"x\")\n  assert check_equal([1, 2, 3], \"y\")\n  assert check_equal"
    },
    {
      "rank": 89,
      "score": 2.8416518837861124,
      "candidate": "def is_equal(lst: list, str_: str) -> bool:\n    if len(lst) == len(str_):\n        for i in range(len(lst)):\n            if lst[i]!= str_[i]:\n                return False\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, 4, 5, 6, 7]\n    str_ = 'abc'\n    print(is_equal(lst, str_))"
    },
    {
      "rank": 90,
      "score": 2.8370807591326015,
      "candidate": "def equal_to(list, string):\n    if list == string:\n        return True\n    else:\n        return False\n\nlist1 = ['a', 'b', 'c']\nstring1 = 'a'\n\nprint(equal_to(list1, string1))\n\nlist2 = ['a', 'b', 'c']\nstring2 = 'b'\n\nprint(equal_to(list2, string2))"
    },
    {
      "rank": 91,
      "score": 2.8294026051812575,
      "candidate": "def check_equal(list_of_items, string):\n    return all(item == string for item in list_of_items)\n\n\nprint(check_equal([1,2,3], \"1\"))\nprint(check_equal([1,2,3], \"2\"))\nprint(check_equal([1,2,3], \"3\"))\nprint(check_equal([1,2,3], \"4\"))\nprint(check_equal([1,2,3], \"5\"))\nprint(check_equal([1,2,3], \"6\"))\nprint(check_equal([1,2,3], \"7\"))\nprint(check_equal([1,2,3], \"8\"))\nprint(check_equal([1,2,3], \"9\"))\nprint(check_equal([1,2,3], \"1\"))\nprint(check_equal([1,2,3], \"2\"))\nprint(check_equal([1,2,3], \"3\"))\nprint(check_equal([1,2,3], \"4\"))\nprint(check_equal([1,2,3], \"5\"))\nprint(check_equal([1,2,3], \"6\"))\nprint(check_equal([1,2,3], \"7\"))\nprint(check_equal([1,2,3], \"8\"))\nprint(check_equal([1,2,3], \"9\"))\nprint(check_equal([1,2,3], \"0\"))\nprint(check_equal([1,2,3], \"1\"))\nprint(check_equal([1,2,3], \"2\"))\nprint(check_equal([1,2,3], \"3\"))\nprint(check_equal([1,2,3], \"4\"))\nprint(check_equal([1,2,3], \"5\"))\nprint(check_equal([1,2,3], \"6\"))\nprint(check_equal([1,2,3], \"7\"))\nprint(check_equal([1,2,3], \"8\"))\nprint(check_equal([1,2,3], \"9\"))"
    },
    {
      "rank": 92,
      "score": 2.82378812578696,
      "candidate": "def string_equal(lst, str):\n    for i in lst:\n        if i!= str:\n            return False\n    return True\n\n\nlst = [1, 2, 3, 4]\nstr = \"3\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"4\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"2\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"1\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"2\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"3\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"4\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"2\"\nprint(string_equal(lst, str))\n\nlst = [1, 2, 3, 4]\nstr = \"3\"\nprint(string_equal(lst, str))"
    },
    {
      "rank": 93,
      "score": 2.814909873661438,
      "candidate": "def is_equal(list_of_strings, str_to_check):\n    return list(set(list_of_strings) == set(str_to_check))\n\n\nprint(is_equal([\"a\", \"b\", \"c\"], \"b\"))\nprint(is_equal([\"a\", \"b\", \"c\"], \"a\"))\nprint(is_equal([\"a\", \"b\", \"c\"], \"d\"))\nprint(is_equal([\"a\", \"b\", \"c\"], \"d\"))"
    },
    {
      "rank": 94,
      "score": 2.795782845427606,
      "candidate": "def check_list_equal(list_of_items, string):\n    if string == ''.join(list_of_items):\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    list_of_items = ['a', 'b', 'c', 'd']\n    string = 'b'\n\n    print(check_list_equal(list_of_items, string))"
    },
    {
      "rank": 95,
      "score": 2.780659283434258,
      "candidate": "def check_string(list_of_string, str_to_check):\n    for i in list_of_string:\n        if i!= str_to_check:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    print(check_string([\"a\", \"b\", \"c\"], \"c\"))\n    print(check_string([\"a\", \"b\", \"c\"], \"a\"))\n    print(check_string([\"a\", \"b\", \"c\"], \"d\"))\n    print(check_string([\"a\", \"b\", \"c\"], \"e\"))\n    print(check_string([\"a\", \"b\", \"c\"], \"f\"))\n    print(check_string([\"a\", \"b\", \"c\"], \"g\"))"
    },
    {
      "rank": 96,
      "score": 2.6238461088379506,
      "candidate": "def check_string(a, b):\n    return a == b\n\nprint(check_string([1,2,3], 'a'))\nprint(check_string([1,2,3], 'b'))"
    },
    {
      "rank": 97,
      "score": 2.608662183676417,
      "candidate": "def check_equal(list_, string):\n    return list(set(list_) == set(string))\n\n\nlist_ = [\"a\", \"b\", \"c\"]\nstring = \"b\"\n\nprint(check_equal(list_, string))"
    },
    {
      "rank": 98,
      "score": 2.5849131590098526,
      "candidate": "def check_string(list, string):\n    return all(i == string for i in list)\n\nprint(check_string([1, 2, 3, 4, 5], \"a\"))\nprint(check_string([1, 2, 3, 4, 5], \"b\"))\nprint(check_string([1, 2, 3, 4, 5], \"c\"))\nprint(check_string([1, 2, 3, 4, 5], \"d\"))"
    },
    {
      "rank": 99,
      "score": 2.333712157880876,
      "candidate": "def all_items_equal(list_of_items, string_to_check):\n  for i in list_of_items:\n    if i!= string_to_check:\n      return False\n  return True\n\n\nprint(all_items_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"ab\"))\nprint(all_items_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"b\"))\nprint(all_items_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"a\"))\nprint(all_items_equal([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], \"z\"))"
    },
    {
      "rank": 100,
      "score": 2.3242265690356962,
      "candidate": "def is_equal(a, b):\n    if len(a)!= len(b):\n        return False\n    for i in range(0, len(a)):\n        if a[i]!= b[i]:\n            return False\n    return True\n\n\ndef test_is_equal():\n    assert is_equal([1, 2, 3], \"3\") == True\n    assert is_equal([1, 2, 3], \"4\") == False\n    assert is_equal([1, 2, 3], \"5\") == True\n    assert is_equal([1, 2, 3], \"6\") == False\n    assert is_equal([1, 2, 3], \"7\") == False"
    }
  ]
}