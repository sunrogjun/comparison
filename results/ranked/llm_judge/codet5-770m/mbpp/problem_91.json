{
  "timestamp": "2025-09-14T13:08:10.604213",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 91,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def snake_to_camel(snake_string):\n    s1 = snake_string.split('_')\n    return ''.join(x.capitalize() for x in s1)\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))\nprint(snake_to_camel(\"snake_case_Case\"))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def camel_case(s):\n    s = s.replace(\"_\",\" \")\n    return \"\".join(word.capitalize() for word in s.split(\"_\"))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def camel_case(snake_string):\n    return snake_string[0].upper() + snake_string[1:]\n\nprint(camel_case(\"snake_case\"))\nprint(camel_case(\"camel_case\"))\nprint(camel_case(\"_camel_case\"))\nprint(camel_case(\"_case\"))\nprint(camel_case(\"_case_\"))\nprint(camel_case(\"_case__\"))\nprint(camel_case(\"case\"))\nprint(camel_case(\"case_\"))\nprint(camel_case(\"camelcase\"))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def camelcase(s):\n    s = s.replace(\"_\", \"\")\n    return s[0].upper() + s[1:]\n\n\nprint(camelcase(\"snake\"))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def camel_to_snake(name):\n    return ''.join(x.title() for x in name.split('_'))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def snake_to_camel(s):\n    return ''.join([x.capitalize() for x in s.split('_')])\n\nprint(snake_to_camel('snake'))\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_case'))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def camelcase(s):\n    return ''.join(x.title() for x in s.split('_'))"
    },
    {
      "rank": 8,
      "score": 9.370583536698913,
      "candidate": "def to_camel(string):\n    string = string.lower()\n    return ''.join([word.capitalize() for word in string.split('_')])\n\n\nassert to_camel('snake') =='snake'\nassert to_camel('snake_case') =='snake_case'\nassert to_camel('snake_case_with_underscores') =='snake_case_with_underscores'\nassert to_camel('snake_case_with_underscores_and_underscores') =='snake_case_with_underscores_and_underscores'\nassert to_camel('snake_case_with_underscores_and_underscores_and_underscores') =='snake_case_with_underscores_and_underscores_and_underscores'\nassert to_camel('snake_case_with_underscores_and_underscores_and_underscores_and_underscores') =='snake_case_with_underscores_and_underscores_and_underscores'\nassert to_camel('snake_case_with_underscores_and_underscores_and_underscores_and_underscores_and_underscores_and_underscores_and_underscores') =='snake_case_with_underscores_and_underscores_and_underscores_and_underscores_and_underscores_and_underscores'"
    },
    {
      "rank": 9,
      "score": 9.234050852198141,
      "candidate": "def snake_to_camel(s):\n    return \"\".join(x.title() for x in s.split(\"_\"))\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))"
    },
    {
      "rank": 10,
      "score": 9.21346272767743,
      "candidate": "def camel_case(s):\n    return ''.join([x.capitalize() for x in s.split('_')])"
    },
    {
      "rank": 11,
      "score": 9.205959372648458,
      "candidate": "def snake_to_camel(snake):\n    \"\"\"\n    :type snake: str\n    :rtype: str\n    \"\"\"\n    return ''.join([x.title() if i!= 0 else x for i, x in enumerate(snake.split('_'))])\n\n\nprint(snake_to_camel('snake'))\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_case'))\nprint(snake_to_camel('snake_case_case_case'))\nprint(snake_to_camel('snake_case_case_case_case'))\nprint(snake_to_camel('snake_case_case_case_case_case'))"
    },
    {
      "rank": 12,
      "score": 9.183391466815202,
      "candidate": "def snake_case_to_camel(s):\n    words = s.split(\"_\")\n    return \"\".join(x.capitalize() for x in words)\n\nprint(snake_case_to_camel(\"snake\"))\nprint(snake_case_to_camel(\"snake_case\"))\nprint(snake_case_to_camel(\"snake_case_case\"))\nprint(snake_case_to_camel(\"snake_case_case_case\"))"
    },
    {
      "rank": 13,
      "score": 9.177268828905222,
      "candidate": "def snake_to_camel(snake_string):\n    return \"\".join(x.capitalize() for x in snake_string.split(\"_\"))\n\n\nassert snake_to_camel(\"snake_case\") == \"SnakeCase\"\nassert snake_to_camel(\"snake_case_1\") == \"SnakeCase1\"\nassert snake_to_camel(\"snake_case_1_2\") == \"SnakeCase1_2\"\nassert snake_to_camel(\"snake_case_1_2_3\") == \"SnakeCase1_2_3\"\nassert snake_to_camel(\"snake_case_1_2_3_4\") == \"SnakeCase1_2_3_4\"\nassert snake_to_camel(\"snake_case_1_2_3_4_5\") == \"SnakeCase1_2_3_4_5\""
    },
    {
      "rank": 14,
      "score": 8.973005557553902,
      "candidate": "def snake_to_camel(string):\n    return \"\".join([x.capitalize() for x in string.split(\"_\")])"
    },
    {
      "rank": 15,
      "score": 8.95994420569242,
      "candidate": "def snake_to_camel(snake):\n    words = snake.split('_')\n    return ''.join(words).lower()\n\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snakecase\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))"
    },
    {
      "rank": 16,
      "score": 8.946210893390457,
      "candidate": "class Solution(object):\n    def snakeToCamel(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        s = s.replace('_','')\n        return ''.join([w[0].upper() + w[1:] for w in s.split('_')])"
    },
    {
      "rank": 17,
      "score": 8.932217008005624,
      "candidate": "def snake_to_camel(string):\n    return \"\".join([word[0].upper() + word[1:] for word in string.split(\"_\")])\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))"
    },
    {
      "rank": 18,
      "score": 8.92876693971089,
      "candidate": "def snake_to_camel(string):\n    s1 = string[0].lower()\n    s2 = ''\n    for i in range(1, len(string)):\n        if string[i].isupper():\n            s2 += string[i].upper()\n        else:\n            s2 += string[i]\n\n    return s1 + s2"
    },
    {
      "rank": 19,
      "score": 8.902145503295483,
      "candidate": "def camel_case(s):\n    return ''.join(x.capitalize() for x in s.split('_'))\n\nprint(camel_case('snake'))"
    },
    {
      "rank": 20,
      "score": 8.85571690049604,
      "candidate": "def snake_case_to_camel(snake_case):\n    \"\"\"\n    :type snake_case: str\n    :rtype: str\n    \"\"\"\n    s1 = snake_case.split('_')\n    s2 = ''\n    for i in range(len(s1)):\n        s2 += s1[i].title()\n    return s2\n\ndef test_case():\n    test_cases = [\n        ('snake','snake'),\n        ('snake_case','snake_case'),\n        ('snake_case_case','snake_case_case'),\n        ('snake_case_case_case','snake_case_case_case'),\n    ]\n\n    for test_case in test_cases:\n        result = snake_case_to_camel(test_case[0])\n        expected = test_case[1]\n        assert result == expected\n\nif __name__ == '__main__':\n    test_case()"
    },
    {
      "rank": 21,
      "score": 8.855395696632057,
      "candidate": "def snake_to_camel(s):\n    return ''.join([i.title() for i in s.split('_')])"
    },
    {
      "rank": 22,
      "score": 8.850707355641543,
      "candidate": "def snake_to_camel(snake_str):\n    snake_str = snake_str.replace(\"_\", \"\").title()\n    return snake_str\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_\"))"
    },
    {
      "rank": 23,
      "score": 8.81367773444215,
      "candidate": "def snake_to_camel(snake_string):\n    return ''.join(x.title() if i < len(snake_string) else x for i, x in enumerate(snake_string))\n\n\nprint(snake_to_camel('snake'))"
    },
    {
      "rank": 24,
      "score": 8.76828871349479,
      "candidate": "def camel_to_snake(string):\n    return ''.join(x.capitalize() for x in string.split('_'))\n\n\ndef main():\n    print(camel_to_snake('snake'))\n    print(camel_to_snake('camel'))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 25,
      "score": 8.750282588864879,
      "candidate": "def camel_to_snake(string):\n    string = string.replace(\"_\", \"\")\n    return string[0].upper() + string[1:]\n\nprint(camel_to_snake(\"snake_case\"))\nprint(camel_to_snake(\"camel_case\"))\nprint(camel_to_snake(\"camel_case_2\"))\nprint(camel_to_snake(\"camel_case_3\"))\nprint(camel_to_snake(\"camel_case_4\"))\nprint(camel_to_snake(\"camel_case_5\"))\nprint(camel_to_snake(\"camel_case_6\"))"
    },
    {
      "rank": 26,
      "score": 8.715724466237427,
      "candidate": "def snake_to_camel(snake_str):\n    return snake_str[0].upper() + snake_str[1:]\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snakeCase\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case_case\"))"
    },
    {
      "rank": 27,
      "score": 8.701078161001123,
      "candidate": "def snake_to_camel(snake_str):\n    \"\"\"\n    :type snake_str: str\n    :rtype: str\n    \"\"\"\n    return \"\".join([x.capitalize() for x in snake_str.split(\"_\")])\n\n\nif __name__ == \"__main__\":\n    print(snake_to_camel(\"snake\"))\n    print(snake_to_camel(\"snake_case\"))\n    print(snake_to_camel(\"snake_case_case\"))"
    },
    {
      "rank": 28,
      "score": 8.625142247198651,
      "candidate": "def camel_case(s):\n    return \"\".join([word[0].upper() + word[1:] for word in s.split(\"_\")])\n\n\nprint(camel_case(\"snake_case\"))"
    },
    {
      "rank": 29,
      "score": 8.608819999274287,
      "candidate": "def snake_to_camel(snake_string):\n    camel_string = ''\n    for i in range(len(snake_string)):\n        if snake_string[i].isupper():\n            camel_string += snake_string[i].lower()\n        else:\n            camel_string += snake_string[i]\n    return camel_string\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))"
    },
    {
      "rank": 30,
      "score": 8.606486429141842,
      "candidate": "def snake_to_camel(snake_str):\n    \"\"\"\n    :type snake_str: str\n    :rtype: str\n    \"\"\"\n    return ''.join(x.title() for x in snake_str.split('_'))\n\n\nif __name__ == '__main__':\n    assert snake_to_camel('snake') =='snake'\n    assert snake_to_camel('snake_case') =='snake_case'\n    assert snake_to_camel('snake_case_1') =='snake_case_1'\n    assert snake_to_camel('snake_case_1_2') =='snake_case_1_2'\n    assert snake_to_camel('snake_case_1_2_3') =='snake_case_1_2_3'\n    assert snake_to_camel('snake_case_1_2_3_4') =='snake_case_1_2_3_4'\n    assert snake_to_camel('snake_case_1_2_3_4_5') =='snake_case_1_2_3_4_5'"
    },
    {
      "rank": 31,
      "score": 8.542875062379007,
      "candidate": "def snake_to_camel(snake):\n    s = snake.split('_')\n    return ''.join([s[0]] + [x.title() for x in s[1:]])\n\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_2'))\nprint(snake_to_camel('snake_case_3'))\nprint(snake_to_camel('snake_case_4'))\nprint(snake_to_camel('snake_case_5'))"
    },
    {
      "rank": 32,
      "score": 8.53012858503943,
      "candidate": "def convert(string):\n    return ''.join(x.capitalize() if i < len(string) - 1 else x for i, x in enumerate(string))"
    },
    {
      "rank": 33,
      "score": 8.48796797856353,
      "candidate": "def snake_to_camel(snake_str):\n    return snake_str[0].upper() + snake_str[1:]\n\nif __name__ == '__main__':\n    print(snake_to_camel(\"snake\"))\n    print(snake_to_camel(\"snake_case\"))\n    print(snake_to_camel(\"snake_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case\"))"
    },
    {
      "rank": 34,
      "score": 8.478208546788407,
      "candidate": "def snake_to_camel(s):\n    return \"\".join(x.title() if x.isupper() else x.lower() for x in s.split(\"_\"))\n\n\nprint(snake_to_camel(\"snake\"))"
    },
    {
      "rank": 35,
      "score": 8.437695832075478,
      "candidate": "def snake_case(string):\n    return ''.join(x.capitalize() or \"_\" for x in string.split(\"_\"))\n\ndef main():\n    print(snake_case(\"snake\"))\n    print(snake_case(\"snake_case\"))\n    print(snake_case(\"snake_case_case\"))\n    print(snake_case(\"snake_case_case_case\"))\n    print(snake_case(\"snake_case_case_case_case\"))\n    print(snake_case(\"snake_case_case_case_case_case\"))\n    print(snake_case(\"snake_case_case_case_case_case_case\"))\n    print(snake_case(\"snake_case_case_case_case_case_case_case\"))\n    print(snake_case(\"snake_case_case_case_case_case_case_case_case\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 8.408439383654278,
      "candidate": "def camel_case_snake(snake_str):\n    return \"\".join([word[0].upper() + word[1:] for word in snake_str.split(\"_\")])"
    },
    {
      "rank": 37,
      "score": 8.386620303250325,
      "candidate": "def camel_case(string):\n    return ''.join([word.capitalize() for word in string.split('_')])\n\nprint(camel_case('snake'))\nprint(camel_case('snakeCase'))\nprint(camel_case('snake_case'))\nprint(camel_case('snake_case_'))\nprint(camel_case('snake_case_1'))\nprint(camel_case('snake_case_1_1'))\nprint(camel_case('snake_case_1_2'))\nprint(camel_case('snake_case_1_2_1'))\nprint(camel_case('snake_case_1_2_1_3'))\nprint(camel_case('snake_case_1_2_1_3_4'))\nprint(camel_case('snake_case_1_2_1_3_4_5'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8_9'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8_9_10'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8_9_10_1'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8_9_10_2'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8_9_10_2_1'))\nprint(camel_case('snake_case_1_2_1_3_4_5_6_7_8_9_10_2_1_2'))\nprint"
    },
    {
      "rank": 38,
      "score": 8.351614956112536,
      "candidate": "def snake_to_camel(snake_case_string):\n    return ''.join(x.capitalize() for x in snake_case_string.split('_'))\n\n\nif __name__ == '__main__':\n    print(snake_to_camel('snake'))\n    print(snake_to_camel('snake_case'))"
    },
    {
      "rank": 39,
      "score": 8.334608500525688,
      "candidate": "def camel_to_snake(s):\n    return \"\".join(x.capitalize() or \"_\" for x in s.split(\"_\"))"
    },
    {
      "rank": 40,
      "score": 8.327367757082776,
      "candidate": "def camel_case(str):\n    return ''.join(word.capitalize() or '_' for word in str.split('_'))"
    },
    {
      "rank": 41,
      "score": 8.298597569547805,
      "candidate": "def snake_to_camel(snake_string):\n    if snake_string == '':\n        return ''\n    return snake_string[0].upper() + snake_string[1:].lower()\n\nprint(snake_to_camel('snake_case'))"
    },
    {
      "rank": 42,
      "score": 8.294940769211511,
      "candidate": "def snake_to_camel(snake_str):\n    return \"\".join([word.capitalize() for word in snake_str.split(\"_\")])"
    },
    {
      "rank": 43,
      "score": 8.289838256518838,
      "candidate": "def snake_to_camel(snake_string):\n    return ''.join(x.title() for x in snake_string.split('_'))"
    },
    {
      "rank": 44,
      "score": 8.251903304236286,
      "candidate": "class Solution:\n    def snake_to_camel(self, s: str) -> str:\n        s = s.replace(\"_\", \"\").lower()\n        s = s[0].upper() + s[1:]\n        return s\n\nif __name__ == \"__main__\":\n    s = \"snake\"\n    print(Solution().snake_to_camel(s))"
    },
    {
      "rank": 45,
      "score": 8.212735598038213,
      "candidate": "def camel_case(snake_string):\n    return snake_string.title()\n\nprint(camel_case('snake'))"
    },
    {
      "rank": 46,
      "score": 8.211579567659316,
      "candidate": "def snake_to_camel(snake_string):\n    return ''.join(x.capitalize() for x in snake_string.split('_'))\n\nprint(snake_to_camel('snake'))"
    },
    {
      "rank": 47,
      "score": 8.209707251476969,
      "candidate": "def snake_to_camel(snake):\n    return ''.join([x.capitalize() for x in snake.split('_')])\n\n\nif __name__ == '__main__':\n    print(snake_to_camel('snake'))\n    print(snake_to_camel('snake_case'))\n    print(snake_to_camel('snake_case_case'))\n    print(snake_to_camel('snake_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case_case_case_case_case'))"
    },
    {
      "rank": 48,
      "score": 8.185309335307622,
      "candidate": "def snake_to_camel(s):\n    s = s.replace(\"_\", \"\")\n    s = s.title()\n    return s\n\n\nprint(snake_to_camel(\"snake\"))"
    },
    {
      "rank": 49,
      "score": 8.179564342560925,
      "candidate": "def snake_to_camel(s):\n    s = s.replace(\"_\", \"\").replace(\"-\", \"\").upper()\n    return s\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_with_hyphen\"))\nprint(snake_to_camel(\"snake_case_with_hyphen_with_spaces\"))"
    },
    {
      "rank": 50,
      "score": 8.172253082181854,
      "candidate": "def snake_to_camel(str):\n    new_str = ''\n    for i in range(len(str)):\n        if i == 0:\n            new_str += str[i].upper()\n        else:\n            new_str += str[i].lower()\n\n    return new_str\n\nprint(snake_to_camel('snake'))\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_case'))\nprint(snake_to_camel('snake_case_case_case'))\nprint(snake_to_camel('snake_case_case_case_case'))\nprint(snake_to_camel('snake_case_case_case_case_case'))"
    },
    {
      "rank": 51,
      "score": 8.163300679823958,
      "candidate": "def snake_to_camel(string):\n    new_string = \"\"\n    for char in string:\n        if char.islower() and char.isupper() and char.isdigit():\n            new_string += char.lower()\n        elif char.isupper():\n            new_string += char.upper()\n        else:\n            new_string += char\n    return new_string\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case\"))"
    },
    {
      "rank": 52,
      "score": 8.143591138329747,
      "candidate": "def snake_to_camel(s):\n    return ''.join(x.capitalize() for x in s.split('_'))\n\nprint(snake_to_camel('snake'))\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_case'))"
    },
    {
      "rank": 53,
      "score": 8.105983444291466,
      "candidate": "def snake_to_camel(str):\n    str = str.title()\n    str = str.replace('_',' ')\n    str = str.replace('-','_')\n    return str\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"camel\"))\nprint(snake_to_camel(\"SNAKE\"))"
    },
    {
      "rank": 54,
      "score": 8.08452234024709,
      "candidate": "class Solution(object):\n    def convert(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        if not s:\n            return \"\"\n        res = \"\"\n        for i in range(len(s)):\n            if s[i].isupper():\n                res += s[i].lower()\n                res += s[i].upper()\n            else:\n                res += s[i]\n        return res[0].upper() + res[1:]\n\ns = Solution()\nprint s.convert(\"snake\")"
    },
    {
      "rank": 55,
      "score": 8.024835682833125,
      "candidate": "def snake_to_camel(snake_string):\n    return ''.join(x.title() for x in snake_string.split('_'))"
    },
    {
      "rank": 56,
      "score": 7.990432406683839,
      "candidate": "def snake_to_camel(snake_str):\n    return \"\".join(x.capitalize() for x in snake_str.split(\"_\"))\n\nif __name__ == \"__main__\":\n    print(snake_to_camel(\"snake\"))\n    print(snake_to_camel(\"snake_case\"))\n    print(snake_to_camel(\"snake_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case_case\"))\n    print(snake_to_camel(\"snake_case_case_case_case_case_case\"))"
    },
    {
      "rank": 57,
      "score": 7.915588979966494,
      "candidate": "def snake_case(s):\n    return ''.join(x.capitalize() for x in s.split('_'))"
    },
    {
      "rank": 58,
      "score": 7.8912769574414305,
      "candidate": "def camel_case(string):\n    return ''.join(word[0].upper() + word[1:] for word in string.split('_'))\n\n\nprint(camel_case('snake'))\nprint(camel_case('snake_case'))\nprint(camel_case('snake_case_case'))"
    },
    {
      "rank": 59,
      "score": 7.868947655733293,
      "candidate": "def snake_to_camel(snake_string):\n    if snake_string[0].isupper():\n        return snake_string[0].lower() + snake_string[1:]\n    else:\n        return snake_string[0] + snake_string[1].upper()\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))"
    },
    {
      "rank": 60,
      "score": 7.834022619458933,
      "candidate": "def snake_to_camel(snake_str):\n    return snake_str[0].upper() + snake_str[1:].lower()\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snakecase\"))\nprint(snake_to_camel(\"snake_case\"))"
    },
    {
      "rank": 61,
      "score": 7.738292593776799,
      "candidate": "def camel_case(string):\n    result = \"\"\n    for i in string.split(\"_\"):\n        if i == \"\":\n            continue\n        result += i[0].upper() + i[1:]\n    return result\n\n\nprint(camel_case(\"snake\"))"
    },
    {
      "rank": 62,
      "score": 7.705183449260731,
      "candidate": "def snake_to_camel(snake):\n    s = snake.split(\"_\")\n    return s[0] + \"\".join(x.title() for x in s[1:])"
    },
    {
      "rank": 63,
      "score": 7.5819855281879285,
      "candidate": "def snake_to_camel(snake_string):\n    return \"\".join([w.capitalize() for w in snake_string.split(\"_\")])"
    },
    {
      "rank": 64,
      "score": 7.562924366763077,
      "candidate": "def camelcase(snake_case_string: str) -> str:\n    return snake_case_string[0].lower() + \"\".join(x.title() for x in snake_case_string[1:])\n\n\nprint(camelcase(\"snake\"))\nprint(camelcase(\"snake_case\"))\nprint(camelcase(\"snake_case_case\"))\nprint(camelcase(\"snake_case_case_case\"))"
    },
    {
      "rank": 65,
      "score": 7.464609382504557,
      "candidate": "def snake_to_camel(snake_str):\n    return \"\".join([x.capitalize() for x in snake_str.split(\"_\")])"
    },
    {
      "rank": 66,
      "score": 7.134571892399572,
      "candidate": "def snake_to_camel(snake):\n    return \"\".join(x.title() for x in snake.split(\"_\"))\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_1\"))"
    },
    {
      "rank": 67,
      "score": 3.5319788429767622,
      "candidate": "def camel_case_to_snake(s):\n    return ''.join(x.capitalize() or '_' for x in s.split('_'))\n\nprint(camel_case_to_snake('snake'))"
    },
    {
      "rank": 68,
      "score": 3.46112160971408,
      "candidate": "def snake_to_camel(string):\n    return ''.join([word[0].upper() + word[1:] for word in string.split('_')])"
    },
    {
      "rank": 69,
      "score": 3.3166352404995076,
      "candidate": "def snake_to_camel(snake_string):\n    result = \"\"\n    for i in snake_string.split(\"_\"):\n        result += i[0].upper() + i[1:]\n    return result\n\n\nassert snake_to_camel(\"snake\") == \"snake\"\nassert snake_to_camel(\"snake_case\") == \"snakeCase\"\nassert snake_to_camel(\"snake_case_case\") == \"snakeCaseCase\"\nassert snake_to_camel(\"snake_case_case_case\") == \"snakeCaseCaseCase\"\nassert snake_to_camel(\"snake_case_case_case_case\") == \"snakeCaseCaseCaseCase\""
    },
    {
      "rank": 70,
      "score": 3.260927807911989,
      "candidate": "def snake_case_to_camel_case(s):\n    s = s.replace('-', '_')\n    s = s.replace('_', '')\n    return s\n\n\nprint(snake_case_to_camel_case('snake_case'))"
    },
    {
      "rank": 71,
      "score": 3.1688828120238193,
      "candidate": "def snake_to_camel(snake):\n    s = snake.split('_')\n    return ''.join([i.capitalize() for i in s])\n\n\nassert snake_to_camel('snake') == 'Snake'\nassert snake_to_camel('snake1') == 'Snake1'\nassert snake_to_camel('snake1_1') == 'Snake1_1'"
    },
    {
      "rank": 72,
      "score": 3.1277373262375283,
      "candidate": "def snake_to_camel(s):\n    return ''.join(x.title() for x in s.split('_'))\n\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake'))\nprint(snake_to_camel('snake_case_1'))\nprint(snake_to_camel('snake_case_1_2'))\nprint(snake_to_camel('snake_case_1_2_3'))\nprint(snake_to_camel('snake_case_1_2_3_4'))\nprint(snake_to_camel('snake_case_1_2_3_4_5'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_9'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_9_10'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_9_10_11'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_9_10_11_12'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_9_10_11_12_13'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_9_10_11_12_13_14'))\nprint(snake_to_camel('snake_case_1_2_3_4_5_6_7_8_"
    },
    {
      "rank": 73,
      "score": 3.1229562485161955,
      "candidate": "def snake_to_camel(snake_string):\n    return \"\".join([x.title() for x in snake_string.split(\"_\")])\n\n\ndef test_snake_to_camel():\n    assert snake_to_camel(\"snake_case\") == \"SnakeCase\"\n    assert snake_to_camel(\"snake_case_1\") == \"SnakeCase1\"\n    assert snake_to_camel(\"snake_case1_1\") == \"SnakeCase1_1\"\n    assert snake_to_camel(\"snake_case1_1_1\") == \"SnakeCase1_1_1\"\n    assert snake_to_camel(\"snake_case1_1_1_1\") == \"SnakeCase1_1_1_1\"\n    assert snake_to_camel(\"snake_case_1\") == \"SnakeCase1\""
    },
    {
      "rank": 74,
      "score": 3.121418274313994,
      "candidate": "def camel_to_snake(word):\n    return \"\".join([word[0].upper() + word[1:] if word[0].isupper() else word.upper() + word[1:] for word in word.split(\"_\")])\n\n\ndef test():\n    assert camel_to_snake(\"snake\") == \"snake\"\n    assert camel_to_snake(\"snake_case\") == \"snake_case\"\n    assert camel_to_snake(\"camel\") == \"camel\"\n    assert camel_to_snake(\"camel_case\") == \"camel_case\"\n    assert camel_to_snake(\"snake_case_camel\") == \"snake_case_camel\"\n    assert camel_to_snake(\"snake_case_camel_case\") == \"snake_case_camel_case\""
    },
    {
      "rank": 75,
      "score": 3.116830218453277,
      "candidate": "def snake_to_camel(snake_string):\n    new_string = \"\"\n    for i in snake_string:\n        new_string = new_string + i.capitalize()\n    return new_string\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake1\"))\nprint(snake_to_camel(\"snake_1\"))\nprint(snake_to_camel(\"snake_1_1\"))\nprint(snake_to_camel(\"snake_1_1_1\"))\nprint(snake_to_camel(\"snake_1_1_1_1\"))"
    },
    {
      "rank": 76,
      "score": 3.112629566677212,
      "candidate": "def snake_to_camel(string):\n    return ''.join([word.title() for word in string.split('_')])\n\n\nprint(snake_to_camel('snake_case'))"
    },
    {
      "rank": 77,
      "score": 3.106844093082393,
      "candidate": "def snake_to_camel(s):\n    s = s.replace(\"_\", \"\")\n    s = s.title()\n    return s\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_case\"))\nprint(snake_to_camel(\"snake_case_case_case\"))"
    },
    {
      "rank": 78,
      "score": 3.0822671723324517,
      "candidate": "def snake_to_camel(snake_str):\n    camel_str = \"\"\n    for char in snake_str:\n        if char.isalpha():\n            camel_str += char.lower()\n        else:\n            camel_str += char\n    return camel_str\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"SNAKE\"))"
    },
    {
      "rank": 79,
      "score": 3.0710136223016167,
      "candidate": "def snake_to_camel(s):\n    if s == \"\":\n        return \"\"\n    s = s.replace(\"_\", \"\")\n    return s[0].upper() + s[1:].lower()\n\n\ndef test_snake_to_camel():\n    assert snake_to_camel(\"\") == \"\"\n    assert snake_to_camel(\"_\") == \"\"\n    assert snake_to_camel(\"_1\") == \"_1\"\n    assert snake_to_camel(\"_1_2\") == \"_1_2\"\n    assert snake_to_camel(\"_1_2_3\") == \"_1_2_3\"\n    assert snake_to_camel(\"_1_2_3_4\") == \"_1_2_3_4\"\n    assert snake_to_camel(\"_1_2_3_4_5\") == \"_1_2_3_4_5\"\n    assert snake_to_camel(\"_1_2_3_4_5_6\") == \"_1_2_3_4_5_6\"\n    assert snake_to_camel(\"_1_2_3_4_5_6_7\") == \"_1_2_3_4_5_6_7\"\n    assert snake_to_camel(\"_1_2_3_4_5_6_7_8\") == \"_1_2_3_4_5_6_7_8\""
    },
    {
      "rank": 80,
      "score": 3.0377136805013545,
      "candidate": "def snake_to_camel(snake_case):\n    return ''.join(word.title() for word in snake_case.split('_'))"
    },
    {
      "rank": 81,
      "score": 3.033006366778334,
      "candidate": "def snake_to_camel(string):\n    return ''.join(word.capitalize() for word in string.split('_'))"
    },
    {
      "rank": 82,
      "score": 3.031198664022071,
      "candidate": "def snake_to_camel(snake_str):\n    return ''.join([word.title() for word in snake_str.split('_')])\n\n\nprint(snake_to_camel('snake'))"
    },
    {
      "rank": 83,
      "score": 2.9878191467026163,
      "candidate": "def snake_to_camel(snake_string):\n    \"\"\"\n    :type snake_string: str\n    :rtype: str\n    \"\"\"\n    return \"\".join([word.title() for word in snake_string.split(\"_\")])\n\n\nassert snake_to_camel(\"snakeCase\") == \"snakeCase\"\nassert snake_to_camel(\"snake_case\") == \"snake_case\"\nassert snake_to_camel(\"snake_case_\") == \"snake_case_\"\nassert snake_to_camel(\"snake_case_\") == \"snake_case_\"\nassert snake_to_camel(\"snake_case_\") == \"snake_case_\""
    },
    {
      "rank": 84,
      "score": 2.9529901376017973,
      "candidate": "def snake_to_camel(snake_string):\n    return \"\".join(x.title() for x in snake_string.split(\"_\"))"
    },
    {
      "rank": 85,
      "score": 2.9232360578345777,
      "candidate": "def snake_to_camel(snake_str):\n    words = snake_str.split('_')\n    return ''.join([word[0].upper() + word[1:] for word in words])\n\n\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_2'))\nprint(snake_to_camel('snake_case_3'))\nprint(snake_to_camel('snake_case_4'))"
    },
    {
      "rank": 86,
      "score": 2.9203934346372784,
      "candidate": "def camel_to_snake(string: str) -> str:\n    return \"\".join(x.title() for x in string.split(\"_\"))\n\n\nprint(camel_to_snake(\"snake\"))\nprint(camel_to_snake(\"snake_case\"))\nprint(camel_to_snake(\"snake_case_case\"))\nprint(camel_to_snake(\"snake_case_case_case\"))"
    },
    {
      "rank": 87,
      "score": 2.897624743499642,
      "candidate": "def snake_to_camel(snake_string):\n    return \"\".join([word.capitalize() for word in snake_string.split(\"_\")])\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"camel\"))\nprint(snake_to_camel(\"camelCase\"))"
    },
    {
      "rank": 88,
      "score": 2.8433828178736724,
      "candidate": "def snake_to_camel(snake_case):\n    return snake_case.title()\n\n\nif __name__ == '__main__':\n    print(snake_to_camel('snake'))\n    print(snake_to_camel('snake_case'))\n    print(snake_to_camel('snake_case_case'))\n    print(snake_to_camel('snake_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case'))\n    print(snake_to_camel('snake_case_case_case_case_case'))"
    },
    {
      "rank": 89,
      "score": 2.8370807591326015,
      "candidate": "def snake_to_camel(snake):\n    s = snake.replace(\"_\", \"\")\n    return s[0].upper() + s[1:]\n\n\nprint(snake_to_camel(\"snake\"))\nprint(snake_to_camel(\"snake_case\"))\nprint(snake_to_camel(\"snake_case_with_underscores\"))\nprint(snake_to_camel(\"snake_case_with_underscores_and_spaces\"))\nprint(snake_to_camel(\"snake_case_with_underscores_and_spaces_and_spaces\"))"
    },
    {
      "rank": 90,
      "score": 2.8294026051812575,
      "candidate": "class Solution:\n    def toCamel(self, s: str) -> str:\n        return \"\".join(x.capitalize() for x in s.split(\"_\"))\n\n\nprint(Solution().toCamel(\"snake\"))"
    },
    {
      "rank": 91,
      "score": 2.795782845427606,
      "candidate": "def camel_to_snake(string):\n    return ''.join(x.capitalize() or '_' for x in string.split('_'))\n\n\nassert camel_to_snake('snake') == 'Snake'\nassert camel_to_snake('snake_case') == 'SnakeCase'\nassert camel_to_snake('snake_case_2') == 'SnakeCase2'"
    },
    {
      "rank": 92,
      "score": 2.780659283434258,
      "candidate": "def snake_to_camel(snake_case):\n    return snake_case[0].upper() + snake_case[1:]\n\n\nprint(snake_to_camel(\"snake\"))"
    },
    {
      "rank": 93,
      "score": 2.7613019480817003,
      "candidate": "def camel_to_snake(string):\n    return \"\".join(x.title() for x in string.split(\"_\"))\n\n\nprint(camel_to_snake(\"snake\"))"
    },
    {
      "rank": 94,
      "score": 2.7251121750163163,
      "candidate": "def convert_snake_to_camel(snake_string):\n    return \"\".join(x.capitalize() or \"_\" for x in snake_string.split(\"_\"))\n\ndef test_convert_snake_to_camel():\n    assert convert_snake_to_camel(\"snake_case\") == \"snake_case\"\n    assert convert_snake_to_camel(\"snake_case_2\") == \"snake_case2\"\n    assert convert_snake_to_camel(\"snake_case_3\") == \"snake_case3\"\n    assert convert_snake_to_camel(\"snake_case_4\") == \"snake_case4\"\n    assert convert_snake_to_camel(\"snake_case_5\") == \"snake_case5\""
    },
    {
      "rank": 95,
      "score": 2.655637419086296,
      "candidate": "def to_camel_case(snake_string):\n    return snake_string[0].upper() + snake_string[1:].replace(\"_\", \"\")\n\n\nassert to_camel_case(\"snake_case\") == \"snake_case\"\nassert to_camel_case(\"snake_case_with_underscores\") == \"snake_case_with_underscores\"\nassert to_camel_case(\"snake_case_with_underscores_and_hyphens\") == \"snake_case_with_underscores_and_hyphens\"\nassert to_camel_case(\"snake_case_with_underscores_and_hyphens_and_underscores\") == \"snake_case_with_underscores_and_hyphens_and_underscores\"\nassert to_camel_case(\"snake_case_with_underscores_and_underscores_and_hyphens_and_underscores\") == \"snake_case_with_underscores_and_underscores_and_hyphens_and_underscores\""
    },
    {
      "rank": 96,
      "score": 2.593289747812572,
      "candidate": "def convert_snake_case(string):\n    return ''.join(x.title() if x.isupper() else x for x in string.split('_'))\n\n\ndef test_function():\n    assert convert_snake_case('snake') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert convert_snake_case('snakeCase') =='snakeCase'\n    assert"
    },
    {
      "rank": 97,
      "score": 2.5484167433745335,
      "candidate": "def snake_to_camel(snake_str):\n    return snake_str[0].upper() + snake_str[1:]\n\n\nprint(snake_to_camel(\"snake\"))"
    },
    {
      "rank": 98,
      "score": 2.5155856166874244,
      "candidate": "def snake_to_camel(snake_string):\n    return \"\".join(x.capitalize() for x in snake_string.split(\"_\"))\n\n\ndef test_function():\n    assert snake_to_camel(\"snake\") == \"Snake\"\n    assert snake_to_camel(\"snake_case\") == \"SnakeCase\"\n    assert snake_to_camel(\"snake_case_with_underscores\") == \"SnakeCaseWithUnderscore\""
    },
    {
      "rank": 99,
      "score": 2.349484716816349,
      "candidate": "def snake_to_camel(string):\n    return \"\".join([word.title() for word in string.split(\"_\")])\n\n\nif __name__ == \"__main__\":\n    assert snake_to_camel(\"snake_case\") == \"snakeCase\"\n    assert snake_to_camel(\"camel_case\") == \"camelCase\"\n    assert snake_to_camel(\"camelCase\") == \"camelCase\"\n    assert snake_to_camel(\"snake_case_with_underscores\") == \"snake_caseWithunderscores\"\n    assert snake_to_camel(\"snake_case_with_underscores_and_underscores\") == \"snake_caseWithunderscoresAndunderscores\"\n    assert snake_to_camel(\"snake_case_with_underscores_and_underscores_and_underscores\") == \"snake_caseWithunderscoresAndunderscoresAndunderscores\"\n    assert snake_to_camel(\"snake_case_with_underscores_and_underscores_and_underscores_and_underscores_and_underscores\") == \"snake_caseWithunderscoresAndunderscoresAndunderscoresAndunderscoresAndunderscores\"\n    assert snake_to_camel(\"snake_case_with_underscores_and_underscores_and_underscores_and_underscores\") == \"snake_caseWithunderscoresAndunderscoresAndunderscoresAndunderscores\""
    },
    {
      "rank": 100,
      "score": 2.3242265690356962,
      "candidate": "def snake_to_camel(snake_string: str) -> str:\n    return ''.join([x.title() for x in snake_string.split('_')])\n\n\nprint(snake_to_camel('snake'))\nprint(snake_to_camel('snake_case'))\nprint(snake_to_camel('snake_case_case'))"
    }
  ]
}