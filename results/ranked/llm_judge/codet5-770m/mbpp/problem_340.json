{
  "timestamp": "2025-09-14T14:57:55.804758",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 340,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def first_occurrence(nums, k):\n    for i in range(len(nums)):\n        if i == 0:\n            return nums[0]\n        elif nums[i] == nums[0]:\n            continue\n        else:\n            return nums[0]\n\n\nprint(first_occurrence([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "# This function takes in an array and a integer k.\n# It returns the first k elements of the array.\n# It takes in an array and returns the first k elements of the array.\n# The function should return the first element of the array.\n\ndef find_first_k_occurring(arr, k):\n    for i in range(k):\n        if arr[i] in arr:\n            return arr.index(arr[i])\n    return -1\n\narr = [0, 1, 2, 3, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def find_first_occurrence(arr, k):\n    \"\"\"\n    :type arr: List[int]\n    :type k: int\n    :rtype: int\n    \"\"\"\n    if k > len(arr):\n        return -1\n\n    for i in range(k):\n        if arr[i] in arr:\n            return i\n\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_first_occurrence([1, 2, 3, 4, 5, 6, 7], 2))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    if arr == None or k == None:\n        return None\n    else:\n        for i in range(len(arr)):\n            if arr[i] == k:\n                return i\n        return None\n\n\narr = [1, 1, 2, 3, 5, 5, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 13, 13, 14, 15, 15, 16, 16, 17, 18, 19, 20, 20, 21, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 133, 134, 135, 136, 137, 138, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 178, 176, 177, 181, 182, 183, 184, 185, 186, 187,"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def first_occurrence(k, arr):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nprint(first_occurrence(5, [1,2,3,4,5,6,7,8,9]))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "# O(N) time | O(1) space\ndef find_first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 9))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    if arr is None or len(arr) < k:\n        return -1\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nif __name__ == '__main__':\n    print(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "# O(n) time | O(1) space\ndef find_first_occurrence(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(find_first_occurrence([1, 2, 3, 4, 5], 2))\n    print(find_first_occurrence([1, 2, 3, 4, 5], 5))\n    print(find_first_occurrence([1, 2, 3, 4, 5], 1))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def find_first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(find_first_occurring_k_times([3, 2, 1, 1, 2, 2, 3, 3], 2))\n    print(find_first_occurring_k_times([3, 2, 1, 1, 2, 2, 3, 3], 1))\n    print(find_first_occurring_k_times([3, 2, 1, 1, 2, 2, 3, 3], 3))\n    print(find_first_occurring_k_times([3, 2, 1, 1, 2, 2, 3, 3], 4))\n    print(find_first_occurring_k_times([3, 2, 1, 1, 2, 2, 3, 3], 5))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def first_occurring_k_times(array, k):\n    count = 0\n    for element in array:\n        if count == k:\n            return element\n        count += 1\n\n\nprint(first_occurring_k_times([1, 1, 2, 3, 3, 4, 4, 4, 5, 5, 5, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9], 4))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def find_first(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 3, 4, 5, 5, 6, 7, 8, 9, 10]\nk = 4\nprint(find_first(arr, k))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def find_first_element(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return -1\n\n\ndef main():\n    print(find_first_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 9))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def first_occurrence(array, k):\n    for i in range(len(array)):\n        if array[i] == k:\n            return i\n    return -1\n\n\narray = [1, 1, 1, 2, 2, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def find_first_occuring_k(nums, k):\n    for i in range(len(nums)):\n        if nums[i] in nums[i+1:]:\n            return i\n    return -1\n\n\ndef main():\n    nums = [1, 2, 3, 3, 4, 5, 6, 6, 7]\n    k = 3\n    print(find_first_occuring_k(nums, k))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def find_first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\nk = 12\nprint(find_first_occuring_k_times(arr, k))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\narr = [1, 2, 1, 1, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5"
    },
    {
      "rank": 17,
      "score": 8.0,
      "candidate": "def find_first_occurring(nums, k):\n    \"\"\"\n    :type nums: List[int]\n    :type k: int\n    :rtype: int\n    \"\"\"\n    return nums[nums.index(min(nums))+k]\n\n\nprint(find_first_occurring([1, 2, 3, 4, 5, 6, 7], 3))\nprint(find_first_occurring([1, 2, 3, 4, 5, 6, 7], 2))\nprint(find_first_occurring([1, 2, 3, 4, 5, 6, 7], 1))\nprint(find_first_occurring([1, 2, 3, 4, 5, 6, 7], 0))"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return -1\n\n\nprint(first_occuring_k_times([1, 1, 1, 2, 2, 3], 3))\nprint(first_occuring_k_times([1, 1, 1, 2, 2, 3], 2))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "def first_occurrence(array, k):\n    for i in range(len(array)):\n        if array[i] == k:\n            return i\n    return -1\n\narray = [1, 1, 2, 2, 2, 3, 3, 4, 5, 5, 5, 5]\nk = 2\nprint(first_occurrence(array, k))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "def find_first_element(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(find_first_element([1, 2, 3, 4, 5, 5, 5, 6], 5))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def first_occurrence(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n    return None\n\n\nprint(first_occurrence([1, 2, 3, 4, 5, 6], 2))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nprint(first_occurring_k_times([1, 2, 3, 3, 3, 4, 5, 5], 3))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def first_element(arr, k):\n    for i in arr:\n        if i == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_element([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 5], 5))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    if k < 0:\n        return None\n\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return None\n\n\nif __name__ == \"__main__\":\n    arr = [2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]\n    k = 3\n\n    print(first_occuring_k_times(arr, k))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def first_occurring(arr, k):\n    \"\"\"\n    :type arr: List[int]\n    :type k: int\n    :rtype: int\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(first_occurring([1, 2, 3, 4, 4, 4, 4], 3))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] in arr[:k]:\n            return i\n\nprint(first_occurring_k_times([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def find_first_element_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(find_first_element_k_times([1, 2, 3, 4, 5, 6], 5))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def first_occurring(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\narr = [1, 2, 3, 4, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5]\nk = 3\nprint(first_occurring(arr, k))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [3, 2, 1, 2, 1, 3]\nk = 3\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def first_occuring_k(array, k):\n    for i in range(len(array)):\n        if array[i] == k:\n            return i\n    return -1\n\n# Testing\narray = [1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 6, 6, 7]\nk = 4\nprint(first_occuring_k(array, k))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(array, k):\n    for i in array:\n        if array.count(i) == k:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 5, 7, 9, 9], 2))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 3, 3, 3, 4, 4, 4]\nk = 3\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(0, len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurring_k_times([1, 2, 3, 4, 5, 6], 6))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def find_first_k(arr, k):\n    \"\"\"\n    :param arr: list of numbers\n    :param k: int\n    :return: first element occurring k times in the array\n    \"\"\"\n    for i in range(0, k):\n        if arr[i] in arr:\n            return arr.index(arr[i])\n    return -1\n\n\nprint(find_first_k([1, 2, 3, 4, 4, 5], 4))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr.count(arr[i]) == k:\n            return arr[i]\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 5, 5, 5, 5], 3))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 5, 5, 5, 5], 4))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurring_k_times([1, 1, 2, 3, 3, 3, 4, 4], 3))\nprint(first_occurring_k_times([1, 1, 2, 3, 3, 3, 4, 4], 3))\nprint(first_occurring_k_times([1, 1, 2, 3, 3, 3, 4, 4], 3))\nprint(first_occurring_k_times([1, 1, 2, 3, 3, 3, 4, 4], 2))\nprint(first_occurring_k_times([1, 1, 2, 3, 3, 3, 4, 4], 1))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(nums, k):\n    for i in range(0, len(nums)):\n        if nums[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_occurring_k_times([1, 1, 2, 2, 3, 4, 4], 3))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def first_occurring(k, arr):\n    for i in arr:\n        if i == k:\n            return i\n\n    return -1\n\nprint(first_occurring(5, [1, 2, 3, 4, 5, 6, 7]))\nprint(first_occurring(4, [1, 2, 3, 4, 5]))\nprint(first_occurring(2, [1, 2, 3, 4, 5, 6, 7]))\nprint(first_occurring(4, [1, 2, 3, 4, 5, 7, 8, 9, 10]))\nprint(first_occurring(1, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def find_first_element_in_array(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nprint(find_first_element_in_array([1,2,3,4,5,6,7,8,9], 3))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n\n\nif __name__ == \"__main__\":\n    arr = [1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 5]\n    k = 2\n    print(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def first_occurring_k(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n\narr = [1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5]\nk = 5\nprint(first_occurring_k(arr, k))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def first_occurrence_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurrence_k_times([1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4], 3))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def first_occurring_element(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    k = 10\n    print(first_occurring_element(arr, k))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(0, k):\n        if arr[i] == arr[0]:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(first_occuring_k_times([1,2,3,4,5,6,7,8,9,10], 3))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def find_first_k_occur(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n    return -1\n\n\n\nif __name__ == '__main__':\n    print(find_first_k_occur([1,2,3,4,4,5,5,5], 5))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def find_first_occuring_k(arr, k):\n    \"\"\"\n    :type arr: list\n    :type k: int\n    :rtype: int\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_first_occuring_k([1, 2, 3, 3, 4, 4, 5], 5))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr.count(arr[i]) == k:\n            return arr[i]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def first_occurrence(arr, k):\n    for i in arr:\n        if i == k:\n            return i\n    return \"No element occurs\"\n\nprint(first_occurrence([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def first_occurrence(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n    return -1\n\n\nprint(first_occurrence([1, 2, 3, 3, 3, 3, 3], 2))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def first_occurring_k(nums, k):\n  return next((x for x in nums if x == k), -1)\n\nprint(first_occurring_k([1, 2, 3, 4, 5, 6, 7], 3))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def find_first_k_occur(arr, k):\n    for i in range(len(arr)):\n        if arr[i] in arr[:k]:\n            return i\n    return -1\n\n\narr = [1,2,2,2,3,3,4,4,4,4,5,5,5,5,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def find_first(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(find_first([1, 2, 2, 2, 3, 3, 4], 2))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1,2,3,4,5,5,5,6,6,7,7,7,8,8,8,9,9,9,9,9]\nk = 5\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurring_k_times([1, 2, 3, 4, 5, 6], 6))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def find_first(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nif __name__ == \"__main__\":\n    print(find_first([1, 2, 3, 3, 2, 2, 3], 3))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def find_first_element(nums, k):\n    for i in range(len(nums)):\n        if nums[i] == k:\n            return i\n    return -1\n\n\nprint(find_first_element([3, 2, 4, 2, 2, 3], 2))\nprint(find_first_element([1, 3, 2, 4, 2, 2], 2))\nprint(find_first_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(find_first_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 5))\nprint(find_first_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 6))\nprint(find_first_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\nprint(find_first_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 1))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def first_occurrence(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nprint(first_occurrence([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    if k > len(arr):\n        return False\n\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return False\n\n\nif __name__ == \"__main__\":\n    assert first_occurring_k_times([1, 2, 3, 4, 5, 6], 3) == 5\n    assert first_occurring_k_times([1, 2, 3, 4, 5, 6], 2) == 6\n    assert first_occurring_k_times([1, 2, 3, 4, 5, 6], 4) == 0\n    assert first_occurring_k_times([1, 2, 3, 4, 5, 6], 1) == 3\n    assert first_occurring_k_times([1, 2, 3, 4, 5, 6], 0) == False"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in arr:\n        if i in arr[:k]:\n            return i\n    return -1\n\nif __name__ == \"__main__\":\n    print(first_occurring_k_times([1, 2, 3, 4, 5], 3))\n    print(first_occurring_k_times([1, 2, 3, 4, 5], 2))\n    print(first_occurring_k_times([1, 2, 3, 4, 5], 4))\n    print(first_occurring_k_times([1, 2, 3, 4, 5], 5))\n    print(first_occurring_k_times([1, 2, 3, 4, 5], 1))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def find_first_occuring_k_times(arr, k):\n    # Create a dictionary that maps each value in the array to its index\n    # in the array.\n    # First, we need to create a dictionary that maps each value in the array to its index\n    # in the array.\n    index_map = {}\n\n    for i in range(len(arr)):\n        index_map[arr[i]] = i\n\n    # Now we will traverse the array in reverse order.\n    # We will use the index_map to find the index of the first occurrence.\n    # We will then use the index_map to find the index of the first occurrence.\n    # Then we will use the index_map to find the first occurrence.\n    # Then we will use the index_map to find the first occurrence.\n    # Finally we will use the index_map to find the first occurrence.\n    # We will use the index_map to find the first occurrence.\n    # We will use the index_map to find the first occurrence.\n    # We will use the index_map to find the first occurrence.\n    # We will use the index_map to find the first occurrence.\n    # Then we will use the index_map to find the first occurrence.\n    # Then we will use the index_map to find the first occurrence.\n    # Finally we will use the index_map to find the first occurrence.\n    # Finally we will use the index_map to find the first occurrence.\n\n    # We will use the index_map to find the first occurrence.\n    # For example, if we want to find the first occurrence of 2, we will use the\n    # following code:\n    #\n    # for i in range(len(arr)):\n    #     if arr[i] == 2:\n    #         return i\n    #\n    # return -1\n\n    # We will use the index_map to find the first occurrence.\n    # For example, if we want to find the first occurrence of 2, we will use the\n    # following code:\n    #\n    # for i in range(len(arr)):\n    #     if arr[i] == 2:\n    #         return i\n    #\n    # return -1"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def first_occurring_k(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return -1\n\nprint(first_occurring_k([1,1,1,2,2,2,3,3,3,3], 3))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def first_occuring_k_times(nums, k):\n    for i in range(len(nums)):\n        if nums[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_occuring_k_times([1, 1, 1, 2, 2, 2, 3], 2))\n    print(first_occuring_k_times([1, 1, 1, 2, 2, 2, 3], 2))\n    print(first_occuring_k_times([1, 1, 1, 2, 2, 2, 3], 1))\n    print(first_occuring_k_times([1, 1, 1, 2, 2, 2, 3], 0))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def first_occurring(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurring([1, 2, 3, 4, 5], 5))\nprint(first_occurring([1, 2, 3, 4, 5], 3))\nprint(first_occurring([1, 2, 3, 4, 5], 2))"
    },
    {
      "rank": 65,
      "score": 7.0,
      "candidate": "def find_first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(find_first_occurring_k_times([1, 2, 2, 3, 4, 5, 5, 5, 5, 5, 6], 2))\n    print(find_first_occurring_k_times([1, 2, 2, 3, 4, 5, 5, 5, 5, 5, 6], 1))\n    print(find_first_occurring_k_times([1, 2, 2, 3, 4, 5, 5, 5, 5, 5, 6], 0))"
    },
    {
      "rank": 66,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n    return -1\n\n\narr = [2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4]\nk = 1\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 67,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    count = 0\n    for i in arr:\n        if i == k:\n            return i\n        count += 1\n    return None\n\n\narr = [1, 2, 2, 3, 4, 4, 5, 5, 6]\nk = 2\n\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 68,
      "score": 1.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr.count(arr[i]) == k:\n            return arr[i]\n    return -1\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 2, 2, 4, 2, 3, 3, 4, 4, 4, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 9]\n    k = 4\n    print(first_occuring_k_times(arr, k))"
    },
    {
      "rank": 69,
      "score": 1.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if (arr[i] == k):\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 2))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 3))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 4))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 5))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 6))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 7))\n    print(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 8))"
    },
    {
      "rank": 70,
      "score": 1.0,
      "candidate": "def first_occuring_k(nums, k):\n    for i in range(len(nums)):\n        if nums[i] == k:\n            return i\n    return -1\n\n\ndef test_function():\n    nums = [1,2,3,4,5,6,7,8,9]\n    k = 6\n    assert first_occuring_k(nums, k) == 7\n\n\ntest_function()"
    },
    {
      "rank": 71,
      "score": 1.0,
      "candidate": "def find_first_element(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n\narr = [1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4]\nk = 2\n\nprint(find_first_element(arr, k))"
    },
    {
      "rank": 72,
      "score": 1.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 6))\nprint(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 7))\nprint(first_occuring_k_times([1, 2, 3, 4, 5, 6, 7], 8))"
    },
    {
      "rank": 73,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\nk = 3\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 74,
      "score": 1.0,
      "candidate": "def find_first_occurring_k_times(arr, k):\n    # Write your code here.\n    for i in range(0, len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\ndef main():\n    print(find_first_occurring_k_times([1, 1, 2, 2, 3, 3, 4, 4, 5], 3))\n    print(find_first_occurring_k_times([1, 1, 2, 2, 3, 3, 4, 4, 5], 2))\n    print(find_first_occurring_k_times([1, 1, 2, 2, 3, 3, 4, 4, 5], 2))\n    print(find_first_occurring_k_times([1, 1, 2, 2, 3, 3, 4, 4, 5], 4))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 75,
      "score": 1.0,
      "candidate": "def find_first_occurrence(arr, k):\n  # Fill this in.\n  for i in arr:\n    if arr.count(i) == k:\n      return i\n  return -1\n\n# Tests\nprint(find_first_occurrence([1, 2, 3, 4, 5], 2))\nprint(find_first_occurrence([1, 2, 3, 4, 5], 1))\nprint(find_first_occurrence([1, 2, 3, 4, 5], 0))"
    },
    {
      "rank": 76,
      "score": 1.0,
      "candidate": "def find_first_occuring_k(arr, k):\n    for i in range(0, len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [2, 3, 1, 4, 5, 1, 3, 4, 5, 1]\nk = 1\nprint(find_first_occuring_k(arr, k))\n\narr = [2, 3, 1, 4, 5, 1, 3, 4, 5, 1]\nk = 2\nprint(find_first_occuring_k(arr, k))\n\narr = [2, 3, 1, 4, 5, 1, 3, 4, 5, 1]\nk = 4\nprint(find_first_occuring_k(arr, k))"
    },
    {
      "rank": 77,
      "score": 1.0,
      "candidate": "def find_first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 3, 4, 5, 6, 7, 8, 9]\nk = 7\nprint(find_first_occurring_k_times(arr, k))"
    },
    {
      "rank": 78,
      "score": 1.0,
      "candidate": "def find_first_k_occur(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n    return -1\n\narr = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4]\nk = 2\nprint(find_first_k_occur(arr, k))"
    },
    {
      "rank": 79,
      "score": 1.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 3, 3, 4, 4, 5]\nk = 3\nprint(first_occuring_k_times(arr, k))"
    },
    {
      "rank": 80,
      "score": 1.0,
      "candidate": "def find_first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nprint(find_first_occurring_k_times([1,2,3,4,5,6,7,8,9], 8))\nprint(find_first_occurring_k_times([1,2,3,4,5,6,7,8,9], 5))\nprint(find_first_occurring_k_times([1,2,3,4,5,6,7,8,9], 7))\nprint(find_first_occurring_k_times([1,2,3,4,5,6,7,8,9], 6))"
    },
    {
      "rank": 81,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(nums, k):\n    return nums[0] if nums else None\n\n\nif __name__ == \"__main__\":\n    print(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\n    print(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], 0))\n    print(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\n    print(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], 10))\n    print(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], 11))"
    },
    {
      "rank": 82,
      "score": 1.0,
      "candidate": "def first_occuring_k(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return -1\n\n\nif __name__ == \"__main__\":\n    arr = [1, 1, 2, 2, 3, 3, 4, 4]\n    k = 2\n    print(first_occuring_k(arr, k))"
    },
    {
      "rank": 83,
      "score": 1.0,
      "candidate": "def find_kth_element(arr, k):\n    # Fill this in.\n    return arr[0]\n\n\nprint(find_kth_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\nprint(find_kth_element([1, 2, 3, 4, 5, 6, 7, 8, 9], 0))"
    },
    {
      "rank": 84,
      "score": 1.0,
      "candidate": "def first_occurring_k(array, k):\n    for i in range(len(array)):\n        if k == 1:\n            return array[i]\n        if array[i] == k:\n            return array[i]\n    return -1\n\n\nif __name__ == \"__main__\":\n    array = [1, 2, 3, 4, 4, 5, 6]\n    k = 2\n    print(first_occurring_k(array, k))"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n    return -1\n\nprint(first_occurring_k_times([1, 2, 3, 5, 6, 7], 2))\nprint(first_occurring_k_times([1, 2, 3, 5, 6, 7], 1))\nprint(first_occurring_k_times([1, 2, 3, 5, 6, 7], 0))"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 2, 2, 3, 4, 5, 5, 5, 6, 7, 8, 9, 10]\n    k = 5\n    print(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] in arr[i+1:]:\n            return i\n    return -1\n\narr = [1,1,1,1,2,2,2,3,3,4,4,5,5,6,7]\nk = 1\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "def first_occuring_k_times(arr, k):\n    for index, value in enumerate(arr):\n        if index >= k:\n            return value\n\n    return -1\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5]\n    k = 3\n\n    print(first_occuring_k_times(arr, k))"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurring_k_times([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "def find_first_k_times(arr, k):\n    \"\"\"\n    :type arr: List[int]\n    :type k: int\n    :rtype: int\n    \"\"\"\n    # your code here\n    if len(arr) == 0:\n        return -1\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [2, 3, 2, 2, 3, 4, 3, 4, 3, 4, 4, 5]\nk = 4\nprint(find_first_k_times(arr, k))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(nums, k):\n    if len(nums) == 0:\n        return -1\n    if len(nums) == 1:\n        return nums[0]\n    for i in range(k):\n        if nums[0] == nums[1]:\n            return nums[0]\n        else:\n            nums[0] = nums[1]\n            return nums[0]\n    return -1\n\n\nprint(first_occurring_k_times([1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], 2))"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(k):\n        if arr[0] in arr:\n            return arr.index(arr[0])\n    return -1\n\n\n\narr = [1, 2, 3, 4, 4, 5, 5, 5]\nk = 2\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def first_occuring_k_times(nums, k):\n    for i in range(len(nums)):\n        if nums[i] == k:\n            return i\n    return -1\n\n\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5, 5], 5))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 5))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3, 4, 4, 5, 5, 5], 2))\nprint(first_occuring_k_times([1, 2, 3,"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def first_occurrence(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n\n    return -1\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nk = 3\nprint(first_occurrence(arr, k))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 3, 3, 4, 5, 5, 6, 6, 7, 8, 9, 10]\nk = 5\n\nprint(first_occurring_k_times(arr, k))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(array, k):\n    for i in range(len(array)):\n        if array[i] == k:\n            return i\n    return -1\n\n\nif __name__ == \"__main__\":\n    print(first_occurring_k_times([1, 2, 2, 3, 3, 4, 4, 4, 4, 5], 3))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def find_first_occuring_k_times(arr, k):\n    for i in range(0, len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\nprint(find_first_occuring_k_times([1, 2, 2, 2, 3, 3, 3, 3, 4, 4], 2))\nprint(find_first_occuring_k_times([1, 2, 2, 2, 3, 3, 3, 3, 4, 4], 2))\nprint(find_first_occuring_k_times([1, 2, 2, 2, 3, 3, 3, 3, 4, 4], 2))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def first_occurrence(arr, k):\n    for i in range(0, len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\nprint(first_occurrence([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(first_occurrence([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\nprint(first_occurrence([1, 2, 3, 4, 5, 6, 7, 8, 9], 1))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def find_first_occuring_k_times(arr, k):\n    for i in range(len(arr)):\n        if arr[i] == k:\n            return i\n    return -1\n\n\narr = [1, 2, 3, 4, 5, 5, 5, 6, 6, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]\nk = 5\nprint(find_first_occuring_k_times(arr, k))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def first_occurring_k_times(arr, k):\n    for i in arr:\n        if arr.count(i) == k:\n            return i\n    return -1\n\narr = [1, 2, 3, 2, 3, 4, 4, 4]\nk = 2\nprint(first_occurring_k_times(arr, k))"
    }
  ]
}