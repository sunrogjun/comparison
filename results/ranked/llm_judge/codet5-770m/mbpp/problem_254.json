{
  "timestamp": "2025-09-14T14:19:56.200547",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 254,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return list[n:] + list[:n]\n\nprint(split_list([1,2,3,4,5,6,7,8,9], 3))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def split(l, n):\n    return l[::n]\n\nprint(split([1,2,3,4,5,6,7,8,9], 3))\nprint(split([1,2,3,4,5,6,7,8,9], 4))\nprint(split([1,2,3,4,5,6,7,8,9], 5))\nprint(split([1,2,3,4,5,6,7,8,9], 6))\nprint(split([1,2,3,4,5,6,7,8,9], 7))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def split(arr, n):\n    return [arr[i*n:(i+1)*n] for i in range(len(arr)//n)]"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def split_list_nth(lst, n):\n    if n == 1:\n        return [lst[0]]\n    return [lst[i:i + n] for i in range(0, len(lst), n)]\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    n = 2\n    print(split_list_nth(lst, n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def split_list_by(l,n):\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\n\nif __name__ == '__main__':\n    print(split_list_by([1,2,3,4,5],2))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def split_list(my_list, n):\n    result = []\n    for i in range(0, len(my_list), n):\n        result.append(my_list[i:i + n])\n    return result\n\nprint(split_list([1,2,3,4,5,6,7,8,9], 2))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def split_list(l, n):\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\n\ndef split_list_fast(l, n):\n    if len(l) == 0:\n        return [l]\n\n    mid = len(l)//2\n    return [l[:mid], l[mid:]]\n\n\ndef split_list_slow(l, n):\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\n\nif __name__ == \"__main__\":\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 6))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 7))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 8))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 9))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 10))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    if n == 1:\n        return [list[0]]\n    else:\n        return [list[i:i+n] for i in range(0, len(list), n)]\n\n\ndef main():\n    list = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(split_list(list, 3))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return list[0:n] + list[n:]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def split(lst, n):\n    return lst[::n]\n\n\nprint(split([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i + n] for i in range(0, len(list), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5], 2))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return list[0:n] + list[n:]\n\n\nif __name__ == '__main__':\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i + n] for i in range(0, len(list), n)]\n\n\nif __name__ == '__main__':\n    list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    n = 2\n    print(split_list(list, n))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def split_list(arr, n):\n    split_list = []\n    for i in range(0, len(arr), n):\n        split_list.append(arr[i:i+n])\n    return split_list\n\ndef test():\n    arr = [1,2,3,4,5,6,7,8,9,10]\n    assert split_list(arr, 4) == [[1,2,3], [4,5,6], [7,8,9], [10]]\n\nif __name__ == '__main__':\n    test()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def split_list(list,n):\n    return [list[i::n] for i in range(n)]\n\n\nlist = [1,2,3,4,5,6,7,8,9,10]\n\nprint(split_list(list,2))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def split_list(l, n):\n    return l[::n]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 2))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def split(lst, n):\n\treturn lst[:n] + lst[n:]\n\nprint(split([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(split([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(split([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\nprint(split([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def split_list(lst, n):\n    return lst[n::n]\n\n\nif __name__ == \"__main__\":\n    lst = [1,2,3,4,5,6,7,8,9,10]\n    print(split_list(lst, 5))\n    print(split_list(lst, 4))\n    print(split_list(lst, 3))\n    print(split_list(lst, 2))\n    print(split_list(lst, 1))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i+n] for i in range(0, len(list), n)]\n\n\nif __name__ == \"__main__\":\n    list_ = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    n = 3\n    print(split_list(list_, n))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return list[0:n] + list[n:]"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def split_list(list, nth):\n    return list[nth:nth+len(list)]\n\n\nprint(split_list([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],3))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def split(n, lst):\n    return lst[::n]"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def split_list(list_, nth):\n    if nth == 0:\n        return list_\n    else:\n        return split_list(list_[nth:], nth - 1) + list_[:nth]\n\n\ndef main():\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def split_list(lst, n):\n    # split list into n lists\n    return [lst[i::n] for i in range(n)]\n\n\ndef test_split_list():\n    lst = [1, 2, 3, 4, 5]\n    assert split_list(lst, 1) == [1, 2, 3, 4, 5]\n    assert split_list(lst, 2) == [1, 2, 3, 4]\n    assert split_list(lst, 3) == [1, 2, 3, 4, 5]\n    assert split_list(lst, 4) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(lst, 5) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(lst, 6) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(lst, 7) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(lst, 8) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(lst, 9) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n\nif __name__ == \"__main__\":\n    test_split_list()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def split(list, nth):\n    if nth > len(list):\n        return list\n    else:\n        return list[0:nth] + list[nth+1:]\n\n\nprint(split([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def split_list(l, n):\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\n\nprint(split_list([1,2,3,4,5,6,7,8,9,10], 2))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    n = int(n)\n    return list[n:]+list[:n]\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7], 3))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 4))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 5))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 6))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 7))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 8))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 9))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 10))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 11))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 12))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 13))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], 14))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return list[0:n] + list[n:]\n\nprint(split_list([1,2,3,4,5,6,7,8,9], 3))\nprint(split_list([1,2,3,4,5,6,7,8,9], 5))\nprint(split_list([1,2,3,4,5,6,7,8,9], 7))\nprint(split_list([1,2,3,4,5,6,7,8,9], 10))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def split_list(list, n):\n    return list[0:n] + list[n:]"
    },
    {
      "rank": 30,
      "score": 9.0,
      "candidate": "def split_list(list, n):\n    return list[0:n] + list[n:]"
    },
    {
      "rank": 31,
      "score": 9.0,
      "candidate": "def split_list(l, n):\n    return l[:n] + l[n:]"
    },
    {
      "rank": 32,
      "score": 9.0,
      "candidate": "def split_list(l, n):\n    if n == 1:\n        return [l[0]]\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\nprint(split_list([1,2,3,4,5], 3))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def split_list(a, n):\n    return [a[i:i+n] for i in range(0, len(a), n)]"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def split_list(list_, nth):\n    return list_[nth::nth]"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def split_list(list_of_numbers, nth):\n    result = []\n\n    for i in range(nth):\n        result.append(list_of_numbers[i*len(list_of_numbers):(i+1)*len(list_of_numbers)])\n\n    return result\n\n\nprint(split_list([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return list[n:] + list[:n]\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nprint(split_list(list, 2))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def split_list(lst, n):\n    return [lst[i:i+n] for i in range(0, len(lst), n)]"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    return [l[i * n:(i + 1) * n] for i in range(len(l) // n + 1)]"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def split_list(lst, n):\n    res = []\n    for i in range(len(lst)):\n        res.append(lst[i:i+n])\n    return res\n\n\nprint(split_list([1, 2, 3, 4, 5], 3))\nprint(split_list([1, 2, 3, 4, 5], 2))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def split_list(list_, split_at):\n    return list_[split_at::split_at]\n\n\nif __name__ == '__main__':\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    return l[n:], l[:n]\n\nprint(split_list([1,2,3,4,5,6,7], 2))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return [list[i*n:(i+1)*n] for i in range(len(list)//n)]\n\n\nif __name__ == \"__main__\":\n    print(split_list([1,2,3,4,5], 3))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def split_list(lst, n):\n    return [lst[i:i + n] for i in range(0, len(lst), n)]"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def split(lst, n):\n    return [lst[i:i+n] for i in range(0, len(lst), n)]\n\n\nprint(split([1, 2, 3, 4, 5], 2))\nprint(split([1, 2, 3, 4, 5], 3))\nprint(split([1, 2, 3, 4, 5], 4))\nprint(split([1, 2, 3, 4, 5], 5))\nprint(split([1, 2, 3, 4, 5], 6))\nprint(split([1, 2, 3, 4, 5], 7))\nprint(split([1, 2, 3, 4, 5], 8))\nprint(split([1, 2, 3, 4, 5], 9))\nprint(split([1, 2, 3, 4, 5], 10))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return list[0::n] + list[1::n]"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def split_list(lst, n):\n    return [lst[i::n] for i in range(n)]\n\nprint(split_list([1,2,3,4,5,6,7,8,9], 3))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def split_list(list, nth):\n    return list[0::nth] + list[1::nth]\n\n\nif __name__ == \"__main__\":\n    assert split_list([1, 2, 3, 4, 5, 6, 7], 2) == [1, 2, 3, 4, 5, 6, 7]\n    assert split_list([1, 2, 3, 4, 5, 6, 7], 3) == [1, 2, 3, 4, 5, 6, 7]\n    assert split_list([1, 2, 3, 4, 5, 6, 7], 4) == [1, 2, 3, 4, 5, 6, 7]\n    assert split_list([1, 2, 3, 4, 5, 6, 7], 5) == [1, 2, 3, 4, 5, 6, 7]\n    assert split_list([1, 2, 3, 4, 5, 6, 7], 6) == [1, 2, 3, 4, 5, 6, 7]"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    return [l[i * n: (i + 1) * n] for i in range(len(l) // n + 1)]\n\n\nif __name__ == \"__main__\":\n    l = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    n = 3\n    print(split_list(l, n))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i + n] for i in range(0, len(list), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def split_list(arr, n):\n    # Your code here\n    return [arr[i:i+n] for i in range(0, len(arr), n)]"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def split_list(a, n):\n    if n == 1:\n        return [a]\n    else:\n        return [a[i:i+n] for i in range(0, len(a), n)]\n\n\ndef main():\n    l = [2, 7, 5, 6, 9, 9, 6, 5, 4, 3, 3, 2, 8, 5, 7, 9, 8]\n    print(split_list(l, 2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    l_size = len(l)\n    return [l[i:i + n] for i in range(0, l_size, n)]\n\nif __name__ == '__main__':\n    assert split_list([1, 2, 3, 4, 5], 3) == [1, 2], \"Test 1\"\n    assert split_list([1, 2, 3, 4, 5], 4) == [1, 2, 3, 4], \"Test 2\"\n    assert split_list([1, 2, 3, 4, 5], 5) == [1, 2, 3, 4, 5], \"Test 3\"\n    assert split_list([1, 2, 3, 4, 5], 6) == [1, 2, 3, 4, 5], \"Test 4\"\n    assert split_list([1, 2, 3, 4, 5], 7) == [1, 2, 3, 4, 5], \"Test 5\"\n    assert split_list([1, 2, 3, 4, 5], 8) == [1, 2, 3, 4, 5], \"Test 6\""
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def split_list(list_, n):\n    return list_[n:] + list_[:n]\n\nlist1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(split_list(list1, 5))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\n\ndef test_split_list():\n    assert split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 2) == [[1, 2, 3], [4, 5, 6, 7, 8, 9, 10]]\n    assert split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 3) == [[1, 2], [3, 4], [5, 6, 7, 8, 9, 10]]\n    assert split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4) == [[1, 2, 3, 4], [5, 6, 7, 8, 9, 10]]\n    assert split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5) == [[1, 2, 3, 4], [5, 6, 7, 8, 9, 10]]\n\nif __name__ == \"__main__\":\n    test_split_list()"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def split(l, n):\n    res = []\n    for i in range(0, len(l), n):\n        res.append(l[i:i+n])\n    return res\n\n\nprint(split([1, 2, 3, 4, 5], 3))\nprint(split([1, 2, 3, 4, 5], 2))\nprint(split([1, 2, 3, 4, 5], 1))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    result = []\n    for i in range(0, len(list), n):\n        result.append(list[i : i + n])\n    return result\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7], 3))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def split_list(l: list, n: int) -> list:\n    return l[0:n] + l[n:]\n\nprint(split_list([1,2,3,4,5,6], 3))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i+n] for i in range(0, len(list), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    result = []\n    for i in range(n):\n        result.append(list[i::n])\n    return result\n\nprint(split_list([1,2,3,4], 2))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    if len(list) <= n:\n        return [list]\n\n    result = []\n    for i in range(0, len(list), n):\n        result.append(list[i:i + n])\n\n    return result\n\n\nif __name__ == \"__main__\":\n    list = [1, 2, 3, 4, 5]\n    n = 3\n    print(split_list(list, n))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def split(l, n):\n    return l[0:n], l[n:]\n\nl = [1, 2, 3, 4, 5]\nn = 3\n\nprint(split(l, n))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def split_list(list_, n):\n    return [list_[i:i+n] for i in range(0, len(list_), n)]"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    if len(l) == 1:\n        return [l]\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5], 2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 5))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 5))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def split_list(a, n):\n    return [a[i:i+n] for i in range(0, len(a), n)]\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 1))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    return [l[i:i+n] for i in range(0, len(l), n)]\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 5))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 6))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 7))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    return l[0:n] + l[n+1:]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def split(lst, n):\n    if n == 1:\n        return [lst]\n\n    result = []\n    for i in range(0, len(lst), n):\n        result.append(lst[i:i+n])\n\n    return result\n\nprint(split([1, 2, 3, 4, 5, 6], 2))\nprint(split([1, 2, 3, 4, 5, 6], 3))\nprint(split([1, 2, 3, 4, 5, 6], 4))\nprint(split([1, 2, 3, 4, 5, 6], 5))\nprint(split([1, 2, 3, 4, 5, 6], 6))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def split_list_every_nth(list, nth):\n    return [list[i:i+nth] for i in range(0, len(list), nth)]\n\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(split_list_every_nth(list, 3))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    # Your code here\n    return list[0:n] + list[n:]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return list[0::n]\n\n\ndef main():\n    l = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print(split_list(l, 3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def split_list_by_every_nth(input_list, n):\n    return [input_list[i * n: (i + 1) * n] for i in range(len(input_list) // n)]\n\n\nif __name__ == \"__main__\":\n    assert split_list_by_every_nth([1, 2, 3, 4, 5], 2) == [[1, 2], [3, 4], [5]]\n    assert split_list_by_every_nth([1, 2, 3, 4, 5], 3) == [[1, 2, 3], [4, 5]]\n    assert split_list_by_every_nth([1, 2, 3, 4, 5], 4) == [[1, 2, 3, 4], [5]]\n    assert split_list_by_every_nth([1, 2, 3, 4, 5], 5) == [[1], [2, 3], [4], [5]]\n    assert split_list_by_every_nth([1, 2, 3, 4, 5], 6) == [[1, 2, 3, 4, 5], [6]]\n    assert split_list_by_every_nth([1, 2, 3, 4, 5], 7) == [[1, 2, 3, 4, 5], [6, 7]]"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return [list[i*n:(i+1)*n] for i in range(len(list)/n)]\n\nprint(split_list([1,2,3,4,5], 3))\nprint(split_list([1,2,3,4,5], 4))\nprint(split_list([1,2,3,4,5], 5))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def split_list(list_of_elements, nth):\n    if nth <= 0:\n        return list_of_elements\n    return [list_of_elements[i:i + nth] for i in range(0, len(list_of_elements), nth)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 3))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 4))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 5))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 6))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8], 7))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i + n] for i in range(0, len(list), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 1))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    if n == 0:\n        return [list[0]]\n    else:\n        return [list[i:i+n] for i in range(0, len(list), n)]\n\n\ndef test_split_list():\n    assert split_list([1, 2, 3, 4, 5, 6, 7, 8], 3) == [[1, 2, 3, 4, 5, 6, 7, 8], [1, 2, 3, 4, 5, 6, 7, 8, 9]]\n    assert split_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 4) == [[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def split_list(lst, n):\n    return [lst[i:i + n] for i in range(0, len(lst), n)]\n\n\nif __name__ == \"__main__\":\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def split(list, n):\n    if n == 1:\n        return [list[0]]\n    else:\n        return list[0:n] + list[n:]\n\nif __name__ == \"__main__\":\n    print(split([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def split_list(list_to_split, nth):\n    if nth == 1:\n        return [list_to_split[0]]\n    else:\n        return list_to_split[0:nth] + list_to_split[nth:]\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7], 3))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    if len(list) < n:\n        return [list]\n    return [list[i*n:(i+1)*n] for i in range(len(list)/n)]\n\nprint(split_list([1,2,3,4,5], 2))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def split_list(l, n):\n    l_split = []\n    for i in range(0, len(l), n):\n        l_split.append(l[i:i + n])\n    return l_split\n\nprint(split_list([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return list[n:] + list[:n]\n\nprint(split_list([1, 2, 3, 4, 5], 2))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def split_list(lst,n):\n    if n == 1:\n        return lst\n    return [lst[i:i+n] for i in range(0,len(lst),n)]\n\nif __name__ == \"__main__\":\n    print(split_list([1,2,3,4,5,6,7,8,9,10],3))\n    print(split_list([1,2,3,4,5,6,7,8,9,10],2))\n    print(split_list([1,2,3,4,5,6,7,8,9,10],1))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def split(list, n):\n    return list[::n]\n\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(split(list, 3))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i+n] for i in range(0, len(list), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "def split(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_2(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_3(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_4(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_5(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_6(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_7(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_8(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_9(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]\n\n\ndef split_10(lst, n):\n    return [lst[i * n: (i + 1) * n] for i in range(len(lst) // n + 1)]"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "def split_list_every_nth(lst, n):\n    res = []\n    for i in range(n):\n        res.append(lst[i::n])\n    return res\n\nif __name__ == \"__main__\":\n    assert split_list_every_nth([1,2,3,4,5,6,7,8,9], 5) == [[1,2,3,4,5], [6,7,8,9]]\n    assert split_list_every_nth([1,2,3,4,5,6,7,8,9], 4) == [[1,2,3,4,5], [6,7,8,9]]\n    assert split_list_every_nth([1,2,3,4,5,6,7,8,9], 3) == [[1,2,3,4,5], [6,7,8,9]]\n    assert split_list_every_nth([1,2,3,4,5,6,7,8,9], 2) == [[1,2,3,4,5], [6,7,8,9]]\n    assert split_list_every_nth([1,2,3,4,5,6,7,8,9], 1) == [[1,2,3,4,5], [6,7,8,9]]"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "def split(l, n):\n    return [l[i * n : (i + 1) * n] for i in range(len(l) // n + 1)]\n\n\nl = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(split(l, 2))"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "def split_list(my_list, n):\n    return [my_list[i * n : (i + 1) * n] for i in range(len(my_list) // n + 1)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "import numpy as np\n\n\ndef split_list(n, arr, step=1):\n    result = []\n    for i in range(0, len(arr), step):\n        result.append(arr[i:i+step])\n    return result\n\n\ndef test_split_list():\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    n = 4\n    assert split_list(n, arr) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 2) == [1, 2, 3, 4]\n    assert split_list(n, arr, 3) == [1, 2, 3, 4, 5]\n    assert split_list(n, arr, 4) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    n = 5\n    assert split_list(n, arr) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 2) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 3) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 4) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    n = 7\n    assert split_list(n, arr) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 2) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 3) == [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert split_list(n, arr, 4) == [1"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "def split_list(a, n):\n    return [a[i::n] for i in range(n)]\n\nif __name__ == \"__main__\":\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 4))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 5))\n    print(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 6))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i + n] for i in range(0, len(list), n)]\n\n\ndef main():\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 2))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 3))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 4))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 5))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 6))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 7))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 8))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 9))\n    print(split_list([1, 2, 3, 4, 5, 6, 7], 10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def split_list(lst, n):\n    result = []\n    for i in range(0, len(lst), n):\n        result.append(lst[i:i+n])\n    return result\n\n\nif __name__ == \"__main__\":\n    print(split_list([1, 2, 3, 4, 5, 6], 3))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def split_list(list_, split_num):\n    return [list_[i:i+split_num] for i in range(0, len(list_), split_num)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def split_list(list_, n):\n    return list_[0:n] + list_[n:]\n\n\nprint(split_list([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def split_list(list, nth):\n    if nth == 1:\n        return list[:nth]\n    else:\n        return split_list(list[:nth], nth - 1) + [list[nth]]\n\n\nif __name__ == \"__main__\":\n    test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n    print(split_list(test_list, 3))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def split_list(list, n):\n    return list[0::n]\n\n\nif __name__ == \"__main__\":\n    print(split_list([1, 2, 3, 4, 5], 3))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def split_list(arr, n):\n    return [arr[i:i + n] for i in range(0, len(arr), n)]\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(split_list(arr, 4))\n\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(split_list(arr, 5))\n\n    arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(split_list(arr, 1))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def split_list(list_, nth):\n    \"\"\"\n    :type list_: list\n    :type nth: int\n    :rtype: list\n    \"\"\"\n    if len(list_) == 0:\n        return list_\n    if nth == 0:\n        return [list_[0]]\n    else:\n        return [list_[i:i+nth] for i in range(0, len(list_), nth)]\n\n\nif __name__ == \"__main__\":\n    test_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    test_nth = 3\n    print(split_list(test_list, test_nth))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def split_list(list, n):\n    return [list[i:i + n] for i in range(0, len(list), n)]\n\n\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 3))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 0))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], 0))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -2))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint(split_list([1, 2, 3, 4, 5, 6, 7, 8, 9], -1))\nprint"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def split(l, n):\n    return [l[i:i + n] for i in range(0, len(l), n)]\n\n\nif __name__ == \"__main__\":\n    print(split([1, 2, 3, 4, 5], 3))\n    print(split([1, 2, 3, 4, 5], 4))\n    print(split([1, 2, 3, 4, 5], 5))"
    }
  ]
}