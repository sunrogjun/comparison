{
  "timestamp": "2025-09-14T14:03:07.487814",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 216,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def minimum(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    elif num2 < num1 and num2 < num3:\n        return num2\n    elif num3 < num1 and num3 < num2:\n        return num3\n    else:\n        return None\n\nprint(minimum(5, 5, 5))\nprint(minimum(5, 5, 5))\nprint(minimum(5, 5, 5))\nprint(minimum(5, 5, 5))\nprint(minimum(5, 5, 5))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def min_3(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < c and b < a:\n        return b\n    if c < a and c < b:\n        return c\n    return None\n\n\nif __name__ == '__main__':\n    a = float(input('Enter first number: '))\n    b = float(input('Enter second number: '))\n    c = float(input('Enter third number: '))\n    print(min_3(a, b, c))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def min_numbers(x, y, z):\n    if x < y and x < z:\n        return x\n    if y < z:\n        return y\n    if z < x:\n        return z"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def minimum(x, y, z):\n    if x < y and x < z:\n        return x\n    elif y < z:\n        return y\n    elif z < x:\n        return z\n\nprint(minimum(1, 2, 3))\nprint(minimum(2, 1, 3))\nprint(minimum(2, 2, 1))\nprint(minimum(1, 2, 1))\nprint(minimum(1, 2, 2))\nprint(minimum(1, 2, 2))\nprint(minimum(2, 2, 2))\nprint(minimum(1, 1, 2))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nif __name__ == '__main__':\n    print(minimum(1, 2, 3))\n    print(minimum(1, 2, 4))\n    print(minimum(2, 3, 4))\n    print(minimum(2, 3, 4, 5))\n    print(minimum(2, 3, 4, 5, 6))\n    print(minimum(2, 3, 4, 5, 6, 7))\n    print(minimum(2, 3, 4, 5, 6, 7, 8))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18))\n    print(minimum(2, 3, 4, 5, 6, 7, 8, 9"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def find_minimum(a, b, c):\n    return min(a, b, c)\n\n\nprint(find_minimum(1, 2, 3))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    else:\n        return c\n\nprint(find_min(2, 3, 4))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def minimum_of_three(a, b, c):\n    if a < b:\n        return a\n    elif b < c:\n        return b\n    else:\n        return c\n\nprint(minimum_of_three(1, 2, 3))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def min(a, b, c):\n    if a < b:\n        return a\n    if b < c:\n        return b\n    if c < a:\n        return c\n    return min(a, b, c)"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return -1\n\nif __name__ == \"__main__\":\n    print(minimum(1, 2, 3))\n    print(minimum(3, 2, 1))\n    print(minimum(1, 3, 2))\n    print(minimum(3, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print(minimum(1, 2, 1))\n    print"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def minimum(num1, num2, num3):\n    if num1 < num2:\n        return num1\n    elif num2 < num1:\n        return num2\n    elif num3 < num2:\n        return num3\n    else:\n        return num1\n\n\nprint(minimum(1, 2, 3))\nprint(minimum(1, 2, 3, 4))\nprint(minimum(1, 2, 3, 4, 5))\nprint(minimum(1, 2, 3, 4, 5, 6))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b:\n        return a\n    elif b < c:\n        return b\n    else:\n        return c\n\n\nprint(minimum(3, 6, 7))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    else:\n        return c\n\n\nif __name__ == '__main__':\n    print(min(1, 2, 3))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def minimum_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nprint(minimum_of_three(1, 2, 3))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    return min(a, b, c)\n\nprint(minimum(1, 2, 3))\nprint(minimum(4, 5, 6))\nprint(minimum(8, 9, 10))\nprint(minimum(1, 2, 4))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return \"The values are not sorted in any way.\"\n\n\nprint(find_min(1, 2, 3))\nprint(find_min(2, 1, 3))\nprint(find_min(2, 3, 1))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def min_three(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\nprint(min_three(1,2,3))\nprint(min_three(2,1,3))\nprint(min_three(1,2,3))\nprint(min_three(1,2,3))\nprint(min_three(1,2,3))\nprint(min_three(1,2,3))\nprint(min_three(1,2,3))\nprint(min_three(1,2,3))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def min_of_three(x, y, z):\n    return min(x, y, z)\n\n\nprint(min_of_three(2, 2, 2))\nprint(min_of_three(2, 2, 2, 2))\nprint(min_of_three(2, 2, 2, 2, 2))\nprint(min_of_three(2, 2, 2, 2, 2))\nprint(min_of_three(2, 2, 2, 2, 2))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and b < c:\n        return a\n    if a < c and b < c:\n        return b\n    if b < c and c < a:\n        return c\n    return min(a, b, c)\n\nprint(minimum(1, 2, 3))\nprint(minimum(2, 2, 2))\nprint(minimum(1, 2, 3))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\nprint(find_min(4, 5, 6))\nprint(find_min(8, 9, 10))\nprint(find_min(1, 2, 3))\nprint(find_min(5, 6, 7))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def min(a, b, c):\n    return min(a, b, c)\n\n\nprint(min(1, 2, 3))\nprint(min(1, 2, 4))\nprint(min(1, 2, 5))\nprint(min(2, 4, 5))\nprint(min(2, 4, 6))\nprint(min(1, 2, 3))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def min_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return -1"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def minimum(x, y, z):\n    min_num = min(x, y, z)\n    return min_num\n\n\nprint(minimum(1, 2, 3))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def min_of_three(a, b, c):\n    return min(a, b, c)"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def min_of_three(a, b, c):\n    min_value = a\n    if b < a and b < c:\n        min_value = b\n    elif c < a and c < b:\n        min_value = c\n    else:\n        min_value = a\n    return min_value\n\n\nprint(min_of_three(4, 5, 6))\nprint(min_of_three(5, 6, 5))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    return min(a, b, c)\n\n\nprint(minimum(1, 2, 3))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    else:\n        return c\n\n\nprint(minimum(1, 2, 3))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def minimum(a,b,c):\n    if (a<b and a<c):\n        return a\n    elif (b<a and b<c):\n        return b\n    elif (c<a and c<b):\n        return c\n    else:\n        return None\n\nprint(minimum(3,2,4))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    return min(a, b, c)\n\nprint(minimum(1, 2, 3))\nprint(minimum(1, 2, 4))\nprint(minimum(1, 2, 5))"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def find_min(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    elif num2 < num1 and num2 < num3:\n        return num2\n    elif num3 < num1 and num3 < num2:\n        return num3\n\n\nprint(find_min(10, 20, 30))"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def min_of_three(x, y, z):\n    return min(x, y, z)\n\n\nprint(min_of_three(1, 2, 3))"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b < c:\n        return a\n    elif b < a < c:\n        return b\n    else:\n        return c"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "def min_of_three(a, b, c):\n    return min(a, b, c)\n\n\nif __name__ == '__main__':\n    print(min_of_three(2, 3, 4))"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "def minimum_num(a,b,c):\n    min_num = min(a,b,c)\n    print(f\"The minimum of three numbers is {min_num}\")"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and b < c:\n        return a\n    elif b < a and c < a:\n        return b\n    elif c < b and a < b:\n        return c\n    else:\n        return a\n\nprint(minimum(2, 3, 5))"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "def find_min(x, y, z):\n    if x < y and x < z:\n        return x\n    elif y < z:\n        return y\n    else:\n        return z\n\nprint(find_min(2, 2, 2))"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "def find_min(a, b, c):\n    return min(a, b, c)"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "def find_min(a,b,c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return -1\n\nprint(find_min(2,3,4))\nprint(find_min(5,6,7))\nprint(find_min(1,2,3))"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None"
    },
    {
      "rank": 40,
      "score": 9.0,
      "candidate": "def find_min(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    elif num2 < num1 and num2 < num3:\n        return num2\n    else:\n        return num3\n\n\nprint(find_min(3, 7, 8))"
    },
    {
      "rank": 41,
      "score": 9.0,
      "candidate": "def min(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    return a\n\n\nif __name__ == \"__main__\":\n    print(min(1, 2, 3))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def min_three(a, b, c):\n    return min(a, b, c)\n\n\nprint(min_three(3, 2, 1))\nprint(min_three(2, 1, 3))\nprint(min_three(1, 2, 3))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def min_number(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return a"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def min(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    return -1\n\n\nprint(min(1, 2, 3))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def find_minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return \"No minimum\"\n\nprint(find_minimum(1, 2, 3))\nprint(find_minimum(1, 2, 4))\nprint(find_minimum(1, 2, 3))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def find_min(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    if num2 < num1 and num2 < num3:\n        return num2\n    if num3 < num1 and num3 < num2:\n        return num3\n    return -1\n\nprint(find_min(4, 5, 6))\nprint(find_min(4, 5, -6))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def min(a,b,c):\n    if a<b and a<c:\n        return a\n    if b<c:\n        return b\n    if c<a:\n        return c\n\nprint(min(2,3,4))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def min_3(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nprint(min_3(4, 3, 2))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def find_minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    return -1\n\n\nprint(find_minimum(1, 2, 3))\nprint(find_minimum(1, 2, -2))\nprint(find_minimum(1, 2, -3))\nprint(find_minimum(1, 2, -3))\nprint(find_minimum(1, -1, 2))\nprint(find_minimum(1, -1, -2))\nprint(find_minimum(1, -1, -3))\nprint(find_minimum(1, -1, -3))\nprint(find_minimum(1, -1, -3))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def find_min(x, y, z):\n    return min(x, y, z)"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def minimum_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nprint(minimum_of_three(1, 3, 2))\nprint(minimum_of_three(1, 2, 2))\nprint(minimum_of_three(1, 1, 1))\nprint(minimum_of_three(1, 2, 2))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def min_three(x, y, z):\n    if x < y and x < z:\n        return x\n    elif y < z:\n        return y\n    else:\n        return z\n\nprint(min_three(1, 2, 3))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def find_minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return \"Not enough numbers\"\n\nprint(find_minimum(2, 3, 4))\nprint(find_minimum(1, 2, 3))\nprint(find_minimum(1, 2, 4))\nprint(find_minimum(1, 2, 4))\nprint(find_minimum(3, 1, 2))\nprint(find_minimum(3, 1, 2))\nprint(find_minimum(1, 3, 2))\nprint(find_minimum(1, 3, 2))\nprint(find_minimum(3, 3, 2))\nprint(find_minimum(1, 3, 2))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def minimum_of_three(x, y, z):\n    if x < y and y < z:\n        return x\n    elif y < z and z < x:\n        return y\n    elif z < x and x < y:\n        return z\n    else:\n        return None\n\n\nif __name__ == '__main__':\n    assert minimum_of_three(1, 2, 3) == 1\n    assert minimum_of_three(3, 2, 1) == 3\n    assert minimum_of_three(2, 1, 3) == 2\n    assert minimum_of_three(1, 2, 3) == 1"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "import math\n\ndef find_min(a, b, c):\n    return min(a, b, c)\n\nprint(find_min(3, 5, 7))\nprint(find_min(5, 7, 3))\nprint(find_min(7, 3, 5))\nprint(find_min(5, 7, 3))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    min_num = a if a < b and a < c else b if b < c else c\n    return min_num\n\n\nif __name__ == \"__main__\":\n    print(find_min(1, 2, 3))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return min(a, b, c)\n\nprint(find_min(3, 3, 3))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "import sys\n\n\ndef minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n\n\nprint(minimum(3, 5, 10))\nprint(minimum(6, 7, 8))\nprint(minimum(4, 5, 6))\nprint(minimum(4, 5, 7))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    if a < b:\n        if a < c:\n            return a\n        else:\n            return b\n    elif b < c:\n        return b\n    elif c < a:\n        return c\n    else:\n        return a\n\n\nprint(find_min(2, 3, 5))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def min_three(a,b,c):\n    if a<b and a<c:\n        return a\n    elif b<a and b<c:\n        return b\n    elif c<a and c<b:\n        return c\n\n\nprint(min_three(3,4,6))\nprint(min_three(4,5,6))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    min_num = a\n    if b < min_num:\n        min_num = b\n    if c < min_num:\n        min_num = c\n    return min_num\n\nprint(find_min(1, 2, 3))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a < b:\n        if a < c:\n            return a\n        else:\n            return b\n    elif b < c:\n        return c\n    else:\n        return a\n\n\nprint(minimum(1, 2, 3))\nprint(minimum(2, 3, 4))\nprint(minimum(4, 3, 2))\nprint(minimum(2, 4, 3))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def find_minimum(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    elif num2 < num1 and num2 < num3:\n        return num2\n    elif num3 < num1 and num3 < num2:\n        return num3\n    else:\n        return \"Sorry, the number is not in the range.\"\n\n\nprint(find_minimum(1, 2, 3))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    if (a < b and b < c):\n        return a\n    elif (b < a and a < c):\n        return b\n    elif (c < a and a < b):\n        return c\n    else:\n        return None\n\n\nprint(find_min(1, 2, 3))\nprint(find_min(2, 1, 3))\nprint(find_min(1, 2, 3))\nprint(find_min(1, 2, 4))\nprint(find_min(1, 2, 5))\nprint(find_min(1, 2, 6))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def find_min(x,y,z):\n    if x < y and x < z:\n        return x\n    if y < z:\n        return y\n    return z\n\nprint(find_min(1,2,3))\nprint(find_min(2,1,3))\nprint(find_min(3,2,1))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def find_min(num1, num2, num3):\n    return min(num1, num2, num3)\n\nprint(find_min(1,2,3))\nprint(find_min(1,2,2))\nprint(find_min(1,2,1))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def minimum_of_three(a, b, c):\n    return min(a, b, c)\n\nprint(minimum_of_three(1, 2, 3))\nprint(minimum_of_three(1, 2, -1))\nprint(minimum_of_three(1, 2, 2))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and b < c:\n        return a\n    elif c < a and a < b:\n        return c\n    elif b < c and b < a:\n        return b\n    else:\n        return a\n\n\nif __name__ == '__main__':\n    print(minimum(1, 2, 3))\n    print(minimum(2, 2, 2))\n    print(minimum(2, 2, 2))\n    print(minimum(2, 2, 2))\n    print(minimum(2, 2, 2))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def minimum_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n\n\nif __name__ == \"__main__\":\n    assert minimum_of_three(1, 2, 3) == 1\n    assert minimum_of_three(1, 2, 4) == 1\n    assert minimum_of_three(1, 2, 5) == 1"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def find_min(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    elif num2 < num1 and num2 < num3:\n        return num2\n    else:\n        return num3\n\n\nif __name__ == \"__main__\":\n    print(find_min(5, 6, 7))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def min_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n\n\nif __name__ == \"__main__\":\n    print(min_of_three(1, 2, 3))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "import math\n\ndef min_of_three(a, b, c):\n    if a > b and a > c:\n        return a\n    if b > c:\n        return b\n    if c > a:\n        return c\n\nprint(min_of_three(1, 2, 3))\nprint(min_of_three(2, 3, 4))\nprint(min_of_three(1, 2, 3))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def minimum_of_three(a,b,c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return min(a,b,c)\n\nprint(minimum_of_three(1,2,3))\nprint(minimum_of_three(1,2,3))\nprint(minimum_of_three(1,2,4))\nprint(minimum_of_three(2,1,3))\nprint(minimum_of_three(2,1,4))\nprint(minimum_of_three(2,1,5))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\nprint(minimum(2, 3, 4))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def minimum(x, y, z):\n    if x < y and x < z:\n        return x\n    elif y < x and y < z:\n        return y\n    elif z < x and z < y:\n        return z\n\nprint(minimum(1, 2, 3))\nprint(minimum(2, 3, 1))\nprint(minimum(2, 3, 3))\nprint(minimum(2, 3, 4))\nprint(minimum(2, 3, 5))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nprint(find_min(1, 2, 3))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def min_of_three(a,b,c):\n    if a < b:\n        return a\n    elif b < c:\n        return b\n    elif c < a:\n        return c\n    else:\n        return a\n\nprint(min_of_three(1,2,3))\nprint(min_of_three(2,3,1))\nprint(min_of_three(3,1,2))\nprint(min_of_three(1,2,3))\nprint(min_of_three(2,3,1))\nprint(min_of_three(3,1,2))\nprint(min_of_three(1,2,3))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def minimum(num1, num2, num3):\n    if num1 < num2 and num1 < num3:\n        return num1\n    elif num2 < num1 and num2 < num3:\n        return num2\n    elif num3 < num1 and num3 < num2:\n        return num3\n\n\nprint(minimum(3, 4, 5))\nprint(minimum(4, 5, 6))\nprint(minimum(5, 6, 7))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def findMin(a, b, c):\n    return min(a, b, c)\n\nprint(findMin(1, 2, 3))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def find_min(a,b,c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    else:\n        return min(a,b,c)\n\nprint(find_min(1,2,3))\nprint(find_min(2,3,1))\nprint(find_min(1,2,3))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return \"Not possible\"\n\n\nprint(minimum(2, 3, 4))\nprint(minimum(3, 4, 5))\nprint(minimum(3, 4, 1))\nprint(minimum(1, 1, 1))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def min_of_three(a, b, c):\n    return min(a, b, c)\n\n\nprint(min_of_three(1, 2, 3))\nprint(min_of_three(1, 2, -3))\nprint(min_of_three(2, 1, 3))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    min_value = a\n    if a < b and a < c:\n        min_value = a\n    elif b < a and b < c:\n        min_value = b\n    elif c < a and c < b:\n        min_value = c\n    return min_value\n\n\nprint(find_min(1, 2, 3))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def find_min(a,b,c):\n    if a<b and a<c:\n        return a\n    elif b<c:\n        return b\n    else:\n        return c\n\nprint(find_min(1,2,3))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\nprint(minimum(1, 2, 3))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def min_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return min(a, b, c)\n\nprint(min_of_three(1, 2, 3))\nprint(min_of_three(2, 3, 4))\nprint(min_of_three(2, 3, 4, 5))\nprint(min_of_three(2, 3, 4, 5, 6))\nprint(min_of_three(2, 3, 4, 5, 6, 7))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8, 9))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8, 9, 10))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8, 9, 10, 11))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13))\nprint(min_of_three(2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a > b and a > c:\n        return a\n    if b > c and b > a:\n        return b\n    if c > a and c > b:\n        return c\n\n\nprint(minimum(2, 3, 4))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def find_minimum(a, b, c):\n    if a > b and a > c:\n        return a\n    if b > c and b > a:\n        return b\n    if c > a and c > b:\n        return c\n    return None\n\nprint(find_minimum(1, 2, 3))\nprint(find_minimum(1, 2, 4))\nprint(find_minimum(1, 2, 5))\nprint(find_minimum(2, 3, 4))\nprint(find_minimum(2, 3, 5))\nprint(find_minimum(1, 2, 1))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def find_min(x, y, z):\n    if x < y and x < z:\n        return x\n    elif y < z:\n        return y\n    else:\n        return z\n\n\nprint(find_min(3, 5, 6))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def minimum_of_three(a, b, c):\n    if a < b and b < c:\n        return a\n    elif c < a and a < b:\n        return c\n    elif b < c and b < a:\n        return b\n    elif a < c and c < b:\n        return a\n    else:\n        return c\n\n\nif __name__ == '__main__':\n    print(minimum_of_three(1, 2, 3))\n    print(minimum_of_three(1, 2, 4))\n    print(minimum_of_three(2, 3, 4))\n    print(minimum_of_three(2, 3, 5))\n    print(minimum_of_three(2, 3, 6))\n    print(minimum_of_three(3, 4, 5))\n    print(minimum_of_three(3, 4, 6))\n    print(minimum_of_three(4, 5, 6))\n    print(minimum_of_three(4, 5, 7))\n    print(minimum_of_three(5, 6, 7))\n    print(minimum_of_three(5, 6, 8))\n    print(minimum_of_three(5, 6, 9))\n    print(minimum_of_three(5, 6, 10))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    return min(a, b, c)\n\nprint(find_min(1, 2, 3))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    min_num = min(a, b, c)\n    print(min_num)\n\n\nif __name__ == \"__main__\":\n    minimum(1, 2, 3)"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def find_min(a, b, c):\n    return min(a, b, c)\n\nprint(find_min(1, 2, 3))\nprint(find_min(2, 3, 1))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nprint(min(5, 6, 7))"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def minimum(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    return None\n\n\nif __name__ == '__main__':\n    print(minimum(4, 5, 6))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def min_of_three(a, b, c):\n    if a > b and a > c:\n        return a\n    elif b > a and b > c:\n        return b\n    elif c > a and c > b:\n        return c\n    else:\n        return None\n\nprint(min_of_three(1, 2, 3))\nprint(min_of_three(2, 3, 4))\nprint(min_of_three(1, 4, 2))\nprint(min_of_three(2, 4, 3))\nprint(min_of_three(2, 4, 1))\nprint(min_of_three(2, 4, 4))\nprint(min_of_three(1, 4, 3))\nprint(min_of_three(3, 4, 2))\nprint(min_of_three(1, 4, 3))\nprint(min_of_three(1, 4, 4))\nprint(min_of_three(2, 4, 3))\nprint(min_of_three(1, 4, 2))\nprint(min_of_three(2, 4, 1))\nprint(min_of_three(2, 4, 4))\nprint(min_of_three(1, 4, 3))\nprint(min_of_three(4, 3, 2))\nprint(min_of_three(4, 2, 1))\nprint(min_of_three(3, 2, 1))\nprint(min_of_three(2, 2, 4))\nprint(min_of_three(3, 2, 4))\nprint(min_of_three(3, 2, 1))\nprint(min_of_three(1, 4, 2))\nprint(min_of_three(1, 4, 3))\nprint(min_of_three(1, 4, 4))\nprint(min_of_three(1, 4, 3))\nprint(min_of_three(1, 4, 2))\nprint(min_of_three(1, 4, 4))\nprint(min_of_three"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def min_of_three(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    return min(a, b, c)\n\nprint(min_of_three(1, 2, 3))\nprint(min_of_three(2, 3, 4))\nprint(min_of_three(3, 4, 5))\nprint(min_of_three(4, 5, 6))\nprint(min_of_three(5, 6, 7))\nprint(min_of_three(6, 7, 8))\nprint(min_of_three(7, 8, 9))\nprint(min_of_three(8, 9, 10))\nprint(min_of_three(9, 10, 11))\nprint(min_of_three(10, 11, 12))\nprint(min_of_three(11, 12, 13))\nprint(min_of_three(12, 13, 14))\nprint(min_of_three(13, 14, 15))\nprint(min_of_three(14, 15, 16))\nprint(min_of_three(15, 16, 17))\nprint(min_of_three(16, 17, 18))\nprint(min_of_three(17, 18, 19))\nprint(min_of_three(18, 19, 20))\nprint(min_of_three(19, 20, 21))\nprint(min_of_three(20, 21, 22))\nprint(min_of_three(21, 22, 23))\nprint(min_of_three(22, 23, 24))\nprint(min_of_three(23, 24, 25))\nprint(min_of_three(24, 25, 26))\nprint(min_of_three(25, 26, 27))\nprint(min_of_three(26, 27, 28))\nprint(min_of_three(27, 28, 29))\nprint(min_of"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    elif b < a and b < c:\n        return b\n    elif c < a and c < b:\n        return c\n    else:\n        return None\n\n\nprint(find_min(5, 8, 9))\nprint(find_min(8, 9, 4))\nprint(find_min(4, 8, 9))\nprint(find_min(4, 8, 3))\nprint(find_min(5, 8, 3))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def find_minimum(a, b, c):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :type c: int\n    :rtype: int\n    \"\"\"\n    if a < b:\n        return a\n    elif b < c:\n        return b\n    else:\n        return c\n\n\nprint(find_minimum(1, 2, 3))\nprint(find_minimum(1, 2, 1))\nprint(find_minimum(1, 2, 0))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def find_min(a, b, c):\n    if a < b and a < c:\n        return a\n    if b < a and b < c:\n        return b\n    if c < a and c < b:\n        return c\n    return None\n\n\nprint(find_min(1, 2, 3))\nprint(find_min(1, 2, 4))\nprint(find_min(2, 1, 3))\nprint(find_min(2, 1, 4))\nprint(find_min(2, 1, 5))"
    }
  ]
}