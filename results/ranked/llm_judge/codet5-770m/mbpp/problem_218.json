{
  "timestamp": "2025-09-14T14:03:58.954864",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 218,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def re_arrange_array(arr):\n    arr.sort()\n    return arr\n\n\narr = [-10, -5, 2, -3, 4, -1]\nprint(re_arrange_array(arr))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    if not arr:\n        return\n\n    negative = 0\n    positive = len(arr) - 1\n    while negative < positive:\n        if arr[negative] < 0:\n            arr[negative], arr[positive] = arr[positive], arr[negative]\n            negative += 1\n            positive -= 1\n        else:\n            positive -= 1\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [0, -1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12, -13, -14, -15]\n    print(arr)\n    rearrange(arr)\n    print(arr)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def re_arrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, -1)\n\n    return arr\n\narr = [-1, -2, -3, -4, -5, -6, -7, -8, -9]\nprint(re_arrange(arr))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def re_arrange_elements(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = abs(arr[i])\n            break\n    for i in range(len(arr)-1,-1,-1):\n        if arr[i] < 0:\n            arr[i] = abs(arr[i])\n            break\n    return arr\n\n\nprint(re_arrange_elements([0, -1, 2, 3, -1, -3, 4, -2, -1]))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def negative_reorder(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n        else:\n            arr[i] = arr[i] * -1\n            \n\narr = [-2, -3, -4, -1, 0, 1, 2, 3, 4]\nnegative_reorder(arr)\nprint(arr)"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n\narr = [1, 2, -3, -4, 5]\nrearrange(arr)\nprint(arr)"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def rearrange_negative(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n\n\narr = [5, -1, 4, -5, 3, 2, -1, -7, -3]\nrearrange_negative(arr)\nprint(arr)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    arr.sort(reverse=True)\n    return arr\n\n\nprint(rearrange([-3, 5, -2, -1, 6, -4, -3, 2, -1, -5, -4, -7]))\nprint(rearrange([-3, 5, -2, -1, 6, -4, -3, 2, -1, -5, -4, -7, -8, 9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -40, -41, -42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81, -82, -83, -84, -85, -86, -87, -88, -89, -90, -91, -92, -93, -94, -95, -96, -97, -98, -99, -100, -101, -102, -103, -104, -105, -106, -107, -108, -109, -110, -111, -112, -113, -114, -115, -116, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            arr[i] = -arr[i]\n\n    return arr\n\n\nprint(rearrange([-1, 0, 1, 2, -3, 4, -5]))\nprint(rearrange([-5, -4, -3, -2, -1]))\nprint(rearrange([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def negative_rearrange(arr):\n    if arr is None:\n        return\n    for i in range(len(arr)-1, -1, -1):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n    return arr\n\n\ndef main():\n    arr = [-1, -4, 0, 4, -2, -3, -5, -6, 8, 9]\n    print(negative_rearrange(arr))\n\n\nmain()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def rearrange_array(arr):\n    new_arr = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            new_arr.append(arr[i])\n    return new_arr\n\nprint(rearrange_array([-4,-2,-1,0,3,4,5]))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def re_arrange_array(arr):\n    if len(arr) == 0:\n        return arr\n\n    neg_count = 0\n    pos_count = 0\n\n    for i in arr:\n        if i < 0:\n            neg_count += 1\n        elif i == 0:\n            pos_count += 1\n\n    for i in range(neg_count):\n        arr.remove(0)\n\n    for i in range(pos_count):\n        arr.append(0)\n\n    return arr"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def re_arrange(nums):\n    if len(nums) == 0:\n        return\n    if nums[0] < 0:\n        return\n    while len(nums) > 1:\n        if nums[len(nums) - 1] < 0:\n            nums.pop()\n        else:\n            nums.pop(0)\n    return nums\n\n\n\n\n\nif __name__ == \"__main__\":\n    print(re_arrange([-1, 2, -4, -3, 1, 5, 6, -4]))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    i = 0\n    while i < len(arr):\n        if arr[i] < 0:\n            arr[i] = 0\n            i += 1\n        else:\n            i += 1\n\n    return arr\n\narr = [1, -4, 3, -2, 5, 4, -1]\nrearrange(arr)\nprint(arr)"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        i = 0\n        j = len(nums) - 1\n        while i < j:\n            if nums[i] < 0 and nums[j] > 0:\n                nums[i], nums[j] = nums[j], nums[i]\n            elif nums[i] < 0:\n                i += 1\n            elif nums[j] > 0:\n                j -= 1\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    assert s.rearrangeArray([-1, 0, 1, 2, -4]) == [2, 1, -4, 0, 1]\n    assert s.rearrangeArray([-1, -2, -3, -4, -5]) == [-1, -5, -4, -3, -2]"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def negative_arrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = -arr[i]\n\n\narr = [2, -4, -1, -3, -8, -7, -6, -9]\nnegative_arrange(arr)\nprint(arr)"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def rearrange(nums):\n    if nums[0] < 0:\n        return nums\n    i = 0\n    while i < len(nums):\n        if nums[i] < 0:\n            nums[i] = -nums[i]\n            i += 1\n        else:\n            i += 1\n    return nums\n\nprint(rearrange([-1, -4, -3, -2, -1, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def rearrange_negative(arr):\n    arr.reverse()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n\n\narr = [-2, -5, -10, -2, -4, -3, -10, -1, 2, 3, -4, -6, -10, -10]\nrearrange_negative(arr)\nprint(arr)"
    },
    {
      "rank": 19,
      "score": 8.960776850863066,
      "candidate": "def negative_rearrange(arr):\n    pos_index = 0\n    neg_index = len(arr) - 1\n\n    while pos_index < neg_index:\n        if arr[pos_index] < 0:\n            arr[pos_index], arr[neg_index] = arr[neg_index], arr[pos_index]\n            pos_index += 1\n            neg_index -= 1\n        else:\n            pos_index += 1\n\n\nif __name__ == \"__main__\":\n    arr = [-1, 0, 1, 2, -1, -4]\n    negative_rearrange(arr)\n    print(arr)"
    },
    {
      "rank": 20,
      "score": 8.951996511378214,
      "candidate": "def rearrange_array(array):\n    if len(array) < 2:\n        return array\n\n    array.sort()\n\n    i = 0\n    j = len(array) - 1\n\n    while i <= j:\n        if array[i] < 0:\n            array[i], array[j] = array[j], array[i]\n            i += 1\n            j -= 1\n        else:\n            i += 1\n\n    return array"
    },
    {
      "rank": 21,
      "score": 8.892003653872816,
      "candidate": "def rearrange_negative(arr):\n    neg_count = 0\n    pos_count = 0\n\n    for i in arr:\n        if i < 0:\n            neg_count += 1\n        else:\n            pos_count += 1\n\n    for i in range(neg_count):\n        arr.insert(pos_count, -i)\n\n    return arr\n\nprint(rearrange_negative([-1, 1, -2, -3, 4, -5]))"
    },
    {
      "rank": 22,
      "score": 8.784674286868109,
      "candidate": "def re_arrange(arr):\n    while True:\n        for i in range(len(arr)):\n            if arr[i] < 0:\n                arr[i], arr[len(arr) - 1 - i] = arr[len(arr) - 1 - i], arr[i]\n        if not arr:\n            break\n\n\narr = [-2, -3, 4, -1, 0, 1, 2, 3]\nre_arrange(arr)\nprint(arr)"
    },
    {
      "rank": 23,
      "score": 8.715672270888268,
      "candidate": "def negative_rearrange(nums):\n    pos = []\n    neg = []\n    for i in range(len(nums)):\n        if nums[i] < 0:\n            pos.append(nums[i])\n        else:\n            neg.append(nums[i])\n    return pos + neg\n\n\n\n\n\nprint(negative_rearrange([-1,0,1,2,3,4]))"
    },
    {
      "rank": 24,
      "score": 8.71257796583453,
      "candidate": "def rearrange_array(arr):\n    pos = []\n    neg = []\n    for i in arr:\n        if i < 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n    pos.sort()\n    neg.sort()\n    for i in range(len(pos)):\n        arr[pos[i]] = i+1\n    for i in range(len(neg)):\n        arr[neg[i]] = i-1\n    return arr\n\n\narr = [-4, 3, 2, -1, -5, 0, 5, 7, 4, 9, 1, 2]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 25,
      "score": 8.697697905064905,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n    return arr\n\nprint(rearrange([-1,-2,-3,0,1,2,3,4,5,6,7]))"
    },
    {
      "rank": 26,
      "score": 8.623489258827814,
      "candidate": "def rearrange_negative(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    assert rearrange_negative([4, -1, 3, 2, -2]) == [2, 3, 4, -1, -2]"
    },
    {
      "rank": 27,
      "score": 8.568424790498517,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n\n\nif __name__ == '__main__':\n    arr = [-4, -3, -2, 1, 0, 5]\n    rearrange(arr)\n    print(arr)"
    },
    {
      "rank": 28,
      "score": 8.553761376807621,
      "candidate": "def re_arrange_array(array):\n    for i in range(len(array)):\n        if array[i] < 0:\n            array[i] = -array[i]\n        else:\n            pass\n    return array\n\n\nif __name__ == \"__main__\":\n    print(re_arrange_array([-1, -2, -3, -4, -5, -6, -7, -8, -9]))"
    },
    {
      "rank": 29,
      "score": 8.551392154344727,
      "candidate": "def rearrange_array(arr):\n    n = len(arr)\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] = -arr[i]\n    for i in range(n):\n        if arr[i] > 0:\n            arr[i] = 1\n    return arr\n\n\nprint(rearrange_array([1, 2, -3, 4]))\nprint(rearrange_array([-2, 0, 1]))"
    },
    {
      "rank": 30,
      "score": 8.513369430796013,
      "candidate": "def rearrange_array(arr):\n    i = 0\n    j = len(arr)-1\n    while i < j:\n        if arr[i] < 0:\n            i += 1\n        elif arr[j] > 0:\n            j -= 1\n        else:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n    return arr\n\narr = [3, -1, 2, 4, -1]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 31,
      "score": 8.509408652281255,
      "candidate": "def re_arrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n    return arr\n\narr = [-10, -3, 4, 5, -2, -1]\nprint(re_arrange(arr))"
    },
    {
      "rank": 32,
      "score": 8.500995977237135,
      "candidate": "def rearrange(arr):\n    # Write your code here\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\n\narr = [-5, -10, -5, -7, 0, 10, 5, 7, -5]\nprint(rearrange(arr))"
    },
    {
      "rank": 33,
      "score": 8.47472550070116,
      "candidate": "def rearrange_negative(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n            print(arr)\n\n\nrearrange_negative([1, -2, 3, -1])"
    },
    {
      "rank": 34,
      "score": 8.47316997696304,
      "candidate": "def rearrange_array(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n\n    return arr\n\n\narr = [1, -1, 2, -2, 3, -3, 4, -4, 5]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 35,
      "score": 8.46672875199146,
      "candidate": "def re_arrange_negative_elements(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n\n\nif __name__ == \"__main__\":\n    arr = [0, -5, 1, -3, 4, 2, -1, 5]\n    re_arrange_negative_elements(arr)\n    print(arr)"
    },
    {
      "rank": 36,
      "score": 8.439990360280927,
      "candidate": "def rearrange_array(arr):\n    i = 0\n    j = len(arr)-1\n    while i<j:\n        if arr[i] < 0:\n            i += 1\n        elif arr[j] < 0:\n            j -= 1\n        else:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n    return arr\n\narr = [-4, -2, -1, 0, 1, 2, 3, 4]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 37,
      "score": 8.420681104322934,
      "candidate": "def rearrange_negative(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i], arr[i + 1] = arr[i + 1], arr[i]\n\n\nif __name__ == \"__main__\":\n    arr = [2, -1, -3, 4]\n    rearrange_negative(arr)\n    print(arr)"
    },
    {
      "rank": 38,
      "score": 8.398817225057954,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)-1, -1, -1):\n        if arr[i] < 0:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n    return arr\n\n\nprint(rearrange([-1, 0, 2, 4, 3, -1, 5]))\nprint(rearrange([-1, -1, -1, 0, 1, 2, -1, -1, -1, -1]))"
    },
    {
      "rank": 39,
      "score": 8.31736729190706,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n        elif arr[i] > 0:\n            arr[i] += 1\n    return arr\n\n\narr = [2, -4, 0, 5, 1, -3, 4]\nprint(rearrange(arr))"
    },
    {
      "rank": 40,
      "score": 8.29075362576626,
      "candidate": "def rearrange(nums):\n    for i in range(len(nums)):\n        if nums[i] < 0:\n            nums[i] = 0\n            nums[i-1] = -nums[i-1]\n        elif nums[i] > 0:\n            nums[i] = nums[i] * -1\n    return nums\n\n\nif __name__ == \"__main__\":\n    print(rearrange([0, -4, 4, -1, -2, 2, 5, -3, -4, 3, -6, -7]))"
    },
    {
      "rank": 41,
      "score": 8.286316945955498,
      "candidate": "def re_arrange_array(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\n\nprint(re_arrange_array([-1, 0, 1, 2, -3, 4]))"
    },
    {
      "rank": 42,
      "score": 8.264798145351135,
      "candidate": "def rearrange_negative(arr):\n    pos_count = 0\n    neg_count = 0\n    for i in arr:\n        if i < 0:\n            pos_count += 1\n        else:\n            neg_count += 1\n    if neg_count > pos_count:\n        for i in range(neg_count):\n            arr.pop()\n    elif pos_count > neg_count:\n        for i in range(pos_count):\n            arr.insert(0, -1)\n    return arr\n\n\nif __name__ == '__main__':\n    assert rearrange_negative([-2, 0, 1, 2, -1, -4]) == [-1, -4, -2, 0, 1, 2]\n    assert rearrange_negative([-1, -2, 0, 1, 2, -1, -4]) == [-1, -4, -2, 0, 1, 2]\n    assert rearrange_negative([-1, -2, 0, 1, 2, -1, -4, -3]) == [-1, -4, -2, 0, 1, 2, 3]\n    assert rearrange_negative([-1, -2, 0, 1, 2, -1, -4, -3, -2]) == [-1, -4, -2, 0, 1, 2, 3]"
    },
    {
      "rank": 43,
      "score": 8.231554925424753,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n    return arr\n\narr = [-1, 0, 2, -3, 4]\nprint(rearrange(arr))"
    },
    {
      "rank": 44,
      "score": 8.167502661780974,
      "candidate": "def rearrange_elements(arr):\n    positive = 0\n    negative = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            positive += 1\n        else:\n            negative += 1\n    for i in range(len(arr)):\n        arr[i] = positive if arr[i] > 0 else negative\n\n\nif __name__ == \"__main__\":\n    arr = [-1, 0, 1, 2, -5, -3]\n    rearrange_elements(arr)\n    print(arr)"
    },
    {
      "rank": 45,
      "score": 8.144796499522444,
      "candidate": "def rearrange_negative_elements(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\nprint(rearrange_negative_elements([-1,0,1,2,3,4]))"
    },
    {
      "rank": 46,
      "score": 8.095399837888998,
      "candidate": "def rearrange_elements(arr):\n    if arr is None:\n        return None\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n    return arr\n\nprint(rearrange_elements([-1, 2, -3, 4, -5, 6, -7, 8, -9]))"
    },
    {
      "rank": 47,
      "score": 8.064616563895084,
      "candidate": "def rearrange_negative_elements(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i], arr[i + 1] = arr[i + 1], arr[i]\n    return arr\n\n\nprint(rearrange_negative_elements([-2, 0, 1, -3]))"
    },
    {
      "rank": 48,
      "score": 8.006143048307962,
      "candidate": "def negative_rearrange(arr):\n    for i in range(len(arr)-1,-1,-1):\n        if arr[i] < 0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(negative_rearrange([-1, -2, -3, 4, -5]))"
    },
    {
      "rank": 49,
      "score": 7.978384223003799,
      "candidate": "def re_arrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        while pos < neg and arr[pos] < 0:\n            pos += 1\n        while pos < neg and arr[pos] > 0:\n            neg -= 1\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n        pos += 1\n        neg -= 1\n    return arr\n\n\narr = [-1, -3, 2, 5, -2, -5, -2, -1, -5, 1, 5, -3, -2, -2, -2, -1]\nprint(re_arrange(arr))"
    },
    {
      "rank": 50,
      "score": 7.875221559715143,
      "candidate": "def rearrange_array(arr):\n    arr.sort()\n    i = 0\n    j = len(arr)-1\n    while i < j:\n        if arr[i] < 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            j -= 1\n        i += 1\n    return arr\n\narr = [-1,-2,-3,-4,0,1,2,3,4]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 51,
      "score": 7.862641193174742,
      "candidate": "def rearrange(arr):\n    # Write your code here\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] > 0:\n            neg -= 1\n    return arr\n\nprint(rearrange([-4, -3, -2, 0, 1, 2, 3, 4, 5]))"
    },
    {
      "rank": 52,
      "score": 3.9076163104093795,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        nums.sort()\n        for i in range(len(nums)):\n            if nums[i] < 0:\n                nums[i] = abs(nums[i])\n        return nums\n\na = Solution()\nprint(a.rearrangeArray([-2,0,2,-1]))"
    },
    {
      "rank": 53,
      "score": 3.773814279598622,
      "candidate": "def negative_rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] *= -1\n\n\nif __name__ == '__main__':\n    arr = [1, -5, 2, 0, 3, -6, 4]\n    negative_rearrange(arr)\n    assert arr == [3, -6, 2, 0, 1, 5]"
    },
    {
      "rank": 54,
      "score": 3.7462846296399324,
      "candidate": "def re_arrange_negative(arr):\n    # Write your code here\n    return arr\n\nprint(re_arrange_negative([-1, 0, 1, 2, -3]))"
    },
    {
      "rank": 55,
      "score": 3.7181678967715612,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if not nums:\n            return\n\n        pos = 0\n        neg = len(nums)-1\n\n        while pos < neg:\n            if nums[pos] < 0:\n                nums[pos], nums[neg] = nums[neg], nums[pos]\n                pos += 1\n                neg -= 1\n            elif nums[pos] > 0:\n                neg -= 1\n            else:\n                pos += 1"
    },
    {
      "rank": 56,
      "score": 3.517989890847269,
      "candidate": "def rearrange_negative_elements(arr):\n    # Your code here\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n\n    return arr\n\narr = [-3,-2,-1,0,1,3,5]\nprint(rearrange_negative_elements(arr))"
    },
    {
      "rank": 57,
      "score": 3.491731119967092,
      "candidate": "def rearrange_elements(arr):\n    # Write your code here\n    if arr == None:\n        return None\n    else:\n        if arr[0] < 0:\n            arr.reverse()\n        else:\n            arr.insert(0, 0)\n        return arr\n\nif __name__ == '__main__':\n    arr = [1,-2,3,4,-5,6,-7]\n    print(rearrange_elements(arr))"
    },
    {
      "rank": 58,
      "score": 3.478017112289956,
      "candidate": "def rearrange(nums):\n    # Write your code here\n    for i in range(len(nums)):\n        if nums[i] < 0:\n            nums[i], nums[len(nums) - 1 - i] = nums[len(nums) - 1 - i], nums[i]\n\n\nrearrange([-1, 1, -2, 3, -4])"
    },
    {
      "rank": 59,
      "score": 3.456327258366937,
      "candidate": "def rearrange_array(arr):\n    if len(arr) == 0:\n        return arr\n    arr.sort(reverse=True)\n    return arr\n\n\nif __name__ == \"__main__\":\n    assert rearrange_array([-2, -1, 0, 1, 2, 3, 4, 5, 6]) == [5, 6, 7, 8, 9, 10, 11, 12]"
    },
    {
      "rank": 60,
      "score": 3.4030470069305627,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            arr[i] = -arr[i]\n\n    return arr\n\n\nprint(rearrange([-2, -3, -4, -5, -6, -7]))\nprint(rearrange([-2, -3, -4, -5]))\nprint(rearrange([0, -2, -3, -4, -5, -6, -7]))\nprint(rearrange([-2, -3, -4, -5, -6, -7, -8]))"
    },
    {
      "rank": 61,
      "score": 3.361848624197751,
      "candidate": "class Solution:\n    def rearrangeArray(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: void Do not return anything, modify arr in-place instead.\n        \"\"\"\n        i = 0\n        j = len(arr) - 1\n        while i < j:\n            if arr[i] < 0:\n                arr[i], arr[j] = arr[j], arr[i]\n                i += 1\n                j -= 1\n            elif arr[i] == 0:\n                arr[i], arr[j] = arr[j], arr[i]\n                i += 1\n                j -= 1\n            elif arr[i] > 0:\n                j -= 1\n\n\narr = [-1, 0, 1, -2, 3, 4, -5, 6]\nSolution().rearrangeArray(arr)\nprint(arr)"
    },
    {
      "rank": 62,
      "score": 3.3173673836693394,
      "candidate": "class Solution:\n    # @param A : list of integers\n    # @return an integer\n    def rearrangeArray(self, A):\n        i = 0\n        j = len(A) - 1\n        while i < j:\n            if A[i] < 0:\n                A[i], A[j] = A[j], A[i]\n                i += 1\n                j -= 1\n            else:\n                i += 1\n        return A\n\na = Solution()\nprint(a.rearrangeArray([-1,0,1,2,-1,-4]))"
    },
    {
      "rank": 63,
      "score": 3.2997213815320254,
      "candidate": "class Solution:\n    def rearrangeArray(self, arr: List[int]) -> List[int]:\n        pos = []\n        neg = []\n        for i in range(len(arr)):\n            if arr[i] < 0:\n                pos.append(arr[i])\n            else:\n                neg.append(arr[i])\n        return pos + neg\n\n\nif __name__ == '__main__':\n    arr = [-2, -1, 0, 1, 2, 3, 4, 5]\n    out = [-1, 0, 2, 3, 4, 5]\n    print(Solution().rearrangeArray(arr))\n    assert out == Solution().rearrangeArray(arr)"
    },
    {
      "rank": 64,
      "score": 3.243389934975504,
      "candidate": "def negative_arrange(arr):\n    # write your code here\n    new_arr = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            new_arr.append(arr[i])\n    return new_arr\n\n\nif __name__ == '__main__':\n    assert negative_arrange([-2, 0, -1, 1, 2, 3, 4]) == [1, 2, 3, 4, 5, 6]\n    assert negative_arrange([-2, 0, -1, 1, 2, 3, 4, 5, 6, 7, 8, 9]) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9]"
    },
    {
      "rank": 65,
      "score": 3.177201652273341,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        while len(nums) > 0:\n            if nums[0] < 0:\n                nums.pop(0)\n            else:\n                break\n        while len(nums) > 0:\n            if nums[-1] < 0:\n                nums.pop(-1)\n            else:\n                break\n        return nums"
    },
    {
      "rank": 66,
      "score": 3.177083846699123,
      "candidate": "def rearrange(arr):\n    new_arr = []\n    for i in arr:\n        if i < 0:\n            new_arr.append(i)\n    return new_arr\n\n\narr = [-2, -1, 0, 1, 2, 3, 4]\nprint(rearrange(arr))\n\n\ndef rearrange(arr):\n    new_arr = []\n    for i in arr:\n        if i < 0:\n            new_arr.append(i)\n    return new_arr\n\n\narr = [2, -1, 0, 1, 2, 3, 4]\nprint(rearrange(arr))\n\n\ndef rearrange(arr):\n    new_arr = []\n    for i in arr:\n        if i < 0:\n            new_arr.append(i)\n    return new_arr\n\n\narr = [2, -1, 0, 1, 2, 3, 4]\nprint(rearrange(arr))"
    },
    {
      "rank": 67,
      "score": 3.1749851600407557,
      "candidate": "def re_arrange_array(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n        elif arr[i] > 0:\n            arr[i] = 1\n\n    return arr\n\n\ndef test_re_arrange_array():\n    arr = [1, -1, 2, -2, 3, -3]\n    arr_re = [1, -1, 2, -2, 3, -3]\n\n    assert re_arrange_array(arr) == arr_re\n\n\ndef test_re_arrange_array_empty():\n    arr = []\n    arr_re = []\n\n    assert re_arrange_array(arr) == arr_re\n\n\ndef test_re_arrange_array_empty_2():\n    arr = []\n    arr_re = []\n\n    assert re_arrange_array(arr_re) == arr_re\n\n\ndef test_re_arrange_array_negative():\n    arr = [-1, -1, -1, -1, -1]\n    arr_re = [-1, -1, -1, -1, -1]\n\n    assert re_arrange_array(arr) == arr_re\n\n\ndef test_re_arrange_array_negative_2():\n    arr = [-1, -1, -1, -1, -1]\n    arr_re = [-1, -1, -1, -1, -1]\n\n    assert re_arrange_array(arr_re) == arr_re\n\n\ndef test_re_arrange_array_negative_3():\n    arr = [-1, -1, -1, -1, -1, -1]\n    arr_re = [-1, -1, -1, -1, -1, -1]\n\n    assert re_arrange_array(arr_re) == arr_re\n\n\nif __name__ == '__main__':\n    test_re_arrange_array()\n    test_re_arrange_array_empty()\n    test_re_arrange_array_empty_2()"
    },
    {
      "rank": 68,
      "score": 3.168372961888546,
      "candidate": "def re_arrange(arr):\n    new_arr = []\n    for i in arr:\n        if i < 0:\n            new_arr.append(i)\n        else:\n            new_arr.append(0)\n    return new_arr\n\narr = [0,1,-1,2,3]\nprint(re_arrange(arr))\n\narr = [-1,-2,-3,-4,-5]\nprint(re_arrange(arr))\n\narr = [0,1,2,3,4,5]\nprint(re_arrange(arr))\n\narr = [-1,-2,-3,-4,-5,-6]\nprint(re_arrange(arr))\n\narr = [1,-2,-3,-4,-5,-6]\nprint(re_arrange(arr))\n\narr = [-1,-2,-3,-4,-5,-6]\nprint(re_arrange(arr))"
    },
    {
      "rank": 69,
      "score": 3.1539811929716843,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: void Do not return anything, modify arr in-place instead.\n        \"\"\"\n        pos = []\n        neg = []\n        for i in arr:\n            if i < 0:\n                neg.append(i)\n            else:\n                pos.append(i)\n        pos.reverse()\n        neg.reverse()\n        for i in pos:\n            arr.append(i)\n        for i in neg:\n            arr.append(i)"
    },
    {
      "rank": 70,
      "score": 3.1185615130673567,
      "candidate": "def negative_rearrange(arr):\n    # Write your code here\n    arr.sort(reverse=True)\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [-1, 0, 3, 4, -2, -5, 6, -1, -7, -8, -9]\n    print(negative_rearrange(arr))"
    },
    {
      "rank": 71,
      "score": 3.0543520689578343,
      "candidate": "def rearrange_elements(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n            break\n\n\narr = [4, -4, 0, -2, 2, -2, -2, -2, -2, -2, -2, 2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2,"
    },
    {
      "rank": 72,
      "score": 2.9824452408361237,
      "candidate": "def re_arrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n        elif arr[i] > 0:\n            arr[i] = 1\n    return arr\n\n\nprint(re_arrange([-1, -4, 2, -5, -6]))\nprint(re_arrange([-1, 0, -3, -5, -6]))"
    },
    {
      "rank": 73,
      "score": 2.943332341629762,
      "candidate": "def rearrange_negative_elements(arr):\n    # Write your code here\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\n\narr = [1, -2, -3, 4]\nprint(rearrange_negative_elements(arr))"
    },
    {
      "rank": 74,
      "score": 2.9090271014347295,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        pos = 0\n        neg = len(nums) - 1\n        while pos <= neg:\n            if nums[pos] < 0:\n                nums[pos], nums[neg] = nums[neg], nums[pos]\n                pos += 1\n                neg -= 1\n            elif nums[pos] > 0:\n                pos += 1\n            else:\n                neg -= 1"
    },
    {
      "rank": 75,
      "score": 2.892360774959619,
      "candidate": "def rearrange(arr):\n    if len(arr) < 2:\n        return arr\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] < 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    return arr\n\n\nprint(rearrange([-2, 0, 1, -3, 4]))"
    },
    {
      "rank": 76,
      "score": 2.8893696127615973,
      "candidate": "def rearrange_elements(nums):\n    i = 0\n    while i < len(nums):\n        if nums[i] < 0:\n            nums[i] = 0\n        else:\n            i += 1\n    return nums\n\n\nprint(rearrange_elements([-2, 1, 2, 3, -5, 4]))"
    },
    {
      "rank": 77,
      "score": 2.8852728910949015,
      "candidate": "def rearrange_elements(arr):\n    # write your code here\n    neg = 0\n    pos = 0\n    for i in arr:\n        if i < 0:\n            neg += 1\n        elif i > 0:\n            pos += 1\n    for i in range(pos, neg+1):\n        arr[i-1], arr[i] = arr[i], arr[i-1]\n    return arr\n\n\n\narr = [-10,-5,-2,-3,0,1,2,3,4,5,6]\nprint(rearrange_elements(arr))"
    },
    {
      "rank": 78,
      "score": 2.8852648463855655,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if len(nums) == 0:\n            return\n        pos = 0\n        neg = len(nums) - 1\n        while pos < neg:\n            while pos < neg and nums[pos] < 0:\n                pos += 1\n            while pos < neg and nums[pos] > 0:\n                neg -= 1\n            nums[pos], nums[neg] = nums[neg], nums[pos]\n        print nums\n\n\n\na = Solution()\na.rearrangeArray([-1, 0, 1, -2, 4])"
    },
    {
      "rank": 79,
      "score": 2.857070062601294,
      "candidate": "def negative_rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n    return arr\n\n\narr = [1, -1, -1, 1, -1, -1, 1, -1, -1]\nprint(negative_rearrange(arr))"
    },
    {
      "rank": 80,
      "score": 2.853486398271725,
      "candidate": "def rearrange_array(arr):\n    # write your code in Python 3.6\n    i = 0\n    j = len(arr)-1\n    while i < j:\n        if arr[i] < 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    return arr\n\n\nprint(rearrange_array([-2, -1, 0, 1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 81,
      "score": 2.8524591891612485,
      "candidate": "def re_arrange_negative(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\n\ndef re_arrange_positive(arr):\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            arr[i] = -1 * arr[i]\n    return arr\n\n\narr = [-2, -3, -4, -5, -6, -7, -8]\nprint(re_arrange_negative(arr))\nprint(re_arrange_positive(arr))"
    },
    {
      "rank": 82,
      "score": 2.8484859358329047,
      "candidate": "def re_arrange(arr):\n    if not arr:\n        return arr\n\n    pos = 0\n    neg = len(arr) - 1\n\n    while pos < neg:\n        while pos < neg and arr[pos] < 0:\n            pos += 1\n\n        while pos < neg and arr[neg] > 0:\n            neg -= 1\n\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(re_arrange([-1, -2, -3, -4, -5, -6, -7, -8, -9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 83,
      "score": 2.774287002229704,
      "candidate": "def rearrange_positive(arr):\n    if arr[0] < 0:\n        arr = [0] + arr\n\n    for i in range(1, len(arr)):\n        if arr[i] > 0:\n            arr[i] = -arr[i]\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    assert rearrange_positive([-2, -3, -4, -5, -6, -7, -8, -9]) == [-7, -5, -6, -8, -9, -2, -3, -4]"
    },
    {
      "rank": 84,
      "score": 2.7729253305218933,
      "candidate": "def rearrange(arr):\n    # Your code here\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i], arr[arr[i]-1] = arr[arr[i]-1], arr[i]\n    return arr\n\nprint(rearrange([-5, -2, -4, -3, -1, 0, 1, 2, 3, 4, 5]))"
    },
    {
      "rank": 85,
      "score": 2.7699575508918737,
      "candidate": "def re_arrange_array(arr):\n    # Your code here\n    if len(arr) <= 1:\n        return arr\n    neg_idx = -1\n    for i, value in enumerate(arr):\n        if value < 0:\n            neg_idx = i\n            break\n    if neg_idx!= -1:\n        arr[neg_idx], arr[0] = arr[0], arr[neg_idx]\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(re_arrange_array([1, 0, -1, 2, 3, 4, -5, -6, 7, 8]))"
    },
    {
      "rank": 86,
      "score": 2.7244791106719233,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: None Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if not nums:\n            return\n        i = 0\n        while i < len(nums):\n            if nums[i] < 0:\n                nums[i], nums[i+1] = nums[i+1], nums[i]\n                i += 1\n                continue\n            i += 1"
    },
    {
      "rank": 87,
      "score": 2.7056870419397856,
      "candidate": "def rearrange_array(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        while arr[pos] < 0:\n            pos += 1\n        while arr[neg] > 0:\n            neg -= 1\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [-1, 0, 1, -2, 3, 4, 5, 6, 7]\n    print(rearrange_array(arr))"
    },
    {
      "rank": 88,
      "score": 2.7051637600075953,
      "candidate": "def rearrange_array(arr):\n    if not arr:\n        return arr\n\n    if len(arr) == 1:\n        return arr\n\n    neg = True\n    for i in range(len(arr)-1, -1, -1):\n        if arr[i] < 0:\n            neg = False\n        if neg:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n\n    return arr\n\nprint(rearrange_array([-2, 0, 1, -3, 4, 5]))"
    },
    {
      "rank": 89,
      "score": 2.66830821985008,
      "candidate": "def rearrange_array(arr):\n    arr.sort()\n    return arr\n\nprint(rearrange_array([-1,0,3,4,-2]))"
    },
    {
      "rank": 90,
      "score": 2.6472763378865927,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        for i in range(len(nums)):\n            if nums[i] < 0:\n                nums[i] = 0\n                nums[i] = nums[i] + nums[i]"
    },
    {
      "rank": 91,
      "score": 2.503712751036132,
      "candidate": "def rearrange_negative_elements(arr):\n    if len(arr) == 0:\n        return\n    negative_index = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            negative_index = i\n            break\n    for i in range(len(arr) - 1, negative_index - 1, -1):\n        arr[i], arr[negative_index] = arr[negative_index], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    assert rearrange_negative_elements([-2, -1, 0, 1, 2, 3]) == [1, 2, 3, 2, 1, 0]\n    assert rearrange_negative_elements([-2, -1, 0, 1, 2, 3, 4]) == [1, 2, 3, 4, 2, 1, 0]"
    },
    {
      "rank": 92,
      "score": 2.457895862737046,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        pos = [i for i, x in enumerate(nums) if x < 0]\n        neg = [i for i, x in enumerate(nums) if x > 0]\n        \n        for i in pos:\n            nums[i] = -nums[i]\n        \n        for i in neg:\n            nums[i] = nums[i] + 1"
    },
    {
      "rank": 93,
      "score": 2.4138587542004712,
      "candidate": "def rearrange_negative_elements(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\n\narr = [-3, -2, -4, -1, -5]\nprint(rearrange_negative_elements(arr))"
    },
    {
      "rank": 94,
      "score": 2.4017866115141993,
      "candidate": "def rearrange_negative_elements(arr):\n    n = len(arr)\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] = 0\n    return arr\n\n\nif __name__ == '__main__':\n    arr = [2, -1, 1, -5, 4, -6, 3]\n    print(rearrange_negative_elements(arr))"
    },
    {
      "rank": 95,
      "score": 2.301873388755406,
      "candidate": "def rearrange_negative_elements(arr):\n    # write your code here\n    if len(arr) <= 1:\n        return arr\n    else:\n        return [i for i in arr if i < 0] + [0] + [i for i in arr if i > 0]\n\n\nprint(rearrange_negative_elements([-1, 0, -2, 3, 4, -5, -6, -7, -8, 9, 10, 11, 12]))"
    },
    {
      "rank": 96,
      "score": 2.2755242247199607,
      "candidate": "def rearrange_array(arr):\n    positive = 0\n    negative = len(arr) - 1\n    while positive <= negative:\n        if arr[positive] < 0:\n            arr[positive], arr[negative] = arr[negative], arr[positive]\n            positive += 1\n            negative -= 1\n        else:\n            positive += 1\n    return arr\n\narr = [1, -1, 2, -2, 3, -3, 4, -4]\nrearrange_array(arr)\nprint(arr)\n\narr = [-1, 2, -2, 3, -3, 4, -4]\nrearrange_array(arr)\nprint(arr)\n\narr = [1, -1, 2, -2, 3, -3, 4, -4]\nrearrange_array(arr)\nprint(arr)\n\narr = [-1, 2, -2, 3, -3, 4, -4]\nrearrange_array(arr)\nprint(arr)"
    },
    {
      "rank": 97,
      "score": 2.0624926801176793,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums: List[int]) -> None:\n        \"\"\"\n        Do not return anything, modify nums in-place instead.\n        \"\"\"\n        pos = 0\n        neg = len(nums) - 1\n        while pos < neg:\n            if nums[pos] < 0:\n                nums[pos], nums[neg] = nums[neg], nums[pos]\n                pos += 1\n                neg -= 1\n            elif nums[pos] > 0:\n                neg -= 1\n            else:\n                pos += 1\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    assert s.rearrangeArray([1, -1, -2, -3]) == [1, -1, -2, -3]\n    assert s.rearrangeArray([0, 1, -2, -3, 4, 5, -1, -2, -4]) == [5, -1, -2, -3, -4, -1, -2, -4]\n    assert s.rearrangeArray([-1, -1, -2, -3, 4, 5, -1, -2, -4]) == [5, -1, -2, -3, -4, -1, -2, -4]\n    assert s.rearrangeArray([-1, -1, -2, -3, 4, 5, -1, -2, -4]) == [5, -1, -2, -3, -4, -1, -2, -4]\n    assert s.rearrangeArray([-1, -1, -2, -3, 4, 5, -1, -2, -4]) == [5, -1, -2, -3, -4, -1, -2, -4]\n    assert s.rearrangeArray([-1, -1, -2, -3, 4, 5, -1, -2, -4]) == [5, -1, -2, -3, -4, -1, -2, -4]\n    assert s.rearrangeArray([-1, -1, -2, -3, 4, 5, -1, -2,"
    },
    {
      "rank": 98,
      "score": 2.03976163929891,
      "candidate": "def rearrange_negative(arr):\n    # Write your code here\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = -arr[i]\n    return arr\n\n\narr = [-1, 0, 1, 2, -3]\nprint(rearrange_negative(arr))"
    },
    {
      "rank": 99,
      "score": 2.0260912318455624,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if not nums:\n            return\n        for i in range(len(nums)):\n            if nums[i] < 0:\n                nums[i] = 0\n                nums[i] = abs(nums[i])\n        for i in range(len(nums)):\n            if nums[i] == 0:\n                nums.pop(i)"
    },
    {
      "rank": 100,
      "score": 1.7163248989960254,
      "candidate": "def rearrange_negative(arr):\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr.insert(i, 0)\n\nrearrange_negative([-1, -2, -3, -4, -5, -6])"
    }
  ]
}