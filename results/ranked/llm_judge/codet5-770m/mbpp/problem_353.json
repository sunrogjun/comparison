{
  "timestamp": "2025-09-14T15:03:37.001317",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 353,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def flips(string, n):\n    if n == 0:\n        return 0\n    if string == \"\":\n        return 1\n    return flips(string[1:], n - 1) + flips(string[0:1], n - 1)\n\n\ndef main():\n    print(flips(\"01101010111\", 2))\n\n\nmain()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def numFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        n = len(s)\n        count = 0\n        for i in range(n):\n            if s[i] == \"1\":\n                count += 1\n            elif s[i] == \"0\":\n                count -= 1\n        return count\n\n\ns = Solution()\nprint(s.numFlips(\"0101\"))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def findFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        count = 0\n        for i in range(1, len(s)):\n            if s[i] == s[i-1]:\n                count += 1\n        return count"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def flips(s):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n        elif s[i] == '0':\n            count -= 1\n    return count\n\n\nif __name__ == '__main__':\n    print(flips('111'))\n    print(flips('0111'))\n    print(flips('0101010101'))\n    print(flips('111111'))\n    print(flips('11111'))\n    print(flips('11111111'))\n    print(flips('0101110011'))\n    print(flips('010101001111'))\n    print(flips('1101010111111'))\n    print(flips('110101011111111'))\n    print(flips('111111111'))\n    print(flips('111111111'))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def num_flips(s):\n    # Fill this in.\n    count = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == s[i + 1]:\n            count += 1\n    return count\n\n\ndef main():\n    s = \"10101\"\n    print(num_flips(s))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "class Solution:\n    def numFlips(self, s: str) -> int:\n        flips = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                flips += 1\n        return flips"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def numFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if s == \"\":\n            return 0\n        if len(s) == 1:\n            return 1\n        if len(s) % 2 == 0:\n            return self.numFlips(s[::-1])\n        return self.numFlips(s[:-1]) + self.numFlips(s[1::-1])\n\n\nif __name__ == \"__main__\":\n    s = \"11\"\n    s = \"11101\"\n    s = \"0100\"\n    s = \"110010\"\n    s = \"1111\"\n    s = \"1111100\"\n    s = \"1111111\"\n    s = \"0011\"\n    s = \"111110\"\n    s = \"111101\"\n    s = \"10111\"\n    s = \"1010111\"\n    s = \"1011110\"\n    s = \"111100\"\n    s = \"1111011\"\n    s = \"11111001\"\n    s = \"11001111\"\n    s = \"111011111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"01011111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11011111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \"11111111\"\n    s = \""
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def flips_required(s,n):\n    if n == 0:\n        return 0\n    return n - s.count(\"1\")\n\ndef flips_required2(s,n):\n    return sum(int(b) for b in s) - (n+1) * s.count(\"1\")\n\ndef flips_required3(s,n):\n    return sum(int(b) for b in s) - n * s.count(\"1\")\n\ndef flips_required4(s,n):\n    return sum(int(b) for b in s) - n * s.count(\"1\") - (s.count(\"1\") + n) * s.count(\"1\")\n\nprint(flips_required(\"10001\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10011\",6))\nprint(flips_required(\"10001\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\"10101\",6))\nprint(flips_required(\""
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def flips(n):\n    s = bin(n)[2:]\n    return sum(s.count('1') - s.count('0'))\n\n\nprint(flips(0))\nprint(flips(1))\nprint(flips(2))\nprint(flips(3))\nprint(flips(4))\nprint(flips(5))\nprint(flips(6))\nprint(flips(7))\nprint(flips(8))\nprint(flips(9))\nprint(flips(10))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def numFlips(binaryString):\n    # Fill this in.\n    count = 0\n    for i in range(len(binaryString)):\n        if binaryString[i] == \"1\":\n            count += 1\n    return count"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def flips(s):\n    # Write your code here\n    flips = 0\n    for i in range(len(s)-1, -1, -1):\n        if s[i] == '1':\n            flips += 1\n    return flips\n\n\nif __name__ == '__main__':\n    print(flips('11'))\n    print(flips('01'))\n    print(flips('010101'))\n    print(flips('0101010101'))\n    print(flips('010101010101'))\n    print(flips('01010101010101'))\n    print(flips('01010101010101'))\n    print(flips('11111'))\n    print(flips('111110111'))\n    print(flips('11111011101'))\n    print(flips('1111101110101'))\n    print(flips('111110111010101'))\n    print(flips('111110111010101'))\n    print(flips('11111011101010101'))\n    print(flips('11111011101010101'))\n    print(flips('11111011101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('1111101110101010101'))\n    print(flips('111110111010101010101'))\n    print(flips('111110111010101010101'))\n    print(flips('111110111010101010101'))\n    print(flips('111110111010101010101"
    },
    {
      "rank": 12,
      "score": 9.234050852198141,
      "candidate": "def num_flips(bin_str):\n    count = 0\n    for i in range(len(bin_str)-1, -1, -1):\n        if bin_str[i] == \"1\":\n            count += 1\n    return count\n\n\nprint(num_flips(\"1101\"))"
    },
    {
      "rank": 13,
      "score": 9.21346272767743,
      "candidate": "def flips_required(bin_str):\n    flips = 0\n    for i in range(len(bin_str) - 1, -1, -1):\n        if bin_str[i] == '1':\n            flips += 1\n        else:\n            flips -= 1\n    return flips\n\nprint(flips_required('100'))\nprint(flips_required('1010'))\nprint(flips_required('0111'))"
    },
    {
      "rank": 14,
      "score": 9.183391466815202,
      "candidate": "def count_flips(binary_str):\n    count = 0\n    for i in range(len(binary_str) - 1, -1, -1):\n        if binary_str[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    binary_str = \"101\"\n    print(count_flips(binary_str))"
    },
    {
      "rank": 15,
      "score": 9.177268828905222,
      "candidate": "def flips_required(bin_str):\n    return bin_str.count('1')"
    },
    {
      "rank": 16,
      "score": 8.973005557553902,
      "candidate": "def count_flips(bin_str):\n    count = 0\n    for i in range(len(bin_str)-1, -1, -1):\n        if bin_str[i] == '1':\n            count += 1\n    return count\n\n\nprint(count_flips(\"10101\"))"
    },
    {
      "rank": 17,
      "score": 8.95994420569242,
      "candidate": "def flips(binary):\n    count = 0\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == '1':\n            count += 1\n    return count\n\n\nassert flips('11') == 2\nassert flips('01') == 1\nassert flips('0101') == 2\nassert flips('1110') == 0\nassert flips('11101') == 2\nassert flips('11100') == 0\nassert flips('1111') == 0\nassert flips('0011') == 0\nassert flips('00000000') == 0"
    },
    {
      "rank": 18,
      "score": 8.910084504002544,
      "candidate": "def flips(binary):\n    count = 0\n    for i in range(len(binary)):\n        if binary[i] == \"1\":\n            count += 1\n        else:\n            count -= 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(flips(\"11\"))\n    print(flips(\"100\"))\n    print(flips(\"101\"))\n    print(flips(\"1101\"))\n    print(flips(\"1110\"))\n    print(flips(\"1011\"))\n    print(flips(\"10010\"))"
    },
    {
      "rank": 19,
      "score": 8.902145503295483,
      "candidate": "def flips(binary_string):\n    total = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            total += 1\n    return total\n\n\nprint(flips(\"11\"))"
    },
    {
      "rank": 20,
      "score": 8.85571690049604,
      "candidate": "def num_of_flips(binary_string):\n    # Your code here\n    count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            count += 1\n    return count\n\nprint(num_of_flips(\"11\"))\nprint(num_of_flips(\"1010\"))\nprint(num_of_flips(\"0110\"))\nprint(num_of_flips(\"10001\"))"
    },
    {
      "rank": 21,
      "score": 8.850707355641543,
      "candidate": "def num_flips(binary_str):\n    count = 0\n    for i in range(1, len(binary_str)):\n        if binary_str[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(num_flips('1010'))"
    },
    {
      "rank": 22,
      "score": 8.8281618090209,
      "candidate": "def flips(binary):\n    # Write your code here\n    count = 0\n    for i in range(len(binary)-1, -1, -1):\n        if binary[i] == \"1\":\n            count += 1\n    return count"
    },
    {
      "rank": 23,
      "score": 8.76828871349479,
      "candidate": "def count_flips(bin_str):\n    if len(bin_str) == 1:\n        return 0\n\n    count = 0\n    for i in range(1, len(bin_str)):\n        if bin_str[i] == '1' and bin_str[i - 1] == '1':\n            count += 1\n\n    return count\n\n\nprint(count_flips('10111'))"
    },
    {
      "rank": 24,
      "score": 8.750282588864879,
      "candidate": "def flips(binary):\n    n = len(binary)\n    flips = 0\n    for i in range(n):\n        if binary[i] == '1':\n            flips += 1\n    return flips"
    },
    {
      "rank": 25,
      "score": 8.715724466237427,
      "candidate": "def count_flips(binary_string):\n    count = 0\n    for i in range(len(binary_string)-1,-1,-1):\n        if binary_string[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(count_flips('100'))\n    print(count_flips('11'))\n    print(count_flips('101'))\n    print(count_flips('100101'))\n    print(count_flips('1111'))"
    },
    {
      "rank": 26,
      "score": 8.692801520950061,
      "candidate": "def num_flips(binary_str):\n    count = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == \"1\":\n            count += 1\n    return count\n\n\nprint(num_flips(\"111111\"))\nprint(num_flips(\"10101\"))\nprint(num_flips(\"00010\"))\nprint(num_flips(\"11000\"))"
    },
    {
      "rank": 27,
      "score": 8.632293453617281,
      "candidate": "def count_flips(bin_str):\n    count = 0\n    for i in bin_str:\n        if i == '1':\n            count += 1\n    return count\n\n\nprint(count_flips(\"0101010101\"))"
    },
    {
      "rank": 28,
      "score": 8.625142247198651,
      "candidate": "def num_flips(string):\n    num_flips = 0\n    for i in range(len(string)-1, -1, -1):\n        if string[i] == \"1\":\n            num_flips += 1\n    return num_flips\n\n\nprint(num_flips(\"11\"))\nprint(num_flips(\"111001\"))\nprint(num_flips(\"111011\"))\nprint(num_flips(\"1110101\"))\nprint(num_flips(\"01010101\"))\nprint(num_flips(\"11101011\"))"
    },
    {
      "rank": 29,
      "score": 8.623000730200317,
      "candidate": "def flips(binary: str) -> int:\n    count = 0\n\n    for i in range(len(binary)):\n        if binary[i] == '1':\n            count += 1\n\n    return count\n\n\nprint(flips(\"10011\"))"
    },
    {
      "rank": 30,
      "score": 8.610076160146226,
      "candidate": "def count_flips(bin_str):\n    count = 0\n    for i in range(1, len(bin_str)):\n        if bin_str[i] == '1' and bin_str[i-1] == '0':\n            count += 1\n    return count\n\n\nprint(count_flips(\"1011\"))\nprint(count_flips(\"1011\"))\nprint(count_flips(\"1110\"))\nprint(count_flips(\"1110\"))\nprint(count_flips(\"0110\"))"
    },
    {
      "rank": 31,
      "score": 8.60156811074208,
      "candidate": "def count_flips(s):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            count += 1\n    return count\n\n\nprint(count_flips(\"11\"))\nprint(count_flips(\"110110\"))\nprint(count_flips(\"110101\"))\nprint(count_flips(\"111111\"))\nprint(count_flips(\"11111101\"))\nprint(count_flips(\"11010101\"))"
    },
    {
      "rank": 32,
      "score": 8.565425580227462,
      "candidate": "def count_flips(binary_string):\n    count = 0\n\n    for i in range(len(binary_string)):\n        if binary_string[i] == \"1\":\n            count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    binary_string = \"11\"\n    print(count_flips(binary_string))"
    },
    {
      "rank": 33,
      "score": 8.499905739299377,
      "candidate": "def flips(binary):\n    flips = 0\n    for i in range(len(binary) - 1, -1, -1):\n        if binary[i] == \"1\":\n            flips += 1\n    return flips\n\n\nassert flips(\"11\") == 3\nassert flips(\"100\") == 2\nassert flips(\"101\") == 3\nassert flips(\"10\") == 1\nassert flips(\"11\") == 3\nassert flips(\"101\") == 1\nassert flips(\"10101\") == 0\nassert flips(\"101101\") == 0"
    },
    {
      "rank": 34,
      "score": 8.48796797856353,
      "candidate": "def num_flips(bin_str):\n    count = 0\n    for i in range(len(bin_str)):\n        if bin_str[i] == \"1\":\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(num_flips(\"11\"))\n    print(num_flips(\"10\"))\n    print(num_flips(\"011\"))\n    print(num_flips(\"0101\"))\n    print(num_flips(\"010101\"))\n    print(num_flips(\"0000\"))\n    print(num_flips(\"000001\"))\n    print(num_flips(\"0001\"))"
    },
    {
      "rank": 35,
      "score": 8.437695832075478,
      "candidate": "def flips(binary: str) -> int:\n    flips = 0\n    for i in range(len(binary)):\n        if binary[i] == '1':\n            flips += 1\n    return flips"
    },
    {
      "rank": 36,
      "score": 8.408439383654278,
      "candidate": "def count_flips(binary):\n    count = 0\n    for bit in binary:\n        if bit == '1':\n            count += 1\n    return count\n\nprint(count_flips('100'))\nprint(count_flips('11'))\nprint(count_flips('0101010101'))\nprint(count_flips('0110011011'))\nprint(count_flips('010101011101'))\nprint(count_flips
    },
    {
      "rank": 37,
      "score": 8.375312293858853,
      "candidate": "def flips(binary):\n    count = 0\n    for i in range(len(binary)):\n        if binary[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    assert flips('1111') == 2\n    assert flips('0101') == 0\n    assert flips('111111') == 2\n    assert flips('0000') == 0"
    },
    {
      "rank": 38,
      "score": 8.351614956112536,
      "candidate": "def count_flips(binary_string):\n    count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            count += 1\n        else:\n            count -= 1\n    return count\n\n\nprint(count_flips(\"11\"))"
    },
    {
      "rank": 39,
      "score": 8.327375965969855,
      "candidate": "def count_flips(binary_str):\n    count = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == '1':\n            count += 1\n        else:\n            count = 0\n    return count\n\n\nbinary_str = '0110'\nprint(count_flips(binary_str))"
    },
    {
      "rank": 40,
      "score": 8.327367757082776,
      "candidate": "def flips(binary):\n    flips = 0\n    for i in range(1,len(binary)):\n        if binary[i] == \"1\":\n            flips += 1\n        else:\n            flips -= 1\n    return flips\n\nif __name__ == \"__main__\":\n    print(flips(\"11\"))\n    print(flips(\"101\"))\n    print(flips(\"10101\"))\n    print(flips(\"11101\"))\n    print(flips(\"101010101\"))\n    print(flips(\"00\"))\n    print(flips(\"1100\"))"
    },
    {
      "rank": 41,
      "score": 8.298597569547805,
      "candidate": "def flips(s):\n    count = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == \"1\":\n            count += 1\n        else:\n            count -= 1\n    return count\n\n\nprint(flips(\"11\"))\nprint(flips(\"1110011\"))\nprint(flips(\"1110111\"))\nprint(flips(\"1111\"))\nprint(flips(\"1110110\"))\nprint(flips(\"111111\"))\nprint(flips(\"11111100\"))\nprint(flips(\"1111101\"))\nprint(flips(\"111110101\"))\nprint(flips(\"11111111\"))"
    },
    {
      "rank": 42,
      "score": 8.294940769211511,
      "candidate": "def count_flips(binary_string):\n    if len(binary_string) == 1:\n        return 0\n    flips = 0\n    for i in range(1, len(binary_string)):\n        if binary_string[i] == '1' and binary_string[i-1] == '0':\n            flips += 1\n    return flips\n\n\ndef main():\n    print(count_flips(\"10001\"))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 43,
      "score": 8.2938925966498,
      "candidate": "def count_flips(binary_str):\n    count = 0\n    for i in range(len(binary_str)-1, -1, -1):\n        if binary_str[i] == \"1\":\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_flips(\"0101\"))"
    },
    {
      "rank": 44,
      "score": 8.289838256518838,
      "candidate": "def flips(s):\n    count = 0\n    for i in range(1, len(s)):\n        if s[i]!= s[i-1]:\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(flips(\"1010111\"))\n    print(flips(\"1010101\"))\n    print(flips(\"1110101\"))\n    print(flips(\"11101011\"))"
    },
    {
      "rank": 45,
      "score": 8.251903304236286,
      "candidate": "def flips(s: str) -> int:\n    count = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == s[i+1]:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(flips(\"101\"))\n    print(flips(\"100\"))"
    },
    {
      "rank": 46,
      "score": 8.214125058964552,
      "candidate": "def flips(s: str) -> int:\n    n = len(s)\n    count = 0\n\n    for i in range(n):\n        if s[i] == '1':\n            if s[n-1-i] == '0':\n                count += 1\n\n    return count\n\n\nif __name__ == \"__main__\":\n    s = \"111111111111\"\n    print(flips(s))"
    },
    {
      "rank": 47,
      "score": 8.211579567659316,
      "candidate": "def flips_required(s):\n    count = 0\n    for i in range(len(s)-1, -1, -1):\n        if s[i] == '1':\n            count += 1\n    return count\n\n\ndef main():\n    print(flips_required(\"101101\"))\n    print(flips_required(\"11\"))\n    print(flips_required(\"101\"))\n    print(flips_required(\"01\"))\n    print(flips_required(\"10101\"))\n    print(flips_required(\"0101\"))\n    print(flips_required(\"100\"))\n    print(flips_required(\"111\"))\n    print(flips_required(\"1100\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 48,
      "score": 8.209707251476969,
      "candidate": "def number_of_flips(binary_str: str) -> int:\n    num_flips = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == '1':\n            num_flips += 1\n        else:\n            num_flips -= 1\n    return num_flips"
    },
    {
      "rank": 49,
      "score": 8.193565922652176,
      "candidate": "class Solution(object):\n    def numFlipsInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        return sum(bin(int(x, 2)).count('1') for x in s)"
    },
    {
      "rank": 50,
      "score": 8.179564342560925,
      "candidate": "def number_of_flips(binary_string):\n    if binary_string == \"0\":\n        return 0\n    else:\n        return len(binary_string) - binary_string.count(\"1\")\n\n\nif __name__ == \"__main__\":\n    assert number_of_flips(\"10101\") == 2\n    assert number_of_flips(\"1010\") == 1\n    assert number_of_flips(\"100\") == 0\n    assert number_of_flips(\"1001\") == 1\n    assert number_of_flips(\"1011\") == 2\n    assert number_of_flips(\"1100\") == 3"
    },
    {
      "rank": 51,
      "score": 8.172253082181854,
      "candidate": "def countFlips(str):\n    if len(str) == 0:\n        return 0\n    count = 0\n    for i in range(len(str) - 1, -1, -1):\n        if str[i] == str[i + 1]:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(countFlips(\"101\"))"
    },
    {
      "rank": 52,
      "score": 8.163300679823958,
      "candidate": "def flips(s):\n    return sum([int(b) for b in bin(int(s, 2))[2:]])\n\nassert flips('1001101') == 1\nassert flips('01010011') == 3\nassert flips('01011010') == 4\nassert flips('11111111') == 2\nassert flips('1111111111') == 2\nassert flips('111111111101') == 0"
    },
    {
      "rank": 53,
      "score": 8.144125099485041,
      "candidate": "def count_flips(bin_str):\n    count = 0\n    for i in range(len(bin_str) - 1, -1, -1):\n        if bin_str[i] == \"1\":\n            count += 1\n    return count\n\n\nprint(count_flips(\"1100110110\"))"
    },
    {
      "rank": 54,
      "score": 8.143591138329747,
      "candidate": "def flips_required(s):\n    if s[0] == \"0\" or s[1] == \"0\":\n        return 0\n    else:\n        return 1 + flips_required(s[2:])\n\n\nif __name__ == \"__main__\":\n    print(flips_required(\"1111\"))"
    },
    {
      "rank": 55,
      "score": 8.040197642997851,
      "candidate": "def flips_required(binary):\n    # Your code here\n    num_flips = 0\n    binary_str = \"\".join([str(x) for x in binary])\n    for i in range(len(binary_str)-1, -1, -1):\n        if binary_str[i] == \"0\":\n            num_flips += 1\n    return num_flips\n\n\nbinary = \"1010\"\nprint(flips_required(binary))"
    },
    {
      "rank": 56,
      "score": 8.024835682833125,
      "candidate": "def flips_required(binary_string):\n    \"\"\"\n    :type binary_string: str\n    :rtype: int\n    \"\"\"\n    count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            count += 1\n    return count"
    },
    {
      "rank": 57,
      "score": 7.990432406683839,
      "candidate": "def count_flips(binary_string):\n    count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == \"1\":\n            count += 1\n    return count\n\n\nprint(count_flips(\"11\"))\nprint(count_flips(\"101\"))\nprint(count_flips(\"1011\"))\nprint(count_flips(\"0101\"))\nprint(count_flips(\"01011\"))\nprint(count_flips(\"010101\"))\nprint(count_flips(\"01010101\"))"
    },
    {
      "rank": 58,
      "score": 7.938028884277233,
      "candidate": "def count_flips(s):\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    return count\n\nprint(count_flips('11'))\nprint(count_flips('110111'))\nprint(count_flips('1111'))\nprint(count_flips('010111'))\nprint(count_flips('01110111'))\nprint(count_flips('0101111111'))\nprint(count_flips('111111'))\nprint(count_flips('11110111'))\nprint(count_flips('0101110111'))"
    },
    {
      "rank": 59,
      "score": 7.915588979966494,
      "candidate": "def count_flips(s):\n    n = len(s)\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n\n    count = 0\n    for i in range(n):\n        if s[i] == '1':\n            count += count_flips(s[i+1:])\n        else:\n            count += count_flips(s[:i+1])\n\n    return count"
    },
    {
      "rank": 60,
      "score": 7.8912769574414305,
      "candidate": "def flips(binary: str) -> int:\n    count = 0\n    for i in range(len(binary)-1, -1, -1):\n        if binary[i] == \"1\":\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert flips(\"1111\") == 3\n    assert flips(\"100\") == 3\n    assert flips(\"1010\") == 6\n    assert flips(\"1011\") == 6"
    },
    {
      "rank": 61,
      "score": 7.868947655733293,
      "candidate": "class Solution:\n    # @param s, a string\n    # @return an integer\n    def numFlips(self, s):\n        # write your code here\n        count = 0\n        for i in range(len(s)):\n            if s[i] == \"1\":\n                count += 1\n        return count"
    },
    {
      "rank": 62,
      "score": 7.84634113240411,
      "candidate": "def num_flips(binary_string):\n    # Write your code here\n    count = 0\n    for i in range(1, len(binary_string)):\n        if binary_string[i] == '0':\n            if binary_string[i-1] == '1':\n                count += 1\n    return count\n\nbinary_string = '1010'\nprint(num_flips(binary_string))"
    },
    {
      "rank": 63,
      "score": 7.780351419995229,
      "candidate": "def flips_required(binary_string):\n    count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    binary_string = '11'\n    print(flips_required(binary_string))"
    },
    {
      "rank": 64,
      "score": 7.7320703513377165,
      "candidate": "def flips(s):\n    n = len(s)\n    count = 0\n\n    for i in range(n):\n        if s[i] == \"1\":\n            if i - 1 >= 0:\n                count += 1\n            else:\n                count += 1\n        else:\n            if i - 1 >= 0:\n                count += 1\n            else:\n                count += 1\n\n    return count\n\n\nprint(flips(\"1101\"))\nprint(flips(\"11011\"))\nprint(flips(\"0101\"))\nprint(flips(\"1100\"))\nprint(flips(\"01011\"))\nprint(flips(\"11111\"))\nprint(flips(\"1111\"))"
    },
    {
      "rank": 65,
      "score": 7.5819855281879285,
      "candidate": "def flips(binary_string):\n    return bin(int(binary_string, 2)).count(\"1\")\n\n\nif __name__ == \"__main__\":\n    assert flips(\"1100\") == 3\n    assert flips(\"10001\") == 2"
    },
    {
      "rank": 66,
      "score": 7.464609382504557,
      "candidate": "def countFlips(binary):\n    count = 0\n    for i in range(len(binary)):\n        if binary[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(countFlips('10101'))"
    },
    {
      "rank": 67,
      "score": 7.4506599871439985,
      "candidate": "def number_of_flips(binary):\n    count = 0\n    for i in range(len(binary)):\n        if binary[i] == \"0\":\n            count += 1\n        elif binary[i] == \"1\":\n            count -= 1\n    return count\n\n\nprint(number_of_flips(\"1101\"))"
    },
    {
      "rank": 68,
      "score": 7.134571892399572,
      "candidate": "def numFlips(binaryString):\n    count = 0\n    for i in range(len(binaryString) - 1, -1, -1):\n        if binaryString[i] == '1':\n            count += 1\n    return count\n\nprint(numFlips(\"11101111011101110101\"))"
    },
    {
      "rank": 69,
      "score": 3.59272901904286,
      "candidate": "class Solution(object):\n    def countFlips(self, binary):\n        \"\"\"\n        :type binary: str\n        :rtype: int\n        \"\"\"\n        result = 0\n        for i in range(len(binary) - 1, -1, -1):\n            result += binary[i]!= binary[i + 1]\n        return result"
    },
    {
      "rank": 70,
      "score": 3.500685969860482,
      "candidate": "def flips_required(s):\n    flips = 0\n    for i in range(len(s)-1):\n        if s[i] == '1' and s[i+1] == '1':\n            flips += 1\n    return flips\n\n\nprint(flips_required('100'))\nprint(flips_required('10'))\nprint(flips_required('11'))\nprint(flips_required('01'))\nprint(flips_required('1010'))\nprint(flips_required('1011'))\nprint(flips_required('0101'))\nprint(flips_required('0110'))\nprint(flips_required('0111'))\nprint(flips_required('1111'))\nprint(flips_required('0000'))\nprint(flips_required('010100'))\nprint(flips_required('01101'))\nprint(flips_required('011011'))\nprint(flips_required('01101101'))\nprint(flips_required('01101110'))\nprint(flips_required('010111'))\nprint(flips_required('011111'))\nprint(flips_required('0110111'))\nprint(flips_required('000101'))\nprint(flips_required('00010101'))\nprint(flips_required('00010111'))"
    },
    {
      "rank": 71,
      "score": 3.4873695540505683,
      "candidate": "def num_flips(string):\n    # write your code here\n    count = 0\n    for i in range(len(string)):\n        if string[i] == '1':\n            count += 1\n        else:\n            count -= 1\n    return count\n\n\nprint(num_flips(\"11\"))"
    },
    {
      "rank": 72,
      "score": 3.4339968091426636,
      "candidate": "def flips_required(binary_string):\n    # Write your code here\n    counter = 0\n    for i in range(len(binary_string)-1, -1, -1):\n        if binary_string[i] == '1' and binary_string[i+1] == '1':\n            counter += 1\n        elif binary_string[i] == '1' and binary_string[i+1] == '0':\n            counter += 1\n    return counter\n\n\nprint(flips_required('111111'))"
    },
    {
      "rank": 73,
      "score": 3.321130527325448,
      "candidate": "class Solution:\n    def findFlips(self, binary: str) -> int:\n        return bin(int(binary, 2)).count('1')\n\nif __name__ == '__main__':\n    solution = Solution()\n    assert solution.findFlips(\"11\") == 1\n    assert solution.findFlips(\"101\") == 0\n    assert solution.findFlips(\"100\") == 1\n    assert solution.findFlips(\"1011\") == 2"
    },
    {
      "rank": 74,
      "score": 3.312174440679155,
      "candidate": "def count_flips(binary_str):\n    count = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == \"1\":\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_flips(\"1010\") == 1\n    assert count_flips(\"100\") == 1\n    assert count_flips(\"101\") == 1\n    assert count_flips(\"1011\") == 2\n    assert count_flips(\"1011\") == 2\n    assert count_flips(\"101011\") == 3\n    assert count_flips(\"101010101\") == 3\n    assert count_flips(\"111111\") == 3\n    assert count_flips(\"11111101\") == 3"
    },
    {
      "rank": 75,
      "score": 3.2630088014000718,
      "candidate": "class Solution(object):\n    def countFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        flips = 0\n        for i in range(len(s) - 1):\n            if s[i] == '1' and s[i+1] == '0':\n                flips += 1\n        return flips"
    },
    {
      "rank": 76,
      "score": 3.2363093055985312,
      "candidate": "def flips(s):\n    # Fill this in.\n    return sum([1 if s[i] == \"1\" else 0 for i in range(len(s))])\n\n\nprint(flips(\"0111\"))\nprint(flips(\"100\"))\nprint(flips(\"11\"))"
    },
    {
      "rank": 77,
      "score": 3.115723528015243,
      "candidate": "class Solution:\n    def numFlips(self, s: str, n: int) -> int:\n        count = 0\n        for i in range(n):\n            if s[i] == '1':\n                count += 1\n        return count"
    },
    {
      "rank": 78,
      "score": 3.109957852661908,
      "candidate": "def num_flips_required(s):\n    # Write your code here\n    flips = 0\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            flips += 1\n        if s[i] == \"0\":\n            flips -= 1\n    return flips\n\n\nif __name__ == \"__main__\":\n    assert num_flips_required(\"0\") == 0\n    assert num_flips_required(\"1\") == 0\n    assert num_flips_required(\"101\") == 1\n    assert num_flips_required(\"11\") == 2\n    assert num_flips_required(\"1111\") == 4\n    assert num_flips_required(\"111111\") == 4"
    },
    {
      "rank": 79,
      "score": 3.105200355091099,
      "candidate": "class Solution:\n    def countFlips(self, n: int) -> int:\n        return bin(n).count(\"1\")"
    },
    {
      "rank": 80,
      "score": 3.1037068702063344,
      "candidate": "class Solution(object):\n    def findFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        num_flips = 0\n        for i in range(len(s)):\n            if s[i] == \"1\":\n                num_flips += 1\n        return num_flips\n\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    s = \"0110\"\n    print sol.findFlips(s)"
    },
    {
      "rank": 81,
      "score": 3.066836350401522,
      "candidate": "class Solution:\n    def numFlips(self, s: str) -> int:\n        # Time Complexity: O(n)\n        # Space Complexity: O(n)\n        count = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                count += 1\n        return count\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.numFlips(\"100\"))"
    },
    {
      "rank": 82,
      "score": 3.0629955954781196,
      "candidate": "def num_flips(binary_string):\n    count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert num_flips(\"10111\") == 3\n    assert num_flips(\"10101\") == 2\n    assert num_flips(\"1011101\") == 1\n    assert num_flips(\"101101\") == 0"
    },
    {
      "rank": 83,
      "score": 3.0548378499807907,
      "candidate": "class Solution(object):\n    def numFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        # Write your code here\n        n = len(s)\n        flips = 0\n        for i in range(n-1, -1, -1):\n            if s[i] == \"1\":\n                flips += 1\n            elif s[i] == \"0\":\n                flips -= 1\n        return flips"
    },
    {
      "rank": 84,
      "score": 3.0293634484913605,
      "candidate": "def flips_required(binary_string):\n    if len(binary_string) < 2:\n        return 0\n\n    if binary_string[0] == \"1\":\n        return 1\n\n    if binary_string[0] == \"0\":\n        return 2\n\n    if binary_string[0] == \"1\":\n        return flips_required(binary_string[1:])\n\n    return flips_required(binary_string[1:]) + flips_required(binary_string[:-1])\n\n\nif __name__ == \"__main__\":\n    assert flips_required(\"0111\") == 3\n    assert flips_required(\"011101\") == 5\n    assert flips_required(\"110101\") == 3\n    assert flips_required(\"01110111\") == 5\n    assert flips_required(\"001111\") == 1\n    assert flips_required(\"011111\") == 2"
    },
    {
      "rank": 85,
      "score": 3.0216090255001355,
      "candidate": "def num_flips(binary_string):\n    # Write your code here\n    flips = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            flips += 1\n    return flips\n\n\nprint(num_flips(\"10\"))\nprint(num_flips(\"11\"))\nprint(num_flips(\"100\"))\nprint(num_flips(\"101\"))\nprint(num_flips(\"0101\"))\nprint(num_flips(\"010111\"))\nprint(num_flips(\"010011\"))"
    },
    {
      "rank": 86,
      "score": 2.9885356674848156,
      "candidate": "def count_flips(binary_string):\n    binary_string = binary_string.replace(\"1\", \"0\")\n    binary_string = binary_string.replace(\"0\", \"1\")\n    binary_string = binary_string.replace(\".\", \"1\")\n    binary_string = binary_string.replace(\"-\", \"0\")\n    binary_string = binary_string.replace(\":\", \"0\")\n    binary_string = binary_string.replace(\"1\", \"1\")\n    binary_string = binary_string.replace(\"0\", \"1\")\n    binary_string = binary_string.replace(\".\", \"0\")\n    binary_string = binary_string.replace(\"-\", \"0\")\n    binary_string = binary_string.replace(\":\", \"0\")\n    binary_string = binary_string.replace(\"1\", \"0\")\n    binary_string = binary_string.replace(\"0\", \"1\")\n    binary_string = binary_string.replace(\".\", \"0\")\n    binary_string = binary_string.replace(\"-\", \"0\")\n    binary_string = binary_string.replace(\":\", \"0\")\n    binary_string = binary_string.replace(\"1\", \"1\")\n    binary_string = binary_string.replace(\"0\", \"1\")\n    binary_string = binary_string.replace(\".\", \"0\")\n    binary_string = binary_string.replace(\"-\", \"0\")\n    binary_string = binary_string.replace(\":\", \"0\")\n    binary_string = binary_string.replace(\"1\", \"0\")\n    binary_string = binary_string.replace(\"0\", \"1\")\n    binary_string = binary_string.replace(\".\", \"0\")\n    binary_string = binary_string.replace(\"-\", \"0\")\n    binary_string = binary_string.replace(\":\", \"0\")\n    binary_string = binary_string.replace(\"1\", \"1\")\n    binary_string = binary_string.replace(\"0\", \"1\")\n    binary_string = binary_string.replace(\".\", \"0\")\n    binary_string = binary_string.replace(\"-\", \"0\")\n    binary_string ="
    },
    {
      "rank": 87,
      "score": 2.962992549635763,
      "candidate": "def num_flips(s: str) -> int:\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n    return count\n\n\nif __name__ == '__main__':\n    assert num_flips('1011') == 1\n    assert num_flips('10111') == 2\n    assert num_flips('1111') == 3\n    assert num_flips('1111111') == 4\n    assert num_flips('11111111') == 5\n    assert num_flips('10001') == 6\n    assert num_flips('000001') == 7\n    assert num_flips('10101') == 8\n    assert num_flips('1100') == 9\n    assert num_flips('11001') == 10\n    assert num_flips('10011') == 11\n    assert num_flips('11000') == 12"
    },
    {
      "rank": 88,
      "score": 2.929704995891996,
      "candidate": "def number_of_flips(binary_string: str) -> int:\n    count = 0\n    for i in range(len(binary_string) - 1, -1, -1):\n        if binary_string[i] == '1' and binary_string[i + 1] == '1':\n            count += 1\n    return count\n\n\nprint(number_of_flips(\"11\"))"
    },
    {
      "rank": 89,
      "score": 2.9277515838443087,
      "candidate": "def count_flips(binary_string):\n    # Fill this in.\n    count = 0\n    for i in range(len(binary_string) - 1, -1, -1):\n        if binary_string[i] == \"1\":\n            count += 1\n    return count\n\n\nprint(count_flips(\"101\"))"
    },
    {
      "rank": 90,
      "score": 2.851706338300012,
      "candidate": "def num_flips(binary_string):\n    if len(binary_string) == 0:\n        return 0\n    flips = 0\n    for i in range(len(binary_string) - 1, -1, -1):\n        if binary_string[i] == '1':\n            flips += 1\n    return flips\n\n\nprint(num_flips(\"11\"))"
    },
    {
      "rank": 91,
      "score": 2.8466642438895073,
      "candidate": "def flips(n):\n    ans = 0\n    for i in range(n):\n        ans += 1 if (i % 2) == 0 else 0\n    return ans\n\n\nprint(flips(5))\nprint(flips(6))\nprint(flips(7))\nprint(flips(8))\nprint(flips(9))\nprint(flips(10))\nprint(flips(11))\nprint(flips(12))\nprint(flips(13))\nprint(flips(14))\nprint(flips(15))\nprint(flips(16))\nprint(flips(17))\nprint(flips(18))\nprint(flips(19))\nprint(flips(20))\nprint(flips(21))\nprint(flips(22))\nprint(flips(23))\nprint(flips(24))\nprint(flips(25))\nprint(flips(26))\nprint(flips(27))\nprint(flips(28))\nprint(flips(29))\nprint(flips(30))\nprint(flips(31))\nprint(flips(32))\nprint(flips(33))\nprint(flips(34))\nprint(flips(35))\nprint(flips(36))\nprint(flips(37))\nprint(flips(38))\nprint(flips(39))\nprint(flips(40))\nprint(flips(41))\nprint(flips(42))\nprint(flips(43))\nprint(flips(44))\nprint(flips(45))\nprint(flips(46))\nprint(flips(47))\nprint(flips(48))\nprint(flips(49))\nprint(flips(50))\nprint(flips(51))\nprint(flips(52))\nprint(flips(53))\nprint(flips(54))\nprint(flips(55))\nprint(flips(56))\nprint(flips(57))\nprint(flips(58))\nprint(flips(59))\nprint(flips(60))\nprint(flips(61))\nprint(flips(62))\nprint("
    },
    {
      "rank": 92,
      "score": 2.8341535301524328,
      "candidate": "class Solution:\n    def numFlips(self, s: str) -> int:\n        s = list(s)\n        s.reverse()\n        ans = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                ans += 1\n        return ans\n\n\nprint(Solution().numFlips(\"100\"))\nprint(Solution().numFlips(\"01\"))\nprint(Solution().numFlips(\"10\"))\nprint(Solution().numFlips(\"11\"))\nprint(Solution().numFlips(\"0101\"))\nprint(Solution().numFlips(\"01\"))"
    },
    {
      "rank": 93,
      "score": 2.7935616785263604,
      "candidate": "def flips_required(binary_string):\n    \"\"\"\n    :type binary_string: str\n    :rtype: int\n    \"\"\"\n    return binary_string.count('1') + binary_string.count('0')\n\n\ndef flips_required_v2(binary_string):\n    \"\"\"\n    :type binary_string: str\n    :rtype: int\n    \"\"\"\n    count = 0\n    for i in range(len(binary_string) - 1, -1, -1):\n        if binary_string[i] == '1':\n            count += 1\n        elif binary_string[i] == '0':\n            count -= 1\n    return count\n\n\nif __name__ == '__main__':\n    assert flips_required_v2(\"0111\") == 1\n    assert flips_required_v2(\"100\") == 0\n    assert flips_required_v2(\"101\") == 2"
    },
    {
      "rank": 94,
      "score": 2.7833849599020932,
      "candidate": "class Solution(object):\n    def numFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if s is None or len(s) < 1:\n            return 0\n\n        # Create a dict to store the count of each letter\n        # to see if there are any other flips needed\n        count = {}\n        for i in range(len(s)):\n            if s[i] not in count:\n                count[s[i]] = 1\n            else:\n                count[s[i]] += 1\n\n        # Create a dictionary to store the flips\n        # required to make the given binary string a sequence\n        # of alternate characters\n        flips = {}\n        for i in range(len(s)):\n            if s[i] not in flips:\n                flips[s[i]] = 0\n            else:\n                flips[s[i]] += 1\n\n        # Create a dictionary to store the flips\n        # required to make the given binary string a sequence\n        # of alternate characters\n        flips_required = {}\n        for i in range(len(s)):\n            if s[i] not in flips_required:\n                flips_required[s[i]] = 0\n            else:\n                flips_required[s[i]] += 1\n\n        # Create a dictionary to store the number of flips\n        # required to make the given binary string a sequence\n        # of alternate characters\n        flips_required_num = {}\n        for i in range(len(s)):\n            if s[i] not in flips_required_num:\n                flips_required_num[s[i]] = 0\n            else:\n                flips_required_num[s[i]] += 1\n\n        # Create a dictionary to store the number of\n        # flips required to make the given binary string a sequence\n        # of alternate characters\n        flips_required_num_num = {}\n        for i in range(len(s)):\n            if s[i] not in flips_required_num_num:\n                flips_required_num_num[s[i]] = 0"
    },
    {
      "rank": 95,
      "score": 2.7696498533136933,
      "candidate": "def flips_required(bin_str):\n    \"\"\"\n    :type bin_str: str\n    :rtype: int\n    \"\"\"\n    # The flips must be at least one\n    if len(bin_str) < 1:\n        return 0\n    # The number of flips must be at least one\n    if len(bin_str) > 1:\n        return 0\n\n    # The flips must be at least one\n    if bin_str[0] == '1':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[-1] == '1':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '0' and bin_str[-1] == '0':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '0' and bin_str[-1] == '1':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '1' and bin_str[-1] == '0':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '1' and bin_str[-1] == '1':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '0' and bin_str[-1] == '1':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '1' and bin_str[-1] == '0':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '1' and bin_str[-1] == '0':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '0' and bin_str[-1] == '1':\n        return 1\n\n    # The number of flips must be at least one\n    if bin_str[0] == '"
    },
    {
      "rank": 96,
      "score": 2.609330032009273,
      "candidate": "def num_flips(binary_string: str) -> int:\n    return bin(int(binary_string, 2)).count('1')\n\n\nif __name__ == '__main__':\n    assert num_flips(\"0010\") == 1\n    assert num_flips(\"1001\") == 2\n    assert num_flips(\"1010\") == 3"
    },
    {
      "rank": 97,
      "score": 2.5480628155727065,
      "candidate": "class Solution:\n    def numFlips(self, s: str) -> int:\n        count = 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                count += 1\n        return count"
    },
    {
      "rank": 98,
      "score": 2.526872963082423,
      "candidate": "def flips(s):\n    if len(s) == 0:\n        return 0\n    if len(s) == 1:\n        return 1 if s[0] == '1' else 0\n\n    count = 0\n    for i in range(0, len(s)-1):\n        if s[i] == '1' and s[i+1] == '1':\n            count += 1\n        elif s[i] == '1' and s[i+1] == '0':\n            count += 2\n    return count\n\n\nif __name__ == '__main__':\n    print(flips(\"100100\"))"
    },
    {
      "rank": 99,
      "score": 2.435827150283925,
      "candidate": "class Solution(object):\n    def numFlips(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if len(s) < 2:\n            return 0\n\n        n = len(s)\n        count = 0\n        for i in range(n-1):\n            if s[i]!= s[i+1]:\n                count += 1\n\n        return count\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    assert s.numFlips(\"100\") == 1\n    assert s.numFlips(\"1010\") == 2\n    assert s.numFlips(\"1011\") == 3\n    assert s.numFlips(\"10001\") == 2\n    assert s.numFlips(\"10101\") == 3\n    assert s.numFlips(\"0100\") == 3\n    assert s.numFlips(\"1111\") == 3\n    assert s.numFlips(\"101\") == 3"
    },
    {
      "rank": 100,
      "score": 2.387750321709505,
      "candidate": "def flips(s):\n    n = len(s)\n    dp = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n    dp[0][0] = 1\n\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            if s[i - 1] == s[j - 1]:\n                dp[i][j] = dp[i - 1][j - 1] + dp[i - 1][j]\n            else:\n                dp[i][j] = max(dp[i - 1][j - 1], dp[i - 1][j])\n\n    return dp[n][n]\n\n\nif __name__ == \"__main__\":\n    s = \"101\"\n    print(flips(s))"
    }
  ]
}