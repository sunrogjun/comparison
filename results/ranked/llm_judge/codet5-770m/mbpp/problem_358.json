{
  "timestamp": "2025-09-14T15:05:49.447106",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 358,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def area(a, b, c):\n    return a * b * c\n\nprint(area(1, 2, 3))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def cuboid(radius):\n    return 3.14 * radius**2\n\nradius = float(input('Enter the radius of cuboid: '))\narea = cuboid(radius)\nprint('The lateral surface area of cuboid is:',area)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def lateral_surface_area(x1, y1, z1, x2, y2, z2):\n    # find the distance between the two points\n    dist = ((x1-x2)**2 + (y1-y2)**2 + (z1-z2)**2)**0.5\n    # calculate the lateral surface area\n    return dist\n\n\nprint(lateral_surface_area(1, 1, 1, 1, 1, 1))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def cuboid_area(r, theta, phi):\n    return (r * r) * (theta * theta) * (phi * phi)\n\n\nprint(cuboid_area(3, 1, 1))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def cuboid_area(r, h):\n    return 2 * r * h\n\n\nif __name__ == '__main__':\n    print(cuboid_area(3, 4))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "import math\n\n\ndef cuboid_area(r):\n    return r * (r + r) * (2 * r + 3) / 6\n\n\ndef test_cuboid_area():\n    assert cuboid_area(3) == 6\n    assert cuboid_area(4) == 24\n    assert cuboid_area(5) == 36\n    assert cuboid_area(6) == 42\n\n\nif __name__ == '__main__':\n    test_cuboid_area()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def cuboid_area(l, r, b):\n    # Your code here\n    area = (l * r) * (b * b)\n    print(\"The lateral surface area of cuboid is :\", area)\n\n\ncuboid_area(4, 4, 4)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def lateral_surface_area(height):\n    # Calculate the lateral surface area of the cuboid\n    return height * 3.14159265358979323846\n\n\nheight = float(input(\"Enter the height of the cuboid: \"))\n\nprint(\"The lateral surface area of the cuboid is : \", lateral_surface_area(height))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def cuboid_surface_area(r, h, x, y, z):\n    return (r*h*x) + (y*z)"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def cuboid_area(r, h):\n    return r * h\n\n\nr = float(input('Enter radius of cuboid: '))\nh = float(input('Enter height of cuboid: '))\n\nprint('Lateral surface area of cuboid is:', cuboid_area(r, h))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def lateral_surface_area(r, h, w):\n    return (r * r * r) * (h * h * h) * (w * w * w)\n\nprint(lateral_surface_area(2, 1, 1))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def surfaceArea(x, y, z):\n    return (x**2 + y**2 + z**2)**(1/2)\n\nprint(surfaceArea(0.5,0.5,0.5))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def cuboid_area(x, y, z):\n    return (x**2 + y**2 + z**2)**(1/2)\n\n\ndef main():\n    print(cuboid_area(1, 1, 1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def cuboid_surface_area(r, h):\n    return (r**2 + h**2)**0.5\n\n\nprint(cuboid_surface_area(1, 2))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def cuboid_area(r, theta, phi):\n    return (r**2 + theta**2 + phi**2)**0.5\n\nprint(cuboid_area(3,2,1))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def cuboid_area(r,h):\n    area=r*h\n    return area\n\nprint(cuboid_area(2,2))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def lateral_surface_area(r, h):\n    return r*h\n\ndef main():\n    print(lateral_surface_area(3, 3))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def cuboid_area(r,h):\n    return r*h\n\n\nprint(cuboid_area(r=1,h=1))\nprint(cuboid_area(r=2,h=1))\nprint(cuboid_area(r=3,h=1))\nprint(cuboid_area(r=4,h=1))\nprint(cuboid_area(r=5,h=1))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def area(r):\n    area = 3.1415926535897932384626433832795028841971693993751058209749445923078164062805048844700934\n    return area * r**2\n\n\nprint(area(1))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def cuboid_area(r, h, l):\n    return (r * r * r) * (l * l * l) / 6\n\n\nprint(cuboid_area(4, 2, 1))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def cuboid_area(a,b,c):\n    return a*b*c\n\na=int(input(\"enter a\"))\nb=int(input(\"enter b\"))\nc=int(input(\"enter c\"))\n\nprint(cuboid_area(a,b,c))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def cuboid(r, h):\n    return r * h\n\n\nif __name__ == '__main__':\n    print(cuboid(5, 3))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "import math\n\ndef surface_area(r):\n    area = math.pi * r**2\n    return area\n\nprint(surface_area(3))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "from math import pi, sqrt\n\ndef cuboid_area(a, b, c):\n    area = (a * b * c) / 2\n    return area\n\ndef main():\n    a = float(input(\"Enter the side length of the cuboid: \"))\n    b = float(input(\"Enter the side length of the cuboid: \"))\n    c = float(input(\"Enter the side length of the cuboid: \"))\n    print(\"The lateral surface area of cuboid is: \", cuboid_area(a, b, c))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def cuboid_surface_area(r, h, w):\n    return (r * r + h * h + w * w) * 0.5\n\n\ndef main():\n    print(\"The lateral surface area of cuboid is\", cuboid_surface_area(10, 8, 3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def cuboid_surface_area(r):\n    return (r**3)\n\ndef main():\n    print(cuboid_surface_area(3))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def cuboid_area(r):\n    return r**2\n\n\nif __name__ == \"__main__\":\n    r = float(input(\"Input radius: \"))\n    print(f\"The lateral surface area of cuboid is {cuboid_area(r)}\")"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def cuboid_area(r,h):\n    area = (r*r + h*h) * 0.5\n    return area\n\nprint(cuboid_area(3,4))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def lateral_surface_area(a, b, c):\n    return (a * b * c) / 2\n\n\nprint(lateral_surface_area(10, 20, 30))"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def cuboid_surface_area(r, theta, phi):\n    # Write your code here\n    a = r*r*r\n    b = 2*r*r*r\n    c = 2*r*r*r*r\n    d = 2*r*r*r*r\n    e = 2*r*r*r*r\n    f = 2*r*r*r*r\n    g = 2*r*r*r*r\n    h = 2*r*r*r*r*r\n    i = 2*r*r*r*r\n    j = 2*r*r*r*r\n    k = 2*r*r*r*r\n    l = 2*r*r*r*r\n    m = 2*r*r*r*r\n    n = 2*r*r*r*r\n    o = 2*r*r*r*r\n    p = 2*r*r*r*r\n    q = 2*r*r*r*r*r\n    s = 2*r*r*r*r*r\n    t = 2*r*r*r*r*r\n    u = 2*r*r*r*r*r\n    v = 2*r*r*r*r*r\n    w = 2*r*r*r*r*r\n    x = 2*r*r*r*r*r\n    y = 2*r*r*r*r*r\n    z = 2*r*r*r*r*r\n\n    # Write your code here\n    return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + s + t + u + v + w + x + y + z\n\n\n# Driver code\nif __name__ == '__main__':\n    r = float(input('r = '))\n    theta = float(input('theta = '))\n    phi = float(input('phi = '))\n    print(cuboid_surface_area(r, theta, phi))"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def cuboid_area(r, h, w):\n    return (r*r + h*h + w*w)**(1/2)\n\nprint(cuboid_area(12, 5, 8))"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def cuboid_area(r):\n    return r**2"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "def lateral_area(height, width, depth):\n    return height * width * depth\n\n\nprint(lateral_area(2, 2, 2))"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "import math\n\ndef area(r,h):\n    area = math.pi * (r**2 + h**2)\n    return area\n\n\nif __name__ == \"__main__\":\n    print(area(0.5,0.5))"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def cuboid_surface_area(radius):\n    return 4 * radius ** 2"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "def lateral_surface_area(cuboid):\n    l_area = cuboid[0]*cuboid[1]*cuboid[2]\n    return l_area\n\n\nprint(lateral_surface_area((3, 4, 5)))"
    },
    {
      "rank": 37,
      "score": 9.0,
      "candidate": "def surface_area(r,h,l):\n    return (4 * (r**2) * (h**2) * (l**2))**(1/2)\n\nif __name__ == \"__main__\":\n    print(\"The lateral surface area of the cuboid is\",surface_area(5,6,7))"
    },
    {
      "rank": 38,
      "score": 9.0,
      "candidate": "import math\n\ndef cuboid(a, b, c, d):\n\n    #calculate the area of the cuboid\n    area = math.sqrt(a**2 + b**2 + c**2 + d**2)\n\n    #print the result\n    print(\"The lateral surface area of cuboid is: \", area)\n\n#call the function\ncuboid(4, 6, 5, 6)"
    },
    {
      "rank": 39,
      "score": 9.0,
      "candidate": "def lateral_area(r,h):\n    return r*h\n\n\nif __name__ == \"__main__\":\n    r = float(input(\"Radius of the cuboid: \"))\n    h = float(input(\"Height of the cuboid: \"))\n    print(\"Lateral surface area of cuboid is: \", lateral_area(r,h))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def cuboid_lateral_area(radius):\n    return 3.14 * radius**2\n\n\nprint(cuboid_lateral_area(3.14))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def get_lateral_surface_area(radius):\n    area = 4*radius**2\n    return area"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def lateral_area(radius):\n    return (radius ** 2) * 3.14159\n\n\nif __name__ == '__main__':\n    print(lateral_area(4))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def cuboid_area(r,h,w):\n    r = r * r\n    h = h * h\n    w = w * w\n    return r + h + w\n\nprint(cuboid_area(2,2,2))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "from math import pi\n\n\ndef cuboid_lateral_area(radius, height):\n    return pi * radius**2 * height\n\n\nif __name__ == '__main__':\n    print(cuboid_lateral_area(3, 3))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "import math\n\ndef cuboid_area(r, h):\n    # return the lateral surface area of a cuboid\n    return 2 * math.pi * r * h\n\n\nprint(cuboid_area(r=5, h=1))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def lateral_area(h,w,a):\n    l = h*w\n    b = 2*a*l\n    return b\n\nprint(lateral_area(2,2,3))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def lateral_area(r, h):\n    return r * h\n\nprint(lateral_area(1, 1))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "from math import sqrt\n\n\ndef get_area(r, theta, phi):\n    return r * sqrt(theta ** 2 + phi ** 2)\n\n\ndef get_cuboid_area(r, theta, phi):\n    return r * (theta + phi)\n\n\ndef main():\n    print(get_cuboid_area(5, 10, 15))\n    print(get_cuboid_area(5, 10, 15, 20))\n    print(get_cuboid_area(5, 10, 15, 20, 30))\n    print(get_cuboid_area(5, 10, 15, 20, 30, 40))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def cuboid_area(radius, height):\n    return 3.14 * radius * height\n\n\nif __name__ == \"__main__\":\n    print(cuboid_area(2, 2))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def cuboid_surface_area(radius, height):\n    return radius * height\n\n\nif __name__ == '__main__':\n    print(cuboid_surface_area(3, 8))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "import math\n\ndef lateral_surface_area(a, b, c):\n    return math.sqrt((a**2) + (b**2) + (c**2))\n\n\nprint(lateral_surface_area(5, 6, 7))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def cuboid_area(r,h,a,b,c):\n    #area of the cuboid\n    a = (r**2)*(h**2)*(c**2)\n    #lateral surface area\n    s = a*(r+h+c)\n    return s\n\n\nr = float(input(\"Radius of the cuboid: \"))\nh = float(input(\"Height of the cuboid: \"))\na = float(input(\"Area of the cuboid: \"))\nb = float(input(\"Area of the cuboid: \"))\nc = float(input(\"Area of the cuboid: \"))\n\nprint(\"The lateral surface area is: \",cuboid_area(r,h,a,b,c))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "import math\n\ndef calculate_lateral_surface_area(radius, height):\n    a = math.pi * radius**2\n    b = 2 * height * math.tan(math.pi * radius / 2)\n    return a + b\n\nif __name__ == \"__main__\":\n    print(calculate_lateral_surface_area(3, 3))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def cuboid_area(radius):\n    return (4/3) * (radius**3)\n\n\nprint(cuboid_area(10))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def cuboid_surface_area(l, r, b, t):\n    return l*r*b*t\n\nprint(cuboid_surface_area(3, 4, 5, 6))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def cuboid_area(x,y,z):\n    return (x*x+y*y+z*z)/2\n\nprint(cuboid_area(1,2,3))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def cuboid_area(x, y, z):\n    return 0.5 * (x ** 2 + y ** 2 + z ** 2)\n\n\nprint(cuboid_area(1, 1, 1))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def cuboid_area(r,h):\n    return (r**2 + h**2)**(1/2)\n\ndef main():\n    r = float(input(\"Enter the radius of the cuboid: \"))\n    h = float(input(\"Enter the height of the cuboid: \"))\n    print(\"The lateral surface area of cuboid is\",cuboid_area(r,h))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def surface_area(r,h):\n    #area = (r*h)**2\n    area = r*h\n    return area\n\nr = float(input(\"Enter radius of the cuboid: \"))\nh = float(input(\"Enter height of the cuboid: \"))\nprint(\"The lateral surface area of cuboid is : \", surface_area(r,h))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def cuboid_area(r, h):\n    a = r * h\n    return a\n\nprint(cuboid_area(1, 1))\nprint(cuboid_area(2, 1))\nprint(cuboid_area(2, 2))\nprint(cuboid_area(1, 2))\nprint(cuboid_area(2, 2))\nprint(cuboid_area(3, 2))\nprint(cuboid_area(3, 3))\nprint(cuboid_area(4, 2))\nprint(cuboid_area(4, 3))\nprint(cuboid_area(5, 2))\nprint(cuboid_area(5, 3))\nprint(cuboid_area(5, 4))\nprint(cuboid_area(6, 2))\nprint(cuboid_area(6, 3))\nprint(cuboid_area(6, 4))\nprint(cuboid_area(7, 2))\nprint(cuboid_area(7, 3))\nprint(cuboid_area(7, 4))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def surface_area(r, h, a):\n    return r * h * a\n\n\nprint(surface_area(2, 2, 3))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "from math import pi\n\ndef cuboid_area(r, theta):\n    a = r * r * r * (pi / 180)\n    b = r * r * r * (pi / 180)\n    c = r * r * r * (pi / 180)\n    d = r * r * r * (pi / 180)\n    e = r * r * r * (pi / 180)\n    f = r * r * r * (pi / 180)\n    g = r * r * r * (pi / 180)\n    h = r * r * r * (pi / 180)\n    i = r * r * r * (pi / 180)\n    j = r * r * r * (pi / 180)\n    k = r * r * r * (pi / 180)\n\n    return (a + b + c + d + e + f + g + h + i + j + k)\n\n\nif __name__ == '__main__':\n    print(cuboid_area(3, 1.57))\n    print(cuboid_area(3, 2.5))\n    print(cuboid_area(3, 5))\n    print(cuboid_area(3, 7))\n    print(cuboid_area(3, 8))\n    print(cuboid_area(3, 10))\n    print(cuboid_area(3, 11))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def cuboid_area(l, r, b):\n    area = l * r * b\n    return area\n\n\nprint(cuboid_area(3, 2, 3))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def get_surface_area(l, r, h):\n    return (l * r * h) / 2\n\n\nprint(get_surface_area(0.5, 0.3, 0.3))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def cuboid_area(r,h):\n    a=r*h\n    return a\n\nprint(cuboid_area(1,1))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def cuboid_surface(r,h,s):\n    return r*h*s\n\nr=float(input(\"Enter radius of the cuboid: \"))\nh=float(input(\"Enter height of the cuboid: \"))\ns=float(input(\"Enter surface area of the cuboid: \"))\nprint(cuboid_surface(r,h,s))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def lateral_surface_area(p1, p2, p3, p4):\n    a1 = (p1 * p2 * p3) - (p4 * p1 * p3)\n    a2 = (p1 * p3 * p4) - (p2 * p3 * p4)\n    a3 = (p2 * p4 * p3) - (p3 * p4 * p2)\n    return a1 + a2 + a3\n\n\nprint(lateral_surface_area(1, 2, 3, 4))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "import math\n\ndef area(a,b,c):\n    return a*b*c\n\n\ndef main():\n    print(\"Enter the coordinates of the cuboid\")\n    a = float(input(\"a: \"))\n    b = float(input(\"b: \"))\n    c = float(input(\"c: \"))\n    print(f\"The area of the cuboid is {area(a,b,c)}\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "from math import pi\n\ndef cuboid_lateral_area(r, h, h2):\n    area = (r * r) * (h * h)\n    area2 = (r * r) * (r * h2)\n    return area + area2\n\n\nprint(cuboid_lateral_area(1, 1, 1))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "import math\n\n\ndef surfaceArea(r, h, w):\n    area = 2 * math.pi * (r ** 2) * (h ** 2) * (w ** 2)\n    return area\n\n\nprint(surfaceArea(5, 2, 3))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def surface_area(r):\n    a = 3.14 * r ** 2\n    return a\n\n\nprint(surface_area(1))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def cuboid_area(r):\n    return r**3\n\nprint(cuboid_area(1))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def lateral_surface(radius, height):\n    #print(radius, height)\n    if radius == 0:\n        return 0\n    else:\n        return (2 * radius * height) / 3\n\nprint(lateral_surface(3, 4))\nprint(lateral_surface(3, 0))\nprint(lateral_surface(0, 4))\nprint(lateral_surface(0, 0))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def cuboid_area(x, y, z):\n    return (x*x + y*y + z*z)**(1/2)\n\n\nprint(cuboid_area(3, 3, 3))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def cuboid_area(length, width, height):\n    return length * width * height\n\n\nprint(cuboid_area(3, 4, 5))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "import math\n\ndef cuboid_area(r):\n    #your code here\n    return r*r*r\n\nprint(cuboid_area(4))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def lateral_area(a, b, c):\n    return (a * b * c) ** 0.5\n\n\ndef main():\n    a = float(input(\"Enter the radius of the cuboid: \"))\n    b = float(input(\"Enter the radius of the inner cuboid: \"))\n    c = float(input(\"Enter the radius of the outer cuboid: \"))\n    print(\"The lateral surface area is: \" + str(lateral_area(a, b, c)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "from math import pi\n\ndef cuboid_area(x, y, z):\n    return pi * (x ** 2 + y ** 2 + z ** 2)\n\n\nprint(cuboid_area(1, 1, 1))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def surface_area(r,h):\n    return 3.1415926 * r * h\n\nprint(surface_area(1,1))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def cuboid_area(r, h, a):\n    return (r**2 + h**2) * a\n\nprint(cuboid_area(4, 4, 3))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def cuboid_surface_area(radius):\n    return 4 * (radius**2)\n\n\nprint(cuboid_surface_area(3))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def lateral_surface_area(x,y,z,n):\n    #define the area of the cuboid\n    area = (x**2+y**2+z**2)**(1/2)\n\n    #print the area\n    print(f\"The lateral surface area of cuboid is {area}\")\n\n\nlateral_surface_area(2,3,4,4)"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def cuboid_lateral_area(length, width, height):\n    return length * width * height\n\n\nprint(cuboid_lateral_area(3, 2, 3))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def cuboid_area(x1, y1, z1, x2, y2, z2):\n    area = (x1 * x2 + y1 * y2 + z1 * z2) / 2\n    return area\n\n\ndef main():\n    x1 = float(input(\"Enter the first value of x: \"))\n    y1 = float(input(\"Enter the first value of y: \"))\n    z1 = float(input(\"Enter the first value of z: \"))\n    x2 = float(input(\"Enter the second value of x: \"))\n    y2 = float(input(\"Enter the second value of y: \"))\n    z2 = float(input(\"Enter the second value of z: \"))\n    print(\"The lateral surface area of cuboid is: \" + str(cuboid_area(x1, y1, z1, x2, y2, z2)))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def area(r, h, w, b):\n    return r * h * w * b\n\nprint(area(1, 2, 3, 4))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def cuboid_area(r):\n    return (4/3)*r**3\n\nprint(cuboid_area(3))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def cuboid_area(r, theta, phi):\n    area = r*r*r*np.cos(theta)*np.cos(phi)\n    return area\n\nprint(cuboid_area(r=0.2, theta=0, phi=0))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def cuboid_area(a,b,c):\n    return (a*b*c)/2\n\nif __name__ == '__main__':\n    a = float(input(\"Enter the radius of the cuboid: \"))\n    b = float(input(\"Enter the height of the cuboid: \"))\n    c = float(input(\"Enter the width of the cuboid: \"))\n    print(cuboid_area(a,b,c))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def cuboid_area(r, h):\n    return (r**2 + h**2)**(1/2)\n\n\nr = float(input(\"Enter the radius of cuboid: \"))\nh = float(input(\"Enter the height of cuboid: \"))\nprint(\"The lateral surface area of cuboid is\", cuboid_area(r, h))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def lateral_surface_area(r,h,l):\n    a=r*r*r*l*l\n    b=2*h*l\n    c=2*r*r*l\n    return a+b+c\n\n\nprint(lateral_surface_area(10,10,10))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def cuboid_surface_area(r, theta):\n    return (r**2 + theta**2)**0.5\n\n\nprint(cuboid_surface_area(3, 2))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "import math\n\ndef cuboid_area(a, b, c):\n    if a > b:\n        return a*b*c\n    else:\n        return b*c*a\n\n\nprint(cuboid_area(2,3,4))\nprint(cuboid_area(1,2,3))\nprint(cuboid_area(1,1,1))\nprint(cuboid_area(3,4,2))\nprint(cuboid_area(4,4,3))\nprint(cuboid_area(4,4,4))\nprint(cuboid_area(4,4,4))\nprint(cuboid_area(4,4,4))"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def cuboid_area(r,h,l):\n    return r*r*h*l\n\nprint(cuboid_area(1.2,1.3,0.5))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def cuboid_lateral_area(radius):\n    area = 3.14 * radius ** 2\n    return area\n\n\ndef main():\n    print(\"Please input the radius of the cuboid:\")\n    radius = float(input())\n    area = cuboid_lateral_area(radius)\n    print(\"The lateral area of cuboid is:\", area)\n\n\nmain()"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def cuboid_area(radius):\n    \"\"\"\n    Returns the cuboid area\n    \"\"\"\n    return 3.14 * radius ** 2"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "import math\n\ndef cuboid_area(r, theta):\n    return math.pi * (r ** 2) * math.sin(theta) * r * math.cos(theta)\n\nprint(cuboid_area(1,1))\nprint(cuboid_area(1,2))\nprint(cuboid_area(1,3))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "def area(radius):\n    return 3.14 * (radius ** 2)\n\n\nprint(area(5))"
    },
    {
      "rank": 98,
      "score": 8.0,
      "candidate": "def cuboid(r, h):\n    return (r**2 + h**2)**(0.5)\n\nprint(cuboid(10, 20))"
    },
    {
      "rank": 99,
      "score": 8.0,
      "candidate": "def cuboid_surface_area(x,y,z):\n    return (x**2+y**2+z**2)/6\n\n\ndef main():\n    print(cuboid_surface_area(1,2,3))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def cuboid_area(radius, height):\n    return radius * height\n\n\ndef test_cuboid_area():\n    assert cuboid_area(1, 1) == 1\n    assert cuboid_area(1, 2) == 3\n    assert cuboid_area(2, 2) == 4\n    assert cuboid_area(2, 3) == 4\n    assert cuboid_area(3, 2) == 4\n    assert cuboid_area(3, 3) == 5\n    assert cuboid_area(4, 2) == 6\n    assert cuboid_area(4, 3) == 6\n    assert cuboid_area(4, 4) == 8\n    assert cuboid_area(4, 5) == 8\n    assert cuboid_area(5, 2) == 8\n    assert cuboid_area(5, 3) == 8\n    assert cuboid_area(5, 4) == 8\n    assert cuboid_area(5, 5) == 8\n    assert cuboid_area(6, 2) == 8\n    assert cuboid_area(6, 3) == 8\n    assert cuboid_area(6, 4) == 8\n    assert cuboid_area(7, 2) == 8\n    assert cuboid_area(7, 3) == 8\n    assert cuboid_area(7, 4) == 8\n    assert cuboid_area(7, 5) == 8\n    assert cuboid_area(7, 6) == 8\n    assert cuboid_area(7, 7) == 8\n    assert cuboid_area(8, 2) == 8\n    assert cuboid_area(8, 3) == 8\n    assert cuboid_area(8, 4) == 8\n    assert cuboid_area(8, 5) == 8\n    assert cuboid_area(8, 6) == 8\n    assert cuboid_area(8, 7) == 8\n    assert cuboid_area(8, 8) == 8\n    assert cuboid_area(9, 2) == 8\n    assert cuboid_area(9, 3) == 8"
    }
  ]
}