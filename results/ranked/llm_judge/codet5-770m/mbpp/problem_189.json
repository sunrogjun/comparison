{
  "timestamp": "2025-09-14T13:51:20.858183",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 189,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def find_max(arr):\n    max_val = arr[0]\n    max_ind = [0]\n    for i in range(len(arr)):\n        if arr[i] > max_val:\n            max_val = arr[i]\n            max_ind = [i]\n        else:\n            max_ind.append(i)\n    return max_ind\n\narr = [1,2,3,4,5,6,7,8]\nprint(find_max(arr))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def find_max_index(arr):\n    max_index = [0] * len(arr)\n    for i, num in enumerate(arr):\n        max_index[i] = i if num > max_index[i] else max_index[i]\n    return max_index\n\nif __name__ == '__main__':\n    print(find_max_index([1,2,3,4,5,6,7,8,9,10,11]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def find_max_index(arr):\n    max_value = 0\n    max_index = 0\n    for i, item in enumerate(arr):\n        if item > max_value:\n            max_value = item\n            max_index = i\n    return max_index\n\n\n\nif __name__ == \"__main__\":\n    print(find_max_index([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def find_max_index(arr):\n    max_index = 0\n    max_value = arr[0]\n    for index, value in enumerate(arr):\n        if value > max_value:\n            max_index = index\n            max_value = value\n    return max_index\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5]\n    print(find_max_index(arr))\n\n\nmain()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def maximum_indexes(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    max_index = 0\n    max_val = arr[0]\n    max_index_list = []\n\n    for i in range(1, len(arr)):\n        if arr[i] > max_val:\n            max_val = arr[i]\n            max_index = i\n            max_index_list.append(max_index)\n\n    return max_index_list\n\n\nif __name__ == '__main__':\n    print(maximum_indexes([1, 2, 3, 4, 5, 6, 7, 8]))\n    print(maximum_indexes([2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(maximum_indexes([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def find_max(arr):\n    if arr is None:\n        return []\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] == max(arr):\n            max_pos.append(i)\n    return max_pos\n\nprint(find_max([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def find_max_index(arr):\n    max_index = 0\n    for i in range(len(arr)):\n        if arr[i] > arr[max_index]:\n            max_index = i\n    return max_index\n\n\nprint(find_max_index([1, 2, 3, 4, 5]))\nprint(find_max_index([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))\nprint(find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 156, 159, 160, 161, 162,"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def max_index(a):\n    max_index = []\n    for i in range(len(a)):\n        if a[i] > max(a):\n            max_index.append(i)\n    return max_index\n\n\nprint(max_index([1, 3, 2, 4, 5, 6, 7]))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def find_max(arr):\n    max_value = max(arr)\n    max_index = arr.index(max_value)\n    return max_index\n\n\nif __name__ == \"__main__\":\n    print(find_max([3, 5, 7, 9, 2, 4, 6]))\n    print(find_max([1, 2, 3, 4, 5, 6, 7]))\n    print(find_max([]))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def maximum_position(arr):\n    return [i for i, x in enumerate(arr) if x == max(arr)]\n\n\ndef maximum_position2(arr):\n    return [i for i, x in enumerate(arr) if x == max(arr)]\n\n\ndef maximum_position3(arr):\n    max_val = 0\n    max_index = 0\n    for i, x in enumerate(arr):\n        if x > max_val:\n            max_val = x\n            max_index = i\n    return max_index\n\n\ndef maximum_position4(arr):\n    return [i for i, x in enumerate(arr) if x == max(arr)]\n\n\nif __name__ == \"__main__\":\n    print(maximum_position([1, 2, 3, 4, 5]))\n    print(maximum_position([1, 2, 3, 4, 5, 6]))\n    print(maximum_position([1, 2, 3, 4, 5, 6, 7]))\n    print(maximum_position([1, 2, 3, 4, 5, 6, 7, 8, 9]))\n    print(maximum_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(maximum_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\n    print(maximum_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def find_max(lst):\n    \"\"\"\n    :type lst: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if len(lst) == 0:\n        return []\n    max_index = 0\n    max_val = lst[0]\n    for i in range(len(lst)):\n        if lst[i] > max_val:\n            max_val = lst[i]\n            max_index = i\n    return [max_index]\n\n\ndef find_max_1(lst):\n    \"\"\"\n    :type lst: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if len(lst) == 0:\n        return []\n    max_index = 0\n    max_val = lst[0]\n    for i in range(len(lst)):\n        if lst[i] > max_val:\n            max_val = lst[i]\n            max_index = i\n    return [max_index]\n\n\ndef find_max_2(lst):\n    \"\"\"\n    :type lst: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if len(lst) == 0:\n        return []\n    max_index = 0\n    max_val = lst[0]\n    for i in range(len(lst)):\n        if lst[i] > max_val:\n            max_val = lst[i]\n            max_index = i\n    return [max_index]\n\n\nif __name__ == \"__main__\":\n    print(find_max([2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(find_max([2, 3, 4, 5, 6, 7, 8, 9, 10, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def maximum_index(arr):\n    return [i for i, x in enumerate(arr) if x == max(arr)]\n\n\nif __name__ == \"__main__\":\n    arr = [2, 6, 4, 7, 1, 8, 9, 5]\n    print(maximum_index(arr))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def find_max(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_index.append(i)\n    return max_index\n\n\nprint(find_max([1, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 14,
      "score": 9.370583536698913,
      "candidate": "def max_index_positions(arr):\n    max_index = 0\n    max_val = arr[0]\n    for i in range(len(arr)):\n        if arr[i] > max_val:\n            max_val = arr[i]\n            max_index = i\n    return max_index"
    },
    {
      "rank": 15,
      "score": 9.234050852198141,
      "candidate": "def max_index(arr):\n    if len(arr) == 0:\n        return []\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_index = [i]\n        else:\n            continue\n    return max_index\n\n\nif __name__ == \"__main__\":\n    assert max_index([1, 2, 3, 4, 5, 6, 7, 8, 9]) == [1, 2, 3, 4]\n    assert max_index([]) == []\n    assert max_index([1, 2, 3]) == [1, 2]"
    },
    {
      "rank": 16,
      "score": 9.226766272351448,
      "candidate": "def max_position(arr):\n    if len(arr) == 0:\n        return []\n    else:\n        max_value = arr[0]\n        max_position = []\n        for i in range(1, len(arr)):\n            if arr[i] > max_value:\n                max_position = [i]\n                max_value = arr[i]\n            else:\n                pass\n        return max_position\n\n\nprint(max_position([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 17,
      "score": 9.205959372648458,
      "candidate": "def find_max_index(arr):\n    max_index = [0] * len(arr)\n    for i, v in enumerate(arr):\n        if v > max_index[i]:\n            max_index[i] = v\n    return max_index\n\n\nprint(find_max_index([1, 3, 5, 2, 7]))\nprint(find_max_index([3, 2, 1, 5, 8, 9, 10]))"
    },
    {
      "rank": 18,
      "score": 9.183391466815202,
      "candidate": "def find_max(nums):\n    return [i for i,num in enumerate(nums) if num==max(nums)]\n\nprint(find_max([-1,0,-2,3,4,-5,2,1]))\nprint(find_max([-1,2,3,4,5,-6,7,-8,-9]))"
    },
    {
      "rank": 19,
      "score": 9.177268828905222,
      "candidate": "def find_max_index(arr):\n    max_index = 0\n    max_value = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n    return max_index\n\n\nprint(find_max_index([5, 8, 4, 2, 1]))"
    },
    {
      "rank": 20,
      "score": 9.122564458729856,
      "candidate": "def max_values(l):\n    return [i for i, x in enumerate(l) if x == max(l)]\n\nprint(max_values([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 21,
      "score": 8.973005557553902,
      "candidate": "def max_in_list(nums):\n    index = []\n    for i in range(len(nums)):\n        if nums[i] > nums[i - 1]:\n            index.append(i)\n    return index\n\nprint(max_in_list([3, 2, 4, 5]))"
    },
    {
      "rank": 22,
      "score": 8.95994420569242,
      "candidate": "def find_max_pos(arr):\n    return [i for i, x in enumerate(arr) if x == max(arr)]\n\n\nprint(find_max_pos([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 23,
      "score": 8.946210893390457,
      "candidate": "def max_positions(arr):\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\nprint(max_positions([1, 4, 7, 10, 9, 2, 3]))\nprint(max_positions([3, 4, 5, 10, 9, 2, 3]))\nprint(max_positions([5, 2, 3, 7, 9, 10, 3, 2]))"
    },
    {
      "rank": 24,
      "score": 8.932217008005624,
      "candidate": "def max_positions(list):\n    max_index = []\n    for index, value in enumerate(list):\n        if value == max(list):\n            max_index.append(index)\n    return max_index\n\nprint(max_positions([3,2,1,5,6,4]))"
    },
    {
      "rank": 25,
      "score": 8.85571690049604,
      "candidate": "def find_max_index(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > arr[max_index[-1]]:\n            max_index.append(i)\n    return max_index\n\n\nif __name__ == \"__main__\":\n    print(find_max_index([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 26,
      "score": 8.855395696632057,
      "candidate": "def maximum_indices(arr):\n    max_index = 0\n    max_value = 0\n    for i in range(len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n    return max_index\n\n\narr = [1, 2, 3, 4, 5]\nprint(maximum_indices(arr))"
    },
    {
      "rank": 27,
      "score": 8.850707355641543,
      "candidate": "def find_max(list):\n    max_value = list[0]\n    max_index = 0\n    for i in range(len(list)):\n        if list[i] > max_value:\n            max_value = list[i]\n            max_index = i\n    return max_index\n\n\nif __name__ == \"__main__\":\n    list = [1,2,3,4,5,6,7]\n    print(find_max(list))"
    },
    {
      "rank": 28,
      "score": 8.8281618090209,
      "candidate": "def max_value_indexes(list_):\n    \"\"\"\n    :type list_: List[int]\n    :rtype: List[int]\n    \"\"\"\n    max_index = list_[0]\n    max_value_indexes = [0]\n    for i in range(1, len(list_)):\n        if list_[i] > max_value:\n            max_value_indexes.append(i)\n            max_index = list_[i]\n    return max_value_indexes\n\n\nif __name__ == \"__main__\":\n    assert max_value_indexes([1, 2, 3, 4, 5, 6, 7, 8, 9]) == [0, 1, 2]\n    assert max_value_indexes([]) == []\n    assert max_value_indexes([-1]) == [0]\n    assert max_value_indexes([-2, -3, -4]) == [0, 1, 2, 3, 4]"
    },
    {
      "rank": 29,
      "score": 8.76828871349479,
      "candidate": "def maximum_index(arr):\n    n = len(arr)\n    result = []\n    for i in range(n):\n        if arr[i] == max(arr):\n            result.append(i)\n    return result"
    },
    {
      "rank": 30,
      "score": 8.692801520950061,
      "candidate": "def find_max_index(arr):\n    max_index = []\n    for i, value in enumerate(arr):\n        if value > max(arr[max_index:]):\n            max_index = [i]\n        elif value == max(arr[max_index:]):\n            max_index.append(i)\n    return max_index\n\n\nif __name__ == \"__main__\":\n    arr = [1, 4, 5, 7, 9, 3]\n    print(find_max_index(arr))"
    },
    {
      "rank": 31,
      "score": 8.632293453617281,
      "candidate": "def maximum_position(arr):\n    if len(arr) <= 1:\n        return [0]\n\n    max_position = []\n    for i in range(len(arr)):\n        if arr[i] > arr[max_position[-1]]:\n            max_position.append(i)\n\n    return max_position"
    },
    {
      "rank": 32,
      "score": 8.625262456968262,
      "candidate": "def find_max(lst):\n    max_idx = []\n    for i in range(len(lst)):\n        if lst[i] > lst[max_idx[-1]]:\n            max_idx.append(i)\n    return max_idx\n\n\nlst = [3, 2, 4, 1, 5]\nprint(find_max(lst))"
    },
    {
      "rank": 33,
      "score": 8.625142247198651,
      "candidate": "def maximum_values(arr):\n    max_index = -1\n    max_value = arr[0]\n    for i in range(len(arr)):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n    return max_index\n\n\nprint(maximum_values([1,2,3,4,5]))\nprint(maximum_values([1,2,3,4,5,6]))\nprint(maximum_values([1,2,3,4,5,6,7]))"
    },
    {
      "rank": 34,
      "score": 8.616253589228675,
      "candidate": "def max_index(lst):\n    max_index = [0] * len(lst)\n    for i in range(len(lst)):\n        max_index[i] = max(i, max_index[i-1]+1)\n    return max_index\n\n\nprint(max_index([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 35,
      "score": 8.610076160146226,
      "candidate": "def find_max_index(arr):\n    # Write your code here\n    max_value = arr[0]\n    max_index = 0\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n\n    return max_index"
    },
    {
      "rank": 36,
      "score": 8.606486429141842,
      "candidate": "def find_max_index(lst):\n    max_index = []\n    for i in range(len(lst)):\n        if lst[i] > max(lst):\n            max_index.append(i)\n    return max_index\n\n\nprint(find_max_index([4, 2, 5, 6, 7, 9, 3, 1]))"
    },
    {
      "rank": 37,
      "score": 8.60156811074208,
      "candidate": "def maximum_values(nums):\n    max_val = max(nums)\n    max_index = []\n    for i in range(len(nums)):\n        if nums[i] == max_val:\n            max_index.append(i)\n    return max_index\n\n\nprint(maximum_values([1, 2, 3, 4, 5]))\nprint(maximum_values([1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 38,
      "score": 8.542875062379007,
      "candidate": "def find_max_index(list):\n    max_value = list[0]\n    max_index = []\n    for i in range(len(list)):\n        if list[i] > max_value:\n            max_value = list[i]\n            max_index = [i]\n        else:\n            max_index.append(i)\n    return max_index\n\n\nprint(find_max_index([1, 3, 4, 7, 9, 10, 2]))"
    },
    {
      "rank": 39,
      "score": 8.490324832712195,
      "candidate": "def find_max_index(arr):\n    result = []\n    max_index = -1\n\n    for i in range(len(arr)):\n        if arr[i] > max_index:\n            max_index = i\n            result.append(max_index)\n\n    return result\n\n\nprint(find_max_index([1, 2, 3, 4, 5]))\nprint(find_max_index([]))\nprint(find_max_index([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 40,
      "score": 8.48796797856353,
      "candidate": "def find_max_values(arr):\n    maximum = arr[0]\n    maximum_index = 0\n    for i in range(len(arr)):\n        if arr[i] > maximum:\n            maximum = arr[i]\n            maximum_index = i\n    return maximum_index\n\n\nif __name__ == \"__main__\":\n    assert find_max_values([1, 3, 5, 7, 9, 10]) == [1, 5, 9]\n    assert find_max_values([1, 2, 3, 4, 5, 6, 7]) == [1, 2, 6]\n    assert find_max_values([1, 2, 3, 4, 5]) == [1, 2]\n    assert find_max_values([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [1, 3, 5, 7]"
    },
    {
      "rank": 41,
      "score": 8.426531424889468,
      "candidate": "def find_max_index(arr):\n    \"\"\"\n    :type arr: List[int]\n    :rtype: List[int]\n    \"\"\"\n    max_index = [-1 for _ in range(len(arr))]\n    for i in range(len(arr)):\n        if arr[i] > max_index[i]:\n            max_index[i] = i\n    return max_index\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6]\n    print(find_max_index(arr))"
    },
    {
      "rank": 42,
      "score": 8.408439383654278,
      "candidate": "def find_max(arr):\n    max_index = -1\n    max_value = -1\n    for i in range(len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n    return max_index"
    },
    {
      "rank": 43,
      "score": 8.386620303250325,
      "candidate": "def find_max_position(arr):\n    return [i for i, v in enumerate(arr) if v == max(arr)]\n\n\nprint(find_max_position([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 44,
      "score": 8.351614956112536,
      "candidate": "def max_values(arr):\n    if not arr:\n        return []\n\n    max_value = arr[0]\n    max_index = 0\n\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n\n    return [max_index]\n\n\nif __name__ == \"__main__\":\n    print(max_values([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 45,
      "score": 8.334608500525688,
      "candidate": "def maximum_index(arr):\n    result = []\n    for i in range(len(arr)):\n        if arr[i] > arr[i - 1]:\n            result.append(i)\n    return result\n\n\nif __name__ == '__main__':\n    assert maximum_index([4, 7, 1, 2, 5, 8]) == [2, 3, 4]\n    assert maximum_index([1, 2, 3, 4, 5]) == [1, 2]\n    assert maximum_index([1, 2, 3, 4, 5, 6, 7, 8, 9]) == [1, 2, 3, 4, 5]"
    },
    {
      "rank": 46,
      "score": 8.331556294201176,
      "candidate": "def max_index(arr):\n    maximum = -1\n    maximum_index = []\n    for i in range(len(arr)):\n        if arr[i] > maximum:\n            maximum = arr[i]\n            maximum_index = [i]\n        else:\n            maximum_index.append(i)\n    return maximum_index\n\n\nprint(max_index([5, 2, 4, 3, 6, 1]))\nprint(max_index([]))\nprint(max_index([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 47,
      "score": 8.327367757082776,
      "candidate": "def max_indices(array):\n    return [i for i, num in enumerate(array) if num == max(array)]\n\n\ndef max_indices_2(array):\n    return [i for i, num in enumerate(array) if num == max(array)]\n\n\nif __name__ == \"__main__\":\n    array = [3, 2, 4, 1, 5]\n    print(max_indices(array))\n    print(max_indices_2(array))"
    },
    {
      "rank": 48,
      "score": 8.298597569547805,
      "candidate": "def max_index(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_index = [i]\n            max_index.append(i)\n    return max_index\n\nprint(max_index([1,2,3,4,5,6,7,8,9,10]))"
    },
    {
      "rank": 49,
      "score": 8.294940769211511,
      "candidate": "def find_max_index(lst):\n    if len(lst) == 0:\n        return []\n    return [i for i, x in enumerate(lst) if x == max(lst)]\n\n\nif __name__ == '__main__':\n    print(find_max_index([2, 3, -3, 6, 4]))"
    },
    {
      "rank": 50,
      "score": 8.2938925966498,
      "candidate": "def max_in_list(arr):\n    max_index = -1\n    max_index_list = []\n\n    for index, num in enumerate(arr):\n        if num > max_index:\n            max_index = index\n            max_index_list = [max_index]\n        elif num == max_index:\n            max_index_list.append(max_index)\n\n    return max_index_list\n\n\nif __name__ == \"__main__\":\n    print(max_in_list([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 51,
      "score": 8.289838256518838,
      "candidate": "def find_max_index(nums):\n    \"\"\"\n    :type nums: List[int]\n    :rtype: List[int]\n    \"\"\"\n    if len(nums) == 0:\n        return []\n\n    max_index = 0\n    max_val = nums[0]\n    for i in range(len(nums)):\n        if nums[i] > max_val:\n            max_index = i\n            max_val = nums[i]\n\n    return [i + 1 for i in range(len(nums)) if nums[i] == max_val]"
    },
    {
      "rank": 52,
      "score": 8.251903304236286,
      "candidate": "def find_max_positions(nums):\n    # Write your code here\n    max_val = nums[0]\n    max_index = 0\n    for i in range(len(nums)):\n        if nums[i] > max_val:\n            max_val = nums[i]\n            max_index = i\n    return max_index\n\n\nprint(find_max_positions([2, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 53,
      "score": 8.214125058964552,
      "candidate": "def maximum_positions(arr):\n    arr.sort()\n    index = []\n    for i in range(len(arr)):\n        if arr[i] == arr[len(arr) - 1]:\n            index.append(i)\n    return index\n\n\narr = [1, 2, 4, 5, 6, 7, 8, 9, 10]\nprint(maximum_positions(arr))"
    },
    {
      "rank": 54,
      "score": 8.212735598038213,
      "candidate": "def find_max_index(arr):\n    if arr is None or len(arr) == 0:\n        return None\n\n    max_index = -1\n    max_value = None\n\n    for i in range(len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n\n    return max_index\n\n\nif __name__ == \"__main__\":\n    arr = [5, -2, 3, 6, -2, 4, -1]\n    print(find_max_index(arr))"
    },
    {
      "rank": 55,
      "score": 8.211579567659316,
      "candidate": "def find_max_index(lst):\n    max_index = -1\n    max_value = lst[0]\n    for i in range(len(lst)):\n        if lst[i] > max_value:\n            max_index = i\n            max_value = lst[i]\n    return [max_index]\n\nprint(find_max_index([1, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 56,
      "score": 8.2048573255218,
      "candidate": "def maximum_index_positions(nums):\n    # Write your code here\n    index = 0\n    max_val = nums[0]\n    for i in range(1, len(nums)):\n        if nums[i] > max_val:\n            index = i\n            max_val = nums[i]\n    return index\n\n\nprint(maximum_index_positions([1, 5, 2, 3, 4, 6, 7]))\nprint(maximum_index_positions([]))\nprint(maximum_index_positions([4, 2, 1]))\nprint(maximum_index_positions([4, 2, 1, 2, 3, 4, 5]))"
    },
    {
      "rank": 57,
      "score": 8.193565922652176,
      "candidate": "def find_max_index(list):\n    result = []\n    for i in range(len(list)):\n        if list[i] > list[i - 1]:\n            result.append(i)\n    return result\n\n\nlist = [3, 5, 6, 7, 8, 9, 11, 13, 14]\nprint(find_max_index(list))"
    },
    {
      "rank": 58,
      "score": 8.172253082181854,
      "candidate": "def find_max(arr):\n    res = []\n    max_index = 0\n    for i in range(len(arr)):\n        if arr[i] > max_index:\n            max_index = i\n        res.append(max_index)\n    return res\n\n\nif __name__ == \"__main__\":\n    print(find_max([3, 2, 4, 5, 6, 2, 1]))"
    },
    {
      "rank": 59,
      "score": 8.163300679823958,
      "candidate": "def max_pos(l):\n    max_val = max(l)\n    max_pos = []\n    for i in range(len(l)):\n        if l[i] == max_val:\n            max_pos.append(i)\n    return max_pos\n\nl = [3, 2, 4, 5]\nprint(max_pos(l))"
    },
    {
      "rank": 60,
      "score": 8.144125099485041,
      "candidate": "def max_index(arr):\n    max_value = arr[0]\n    max_index = 0\n    for i in range(len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n    return max_index\n\n\nprint(max_index([3, 2, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 61,
      "score": 8.143591138329747,
      "candidate": "def find_index(array, value):\n    max_index = 0\n    max_value = array[0]\n    for i in range(1, len(array)):\n        if array[i] > max_value:\n            max_value = array[i]\n            max_index = i\n    return max_index\n\n\ndef main():\n    print(find_index([1, 2, 3, 4, 5, 6, 7], 7))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 62,
      "score": 8.121884567141883,
      "candidate": "def find_max_index(arr):\n    return [i for i, val in enumerate(arr) if val == max(arr)]\n\n\ndef find_max_index_2(arr):\n    return [i for i, val in enumerate(arr) if val == max(arr)]\n\n\nif __name__ == \"__main__\":\n    print(find_max_index([2, 3, 5, 6, 9, 4, 7, 1]))\n    print(find_max_index_2([2, 3, 5, 6, 9, 4, 7, 1]))"
    },
    {
      "rank": 63,
      "score": 8.105983444291466,
      "candidate": "def find_max_pos(lst):\n    max_pos = []\n    for i in range(len(lst)):\n        if lst[i] > max(lst):\n            max_pos.append(i)\n    return max_pos\n\n\ndef test_find_max_pos():\n    assert find_max_pos([1, 2, 3, 4, 5]) == [0, 2]\n    assert find_max_pos([2, 1, 4, 3, 5]) == [0, 2]\n    assert find_max_pos([5, 4, 3, 2, 1]) == [0, 2]\n    assert find_max_pos([1, 2, 3, 4, 5]) == [0, 3]\n    assert find_max_pos([1, 2, 3, 4, 5, 6]) == [0, 3]\n    assert find_max_pos([1, 2, 3, 4, 5, 6, 7]) == [0, 1, 4, 5, 6, 7]\n    assert find_max_pos([1, 2, 3, 4, 5, 6, 7]) == [0, 1, 4, 5, 6, 7]"
    },
    {
      "rank": 64,
      "score": 8.08452234024709,
      "candidate": "def find_max(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] == max(arr):\n            max_index.append(i)\n    return max_index\n\n\ndef find_max_2(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] == max(arr):\n            max_index.append(i)\n    return max_index\n\n\nif __name__ == \"__main__\":\n    arr = [1, 5, 3, 4, 2, 6, 4, 2, 5]\n    print(find_max(arr))\n    print(find_max_2(arr))"
    },
    {
      "rank": 65,
      "score": 8.024835682833125,
      "candidate": "def maximum_index(array):\n    # Write your code here\n    max_index = []\n    for i in range(len(array)):\n        if array[i] > array[max(array)]:\n            max_index.append(i)\n\n    return max_index"
    },
    {
      "rank": 66,
      "score": 7.990432406683839,
      "candidate": "def find_max(arr):\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > arr[max_pos[-1]]:\n            max_pos.append(i)\n    return max_pos\n\n\nprint(find_max([1, 2, 3, 4, 5]))\nprint(find_max([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(find_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 67,
      "score": 7.8912769574414305,
      "candidate": "def find_max(arr):\n    if len(arr) == 0:\n        return []\n\n    max_val = arr[0]\n    max_index = 0\n\n    for i in range(1, len(arr)):\n        if arr[i] > max_val:\n            max_val = arr[i]\n            max_index = i\n\n    return [max_index]\n\n\nprint(find_max([3, 2, 1, 5, 4, 6]))"
    },
    {
      "rank": 68,
      "score": 7.868947655733293,
      "candidate": "def find_index(arr, max_value):\n    \"\"\"\n    :type arr: List[int]\n    :type max_value: int\n    :rtype: List[int]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    result = []\n    for i in range(len(arr)):\n        if arr[i] == max_value:\n            result.append(i)\n    return result\n\n\nif __name__ == \"__main__\":\n    assert find_index([2, 5, 9, 6, 7, 1, 3], 1) == [2, 3]\n    assert find_index([5, 6, 7, 8, 9, 1, 3], 2) == [3, 4]\n    assert find_index([1, 2, 3], 3) == [1, 2, 3]\n    assert find_index([1, 2, 3, 4, 5, 6], 6) == [0, 1, 2]\n    assert find_index([1, 2, 3, 4, 5, 6, 7, 8], 6) == [0, 1, 2, 3, 4, 5]\n    assert find_index([1, 2, 3, 4, 5, 6, 7, 8], 7) == [0, 1, 2, 3, 4, 5, 6]\n    assert find_index([1, 2, 3, 4, 5, 6, 7, 8], 8) == [0, 1, 2, 3, 4, 5, 6]\n    assert find_index([1, 2, 3, 4, 5, 6, 7, 8], 9) == [0, 1, 2, 3, 4, 5, 6, 7]\n    assert find_index([1, 2, 3, 4, 5, 6, 7, 8], 10) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n    assert find_index([1, 2, 3, 4, 5, 6, 7, 8], 11) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
    },
    {
      "rank": 69,
      "score": 7.84634113240411,
      "candidate": "def max_values_position(arr):\n    max_value = arr[0]\n    max_index = 0\n\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            max_index = i\n\n    return max_index\n\n\nprint(max_values_position([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(max_values_position([3, 1, 2, 4, 5]))\nprint(max_values_position([2, 2, 1, 2, 2, 1, 2, 1]))\nprint(max_values_position([2, 2, 1, 2, 2, 1, 2, 1, 2, 1]))\nprint(max_values_position([2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1]))"
    },
    {
      "rank": 70,
      "score": 7.834022619458933,
      "candidate": "def max_pos(arr):\n    max_index = 0\n    max_index_pos = []\n    for i in range(len(arr)):\n        if arr[i] > arr[max_index]:\n            max_index = i\n            max_index_pos.append(max_index)\n    return max_index_pos\n\n\nprint(max_pos([2, 4, 3, 1, 5, 6, 7]))"
    },
    {
      "rank": 71,
      "score": 7.780351419995229,
      "candidate": "def max_position(arr):\n    max_pos = [0 for i in range(len(arr))]\n\n    for i in range(len(arr)):\n        max_pos[i] = max(arr[i], i)\n\n    return max_pos\n\n\nif __name__ == \"__main__\":\n    print(max_position([3, 2, 5, 1, 6, 4]))"
    },
    {
      "rank": 72,
      "score": 7.738292593776799,
      "candidate": "def find_max_index(arr):\n    # Write your code here\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_index.append(i)\n    return max_index"
    },
    {
      "rank": 73,
      "score": 7.705183449260731,
      "candidate": "def find_max_index(arr):\n    max_index = -1\n    max_index_position = -1\n\n    for index, val in enumerate(arr):\n        if val > max_index:\n            max_index = val\n            max_index_position = index\n\n    return max_index_position\n\n\nprint(find_max_index([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 74,
      "score": 7.5819855281879285,
      "candidate": "def max_index(arr):\n    index_list = []\n\n    for i in range(len(arr)):\n        if arr[i] > arr[i-1]:\n            index_list.append(i)\n\n    return index_list"
    },
    {
      "rank": 75,
      "score": 7.4878043221155455,
      "candidate": "def max_index(lst):\n    if len(lst) <= 1:\n        return [0]\n    return [i for i, x in enumerate(lst) if x == max(lst)]\n\n\nif __name__ == \"__main__\":\n    print(max_index([2, 3, 4, 5, 1]))"
    },
    {
      "rank": 76,
      "score": 3.3845091416164923,
      "candidate": "def maximum_positions(arr):\n    max_index = -1\n    max_val = 0\n    for index, val in enumerate(arr):\n        if val > max_val:\n            max_val = val\n            max_index = index\n\n    return max_index\n\n\nprint(maximum_positions([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 77,
      "score": 3.2328200297790497,
      "candidate": "def find_max_pos(arr):\n    pos = []\n    arr.sort()\n    for i in range(len(arr)):\n        if arr[i] == arr[len(arr) - 1]:\n            pos.append(i)\n    return pos\n\n\nprint(find_max_pos([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(find_max_pos([4, 1, 2, 3, 5, 6, 7, 8, 9]))\nprint(find_max_pos([]))\nprint(find_max_pos([3, 2, 1, 4, 5, 6, 7, 8, 9]))\nprint(find_max_pos([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(find_max_pos([]))"
    },
    {
      "rank": 78,
      "score": 3.2288505294255185,
      "candidate": "def find_max(arr):\n    max_index = [-1] * len(arr)\n    for i in range(len(arr)):\n        if arr[i] > max_index[i]:\n            max_index[i] = arr[i]\n\n    return max_index\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(find_max(arr))"
    },
    {
      "rank": 79,
      "score": 3.1846166449988527,
      "candidate": "def find_max_pos(nums):\n    max_pos = []\n\n    for i in range(len(nums)):\n        if nums[i] == max(nums[i+1:]):\n            max_pos.append(i+1)\n\n    return max_pos\n\n\nnums = [2, 3, 5, 8, 10, 4]\nprint(find_max_pos(nums))"
    },
    {
      "rank": 80,
      "score": 3.152919072210217,
      "candidate": "def max_value_positions(arr):\n    max_value = arr[0]\n    max_index = 0\n\n    for index, val in enumerate(arr):\n        if val > max_value:\n            max_value = val\n            max_index = index\n\n    return max_index\n\n\nif __name__ == \"__main__\":\n    assert max_value_positions([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 2\n    assert max_value_positions([]) == 0\n    assert max_value_positions([0, 0, 0, 0, 0, 0, 0, 0]) == 0\n    assert max_value_positions([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) == 0\n    assert max_value_positions([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == 5"
    },
    {
      "rank": 81,
      "score": 3.1356400108964912,
      "candidate": "def maximum_index_positions(arr):\n    max_pos = -1\n    max_val = -1\n\n    for i, x in enumerate(arr):\n        if x > max_val:\n            max_val = x\n            max_pos = i\n\n    return max_pos\n\n\nprint(maximum_index_positions([5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 82,
      "score": 3.089278142877937,
      "candidate": "def max_indices(arr):\n    max_index = -1\n    max_value = -1\n    for i in range(len(arr)):\n        if arr[i] > max_value:\n            max_index = i\n            max_value = arr[i]\n    return max_index\n\narr = [2, 3, 4, 1, 5, 6, 7]\nprint(max_indices(arr))"
    },
    {
      "rank": 83,
      "score": 3.0604905678915086,
      "candidate": "def maximum_positions(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > arr[i - 1]:\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions2(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions3(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions4(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions5(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions6(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions7(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\ndef maximum_positions8(arr):\n    # Write your code here.\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max("
    },
    {
      "rank": 84,
      "score": 3.052215898751189,
      "candidate": "def max_index_positions(nums):\n    # Write your code here\n    return [i for i in range(len(nums)) if nums[i] == max(nums)]\n\nprint(max_index_positions([1, 2, 3, 4, 5]))\nprint(max_index_positions([5, 2, 3, 4, 1]))\nprint(max_index_positions([2, 4, 5, 6, 1]))"
    },
    {
      "rank": 85,
      "score": 3.0428420702974925,
      "candidate": "def max_pos(arr):\n    max_index = -1\n    max_index_list = []\n\n    for i, val in enumerate(arr):\n        if val > max_index:\n            max_index = val\n            max_index_list.append(i)\n\n    return max_index_list\n\n\nprint(max_pos([1, 3, 2, 4, 5, 2, 7, 9]))"
    },
    {
      "rank": 86,
      "score": 3.0277306474274663,
      "candidate": "def find_max_position(lst):\n    # write your code here\n    max_val = lst[0]\n    max_index = 0\n    for i in range(len(lst)):\n        if lst[i] > max_val:\n            max_val = lst[i]\n            max_index = i\n\n    return max_index\n\n\nprint(find_max_position([3, 2, 5, 1, 2, 6, 4]))\nprint(find_max_position([1, 2, 3, 4, 5, 6]))\nprint(find_max_position([4, 5, 6, 7, 8, 9, 10]))\nprint(find_max_position([5, 6, 7, 8, 9, 10]))\nprint(find_max_position([]))"
    },
    {
      "rank": 87,
      "score": 3.016882051171981,
      "candidate": "def find_max(arr):\n    max_index = -1\n    max_val = -1\n\n    for i in range(len(arr)):\n        if arr[i] > max_val:\n            max_val = arr[i]\n            max_index = i\n\n    return max_index\n\n\nif __name__ == '__main__':\n    arr = [1, 3, 6, 10, 7, 11, 12, 13, 15]\n    print(find_max(arr))\n\n    arr = [2, 5, 9, 10, 7, 8, 11]\n    print(find_max(arr))\n\n    arr = [2, 3, 4, 5, 6, 7]\n    print(find_max(arr))"
    },
    {
      "rank": 88,
      "score": 2.9966256938155165,
      "candidate": "def maximum_positions(lst):\n    # Write your code here\n    return [i for i, x in enumerate(lst) if x == max(lst)]\n\nprint(maximum_positions([2,3,5,4,6,7,8,9]))"
    },
    {
      "rank": 89,
      "score": 2.9654339247072037,
      "candidate": "def max_position(arr):\n    index_list = []\n    for i in range(len(arr)):\n        if arr[i] > arr[index_list[-1]]:\n            index_list.append(i)\n    return index_list\n\n\nif __name__ == \"__main__\":\n    print(max_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 90,
      "score": 2.941465760762705,
      "candidate": "def find_max_values(lst):\n    # Write your code here\n    lst.sort()\n    result = []\n    for i in range(len(lst)):\n        if lst[i] == lst[i-1]:\n            continue\n        else:\n            result.append(i)\n    return result\n\n\n\nprint(find_max_values([4, 1, 2, 3, 6, 7, 8, 9]))\nprint(find_max_values([4, 2, 1, 6, 7, 8, 9]))\nprint(find_max_values([]))\nprint(find_max_values([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    },
    {
      "rank": 91,
      "score": 2.882631403516262,
      "candidate": "def find_max(arr):\n    max_pos = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_pos.append(i)\n    return max_pos\n\n\nprint(find_max([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(find_max([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))"
    },
    {
      "rank": 92,
      "score": 2.870432445431588,
      "candidate": "def find_max(arr):\n    index = []\n    max_value = arr[0]\n    for i in range(1, len(arr)):\n        if arr[i] > max_value:\n            max_value = arr[i]\n            index.append(i)\n    return index\n\n\nif __name__ == \"__main__\":\n    arr = [2, 7, 4, 5, 6, 8, 9]\n    print(find_max(arr))"
    },
    {
      "rank": 93,
      "score": 2.797876599276703,
      "candidate": "def max_position(numbers):\n    max_position = []\n    for i in range(len(numbers)):\n        if numbers[i] > numbers[max_position[-1]]:\n            max_position.append(i)\n    return max_position\n\n\nif __name__ == \"__main__\":\n    assert max_position([1, 2, 3, 4, 5]) == [0, 1, 2]\n    assert max_position([1, 2, 3, 4, 5, 6]) == [0, 1, 2, 3, 4, 5, 6]\n    assert max_position([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    assert max_position([]) == []"
    },
    {
      "rank": 94,
      "score": 2.746792219916394,
      "candidate": "def find_max_index(arr):\n    # Fill this in.\n    max_index = [0] * len(arr)\n    for i in range(len(arr)):\n        if arr[i] > max_index[i]:\n            max_index[i] = arr[i]\n    return max_index\n\nprint(find_max_index([1,3,5,7,8,9]))"
    },
    {
      "rank": 95,
      "score": 2.735572267761025,
      "candidate": "def find_max_index(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr[max_index]):\n            max_index.append(i)\n    return max_index\n\n\nprint(find_max_index([1, 2, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 96,
      "score": 2.643812953446636,
      "candidate": "def find_max_index(arr):\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [0]\n\n    maximum = arr[0]\n    index = [0]\n    for i in range(1, len(arr)):\n        if arr[i] > maximum:\n            maximum = arr[i]\n            index.append(i)\n\n    return index\n\n\nif __name__ == \"__main__\":\n    assert find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [0, 2, 4]\n    assert find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n    assert find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]) == [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]) == [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,"
    },
    {
      "rank": 97,
      "score": 2.5592399611593164,
      "candidate": "def find_max_pos(arr):\n    max_pos = [-1, -1]\n\n    for i in range(len(arr)):\n        if arr[i] > max_pos[1]:\n            max_pos = [i, i]\n\n    return max_pos\n\n\nprint(find_max_pos([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 98,
      "score": 2.5100824690300563,
      "candidate": "def max_index(arr):\n    max_index = []\n    for i in range(len(arr)):\n        if arr[i] > max(arr):\n            max_index = [i]\n    return max_index\n\n\nprint(max_index([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 99,
      "score": 2.503107771349777,
      "candidate": "def find_max_index(arr):\n    max_index = 0\n    for index in range(len(arr)):\n        if arr[index] > arr[max_index]:\n            max_index = index\n\n    return max_index\n\n\nprint(find_max_index([5, 8, 10, 9, 1, 3, 2, 4, 7]))"
    },
    {
      "rank": 100,
      "score": 2.345063723977564,
      "candidate": "def find_max_index(arr):\n    max_index = 0\n    max_value = arr[0]\n\n    for index, value in enumerate(arr):\n        if value > max_value:\n            max_value = value\n            max_index = index\n\n    return max_index\n\nprint(find_max_index([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
    }
  ]
}