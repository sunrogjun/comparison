{
  "timestamp": "2025-09-14T15:00:07.182826",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 345,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def get_third_angle(angle1, angle2):\n    if angle1 > angle2:\n        angle1, angle2 = angle2, angle1\n\n    a1 = (angle1 * 180) / 360\n    a2 = (angle2 * 180) / 360\n\n    return a2 - a1\n\n\nprint(get_third_angle(90, 90))\nprint(get_third_angle(180, 180))\nprint(get_third_angle(180, 90))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def third_angle(a, b, c):\n    # Your code here\n    return (a + b + c) / 3\n\n\nprint(third_angle(2, 4, 6))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "import math\n\ndef find_third_angle(a, b):\n    return math.acos((a ** 2 + b ** 2) / (2 * (a + b)))\n\nif __name__ == '__main__':\n    print(find_third_angle(1, 1))\n    print(find_third_angle(2, 2))\n    print(find_third_angle(3, 3))\n    print(find_third_angle(4, 4))\n    print(find_third_angle(5, 5))\n    print(find_third_angle(6, 6))\n    print(find_third_angle(7, 7))\n    print(find_third_angle(8, 8))\n    print(find_third_angle(9, 9))\n    print(find_third_angle(10, 10))\n    print(find_third_angle(11, 11))\n    print(find_third_angle(12, 12))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "import math\n\n\ndef third_angle(a, b, c):\n    return math.degrees(math.atan2(a - b, c - b))\n\n\nprint(third_angle(1, 2, 3))\nprint(third_angle(1, 2, 2))\nprint(third_angle(2, 2, 1))\nprint(third_angle(2, 2, 3))\nprint(third_angle(2, 2, 4))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return a * b / 3\n\nprint(third_angle(3, 6))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def thirdAngle(a,b,c):\n    # Find the third angle\n    s=((a*b)+(b*c)+(c*a))/2\n    # Return the third angle\n    return s\n\nprint(thirdAngle(0,0,0))\nprint(thirdAngle(0,0,180))\nprint(thirdAngle(90,90,90))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    a_rad = float(a)\n    b_rad = float(b)\n    return a_rad * b_rad / 2\n\n\nif __name__ == '__main__':\n    print(third_angle(8, 6))\n    print(third_angle(6, 8))\n    print(third_angle(9, 8))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    a = float(a)\n    b = float(b)\n    return (a + b) / 2\n\n\nprint(third_angle(1, 2))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    if a == 0 or b == 0:\n        raise ValueError(\"Both angles should be greater than zero.\")\n    else:\n        return (2 * (a + b)) / 3\n\nif __name__ == \"__main__\":\n    print(third_angle(0, 0))\n    print(third_angle(0, 10))\n    print(third_angle(10, 0))\n    print(third_angle(10, 10))\n    print(third_angle(10, 0))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def third_angle(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_angle(1, 2, 3))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "import math\n\n\ndef get_third_angle(a, b):\n    return math.degrees(math.atan2(b, a))\n\n\nif __name__ == '__main__':\n    print(get_third_angle(1, 2))\n    print(get_third_angle(1, 4))\n    print(get_third_angle(2, 3))\n    print(get_third_angle(3, 4))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\n\ndef test():\n    assert third_angle(0, 0) == 0\n    assert third_angle(0, 90) == 90\n    assert third_angle(90, 90) == 90\n    assert third_angle(90, 0) == 0\n    assert third_angle(90, -90) == 180\n\n\nif __name__ == '__main__':\n    test()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def get_angle(a,b):\n    return (a*a + b*b) / 2\n\n\n\nprint(get_angle(4,7))\nprint(get_angle(7,4))\nprint(get_angle(2,5))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def thirdAngle(a,b):\n    return (a+b)/2\n\nprint(thirdAngle(10,20))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "import math\n\ndef three_angles(a, b, c):\n    #calculate the third angle\n    s = math.sqrt(a**2 + b**2 + c**2)\n    if s < 0:\n        print(\"the third angle is not possible\")\n    elif s == 0:\n        print(\"the third angle is 0\")\n    elif s == math.pi/2:\n        print(\"the third angle is 180\")\n    else:\n        print(s)\n\nthree_angles(0, 0, 0)"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def third_angle(a, b, c):\n    # Calculate the third angle\n    return (((((b**2) + (c**2))**(1/2))**(1/3))/(2*a*b*c))**(1/3)\n\n\nprint(third_angle(2, 4, 6))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    # Your code here\n    return a + b + 360"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    a = float(a)\n    b = float(b)\n    return (((a * a) + (b * b)) / 2)\n\n\nprint(third_angle(0, 0))\nprint(third_angle(0, 90))\nprint(third_angle(90, 0))\nprint(third_angle(90, 90))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    c = (a + b) / 2\n    if c < 0:\n        print(\"The angle of a triangle should be greater than 0\")\n    elif c > 360:\n        print(\"The angle of a triangle should be less than 360\")\n    elif c == 0:\n        print(\"The angle of a triangle should be zero\")\n    else:\n        print(\"The third angle of a triangle is: \", c)\n\n\nthird_angle(0, 0)\nthird_angle(90, 90)\nthird_angle(180, 180)"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def third_angle(a, b, c):\n    a = a % 360\n    b = b % 360\n    c = c % 360\n    return (a + b + c) % 360"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def thirdAngle(a, b):\n    angle = (a + b) / 2\n    return angle\n\n\nprint(thirdAngle(1, 2))\nprint(thirdAngle(2, 3))\nprint(thirdAngle(2, 3))\nprint(thirdAngle(3, 1))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\n\nprint(third_angle(0, 0))\nprint(third_angle(0, 90))\nprint(third_angle(90, 0))\nprint(third_angle(90, 90))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    c = (a + b) / 2\n    return c\n\nprint(third_angle(2, 3))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def triangle_third_angle(a, b):\n    return (a + b) / 2\n\n\nprint(triangle_third_angle(3, 6))"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def find_third_angle(a,b,c):\n    return (a + b + c)/3\n\nprint(find_third_angle(0,0,0))\nprint(find_third_angle(0,0,180))\nprint(find_third_angle(180,0,0))\nprint(find_third_angle(180,0,180))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return (((a * b) + (b * a)) / 2) % 360\n\nprint(third_angle(0, 0))\nprint(third_angle(0, 90))\nprint(third_angle(90, 0))\nprint(third_angle(90, 90))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\nprint(third_angle(2, 2))\nprint(third_angle(3, 2))\nprint(third_angle(4, 2))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def thirdAngle(a, b):\n    return (a + b) / 2\n\nprint(thirdAngle(3, 5))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    a = a * 180 / 3.14159\n    b = b * 180 / 3.14159\n    third_angle = (a + b)\n    return third_angle\n\nprint(third_angle(45, 30))"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return ((a**2 + b**2)**0.5)**0.5\n\n\nprint(third_angle(2, 3))\nprint(third_angle(5, 3))\nprint(third_angle(2, 6))"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def third_angle(a, b):\n    return (a + b + 180) % 360 - 180\n\n\nprint(third_angle(40, 60))\nprint(third_angle(40, 80))"
    },
    {
      "rank": 32,
      "score": 9.0,
      "candidate": "def thirdAngle(a, b):\n    return (a + b) / 2\n\nprint(thirdAngle(5, 8))\nprint(thirdAngle(2, 7))\nprint(thirdAngle(6, 8))"
    },
    {
      "rank": 33,
      "score": 9.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2"
    },
    {
      "rank": 34,
      "score": 9.0,
      "candidate": "def get_third_angle(a, b):\n    if a < b:\n        theta = (a + b) / 2\n        return theta\n    else:\n        theta = (a - b) / 2\n        return theta\n\n\nif __name__ == \"__main__\":\n    print(get_third_angle(5, 8))\n    print(get_third_angle(3, 5))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "from math import atan2\n\n\ndef third_angle(a, b):\n    return atan2(b, a)\n\n\nprint(third_angle(3.14, 4.2))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "from math import atan2\n\n\ndef third_angle(a, b):\n    return atan2(b, a)\n\n\nprint(third_angle(0, 0))\nprint(third_angle(1, 0))\nprint(third_angle(0, 2))\nprint(third_angle(2, 0))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def third_angle(a,b):\n    return (a * b) / 2\n\nprint(third_angle(2,3))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_angle(1, 2, 3))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    angle_1 = (a + b + c) / 2\n    angle_2 = (a + c + b) / 2\n    angle_3 = (a + b + c) / 2\n    return angle_1, angle_2, angle_3\n\nprint(third_angle(0, 0, 0))\nprint(third_angle(0, 0, 90))\nprint(third_angle(90, 0, 0))\nprint(third_angle(90, 90, 0))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def find_third_angle(a,b):\n    return a*b/2\n\nprint(find_third_angle(0,0))\nprint(find_third_angle(0,90))\nprint(find_third_angle(90,0))\nprint(find_third_angle(90,90))\nprint(find_third_angle(90,-90))\nprint(find_third_angle(90,90))\nprint(find_third_angle(0,-90))\nprint(find_third_angle(0,-90,90))\nprint(find_third_angle(0,-90,-90))\nprint(find_third_angle(0,-90,-90,90))\nprint(find_third_angle(90,-90,-90,90))\nprint(find_third_angle(90,-90,-90,-90))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    a = float(a)\n    b = float(b)\n    return (a + b) / 2.0\n\nif __name__ == \"__main__\":\n    print(third_angle(2, 4))\n    print(third_angle(4, 2))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def third_angle(a,b):\n    return (a*b) / 2\n\nprint(third_angle(1,2))\nprint(third_angle(2,1))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    c = (a + b) / 2\n    return c\n\nif __name__ == '__main__':\n    a = float(input(\"Enter first angle: \"))\n    b = float(input(\"Enter second angle: \"))\n    print(\"Third angle of a triangle using two angles: \", third_angle(a, b))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def find_third_angle(a,b,c):\n    a = float(a)\n    b = float(b)\n    c = float(c)\n    print(a,b,c)\n    if (a > b and a > c):\n        return a\n    if (b > a and b > c):\n        return b\n    if (c > a and c > b):\n        return c\n    else:\n        return 0"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return math.atan2(b, a)\n\n\ndef main():\n    a = float(input(\"Enter the first angle:\"))\n    b = float(input(\"Enter the second angle:\"))\n\n    print(f\"The third angle of a triangle using two angles is: {third_angle(a, b)}\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    # Your code here\n    if a > b:\n        a, b = b, a\n    return abs(a - b)\n\n\nprint(third_angle(3, 4))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def find_third_angle(a, b):\n    return (a + b) / 2"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return (math.degrees(math.atan2(a, b)) + 90) % 360\n\nprint(third_angle(0, 0))\nprint(third_angle(0, 90))\nprint(third_angle(90, 0))\nprint(third_angle(90, 90))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def third_angle(a,b):\n    return (a*a+b*b)/2\n\nprint(third_angle(3,4))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    theta1 = math.radians(a)\n    theta2 = math.radians(b)\n    theta3 = math.radians(3 * (theta1 + theta2))\n    print(theta3)\n\nthird_angle(30, 60)"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\n\nif __name__ == \"__main__\":\n    assert third_angle(1, 2) == 1.5\n    assert third_angle(2, 1) == 0.5"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "from math import pi\n\n\ndef third_angle(a, b):\n    return (a * b) / (2 * pi)\n\n\nprint(third_angle(1, 1))\nprint(third_angle(1, 2))\nprint(third_angle(2, 1))\nprint(third_angle(2, 2))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def find_third_angle(a, b):\n    return (a + b) / 2\n\n\nprint(find_third_angle(1, 1))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def get_third_angle(a, b):\n    return (a + b) / 2\n\na = float(input(\"Enter first angle: \"))\nb = float(input(\"Enter second angle: \"))\n\nprint(get_third_angle(a, b))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return math.degrees(math.atan2(a, b))\n\n\nprint(third_angle(2, 3))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return (math.degrees(math.atan2(a, b)))\n\nprint(third_angle(1, 2))\nprint(third_angle(1, 0))\nprint(third_angle(2, 0))\nprint(third_angle(0, 2))\nprint(third_angle(0, 1))\nprint(third_angle(0, -2))\nprint(third_angle(2, -2))\nprint(third_angle(2, 1))\nprint(third_angle(1, -2))\nprint(third_angle(-2, 2))\nprint(third_angle(-2, -1))\nprint(third_angle(-2, 0))\nprint(third_angle(-2, 2))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "from math import pi, radians\n\n\ndef third_angle(a, b):\n    return radians(3 * (a + b))\n\n\nprint(third_angle(1, 1))\nprint(third_angle(1, 2))\nprint(third_angle(2, 1))\nprint(third_angle(2, 2))\nprint(third_angle(3, 1))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\nprint(third_angle(5, 3))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    return a + b + c\n\nprint(third_angle(2, 3, 4))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "from math import atan2\n\n\ndef third_angle(a, b):\n    return atan2(b, a)\n\n\nprint(third_angle(45, 45))\nprint(third_angle(45, -45))\nprint(third_angle(45, 90))\nprint(third_angle(45, -90))\nprint(third_angle(45, -45))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "import math\n\n\ndef third_angle(a, b):\n    \"\"\"\n    :param a: float\n    :param b: float\n    :return: float\n    \"\"\"\n    return math.degrees(math.atan2(b, a))\n\n\nprint(third_angle(1, 2))\nprint(third_angle(2, 1))\nprint(third_angle(1, 3))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def find_third_angle(a, b):\n    return ((a + b) / 2)\n\nprint(find_third_angle(2, 2))\nprint(find_third_angle(2, 3))\nprint(find_third_angle(3, 2))\nprint(find_third_angle(3, 3))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def third_angle(a,b):\n    return (a + b) / 2"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return math.acos(math.sin(b)/math.sin(a))\n\n\nprint(third_angle(1, 2))\nprint(third_angle(2, 1))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a * b) / 2"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return a + b"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "from math import atan2\n\ndef third_angle(a, b):\n    c = atan2(b, a)\n    return c\n\nprint(third_angle(1, 0))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def third_angle(a,b):\n\treturn (a + b + 90) % 360 - 90\n\nprint(third_angle(10,20))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    # Your code here\n    return (a + b + c) / 3\n\nprint(third_angle(1, 1, 1))\nprint(third_angle(1, 2, 1))\nprint(third_angle(2, 2, 2))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    if a > b:\n        return a - b\n    else:\n        return b - a\n\n\nprint(third_angle(2, 4))\nprint(third_angle(4, 2))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "import math\n\n\ndef third_angle(a, b):\n    angle1 = math.radians(a)\n    angle2 = math.radians(b)\n    if angle1 < angle2:\n        return math.degrees(math.atan2(angle2 - angle1, angle1 - angle2))\n    else:\n        return math.degrees(math.atan2(angle1 - angle2, angle1 - angle2))\n\n\nprint(third_angle(1, 1))\nprint(third_angle(2, 2))\nprint(third_angle(1, 2))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\n\nprint(third_angle(0, 0))\nprint(third_angle(0, 90))\nprint(third_angle(90, 0))\nprint(third_angle(90, 90))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    a = float(a)\n    b = float(b)\n    return (a + b) / 2\n\n\nprint(third_angle(12, 45))\nprint(third_angle(15, 45))\nprint(third_angle(20, 30))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) % 360\n\nprint(third_angle(60, 60))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def find_third_angle(a, b):\n    if a == b:\n        return 0\n    elif a > b:\n        a, b = b, a\n    return (a * b) / 2\n\n\nprint(find_third_angle(1, 2))\nprint(find_third_angle(2, 3))\nprint(find_third_angle(3, 4))\nprint(find_third_angle(4, 3))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "import math\n\ndef find_third_angle(a, b):\n    a = math.radians(a)\n    b = math.radians(b)\n\n    return (a + b) / 2\n\nprint(find_third_angle(0, 0))\nprint(find_third_angle(1, 0))\nprint(find_third_angle(0, 1))\nprint(find_third_angle(1, 1))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def find_third_angle(a, b):\n    return a + b + 2*b*b\n\n\nprint(find_third_angle(0, 0))\nprint(find_third_angle(0, 90))\nprint(find_third_angle(90, 90))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    angle = (a + b) / 2\n    return angle\n\nprint(third_angle(4, 2))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    # your code here\n    if a == b == c:\n        return 0\n    elif a == b or a == c or b == c:\n        return 90\n    elif a > b > c:\n        return 90 - (90 - a)\n    elif b > a > c:\n        return 90 - (90 - b)\n    elif c > a > b:\n        return 90 - (90 - c)\n\n\nprint(third_angle(1, 1, 1))\nprint(third_angle(1, 2, 1))\nprint(third_angle(2, 2, 2))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) % 360\n\nprint(third_angle(90, 0))\nprint(third_angle(90, 90))\nprint(third_angle(0, 0))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return math.degrees(math.atan2(b, a))\n\nprint(third_angle(45, 30))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def third_angle(a, b):\n    return (a * b) / 2\n\nprint(third_angle(3, 6))\nprint(third_angle(6, 3))\nprint(third_angle(2, 1))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def third_angle(a,b,c):\n    theta_a = (a * a) + (b * b) + (c * c)\n    theta_b = (a * b) + (b * c) + (c * a)\n    theta_c = (a * c) + (b * a) + (c * b)\n    return math.degrees(math.atan2(theta_b,theta_a))\n\nprint(third_angle(0,0,0))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def third_angle(a,b):\n    \"\"\"\n    a: float\n    b: float\n    :return: float\n    \"\"\"\n    if a > b:\n        a,b = b,a\n    return (2*a + b) % 360\n\nprint(third_angle(2,3))\nprint(third_angle(4,5))\nprint(third_angle(5,2))\nprint(third_angle(2,4))\nprint(third_angle(3,3))\nprint(third_angle(3,2))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "import math\n\ndef third_angle(a, b, c):\n    return math.atan2(b - a, c - a)\n\nprint(third_angle(0, 0, 0))\nprint(third_angle(0, math.pi, 0))\nprint(third_angle(math.pi, 0, 0))\nprint(third_angle(0, math.pi, math.pi))\nprint(third_angle(math.pi, 0, math.pi))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    if a < b and a < c:\n        if b < c:\n            return a + b + c\n        else:\n            return b + c + a\n    else:\n        return a + b + c\n\nprint(third_angle(1, 2, 3))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def third_angle(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_angle(12, 13, 14))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def find_third_angle(a, b):\n    a = float(a)\n    b = float(b)\n    return (a + b + 2) * (a + b + 3) / 4"
    },
    {
      "rank": 90,
      "score": 7.0,
      "candidate": "def find_third_angle(a, b, c):\n    \"\"\"\n    :type a: float\n    :type b: float\n    :type c: float\n    :rtype: float\n    \"\"\"\n    # Your code here\n    return (a + b + c) / 3\n\n\nif __name__ == \"__main__\":\n    print(find_third_angle(3, 4, 5))"
    },
    {
      "rank": 91,
      "score": 7.0,
      "candidate": "import math\n\n\ndef third_angle(a, b):\n    return math.degrees(math.atan2(b, a))\n\n\nprint(third_angle(0, 0))\nprint(third_angle(0, 90))\nprint(third_angle(90, 0))"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def find_third_angle(a, b):\n    # Your code here\n    if a == b:\n        return 0\n    if a < b:\n        return 90 - (90 - a) % 360\n    else:\n        return 90 + (90 + b) % 360\n\n\nprint(find_third_angle(45, 90))\nprint(find_third_angle(45, -90))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) / 2\n\n\nprint(third_angle(45, 45))\nprint(third_angle(45, 30))\nprint(third_angle(45, 30))\nprint(third_angle(45, 40))\nprint(third_angle(45, 40))\nprint(third_angle(45, 45))\nprint(third_angle(45, 30))\nprint(third_angle(45, 40))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def get_third_angle(a, b):\n  return (a + b) * 0.5\n\n\nif __name__ == \"__main__\":\n  print(get_third_angle(1, 1))\n  print(get_third_angle(1, 2))\n  print(get_third_angle(2, 1))\n  print(get_third_angle(2, 2))\n  print(get_third_angle(3, 1))\n  print(get_third_angle(3, 2))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "import math\n\ndef third_angle(a, b):\n    return (math.degrees(math.atan2(b, a)) + 180) % 360\n\nif __name__ == \"__main__\":\n    print(third_angle(0, 0))\n    print(third_angle(0, 90))\n    print(third_angle(90, 0))\n    print(third_angle(90, 90))\n    print(third_angle(90, 180))\n    print(third_angle(180, 90))\n    print(third_angle(180, 180))\n    print(third_angle(180, 270))\n    print(third_angle(270, 90))\n    print(third_angle(270, 180))\n    print(third_angle(270, 270))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def third_angle(a, b):\n    # Your code here\n    return (a + b) / 2\n\nprint(third_angle(2, 3))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def third_angle(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    return (a + b) / 2\n\n\nprint(third_angle(1, 2))\nprint(third_angle(2, 1))\nprint(third_angle(1, 0))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def third_angle(a, b):\n    \"\"\"\n    :type a: float\n    :type b: float\n    :rtype: float\n    \"\"\"\n    return (a + b) * 0.5\n\n\nif __name__ == \"__main__\":\n    print(third_angle(0.5, 0.5))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def third_angle(a, b, c):\n    # Your code here\n    return (a + b + c) / 3\n\n\nprint(third_angle(0, 0, 0))\nprint(third_angle(1, 0, 0))\nprint(third_angle(0, 1, 0))\nprint(third_angle(1, 1, 0))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def third_angle(a, b):\n    return (a + b) % 360\n\n\nprint(third_angle(45, 90))"
    }
  ]
}