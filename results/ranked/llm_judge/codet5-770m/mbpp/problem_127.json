{
  "timestamp": "2025-09-14T13:24:00.299150",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 127,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def check(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return check(n // 2)\n    return False\n\nprint(check(3))\nprint(check(5))\nprint(check(7))\nprint(check(11))\nprint(check(13))\nprint(check(16))\nprint(check(19))\nprint(check(23))\nprint(check(27))\nprint(check(31))\nprint(check(37))\nprint(check(43))\nprint(check(47))\nprint(check(49))\nprint(check(55))\nprint(check(61))\nprint(check(67))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))\nprint(check(71))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def check(n):\n    # If the number is not divisible by 2, it can not be represented\n    if n % 2 == 0:\n        return False\n    # If the number is divisible by 2, it can be represented as sum of non-zero powers\n    else:\n        return sum(i for i in range(2, n+1) if n % i == 0)\n\n\nif __name__ == \"__main__\":\n    print(check(10))\n    print(check(11))\n    print(check(12))\n    print(check(13))\n    print(check(14))\n    print(check(15))\n    print(check(16))\n    print(check(17))\n    print(check(18))\n    print(check(19))\n    print(check(20))\n    print(check(21))\n    print(check(22))\n    print(check(23))\n    print(check(24))\n    print(check(25))\n    print(check(26))\n    print(check(27))\n    print(check(28))\n    print(check(29))\n    print(check(30))\n    print(check(31))\n    print(check(32))\n    print(check(33))\n    print(check(34))\n    print(check(35))\n    print(check(36))\n    print(check(37))\n    print(check(38))\n    print(check(39))\n    print(check(40))\n    print(check(41))\n    print(check(42))\n    print(check(43))\n    print(check(44))\n    print(check(45))\n    print(check(46))\n    print(check(47))\n    print(check(48))\n    print(check(49))\n    print(check(50))\n    print(check(51))\n    print(check(52))\n    print(check(53))\n    print(check(54))\n    print(check(55))\n    print(check(56))\n    print(check(57))\n    print(check(58))\n    print(check(59))\n    print(check(60))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def sum_powers_2(num):\n    return sum(int(i) for i in str(num))\n\nprint(sum_powers_2(123456789))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def can_be_sum_of_non_zero_powers_of_2(num):\n    if num==0:\n        return False\n    if num==1:\n        return True\n    for i in range(2,num+1):\n        if num%i==0:\n            return False\n    return True\n\n\n\nprint(can_be_sum_of_non_zero_powers_of_2(4))\nprint(can_be_sum_of_non_zero_powers_of_2(8))\nprint(can_be_sum_of_non_zero_powers_of_2(11))\nprint(can_be_sum_of_non_zero_powers_of_2(12))\nprint(can_be_sum_of_non_zero_powers_of_2(13))\nprint(can_be_sum_of_non_zero_powers_of_2(15))\nprint(can_be_sum_of_non_zero_powers_of_2(16))\nprint(can_be_sum_of_non_zero_powers_of_2(17))\nprint(can_be_sum_of_non_zero_powers_of_2(18))\nprint(can_be_sum_of_non_zero_powers_of_2(19))\nprint(can_be_sum_of_non_zero_powers_of_2(20))\nprint(can_be_sum_of_non_zero_powers_of_2(21))\nprint(can_be_sum_of_non_zero_powers_of_2(22))\nprint(can_be_sum_of_non_zero_powers_of_2(23))\nprint(can_be_sum_of_non_zero_powers_of_2(24))\nprint(can_be_sum_of_non_zero_powers_of_2(25))\nprint(can_be_sum_of_non_zero_powers_of_2(26))\nprint(can_be_sum_of_non_zero_powers_of_2(27))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def is_sum_of_two_powers(n):\n    n = str(n)\n    if len(n) == 0:\n        return False\n    else:\n        return sum(int(i) for i in n if int(i)!= 0) == 2\n\nprint(is_sum_of_two_powers(0))\nprint(is_sum_of_two_powers(1))\nprint(is_sum_of_two_powers(2))\nprint(is_sum_of_two_powers(3))\nprint(is_sum_of_two_powers(4))\nprint(is_sum_of_two_powers(5))\nprint(is_sum_of_two_powers(6))\nprint(is_sum_of_two_powers(7))\nprint(is_sum_of_two_powers(8))\nprint(is_sum_of_two_powers(9))\nprint(is_sum_of_two_powers(10))\nprint(is_sum_of_two_powers(11))\nprint(is_sum_of_two_powers(12))\nprint(is_sum_of_two_powers(13))\nprint(is_sum_of_two_powers(14))\nprint(is_sum_of_two_powers(15))\nprint(is_sum_of_two_powers(16))\nprint(is_sum_of_two_powers(17))\nprint(is_sum_of_two_powers(18))\nprint(is_sum_of_two_powers(19))\nprint(is_sum_of_two_powers(20))\nprint(is_sum_of_two_powers(21))\nprint(is_sum_of_two_powers(22))\nprint(is_sum_of_two_powers(23))\nprint(is_sum_of_two_powers(24))\nprint(is_sum_of_two_powers(25))\nprint(is_sum_of_two_powers(26))\nprint(is_sum_of_two_powers"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def can_be_sum_of_non_zero_powers(n):\n    return n > 0 and (n & (n - 1) == 0)\n\ndef main():\n    print(can_be_sum_of_non_zero_powers(5))\n    print(can_be_sum_of_non_zero_powers(11))\n    print(can_be_sum_of_non_zero_powers(21))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 7,
      "score": 9.226766272351448,
      "candidate": "def sum_of_powers(num):\n    sum = 0\n    while num > 0:\n        if num % 2 == 0:\n            sum += num\n        num = num // 2\n    return sum\n\nif __name__ == \"__main__\":\n    print(sum_of_powers(4))"
    },
    {
      "rank": 8,
      "score": 9.21346272767743,
      "candidate": "def sum_of_powers(n):\n    sum_of_powers = 0\n    while n!= 0:\n        sum_of_powers = sum_of_powers + n & 1\n        n = n >> 1\n    return sum_of_powers\n\nprint(sum_of_powers(5))"
    },
    {
      "rank": 9,
      "score": 9.205959372648458,
      "candidate": "def check(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    for i in range(3, int(n**0.5)+1, 2):\n        if n%i == 0:\n            return False\n    return True\n\n\nn = int(input(\"Enter a number: \"))\nprint(check(n))"
    },
    {
      "rank": 10,
      "score": 9.177268828905222,
      "candidate": "def sum_powers(n):\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return sum_powers(n // 2) or sum_powers(n + 1)\n\n\nif __name__ == \"__main__\":\n    print(sum_powers(5))"
    },
    {
      "rank": 11,
      "score": 8.973005557553902,
      "candidate": "def check_powers(num):\n    if num == 1:\n        return True\n    if num == 0:\n        return False\n    for i in range(2, num+1):\n        if num % i == 0:\n            return False\n    return True\n\n\nprint(check_powers(5))\nprint(check_powers(3))\nprint(check_powers(4))\nprint(check_powers(6))\nprint(check_powers(7))"
    },
    {
      "rank": 12,
      "score": 8.95994420569242,
      "candidate": "def check_pow(num):\n    sum = 0\n    for i in range(1,num+1):\n        if (i%2==0):\n            sum += i\n    return sum == num\n\nprint(check_pow(3))\nprint(check_pow(4))\nprint(check_pow(5))"
    },
    {
      "rank": 13,
      "score": 8.92876693971089,
      "candidate": "def sum_powers_of_2(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    return sum(map(lambda x: x**2, range(1, n + 1)))\n\nprint(sum_powers_of_2(1))\nprint(sum_powers_of_2(2))\nprint(sum_powers_of_2(3))\nprint(sum_powers_of_2(4))\nprint(sum_powers_of_2(5))"
    },
    {
      "rank": 14,
      "score": 8.910084504002544,
      "candidate": "def check(num):\n    if num == 0:\n        return False\n    if num == 1:\n        return True\n    return (check(num // 2) or check(num // 2 - 1))\n\n\ndef check_sum(num):\n    return (check(num) and num!= 0)\n\n\nif __name__ == \"__main__\":\n    print(check_sum(6))\n    print(check_sum(5))\n    print(check_sum(2))"
    },
    {
      "rank": 15,
      "score": 8.902145503295483,
      "candidate": "def sum_of_powers(n):\n    sum = 0\n    while n > 0:\n        sum += n % 2\n        n //= 2\n    return sum\n\n\nprint(sum_of_powers(12))"
    },
    {
      "rank": 16,
      "score": 8.855395696632057,
      "candidate": "def check(n):\n    if n == 0:\n        return False\n    else:\n        return True\n\ndef check_powers(n):\n    if n == 0:\n        return False\n    else:\n        return sum([check(i) for i in range(2, n+1)])\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    print(check_powers(5))"
    },
    {
      "rank": 17,
      "score": 8.850707355641543,
      "candidate": "def sum_of_powers_of_2(num):\n    if num == 0:\n        return True\n    elif num == 1:\n        return False\n    else:\n        return num & (num-1) == 0 and sum_of_powers_of_2(num-1)\n\n\nif __name__ == \"__main__\":\n    print(sum_of_powers_of_2(6))\n    print(sum_of_powers_of_2(2))\n    print(sum_of_powers_of_2(3))\n    print(sum_of_powers_of_2(4))\n    print(sum_of_powers_of_2(5))\n    print(sum_of_powers_of_2(6))"
    },
    {
      "rank": 18,
      "score": 8.8281618090209,
      "candidate": "def sum_of_2(x):\n    if x<0:\n        return False\n    else:\n        return (x>0) and (x&(x-1)==0)\n\n\nprint(sum_of_2(15))"
    },
    {
      "rank": 19,
      "score": 8.81367773444215,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n == 0:\n        return True\n    if n == 1:\n        return False\n    return n % 2 == 0 and is_sum_of_powers_of_2(n - 1)\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(is_sum_of_powers_of_2(n))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 20,
      "score": 8.76828871349479,
      "candidate": "def is_even(num):\n    return num % 2 == 0\n\n\ndef is_odd(num):\n    return num % 2!= 0\n\n\ndef is_sum_of_non_zero_powers_of_2(num):\n    return num == sum(filter(is_even, range(1, num + 1))) + sum(filter(is_odd, range(1, num + 1)))\n\n\ndef is_sum_of_non_zero_powers_of_3(num):\n    return num == sum(filter(is_even, range(1, num + 1))) + sum(filter(is_odd, range(1, num + 1))) + sum(\n        filter(is_odd, range(1, num + 1)))\n\n\ndef is_sum_of_non_zero_powers_of_4(num):\n    return num == sum(filter(is_even, range(1, num + 1))) + sum(filter(is_odd, range(1, num + 1))) + sum(\n        filter(is_odd, range(1, num + 1))) + sum(filter(is_odd, range(1, num + 1)))\n\n\nif __name__ == '__main__':\n    num = int(input(\"Enter a number to check whether it can be represented as sum of non-zero powers of 2 or not: \"))\n    if is_sum_of_non_zero_powers_of_2(num):\n        print(\"The number can be represented as sum of non-zero powers of 2\")\n    else:\n        print(\"The number can not be represented as sum of non-zero powers of 2\")\n\n    if is_sum_of_non_zero_powers_of_3(num):\n        print(\"The number can be represented as sum of non-zero powers of 3\")\n    else:\n        print(\"The number can not be represented as sum of non-zero powers of 3\")\n\n    if is_sum_of_non_zero_powers_of_4(num):\n        print(\"The number can be represented as sum of non-zero powers of 4\")\n    else:\n        print(\"The number can not be represented"
    },
    {
      "rank": 21,
      "score": 8.750282588864879,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n == 0:\n        return True\n    elif n % 2 == 0:\n        return False\n    else:\n        return is_sum_of_powers_of_2(n-1)\n\n\nprint(is_sum_of_powers_of_2(10))\nprint(is_sum_of_powers_of_2(16))\nprint(is_sum_of_powers_of_2(15))"
    },
    {
      "rank": 22,
      "score": 8.692801520950061,
      "candidate": "def sum_of_powers_of_2(n):\n    if n == 0:\n        return True\n    else:\n        return n & (n - 1) == 0 and sum_of_powers_of_2(n - 1)\n\nprint(sum_of_powers_of_2(4))\nprint(sum_of_powers_of_2(10))\nprint(sum_of_powers_of_2(100))\nprint(sum_of_powers_of_2(1024))"
    },
    {
      "rank": 23,
      "score": 8.632293453617281,
      "candidate": "def sum_of_non_zero_powers_of_2(num):\n    if num == 0:\n        return True\n    return num & (num - 1) == 0 and sum_of_non_zero_powers_of_2(num - 1)\n\nprint(sum_of_non_zero_powers_of_2(7))"
    },
    {
      "rank": 24,
      "score": 8.625142247198651,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n == 0:\n        return False\n\n    return sum([2**x for x in range(1, n+1)]) == n\n\n\nprint(is_sum_of_powers_of_2(10))"
    },
    {
      "rank": 25,
      "score": 8.616253589228675,
      "candidate": "def is_sum_of_2(n):\n    return sum(x for x in range(1, int(n**0.5)+1) if n % x == 0) == n\n\n\nprint(is_sum_of_2(10))"
    },
    {
      "rank": 26,
      "score": 8.606486429141842,
      "candidate": "def is_sum_of_non_zero_powers_of_2(num):\n    if num==0:\n        return False\n    else:\n        return (num&(num-1)==0)\n\nprint(is_sum_of_non_zero_powers_of_2(2))\nprint(is_sum_of_non_zero_powers_of_2(5))\nprint(is_sum_of_non_zero_powers_of_2(6))\nprint(is_sum_of_non_zero_powers_of_2(8))"
    },
    {
      "rank": 27,
      "score": 8.60156811074208,
      "candidate": "def sum_of_powers(number):\n    return sum(x for x in range(1, number) if x % 2 == 0) == number\n\n\nprint(sum_of_powers(4))"
    },
    {
      "rank": 28,
      "score": 8.565425580227462,
      "candidate": "def sum_of_powers_of_2(n):\n    s = 0\n    for i in range(1, n):\n        s += i\n        if s % 2 == 0:\n            return False\n    return True\n\n\nprint(sum_of_powers_of_2(4))"
    },
    {
      "rank": 29,
      "score": 8.548876241946822,
      "candidate": "def can_be_sum_of_non_zero_powers_of_2(n):\n    if n == 0:\n        return True\n    else:\n        return sum([i for i in range(2, n+1) if n % i == 0])\n\nif __name__ == \"__main__\":\n    print(can_be_sum_of_non_zero_powers_of_2(5))"
    },
    {
      "rank": 30,
      "score": 8.542875062379007,
      "candidate": "def can_be_sum_of_non_zero_powers(n):\n    return n >= 0 and (n & (n-1)) == 0\n\nprint(can_be_sum_of_non_zero_powers(5))\nprint(can_be_sum_of_non_zero_powers(10))\nprint(can_be_sum_of_non_zero_powers(17))"
    },
    {
      "rank": 31,
      "score": 8.53012858503943,
      "candidate": "def is_sum_of_non_zero_powers_of_2(num):\n    if num == 0:\n        return False\n    for i in range(1, num + 1):\n        if num % i == 0:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    print(is_sum_of_non_zero_powers_of_2(4))\n    print(is_sum_of_non_zero_powers_of_2(5))"
    },
    {
      "rank": 32,
      "score": 8.499905739299377,
      "candidate": "def sum_of_non_zero_powers(n):\n    if n == 0:\n        return False\n    return n == sum([x for x in range(1, n+1) if x % 2 == 0])\n\n\nprint(sum_of_non_zero_powers(3))"
    },
    {
      "rank": 33,
      "score": 8.492983219118464,
      "candidate": "def sum_of_powers(num):\n    if num == 0:\n        return True\n    if num == 1:\n        return False\n    if num % 2 == 0:\n        return sum_of_powers(num // 2)\n    return False\n\n\nprint(sum_of_powers(2))\nprint(sum_of_powers(3))\nprint(sum_of_powers(5))\nprint(sum_of_powers(10))"
    },
    {
      "rank": 34,
      "score": 8.490324832712195,
      "candidate": "def check(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return check(n // 2)\n    else:\n        return check(n // 2 + 1)\n\n\nprint(check(3))\nprint(check(4))\nprint(check(5))\nprint(check(6))\nprint(check(7))\nprint(check(8))\nprint(check(9))\nprint(check(10))"
    },
    {
      "rank": 35,
      "score": 8.48796797856353,
      "candidate": "def sum_of_powers_of_2(n):\n    sum = 0\n    while n > 0:\n        sum += n & 1\n        n >>= 1\n    return sum == n\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter number: \"))\n    print(f\"Sum of non-zero powers of 2 is {sum_of_powers_of_2(n)}\")"
    },
    {
      "rank": 36,
      "score": 8.437695832075478,
      "candidate": "def check_powers_2(n):\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        if n % 2 == 0:\n            return check_powers_2(n//2)\n        else:\n            return False\n\nprint(check_powers_2(10))"
    },
    {
      "rank": 37,
      "score": 8.426531424889468,
      "candidate": "def check_sum(n):\n    if n == 0:\n        return False\n    else:\n        return (n%2) == 0 and check_sum(n//2)\n\nprint(check_sum(4))\nprint(check_sum(8))\nprint(check_sum(16))\nprint(check_sum(32))\nprint(check_sum(64))\nprint(check_sum(128))\nprint(check_sum(256))\nprint(check_sum(512))\nprint(check_sum(1024))"
    },
    {
      "rank": 38,
      "score": 8.408439383654278,
      "candidate": "def is_power_of_two(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    return n % 2 == 0 or is_power_of_two(n//2)\n\nprint(is_power_of_two(6))"
    },
    {
      "rank": 39,
      "score": 8.386620303250325,
      "candidate": "def sum_of_powers_of_2(n):\n    return sum([int(i) for i in str(n) if i.isdigit()])\n\n\nprint(sum_of_powers_of_2(12))"
    },
    {
      "rank": 40,
      "score": 8.351614956112536,
      "candidate": "def can_be_sum_of_non_zero_powers_of_2(n):\n    return sum([x for x in range(1, n+1) if x % 2 == 0])\n\nprint(can_be_sum_of_non_zero_powers_of_2(100))\nprint(can_be_sum_of_non_zero_powers_of_2(0))"
    },
    {
      "rank": 41,
      "score": 8.334608500525688,
      "candidate": "def check_power(n):\n    if n == 1:\n        return False\n    if n == 0:\n        return True\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    if check_power(n / 2):\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(check_power(n))"
    },
    {
      "rank": 42,
      "score": 8.331556294201176,
      "candidate": "def check(num):\n    if num == 0 or num == 1:\n        return False\n\n    if num % 2 == 0:\n        return True\n\n    sum = 0\n    for i in range(1, num):\n        sum += i ** 2\n\n    return sum == num\n\n\nprint(check(5))\nprint(check(7))\nprint(check(9))"
    },
    {
      "rank": 43,
      "score": 8.298597569547805,
      "candidate": "def check_sum_of_powers(n):\n    if n == 0:\n        return False\n    return n & (n - 1) == 0\n\nprint(check_sum_of_powers(10))"
    },
    {
      "rank": 44,
      "score": 8.294940769211511,
      "candidate": "def can_be_sum_of_non_zero_powers_of_2(n):\n    if n==0:\n        return False\n    if n==1:\n        return True\n    for i in range(2,n+1):\n        if n%i == 0:\n            return False\n    return True\n\nprint(can_be_sum_of_non_zero_powers_of_2(9))"
    },
    {
      "rank": 45,
      "score": 8.2938925966498,
      "candidate": "def sum_of_powers_of_2(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i\n    return sum\n\nprint(sum_of_powers_of_2(20))"
    },
    {
      "rank": 46,
      "score": 8.289838256518838,
      "candidate": "def is_sum_of_powers(n):\n    if n == 0:\n        return False\n    else:\n        return is_sum_of_powers(n-1) + is_sum_of_powers(n-2)\n\n\n\nif __name__ == \"__main__\":\n    print(is_sum_of_powers(100))\n    print(is_sum_of_powers(200))\n    print(is_sum_of_powers(300))"
    },
    {
      "rank": 47,
      "score": 8.280613371145561,
      "candidate": "def is_sum_of_powers_of_2(n):\n    sum_of_powers = 0\n    while n!= 0:\n        sum_of_powers += n % 2\n        n = n // 2\n    return sum_of_powers == n\n\n\nprint(is_sum_of_powers_of_2(100))\nprint(is_sum_of_powers_of_2(4))\nprint(is_sum_of_powers_of_2(0))\nprint(is_sum_of_powers_of_2(1))\nprint(is_sum_of_powers_of_2(2))\nprint(is_sum_of_powers_of_2(3))"
    },
    {
      "rank": 48,
      "score": 8.214125058964552,
      "candidate": "def is_sum_of_two_powers(n):\n    if n == 0:\n        return False\n    else:\n        if n % 2 == 0:\n            return True\n        else:\n            return False\n\nprint(is_sum_of_two_powers(9))\nprint(is_sum_of_two_powers(0))"
    },
    {
      "rank": 49,
      "score": 8.211579567659316,
      "candidate": "def sum_of_powers(n):\n    return sum(int(i) for i in str(n))\n\n\nif __name__ == \"__main__\":\n    print(sum_of_powers(14))\n    print(sum_of_powers(12))\n    print(sum_of_powers(18))\n    print(sum_of_powers(19))\n    print(sum_of_powers(20))\n    print(sum_of_powers(2))\n    print(sum_of_powers(3))\n    print(sum_of_powers(4))\n    print(sum_of_powers(5))\n    print(sum_of_powers(6))\n    print(sum_of_powers(7))\n    print(sum_of_powers(8))\n    print(sum_of_powers(9))\n    print(sum_of_powers(10))\n    print(sum_of_powers(11))\n    print(sum_of_powers(12))\n    print(sum_of_powers(13))\n    print(sum_of_powers(14))\n    print(sum_of_powers(15))\n    print(sum_of_powers(16))\n    print(sum_of_powers(17))\n    print(sum_of_powers(18))\n    print(sum_of_powers(19))\n    print(sum_of_powers(20))\n    print(sum_of_powers(21))\n    print(sum_of_powers(22))\n    print(sum_of_powers(23))\n    print(sum_of_powers(24))\n    print(sum_of_powers(25))\n    print(sum_of_powers(26))\n    print(sum_of_powers(27))\n    print(sum_of_powers(28))\n    print(sum_of_powers(29))\n    print(sum_of_powers(30))\n    print(sum_of_powers(31))\n    print(sum_of_powers(32))\n    print"
    },
    {
      "rank": 50,
      "score": 8.2048573255218,
      "candidate": "def is_sum_of_powers_of_2(n):\n    return (n & (n - 1)) == 0\n\n\ndef main():\n    num = int(input(\"Enter a number: \"))\n    print(f\"The number can be represented as sum of non-zero powers of 2: {is_sum_of_powers_of_2(num)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 51,
      "score": 8.179564342560925,
      "candidate": "def is_prime(num):\n    if num == 1:\n        return False\n    for i in range(2,num):\n        if num % i == 0:\n            return False\n    return True\n\n\ndef is_prime_sum(num):\n    sum = 0\n    for i in range(2,num):\n        if is_prime(i):\n            sum += i\n    return sum == num\n\n\nprint(is_prime_sum(2))"
    },
    {
      "rank": 52,
      "score": 8.172253082181854,
      "candidate": "def sum_of_non_zero_powers_of_2(n):\n\treturn sum(i for i in range(1, n) if (n % i == 0))\n\ndef main():\n\tn = int(input(\"Enter the number: \"))\n\tprint(sum_of_non_zero_powers_of_2(n))\n\nif __name__ == \"__main__\":\n\tmain()"
    },
    {
      "rank": 53,
      "score": 8.163300679823958,
      "candidate": "def can_be_sum(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return can_be_sum(n // 2)\n    else:\n        return False\n\nprint(can_be_sum(4))\nprint(can_be_sum(1))\nprint(can_be_sum(2))\nprint(can_be_sum(3))\nprint(can_be_sum(4))\nprint(can_be_sum(5))"
    },
    {
      "rank": 54,
      "score": 8.144125099485041,
      "candidate": "def sum_powers_of_2(n):\n    s = 0\n    while n > 0:\n        s += n & 1\n        n = n >> 1\n    return s\n\n\nprint(sum_powers_of_2(12))"
    },
    {
      "rank": 55,
      "score": 8.143591138329747,
      "candidate": "def sum_powers(n):\n    if n == 0:\n        return False\n    sum = 0\n    while n > 0:\n        if n & 1 == 1:\n            sum += 1\n        n >>= 1\n    return sum == 2\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if sum_powers(n):\n        print(\"Can be represented as sum of non-zero powers of 2\")\n    else:\n        print(\"Can not be represented as sum of non-zero powers of 2\")\n\nmain()"
    },
    {
      "rank": 56,
      "score": 8.093417897505768,
      "candidate": "def check_sum_of_powers_of_2(num):\n    if num == 0:\n        return False\n    else:\n        return sum(map(lambda x: x**2, range(1, num+1))) == num\n\n\nif __name__ == '__main__':\n    num = int(input(\"Enter a number: \"))\n    print(check_sum_of_powers_of_2(num))"
    },
    {
      "rank": 57,
      "score": 8.040197642997851,
      "candidate": "def sum_of_powers_of_2(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n    return sum_of_powers_of_2(n // 2) or sum_of_powers_of_2(n - 1)\n\nif __name__ == \"__main__\":\n    print(sum_of_powers_of_2(5))"
    },
    {
      "rank": 58,
      "score": 8.024835682833125,
      "candidate": "def check_num(n):\n    if (n == 0):\n        return False\n    if (n < 0):\n        return False\n    sum = 0\n    while (n!= 0):\n        sum += n % 2\n        n = n // 2\n    return sum == n\n\ndef main():\n    n = int(input(\"Enter the number: \"))\n    if (check_num(n)):\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 59,
      "score": 7.990432406683839,
      "candidate": "def sum_powers_of_2(n):\n    return sum(int(i) for i in str(n))\n\nprint(sum_powers_of_2(1234))"
    },
    {
      "rank": 60,
      "score": 7.938028884277233,
      "candidate": "def check(n):\n    if n == 1:\n        return False\n    elif n == 0:\n        return True\n    else:\n        return check(n - 1) or check(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(check(10))\n    print(check(2))\n    print(check(3))\n    print(check(4))\n    print(check(5))\n    print(check(6))\n    print(check(7))\n    print(check(8))"
    },
    {
      "rank": 61,
      "score": 7.915588979966494,
      "candidate": "def check_sum(num):\n    sum = 0\n    for i in range(1, num+1):\n        if num % i == 0:\n            sum += i\n    return sum == num\n\n\nprint(check_sum(12))\nprint(check_sum(2))"
    },
    {
      "rank": 62,
      "score": 7.8912769574414305,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n < 0:\n        return False\n    return (n == 0 or n == 1) and (n!= 0 and n!= 1) and (n % 2 == 0 or n % 2!= 0)\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    print(is_sum_of_powers_of_2(n))\n\nmain()"
    },
    {
      "rank": 63,
      "score": 7.84634113240411,
      "candidate": "def sum_of_2(num):\n    if num == 0:\n        return False\n    if num == 1:\n        return True\n\n    sum = 0\n    while num > 0:\n        sum += num & 1\n        num >>= 1\n    if sum == num:\n        return True\n    else:\n        return False\n\n\nprint(sum_of_2(5))\nprint(sum_of_2(4))\nprint(sum_of_2(3))"
    },
    {
      "rank": 64,
      "score": 7.834022619458933,
      "candidate": "def sum_of_powers_2(num):\n    if num==0:\n        return False\n    else:\n        return num*num\n\nif __name__ == \"__main__\":\n    print(sum_of_powers_2(2))"
    },
    {
      "rank": 65,
      "score": 7.780351419995229,
      "candidate": "def sum_of_powers_of_2(n):\n    # Write your code here\n    if n == 0:\n        return True\n    else:\n        return n > 0 and sum_of_powers_of_2(n - 1)\n\n\nprint(sum_of_powers_of_2(5))"
    },
    {
      "rank": 66,
      "score": 7.738292593776799,
      "candidate": "def sum_of_non_zero_powers(n):\n    s = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            s += i\n    return s\n\n\ndef main():\n    n = int(input(\"Enter the number: \"))\n    print(f\"The sum of non-zero powers of 2 is {sum_of_non_zero_powers(n)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 67,
      "score": 7.705183449260731,
      "candidate": "def check_pow(n):\n    if (n==0 or n==1):\n        return True\n    else:\n        for i in range(2,n+1):\n            if (n%i==0):\n                return False\n        return True\n\nprint(check_pow(4))\nprint(check_pow(6))"
    },
    {
      "rank": 68,
      "score": 7.562924366763077,
      "candidate": "def sum_of_powers(n):\n    if n==0:\n        return False\n    if n==1:\n        return True\n    if n%2==0:\n        return False\n    return sum_of_powers(n//2)\n\nprint(sum_of_powers(5))"
    },
    {
      "rank": 69,
      "score": 7.4506599871439985,
      "candidate": "def sum_of_powers_of_2(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    return n + sum_of_powers_of_2(n-1)\n\n\nprint(sum_of_powers_of_2(6))\nprint(sum_of_powers_of_2(12))\nprint(sum_of_powers_of_2(2))"
    },
    {
      "rank": 70,
      "score": 7.134571892399572,
      "candidate": "def sum_of_powers_of_2(num):\n    if num == 0:\n        return True\n\n    if num == 1:\n        return False\n\n    if num % 2 == 0:\n        return sum_of_powers_of_2(num // 2)\n\n    return False\n\n\nif __name__ == \"__main__\":\n    print(sum_of_powers_of_2(2))"
    },
    {
      "rank": 71,
      "score": 3.555683455352681,
      "candidate": "def check_sum_of_2(n):\n    if n <= 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return check_sum_of_2(n - 1)\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    print(check_sum_of_2(2))\n    print(check_sum_of_2(4))\n    print(check_sum_of_2(8))"
    },
    {
      "rank": 72,
      "score": 3.4737638446522174,
      "candidate": "def sum_of_powers(num):\n    if num == 0:\n        return False\n\n    if num == 1:\n        return True\n\n    return (num & (num - 1)) == 0\n\n\ndef check_if_sum_of_powers(num):\n    if num == 0:\n        return False\n\n    if num == 1:\n        return True\n\n    return (num & (num - 1)) == 0 and sum_of_powers(num - 1)\n\n\nif __name__ == \"__main__\":\n    print(check_if_sum_of_powers(5))\n    print(check_if_sum_of_powers(7))"
    },
    {
      "rank": 73,
      "score": 3.443368213422455,
      "candidate": "def is_sum_of_non_zero_powers_of_2(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    return n & (n-1) == 0 and is_sum_of_non_zero_powers_of_2(n-1)\n\n\n\n\nprint(is_sum_of_non_zero_powers_of_2(10))"
    },
    {
      "rank": 74,
      "score": 3.4068720085712467,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n == 0:\n        return True\n    if n % 2 == 0:\n        return False\n    return is_sum_of_powers_of_2(n // 2)\n\n\nprint(is_sum_of_powers_of_2(2))"
    },
    {
      "rank": 75,
      "score": 3.301059869367607,
      "candidate": "def is_sum_of_powers_of_two(n):\n    # Write your code here\n    if n <= 0:\n        return False\n    for i in range(1, n+1):\n        if i == 2:\n            return False\n        if n % i == 0:\n            return False\n    return True\n\n\nprint(is_sum_of_powers_of_two(7))"
    },
    {
      "rank": 76,
      "score": 3.2926635381367078,
      "candidate": "def can_be_sum(num):\n    if num == 0:\n        return False\n    return num & (num-1) == 0 and sum(map(int, str(num))) % 2 == 0\n\n\nprint(can_be_sum(10))\nprint(can_be_sum(100))\nprint(can_be_sum(2147483648))\nprint(can_be_sum(2147483647))\nprint(can_be_sum(2147483648))\nprint(can_be_sum(2147483647))"
    },
    {
      "rank": 77,
      "score": 3.2467634736309567,
      "candidate": "def is_sum_of_powers_of_2(num):\n    if num == 0:\n        return False\n    if num % 2 == 0:\n        return True\n    for i in range(3, num+1):\n        if num % i == 0:\n            return False\n    return True\n\nprint(is_sum_of_powers_of_2(8))\nprint(is_sum_of_powers_of_2(7))\nprint(is_sum_of_powers_of_2(9))\nprint(is_sum_of_powers_of_2(10))\nprint(is_sum_of_powers_of_2(11))\nprint(is_sum_of_powers_of_2(12))\nprint(is_sum_of_powers_of_2(13))\nprint(is_sum_of_powers_of_2(14))\nprint(is_sum_of_powers_of_2(15))\nprint(is_sum_of_powers_of_2(16))\nprint(is_sum_of_powers_of_2(17))\nprint(is_sum_of_powers_of_2(18))\nprint(is_sum_of_powers_of_2(19))\nprint(is_sum_of_powers_of_2(20))\nprint(is_sum_of_powers_of_2(21))\nprint(is_sum_of_powers_of_2(22))\nprint(is_sum_of_powers_of_2(23))\nprint(is_sum_of_powers_of_2(24))\nprint(is_sum_of_powers_of_2(25))\nprint(is_sum_of_powers_of_2(26))\nprint(is_sum_of_powers_of_2(27))\nprint(is_sum_of_powers_of_2(28))\nprint(is_sum_of_powers_of_2(29))\nprint(is_sum_of_powers_of_2(30))\nprint(is_sum"
    },
    {
      "rank": 78,
      "score": 3.1627680130757896,
      "candidate": "def is_sum_of_two(n):\n    return (n == 0 or n == 1 or n == 2 or n == 3 or n == 4 or n == 5 or n == 6 or n == 7 or n == 8 or n == 9 or n == 10) and sum([int(x)**2 for x in str(n)]) == n\n\n\n\nprint(is_sum_of_two(1))\nprint(is_sum_of_two(2))\nprint(is_sum_of_two(3))\nprint(is_sum_of_two(4))\nprint(is_sum_of_two(5))\nprint(is_sum_of_two(6))\nprint(is_sum_of_two(7))\nprint(is_sum_of_two(8))\nprint(is_sum_of_two(9))\nprint(is_sum_of_two(10))"
    },
    {
      "rank": 79,
      "score": 3.1539802299340067,
      "candidate": "def sum_of_non_zero_powers(n):\n    sum_of_powers = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum_of_powers += i\n    return sum_of_powers\n\nprint(sum_of_non_zero_powers(8))\nprint(sum_of_non_zero_powers(11))\nprint(sum_of_non_zero_powers(12))\nprint(sum_of_non_zero_powers(13))\nprint(sum_of_non_zero_powers(14))\nprint(sum_of_non_zero_powers(15))\nprint(sum_of_non_zero_powers(16))\nprint(sum_of_non_zero_powers(17))\nprint(sum_of_non_zero_powers(18))\nprint(sum_of_non_zero_powers(19))\nprint(sum_of_non_zero_powers(20))\nprint(sum_of_non_zero_powers(21))\nprint(sum_of_non_zero_powers(22))\nprint(sum_of_non_zero_powers(23))\nprint(sum_of_non_zero_powers(24))\nprint(sum_of_non_zero_powers(25))\nprint(sum_of_non_zero_powers(26))\nprint(sum_of_non_zero_powers(27))\nprint(sum_of_non_zero_powers(28))\nprint(sum_of_non_zero_powers(29))\nprint(sum_of_non_zero_powers(30))\nprint(sum_of_non_zero_powers(31))\nprint(sum_of_non_zero_powers(32))\nprint(sum_of_non_zero_powers(33))\nprint(sum_of_non_zero_powers(34))\nprint(sum_of_non_zero_powers(35))\nprint(sum_of_non_zero_powers(36))\nprint(sum_of_non_zero_"
    },
    {
      "rank": 80,
      "score": 3.1084908075142903,
      "candidate": "def check_powers_of_2(num):\n    return sum(map(int, str(num)))\n\nprint(check_powers_of_2(100))\nprint(check_powers_of_2(3))\nprint(check_powers_of_2(4))\nprint(check_powers_of_2(5))\nprint(check_powers_of_2(6))\nprint(check_powers_of_2(7))\nprint(check_powers_of_2(8))\nprint(check_powers_of_2(9))\nprint(check_powers_of_2(10))"
    },
    {
      "rank": 81,
      "score": 3.107133771453524,
      "candidate": "def is_power_2(n):\n    return n == sum(map(int, str(n)))\n\n\nprint(is_power_2(10))\nprint(is_power_2(100))\nprint(is_power_2(2))\nprint(is_power_2(6))\nprint(is_power_2(5))\nprint(is_power_2(4))\nprint(is_power_2(3))\nprint(is_power_2(2))\nprint(is_power_2(1))\nprint(is_power_2(0))"
    },
    {
      "rank": 82,
      "score": 3.099379029421069,
      "candidate": "def sum_of_powers_of_2(num):\n    # Write your code here\n    if num == 0:\n        return False\n    if num == 1:\n        return True\n    for i in range(2, num + 1):\n        if num % i == 0:\n            return False\n    return True\n\n\nprint(sum_of_powers_of_2(10))\nprint(sum_of_powers_of_2(11))\nprint(sum_of_powers_of_2(12))\nprint(sum_of_powers_of_2(13))\nprint(sum_of_powers_of_2(14))\nprint(sum_of_powers_of_2(15))\nprint(sum_of_powers_of_2(16))\nprint(sum_of_powers_of_2(17))\nprint(sum_of_powers_of_2(18))\nprint(sum_of_powers_of_2(19))\nprint(sum_of_powers_of_2(20))\nprint(sum_of_powers_of_2(21))\nprint(sum_of_powers_of_2(22))\nprint(sum_of_powers_of_2(23))\nprint(sum_of_powers_of_2(24))\nprint(sum_of_powers_of_2(25))\nprint(sum_of_powers_of_2(26))\nprint(sum_of_powers_of_2(27))\nprint(sum_of_powers_of_2(28))\nprint(sum_of_powers_of_2(29))\nprint(sum_of_powers_of_2(30))\nprint(sum_of_powers_of_2(31))\nprint(sum_of_powers_of_2(32))\nprint(sum_of_powers_of_2(33))\nprint(sum_of_powers_of_2(34))\nprint(sum_of_powers_of_2(35))\nprint(sum_of_powers_of_2(36))"
    },
    {
      "rank": 83,
      "score": 3.0986253328979054,
      "candidate": "def sum_of_powers(n):\n    # Write your code here\n    if n <= 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if n == 30:\n        return True\n    if n == 31:\n        return True\n    if n == 32:\n        return True\n    if n == 33:\n        return True\n    if n == 34:\n        return True\n    if n == 35:\n        return True\n    if n == 36:\n        return True\n    if n == 37:\n        return True\n    if n == 38:\n        return True\n    if n == 39:\n        return True\n    if n == 40:\n        return True\n    if n == 41:\n        return True\n    if n == 42:\n        return True\n    if n == 43:\n        return True\n    if n == 44:\n        return True\n    if n == 45:"
    },
    {
      "rank": 84,
      "score": 3.020258461406377,
      "candidate": "def is_sum_of_non_zero_powers(n):\n    if n==0:\n        return False\n    if n==1:\n        return True\n    if n%2==0:\n        return False\n    return is_sum_of_non_zero_powers(n//2) or is_sum_of_non_zero_powers(n//2+1)\n\nprint(is_sum_of_non_zero_powers(2))\nprint(is_sum_of_non_zero_powers(6))\nprint(is_sum_of_non_zero_powers(8))\nprint(is_sum_of_non_zero_powers(10))\nprint(is_sum_of_non_zero_powers(11))\nprint(is_sum_of_non_zero_powers(12))"
    },
    {
      "rank": 85,
      "score": 2.9585207096486448,
      "candidate": "def sum_of_powers_of_2(n):\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    return sum_of_powers_of_2(n-1) and sum_of_powers_of_2(n-2)\n\n\ndef check_sum_of_powers_of_2(n):\n    return n % 2 == 0\n\n\nprint(check_sum_of_powers_of_2(12))"
    },
    {
      "rank": 86,
      "score": 2.9297589129152457,
      "candidate": "def check_pow(n):\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    if n % 2 == 0:\n        return check_pow(n / 2)\n    return check_pow(n / 2) and check_pow(n / 2 + 1)\n\n\ndef check_pow_2(n):\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    if n % 2 == 0:\n        return check_pow_2(n / 2)\n    return check_pow_2(n / 2 + 1) and check_pow_2(n / 2 + 2)\n\n\ndef main():\n    n = int(input(\"Enter a number: \"))\n    if check_pow(n) and check_pow_2(n):\n        print(\"The number can be represented as sum of non-zero powers of 2 or not.\")\n    else:\n        print(\"The number cannot be represented as sum of non-zero powers of 2 or not.\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 87,
      "score": 2.929753987582999,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n < 0:\n        return False\n    elif n == 0:\n        return True\n    else:\n        return (n % 2) == 0 and is_sum_of_powers_of_2(n // 2)\n\n\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(-5))\nprint(is_sum_of_powers_of_2(4))\nprint(is_sum_of_powers_of_2(0))\nprint(is_sum_of_powers_of_2(1))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(0))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(0))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_sum_of_powers_of_2(5))\nprint(is_"
    },
    {
      "rank": 88,
      "score": 2.884475315875105,
      "candidate": "def sum_of_powers_of_2(num):\n    if num == 0:\n        return False\n    sum_of_powers = 0\n    while num > 0:\n        sum_of_powers += num\n        num = num >> 1\n    return sum_of_powers == num\n\nif __name__ == '__main__':\n    assert sum_of_powers_of_2(0) == True\n    assert sum_of_powers_of_2(1) == True\n    assert sum_of_powers_of_2(2) == True\n    assert sum_of_powers_of_2(4) == True\n    assert sum_of_powers_of_2(16) == True\n    assert sum_of_powers_of_2(32) == False\n    assert sum_of_powers_of_2(64) == False\n    assert sum_of_powers_of_2(128) == False\n    assert sum_of_powers_of_2(256) == False\n    assert sum_of_powers_of_2(512) == False\n    assert sum_of_powers_of_2(1024) == False\n    assert sum_of_powers_of_2(2048) == False\n    assert sum_of_powers_of_2(4096) == False\n    assert sum_of_powers_of_2(8192) == False\n    assert sum_of_powers_of_2(16384) == False\n    assert sum_of_powers_of_2(2147483647) == False\n    assert sum_of_powers_of_2(258435456) == False\n    assert sum_of_powers_of_2(4194304) == False\n    assert sum_of_powers_of_2(9223372036854775807) == False\n    assert sum_of_powers_of_2(9223372036854775808) == False\n    assert sum_of_powers_of_2(9223372036854775809) == False\n    assert sum"
    },
    {
      "rank": 89,
      "score": 2.8609746921562613,
      "candidate": "def is_power_of_2(n):\n    if n == 0:\n        return False\n    else:\n        return n & (n-1) == 0\n\ndef is_power_of_3(n):\n    if n == 0:\n        return False\n    else:\n        return (n & (n-1) == 0) | (n & (n-2) == 0) | (n & (n-3) == 0)\n\ndef is_power_of_5(n):\n    if n == 0:\n        return False\n    else:\n        return (n & (n-1) == 0) | (n & (n-2) == 0) | (n & (n-3) == 0) | (n & (n-4) == 0) | (n & (n-5) == 0) | (n & (n-6) == 0) | (n & (n-7) == 0) | (n & (n-8) == 0) | (n & (n-9) == 0)\n\ndef is_power_of_10(n):\n    if n == 0:\n        return False\n    else:\n        return (n & (n-1) == 0) | (n & (n-2) == 0) | (n & (n-3) == 0) | (n & (n-4) == 0) | (n & (n-5) == 0) | (n & (n-6) == 0) | (n & (n-7) == 0) | (n & (n-8) == 0) | (n & (n-9) == 0) | (n & (n-10) == 0)\n\ndef is_power_of_12(n):\n    if n == 0:\n        return False\n    else:\n        return (n & (n-1) == 0) | (n & (n-2) == 0) | (n & (n-3) == 0) | (n & (n-4) == 0) | (n & (n-5) == 0) | (n & (n-6) == 0) | (n & (n-7) == 0) | (n"
    },
    {
      "rank": 90,
      "score": 2.8591576842195146,
      "candidate": "def is_sum_of_non_zero_powers(number):\n    sum_of_non_zero_powers = 0\n    for i in range(1, number+1):\n        if i % 2 == 0:\n            sum_of_non_zero_powers += i\n    if number == sum_of_non_zero_powers:\n        return True\n    else:\n        return False\n\n\nprint(is_sum_of_non_zero_powers(1))\nprint(is_sum_of_non_zero_powers(2))\nprint(is_sum_of_non_zero_powers(3))\nprint(is_sum_of_non_zero_powers(4))"
    },
    {
      "rank": 91,
      "score": 2.849472886924639,
      "candidate": "def is_sum_of_powers_of_2(num):\n    if num == 0:\n        return False\n    else:\n        return num * num == num\n\nprint(is_sum_of_powers_of_2(10))\nprint(is_sum_of_powers_of_2(11))\nprint(is_sum_of_powers_of_2(12))\nprint(is_sum_of_powers_of_2(13))\nprint(is_sum_of_powers_of_2(14))\nprint(is_sum_of_powers_of_2(15))\nprint(is_sum_of_powers_of_2(16))\nprint(is_sum_of_powers_of_2(17))\nprint(is_sum_of_powers_of_2(18))\nprint(is_sum_of_powers_of_2(19))\nprint(is_sum_of_powers_of_2(20))\nprint(is_sum_of_powers_of_2(21))\nprint(is_sum_of_powers_of_2(22))\nprint(is_sum_of_powers_of_2(23))\nprint(is_sum_of_powers_of_2(24))\nprint(is_sum_of_powers_of_2(25))\nprint(is_sum_of_powers_of_2(26))\nprint(is_sum_of_powers_of_2(27))\nprint(is_sum_of_powers_of_2(28))\nprint(is_sum_of_powers_of_2(29))\nprint(is_sum_of_powers_of_2(30))\nprint(is_sum_of_powers_of_2(31))\nprint(is_sum_of_powers_of_2(32))\nprint(is_sum_of_powers_of_2(33))\nprint(is_sum_of_powers_of_2(34))\nprint(is_sum_of_powers_of_2(35))"
    },
    {
      "rank": 92,
      "score": 2.8445189345179056,
      "candidate": "def sum_of_powers_of_2(n):\n    if n == 0:\n        return True\n    return n == (n + 1) // 2 and sum_of_powers_of_2(n - (n + 1) // 2)\n\n\nprint(sum_of_powers_of_2(5))"
    },
    {
      "rank": 93,
      "score": 2.8064640736184625,
      "candidate": "def sum_of_non_zero_powers(n):\n    sum_of_non_zero_powers = 0\n    while n!= 0:\n        sum_of_non_zero_powers += n & 1\n        n >>= 1\n    return sum_of_non_zero_powers == n\n\n\nprint(sum_of_non_zero_powers(5))\nprint(sum_of_non_zero_powers(2))\nprint(sum_of_non_zero_powers(4))"
    },
    {
      "rank": 94,
      "score": 2.7969233999082124,
      "candidate": "def check_sum(n):\n    if n == 0:\n        return False\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    print(check_sum(8))\n    print(check_sum(10))\n    print(check_sum(12))\n    print(check_sum(14))\n    print(check_sum(16))\n    print(check_sum(18))\n    print(check_sum(20))\n    print(check_sum(22))\n    print(check_sum(24))\n    print(check_sum(28))\n    print(check_sum(32))\n    print(check_sum(36))\n    print(check_sum(48))\n    print(check_sum(56))\n    print(check_sum(64))\n    print(check_sum(72))\n    print(check_sum(72))"
    },
    {
      "rank": 95,
      "score": 2.7840467374815874,
      "candidate": "def is_power_of_two(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0) == 0\n\ndef is_power_of_three(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 2) == 0\n\ndef is_power_of_four(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 3) == 0\n\ndef is_power_of_five(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 4) == 0\n\ndef is_power_of_six(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 5) == 0\n\ndef is_power_of_seven(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 6) == 0\n\ndef is_power_of_eight(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 7) == 0\n\ndef is_power_of_nine(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 8) == 0\n\ndef is_power_of_ten(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 9) == 0\n\ndef is_power_of_eleven(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n % x == 0 and x!= 10) == 0\n\ndef is_power_of_twelve(n):\n    return sum(x for x in range(1, n+1) if x > 0 and n"
    },
    {
      "rank": 96,
      "score": 2.654701926773309,
      "candidate": "def sum_of_non_zero_powers(n):\n    # write your code here\n    sum = 0\n    while n!= 0:\n        sum += n & 1\n        n >>= 1\n    return sum == n\n\nprint(sum_of_non_zero_powers(12))\nprint(sum_of_non_zero_powers(13))\nprint(sum_of_non_zero_powers(14))\nprint(sum_of_non_zero_powers(15))\nprint(sum_of_non_zero_powers(16))\nprint(sum_of_non_zero_powers(17))\nprint(sum_of_non_zero_powers(18))\nprint(sum_of_non_zero_powers(19))\nprint(sum_of_non_zero_powers(20))\nprint(sum_of_non_zero_powers(21))\nprint(sum_of_non_zero_powers(22))\nprint(sum_of_non_zero_powers(23))\nprint(sum_of_non_zero_powers(24))\nprint(sum_of_non_zero_powers(25))\nprint(sum_of_non_zero_powers(26))\nprint(sum_of_non_zero_powers(27))\nprint(sum_of_non_zero_powers(28))\nprint(sum_of_non_zero_powers(29))"
    },
    {
      "rank": 97,
      "score": 2.572575544135963,
      "candidate": "def is_power_of_two(n):\n    return (n!= 0 and (n & (n - 1)) == 0)\n\ndef is_power_of_two_recursive(n):\n    if n == 0:\n        return True\n    if is_power_of_two_recursive(n - 1):\n        return True\n    return False\n\nprint(is_power_of_two(2))\nprint(is_power_of_two_recursive(2))"
    },
    {
      "rank": 98,
      "score": 2.48252465024609,
      "candidate": "def is_sum_of_powers_of_2(n):\n    if n == 1:\n        return True\n    else:\n        return n & (n-1) == 0 and is_sum_of_powers_of_2(n-1)\n\n\nprint(is_sum_of_powers_of_2(7))\nprint(is_sum_of_powers_of_2(3))\nprint(is_sum_of_powers_of_2(8))\nprint(is_sum_of_powers_of_2(9))\nprint(is_sum_of_powers_of_2(10))\nprint(is_sum_of_powers_of_2(11))\nprint(is_sum_of_powers_of_2(12))\nprint(is_sum_of_powers_of_2(13))\nprint(is_sum_of_powers_of_2(14))\nprint(is_sum_of_powers_of_2(15))\nprint(is_sum_of_powers_of_2(16))\nprint(is_sum_of_powers_of_2(17))\nprint(is_sum_of_powers_of_2(18))\nprint(is_sum_of_powers_of_2(19))\nprint(is_sum_of_powers_of_2(20))\nprint(is_sum_of_powers_of_2(21))\nprint(is_sum_of_powers_of_2(22))\nprint(is_sum_of_powers_of_2(23))\nprint(is_sum_of_powers_of_2(24))\nprint(is_sum_of_powers_of_2(25))\nprint(is_sum_of_powers_of_2(26))\nprint(is_sum_of_powers_of_2(27))\nprint(is_sum_of_powers_of_2(28))\nprint(is_sum_of_powers_of_2(29))\nprint(is_sum_of_powers_of_"
    },
    {
      "rank": 99,
      "score": 2.426015926602661,
      "candidate": "def is_sum_of_non_zero_powers(num):\n    if num == 0:\n        return False\n    else:\n        return num & (num - 1) == 0\n\nprint(is_sum_of_non_zero_powers(0))\nprint(is_sum_of_non_zero_powers(1))\nprint(is_sum_of_non_zero_powers(2))\nprint(is_sum_of_non_zero_powers(3))\nprint(is_sum_of_non_zero_powers(4))\nprint(is_sum_of_non_zero_powers(5))\nprint(is_sum_of_non_zero_powers(6))\nprint(is_sum_of_non_zero_powers(7))\nprint(is_sum_of_non_zero_powers(8))\nprint(is_sum_of_non_zero_powers(9))\nprint(is_sum_of_non_zero_powers(10))\nprint(is_sum_of_non_zero_powers(11))\nprint(is_sum_of_non_zero_powers(12))\nprint(is_sum_of_non_zero_powers(13))\nprint(is_sum_of_non_zero_powers(14))\nprint(is_sum_of_non_zero_powers(15))\nprint(is_sum_of_non_zero_powers(16))\nprint(is_sum_of_non_zero_powers(17))\nprint(is_sum_of_non_zero_powers(18))\nprint(is_sum_of_non_zero_powers(19))\nprint(is_sum_of_non_zero_powers(20))\nprint(is_sum_of_non_zero_powers(21))\nprint(is_sum_of_non_zero_powers(22))\nprint(is_sum_of_non_zero_powers(23))\nprint(is_sum_of_non_zero_powers(24))\nprint(is_sum_of_non_zero_powers"
    },
    {
      "rank": 100,
      "score": 2.412098962836067,
      "candidate": "def is_sum_of_non_zero_powers(num):\n    return sum(1 for i in range(2, num) if num % i == 0) == num\n\n\nprint(is_sum_of_non_zero_powers(0))\nprint(is_sum_of_non_zero_powers(1))\nprint(is_sum_of_non_zero_powers(2))"
    }
  ]
}