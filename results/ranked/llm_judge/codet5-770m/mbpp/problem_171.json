{
  "timestamp": "2025-09-14T13:43:24.886595",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 171,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "import re\n\ndef uppercase(string):\n    return re.findall(r\"[A-Z]\", string)\n\n\ndef lowercase(string):\n    return re.findall(r\"[a-z]\", string)\n\n\ndef special(string):\n    return re.findall(r\"[!@#$%^&*()_+]{2,}\", string)\n\n\ndef numeric(string):\n    return re.findall(r\"\\d+\", string)\n\n\nprint(uppercase(\"This is an example of a string\"))\nprint(lowercase(\"This is an example of a string\"))\nprint(special(\"This is an example of a string\"))\nprint(numeric(\"This is an example of a string\"))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "import re\n\n\ndef upper_lower(text: str) -> str:\n    return re.sub(r\"[A-Z]\", lambda x: x.group().upper(), text)\n\n\ndef num_char(text: str) -> str:\n    return re.sub(r\"[\\d]+\", lambda x: x.group(), text)\n\n\ndef special_char(text: str) -> str:\n    return re.sub(r\"[^a-zA-Z0-9]\", lambda x: x.group(), text)\n\n\ndef main() -> None:\n    test_cases = [\n        (\"abc\", \"ABC\"),\n        (\"abc123\", \"ABC123\"),\n        (\"abc123abc\", \"ABC123abc\"),\n        (\"abc123abc123\", \"ABC123abc123\"),\n        (\"abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc123"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "import re\n\ndef search(str):\n    # your code here\n    # convert the string to a list\n    # using re.findall()\n    # using re.split()\n    # using re.search()\n    # using re.search(r'[A-Za-z]+', str)\n    # using re.search(r'[A-Za-z]+', str, re.IGNORECASE)\n    # using re.search(r'[A-Za-z]+', str, re.MULTILINE)\n    # using re.search(r'[A-Za-z]+', str, re.DOTALL)\n    # using re.search(r'[A-Za-z]+', str, re.VERBOSE)\n\n    # check if the string contains uppercase, lowercase, special character and numeric values\n    # check if the string contains any special characters\n    # check if the string contains any numeric values\n    # check if the string contains any digits\n    # check if the string contains any letters\n    # return the string\n    # return None\n\n    result = None\n\n    # check if the string contains uppercase, lowercase, special character and numeric values\n    if re.search(r'[A-Za-z]+', str):\n        result = 'uppercase'\n\n    # check if the string contains any special characters\n    if re.search(r'[A-Za-z]+', str, re.IGNORECASE):\n        result ='special character'\n\n    # check if the string contains any numeric values\n    if re.search(r'[0-9]+', str):\n        result = 'numeric value'\n\n    # check if the string contains any digits\n    if re.search(r'[0-9]+', str, re.VERBOSE):\n        result = 'numeric value'\n\n    # check if the string contains any letters\n    if re.search(r'[a-zA-Z]+', str):\n        result = 'lowercase'\n\n    # return the string\n    return result\n\n\nprint(search(\"hello\"))\nprint(search(\"hello world\"))\nprint(search(\"hello world\"))\nprint(search(\"hello world\"))\nprint(search(\"hello world\"))\nprint("
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "import re\n\ndef uppercase(text):\n    return re.sub(r'([A-Z])', lambda m: m.group(1).upper(), text)\n\ndef lowercase(text):\n    return re.sub(r'([a-z])', lambda m: m.group(0).lower(), text)\n\ndef special_character(text):\n    return re.sub(r'[A-Z]', lambda m: m.group(0).upper(), text)\n\ndef numeric(text):\n    return re.sub(r'([0-9])', lambda m: m.group(0).upper(), text)\n\n\ndef main():\n    print(uppercase('aA'))\n    print(lowercase('a-Z'))\n    print(special_character('a-Z'))\n    print(numeric('1-10'))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "import re\n\ndef search_uppercase(text):\n    return re.search('[A-Z]', text)\n\ndef search_lowercase(text):\n    return re.search('[a-z]', text)\n\ndef search_special_character(text):\n    return re.search('[!@#$%^&*()_+=?|}{~:]')\n\ndef search_numeric(text):\n    return re.search('[0-9]', text)\n\nif __name__ == \"__main__\":\n    text = 'Hello World!'\n    print(search_uppercase(text))\n    print(search_lowercase(text))\n    print(search_special_character(text))\n    print(search_numeric(text))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "import re\n\ndef uppercase_lowercase_special_char(text):\n    return re.findall(r'\\b[A-Z]\\b', text)\n\ndef numeric_values(text):\n    return re.findall(r'\\d+', text)\n\nprint(uppercase_lowercase_special_char(\"uppercase\"))\nprint(uppercase_lowercase_special_char(\"lowercase\"))\nprint(uppercase_lowercase_special_char(\"special\"))\nprint(uppercase_lowercase_special_char(\"numeric\"))\nprint(numeric_values(\"numeric\"))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "import re\n\ndef uppercase_lowercase_number(string):\n    return re.findall(r\"[A-Z]\", string)\n\nprint(uppercase_lowercase_number(\"Alice is better than Bob\"))\nprint(uppercase_lowercase_number(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(uppercase_lowercase_number(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(uppercase_lowercase_number(\"1234567890\"))\nprint(uppercase_lowercase_number(\"1234567890123\"))\nprint(uppercase_lowercase_number(\"1234567890-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-123-123-123-123-123\"))\nprint(uppercase_lowercase_number(\"1234567890-123-"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "from re import sub\n\ndef find_uppercase(str):\n    return sub('[A-Z]','', str)\n\ndef find_lowercase(str):\n    return sub('[a-z]','', str)\n\ndef find_special_character(str):\n    return sub('[!@#$%^&*()_+-=|]+','', str)\n\ndef find_numeric(str):\n    return sub('[0-9]+','', str)\n\nif __name__ == '__main__':\n    str = \"abcdefghijklmnopqrstuvwxyz\"\n    print(find_uppercase(str))\n    print(find_lowercase(str))\n    print(find_special_character(str))\n    print(find_numeric(str))"
    },
    {
      "rank": 9,
      "score": 9.234050852198141,
      "candidate": "import re\n\ndef check_uppercase(s):\n    return bool(re.match(r\"[A-Z]\", s))\n\ndef check_lowercase(s):\n    return bool(re.match(r\"[a-z]\", s))\n\ndef check_special_char(s):\n    return bool(re.match(r\"[^a-zA-Z0-9]\", s))\n\ndef check_numeric(s):\n    return bool(re.match(r\"\\d+\", s))\n\ndef test():\n    assert check_uppercase(\"Hello World\") == True\n    assert check_lowercase(\"hello world\") == True\n    assert check_special_char(\"Hello world\") == True\n    assert check_numeric(\"123\") == True\n    assert check_numeric(\"a1b1c1d1e1f\") == False\n\nif __name__ == \"__main__\":\n    test()"
    },
    {
      "rank": 10,
      "score": 9.226766272351448,
      "candidate": "import re\n\ndef check_number(string):\n    regex = re.compile(r\"[0-9]+\")\n    return regex.match(string)\n\ndef check_uppercase(string):\n    regex = re.compile(r\"[A-Z]\")\n    return regex.match(string)\n\ndef check_lowercase(string):\n    regex = re.compile(r\"[a-z]\")\n    return regex.match(string)\n\ndef check_special(string):\n    regex = re.compile(r\"[^a-zA-Z0-9]\")\n    return regex.match(string)\n\ndef check_string(string):\n    regex = re.compile(r\"[^a-zA-Z0-9]\")\n    return regex.match(string)\n\ndef check_empty_string(string):\n    regex = re.compile(r\"\")\n    return regex.match(string)\n\ndef check_empty_string_no_match(string):\n    regex = re.compile(r\"\")\n    return regex.match(string)\n\ndef check_empty_string_no_match_no_match(string):\n    regex = re.compile(r\"\")\n    return regex.match(string)\n\nprint(check_number(\"212\"))\nprint(check_uppercase(\"212\"))\nprint(check_lowercase(\"212\"))\nprint(check_special(\"212\"))\nprint(check_string(\"\"))\nprint(check_empty_string(\"\"))\nprint(check_empty_string_no_match(\"\"))\nprint(check_empty_string_no_match_no_match(\"\"))"
    },
    {
      "rank": 11,
      "score": 9.21346272767743,
      "candidate": "import re\n\n\ndef get_uppercase_lowercase_special_characters(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    return re.sub(r'[A-Z]', '', str).upper() + re.sub(r'[a-z]', '', str).lower() + re.sub(r'[0-9]', '', str)\n\n\nprint(get_uppercase_lowercase_special_characters(\"ABCDEF\"))\nprint(get_uppercase_lowercase_special_characters(\"ABCDEF0\"))\nprint(get_uppercase_lowercase_special_characters(\"abc\"))\nprint(get_uppercase_lowercase_special_characters(\"123\"))\nprint(get_uppercase_lowercase_special_characters(\"ABCDEF1234\"))\nprint(get_uppercase_lowercase_special_characters(\"ABCDEF1234567\"))"
    },
    {
      "rank": 12,
      "score": 9.205959372648458,
      "candidate": "import re\n\ndef find_uppercase(s):\n    return re.findall(r\"[A-Z]\", s)\n\ndef find_lowercase(s):\n    return re.findall(r\"[a-z]\", s)\n\ndef find_special_char(s):\n    return re.findall(r\"[!@#$%^&*()+={}|;:<>?\\/\\\\_`~|`~]\", s)\n\ndef find_numeric(s):\n    return re.findall(r\"[0-9]\", s)\n\n\ndef main():\n    print(find_uppercase(\"aBcDeF\"))\n    print(find_lowercase(\"AbCdEf\"))\n    print(find_special_char(\"AbCdEf\"))\n    print(find_numeric(\"1\"))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 9.183391466815202,
      "candidate": "import re\n\ndef is_uppercase(string):\n    return re.match(r'[A-Z]', string)\n\ndef is_lowercase(string):\n    return re.match(r'[a-z]', string)\n\ndef is_special_character(string):\n    return re.match(r'[^a-zA-Z0-9]', string)\n\ndef is_numeric(string):\n    return re.match(r'[0-9]', string)\n\n\nif __name__ == \"__main__\":\n    print(is_uppercase(\"Hello World\"))\n    print(is_lowercase(\"Hello World\"))\n    print(is_special_character(\"Hello World\"))\n    print(is_numeric(\"Hello World\"))"
    },
    {
      "rank": 14,
      "score": 9.177268828905222,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    return re.findall(r'\\w+', string)\n\n\ndef find_lowercase(string):\n    return re.findall(r'[a-z]+', string)\n\n\ndef find_special_char(string):\n    return re.findall(r'[!@#$%^&*()_+-=|]{1,}', string)\n\n\ndef find_numeric(string):\n    return re.findall(r'\\d+', string)\n\n\ndef main():\n    print(find_uppercase(\"Hello World!\"))\n    print(find_lowercase(\"Hello World!\"))\n    print(find_special_char(\"Hello World!\"))\n    print(find_numeric(\"Hello World!\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 15,
      "score": 9.122564458729856,
      "candidate": "from regex import search\n\n\ndef get_uppercase(string):\n    return search(r'\\w', string).group()\n\n\ndef get_lowercase(string):\n    return search(r'\\w+', string).group()\n\n\ndef get_special_characters(string):\n    return search(r'\\W+', string).group()\n\n\ndef get_numeric(string):\n    return search(r'\\d+', string).group()\n\n\nprint(get_uppercase('Hello World!'))\nprint(get_lowercase('Hello World!'))\nprint(get_special_characters('Hello World!'))\nprint(get_numeric('Hello World!'))"
    },
    {
      "rank": 16,
      "score": 8.973005557553902,
      "candidate": "import re\n\ndef is_uppercase(str):\n    return re.match('[A-Z]', str)\n\ndef is_lowercase(str):\n    return re.match('[a-z]', str)\n\ndef is_special_char(str):\n    return re.match('[!@#$%^&*()_+-=~|./:;<=>?@[\\\\]^_`{|}~]', str)\n\ndef is_numeric(str):\n    return re.match('[0-9]+', str)\n\n\ndef main():\n    str = input()\n    print(is_uppercase(str))\n    print(is_lowercase(str))\n    print(is_special_char(str))\n    print(is_numeric(str))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 17,
      "score": 8.95994420569242,
      "candidate": "import re\n\ndef upper_lower_numeric(str):\n    str = re.sub(r'[^a-zA-Z0-9]', '', str)\n    str = str.lower()\n    str = str.replace(' ', '')\n    str = str.replace(',', '')\n    str = str.replace('.', '')\n    str = str.replace('!', '')\n    str = str.replace('?', '')\n    str = str.replace(';', '')\n    str = str.replace('(', '')\n    str = str.replace(')', '')\n    str = str.replace('[', '')\n    str = str.replace(']', '')\n    str = str.replace('\\\\', '')\n    str = str.replace('~', '')\n    str = str.replace('$', '')\n    str = str.replace('%', '')\n    str = str.replace('^', '')\n    str = str.replace('&', '')\n    str = str.replace('*', '')\n    str = str.replace('+', '')\n    str = str.replace('-', '')\n    str = str.replace('.', '')\n    str = str.replace('/', '')\n    str = str.replace('?', '')\n    str = str.replace(';', '')\n    str = str.replace('(', '')\n    str = str.replace(')', '')\n    str = str.replace('[', '')\n    str = str.replace(']', '')\n    str = str.replace('\\\\', '')\n    str = str.replace('~', '')\n    str = str.replace('$', '')\n    str = str.replace('%', '')\n    str = str.replace('^', '')\n    str = str.replace('&', '')\n    str = str.replace('*', '')\n    str = str.replace('+', '')\n    str = str.replace('-', '')\n    str = str.replace('.', '')\n    str = str.replace('/', '')\n    str = str.replace('?', '')\n    str = str.replace(';', '')\n    str = str.replace('(', '')\n    str = str.replace(')', '')\n    str"
    },
    {
      "rank": 18,
      "score": 8.92876693971089,
      "candidate": "import re\n\n\ndef uppercase(s):\n    return re.sub(r\"[A-Z]\", lambda x: x.group()[0].upper(), s)\n\n\ndef lowercase(s):\n    return re.sub(r\"[a-z]\", lambda x: x.group()[0].lower(), s)\n\n\ndef special_char(s):\n    return re.sub(r\"[^a-zA-Z0-9]\", lambda x: x.group()[0], s)\n\n\ndef numeric(s):\n    return re.sub(r\"[^0-9]\", lambda x: x.group(), s)\n\n\nprint(uppercase(\"Hello\"))\nprint(lowercase(\"hello\"))\nprint(special_char(\"hello\"))\nprint(numeric(\"1\"))"
    },
    {
      "rank": 19,
      "score": 8.910084504002544,
      "candidate": "import re\n\ndef is_uppercase(s):\n    return bool(re.match(r\"[A-Z][a-z]+\", s))\n\ndef is_lowercase(s):\n    return bool(re.match(r\"[a-z][a-z]+\", s))\n\ndef is_special_char(s):\n    return bool(re.match(r\"[!@#$%^&*()_+={}[]|\\:;<>?/\\\\]\", s))\n\ndef is_numeric(s):\n    return bool(re.match(r\"\\d+\", s))\n\nprint(is_uppercase(\"hello world\"))\nprint(is_lowercase(\"HELLO WORLD\"))\nprint(is_special_char(\"@#$%^&*()_+={}[]|\\:;<>?/\\\\]\", \"HELLO WORLD\"))\nprint(is_numeric(\"123456789\"))\n\nprint(is_uppercase(\"hi there\"))\nprint(is_lowercase(\"HELLO WORLD\"))\nprint(is_special_char(\"@#$%^&*()_+={}[]|\\:;<>?/\\\\]\", \"HELLO WORLD\"))\nprint(is_numeric(\"123456789\"))\n\nprint(is_uppercase(\"Hi there\"))\nprint(is_lowercase(\"HELLO WORLD\"))\nprint(is_special_char(\"@#$%^&*()_+={}[]|\\:;<>?/\\\\]\", \"HELLO WORLD\"))\nprint(is_numeric(\"123456789\"))\n\nprint(is_uppercase(\"Hi there\"))\nprint(is_lowercase(\"HELLO WORLD\"))\nprint(is_special_char(\"@#$%^&*()_+={}[]|\\:;<>?/\\\\]\", \"HELLO WORLD\"))\nprint(is_numeric(\"123456789\"))\n\nprint(is_uppercase(\"Hi there\"))\nprint(is_lowercase(\"HELLO WORLD\"))\nprint(is_special_char(\"@#$%^&*()_+={}[]|\\:;<>?/\\\\]\", \"HELLO WORLD\"))\nprint(is_numeric(\"123456789\"))"
    },
    {
      "rank": 20,
      "score": 8.85571690049604,
      "candidate": "import re\n\ndef find_uppercase(string):\n    return re.findall(r'\\b[A-Z]\\b', string)\n\ndef find_lowercase(string):\n    return re.findall(r'\\b[a-z]\\b', string)\n\ndef find_special_character(string):\n    return re.findall(r'[!@#$%^&*()<>?/]', string)\n\ndef find_numeric(string):\n    return re.findall(r'\\d+', string)\n\ndef main():\n    print(find_uppercase(\"Hello World!\"))\n    print(find_lowercase(\"hello world!\"))\n    print(find_special_character(\"hi!\"))\n    print(find_numeric(\"1.2.3.4\"))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 21,
      "score": 8.850707355641543,
      "candidate": "import re\n\ndef uppercase(str):\n    return re.findall('[A-Z]', str)\n\ndef lowercase(str):\n    return re.findall('[a-z]', str)\n\ndef special_character(str):\n    return re.findall('[^a-zA-Z0-9]', str)\n\ndef numeric(str):\n    return re.findall('[0-9]', str)\n\nprint(uppercase(\"Hello World\"))\nprint(lowercase(\"Hello World\"))\nprint(special_character(\"Hello World\"))\nprint(numeric(\"Hello World\"))"
    },
    {
      "rank": 22,
      "score": 8.81367773444215,
      "candidate": "import re\n\n\ndef regex_uppercase(value):\n    return re.findall(r'[A-Z]', value)\n\n\ndef regex_lowercase(value):\n    return re.findall(r'[a-z]', value)\n\n\ndef regex_special_char(value):\n    return re.findall(r'[\\W]', value)\n\n\ndef regex_numeric(value):\n    return re.findall(r'\\d', value)\n\n\nif __name__ == \"__main__\":\n    print(regex_uppercase(\"hello\"))\n    print(regex_lowercase(\"hello\"))\n    print(regex_special_char(\"hello\"))\n    print(regex_numeric(\"hello\"))"
    },
    {
      "rank": 23,
      "score": 8.76828871349479,
      "candidate": "import re\n\n\ndef upper_lower_numeric(s):\n    upper_case_regex = re.compile(\"[A-Z]\")\n    lower_case_regex = re.compile(\"[a-z]\")\n    special_char_regex = re.compile(\"[\\(\\)\\[\\]\\:\\.\\-]\")\n    numeric_regex = re.compile(\"[0-9]\")\n    print(upper_case_regex.findall(s))\n    print(lower_case_regex.findall(s))\n    print(special_char_regex.findall(s))\n    print(numeric_regex.findall(s))\n\n\nupper_lower_numeric(\"abc123\")"
    },
    {
      "rank": 24,
      "score": 8.750282588864879,
      "candidate": "import re\n\ndef find_uppercase(string):\n    return re.findall('[A-Z][^A-Z]+', string)\n\ndef find_lowercase(string):\n    return re.findall('[a-z][^A-Z]+', string)\n\ndef find_special_character(string):\n    return re.findall('[^a-zA-Z]', string)\n\ndef find_numeric(string):\n    return re.findall('[0-9]+', string)\n\ndef main():\n    string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    print(find_uppercase(string))\n    print(find_lowercase(string))\n    print(find_special_character(string))\n    print(find_numeric(string))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 25,
      "score": 8.715724466237427,
      "candidate": "import re\n\ndef find_uppercase(string):\n    pattern = re.compile(r\"[A-Z]\")\n    return pattern.findall(string)\n\ndef find_lowercase(string):\n    pattern = re.compile(r\"[a-z]\")\n    return pattern.findall(string)\n\ndef find_special_char(string):\n    pattern = re.compile(r\"[!@#$%^&*()<>?/]\")\n    return pattern.findall(string)\n\ndef find_numeric(string):\n    pattern = re.compile(r\"\\d\")\n    return pattern.findall(string)\n\n\nprint(find_uppercase(\"Hello World\"))\nprint(find_lowercase(\"Hello World\"))\nprint(find_special_char(\"Hello World\"))\nprint(find_numeric(\"Hello World\"))"
    },
    {
      "rank": 26,
      "score": 8.632293453617281,
      "candidate": "import re\n\ndef uppercase(text):\n    return re.search(r\"([A-Z])\", text)\n\ndef lowercase(text):\n    return re.search(r\"([a-z])\", text)\n\ndef special_character(text):\n    return re.search(r\"[\\W_]\", text)\n\ndef numeric(text):\n    return re.search(r\"([0-9])\", text)\n\n\nif __name__ == \"__main__\":\n    text = \"hello\"\n    print(uppercase(text))\n    print(lowercase(text))\n    print(special_character(text))\n    print(numeric(text))"
    },
    {
      "rank": 27,
      "score": 8.625142247198651,
      "candidate": "import re\n\ndef upper_lower(s):\n    return re.search(r'[A-Z]', s).group()\n\ndef special_char(s):\n    return re.search(r'[\\w\\s]', s).group()\n\ndef num(s):\n    return re.search(r'\\d+', s).group()\n\ndef test():\n    assert upper_lower('Hello') == 'HELLO'\n    assert upper_lower('HELLO world') == 'HELLO WORLD'\n    assert upper_lower('Hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'hello world'\n    assert upper_lower('hello world') == 'hello world'\n    assert upper_lower('Hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper_lower('hello world') == 'HELLO WORLD'\n    assert upper"
    },
    {
      "rank": 28,
      "score": 8.623000730200317,
      "candidate": "import re\n\n\ndef is_uppercase(string):\n    return re.match(r\"[A-Z]\", string)\n\n\ndef is_lowercase(string):\n    return re.match(r\"[a-z]\", string)\n\n\ndef is_special_character(string):\n    return re.match(r\"[a-z0-9]\", string)\n\n\ndef is_numeric(string):\n    return re.match(r\"[0-9]+\", string)\n\n\ndef is_alphanumeric(string):\n    return re.match(r\"[^a-zA-Z0-9]\", string)\n\n\ndef is_alphanumeric_in_string(string):\n    return re.match(r\"[^a-zA-Z0-9]\", string)\n\n\ndef main():\n    string = \"Hello World\"\n    print(is_uppercase(string))\n    print(is_lowercase(string))\n    print(is_special_character(string))\n    print(is_numeric(string))\n    print(is_alphanumeric(string))\n    print(is_alphanumeric_in_string(string))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 29,
      "score": 8.610076160146226,
      "candidate": "from re import findall, search\n\n\ndef find_uppercase(str):\n    return findall(r'[A-Z]', str)\n\n\ndef find_lowercase(str):\n    return findall(r'[a-z]', str)\n\n\ndef find_special_char(str):\n    return findall(r'[!@#$%^&*()_+=-|./:;<=>?@[\\\\]^_`{|}~]', str)\n\n\ndef find_numeric(str):\n    return findall(r'\\d+', str)\n\n\ndef main():\n    str = input('Enter a string: ')\n    print(f'Uppercase: {find_uppercase(str)}')\n    print(f'Lowercase: {find_lowercase(str)}')\n    print(f'Special Characters: {find_special_char(str)}')\n    print(f'Numeric: {find_numeric(str)}')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 30,
      "score": 8.608819999274287,
      "candidate": "import re\n\ndef uppercase(str):\n    return re.findall(r'\\w{2,}', str)\n\ndef lowercase(str):\n    return re.findall(r'[a-z]', str)\n\ndef special_char(str):\n    return re.findall(r'[^a-zA-Z0-9]', str)\n\ndef numeric(str):\n    return re.findall(r'\\d', str)\n\nprint(uppercase(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(lowercase(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(special_char(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(numeric(\"abcdefghijklmnopqrstuvwxyz\"))"
    },
    {
      "rank": 31,
      "score": 8.606486429141842,
      "candidate": "import re\n\ndef main():\n    text = 'Hello World!'\n    print('Uppercase:', re.findall(r'[A-Z]', text))\n    print('Lowercase:', re.findall(r'[a-z]', text))\n    print('Special Character:', re.findall(r'[!@#$%^&*()_+={}[]|\\:;<>.?/\\\\]', text))\n    print('Numeric:', re.findall(r'\\d', text))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 32,
      "score": 8.60156811074208,
      "candidate": "import re\n\ndef upper(str):\n    return re.sub(r\"[A-Z]\", \"\", str).upper()\n\ndef lower(str):\n    return re.sub(r\"[a-z]\", \"\", str).lower()\n\ndef special(str):\n    return re.sub(r\"[^A-Za-z0-9]\", \"\", str).lower()\n\ndef num(str):\n    return re.sub(r\"[^0-9]\", \"\", str)\n\nprint(upper(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(lower(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(special(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))\nprint(num(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))"
    },
    {
      "rank": 33,
      "score": 8.542875062379007,
      "candidate": "import re\n\n\ndef upper_lower(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    string = re.sub(r'([A-Z])([a-z])', r'\\1 \\2', string)\n    return string\n\n\ndef special_char(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    string = re.sub(r'[^A-Za-z0-9\\s]', '', string)\n    return string\n\n\ndef num(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    string = re.sub(r'\\d+', '', string)\n    return string\n\n\nif __name__ == '__main__':\n    string = 'abcdefghijklmnopqrstuvwxyz'\n    string = upper_lower(string)\n    string = special_char(string)\n    string = num(string)\n    print(string)"
    },
    {
      "rank": 34,
      "score": 8.53012858503943,
      "candidate": "import re\n\ndef find_uppercase(str):\n    return re.findall('[A-Z]', str)\n\ndef find_lowercase(str):\n    return re.findall('[a-z]', str)\n\ndef find_special_characters(str):\n    return re.findall('[^A-Za-z0-9]', str)\n\ndef find_numbers(str):\n    return re.findall('[0-9]', str)\n\ndef main():\n    print(find_uppercase(\"hello\"))\n    print(find_lowercase(\"Hello\"))\n    print(find_special_characters(\"hello\"))\n    print(find_numbers(\"Hello\"))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 35,
      "score": 8.48796797856353,
      "candidate": "import re\n\ndef uppercase(text):\n    return re.sub(r\"([A-Z])\", r\" \\1\", text)\n\ndef lowercase(text):\n    return re.sub(r\"([a-z])\", r\" \\1\", text)\n\ndef special_characters(text):\n    return re.sub(r\"[!@#$%^&*()_+=|;:<>./\\\\]\", r\" \\1\", text)\n\ndef numeric(text):\n    return re.sub(r\"([0-9])\", r\" \\1\", text)\n\nprint(uppercase(\"Hello World!\"))\nprint(lowercase(\"hello world!\"))\nprint(special_characters(\"hello world!\"))\nprint(numeric(\"1234\"))"
    },
    {
      "rank": 36,
      "score": 8.478208546788407,
      "candidate": "import re\n\n\ndef upper_case(string):\n    pattern = re.compile(r\"[A-Z]\")\n    return pattern.findall(string)\n\n\ndef lowercase(string):\n    pattern = re.compile(r\"[a-z]\")\n    return pattern.findall(string)\n\n\ndef special_char(string):\n    pattern = re.compile(r\"[!@#$%^&*()_+|{}|~]\")\n    return pattern.findall(string)\n\n\ndef numeric(string):\n    pattern = re.compile(r\"\\d\")\n    return pattern.findall(string)\n\n\nprint(upper_case(\"hello world\"))\nprint(lowercase(\"hello world\"))\nprint(special_char(\"hello world\"))\nprint(numeric(\"hello world\"))"
    },
    {
      "rank": 37,
      "score": 8.437695832075478,
      "candidate": "import re\n\ndef uppercase_lowercase_numbers(str):\n    return re.sub(r'[A-Z]', r'', str).upper(), re.sub(r'[a-z]', r'', str).lower(), re.sub(r'[0-9]', r'', str).replace(r'.', r''), re.sub(r'[0-9]', r'', str).replace(r'-', r'')\n\nprint(uppercase_lowercase_numbers('aBcDeFgH'))\nprint(uppercase_lowercase_numbers('aBcDeFgH'))"
    },
    {
      "rank": 38,
      "score": 8.426531424889468,
      "candidate": "from re import findall\n\ndef upper_lower(string):\n    return findall(r'[A-Z]', string)\n\ndef special_char(string):\n    return findall(r'[^\\w]', string)\n\ndef numeric(string):\n    return findall(r'\\d+', string)\n\ndef main():\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))\n    print(upper_lower(\"Alice's Bob\"))"
    },
    {
      "rank": 39,
      "score": 8.408439383654278,
      "candidate": "import re\n\n\ndef lower_case(text: str) -> str:\n    return re.sub(r\"[A-Z]\", lambda x: x.group(0).lower(), text)\n\n\ndef upper_case(text: str) -> str:\n    return re.sub(r\"[a-z]\", lambda x: x.group(0).upper(), text)\n\n\ndef special_char(text: str) -> str:\n    return re.sub(r\"[!@#$%^&*()-+=?|_]\", lambda x: x.group(0).upper(), text)\n\n\ndef numeric(text: str) -> str:\n    return re.sub(r\"[-+]?\\d+\", lambda x: x.group(0).replace(\".\", \"\"), text)\n\n\nif __name__ == \"__main__\":\n    assert lower_case(\"Hello World!\") == \"hello world\"\n    assert lower_case(\"Hello World!!\") == \"hello world!\"\n    assert lower_case(\"Hello World!@$%^&*()-+=?|_\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_\") == \"hello world!\"\n    assert lower_case(\"Hello World!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!@#$%^&*()-+=?|_!\") == \"hello world!\"\n    assert lower_case(\"Hello World!!"
    },
    {
      "rank": 40,
      "score": 8.351614956112536,
      "candidate": "import re\n\n\ndef upper(s):\n    return re.sub(r\"[A-Z]\", \"\", s)\n\n\ndef lower(s):\n    return re.sub(r\"[a-z]\", \"\", s)\n\n\ndef special(s):\n    return re.sub(r\"[^a-zA-Z]\", \"\", s)\n\n\ndef numeric(s):\n    return re.sub(r\"\\d+\", \"\", s)\n\n\ndef main():\n    s = \"My name is Albert\"\n    print(upper(s))\n    print(lower(s))\n    print(special(s))\n    print(numeric(s))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 41,
      "score": 8.334608500525688,
      "candidate": "import re\n\ndef uppercase(string):\n    return re.findall('[A-Z]',string)\n\ndef lowercase(string):\n    return re.findall('[a-z]',string)\n\ndef special(string):\n    return re.findall('[0-9]',string)\n\ndef numeric(string):\n    return re.findall('[+-]?\\d+',string)\n\nprint(uppercase('Hello World'))\nprint(lowercase('hello world'))\nprint(special('hello world'))\nprint(numeric('hello world'))"
    },
    {
      "rank": 42,
      "score": 8.331556294201176,
      "candidate": "import re\n\ndef find_uppercase(s):\n    return re.findall(r'[A-Z][^A-Z]*', s)\n\ndef find_lowercase(s):\n    return re.findall(r'[a-z][^A-Z]*', s)\n\ndef find_special_character(s):\n    return re.findall(r'[\\W][^A-Z]', s)\n\ndef find_numeric(s):\n    return re.findall(r'\\d+', s)\n\n\ndef main():\n    print(find_uppercase(\"Hello World\"))\n    print(find_lowercase(\"Hello World\"))\n    print(find_special_character(\"Hello World\"))\n    print(find_numeric(\"Hello World\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 43,
      "score": 8.327375965969855,
      "candidate": "import re\n\ndef upper(s):\n    return re.sub(r'[A-Z]', lambda x: x.group(0).upper(), s)\n\ndef lower(s):\n    return re.sub(r'[a-z]', lambda x: x.group(0).lower(), s)\n\ndef special(s):\n    return re.sub(r'[!@#$%^&*()_+=|~-]+', lambda x: x.group(0).lower(), s)\n\ndef num(s):\n    return re.sub(r'[0-9]', lambda x: x.group(0), s)\n\nprint(upper(\"Hello World!\"))\nprint(lower(\"hello\"))\nprint(special(\"hello\"))\nprint(num(\"123\"))"
    },
    {
      "rank": 44,
      "score": 8.327367757082776,
      "candidate": "import re\n\ndef find_uppercase(string):\n    return re.findall(r'[A-Z]+', string)\n\ndef find_lowercase(string):\n    return re.findall(r'[a-z]+', string)\n\ndef find_special_character(string):\n    return re.findall(r'\\W+', string)\n\ndef find_numeric(string):\n    return re.findall(r'\\d+', string)\n\nprint(find_uppercase('abcdef'))\nprint(find_lowercase('abcdef'))\nprint(find_special_character('abcdef'))\nprint(find_numeric('abcdef'))"
    },
    {
      "rank": 45,
      "score": 8.298597569547805,
      "candidate": "import re\n\ndef is_uppercase(str):\n    return str.isupper()\n\ndef is_lowercase(str):\n    return str.islower()\n\ndef is_special_char(str):\n    return str.isalpha()\n\ndef is_numeric(str):\n    return str.isdigit()\n\ndef find_uppercase(str):\n    return re.findall(r'\\b[A-Z]\\b',str)\n\ndef find_lowercase(str):\n    return re.findall(r'\\b[a-z]\\b',str)\n\ndef find_special_char(str):\n    return re.findall(r'\\b[A-Za-z0-9_]\\b',str)\n\ndef find_numeric(str):\n    return re.findall(r'\\b[0-9]\\b',str)\n\nprint(find_uppercase('This is a test string'))\nprint(find_lowercase('This is a test string'))\nprint(find_special_char('This is a test string'))\nprint(find_numeric('This is a test string'))"
    },
    {
      "rank": 46,
      "score": 8.251903304236286,
      "candidate": "import re\n\ndef find_uppercase(str):\n    return re.findall(r\"[A-Z]\", str)\n\ndef find_lowercase(str):\n    return re.findall(r\"[a-z]\", str)\n\ndef find_special_char(str):\n    return re.findall(r\"[^A-Za-z0-9]\", str)\n\ndef find_numeric(str):\n    return re.findall(r\"[0-9]\", str)\n\n\nif __name__ == '__main__':\n    assert find_uppercase(\"Hello world!\") == ['H', 'l', 'L', 'o', 'w', 'o', 'r', 'l', 'l', 'o', 'w', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l', 'o', 'r', 'l"
    },
    {
      "rank": 47,
      "score": 8.211579567659316,
      "candidate": "import re\n\ndef find_uppercase(string):\n    upper_case = re.findall(r'[A-Z]', string)\n    return upper_case\n\ndef find_lowercase(string):\n    lowercase = re.findall(r'[a-z]', string)\n    return lowercase\n\ndef find_special(string):\n    special = re.findall(r'[!@#$%^&*()_+=\\\\]', string)\n    return special\n\ndef find_numeric(string):\n    numeric = re.findall(r'\\d+', string)\n    return numeric\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    string = \"this is a test string\"\n    print(find_uppercase(string))\n    print(find_lowercase(string))\n    print(find_special(string))\n    print(find_numeric(string))"
    },
    {
      "rank": 48,
      "score": 8.209707251476969,
      "candidate": "import re\n\ndef find_uppercase(string):\n    return re.findall(r'[A-Z]', string)\n\ndef find_lowercase(string):\n    return re.findall(r'[a-z]', string)\n\ndef find_special_char(string):\n    return re.findall(r'[!@#$%^&*()_+-=~?|~\\[\\]^_`{|}~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~\\[\\]~"
    },
    {
      "rank": 49,
      "score": 8.2048573255218,
      "candidate": "from re import search\n\n\ndef get_uppercase(string):\n    result = search(r'[A-Z]', string)\n    if result:\n        return result.group()\n    else:\n        return \"\"\n\n\ndef get_lowercase(string):\n    result = search(r'[a-z]', string)\n    if result:\n        return result.group()\n    else:\n        return \"\"\n\n\ndef get_special_character(string):\n    result = search(r'[!@#$%^&*()<>?/[]{}'.replace(' ', ''), string)\n    if result:\n        return result.group()\n    else:\n        return \"\"\n\n\ndef get_number(string):\n    result = search(r'[0-9]+', string)\n    if result:\n        return result.group()\n    else:\n        return \"\"\n\n\ndef main():\n    string = input('Enter the string: ')\n    print(f\"Uppercase: {get_uppercase(string)}\")\n    print(f\"Lowercase: {get_lowercase(string)}\")\n    print(f\"Special character: {get_special_character(string)}\")\n    print(f\"Number: {get_number(string)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 50,
      "score": 8.185309335307622,
      "candidate": "from re import match\n\ndef find_uppercase_lowercase_special_character(s):\n    return match(\"[A-Z]\", s).group()\n\ndef find_numeric_values(s):\n    return match(\"[0-9]+\", s).group()\n\nprint(find_uppercase_lowercase_special_character(\"This is a test\"))\nprint(find_numeric_values(\"This is a test\"))"
    },
    {
      "rank": 51,
      "score": 8.179564342560925,
      "candidate": "import re\n\ndef find_uppercase(string):\n    return re.findall(\"[A-Z]\", string)\n\ndef find_lowercase(string):\n    return re.findall(\"[a-z]\", string)\n\ndef find_special_character(string):\n    return re.findall(\"[!@#$%^&*()_+=|[]{}|~`+-=<>/\\\\|]\", string)\n\ndef find_numeric(string):\n    return re.findall(\"[0-9]+\", string)\n\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\"))\nprint(find_uppercase(\"Alice\""
    },
    {
      "rank": 52,
      "score": 8.172253082181854,
      "candidate": "import re\n\ndef get_uppercase(string):\n    return re.sub(r'([A-Z])', r'\\1', string)\n\ndef get_lowercase(string):\n    return re.sub(r'([a-z])', r'\\1', string)\n\ndef get_special(string):\n    return re.sub(r'([a-z0-9])', r'\\1', string)\n\ndef get_num(string):\n    return re.sub(r'([0-9])', r'\\1', string)\n\n\nprint(get_uppercase('Hello World!'))\nprint(get_lowercase('HELLO WORLD!'))\nprint(get_special('HELLO WORLD!'))\nprint(get_num('0'))"
    },
    {
      "rank": 53,
      "score": 8.144125099485041,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    result = re.findall(r'[A-Z]+', string)\n    return result\n\n\ndef find_lowercase(string):\n    result = re.findall(r'[a-z]+', string)\n    return result\n\n\ndef find_special_character(string):\n    result = re.findall(r'[!@#$%^&*()_+=~|}{~]', string)\n    return result\n\n\ndef find_numeric(string):\n    result = re.findall(r'\\d+', string)\n    return result\n\n\ndef main():\n    string = input('Enter string: ')\n    print(find_uppercase(string))\n    print(find_lowercase(string))\n    print(find_special_character(string))\n    print(find_numeric(string))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 54,
      "score": 8.143591138329747,
      "candidate": "import re\n\ndef is_upper(s):\n    return re.search(r'\\w', s).group() == s\n\ndef is_lower(s):\n    return re.search(r'[a-z]+', s).group() == s\n\ndef is_num(s):\n    return re.search(r'\\d', s).group() == s\n\ndef is_special(s):\n    return re.search(r'[A-Z]+', s).group() == s\n\n\nif __name__ == \"__main__\":\n    print(is_upper(\"Hello World!\"))\n    print(is_lower(\"hello world!\"))\n    print(is_num(\"12345\"))\n    print(is_special(\"Hello World!\"))"
    },
    {
      "rank": 55,
      "score": 8.121884567141883,
      "candidate": "import re\n\ndef find_uppercase(text):\n    return re.findall('[A-Z]', text)\n\ndef find_lowercase(text):\n    return re.findall('[a-z]', text)\n\ndef find_special_character(text):\n    return re.findall('[!@#$%^&*()_+=]', text)\n\ndef find_numeric(text):\n    return re.findall('[0-9]', text)\n\nprint(find_uppercase('hello'))\nprint(find_lowercase('hello'))\nprint(find_special_character('hello'))\nprint(find_numeric('hello'))"
    },
    {
      "rank": 56,
      "score": 8.040197642997851,
      "candidate": "import re\n\ndef uppercase(str):\n    return re.sub(r'[A-Z]','', str)\n\ndef lowercase(str):\n    return re.sub(r'[a-z]','', str)\n\ndef special(str):\n    return re.sub(r'[^A-Za-z0-9]', '', str)\n\ndef numeric(str):\n    return re.sub(r'\\d+', '', str)\n\nprint(uppercase('Hello World'))\nprint(lowercase('Hello World'))\nprint(special('Hello World'))\nprint(numeric('Hello World'))"
    },
    {
      "rank": 57,
      "score": 7.990432406683839,
      "candidate": "import re\n\n# Example 1\n\nstring = \"It's a great day!\"\n\nprint(\"Uppercase: \" + str(re.findall(r\"\\W+\", string)))\nprint(\"Lowercase: \" + str(re.findall(r\"\\W+\", string.lower())))\nprint(\"Special characters: \" + str(re.findall(r\"\\W+\", string.title())))\nprint(\"Numeric: \" + str(re.findall(r\"\\d+\", string)))\n\n# Example 2\n\nstring = \"It's a great day!\"\n\nprint(\"Uppercase: \" + str(re.findall(r\"[A-Z]\", string)))\nprint(\"Lowercase: \" + str(re.findall(r\"[a-z]\", string)))\nprint(\"Special characters: \" + str(re.findall(r\"[A-Z]\", string.title())))\nprint(\"Numeric: \" + str(re.findall(r\"\\d+\", string)))"
    },
    {
      "rank": 58,
      "score": 7.915588979966494,
      "candidate": "import re\n\n\ndef upper(s):\n    return re.sub(r'[A-Z]', lambda x: x.group(0).upper(), s)\n\n\ndef lower(s):\n    return re.sub(r'[a-z]', lambda x: x.group(0).lower(), s)\n\n\ndef special(s):\n    return re.sub(r'[^A-Za-z0-9]', lambda x: x.group(0).upper(), s)\n\n\ndef num(s):\n    return re.sub(r'[^0-9]', lambda x: x.group(0).upper(), s)\n\n\nif __name__ == '__main__':\n    print(upper(\"hello\"))\n    print(lower(\"hello\"))\n    print(special(\"hello\"))\n    print(num(\"hello\"))"
    },
    {
      "rank": 59,
      "score": 7.8912769574414305,
      "candidate": "from re import sub\n\ndef is_uppercase(str):\n    return str.isupper()\n\ndef is_lowercase(str):\n    return str.islower()\n\ndef is_special_character(str):\n    return str.isalpha()\n\ndef is_numeric(str):\n    return str.isdigit()\n\ndef main():\n    str = 'uppercase'\n    print(is_uppercase(str))\n    str = 'lowercase'\n    print(is_lowercase(str))\n    str ='special_character'\n    print(is_special_character(str))\n    str = 'numeric'\n    print(is_numeric(str))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 60,
      "score": 7.868947655733293,
      "candidate": "from re import findall\n\n\ndef regex(string):\n    return findall(r\"[A-Z]+|[a-z]+\", string)\n\n\nif __name__ == \"__main__\":\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))\n\n    string = \"CamelCase\"\n    print(regex(string))"
    },
    {
      "rank": 61,
      "score": 7.84634113240411,
      "candidate": "import re\n\ndef is_uppercase(string):\n    return re.match(r'[A-Z]', string)\n\ndef is_lowercase(string):\n    return re.match(r'[a-z]', string)\n\ndef is_special_char(string):\n    return re.match(r'[\\W_]', string)\n\ndef is_numeric(string):\n    return re.match(r'[0-9]', string)\n\nprint(is_uppercase('This is an upper case string'))\nprint(is_lowercase('This is an lowercase string'))\nprint(is_special_char('This is a special character string'))\nprint(is_numeric('This is a numeric string'))"
    },
    {
      "rank": 62,
      "score": 7.834022619458933,
      "candidate": "import re\n\ndef search(value):\n    upper = re.findall(r\"[A-Z]\", value)\n    lower = re.findall(r\"[a-z]\", value)\n    special = re.findall(r\"[!@#$%^&*()_+={}[]|:;<>./?]\", value)\n    num = re.findall(r\"[0-9]+\", value)\n    return upper, lower, special, num\n\n\nprint(search(\"abc123\"))\nprint(search(\"abc\"))\nprint(search(\"abc123\"))\nprint(search(\"abc123123\"))\nprint(search(\"abc123123123\"))\nprint(search(\"abc123123123123\"))\nprint(search(\"abc123123123123123\"))\nprint(search(\"abc123123123123123123\"))"
    },
    {
      "rank": 63,
      "score": 7.7320703513377165,
      "candidate": "import re\n\ndef uppercase(string):\n    return re.sub(r'[A-Z]','',string).upper()\n\ndef lowercase(string):\n    return re.sub(r'[a-z]','',string).lower()\n\ndef special_char(string):\n    return re.sub(r'[!@#$%^&*()<>?\\/]{2,}', '',string).strip()\n\ndef numeric(string):\n    return re.sub(r'\\d+','',string).strip()\n\nprint(uppercase('hello world'))\nprint(lowercase('hello world'))\nprint(special_char('hello world'))\nprint(numeric('hello world'))"
    },
    {
      "rank": 64,
      "score": 7.705183449260731,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    upper = re.findall(r'[A-Z]', string)\n    return upper\n\n\ndef find_lowercase(string):\n    lowercase = re.findall(r'[a-z]', string)\n    return lowercase\n\n\ndef find_special_character(string):\n    special_character = re.findall(r'[!#$%&\\'\\(\\)\\*\\+,\\-\\./:;<=>?@\\[\\\\]^_`{|}~`{|}~`{|}~`~`{|}~`~`{|}~`~`{|}~`~`{|}~`~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|}~`{|"
    },
    {
      "rank": 65,
      "score": 7.562924366763077,
      "candidate": "import re\n\ndef upper(string):\n    return re.findall(r\"[A-Z]\", string)\n\ndef lower(string):\n    return re.findall(r\"[a-z]\", string)\n\ndef special(string):\n    return re.findall(r\"[^A-Za-z0-9]\", string)\n\ndef numeric(string):\n    return re.findall(r\"[0-9]\", string)\n\n\n\nprint(upper(\"Hello world\"))\nprint(lower(\"hello\"))\nprint(special(\"hello\"))\nprint(numeric(\"12345\"))"
    },
    {
      "rank": 66,
      "score": 7.4878043221155455,
      "candidate": "import re\n\n\ndef is_uppercase(s):\n    return re.match(\"[A-Z]\", s) is not None\n\n\ndef is_lowercase(s):\n    return re.match(\"[a-z]\", s) is not None\n\n\ndef is_special_character(s):\n    return re.match(\"[0-9]\", s) is not None\n\n\ndef is_numeric(s):\n    return re.match(\"[0-9]\", s) is not None\n\n\nif __name__ == \"__main__\":\n    print(is_uppercase(\"A-Z\"))\n    print(is_lowercase(\"a-z\"))\n    print(is_special_character(\"0\"))\n    print(is_numeric(\"0\"))"
    },
    {
      "rank": 67,
      "score": 7.464609382504557,
      "candidate": "import re\n\ndef find_uppercase(str):\n    return re.findall('[A-Z]', str)\n\ndef find_lowercase(str):\n    return re.findall('[a-z]', str)\n\ndef find_special_character(str):\n    return re.findall('[^a-zA-Z]', str)\n\ndef find_numeric(str):\n    return re.findall('\\d+', str)\n\nprint(find_uppercase('ABC'))\nprint(find_lowercase('ABC'))\nprint(find_special_character('ABC'))\nprint(find_numeric('123'))"
    },
    {
      "rank": 68,
      "score": 7.4506599871439985,
      "candidate": "import re\n\ndef find_uppercase(string):\n    pattern = re.compile('[A-Z]+')\n    return pattern.findall(string)\n\ndef find_lowercase(string):\n    pattern = re.compile('[a-z]+')\n    return pattern.findall(string)\n\ndef find_special_char(string):\n    pattern = re.compile('[^A-Za-z0-9]')\n    return pattern.findall(string)\n\ndef find_numeric(string):\n    pattern = re.compile('[^0-9]')\n    return pattern.findall(string)\n\nprint(find_uppercase(\"How are you?\"))\nprint(find_lowercase(\"how are you?\"))\nprint(find_special_char(\"How are you?\"))\nprint(find_numeric(\"10\"))"
    },
    {
      "rank": 69,
      "score": 7.134571892399572,
      "candidate": "import re\n\ndef uppercase(text):\n    return re.sub(r'[A-Z]', '', text).upper()\n\ndef lowercase(text):\n    return re.sub(r'[a-z]', '', text).lower()\n\ndef special(text):\n    return re.sub(r'[^a-zA-Z0-9]', '', text).upper() + re.sub(r'[^a-zA-Z0-9]', '', text).lower() + re.sub(r'[^a-zA-Z0-9]', '', text).digits\n\ndef numeric(text):\n    return re.sub(r'[^0-9]', '', text).upper() + re.sub(r'[^0-9]', '', text).lower() + re.sub(r'[^0-9]', '', text).digits\n\nif __name__ == \"__main__\":\n    print(uppercase('Ahoy'))\n    print(lowercase('Ahoy'))\n    print(special('Ahoy'))\n    print(numeric('Ahoy'))\n\n    print(uppercase('Ahoy1'))\n    print(lowercase('Ahoy1'))\n    print(special('Ahoy1'))\n    print(numeric('Ahoy1'))"
    },
    {
      "rank": 70,
      "score": 3.574206237197771,
      "candidate": "import re\n\n\ndef uppercase_lowercase_special_numbers(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_2(s):\n    return re.findall(r'[a-z]', s)\n\n\ndef uppercase_lowercase_special_numbers_3(s):\n    return re.findall(r'[A-Z][a-z]', s)\n\n\ndef uppercase_lowercase_special_numbers_4(s):\n    return re.findall(r'[A-Z][a-z]', s)\n\n\ndef uppercase_lowercase_special_numbers_5(s):\n    return re.findall(r'[a-z][a-z]', s)\n\n\ndef uppercase_lowercase_special_numbers_6(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_7(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_8(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_9(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_10(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_11(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_12(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_13(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_lowercase_special_numbers_14(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef uppercase_"
    },
    {
      "rank": 71,
      "score": 3.3110951983465275,
      "candidate": "import re\n\n\ndef find_upper(string):\n    return re.findall('[A-Z]', string)\n\n\ndef find_lower(string):\n    return re.findall('[a-z]', string)\n\n\ndef find_special_char(string):\n    return re.findall('[0-9]', string)\n\n\ndef find_num(string):\n    return re.findall('[0-9]', string)\n\n\nif __name__ == '__main__':\n    print(find_upper('Hi'))\n    print(find_lower('Hi'))\n    print(find_special_char('Hi'))\n    print(find_num('Hi'))"
    },
    {
      "rank": 72,
      "score": 3.3024189894079314,
      "candidate": "import re\n\ndef find_uppercase_lowercase_special_char(text):\n    regex_uppercase = re.compile(r\"[A-Z]\")\n    regex_lowercase = re.compile(r\"[a-z]\")\n    regex_special_char = re.compile(r\"[^a-zA-Z0-9]\")\n    regex_num = re.compile(r\"[0-9]\")\n    upper_case = regex_uppercase.findall(text)\n    lowercase = regex_lowercase.findall(text)\n    special_char = regex_special_char.findall(text)\n    num = regex_num.findall(text)\n\n    return upper_case, lowercase, special_char, num"
    },
    {
      "rank": 73,
      "score": 3.283774656487643,
      "candidate": "import re\n\n\ndef uppercase(string):\n    return re.findall(r'\\b[A-Z]\\b', string)\n\n\ndef lowercase(string):\n    return re.findall(r'\\b[a-z]\\b', string)\n\n\ndef special(string):\n    return re.findall(r'\\W', string)\n\n\ndef numeric(string):\n    return re.findall(r'\\d+', string)\n\n\nif __name__ == '__main__':\n    print(uppercase(\"Hello World!\"))\n    print(lowercase(\"hello world!\"))\n    print(special(\"Hello World!\"))\n    print(numeric(\"1.23456789\"))"
    },
    {
      "rank": 74,
      "score": 3.2547897763563194,
      "candidate": "import re\n\n\ndef find_uppercase(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef find_lowercase(s):\n    return re.findall(r'[a-z]', s)\n\n\ndef find_special_char(s):\n    return re.findall(r'[!@#$%^&*()-+=/][a-zA-Z]', s)\n\n\ndef find_num(s):\n    return re.findall(r'[0-9]', s)\n\n\nprint(find_uppercase(\"Hello World!\"))\nprint(find_lowercase(\"Hello World!\"))\nprint(find_special_char(\"Hello World!\"))\nprint(find_num(\"Hello World!\"))"
    },
    {
      "rank": 75,
      "score": 3.237904766037402,
      "candidate": "import re\n\ndef uppercase(string):\n    return re.sub(r\"([A-Z])\", r\"\\1\", string)\n\ndef lowercase(string):\n    return re.sub(r\"([a-z])\", r\"\\1\", string)\n\ndef special_char(string):\n    return re.sub(r\"([a-z0-9])\", r\"\\1\", string)\n\ndef numeric(string):\n    return re.sub(r\"([0-9])\", r\"\\1\", string)\n\ndef test_case(test, expected):\n    result = uppercase(test)\n    if result == expected:\n        print(\"Test case {} passed\".format(test))\n    else:\n        print(\"Test case {} failed\".format(test))\n        print(\"Expected: {}\".format(expected))\n        print(\"Actual: {}\".format(result))\n\ntest_case(\"uppercase\", \"Uppercase\")\ntest_case(\"lowercase\", \"Lowercase\")\ntest_case(\"special_char\", \"Special Characters\")\ntest_case(\"numeric\", \"Numeric\")"
    },
    {
      "rank": 76,
      "score": 3.1591129042651405,
      "candidate": "import re\n\n\ndef search_uppercase(s):\n    return re.search(r'[A-Z]', s)\n\n\ndef search_lowercase(s):\n    return re.search(r'[a-z]', s)\n\n\ndef search_special_character(s):\n    return re.search(r'[!@#$%^&*()_+=|.;:<>/?\\\\^~`{|}~]', s)\n\n\ndef search_numeric(s):\n    return re.search(r'[0-9]', s)\n\n\nif __name__ == '__main__':\n    s = 'abcdefghijklmnopqrstuvwxyz'\n    print(search_uppercase(s))\n    print(search_lowercase(s))\n    print(search_special_character(s))\n    print(search_numeric(s))"
    },
    {
      "rank": 77,
      "score": 3.153981387433482,
      "candidate": "import re\n\n\ndef find_uppercase(str):\n    return re.findall(r\"[A-Z]\", str)\n\n\ndef find_lowercase(str):\n    return re.findall(r\"[a-z]\", str)\n\n\ndef find_special_char(str):\n    return re.findall(r\"[A-Z]\", str)\n\n\ndef find_numbers(str):\n    return re.findall(r\"[0-9]\", str)\n\n\ndef main():\n    print(find_uppercase(\"Hello World\"))\n    print(find_lowercase(\"Hello World\"))\n    print(find_special_char(\"Hello World\"))\n    print(find_numbers(\"Hello World\"))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 78,
      "score": 3.1121071677647665,
      "candidate": "import re\n\n\ndef find_uppercase(s):\n    return re.findall(r'[A-Z]', s)\n\n\ndef find_lowercase(s):\n    return re.findall(r'[a-z]', s)\n\n\ndef find_special(s):\n    return re.findall(r'[!@#$%^&*()<>?/\\\\]', s)\n\n\ndef find_num(s):\n    return re.findall(r'\\d', s)\n\n\ndef main():\n    s = \"abcdefghijklmnopqrstuvwxyz\"\n    print(find_uppercase(s))\n    print(find_lowercase(s))\n    print(find_special(s))\n    print(find_num(s))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 79,
      "score": 3.1065216697662232,
      "candidate": "import re\n\n\ndef check_upper(string):\n    return bool(re.search(r'[A-Z]', string))\n\n\ndef check_lower(string):\n    return bool(re.search(r'[a-z]', string))\n\n\ndef check_special(string):\n    return bool(re.search(r'[!@#$%^&*()_+=]', string))\n\n\ndef check_num(string):\n    return bool(re.search(r'\\d+', string))\n\n\ndef check(string):\n    if check_upper(string):\n        print('uppercase')\n    elif check_lower(string):\n        print('lowercase')\n    elif check_special(string):\n        print('special character')\n    elif check_num(string):\n        print('numeric')\n    else:\n        print('not a valid string')\n\n\nif __name__ == '__main__':\n    check('hello')"
    },
    {
      "rank": 80,
      "score": 3.0750083041854706,
      "candidate": "import re\n\ndef check_value(string):\n    \"\"\"\n    :param string:\n    :return:\n    \"\"\"\n    upper = re.findall('[A-Z]', string)\n    lower = re.findall('[a-z]', string)\n    digit = re.findall('[0-9]', string)\n    special = re.findall('[!@#$%^&*()_+={}|:;<>./?', string)\n    return [upper, lower, digit, special]\n\n\ndef test_check_value():\n    \"\"\"\n    :return:\n    \"\"\"\n    assert check_value(\"a\") == [\"a\", \"a\", \"a\", \"a\"]\n    assert check_value(\"A\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"aA\") == [\"a\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"a\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"a\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"a\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"a\", \"A\", \"A\", \"A\"]\n    assert check_value(\"A123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"a123\") == [\"A\", \"A\", \"A\", \"A\"]\n    assert check_value(\"A123\") == [\"A\", \"A\", \"A\", \"A\"]"
    },
    {
      "rank": 81,
      "score": 3.064747714451474,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    result = re.findall(r\"[A-Z]\", string)\n    return result\n\n\ndef find_lowercase(string):\n    result = re.findall(r\"[a-z]\", string)\n    return result\n\n\ndef find_special_characters(string):\n    result = re.findall(r\"[^\\w]\", string)\n    return result\n\n\ndef find_numbers(string):\n    result = re.findall(r\"[\\d]+\", string)\n    return result\n\n\nprint(find_uppercase(\"Hello world\"))\nprint(find_lowercase(\"Hello world\"))\nprint(find_special_characters(\"Hello world\"))\nprint(find_numbers(\"Hello world\"))"
    },
    {
      "rank": 82,
      "score": 3.0343860028100584,
      "candidate": "import re\n\n\ndef find_uppercase(text: str) -> list:\n    return [i for i in re.findall(\"[A-Z]\", text)]\n\n\ndef find_lowercase(text: str) -> list:\n    return [i for i in re.findall(\"[a-z]\", text)]\n\n\ndef find_special_char(text: str) -> list:\n    return [i for i in re.findall(\"[^a-zA-Z]\", text)]\n\n\ndef find_numeric(text: str) -> list:\n    return [i for i in re.findall(\"[0-9]\", text)]\n\n\nif __name__ == \"__main__\":\n    print(find_uppercase(\"Hello world\"))\n    print(find_lowercase(\"Hello world\"))\n    print(find_special_char(\"Hello world\"))\n    print(find_numeric(\"Hello world\"))"
    },
    {
      "rank": 83,
      "score": 3.0300940402978926,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    return re.sub(r\"[A-Z]\", \" \", string).upper()\n\n\ndef find_lowercase(string):\n    return re.sub(r\"[a-z]\", \" \", string).lower()\n\n\ndef find_special_char(string):\n    return re.sub(r\"[^a-z0-9]\", \" \", string).replace(\" \", \"\")\n\n\ndef find_numeric(string):\n    return re.sub(r\"[^0-9]\", \" \", string).replace(\" \", \"\")\n\n\nprint(find_uppercase(\"hello world\"))\nprint(find_lowercase(\"hello world\"))\nprint(find_special_char(\"hello world\"))\nprint(find_numeric(\"hello world\"))"
    },
    {
      "rank": 84,
      "score": 3.0284458407260058,
      "candidate": "import re\n\n\ndef regex(input_str):\n    # input_str = \"1-5\"\n    # input_str = \"a-z\"\n    # input_str = \"1-5-2\"\n    # input_str = \"1-5-2-3\"\n    # input_str = \"1-5-2-3-4\"\n    # input_str = \"1-5-2-3-4-5\"\n    # input_str = \"1-5-2-3-4-5-6\"\n    # input_str = \"1-5-2-3-4-5-6-7\"\n    # input_str = \"1-5-2-3-4-5-6-7-8\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11-12\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11-12-13\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11-12-13-14\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11-12-13-14-15\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16\"\n    # input_str = \"1-5-2-3-4-5-6-7-8-9-10-11-12-13-14-15-16-17\"\n    # input_str = \"1"
    },
    {
      "rank": 85,
      "score": 2.9641490324596456,
      "candidate": "import re\n\ndef check_uppercase(value):\n    return re.match(r'[A-Z]', value).group()\n\ndef check_lowercase(value):\n    return re.match(r'[a-z]', value).group()\n\ndef check_special_character(value):\n    return re.match(r'[!@#$%^&*()_+=-{}[]|\\?|~`]', value).group()\n\ndef check_numeric(value):\n    return re.match(r'\\d+', value).group()\n\n\nprint(check_uppercase(\"hello\"))\nprint(check_lowercase(\"hello\"))\nprint(check_special_character(\"hello\"))\nprint(check_numeric(\"hello\"))"
    },
    {
      "rank": 86,
      "score": 2.957138066636933,
      "candidate": "import re\n\ndef get_uppercase_lowercase_special_characters(string):\n    return re.findall(r'[A-Z]', string)\n\ndef get_numeric_values(string):\n    return re.findall(r'\\d+', string)\n\ndef get_special_characters(string):\n    return re.findall(r'[!@#$%^&*()_+=||]', string)\n\nif __name__ == \"__main__\":\n    assert get_uppercase_lowercase_special_characters(\"Hello World\") == [\"H\", \"l\", \"l\", \"N\", \"o\", \"w\", \"r\", \"W\"]\n    assert get_uppercase_lowercase_special_characters(\"Hello World!\") == [\"H\", \"l\", \"l\", \"N\", \"o\", \"w\", \"r\", \"W\"]\n    assert get_numeric_values(\"12345\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"12345.5\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"1234567890\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"12345.5\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"12345.5.1\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"12345.5.1.1\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"1234567890.1\") == [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    assert get_numeric_values(\"123456789"
    },
    {
      "rank": 87,
      "score": 2.907307721355581,
      "candidate": "import re\n\n\ndef find_uppercase_lowercase_special_characters(s):\n    return re.search(r'[A-Z]', s).group()\n\n\ndef find_numeric(s):\n    return re.search(r'[-+]?\\d*\\.\\d*|\\d+', s).group()\n\n\nprint(find_uppercase_lowercase_special_characters(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I am a string\"))\nprint(find_numeric(\"I"
    },
    {
      "rank": 88,
      "score": 2.9066578543673205,
      "candidate": "import re\n\n\ndef is_uppercase(string):\n    return bool(re.match(r'[A-Z]', string))\n\n\ndef is_lowercase(string):\n    return bool(re.match(r'[a-z]', string))\n\n\ndef is_special_character(string):\n    return bool(re.match(r'[!#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~]', string))\n\n\ndef is_numeric(string):\n    return bool(re.match(r'\\d+', string))\n\n\ndef main():\n    string = \"Hello World!\"\n    print(is_uppercase(string))\n    print(is_lowercase(string))\n    print(is_special_character(string))\n    print(is_numeric(string))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 89,
      "score": 2.9041441634861234,
      "candidate": "import re\n\n\ndef upper_lower_special_numeric(string):\n    return re.findall(r\"[A-Z]\", string)\n\n\nif __name__ == \"__main__\":\n    print(upper_lower_special_numeric(\"Arabic\"))"
    },
    {
      "rank": 90,
      "score": 2.857201981002466,
      "candidate": "import re\n\n# Write your function here.\ndef test_uppercase(str_value):\n    upper_case = re.search(r\"([A-Z])\", str_value)\n    print(upper_case)\n\n# Write your function here.\ndef test_lowercase(str_value):\n    lowercase = re.search(r\"([a-z])\", str_value)\n    print(lowercase)\n\n# Write your function here.\ndef test_special_character(str_value):\n    special_character = re.search(r\"([!@#$%^&*()_+=\\\\])\", str_value)\n    print(special_character)\n\n# Write your function here.\ndef test_numeric(str_value):\n    numeric = re.search(r\"([0-9]+)\", str_value)\n    print(numeric)\n\n# Testing\ntest_uppercase(\"This is a test\")\ntest_lowercase(\"This is a test\")\ntest_special_character(\"This is a test\")\ntest_numeric(\"This is a test\")"
    },
    {
      "rank": 91,
      "score": 2.856340515228137,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    upper_case = re.findall(r'[A-Z]', string)\n    return upper_case\n\n\ndef find_lowercase(string):\n    lowercase = re.findall(r'[a-z]', string)\n    return lowercase\n\n\ndef find_special_character(string):\n    special_character = re.findall(r'[^A-Z]', string)\n    return special_character\n\n\ndef find_numeric(string):\n    numeric = re.findall(r'\\d', string)\n    return numeric\n\n\nstring = input()\nprint(find_uppercase(string))\nprint(find_lowercase(string))\nprint(find_special_character(string))\nprint(find_numeric(string))"
    },
    {
      "rank": 92,
      "score": 2.844455316488794,
      "candidate": "import re\n\n\ndef find_uppercase(string):\n    return re.findall('[A-Z]', string)\n\n\ndef find_lowercase(string):\n    return re.findall('[a-z]', string)\n\n\ndef find_special_character(string):\n    return re.findall('[^a-zA-Z]', string)\n\n\ndef find_numeric(string):\n    return re.findall('[0-9]', string)\n\n\nprint(find_uppercase(\"hello\"))\nprint(find_lowercase(\"hello\"))\nprint(find_special_character(\"hello\"))\nprint(find_numeric(\"1234567890\"))"
    },
    {
      "rank": 93,
      "score": 2.8256908659352984,
      "candidate": "import re\n\n\ndef uppercase(string):\n    return re.findall(r'[A-Z]', string)\n\n\ndef lowercase(string):\n    return re.findall(r'[a-z]', string)\n\n\ndef special_char(string):\n    return re.findall(r'[^A-Za-z0-9]+', string)\n\n\ndef numeric(string):\n    return re.findall(r'\\d+', string)\n\n\nprint(uppercase(\"hello world\"))\nprint(lowercase(\"hello world\"))\nprint(special_char(\"hello world\"))\nprint(numeric(\"hello world\"))"
    },
    {
      "rank": 94,
      "score": 2.790154179905153,
      "candidate": "import re\n\n\ndef get_uppercase(string):\n    return re.findall(r'[A-Z]', string)\n\n\ndef get_lowercase(string):\n    return re.findall(r'[a-z]', string)\n\n\ndef get_special_character(string):\n    return re.findall(r'[^A-Za-z0-9]', string)\n\n\ndef get_numeric(string):\n    return re.findall(r'\\d+', string)\n\n\nprint(get_uppercase('Hello World'))\nprint(get_lowercase('Hello World'))\nprint(get_special_character('Hello World'))\nprint(get_numeric('Hello World'))"
    },
    {
      "rank": 95,
      "score": 2.7768482953976403,
      "candidate": "import re\n\ndef check(s):\n    return re.match(r'[A-Z]', s) is not None\n\n\nprint(check('A'))\nprint(check('a'))\nprint(check('A1'))\nprint(check('A1a'))\nprint(check('A1a1'))\nprint(check('A1a1a'))\nprint(check('A1a1a1'))\nprint(check('a1a1a1'))\nprint(check('A1a1a1a1a'))\nprint(check('A1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a'))\nprint(check('a1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1a1a1a'))\nprint(check('A1a1a1a1a1a1a1a1"
    },
    {
      "rank": 96,
      "score": 2.739842567800982,
      "candidate": "import re\n\n\ndef uppercase(string):\n    return re.findall(r\"[A-Z]\", string)\n\n\ndef lowercase(string):\n    return re.findall(r\"[a-z]\", string)\n\n\ndef special_char(string):\n    return re.findall(r\"[^A-Z]\", string)\n\n\ndef numeric(string):\n    return re.findall(r\"\\d+\", string)\n\n\ndef test():\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"foo\") == [\"F\", \"o\", \"R\", \"l\"]\n    assert uppercase(\"bar\") == [\"B\", \"o\", \"R\", \""
    },
    {
      "rank": 97,
      "score": 2.6860223526963285,
      "candidate": "import re\n\n\ndef find_uppercase(text):\n    return re.findall(r'[A-Z]', text)\n\n\ndef find_lowercase(text):\n    return re.findall(r'[a-z]', text)\n\n\ndef find_special_character(text):\n    return re.findall(r'[\\w]', text)\n\n\ndef find_numeric(text):\n    return re.findall(r'\\d+', text)\n\n\nif __name__ == '__main__':\n    print(find_uppercase('hello'))\n    print(find_lowercase('hello'))\n    print(find_special_character('hello'))\n    print(find_numeric('hello'))"
    },
    {
      "rank": 98,
      "score": 2.5882623248414864,
      "candidate": "import re\n\n\ndef upper_case(text: str):\n    return re.search(r'\\b[A-Z]\\b', text).group()\n\n\ndef lowercase(text: str):\n    return re.search(r'\\b[a-z]\\b', text).group()\n\n\ndef special_characters(text: str):\n    return re.search(r'\\b[\\w\\-]+\\b', text).group()\n\n\ndef numeric(text: str):\n    return re.search(r'\\d+', text).group()\n\n\ndef main():\n    print(upper_case('a1b2c3'))\n    print(lowercase('a1b2c3'))\n    print(special_characters('a1b2c3'))\n    print(numeric('a1b2c3'))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 99,
      "score": 2.5621858525860595,
      "candidate": "import re\n\n\ndef is_upper(s):\n    return re.search(r'\\b[A-Z]\\b', s)\n\n\ndef is_lower(s):\n    return re.search(r'\\b[a-z]\\b', s)\n\n\ndef is_special(s):\n    return re.search(r'\\b[A-Z0-9]\\b', s)\n\n\ndef is_numeric(s):\n    return re.search(r'\\b[0-9]\\b', s)\n\n\nprint(is_upper(\"Hi there\"))\nprint(is_lower(\"Hi there\"))\nprint(is_special(\"Hi there\"))\nprint(is_numeric(\"Hi there\"))"
    },
    {
      "rank": 100,
      "score": 2.4652754719209597,
      "candidate": "import re\n\n\ndef is_uppercase(str):\n    return bool(re.search(r\"[A-Z]\", str))\n\n\ndef is_lowercase(str):\n    return bool(re.search(r\"[a-z]\", str))\n\n\ndef is_special(str):\n    return bool(re.search(r\"[\\W]\", str))\n\n\ndef is_number(str):\n    return bool(re.search(r\"\\d\", str))\n\n\ndef is_number_float(str):\n    return bool(re.search(r\"\\d+\\.\\d+\", str))\n\n\nif __name__ == \"__main__\":\n    assert is_uppercase(\"Hello world!\") is True\n    assert is_uppercase(\"hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is True\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is True\n    assert is_uppercase(\"hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is True\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is True\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False\n    assert is_uppercase(\"Hello world!\") is False"
    }
  ]
}