{
  "timestamp": "2025-09-14T15:15:25.714974",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 380,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def list_to_dict(list):\n    return dict((k,list[i]) for i,k in enumerate(list))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def list_to_dict(list):\n    d = {}\n    for i in range(len(list)):\n        if i == len(list) - 1:\n            d[list[i]] = list[i]\n        else:\n            d[list[i]] = list[i] + \":\" + list[i + 1]\n    return d\n\nprint(list_to_dict([1,2,3,4,5,6,7,8,9]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def nested_list_to_dict(list_of_list):\n    d = {}\n    for i in list_of_list:\n        d[i[0]] = nested_list_to_dict(i[1])\n    return d\n\nprint(nested_list_to_dict([[1,2],[3,4],[5,6]]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def list_to_dict(lst):\n    d = {}\n    for item in lst:\n        if type(item) == list:\n            d[item[0]] = list_to_dict(item[1:])\n        else:\n            d[item] = item\n    return d\n\n\nif __name__ == \"__main__\":\n    lst = [1, [2, 3], [4, 5, 6, 7]]\n    print(list_to_dict(lst))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def dict_to_list(dictionary):\n    return [dict_to_list(sub_dict) for sub_dict in dictionary]\n\n\ndef main():\n    dictionary = [\n        {\"name\": \"Alice\", \"age\": 25},\n        {\"name\": \"Bob\", \"age\": 30},\n        {\"name\": \"Charlie\", \"age\": 40}\n    ]\n    print(dict_to_list(dictionary))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def list_to_nested_dict(l):\n    d = {}\n    for i in l:\n        if isinstance(i, list):\n            if len(i) == 0:\n                d[i[0]] = i[1]\n            else:\n                d[i[0]] = list_to_nested_dict(i[1:])\n        else:\n            d[i] = i\n    return d\n\n\nif __name__ == '__main__':\n    print(list_to_nested_dict([1, [2, 3], 4]))\n    print(list_to_nested_dict([1, [2, 3], 4, 5]))\n    print(list_to_nested_dict([1, [2, 3], 4, 5, 6]))\n    print(list_to_nested_dict([1, [2, 3], 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def nested_dict_to_list(dictionary):\n    return [dictionary[key] for key in dictionary]\n\n\ndef main():\n    d = {'a': 1, 'b': 2, 'c': 3}\n    print(nested_dict_to_list(d))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def list_to_dict(list):\n    d = {}\n    for i in range(len(list)):\n        d[list[i]] = i\n    return d\n\nif __name__ == \"__main__\":\n    print(list_to_dict([1,2,3,4,5]))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def list_to_dict(list):\n    dict = {}\n    for item in list:\n        if item in dict:\n            dict[item] = dict[item] + 1\n        else:\n            dict[item] = 1\n    return dict"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def list_to_dict(l):\n    d = {}\n    for i in l:\n        if i in d:\n            d[i].append(l)\n        else:\n            d[i] = [l]\n    return d\n\nprint(list_to_dict([1,2,3,4,5]))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def list2dict(lst):\n    if len(lst) == 1:\n        return lst[0]\n    return {lst[0][0]: list2dict(lst[1:])}"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def nested_list_to_dict(nested_list):\n    \"\"\"\n    Convert a list of lists to a nested dictionary.\n    \"\"\"\n    result = {}\n    for i in range(len(nested_list)):\n        result[nested_list[i][0]] = nested_list[i][1]\n    return result"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def list2dict(list):\n    dict = {}\n    for i in list:\n        if i not in dict.keys():\n            dict[i] = {}\n        dict[i] = list2dict(dict[i])\n    return dict\n\n\ndef main():\n    list = [1, 2, 3, 4]\n    dict = list2dict(list)\n    print(dict)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 14,
      "score": 9.370583536698913,
      "candidate": "def nested_dict(lst):\n    d = {}\n    for i in range(len(lst)):\n        d[lst[i]] = lst[i + 1]\n    return d\n\n\nprint(nested_dict([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 15,
      "score": 9.234050852198141,
      "candidate": "def to_dict(list_of_items):\n    new_dict = {}\n    for i in range(len(list_of_items)):\n        new_dict[list_of_items[i][0]] = to_dict(list_of_items[i][1:])\n    return new_dict\n\n\nprint(to_dict([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 16,
      "score": 9.21346272767743,
      "candidate": "def list2dict(list):\n    return {list[i]: list2dict(list[i+1:]) if i < len(list)-1 else list[0] for i in range(len(list))}\n\nif __name__ == \"__main__\":\n    print(list2dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 17,
      "score": 9.205959372648458,
      "candidate": "def list_to_dict(lst):\n    dic = {}\n    for i in range(len(lst)):\n        if lst[i] not in dic:\n            dic[lst[i]] = {}\n        dic[lst[i]][i] = lst[i + 1]\n    return dic\n\n\nprint(list_to_dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 18,
      "score": 9.183391466815202,
      "candidate": "def list_to_dict(list_of_values):\n    dictionary = {}\n    for value in list_of_values:\n        dictionary.setdefault(value, []).append(value)\n    return dictionary\n\n\nif __name__ == \"__main__\":\n    list_of_values = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n    print(list_to_dict(list_of_values))"
    },
    {
      "rank": 19,
      "score": 9.177268828905222,
      "candidate": "def list_to_dict(items):\n    return {item[0]: {item[1]: {k: v for k, v in item[2].items() if k!= \"name\"} for item in items} for item in items}\n\n\nif __name__ == '__main__':\n    print(list_to_dict([['a', 'b'], ['c', 'd']]))"
    },
    {
      "rank": 20,
      "score": 9.122564458729856,
      "candidate": "def dict_to_list(d):\n    lst = []\n    for key, val in d.items():\n        if isinstance(val, dict):\n            lst.append({key: dict_to_list(val)})\n        else:\n            lst.append(val)\n    return lst\n\nif __name__ == '__main__':\n    d = {1: {'a': 1, 'b': 2}, 2: {'a': 3, 'b': 4}}\n    print(dict_to_list(d))"
    },
    {
      "rank": 21,
      "score": 8.973005557553902,
      "candidate": "def list_to_dict(list_):\n    result = {}\n    for item in list_:\n        result[item[0]] = item[1]\n    return result\n\n\nif __name__ == '__main__':\n    list_ = [[1, 2], [3, 4], [5, 6]]\n    print(list_to_dict(list_))"
    },
    {
      "rank": 22,
      "score": 8.932217008005624,
      "candidate": "def dict2list(dictionary):\n    list2dict = {}\n    for key, value in dictionary.items():\n        if type(value) is list:\n            if key not in list2dict:\n                list2dict[key] = []\n            list2dict[key].append(value)\n    return list2dict\n\nprint(dict2list({\"a\": [\"b\",\"c\"], \"b\": [\"d\",\"e\"]}))"
    },
    {
      "rank": 23,
      "score": 8.910084504002544,
      "candidate": "def nested_dict(list_of_tuples):\n    nested_dict = {}\n    for t in list_of_tuples:\n        if len(t) == 1:\n            nested_dict[t[0]] = t[1]\n        else:\n            nested_dict[t[0]] = nested_dict.get(t[0], {})\n            nested_dict[t[0]].update(nested_dict.get(t[1], {}))\n    return nested_dict\n\n\nprint(nested_dict([(1, \"first\"), (2, \"second\")]))"
    },
    {
      "rank": 24,
      "score": 8.902145503295483,
      "candidate": "def list_to_dict(list):\n    dict = {}\n    for i in range(len(list)):\n        dict[list[i]] = list_to_dict(list[i+1:])\n    return dict\n\nprint(list_to_dict([1,2,3,4]))"
    },
    {
      "rank": 25,
      "score": 8.855395696632057,
      "candidate": "def to_dict(list_of_dict):\n    new_dict = {}\n    for i in range(len(list_of_dict)):\n        new_dict[list_of_dict[i]['key']] = to_dict(list_of_dict[i]['value'])\n    return new_dict\n\nif __name__ == '__main__':\n    list_of_dict = [\n        {'key': 'a', 'value': ['a1', 'a2']},\n        {'key': 'b', 'value': ['b1', 'b2']},\n        {'key': 'c', 'value': ['c1', 'c2']},\n    ]\n    print(to_dict(list_of_dict))"
    },
    {
      "rank": 26,
      "score": 8.850707355641543,
      "candidate": "def list2dict(a):\n    d = {}\n    for i in a:\n        if isinstance(i, list):\n            if isinstance(i[0], int):\n                d[i[0]] = list2dict(i[1:])\n            else:\n                d[i[0]] = dict2dict(i[1:])\n        else:\n            d[i] = dict2dict(i)\n    return d\n\n\ndef dict2list(d):\n    l = []\n    for i in d:\n        l.append(i)\n        l.extend(dict2list(d[i]))\n    return l\n\n\nif __name__ == \"__main__\":\n    a = [1, 2, 3, 4]\n    print(list2dict(a))\n    print(dict2list(list2dict(a)))"
    },
    {
      "rank": 27,
      "score": 8.8281618090209,
      "candidate": "def nested_list_to_dict(nested_list):\n    return {k: nested_list[k] for k in nested_list}"
    },
    {
      "rank": 28,
      "score": 8.750282588864879,
      "candidate": "def dict_to_list(lst):\n    if not lst:\n        return []\n    if len(lst) == 1:\n        return lst[0]\n    d = {}\n    for i in lst:\n        if i not in d:\n            d[i] = []\n        d[i].append(dict_to_list(i))\n    return d\n\n\nprint(dict_to_list([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 29,
      "score": 8.715724466237427,
      "candidate": "def list_to_dict(list_of_lists):\n    result = {}\n    for list_ in list_of_lists:\n        for key in list_:\n            if key not in result:\n                result[key] = {}\n            result[key] = result[key] + {list_[key]: list_}\n    return result\n\n\nprint(list_to_dict([[1, 2], [3, 4], [5, 6]]))"
    },
    {
      "rank": 30,
      "score": 8.692801520950061,
      "candidate": "def to_dict(list_of_dict):\n    dict_of_dict = {}\n    for i in list_of_dict:\n        if i not in dict_of_dict:\n            dict_of_dict[i] = {}\n        dict_of_dict[i] = to_dict(dict_of_dict[i])\n    return dict_of_dict\n\n\nlist_of_dict = [\n    {\n        \"a\": 1,\n        \"b\": {\n            \"c\": 2,\n            \"d\": {\"e\": 3},\n        },\n    },\n    {\n        \"a\": 1,\n        \"b\": {\n            \"c\": 2,\n            \"d\": {\"e\": 3},\n        },\n    },\n]\nprint(to_dict(list_of_dict))"
    },
    {
      "rank": 31,
      "score": 8.632293453617281,
      "candidate": "def list_to_dict(list_to_convert):\n    if len(list_to_convert) == 1:\n        return list_to_convert[0]\n\n    dict_to_return = {}\n    for item in list_to_convert:\n        if isinstance(item, list):\n            dict_to_return.update(list_to_dict(item))\n        else:\n            dict_to_return.update({item: list_to_dict(item)})\n\n    return dict_to_return\n\n\nif __name__ == '__main__':\n    list_to_convert = [[1, 2, 3, 4], [5, 6, 7, 8]]\n    print(list_to_dict(list_to_convert))"
    },
    {
      "rank": 32,
      "score": 8.625262456968262,
      "candidate": "def list_to_dict(list_of_dict):\n    dict_of_list = {}\n    for i in range(len(list_of_dict)):\n        if list_of_dict[i] not in dict_of_list:\n            dict_of_list[list_of_dict[i]] = []\n        dict_of_list[list_of_dict[i]].append(i)\n    return dict_of_list\n\nlist_of_dict = [\n    {\"name\": \"John\", \"age\": 32},\n    {\"name\": \"Lucy\", \"age\": 32},\n    {\"name\": \"Dave\", \"age\": 32},\n    {\"name\": \"Mary\", \"age\": 32},\n    {\"name\": \"Jane\", \"age\": 32},\n    {\"name\": \"Jane\", \"age\": 32},\n    {\"name\": \"Mary\", \"age\": 32},\n]\n\nprint(list_to_dict(list_of_dict))"
    },
    {
      "rank": 33,
      "score": 8.625142247198651,
      "candidate": "def list_to_dict(list):\n    if len(list) == 0:\n        return {}\n    if len(list) == 1:\n        return {'name':list[0]}\n\n    result = {'name': list[0]}\n    for i in range(1, len(list)):\n        result['name'] = {**result['name'], **list[i]}\n    return result\n\nprint(list_to_dict([1,2,3]))\nprint(list_to_dict([1,2,3,4]))\nprint(list_to_dict([1,2,3,4,5,6]))"
    },
    {
      "rank": 34,
      "score": 8.623000730200317,
      "candidate": "def nested_dict(list):\n    d = {}\n    for i in list:\n        d[i[0]] = nested_dict(i[1])\n    return d\n\n\nlist_of_lists = [[\"apples\", [\"bananas\", \"oranges\"]], [\"oranges\", [\"apples\", \"bananas\"]]]\nprint(nested_dict(list_of_lists))"
    },
    {
      "rank": 35,
      "score": 8.616253589228675,
      "candidate": "def nested_list_to_dict(nested_list):\n    nested_dict = {}\n    for i in nested_list:\n        if isinstance(i, list):\n            nested_dict[i[0]] = nested_list_to_dict(i[1:])\n        else:\n            nested_dict[i] = i\n    return nested_dict\n\n\nif __name__ == '__main__':\n    nested_list = [[1, [2, [3, 4]]], [[5, [6, 7]]]]\n    print(nested_list_to_dict(nested_list))"
    },
    {
      "rank": 36,
      "score": 8.610076160146226,
      "candidate": "def nested_dict_to_list(dictionary):\n    new_dict = {}\n    for key, value in dictionary.items():\n        new_dict[key] = nested_dict_to_list(value)\n\n    return new_dict\n\n\ndictionary = {'key': [1, 2, 3, 4, 5, 6, 7], 'value': [1, 2, 3, 4, 5, 6, 7]}\nprint(nested_dict_to_list(dictionary))"
    },
    {
      "rank": 37,
      "score": 8.606486429141842,
      "candidate": "def list_to_dict(lst):\n    # Initialize empty dictionary\n    dict = {}\n\n    # Iterate through each item in the list\n    for item in lst:\n        # If item is not in dictionary, add it to the dictionary\n        if item not in dict:\n            # Add the item to the dictionary\n            dict[item] = {}\n\n        # Get the dictionary\n        dict = dict[item]\n\n    return dict\n\n\nif __name__ == '__main__':\n    # Test\n    test = [\n        ['a', 'b', 'c'],\n        ['d', 'e', 'f'],\n        ['g', 'h', 'i']\n    ]\n\n    # Print the result\n    print(list_to_dict(test))"
    },
    {
      "rank": 38,
      "score": 8.60156811074208,
      "candidate": "def list_to_dict(list_to_convert):\n    if not list_to_convert:\n        return {}\n\n    if len(list_to_convert) == 1:\n        return list_to_convert[0]\n\n    return {list_to_convert[0][\"name\"]: list_to_convert}\n\n\nif __name__ == \"__main__\":\n    print(list_to_dict([]))\n    print(list_to_dict([{\"name\": \"Bob\"}]))\n    print(list_to_dict([{\"name\": \"Bob\", \"age\": 20}, {\"name\": \"Mary\", \"age\": 25}]))"
    },
    {
      "rank": 39,
      "score": 8.565425580227462,
      "candidate": "def list2dict(list):\n    d = {}\n    for i in range(len(list)):\n        if list[i] in d:\n            d[list[i]] = d[list[i]] + 1\n        else:\n            d[list[i]] = 1\n    return d\n\n\nprint(list2dict([1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 40,
      "score": 8.548876241946822,
      "candidate": "def dict_to_list(dict):\n    new_list = []\n    for key in dict:\n        new_list.append(dict[key])\n    return new_list\n\n\ndict_1 = {'key1': 'value1', 'key2': 'value2'}\ndict_2 = {'key3': 'value3', 'key4': 'value4'}\n\nprint(dict_to_list(dict_1))\nprint(dict_to_list(dict_2))"
    },
    {
      "rank": 41,
      "score": 8.53012858503943,
      "candidate": "def nested_dict(list_of_dict):\n    return dict(zip(list_of_dict[0], nested_dict(list_of_dict[1:])))\n\nprint(nested_dict([{\"a\": 1, \"b\": 2}, {\"a\": 3, \"b\": 4}]))"
    },
    {
      "rank": 42,
      "score": 8.499905739299377,
      "candidate": "def convert_list_to_nested_dict(lst):\n    d = {}\n    for i in range(len(lst)):\n        d[lst[i]] = lst[i+1]\n    return d\n\n\n\nprint(convert_list_to_nested_dict([1,2,3,4,5]))"
    },
    {
      "rank": 43,
      "score": 8.437695832075478,
      "candidate": "def dict_to_list(lst):\n    # write your code here\n    return [dict(zip(lst[0::2], lst[1::2])) for i in range(len(lst)//2)]\n\n\nif __name__ == \"__main__\":\n    lst = [1,2,3,4,5]\n    print(dict_to_list(lst))"
    },
    {
      "rank": 44,
      "score": 8.426531424889468,
      "candidate": "def list_to_dict(lst):\n    d = {}\n    for i in lst:\n        if i not in d:\n            d[i] = {}\n        d[i] = list_to_dict(d[i])\n    return d\n\n\nif __name__ == \"__main__\":\n    l = [\"a\", \"b\", \"c\", \"d\", \"e\"]\n    d = list_to_dict(l)\n    print(d)"
    },
    {
      "rank": 45,
      "score": 8.408439383654278,
      "candidate": "def list2dict(list):\n    d = {}\n    for i in range(len(list)):\n        if len(list[i]) > 1:\n            key = list[i][0]\n            d[key] = list2dict(list[i][1:])\n        else:\n            d[list[i][0]] = list2dict(list[i][1:])\n    return d\n\n\nif __name__ == \"__main__\":\n    print(list2dict([\"a\", [\"b\", \"c\"], [\"d\", \"e\"]]))"
    },
    {
      "rank": 46,
      "score": 8.386620303250325,
      "candidate": "def list2dict(list1):\n    return dict(list1)\n\nprint(list2dict([1, 2, 3, 4]))\nprint(list2dict([[1, 2, 3], 4]))\nprint(list2dict([{1: 2, 3: 4}, 5]))"
    },
    {
      "rank": 47,
      "score": 8.375312293858853,
      "candidate": "def nested_dict(dict_list):\n    new_dict = {}\n    for i in range(len(dict_list)):\n        new_dict[dict_list[i][0]] = dict_list[i][1]\n    return new_dict\n\n\nprint(nested_dict([['a', 'b'], ['c', 'd']]))"
    },
    {
      "rank": 48,
      "score": 8.351614956112536,
      "candidate": "def list_to_dict(list_of_list):\n    \"\"\"\n    :type list_of_list: list[str]\n    :rtype: dict[str, list[str]]\n    \"\"\"\n    dict_of_dict = {}\n    for i in range(len(list_of_list)):\n        dict_of_dict[list_of_list[i]] = list_of_list[i+1]\n    return dict_of_dict\n\nprint(list_to_dict([\"a\", \"b\", \"c\", \"d\"]))\nprint(list_to_dict([\"a\", \"b\", \"c\", \"d\", \"e\"]))\nprint(list_to_dict([\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"]))"
    },
    {
      "rank": 49,
      "score": 8.334608500525688,
      "candidate": "def list_to_dict(list_of_list):\n    dict_of_lists = {}\n    for i in range(len(list_of_list)):\n        if i!= 0:\n            dict_of_lists[list_of_list[i-1]] = list_of_list[i]\n        else:\n            dict_of_lists[list_of_list[i]] = list_of_list[i]\n    return dict_of_lists\n\n\nif __name__ == \"__main__\":\n    print(list_to_dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 50,
      "score": 8.331556294201176,
      "candidate": "def nested_list_to_dict(list):\n    d = {}\n    for i in range(len(list)):\n        d[list[i]] = list[i]\n    return d\n\n\nlist = [1, 2, 3, 4, 5, 6, 7]\nprint(nested_list_to_dict(list))"
    },
    {
      "rank": 51,
      "score": 8.327375965969855,
      "candidate": "def list_to_dict(list_of_items):\n    if len(list_of_items) == 1:\n        return {list_of_items[0]: 1}\n    else:\n        result = {}\n        for i in list_of_items:\n            result[i] = list_to_dict(list_of_items[:-1])\n            result[list_of_items[-1]] = result[i]\n        return result\n\n\nif __name__ == '__main__':\n    print(list_to_dict([1, 2, 3]))"
    },
    {
      "rank": 52,
      "score": 8.298597569547805,
      "candidate": "def nested_dict(data):\n    \"\"\"\n    :type data: list\n    :rtype: dict\n    \"\"\"\n    return {k: nested_dict(v) for k, v in enumerate(data)}\n\n\nprint(nested_dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 53,
      "score": 8.2938925966498,
      "candidate": "def list_to_dict(list):\n    return dict(list)\n\n\nprint(list_to_dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 54,
      "score": 8.251903304236286,
      "candidate": "def list_to_dict(l):\n    d = {}\n    for i in l:\n        d[i[0]] = i[1]\n    return d\n\n\ndef main():\n    l = [['1', '2', '3'], ['4', '5', '6']]\n    print(list_to_dict(l))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 55,
      "score": 8.214125058964552,
      "candidate": "def dict_to_list(d):\n    return {k: dict_to_list(v) for k, v in d.items()}\n\n\nif __name__ == '__main__':\n    d = {'a': [1, 2, 3], 'b': [4, 5, 6]}\n    d2 = dict_to_list(d)\n    print(d2)"
    },
    {
      "rank": 56,
      "score": 8.212735598038213,
      "candidate": "def nested_list_to_dict(nested_list):\n    if not nested_list:\n        return {}\n    nested_dict = {}\n    for item in nested_list:\n        nested_dict.setdefault(item, {})\n    return nested_dict\n\n\nprint(nested_list_to_dict([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 57,
      "score": 8.211579567659316,
      "candidate": "def list2dict(lst):\n    d = {}\n    for i in lst:\n        if type(i) == type([]):\n            d[i[0]] = list2dict(i[1])\n        elif type(i) == type({}):\n            d[i[0]] = dict(list2dict(i[1].items()))\n        else:\n            d[i[0]] = i\n    return d\n\nprint(list2dict([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 58,
      "score": 8.209707251476969,
      "candidate": "def list_to_dict(list_of_elements):\n    if len(list_of_elements) == 0:\n        return {}\n    else:\n        return {list_of_elements[0]: list_to_dict(list_of_elements[1:])}\n\nif __name__ == \"__main__\":\n    print(list_to_dict([1, 2, 3, 4, 5]))\n    print(list_to_dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 59,
      "score": 8.2048573255218,
      "candidate": "def list2dict(list1):\n    if not list1:\n        return {}\n    return {list1[0]: list2dict(list1[1:])}\n\n\nif __name__ == \"__main__\":\n    assert list2dict([1, 2]) == {\"1\": 1, \"2\": {}}\n    assert list2dict([1, 2, 3]) == {\"1\": 1, \"2\": {\"3\": {}}}"
    },
    {
      "rank": 60,
      "score": 8.185309335307622,
      "candidate": "def list_to_dict(list_of_list):\n    return {\n        item[0]: {\n            'name': item[1],\n            'type': item[2]\n        }\n        for item in list_of_list\n    }\n\n\ndef main():\n    list_of_list = [[1, 'Fred', 'David'], [2, 'Fred', 'David'], [3, 'Fred', 'David']]\n    print(list_to_dict(list_of_list))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 61,
      "score": 8.172253082181854,
      "candidate": "def convert(lst):\n    return {i: convert(j) for i,j in enumerate(lst)}\n\nif __name__ == \"__main__\":\n    print(convert([1,2,3,4]))\n    print(convert([[1,2,3],[4,5,6]]))\n    print(convert([[1,2,3],[4,5,6]]))"
    },
    {
      "rank": 62,
      "score": 8.144125099485041,
      "candidate": "def list2dict(list):\n    if len(list) == 1:\n        return list[0]\n    result = {}\n    for i in range(len(list)):\n        result[list[i]] = list2dict(list[0:i+1])\n        del list[0:i+1]\n    return result\n\n\nif __name__ == \"__main__\":\n    print(list2dict([[1,2,3], [4,5,6]]))\n    print(list2dict([[1,2], [3,4]]))\n    print(list2dict([[1,2,3,4,5], [6,7,8,9,10]]))\n    print(list2dict([[1,2,3,4,5], [6,7,8,9,10], [1,2,3,4,5]]))"
    },
    {
      "rank": 63,
      "score": 8.143591138329747,
      "candidate": "def nested_dict(x):\n    if not x:\n        return {}\n    elif isinstance(x[0], dict):\n        return x[0]\n    else:\n        return {x[0]: nested_dict(x[1:])}\n\n\nif __name__ == \"__main__\":\n    a = [\n        {\"a\": 1, \"b\": 2, \"c\": 3},\n        {\"a\": 4, \"b\": 5, \"c\": 6},\n        {\"a\": 7, \"b\": 8, \"c\": 9},\n    ]\n    print(nested_dict(a))"
    },
    {
      "rank": 64,
      "score": 8.105983444291466,
      "candidate": "def list_to_dict(list_of_dict):\n    dict = {}\n    for i in list_of_dict:\n        if i not in dict:\n            dict[i] = {}\n        dict[i] = dict[i] + 1\n    return dict\n\nlist_to_dict([{'a': 1, 'b': 2, 'c': 3}])"
    },
    {
      "rank": 65,
      "score": 8.040197642997851,
      "candidate": "def to_nested_dict(lst):\n    d = {}\n    for i in lst:\n        if i in d:\n            d[i] = d[i] + 1\n        else:\n            d[i] = 1\n    return d\n\n\nprint(to_nested_dict([1, 2, 3, 4, 5]))\nprint(to_nested_dict([1, 2, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 66,
      "score": 7.990432406683839,
      "candidate": "def nested_dict(data):\n    if not data:\n        return {}\n    if len(data) == 1:\n        return data[0]\n    return {k: nested_dict(v) for k, v in data[0].items()}\n\nprint(nested_dict([[1, 2, 3, 4], [5, 6, 7, 8]]))"
    },
    {
      "rank": 67,
      "score": 7.938028884277233,
      "candidate": "def list_to_dict(list_of_lists):\n    result = {}\n    for i in range(len(list_of_lists)):\n        result[list_of_lists[i][0]] = list_to_dict(list_of_lists[i][1])\n    return result\n\nif __name__ == '__main__':\n    print(list_to_dict([['a', 'b'], ['c', 'd'], ['e', 'f']]))"
    },
    {
      "rank": 68,
      "score": 7.915588979966494,
      "candidate": "def nested_dict(list_of_lists):\n    dictionary = {}\n    for i in list_of_lists:\n        if isinstance(i, list):\n            dictionary[i[0]] = nested_dict(i[1:])\n        else:\n            dictionary[i] = i\n    return dictionary\n\n\nif __name__ == '__main__':\n    print(nested_dict([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 69,
      "score": 7.8912769574414305,
      "candidate": "def list_to_dict(l):\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = {}\n        d[i] = list_to_dict(d[i])\n    return d\n\nprint(list_to_dict([1,2,3]))"
    },
    {
      "rank": 70,
      "score": 7.868947655733293,
      "candidate": "def list_to_dict(items):\n    return {\n        items[0]: list_to_dict(items[1:])\n    }\n\nif __name__ == \"__main__\":\n    print(list_to_dict([1,2,3,4,5]))"
    },
    {
      "rank": 71,
      "score": 7.834022619458933,
      "candidate": "def list_to_dict(list_of_dict):\n    return {k:list_of_dict[k] for k in list_of_dict}\n\n\nif __name__ == \"__main__\":\n    list_of_dict = [\n        {\"a\":1, \"b\":2},\n        {\"a\":3, \"b\":4},\n        {\"a\":5, \"b\":6},\n        {\"a\":7, \"b\":8},\n        {\"a\":9, \"b\":10},\n    ]\n    print(list_to_dict(list_of_dict))"
    },
    {
      "rank": 72,
      "score": 7.780351419995229,
      "candidate": "def list_to_dict(list_of_lists):\n    if len(list_of_lists) == 1:\n        return list_of_lists[0]\n    else:\n        return {\n            list_of_lists[0]['id']: list_to_dict(list_of_lists[1:])\n        }\n\n\nif __name__ == \"__main__\":\n    list_of_lists = [\n        {\n            'id': 1,\n            'name': 'Alice'\n        },\n        {\n            'id': 2,\n            'name': 'Bob'\n        },\n        {\n            'id': 3,\n            'name': 'Carol'\n        }\n    ]\n    print(list_to_dict(list_of_lists))"
    },
    {
      "rank": 73,
      "score": 7.738292593776799,
      "candidate": "def list2dict(list):\n    d = {}\n    for i in range(len(list)):\n        if type(list[i]) == list:\n            d[list[i][0]] = list2dict(list[i][1:])\n        else:\n            d[list[i]] = list[i]\n    return d\n\nlist = [[1,2],[3,4]]\nprint(list2dict(list))"
    },
    {
      "rank": 74,
      "score": 7.7320703513377165,
      "candidate": "import re\n\ndef nested_list_to_dict(nested_list):\n    nested_dict = {}\n    for item in nested_list:\n        if item in nested_dict:\n            nested_dict[item].append(nested_list.count(item))\n        else:\n            nested_dict[item] = [nested_list.count(item)]\n    return nested_dict\n\nnested_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(nested_list_to_dict(nested_list))"
    },
    {
      "rank": 75,
      "score": 7.5819855281879285,
      "candidate": "def list_to_dict(list):\n    return {list[i]:list[i+1] for i in range(len(list)-1)}\n\nprint(list_to_dict([1,2,3,4,5]))"
    },
    {
      "rank": 76,
      "score": 7.562924366763077,
      "candidate": "def list_to_dict(l):\n    d = {}\n    for i in l:\n        if i not in d:\n            d[i] = []\n        d[i].append(i)\n    return d"
    },
    {
      "rank": 77,
      "score": 7.4878043221155455,
      "candidate": "def nested_list_to_dict(list_of_elements):\n    \"\"\"\n    :type list_of_elements: List[List[str]]\n    :rtype: dict\n    \"\"\"\n    if len(list_of_elements) == 1:\n        return list_of_elements[0]\n    else:\n        return {\n            list_of_elements[0][0]: nested_list_to_dict(list_of_elements[1:]),\n            list_of_elements[-1][0]: nested_list_to_dict(list_of_elements[:-1])\n        }\n\n\nprint(nested_list_to_dict([[1,2,3], [4,5,6]]))\nprint(nested_list_to_dict([[1,2,3], [4,5,6]]))\nprint(nested_list_to_dict([[1,2,3], [4,5,6], [7,8,9]]))"
    },
    {
      "rank": 78,
      "score": 7.4506599871439985,
      "candidate": "def list_to_dict(lst):\n    result = {}\n    for i in range(len(lst)):\n        if lst[i] not in result:\n            result[lst[i]] = {}\n        result[lst[i]][lst[i + 1]] = lst[i + 2]\n    return result\n\nprint(list_to_dict([1, 2, 3, 4]))\nprint(list_to_dict([1, 2, 3, 4, 5]))"
    },
    {
      "rank": 79,
      "score": 7.134571892399572,
      "candidate": "def list_to_dict(list):\n    return {k:list_to_dict(v) for k,v in enumerate(list)}"
    },
    {
      "rank": 80,
      "score": 3.3285751677209414,
      "candidate": "def nested_dict(list_of_dict):\n    return dict(zip(list_of_dict[0].keys(), list_of_dict))\n\n\nlist_of_dict = [\n    {\"a\": 1, \"b\": 2, \"c\": 3},\n    {\"a\": 4, \"b\": 5, \"c\": 6},\n]\n\nresult = nested_dict(list_of_dict)\nprint(result)"
    },
    {
      "rank": 81,
      "score": 3.2165098997241497,
      "candidate": "def list2dict(list_of_lists):\n    return {\n        item[0]: {\n            \"count\": item[1],\n            \"data\": list_of_lists[item[1]]\n        } for item in enumerate(list_of_lists)\n    }\n\n\nlist1 = [\n    [1, 2, 3],\n    [4, 5, 6]\n]\n\nlist2 = [\n    [1, 2],\n    [3, 4]\n]\n\n\nprint(list2dict(list1))\nprint(list2dict(list2))"
    },
    {
      "rank": 82,
      "score": 3.210741908557325,
      "candidate": "def list_to_dict(list_to_convert):\n    return {\n        list_to_convert[0]: list_to_convert[1]\n    }\n\n\nlist_to_convert = [\n    {\n        \"name\": \"john\",\n        \"age\": 26\n    },\n    {\n        \"name\": \"jane\",\n        \"age\": 27\n    },\n    {\n        \"name\": \"susan\",\n        \"age\": 28\n    }\n]\n\nprint(list_to_dict(list_to_convert))"
    },
    {
      "rank": 83,
      "score": 3.1727344315416697,
      "candidate": "def convert_to_nested_dict(list_of_dicts):\n    return dict(list_of_dicts)"
    },
    {
      "rank": 84,
      "score": 3.155077981799036,
      "candidate": "def list_to_dict(lst):\n    dic = {}\n    for i in range(len(lst)):\n        dic[lst[i]] = lst[i+1]\n    return dic\n\ndef test_list_to_dict():\n    assert list_to_dict([[1,2,3],[4,5,6]]) == {1:[2,3],4:[5,6]}\n    assert list_to_dict([[1,2,3],[4,5,6],[7,8,9]]) == {1:[2,3],4:[5,6],7:[8,9]}\n    assert list_to_dict([[1,2,3],[4,5,6],[7,8,9],[10,11,12]]) == {1:[2,3],4:[5,6],7:[8,9],10:[11,12]}"
    },
    {
      "rank": 85,
      "score": 3.1360145930011454,
      "candidate": "def convert_list_to_dict(list_to_convert):\n    \"\"\"\n    :type list_to_convert: list\n    :rtype: dict\n    \"\"\"\n    return {i: convert_list_to_dict(list_to_convert[i]) for i in range(len(list_to_convert))}"
    },
    {
      "rank": 86,
      "score": 3.0413408595325158,
      "candidate": "def list_to_dict(list_):\n    \"\"\"\n    :type list_: list\n    :rtype: dict\n    \"\"\"\n    dict = {}\n    for i in list_:\n        if i not in dict:\n            dict[i] = []\n        dict[i].append(i)\n    return dict\n\n\ndef list_to_dict_2(list_):\n    \"\"\"\n    :type list_: list\n    :rtype: dict\n    \"\"\"\n    dict = {}\n    for i in list_:\n        if i not in dict:\n            dict[i] = {}\n        dict[i] = dict[i]\n    return dict\n\n\nif __name__ == '__main__':\n    assert list_to_dict([1, 2, 3]) == {'1': [1, 2, 3], '2': [], '3': []}\n    assert list_to_dict([1, 2, 3, 4]) == {'1': [1, 2, 3], '2': [], '3': [4], '4': []}\n    assert list_to_dict([1, 2, 3, 4, 5]) == {'1': [1, 2, 3], '2': [], '3': [4, 5], '4': [], '5': []}\n    assert list_to_dict([1, 2, 3, 4, 5, 6]) == {'1': [1, 2, 3], '2': [], '3': [4, 5, 6], '4': [], '5': [], '6': []}\n    assert list_to_dict([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == {'1': [1, 2, 3], '2': [], '3': [4, 5, 6], '4': [], '5': [7, 8, 9], '6': [10], '7': [], '8': [], '9': []}\n    assert list_to_dict([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == {'1': [1, 2, 3], '2': [], '3': [4, 5, 6], '"
    },
    {
      "rank": 87,
      "score": 3.0192697630724554,
      "candidate": "def to_nested_dict(lst):\n    \"\"\"\n    :type lst: List[int]\n    :rtype: dict\n    \"\"\"\n    dic = {}\n    for i in range(len(lst)):\n        dic[lst[i]] = lst[i+1]\n    return dic\n\n\nprint(to_nested_dict([1,2,3,4,5,6,7,8,9,10]))"
    },
    {
      "rank": 88,
      "score": 3.018279884330016,
      "candidate": "def convert_to_dict(l):\n    d = {}\n    for i in l:\n        if isinstance(i, dict):\n            d.update(i)\n        else:\n            d[i] = None\n    return d"
    },
    {
      "rank": 89,
      "score": 3.014180922984464,
      "candidate": "def nested_list_to_dict(nested_list):\n    nested_dict = {}\n    for item in nested_list:\n        nested_dict[item[0]] = nested_list_to_dict(item[1])\n    return nested_dict"
    },
    {
      "rank": 90,
      "score": 2.9508277913080994,
      "candidate": "def to_nested_dict(lst):\n    d = {}\n    for i in range(len(lst)):\n        d[lst[i][0]] = to_nested_dict(lst[i][1])\n    return d\n\n\nprint(to_nested_dict([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 91,
      "score": 2.9372084564021677,
      "candidate": "def dict_to_list(d):\n    result = {}\n    for k, v in d.items():\n        if k not in result:\n            result[k] = []\n        result[k].append(dict_to_list(v))\n    return result\n\n\nif __name__ == '__main__':\n    d = {'a': 1, 'b': 2, 'c': 3}\n    print(dict_to_list(d))"
    },
    {
      "rank": 92,
      "score": 2.935065401071245,
      "candidate": "def nested_dictionary(list_of_lists):\n    \"\"\"\n    :type list_of_lists: List[List[Any]]\n    :rtype: Dict[Any, Any]\n    \"\"\"\n    return {k: [nested_dictionary(v) for v in l] for k, l in enumerate(list_of_lists)}\n\n\nprint(nested_dictionary([[1, 2, 3], [4, 5, 6]]))"
    },
    {
      "rank": 93,
      "score": 2.8946310208472474,
      "candidate": "import json\n\n\ndef nested_list_to_dict(list_of_dict):\n    nested_dict = dict()\n    for key, value in list_of_dict.items():\n        if isinstance(value, list):\n            nested_dict[key] = nested_list_to_dict(value)\n        else:\n            nested_dict[key] = value\n    return nested_dict\n\n\nif __name__ == \"__main__\":\n    list_of_dict = [\n        {\"key\": \"value1\", \"key2\": \"value2\"},\n        {\"key\": \"value3\", \"key4\": \"value4\"},\n    ]\n    print(nested_list_to_dict(list_of_dict))"
    },
    {
      "rank": 94,
      "score": 2.8819196188593956,
      "candidate": "def list_to_nested_dict(list):\n    return {k: list_to_nested_dict(v) for k, v in enumerate(list)}"
    },
    {
      "rank": 95,
      "score": 2.864524851532924,
      "candidate": "def convert_to_nested_dict(list):\n    return dict(\n        (i, convert_to_nested_dict(j))\n        for i, j in enumerate(list)\n    )\n\n\nif __name__ == \"__main__\":\n    list_of_lists = [\n        [1, 2, 3, 4],\n        [5, 6, 7, 8],\n        [9, 10, 11, 12],\n    ]\n    print(convert_to_nested_dict(list_of_lists))"
    },
    {
      "rank": 96,
      "score": 2.848832716237111,
      "candidate": "def list2dict(l):\n    return {k: list2dict(v) for k, v in enumerate(l)}"
    },
    {
      "rank": 97,
      "score": 2.823764320123246,
      "candidate": "def nested_dict(dictionary):\n    return {key: nested_dict(value) for key, value in dictionary.items()}\n\nprint(nested_dict({'a': [1, 2, 3, 4, 5], 'b': [6, 7, 8, 9, 10]}))\n\n# Alternative\n\ndef nested_dict(dictionary):\n    return {key: nested_dict(value) if isinstance(value, dict) else value for key, value in dictionary.items()}\n\nprint(nested_dict({'a': [1, 2, 3, 4, 5], 'b': [6, 7, 8, 9, 10]}))\n\n# Alternative\n\ndef nested_dict(dictionary):\n    return {key: nested_dict(value) if isinstance(value, dict) else value for key, value in dictionary.items()}\n\nprint(nested_dict({'a': [1, 2, 3, 4, 5], 'b': [6, 7, 8, 9, 10]}))"
    },
    {
      "rank": 98,
      "score": 2.748796608943059,
      "candidate": "def list_to_dict(list_of_lists):\n    result = {}\n    for i in range(len(list_of_lists)):\n        result[list_of_lists[i][0]] = list_to_dict(list_of_lists[i][1])\n    return result\n\nprint(list_to_dict([[1,2,3], [4,5,6]]))"
    },
    {
      "rank": 99,
      "score": 2.6895103820228403,
      "candidate": "def convert_to_dict(lst):\n    \"\"\"\n    :type lst: list\n    :rtype: dict\n    \"\"\"\n    res = {}\n    for i in range(len(lst)):\n        if i == 0:\n            res[lst[i]] = lst[i]\n        else:\n            res[lst[i]] = {lst[i]: lst[i - 1]}\n    return res\n\n\nif __name__ == \"__main__\":\n    print(convert_to_dict([1, 2, 3, 4]))"
    },
    {
      "rank": 100,
      "score": 2.5884692739852473,
      "candidate": "def nested_dict(list_of_lists):\n    if len(list_of_lists) < 2:\n        return list_of_lists\n    else:\n        result = {}\n        for i in range(len(list_of_lists)):\n            result[list_of_lists[i][0]] = nested_dict(list_of_lists[i][1:])\n        return result\n\n\nif __name__ == \"__main__\":\n    print(nested_dict([[1, [2, 3, 4, 5]], [[6, 7, 8, 9]], [[10, 11, 12], [13, 14, 15]]]))"
    }
  ]
}