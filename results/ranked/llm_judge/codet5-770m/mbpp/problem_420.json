{
  "timestamp": "2025-09-14T15:32:59.319557",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 420,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def common_element(l1, l2):\n    return len(set(l1) & set(l2)) > 0\n\nprint(common_element([1, 2, 3, 4, 5], [3, 4, 5, 6]))\nprint(common_element([1, 2, 3, 4, 5], [4, 5, 6, 7]))\nprint(common_element([1, 2, 3, 4, 5], [1, 4, 5, 6]))\nprint(common_element([1, 2, 3, 4, 5], [5, 6, 7, 8]))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def check_common_elements(a,b):\n    if len(set(a)) == 1 and len(set(b)) == 1:\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    print(check_common_elements([1,2,3],[1,2,3]))\n    print(check_common_elements([1,2,3],[1,2,3,4]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def have_common(list1, list2):\n    common = []\n    for x in list1:\n        for y in list2:\n            if x == y:\n                common.append(x)\n    return len(common) > 0\n\n\nprint(have_common([1, 2, 3, 4], [1, 2, 3, 4]))\nprint(have_common([1, 2, 3, 4], [2, 3, 4]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def common_element(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def common_elements(list1, list2):\n    return list(set(list1) & set(list2))\n\n\nprint(common_elements([1, 1, 1, 2, 2, 2], [1, 2, 3, 3, 4, 4]))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def find_common_element(list1, list2):\n    return len(set(list1) & set(list2)) > 0"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def common_element(a, b):\n    a = set(a)\n    b = set(b)\n    return len(a.intersection(b)) > 0\n\n\nprint(common_element([1, 2, 3, 4], [1, 2, 3, 4]))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def common_elements(list_1, list_2):\n    if len(list_1)!= len(list_2):\n        return False\n    return len(set(list_1).intersection(set(list_2))) > 0\n\nprint(common_elements([1,2,3,4,5,6], [2,3,4,5]))\nprint(common_elements([2,3,4,5,6], [3,4,5,6]))\nprint(common_elements([1,2,3,4,5,6], [4,5,6,7]))\nprint(common_elements([1,2,3,4,5,6], [7,8,9,10,11]))\nprint(common_elements([1,2,3,4,5,6], [1,2,3,4,5,6]))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def intersection(list1, list2):\n    return list(set(list1).intersection(list2))\n\nprint(intersection([1,2,3], [4,5,6]))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def common_elements(list_1, list_2):\n    list_1 = set(list_1)\n    list_2 = set(list_2)\n    return len(list_1.intersection(list_2)) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5]))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def has_common_elements(list1, list2):\n    list1.sort()\n    list2.sort()\n\n    if len(list1) > len(list2):\n        return True\n    else:\n        return False\n\nprint(has_common_elements([1,2,3], [4,5,6]))\nprint(has_common_elements([1,2,3], [4,5,6]))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def has_common_element(list_one, list_two):\n    return len(set(list_one).intersection(set(list_two))) > 0"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def list_common_element(list1, list2):\n    list1.sort()\n    list2.sort()\n    return list1[0] == list2[0]\n\n\nprint(list_common_element([1, 2, 3, 4, 5], [4, 5, 3, 2, 1]))\nprint(list_common_element([1, 2, 3, 4, 5], [3, 4, 5, 3, 2]))"
    },
    {
      "rank": 15,
      "score": 9.0,
      "candidate": "def find_common_element(list1, list2):\n    return list1.count(list2[0]) > 0\n\nlist1 = [1,2,3,4,5,6,7]\nlist2 = [2,4,6,8]\n\nprint(find_common_element(list1, list2))"
    },
    {
      "rank": 16,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\n\nprint(find_common_element([1, 2, 3], [2, 3, 4]))\nprint(find_common_element([1, 2, 3], [2, 3, 5]))\nprint(find_common_element([1, 2, 3], [3, 5, 7]))"
    },
    {
      "rank": 17,
      "score": 8.0,
      "candidate": "def has_common_element(list1, list2):\n    common = list(set(list1) & set(list2))\n    return len(common) > 0\n\n\ndef has_common_element_2(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\n\nprint(has_common_element([1, 2, 3, 4, 5], [2, 3]))\nprint(has_common_element([1, 2, 3, 4, 5], [2, 4]))\nprint(has_common_element([1, 2, 3, 4, 5], [4, 5]))\nprint(has_common_element([1, 2, 3, 4, 5], [3, 4, 5]))\nprint(has_common_element([1, 2, 3, 4, 5], [3, 5]))\nprint(has_common_element([1, 2, 3, 4, 5], [3, 2]))\nprint(has_common_element([1, 2, 3, 4, 5], [4, 5]))"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "def common(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\n\nprint(common([1, 2, 2], [2, 2]))\nprint(common([1, 2, 2], [2, 1]))\nprint(common([1, 2, 2], [2, 1, 2, 2]))\nprint(common([1, 2, 2], [2, 2, 2, 1]))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) == len(list2):\n        for i in range(len(list1)):\n            if list1[i] in list2:\n                return True\n    return False\n\nprint(common_elements([1, 2, 3], [4, 5, 6]))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    # Fill this in.\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    else:\n        return len(set(list1).intersection(set(list2))) > 0"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [4, 5, 2, 3, 1]))\nprint(common_elements([1, 2, 3, 4, 5], [4, 5, 2, 3, 1]))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n  list1_set = set(list1)\n  list2_set = set(list2)\n  common_list = list1_set.intersection(list2_set)\n  return len(common_list) > 0\n\nprint(common_elements([1, 2, 3, 4, 5], [3, 4, 5, 6, 7]))\nprint(common_elements([1, 2, 3, 4, 5], [4, 5, 6, 7]))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    return list(set(list1) & set(list2))!= []\n\n\ndef common_elements_2(list1, list2):\n    return set(list1) & set(list2)!= set()\n\n\nprint(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))\nprint(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))\nprint(common_elements_2([1, 2, 2, 2], [2, 2, 2, 2]))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    list1_set = set(list1)\n    list2_set = set(list2)\n    common_list = list1_set.intersection(list2_set)\n    return len(common_list) > 0\n\nif __name__ == '__main__':\n    print(common_elements([1,2,3,4], [5,6,7,8]))\n    print(common_elements([1,2,3,4], [2,3,4]))\n    print(common_elements([1,2,3,4], [2,3,5]))\n    print(common_elements([1,2,3,4], [3,4,5]))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def find_common_elements(list1, list2):\n  list1.sort()\n  list2.sort()\n  for i in range(len(list1)):\n    if list1[i] == list2[i]:\n      return True\n  return False\n\nprint(find_common_elements([1,2,3], [1,2,3]))\nprint(find_common_elements([1,2,3], [2,3,1]))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) > len(list2):\n        list1, list2 = list2, list1\n\n    for i in range(len(list1)):\n        if list1[i] in list2:\n            return True\n\n    return False\n\n\nif __name__ == \"__main__\":\n    assert common_elements([1, 2, 3], [2, 3, 4]) == True\n    assert common_elements([1, 2, 3], [2, 1, 2]) == True\n    assert common_elements([1, 2, 3], [3, 1, 2]) == False\n    assert common_elements([1, 2, 3], [4, 2, 3]) == False\n    assert common_elements([1, 2, 3], [1, 2, 4]) == True\n    assert common_elements([1, 2, 3], [1, 4, 2]) == True\n    assert common_elements([1, 2, 3], [1, 4, 4]) == True"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def check_common_element(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\nprint(check_common_element([1,2,3,4,5], [5,6,7,8,9]))\nprint(check_common_element([1,2,3,4,5], [1,2,3,4,5]))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def common_elements(a, b):\n    return len(set(a).intersection(set(b))) >= 1\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 2, 2], [1, 2, 2, 2]))\n    print(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))\n    print(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def find_common(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\n\nif __name__ == \"__main__\":\n    assert find_common([1, 2, 3, 4], [1, 2, 3, 4]) == True\n    assert find_common([1, 2, 3, 4], [1, 2]) == False\n    assert find_common([1, 2, 3, 4, 5], [1, 2]) == True\n    assert find_common([1, 2, 3, 4, 5], [1, 2, 3, 5]) == True"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def has_common_element(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\nprint(has_common_element([1, 2, 3, 4, 5], [2, 3, 5]))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def common(list1, list2):\n    if len(list1)!= len(list2):\n        return False\n    elif len(list1) == 0:\n        return True\n    else:\n        for i in list1:\n            if i not in list2:\n                return False\n        return True\n\nprint(common([1,2,3,4,5,6,7,8,9], [10,20,30,40,50,60,70,80,90]))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def common_element(a, b):\n    return len(set(a).intersection(b)) > 0"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def check_common_elements(list1, list2):\n    common_element = None\n    for item in list1:\n        if common_element is None:\n            common_element = item\n        elif item == common_element:\n            continue\n        else:\n            return False\n\n    return True\n\n\nprint(check_common_elements([1, 2, 3, 4], [1, 2, 3, 4]))\nprint(check_common_elements([1, 2, 3, 4], [1, 2, 3]))\nprint(check_common_elements([1, 2, 3, 4], [1, 2]))\nprint(check_common_elements([1, 2, 3, 4], [2, 2]))\nprint(check_common_elements([1, 2, 3, 4], [1, 3, 4]))\nprint(check_common_elements([1, 2, 3, 4], [1, 3, 2]))\nprint(check_common_elements([1, 2, 3, 4], [1, 4, 4]))\nprint(check_common_elements([1, 2, 3, 4], [1, 4, 3]))\nprint(check_common_elements([1, 2, 3, 4], [1, 3, 4, 3]))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [5, 5, 5, 5, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [5, 5, 5, 5, 5]))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1)!= len(list2):\n        return False\n    dict1 = {}\n    for i in list1:\n        if i not in dict1:\n            dict1[i] = 1\n        else:\n            dict1[i] += 1\n    for i in list2:\n        if i not in dict1:\n            return False\n        else:\n            dict1[i] -= 1\n    return True\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3, 4], [3, 2, 1]))\n    print(common_elements([1, 2, 3, 4], [1, 2, 3]))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    list1.sort()\n    list2.sort()\n    for x in list1:\n        if x in list2:\n            return True\n    return False\n\n\nprint(common_elements([1, 1, 2], [1, 2, 3]))\nprint(common_elements([1, 1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def common_elements(lst1, lst2):\n    common = set(lst1) & set(lst2)\n    return len(common) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 4]))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\n\nlist1 = [1, 2, 3, 4]\nlist2 = [3, 4, 1, 2]\nprint(common_elements(list1, list2))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def find_common_elements(list1, list2):\n    list1_set = set(list1)\n    list2_set = set(list2)\n    common_element = list1_set.intersection(list2_set)\n    return common_element\n\n\nprint(find_common_elements([2, 2, 2], [2, 2, 2]))\nprint(find_common_elements([1, 2, 3, 4], [2, 2, 2]))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def common(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\n\nprint(common([1, 2, 3, 4, 5], [2, 3, 4]))\nprint(common([1, 2, 3, 4, 5], [4, 5]))\nprint(common([1, 2, 3, 4, 5], [2, 3, 5]))\nprint(common([1, 2, 3, 4, 5], [4, 5, 6]))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def find_common(lst1, lst2):\n    return len(set(lst1) & set(lst2)) > 0\n\nprint(find_common([1,2,3], [2,3,4]))\nprint(find_common([1,2,3], [3,4,5]))\nprint(find_common([1,2,3], [4,5,6]))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\nprint(common_elements([1,2,2,3,3,3], [3,3,3,3,3,3]))\nprint(common_elements([1,2,2,3], [3,3,3,3,3,3]))\nprint(common_elements([1,2,2,3], [1,2,2,3]))\nprint(common_elements([1,2,2,3], [1,2,2,3,3]))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    \"\"\"\n    :type list1: List[int]\n    :type list2: List[int]\n    :rtype: bool\n    \"\"\"\n    return len(set(list1).intersection(list2)) > 0\n\n\nprint(find_common_element([1, 2, 3, 4], [1, 2, 3, 4]))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    return list1[0] in list2"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    list1 = set(list1)\n    list2 = set(list2)\n    return len(list1.intersection(list2)) > 0\n\nprint(common_elements([1, 2, 3, 4, 5], [3, 4, 5, 6, 7]))\nprint(common_elements([1, 2, 3, 4, 5], [3, 4, 6, 7]))\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def find_common(list1, list2):\n    list1_set = set(list1)\n    list2_set = set(list2)\n    common = list1_set.intersection(list2_set)\n    return len(common) > 0\n\nprint(find_common([1,2,3,4], [2,3,4]))\nprint(find_common([1,2,3,4], [4,5,6]))\nprint(find_common([1,2,3,4], [4,5,6,7]))\nprint(find_common([1,2,3,4], [5,6,7]))\nprint(find_common([1,2,3,4], [5,6,7,8]))\nprint(find_common([1,2,3,4], [7,8,9]))\nprint(find_common([1,2,3,4], [1,2,3,4]))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def has_common_element(list1, list2):\n    return len(set(list1).intersection(set(list2))) > 0\n\nprint(has_common_element([1, 2, 3], [4, 5, 6]))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def find_common(list1, list2):\n  return len(set(list1).intersection(set(list2))) > 0\n\nprint(find_common([1, 2, 3, 4, 5], [3, 4, 5]))\nprint(find_common([1, 2, 3, 4, 5], [2, 3, 5, 6, 7]))\nprint(find_common([1, 2, 3, 4, 5], [3, 4, 5, 6, 7]))\nprint(find_common([1, 2, 3, 4, 5], [2, 3, 6, 7]))\nprint(find_common([1, 2, 3, 4, 5], [2, 3, 7, 8]))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def common_element(a, b):\n    common_list = set(a).intersection(b)\n    return len(common_list) > 0\n\n\nprint(common_element([1, 2, 3], [1, 2, 3]))\nprint(common_element([1, 2, 3], [2, 3, 4]))\nprint(common_element([1, 2, 3], [1, 2, 4]))\nprint(common_element([1, 2, 3], [2, 4, 3]))\nprint(common_element([1, 2, 3], [1, 4, 3]))\nprint(common_element([1, 2, 3], [2, 3, 4]))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    list1.sort()\n    list2.sort()\n    return list1[0] == list2[0] and list1[1] == list2[1]\n\n\nprint(common_elements([1, 1, 1], [1, 2, 2]))\nprint(common_elements([1, 2], [1, 2, 1]))\nprint(common_elements([1, 2, 2], [1, 1, 1]))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def find_common(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n\n    common_element = None\n    for element in list1:\n        if common_element is None:\n            common_element = element\n        elif common_element!= element:\n            return False\n    return True\n\n\nprint(find_common([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]))\nprint(find_common([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\n\nif __name__ == \"__main__\":\n    assert common_elements([1, 2, 3], [1, 2, 3]) == True\n    assert common_elements([1, 2, 3], [2, 3]) == False"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def has_common_elements(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\n\nprint(has_common_elements([1, 1, 2], [1, 2, 1, 2]))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def find_common(list1, list2):\n    if len(list1) > len(list2):\n        return find_common(list2, list1)\n\n    if len(list2) > len(list1):\n        return find_common(list1, list2)\n\n    if list1[0] == list2[0]:\n        return find_common(list1[1:], list2[1:])\n\n    return False\n\n\nprint(find_common([1, 2, 3, 4], [1, 2, 3]))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def has_common(list1, list2):\n    list1_set = set(list1)\n    list2_set = set(list2)\n    common = list1_set.intersection(list2_set)\n    return len(common) > 0"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    common_element = None\n    if len(list1) > len(list2):\n        common_element = list1\n    elif len(list2) > len(list1):\n        common_element = list2\n    return common_element\n\n\nprint(find_common_element([1, 2, 3, 4, 5], [4, 3, 2, 1]))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def common_element(a, b):\n    return len(set(a).intersection(set(b))) > 0"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def find_common(list1, list2):\n    list1.sort()\n    list2.sort()\n\n    if len(list1) == 0:\n        return False\n    if len(list2) == 0:\n        return False\n\n    if list1[0] == list2[0]:\n        return find_common(list1[1:], list2[1:])\n    else:\n        return False\n\n\nprint(find_common([1, 2, 3, 4, 5], [4, 3, 2, 1]))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def common_elements(a, b):\n    if len(set(a).intersection(set(b))) > 0:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3], [2, 2, 3]))\n    print(common_elements([1, 2, 3], [2, 2, 3]))\n    print(common_elements([1, 2, 3], [2, 2, 4]))\n    print(common_elements([1, 2, 3], [1, 1, 2]))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def find_common_elements(a, b):\n    # Write your code here\n    a_dict = {}\n    for i in a:\n        if i in a_dict.keys():\n            a_dict[i] += 1\n        else:\n            a_dict[i] = 1\n    b_dict = {}\n    for i in b:\n        if i in b_dict.keys():\n            b_dict[i] += 1\n        else:\n            b_dict[i] = 1\n\n    for key in b_dict.keys():\n        if b_dict[key] == 1:\n            return True\n    return False\n\n\nprint(find_common_elements([2, 3, 3, 4, 4], [2, 3, 4]))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def has_common_elements(list1, list2):\n    return len(set(list1) & set(list2)) > 0"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def common_element(a, b):\n    if len(a)!= len(b):\n        return False\n    else:\n        return True if a.count(max(a)) == 1 else False"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    return list(set(list1) & set(list2))\n\n\nif __name__ == \"__main__\":\n    assert find_common_element([1, 2, 3], [2, 3]) == [1, 2]\n    assert find_common_element([1, 2], [2, 3]) == [1]\n    assert find_common_element([1, 2], [3, 4]) == [1, 2]\n    assert find_common_element([1, 2, 3], [4, 5]) == [1, 2]"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) == len(list2):\n        return True\n    else:\n        return False\n\n\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [1, 2, 3, 4, 5]\nprint(common_elements(list1, list2))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def contains_common_elements(a, b):\n    return len(set(a).intersection(set(b))) > 0\n\n\nprint(contains_common_elements([1, 1, 1], [1, 1, 1]))\nprint(contains_common_elements([1, 1, 1], [1, 1, 2]))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def common(a, b):\n    return len(set(a).intersection(set(b))) > 0"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def common_elements(a, b):\n    return len(set(a).intersection(set(b))) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 4, 5, 3]))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def check_common_elements(list1, list2):\n    if len(list1) > len(list2):\n        list1, list2 = list2, list1\n    return any(element in list1 for element in list2)\n\n\nprint(check_common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]))\nprint(check_common_elements([1, 2, 3, 4, 5], [1, 2, 4, 5, 6]))\nprint(check_common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(check_common_elements([1, 2, 3, 4, 5], [2, 4, 5, 6]))\nprint(check_common_elements([1, 2, 3, 4, 5], [2, 4, 5, 6, 7]))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def has_common_elements(a, b):\n    if len(a) > len(b):\n        return True\n    if len(a) == len(b):\n        if a == b:\n            return True\n        return False\n    return False\n\nprint(has_common_elements([1, 2, 3, 4, 5, 6], [2, 2, 3, 4, 5]))\nprint(has_common_elements([1, 2, 3, 4, 5, 6], [4, 5, 6]))\nprint(has_common_elements([1, 2, 3, 4, 5, 6], [5, 6, 7]))\nprint(has_common_elements([1, 2, 3, 4, 5, 6], [6, 7, 8]))\nprint(has_common_elements([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5]))\nprint(has_common_elements([1, 2, 3, 4, 5, 6], [1, 2, 3, 4]))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def common_elements(a,b):\n    if len(a)>len(b):\n        return a\n    if len(b)>len(a):\n        return b\n    for i in range(len(a)):\n        if a[i] in b:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    print(common_elements([1,2,3],[3,1,2]))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def has_common_element(list1, list2):\n    if len(list1) < len(list2):\n        return False\n    else:\n        return list1[0] in list2\n\n\nif __name__ == \"__main__\":\n    assert has_common_element([1, 2, 3, 4, 5], [2, 3, 4, 5]) is True\n    assert has_common_element([1, 2, 3, 4, 5], [3, 4, 5, 6, 7]) is True\n    assert has_common_element([1, 2, 3, 4, 5], [3, 4, 5, 6, 7]) is False"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n\n    common_elements_list = []\n\n    for element in list1:\n        if element in list2:\n            common_elements_list.append(element)\n\n    return len(common_elements_list) > 0\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\n    print(common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5]))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    return len(list(set(list1).intersection(list2))) > 0\n\nif __name__ == '__main__':\n    print(find_common_element([1,2,3], [4,5,6]))\n    print(find_common_element([1,2,3], [4,5,7]))\n    print(find_common_element([1,2,3], [5,6,7]))\n    print(find_common_element([1,2,3], [1,2,3]))\n    print(find_common_element([1,2,3], [1,2,3,4]))\n    print(find_common_element([1,2,3], [5,6,7]))\n    print(find_common_element([1,2,3], [4,5,7]))\n    print(find_common_element([1,2,3], [1,2,3,4]))\n    print(find_common_element([1,2,3], [1,2,3,5]))\n    print(find_common_element([1,2,3], [1,2,3,4,5]))\n    print(find_common_element([1,2,3], [1,2,3,4,5,6]))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) < len(list2):\n        list1, list2 = list2, list1\n\n    common = set(list1).intersection(set(list2))\n    return len(common) > 0\n\n\nprint(common_elements([1, 2, 3], [3, 2, 1]))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1) & set(list2)) > 0\n\n\nprint(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))\nprint(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))\nprint(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))\nprint(common_elements([1, 2, 2, 2], [2, 2, 2, 2]))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def common_elements(a, b):\n    return len(set(a).intersection(b)) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [2, 3]))\nprint(common_elements([1, 2, 3, 4, 5], [4, 5]))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def check_common_elements(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    common_element = list(set(list1) & set(list2))\n    return len(common_element) > 0\n\ndef main():\n    list1 = [1, 2, 3, 4, 5, 6, 7, 8]\n    list2 = [2, 3, 4, 5, 6, 7, 8]\n    print(check_common_elements(list1, list2))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def has_common_element(list1, list2):\n    return list(set(list1) & set(list2))!= []\n\nprint(has_common_element([1,2,3,4,5], [2,3,4,5]))\nprint(has_common_element([1,2,3,4,5], [2,3,4,5,6]))\nprint(has_common_element([1,2,3,4,5], [2,3,4,5,6,7]))\nprint(has_common_element([1,2,3,4,5], [2,3,4,5,6,7,8]))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def common_elements(l1, l2):\n    # Your code here\n    return l1.count(l2[0]) > 0\n\n\nprint(common_elements([1, 2, 3, 4, 5], [2, 3, 5, 4]))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    return len(set(list1).intersection(set(list2))) >= 1\n\nif __name__ == \"__main__\":\n    assert common_elements([1, 2, 3], [3, 2, 1]) == True\n    assert common_elements([1, 2, 3], [2, 3, 1]) == False\n    assert common_elements([1, 2, 3], [2, 2, 1]) == True"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    common_list = []\n    for i in range(len(list1)):\n        if list1[i] in common_list:\n            return True\n        else:\n            common_list.append(list1[i])\n    return False\n\n\nprint(common_elements([1, 2, 2], [2, 2, 2]))\nprint(common_elements([1, 2, 2], [2, 3, 4]))\nprint(common_elements([1, 2, 2], [2, 3, 4]))\nprint(common_elements([1, 2, 2], [2, 3, 4]))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def one_common(list1, list2):\n    for i in list1:\n        if i in list2:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert one_common([1, 2, 3], [2, 3, 1]) == True\n    assert one_common([1, 2, 3], [2, 4]) == False\n    assert one_common([1, 2, 3], [2, 5, 6]) == True\n    assert one_common([1, 2, 3], [1, 2, 3]) == False\n    assert one_common([1, 2, 3], [3, 2, 4]) == True\n    assert one_common([1, 2, 3], [1, 2, 3]) == False"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def common_elements(a, b):\n    return len(set(a).intersection(set(b))) > 0\n\nprint(common_elements([1,2,3,4,5], [1,2,3,4,5]))\nprint(common_elements([1,2,3,4,5], [1,3,4,5]))\nprint(common_elements([1,2,3,4,5], [1,4,5]))\nprint(common_elements([1,2,3,4,5], [1,2,4,5]))\nprint(common_elements([1,2,3,4,5], [1,4,5]))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    list1.sort()\n    list2.sort()\n    common_element = None\n    for i in range(len(list1)):\n        if list1[i] == list2[i]:\n            if common_element is None:\n                common_element = list1[i]\n            else:\n                return False\n    return True\n\nprint(find_common_element([1, 1, 2, 2, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def has_common_element(lst1, lst2):\n    return len(set(lst1) & set(lst2)) > 0\n\n\nassert has_common_element([1, 2, 3, 4, 5, 6], [4, 5, 6])\nassert not has_common_element([1, 2, 3, 4, 5, 6], [1, 4, 5, 6])\nassert not has_common_element([1, 2, 3, 4, 5, 6], [7, 8, 9, 10])\nassert has_common_element([1, 2, 3, 4, 5, 6], [8, 9, 10, 11])\nassert has_common_element([1, 2, 3, 4, 5, 6], [1, 1, 1, 1, 1, 1])"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def check_common_elements(list1, list2):\n    common_list = []\n    for i in list1:\n        if i in list2:\n            common_list.append(i)\n    return len(common_list) > 0"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def common_element(list1, list2):\n    common = list(set(list1) & set(list2))\n    return len(common) > 0\n\n\nif __name__ == \"__main__\":\n    print(common_element([1, 1, 1, 1, 2, 2, 2], [1, 2, 3]))\n    print(common_element([1, 2, 3, 4, 4, 5], [1, 2, 3, 4, 4, 5]))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def two_common_elements(l1, l2):\n    if len(l1)!= len(l2):\n        return False\n    l1.sort()\n    l2.sort()\n    for i in l1:\n        if i in l2:\n            return True\n    return False\n\n\nprint(two_common_elements([1, 2, 3], [2, 3, 1]))\nprint(two_common_elements([1, 2, 3], [2, 3, 3]))\nprint(two_common_elements([1, 2, 3], [1, 3, 2]))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def common_elements(list1, list2):\n    common = set(list1) & set(list2)\n    return len(common) > 0\n\n\nprint(common_elements([1, 2, 3], [2, 3, 4]))\nprint(common_elements([1, 2, 3, 4], [1, 2, 3]))\nprint(common_elements([1, 2, 3], [1, 2, 3, 4]))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def common(a, b):\n    return len(set(a).intersection(b)) > 0\n\n\nif __name__ == \"__main__\":\n    print(common([1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9]))\n    print(common([1, 2, 3, 4, 5, 6, 7, 8, 9], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def find_common_element(list1, list2):\n    if len(list1) > len(list2):\n        return False\n    if len(list1) == 0:\n        return False\n\n    counter = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[counter]:\n            counter += 1\n        else:\n            return False\n\n    return True\n\nprint(find_common_element([1, 2, 3], [2, 2, 2]))\nprint(find_common_element([1, 2, 3], [2, 3, 3]))\nprint(find_common_element([1, 2, 3], [2, 2, 3, 3]))\nprint(find_common_element([1, 2, 3], [3, 3, 3]))\nprint(find_common_element([1, 2, 3], [3, 3, 3, 3]))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def find_common_element(list1, list2):\n  # Write your code here\n  return len(set(list1).intersection(set(list2))) > 0\n\nprint(find_common_element([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def common(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    list1 = sorted(list1)\n    list2 = sorted(list2)\n    if len(list1) == 1 and len(list2) == 1:\n        return list1[0] == list2[0]\n    return list1[0] in list2 and list2[0] in list1\n\n\nprint(common([1, 1, 2, 2, 3], [2, 2, 2, 3]))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def common_elements(list1, list2):\n    # Write your code here\n    set1 = set(list1)\n    set2 = set(list2)\n    return len(set1 & set2) > 0\n\n\nprint(common_elements([1, 2, 3], [2, 3, 4]))\nprint(common_elements([1, 2, 3], [3, 4, 5]))\nprint(common_elements([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def common_element(list1, list2):\n    if len(list1) == 0 or len(list2) == 0:\n        return False\n    if len(set(list1)) == len(list1) and len(set(list2)) == len(list2):\n        return True\n    else:\n        return False\n\n\nprint(common_element([1, 2, 2, 3, 3, 3], [2, 2, 2, 3, 3, 3]))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def check_common_elements(list1, list2):\n    # write your code here\n    list1_set = set(list1)\n    list2_set = set(list2)\n    if list1_set.issubset(list2_set):\n        return True\n    else:\n        return False\n\nprint(check_common_elements([1, 2, 3, 4, 5], [2, 4, 6, 8, 10]))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def common_elements(list1, list2):\n    \"\"\"\n    :type list1: list[int]\n    :type list2: list[int]\n    :rtype: bool\n    \"\"\"\n    return len(set(list1).intersection(set(list2))) > 0\n\n\nif __name__ == \"__main__\":\n    assert common_elements([1, 2, 3, 4, 5], [2, 3, 4, 5]) == True\n    assert common_elements([1, 2, 3, 4], [4, 5, 6, 7]) == False\n    assert common_elements([1, 2, 3, 4, 5], [5, 6, 7, 8, 9]) == True\n    assert common_elements([1, 2, 3, 4, 5], [6, 7, 8, 9]) == True\n    assert common_elements([1, 2, 3, 4, 5], [8, 9, 10]) == False\n    assert common_elements([1, 2, 3, 4, 5], [2, 4, 6, 8]) == True"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def common_element(list1, list2):\n    # Fill this in.\n    return list(set(list1) & set(list2))\n\nprint(common_element([1,2,3,4,5], [4,5,6,7]))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def common_elements(list1, list2):\n    return list(set(list1).intersection(set(list2)))\n\n\nif __name__ == \"__main__\":\n    print(common_elements([1, 2, 3, 4, 5], [2, 2, 2, 2, 2]))\n    print(common_elements([1, 2, 3, 4, 5], [2, 2, 2, 3, 3]))\n    print(common_elements([1, 2, 3, 4, 5], [2, 2, 2, 3, 3, 4]))"
    }
  ]
}