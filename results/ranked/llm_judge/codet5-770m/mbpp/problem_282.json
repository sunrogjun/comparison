{
  "timestamp": "2025-09-14T14:32:15.538594",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 282,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a+b+c)/3\n\nif __name__ == \"__main__\":\n    print(third_side(2, 4, 6))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def thirdSide(a, b, c):\n    return a * b * c / 3\n\nprint(thirdSide(1,2,3))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    if a < b + c and a < b - c and a < b * c:\n        return a\n    else:\n        return b\n\n\nprint(third_side(4, 6, 8))\nprint(third_side(5, 4, 6))\nprint(third_side(8, 6, 4))\nprint(third_side(10, 5, 4))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def third_side(a):\n    return a * 3 / 2\n\nprint(third_side(4))\nprint(third_side(6))\nprint(third_side(12))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def third_side_of_triangle(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side_of_triangle(2, 3, 4))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(third_side(4, 5, 6))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def find_third_side(a, b, c):\n    if a < b + c and a < b - c and a < b * c and a < c - b:\n        return a, b, c\n    else:\n        return None\n\nprint(find_third_side(2, 3, 4))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def third_side(r):\n    a = r*3.141592653589793238462643383279502884197169399375105820974944592307816406286\n    b = r*3.141592653589793238462643383279502884197169399375105820974944592307816406286\n    c = r*3.141592653589793238462643383279502884197169399375105820974944592307816406286\n    return a, b, c\n\nr = float(input(\"Enter the radius of the triangle: \"))\na, b, c = third_side(r)\n\nprint(\"The third side of the triangle is \", a, b, c)"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def third_side(a):\n    return a**3\n\ndef main():\n    print(third_side(5))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(third_side(2, 3, 4))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def third_side(a,b,c):\n    if (a+b+c) > 180:\n        print(\"The third side of the right angled triangle should be 180\")\n    elif a+b+c > 90:\n        print(\"The third side of the right angled triangle should be 90\")\n    else:\n        print(\"The third side of the right angled triangle should be \"+str(a+b+c))\n\nthird_side(10,20,30)"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(2, 2, 2))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def three_side(a, b, c):\n    return a + b + c\n\nprint(three_side(2, 3, 5))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def triangle_side(a, b, c):\n    return a + b + c\n\nprint(triangle_side(1, 1, 1))\nprint(triangle_side(2, 1, 1))\nprint(triangle_side(3, 1, 1))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(10, 5, 10))\nprint(third_side(10, 5, 5))\nprint(third_side(10, 5, 20))\nprint(third_side(10, 5, 25))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def third_side(a,b,c):\n    return a+b+c\n\nprint(third_side(1,2,3))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :type c: int\n    :rtype: int\n    \"\"\"\n\n    return a * b + c * c\n\n\ndef main():\n    \"\"\"\n    Do the same thing for the third side function.\n    \"\"\"\n    a = int(input(\"Enter the first side: \"))\n    b = int(input(\"Enter the second side: \"))\n    c = int(input(\"Enter the third side: \"))\n\n    print(f\"The third side is: {third_side(a, b, c)}\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def find_third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(find_third_side(1, 2, 3))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    if a + b + c == 3:\n        return \"The third side of a right angled triangle is: {}\".format(a + b + c)\n    else:\n        return \"The third side of a right angled triangle is: {}\".format(c)\n\nprint(third_side(1, 2, 3))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def third_side(a):\n    return (a * a + a * a + a * a) / 2\n\nprint(third_side(4))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def third_side(a,b,c):\n    if a==b and a==c:\n        return a\n    if b==a and b==c:\n        return b\n    if c==a and c==b:\n        return c\n    return \"No third side of a right angled triangle.\"\n\nprint(third_side(1,2,3))"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def get_third_side(a, b, c):\n    return a + b + c\n\ndef test_func():\n    assert get_third_side(1, 2, 3) == 4\n    assert get_third_side(1, 2, 5) == 5\n    assert get_third_side(1, 2, 4) == 4\n\nif __name__ == \"__main__\":\n    test_func()"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(1, 2, 3))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(1, 2, 3))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def thirdSide(a, b, c):\n    return a + b + c\n\n\na = int(input(\"Enter the side a\"))\nb = int(input(\"Enter the side b\"))\nc = int(input(\"Enter the side c\"))\nprint(\"The third side of a right angled triangle is \", thirdSide(a, b, c))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def third_side_triangle(a, b, c):\n    if a > b and a > c:\n        return (a + b + c) / 3\n    elif b > a and b > c:\n        return (b + a + c) / 3\n    elif c > a and c > b:\n        return (c + a + b) / 3\n    else:\n        return 0\n\nprint(third_side_triangle(5, 8, 10))"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "import math\n\ndef thirdSide(a,b,c):\n    return math.sqrt(a*a + b*b + c*c)\n\ndef test():\n    assert thirdSide(3,5,6) == 6\n    assert thirdSide(2,3,4) == 6\n    assert thirdSide(1,2,3) == 4\n\ntest()"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a * b + b * c + c * a) / 2\n\n\nif __name__ == \"__main__\":\n    assert third_side(3, 4, 5) == 6\n    assert third_side(1, 2, 3) == 3\n    assert third_side(1, 3, 4) == 2\n    assert third_side(2, 1, 3) == 1\n    assert third_side(2, 2, 2) == 1\n    assert third_side(3, 3, 4) == 1"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 2\n\nprint(third_side(1, 1, 1))\nprint(third_side(2, 2, 2))\nprint(third_side(3, 3, 3))\nprint(third_side(4, 4, 4))"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    # Your code here\n    return a * b * c\n\n\nprint(third_side(3, 4, 5))"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return a * b * c\n\nprint(third_side(3, 2, 2))\nprint(third_side(3, 2, 4))"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a+b+c)/3\n\n\nprint(third_side(1, 3, 2))"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    s = (a + b + c) / 3\n    return s\n\nprint(third_side(2, 4, 6))"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(5, 8, 12))"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\n\nprint(third_side(2, 4, 6))"
    },
    {
      "rank": 40,
      "score": 10.0,
      "candidate": "def triangle(a, b, c):\n    return a + b + c\n\n\nprint(triangle(2, 3, 4))"
    },
    {
      "rank": 41,
      "score": 10.0,
      "candidate": "def thirdSide(a, b, c):\n    return (a+b+c)/3\n\nprint(thirdSide(1, 2, 3))\nprint(thirdSide(2, 2, 2))\nprint(thirdSide(1, 2, 1))\nprint(thirdSide(1, 2, 3))"
    },
    {
      "rank": 42,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_side(3, 4, 5))"
    },
    {
      "rank": 43,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    if a == b == c:\n        return a\n    if a == b or a == c:\n        return a\n    if b == c:\n        return b\n    if c == a:\n        return c\n    return a\n\nif __name__ == \"__main__\":\n    print(third_side(2, 3, 4))\n    print(third_side(2, 3, 4))\n    print(third_side(3, 2, 1))"
    },
    {
      "rank": 44,
      "score": 10.0,
      "candidate": "def third_side(a,b,c):\n    return a+b+c\n\nprint(third_side(2,2,2))\nprint(third_side(3,4,3))\nprint(third_side(2,2,4))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2))\nprint(third_side(2,2,2"
    },
    {
      "rank": 45,
      "score": 10.0,
      "candidate": "def third_side(r):\n    a = 3.14159 * r\n    b = 2 * r\n    c = 3 * r\n    return (a + b + c) / 2\n\nprint(third_side(3.14))\nprint(third_side(2))\nprint(third_side(1))\nprint(third_side(0))"
    },
    {
      "rank": 46,
      "score": 10.0,
      "candidate": "def thirdSide(a,b,c):\n    return a*b + c*c"
    },
    {
      "rank": 47,
      "score": 10.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3.0\n\nprint(third_side(10, 20, 30))"
    },
    {
      "rank": 48,
      "score": 9.0,
      "candidate": "def find_third_side(a):\n    a=float(a)\n    if a<0:\n        raise Exception('The side of the triangle must be positive')\n    if a<3:\n        return a\n    else:\n        return (a+3)*(a+3)//2\n\n\nprint(find_third_side(4))\nprint(find_third_side(6))\nprint(find_third_side(8))\nprint(find_third_side(10))"
    },
    {
      "rank": 49,
      "score": 9.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\n\nprint(\"The third side of a right angled triangle is: \" + str(third_side(a, b, c)))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def thirdSide(a, b, c):\n    return a * b * c\n\nprint(thirdSide(1, 1, 1))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def find_third_side(r):\n    return (r**3)"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    if a + b > c:\n        print(f\"The third side of a right angled triangle is {a + b}\")\n    elif a + c > b:\n        print(f\"The third side of a right angled triangle is {a + c}\")\n    elif b + c > a:\n        print(f\"The third side of a right angled triangle is {b + c}\")\n    elif b + c > a:\n        print(f\"The third side of a right angled triangle is {b + c}\")\n    else:\n        print(f\"The third side of a right angled triangle is {b + c}\")\n\nthird_side(4, 4, 4)"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def find_third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(find_third_side(2, 5, 4))\nprint(find_third_side(10, 10, 10))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 2"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def three_side(a, b, c):\n    if a + b > c:\n        return a + b\n    elif a + c > b:\n        return a + c\n    elif a + c > a:\n        return a + b\n\n\nif __name__ == '__main__':\n    print(three_side(4, 5, 6))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def third_side(a,b,c):\n    if a>b and a>c:\n        return a\n    elif b>a and b>c:\n        return b\n    elif c>a and c>b:\n        return c\n\nprint(third_side(5,6,8))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_side(2, 3, 4))\nprint(third_side(2, 2, 4))\nprint(third_side(2, 1, 4))\nprint(third_side(2, 3, 2))\nprint(third_side(2, 2, 2))\nprint(third_side(2, 2, 2))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def get_third_side(a, b, c):\n    return (a * b + c * b + a * c) / 2\n\n\nprint(get_third_side(1, 3, 5))\nprint(get_third_side(2, 3, 5))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    if a == b and b == c:\n        return a + b + c\n    elif a == b or b == c or c == a:\n        return a + b + c\n    elif a == c or b == c or c == a:\n        return a + b + c\n    elif a == c or b == c or c == b:\n        return a + b + c\n    elif a == b or b == c or c == a:\n        return a + b + c\n    elif a == c or b == c or c == b:\n        return a + b + c\n    elif a == b or b == c or c == a:\n        return a + b + c\n\n\na = int(input(\"enter a: \"))\nb = int(input(\"enter b: \"))\nc = int(input(\"enter c: \"))\n\nprint(third_side(a, b, c))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def find_third_side(a):\n    b = a * 3\n    return b\n\nprint(find_third_side(5))\nprint(find_third_side(10))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def third_side(n):\n    return n * (n + 1) / 2\n\nprint(third_side(4))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def thirdSide(a, b, c):\n    return (a**2 + b**2 + c**2)**(1/2)\n\n\nprint(thirdSide(3, 4, 5))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return a+b+c"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 2\n\nprint(third_side(2, 3, 4))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def thirdSide(a):\n    # your code here\n    a = float(a)\n    return a**3"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def find_third_side(a, b, c):\n    if a + b > c:\n        return c\n    elif a + c > b:\n        return b\n    elif b + c > a:\n        return c\n    else:\n        return a\n\nprint(find_third_side(1, 2, 3))\nprint(find_third_side(1, 2, 4))\nprint(find_third_side(2, 3, 4))\nprint(find_third_side(3, 3, 3))\nprint(find_third_side(4, 3, 3))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(third_side(2, 4, 6))\nprint(third_side(3, 4, 6))\nprint(third_side(5, 6, 7))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(2, 4, 6))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def get_third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(get_third_side(4, 2, 6))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def thirdSide(a):\n    return a * 2 + 1\n\nprint(thirdSide(5))\nprint(thirdSide(7))\nprint(thirdSide(13))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def find_third_side(a, b, c):\n    if a == 0 and b == 0 and c == 0:\n        return 0\n    else:\n        return (a * b) + (b * c) + (c * a)\n\n\nif __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    c = int(input())\n\n    print(find_third_side(a, b, c))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def find_third_side(a, b, c):\n    if a < b + c:\n        return (a + b + c) / 3\n    else:\n        return 0\n\nprint(find_third_side(5, 6, 8))\nprint(find_third_side(5, 4, 8))\nprint(find_third_side(2, 3, 7))\nprint(find_third_side(5, 2, 3))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def find_third_side(a, b, c):\n    third_side = (a + b + c) / 2\n    return third_side\n\nif __name__ == '__main__':\n    a = int(input(\"Enter the first side of a right angled triangle: \"))\n    b = int(input(\"Enter the second side of a right angled triangle: \"))\n    c = int(input(\"Enter the third side of a right angled triangle: \"))\n    print(f\"The third side of a right angled triangle is {find_third_side(a, b, c)}\")"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def thirdSide(a, b, c):\n    return (a + b + c) / 2\n\nprint(thirdSide(1, 1, 1))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def third_side(a,b,c):\n\treturn a*b+c*c"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a * b + c * b + c * a) / 2"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def get_third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(get_third_side(1, 2, 3))\nprint(get_third_side(1, 2, 4))\nprint(get_third_side(1, 2, 5))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def find_third_side(a, b, c):\n    return (a + b + c) / 3\n\nprint(find_third_side(2, 4, 6))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\nprint(third_side(2, 2, 3))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def third_side_of_triangle(a, b, c):\n    side_a = a ** 2 + b ** 2 + c ** 2\n    side_b = 2 * a * b + 4 * b * c\n    side_c = 2 * a * c + 4 * c * b\n    return side_a, side_b, side_c\n\na, b, c = map(float, input().split())\nside_a, side_b, side_c = third_side_of_triangle(a, b, c)\nprint(f\"Side of the triangle is {side_a}, {side_b}, {side_c}\")"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def third_side_of_right_angled_triangle(a, b, c):\n    return (a + b + c) / 3"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def third_side(a,b,c):\n    if a > b and a > c:\n        return a + b + c\n    elif b > a and b > c:\n        return b + c\n    elif c > a and c > b:\n        return c + b\n    else:\n        return 0\n\na = int(input(\"Enter the first side of a right angled triangle: \"))\nb = int(input(\"Enter the second side of a right angled triangle: \"))\nc = int(input(\"Enter the third side of a right angled triangle: \"))\n\nprint(\"The third side of a right angled triangle is\", third_side(a,b,c))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def triangle_third_side(a, b, c):\n    return (a + b + c) / 2\n\ndef main():\n    print(\"The third side of a right angled triangle is : \" + str(triangle_third_side(2, 4, 6)))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def third_side(side):\n    return side * 3"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (b**2 + c**2)**(1/2)\n\nprint(third_side(4, 5, 6))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return a + b + c\n\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\n\nprint(\"The third side of a right angled triangle is \", third_side(a, b, c))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def third_side_of_right_angled_triangle(a, b, c):\n    return a + b + c\n\nprint(third_side_of_right_angled_triangle(2, 3, 4))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    if a + b > c:\n        return c\n    elif b + c > a:\n        return a\n    else:\n        return b"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def third_side(a,b,c):\n    return a+b+c\n\nif __name__ == \"__main__\":\n    print(third_side(4,5,6))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def get_third_side(n):\n    return (n * (n + 1)) / 2\n\nif __name__ == \"__main__\":\n    print(get_third_side(10))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def triangle_third_side(a, b, c):\n    return a + b + c\n\nprint(triangle_third_side(4, 3, 2))"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "import math\n\ndef triangle_side(a, b, c):\n    return math.sqrt((a**2 + b**2) + (c**2))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    return (a + b + c) / 3\n\n\nprint(third_side(2, 2, 2))"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def third_side(a,b,c):\n    return (a+b+c)/3\n\nprint(third_side(4,2,6))\nprint(third_side(4,2,6))\nprint(third_side(4,2,6))"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    if a == b and a == c:\n        return a\n    if a == b and b == c:\n        return b\n    if a == b and c == a:\n        return c\n    return None\n\nprint(third_side(1, 2, 3))\nprint(third_side(1, 2, 4))\nprint(third_side(2, 1, 4))\nprint(third_side(2, 2, 3))\nprint(third_side(2, 3, 1))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "def third_side(a, b, c):\n    side = (a + b + c) / 2\n    return side\n\nprint(third_side(10, 20, 30))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def find_third_side(a):\n    return a * 3\n\nprint(find_third_side(1))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def triangle_side(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_side(2, 3, 4))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def third_side(n):\n    a = 3.1415926535897932384626433832795028841971693993751058209749445923078157163095130880518442\n    b = n * (n - 1) / 2\n    c = a * (2 * n - 1)\n    return round(b + c, 3)\n\n\nprint(third_side(4))"
    }
  ]
}