{
  "timestamp": "2025-09-14T12:53:47.372661",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 58,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def check_sublist(sublist, list):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\ndef main():\n    print(check_sublist([2, 5, 8, 11, 13, 15], [2, 5, 8, 11, 13, 15]))\n    print(check_sublist([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]))\n    print(check_sublist([1, 2, 3, 4, 5], [1, 2, 3, 5]))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def sublist(list, sub_list):\n    if len(sub_list) > len(list):\n        return False\n    for i in range(len(sub_list)):\n        if sub_list[i] not in list:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    list_to_check = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    sub_list = [6, 7, 8]\n    print(sublist(list_to_check, sub_list))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def contains(sublist, lst):\n\treturn sublist in lst\n\nprint(contains([1,2,3,4,5], [1,2,3,4]))\nprint(contains([1,2,3,4,5], [2,3]))\nprint(contains([1,2,3,4,5], [3,4]))\nprint(contains([1,2,3,4,5], [4,5]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def check_sublist(a, b):\n    return a in b"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def contains(list_of_sublists, sublist):\n    for i in sublist:\n        if i not in list_of_sublists:\n            return False\n    return True\n\n\ndef test_contains():\n    assert contains([1,2,3,4], [1,2]) == True\n    assert contains([1,2,3,4], [2,3]) == False\n    assert contains([1,2,3,4], [1]) == False"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def contains_sublist(sublist, list):\n    if sublist in list:\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    print(contains_sublist([1,2,3,4], [1,2]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def contains_sub_list(list_, sub_list):\n    for element in sub_list:\n        if element not in list_:\n            return False\n    return True\n\n\ndef main():\n    list_ = [1, 2, 3, 4, 5]\n    sub_list = [2, 4]\n    print(contains_sub_list(list_, sub_list))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def contains(lst, sub):\n    for i in lst:\n        if i in sub:\n            return True\n    return False"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def contains(l, s):\n    return s in l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5, 6, 7, 8]\n    s = 4\n\n    print(contains(l, s))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def sublist(list, sub):\n    for i in list:\n        if i in sub:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    list = [\"a\", \"b\", \"c\"]\n    sub = [\"a\", \"b\"]\n    print(sublist(list, sub))"
    },
    {
      "rank": 11,
      "score": 9.370583536698913,
      "candidate": "def contains(arr, sub):\n    for i in range(len(arr)-len(sub)+1):\n        if arr[i:i+len(sub)] == sub:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    print(contains([1, 2, 3, 4, 5], [1, 2, 3]))\n    print(contains([1, 2, 3, 4, 5], [2, 4]))\n    print(contains([1, 2, 3, 4, 5], [3, 5]))\n    print(contains([1, 2, 3, 4, 5], [1, 2]))\n    print(contains([1, 2, 3, 4, 5], [4, 5]))\n    print(contains([1, 2, 3, 4, 5], [3, 5, 6]))\n    print(contains([1, 2, 3, 4, 5], [4, 5, 6, 7]))"
    },
    {
      "rank": 12,
      "score": 9.234050852198141,
      "candidate": "def check(list_of_elements, sublist):\n    for i in sublist:\n        if i not in list_of_elements:\n            return False\n    return True\n\n\nlist_of_elements = [1, 2, 3, 4, 5]\nsublist = [1, 2]\n\nprint(check(list_of_elements, sublist))"
    },
    {
      "rank": 13,
      "score": 9.226766272351448,
      "candidate": "def sublist(arr, sub):\n    for i in range(len(arr)):\n        if arr[i] in sub:\n            return True\n    return False\n\nprint(sublist([1, 2, 3, 4], [1, 2]))"
    },
    {
      "rank": 14,
      "score": 9.21346272767743,
      "candidate": "def check_if_in_list(list, sublist):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\nprint(check_if_in_list([1,2,3,4,5], [2,3]))\nprint(check_if_in_list([1,2,3,4,5], [2,4]))\nprint(check_if_in_list([1,2,3,4,5], [3,4]))\nprint(check_if_in_list([1,2,3,4,5], [4,5]))\nprint(check_if_in_list([1,2,3,4,5], [1,3]))"
    },
    {
      "rank": 15,
      "score": 9.205959372648458,
      "candidate": "def check_list_sublist(list, sublist):\n    for i in range(len(list)):\n        if list[i] == sublist[0]:\n            if sublist[1] <= list[i] <= sublist[2]:\n                return True\n    return False\n\n\nlist = [1, 2, 3, 4, 5]\nsublist = [1, 2]\nprint(check_list_sublist(list, sublist))\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nsublist = [1, 2, 4, 5, 7, 8, 9, 10]\nprint(check_list_sublist(list, sublist))"
    },
    {
      "rank": 16,
      "score": 9.177268828905222,
      "candidate": "def contains_sublist(list, sub_list):\n    return sub_list in list"
    },
    {
      "rank": 17,
      "score": 9.122564458729856,
      "candidate": "def contains_sublist(sublist, list):\n\tfor i in range(len(sublist)):\n\t\tif sublist[i] in list:\n\t\t\treturn True\n\treturn False\n\n\nprint(contains_sublist([1,2,3,4,5,6], [2,4]))"
    },
    {
      "rank": 18,
      "score": 8.973005557553902,
      "candidate": "def contains_sublist(lst, sub_list):\n    return sub_list in lst"
    },
    {
      "rank": 19,
      "score": 8.95994420569242,
      "candidate": "def contains(l, sub):\n    for i in l:\n        if i not in sub:\n            return False\n    return True\n\nprint(contains([1,2,3,4,5], [1,2]))\nprint(contains([1,2,3,4,5], [1,4]))\nprint(contains([1,2,3,4,5], [3,4]))\nprint(contains([1,2,3,4,5], [3,2]))\nprint(contains([1,2,3,4,5], [2,3]))\nprint(contains([1,2,3,4,5], [1]))\nprint(contains([1,2,3,4,5], [1,4,2]))\nprint(contains([1,2,3,4,5], [2]))\nprint(contains([1,2,3,4,5], [3,4,5]))\nprint(contains([1,2,3,4,5], [3,2,1]))\nprint(contains([1,2,3,4,5], [2,1,3]))"
    },
    {
      "rank": 20,
      "score": 8.946210893390457,
      "candidate": "def contains(list, item):\n    if list == []:\n        return False\n    if item in list:\n        return True\n    return False\n\nprint(contains([1, 2, 3, 4], 2))\nprint(contains([1, 2, 3, 4], 3))\nprint(contains([1, 2, 3, 4], 5))\nprint(contains([1, 2, 3, 4], 1))"
    },
    {
      "rank": 21,
      "score": 8.932217008005624,
      "candidate": "def contains_sub_list(l, sub_list):\n    for i in range(len(l)):\n        if l[i] in sub_list:\n            return True\n\n    return False\n\n\nprint(contains_sub_list([1, 2, 3, 4, 5, 6], [2, 5]))\nprint(contains_sub_list([1, 2, 3, 4, 5, 6], [3, 5]))\nprint(contains_sub_list([1, 2, 3, 4, 5, 6], [5]))"
    },
    {
      "rank": 22,
      "score": 8.910084504002544,
      "candidate": "def contains_sublist(list, sub_list):\n    return sub_list in list"
    },
    {
      "rank": 23,
      "score": 8.85571690049604,
      "candidate": "def contains(sublist, list):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\nprint(contains([1, 2, 3], [1, 2, 3]))\nprint(contains([1, 2, 3], [4, 5, 6]))\nprint(contains([1, 2, 3], [4, 5, 6, 7, 8, 9]))\nprint(contains([1, 2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))\nprint(contains([1, 2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]))"
    },
    {
      "rank": 24,
      "score": 8.855395696632057,
      "candidate": "def contains(a, sub):\n    return a in sub\n\n\ndef contains_2(a, sub):\n    return sub in a\n\n\nprint(contains([1, 2, 3, 4, 5, 6, 7], [4, 5]))\nprint(contains_2([1, 2, 3, 4, 5, 6, 7], [4, 5]))"
    },
    {
      "rank": 25,
      "score": 8.850707355641543,
      "candidate": "def has_sublist(list, sublist):\n    for i in range(len(list) - len(sublist) + 1):\n        if list[i:i+len(sublist)] == sublist:\n            return True\n    return False\n\ndef main():\n    print(has_sublist([1, 2, 3, 4, 5], [2, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2]))\n    print(has_sublist([1, 2, 3, 4, 5], [1]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 3]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 3]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 3, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 4]))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 26,
      "score": 8.8281618090209,
      "candidate": "def sublist_check(list, sublist):\n    if len(list) == 0 or len(sublist) == 0:\n        return False\n    else:\n        for i in range(len(list)):\n            if list[i] in sublist:\n                return True\n        return False\n\n\nif __name__ == \"__main__\":\n    print(sublist_check([1, 2, 3, 4, 5], [1, 2]))\n    print(sublist_check([1, 2, 3, 4, 5], [3, 4]))\n    print(sublist_check([1, 2, 3, 4, 5], [1, 3]))\n    print(sublist_check([1, 2, 3, 4, 5], [4, 5]))"
    },
    {
      "rank": 27,
      "score": 8.81367773444215,
      "candidate": "def contains_sublist(l, s):\n    return s in l\n\n\nprint(contains_sublist([1, 2, 3], 3))\nprint(contains_sublist([1, 2, 3], 4))\nprint(contains_sublist([1, 2, 3], 5))\nprint(contains_sublist([1, 2, 3], 6))"
    },
    {
      "rank": 28,
      "score": 8.76828871349479,
      "candidate": "def contains_sub(list, sub):\n    return any(sub in item for item in list)\n\nprint(contains_sub([1,2,3,4], 3))\nprint(contains_sub([1,2,3,4], 4))\nprint(contains_sub([1,2,3,4], 5))\nprint(contains_sub([1,2,3,4], 6))\nprint(contains_sub([1,2,3,4], 7))\nprint(contains_sub([1,2,3,4], 8))\nprint(contains_sub([1,2,3,4], 9))\nprint(contains_sub([1,2,3,4], 10))\nprint(contains_sub([1,2,3,4], 11))\nprint(contains_sub([1,2,3,4], 12))\nprint(contains_sub([1,2,3,4], 13))\nprint(contains_sub([1,2,3,4], 14))\nprint(contains_sub([1,2,3,4], 15))\nprint(contains_sub([1,2,3,4], 16))\nprint(contains_sub([1,2,3,4], 17))\nprint(contains_sub([1,2,3,4], 18))\nprint(contains_sub([1,2,3,4], 19))\nprint(contains_sub([1,2,3,4], 20))"
    },
    {
      "rank": 29,
      "score": 8.750282588864879,
      "candidate": "def contains(nums, sub_list):\n    for num in nums:\n        if num in sub_list:\n            return True\n    return False\n\n\nprint(contains([1, 2, 3, 4, 5], [2, 4]))\nprint(contains([1, 2, 3, 4, 5], [2, 3]))\nprint(contains([1, 2, 3, 4, 5], [2, 4, 5, 6]))"
    },
    {
      "rank": 30,
      "score": 8.715724466237427,
      "candidate": "def contains_sublist(list, sub):\n    for i in range(len(list)):\n        if list[i] == sub:\n            return True\n    return False\n\nprint(contains_sublist([1, 2, 3, 4, 5], 2))\nprint(contains_sublist([1, 2, 3, 4, 5], 4))\nprint(contains_sublist([1, 2, 3, 4, 5], 1))\nprint(contains_sublist([1, 2, 3, 4, 5], 3))\nprint(contains_sublist([1, 2, 3, 4, 5], 5))"
    },
    {
      "rank": 31,
      "score": 8.692801520950061,
      "candidate": "def contains_sublist(l, s):\n    for i in l:\n        if i in s:\n            return True\n    return False\n\nprint(contains_sublist([1,2,3,4], [1,3]))\nprint(contains_sublist([1,2,3,4], [2,4]))\nprint(contains_sublist([1,2,3,4], [3]))"
    },
    {
      "rank": 32,
      "score": 8.632293453617281,
      "candidate": "def check_sublist(list_, sublist):\n    for i in range(len(list_)):\n        if list_[i] in sublist:\n            return True\n    return False\n\n\nlist_ = [1, 2, 3, 4, 5, 6]\nsublist = [2, 3, 5]\n\nprint(check_sublist(list_, sublist))"
    },
    {
      "rank": 33,
      "score": 8.625262456968262,
      "candidate": "def contains(arr, sublist):\n    for i in arr:\n        if i in sublist:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert contains([1, 2, 3, 4, 5, 6, 7], [1, 2]) == True\n    assert contains([1, 2, 3, 4, 5, 6, 7], [5, 6]) == False"
    },
    {
      "rank": 34,
      "score": 8.625142247198651,
      "candidate": "def contains(list1, list2):\n    for item in list1:\n        if item in list2:\n            return True\n    return False\n\nprint(contains([1,2,3,4,5],[2,4]))"
    },
    {
      "rank": 35,
      "score": 8.616253589228675,
      "candidate": "def contains(list, sub):\n    for i in range(len(list)):\n        if list[i:i+len(sub)] == sub:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(contains([1, 2, 3, 4, 5, 6], [2, 3]))"
    },
    {
      "rank": 36,
      "score": 8.610076160146226,
      "candidate": "def contains_sublist(list, sub_list):\n    for element in sub_list:\n        if element in list:\n            return True\n    return False\n\nprint(contains_sublist([1,2,3,4,5], [2,4]))\nprint(contains_sublist([1,2,3,4,5], [2,3]))\nprint(contains_sublist([1,2,3,4,5], [3,4]))\nprint(contains_sublist([1,2,3,4,5], [1]))"
    },
    {
      "rank": 37,
      "score": 8.606486429141842,
      "candidate": "def check_sublist(list, sublist):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\nprint(check_sublist([1,2,3,4], [2]))\nprint(check_sublist([1,2,3,4], [3]))\nprint(check_sublist([1,2,3,4], [2,3,4]))\nprint(check_sublist([1,2,3,4], [1,2,3]))"
    },
    {
      "rank": 38,
      "score": 8.60156811074208,
      "candidate": "def check_sublist(list, sublist):\n    for i in range(len(list)):\n        if list[i] in sublist:\n            return True\n    return False\n\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8]\nsublist = [1, 4]\n\nprint(check_sublist(list, sublist))"
    },
    {
      "rank": 39,
      "score": 8.565425580227462,
      "candidate": "def list_contains(list, sub_list):\n    for i in range(len(sub_list)):\n        if sub_list[i] in list:\n            return True\n    return False\n\nif __name__ == '__main__':\n    list1 = [1,2,3,4]\n    sub_list = [1,2]\n    print(list_contains(list1, sub_list))"
    },
    {
      "rank": 40,
      "score": 8.548876241946822,
      "candidate": "def check_sublist(lst, sublist):\n    for i in range(len(lst)):\n        if lst[i] in sublist:\n            return True\n    return False\n\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))"
    },
    {
      "rank": 41,
      "score": 8.542875062379007,
      "candidate": "def check_list_sublist(list, sublist):\n    for item in sublist:\n        if item not in list:\n            return False\n    return True\n\n\nlist1 = [1, 2, 3, 4, 5, 6]\nlist2 = [3, 4, 5]\n\nprint(check_list_sublist(list1, list2))"
    },
    {
      "rank": 42,
      "score": 8.53012858503943,
      "candidate": "def contains_sublist(list_to_search, sublist):\n    for element in sublist:\n        if element not in list_to_search:\n            return False\n    return True\n\nlist_to_search = [1, 3, 5, 4, 7]\nsublist = [3, 5, 7]\nprint(contains_sublist(list_to_search, sublist))"
    },
    {
      "rank": 43,
      "score": 8.499905739299377,
      "candidate": "def check_if_sublist_exist(list_of_sublists, sublist):\n    for sublist in sublist:\n        if sublist in list_of_sublists:\n            return True\n    return False\n\nlist_of_sublists = [\"ab\", \"cd\", \"cde\", \"dde\", \"ede\", \"fde\"]\nsublist = [\"ede\"]\n\nif check_if_sublist_exist(list_of_sublists, sublist):\n    print(\"List contains the sublist\")\nelse:\n    print(\"List does not contain the sublist\")"
    },
    {
      "rank": 44,
      "score": 8.478208546788407,
      "candidate": "def contains_sublist(list_, sub_list):\n    for i in sub_list:\n        if i in list_:\n            return True\n    return False\n\n\nprint(contains_sublist([1, 2, 3, 4, 5], [1, 3]))\nprint(contains_sublist([1, 2, 3, 4, 5], [3, 4]))\nprint(contains_sublist([1, 2, 3, 4, 5], [5, 4]))\nprint(contains_sublist([1, 2, 3, 4, 5], [4, 3]))\nprint(contains_sublist([1, 2, 3, 4, 5], [5, 4, 3]))\nprint(contains_sublist([1, 2, 3, 4, 5], [3, 4, 5]))"
    },
    {
      "rank": 45,
      "score": 8.437695832075478,
      "candidate": "def check_list(list_, sub_list):\n    for i in sub_list:\n        if i not in list_:\n            return False\n    return True\n\nlist1 = [1, 2, 3, 4, 5, 6]\nlist2 = [2, 3, 4, 5, 6, 7]\n\nprint(check_list(list1, list2))"
    },
    {
      "rank": 46,
      "score": 8.426531424889468,
      "candidate": "def contains(arr, sub):\n    for i in sub:\n        if i not in arr:\n            return False\n    return True\n\nprint(contains([1,2,3,4,5,6,7], [5,6]))\nprint(contains([1,2,3,4,5,6,7], [3,4,5]))\nprint(contains([1,2,3,4,5,6,7], [1,5]))\nprint(contains([1,2,3,4,5,6,7], [1,6]))\nprint(contains([1,2,3,4,5,6,7], [2,4]))\nprint(contains([1,2,3,4,5,6,7], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7], [1,3,5]))\nprint(contains([1,2,3,4,5,6,7], [1,2]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4]))\nprint(contains([1,2,3,4,5,6,7], [1,2]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4]))\nprint(contains([1,2,3,4,5,6,7], [3,4,5]))\nprint(contains([1,2,3,4,5,6,7], [4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4,6]))\nprint(contains([1,2,3,4,5,6,7], [3,4,5,6,7]))\nprint(contains([1,2,3,4,5"
    },
    {
      "rank": 47,
      "score": 8.408439383654278,
      "candidate": "def contains_sublist(list_, sublist):\n    return sublist in list_\n\n\ndef main():\n    print(contains_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 48,
      "score": 8.386620303250325,
      "candidate": "def check_if_list_contains(list, sub_list):\n    for item in sub_list:\n        if item in list:\n            return True\n    return False\n\n\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 2]))\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 3]))\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 3, 2]))"
    },
    {
      "rank": 49,
      "score": 8.375312293858853,
      "candidate": "def check_sublist(lst, sublist):\n    for i in range(len(lst)):\n        if lst[i] in sublist:\n            return True\n    return False\n\n\nlst = [1, 2, 3, 4, 5]\nsublist = [2, 3]\nprint(check_sublist(lst, sublist))"
    },
    {
      "rank": 50,
      "score": 8.351614956112536,
      "candidate": "def contains_sublist(lst, sub):\n    for i in lst:\n        if i in sub:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, 4, 5, 6]\n    sub = [1, 3]\n    print(contains_sublist(lst, sub))"
    },
    {
      "rank": 51,
      "score": 8.331556294201176,
      "candidate": "def check_sub_list(lst, sub_list):\n    if len(lst) < len(sub_list):\n        return False\n    else:\n        for i in range(len(sub_list)):\n            if sub_list[i] not in lst:\n                return False\n        return True\n\n\nprint(check_sub_list([1, 2, 3, 4, 5, 6, 7], [2, 5]))\nprint(check_sub_list([1, 2, 3, 4, 5, 6, 7], [2, 3]))\nprint(check_sub_list([1, 2, 3, 4, 5, 6, 7], [1, 2]))"
    },
    {
      "rank": 52,
      "score": 8.327375965969855,
      "candidate": "def contains_sub_list(list, sub_list):\n    return all(x in list for x in sub_list)\n\n\nprint(contains_sub_list([1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 53,
      "score": 8.327367757082776,
      "candidate": "def contains_sublist(list, sublist):\n    return sublist in list\n\n\nif __name__ == \"__main__\":\n    assert contains_sublist([1, 2, 3], [1, 2]) == True\n    assert contains_sublist([1, 2, 3], [2]) == False\n    assert contains_sublist([1, 2, 3], [3]) == True\n    assert contains_sublist([1, 2, 3], [1]) == False\n    assert contains_sublist([1, 2, 3], [2, 3]) == False\n    assert contains_sublist([1, 2, 3], [1, 3]) == True\n    assert contains_sublist([1, 2, 3], [2, 4]) == False\n    assert contains_sublist([1, 2, 3], [3, 4]) == True\n    assert contains_sublist([1, 2, 3], [3, 3]) == True\n    assert contains_sublist([1, 2, 3], [3, 4]) == False\n    assert contains_sublist([1, 2, 3], [3, 5]) == False"
    },
    {
      "rank": 54,
      "score": 8.298597569547805,
      "candidate": "def contains_sublist(list, sublist):\n    for element in sublist:\n        if element in list:\n            return True\n    return False\n\n\nprint(contains_sublist([1, 2, 3], [1, 2, 3]))\nprint(contains_sublist([1, 2, 3], [2, 3]))"
    },
    {
      "rank": 55,
      "score": 8.2938925966498,
      "candidate": "def sublist_check(sublist, lst):\n    for i in range(len(sublist)):\n        if sublist[i] in lst:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(sublist_check([1, 2, 3, 4], [1, 2, 3]))"
    },
    {
      "rank": 56,
      "score": 8.289838256518838,
      "candidate": "def check_list(lst, sublist):\n    return lst[0:len(sublist)] == sublist\n\n\nprint(check_list([1, 2, 3, 4, 5], [2, 3]))\nprint(check_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]))"
    },
    {
      "rank": 57,
      "score": 8.251903304236286,
      "candidate": "def check_list(list1, sublist):\n    for i in sublist:\n        if i not in list1:\n            return False\n    return True\n\nprint(check_list([1, 2, 3, 4, 5, 6], [1, 3, 5, 6]))\nprint(check_list([1, 2, 3, 4, 5, 6], [1, 4]))\nprint(check_list([1, 2, 3, 4, 5, 6], [2, 4]))\nprint(check_list([1, 2, 3, 4, 5, 6], [1, 5, 6]))"
    },
    {
      "rank": 58,
      "score": 8.214125058964552,
      "candidate": "def contains_sublist(sublist, list):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\n\nprint(contains_sublist([1, 2, 3], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 59,
      "score": 8.212735598038213,
      "candidate": "def check_sub(lst, sub):\n    for i in range(len(lst)):\n        if lst[i] in sub:\n            return True\n    return False\n\n\nprint(check_sub([1, 2, 3, 4, 5], [3, 4, 5]))"
    },
    {
      "rank": 60,
      "score": 8.211579567659316,
      "candidate": "def contains(s, e):\n    if e not in s:\n        return False\n    return True\n\ndef main():\n    s = [1,2,3,4,5]\n    e = [1,2,3]\n\n    print(contains(s, e))\n\nif __name__ == \"__main__\":\n    main()\n\n\"\"\"\nTime Complexity: O(n)\nSpace Complexity: O(1)\n\"\"\""
    },
    {
      "rank": 61,
      "score": 8.209707251476969,
      "candidate": "def check_sublist(lst, sub_list):\n    for i in range(len(lst)):\n        if lst[i] in sub_list:\n            return True\n    return False\n\n\nlst = [1, 2, 3, 4, 5, 6]\nsub_list = [1, 4]\nprint(check_sublist(lst, sub_list))"
    },
    {
      "rank": 62,
      "score": 8.2048573255218,
      "candidate": "def sublist(lst, sublist):\n    return lst.count(sublist) == 1\n\n\nif __name__ == \"__main__\":\n    print(sublist([1, 2, 3, 4], 3))"
    },
    {
      "rank": 63,
      "score": 8.172253082181854,
      "candidate": "def contains_list_sublist(arr, sub_list):\n    for i in range(len(arr)):\n        if arr[i] in sub_list:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(contains_list_sublist([1, 2, 3], [2, 3]))\n    print(contains_list_sublist([1, 2, 3], [2, 4]))\n    print(contains_list_sublist([1, 2, 3], [1, 4]))\n    print(contains_list_sublist([1, 2, 3], [1, 5]))"
    },
    {
      "rank": 64,
      "score": 8.163300679823958,
      "candidate": "def check_sublist(list, sublist):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\nlist1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsublist1 = [5, 6]\nprint(check_sublist(list1, sublist1))\n\nlist2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsublist2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nprint(check_sublist(list2, sublist2))\n\nlist3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsublist3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\nprint(check_sublist(list3, sublist3))"
    },
    {
      "rank": 65,
      "score": 8.144125099485041,
      "candidate": "def has_sub_list(lst, sub):\n    for i in sub:\n        if i not in lst:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, 4, 5, 6]\n    sub = [2, 3]\n    print(has_sub_list(lst, sub))"
    },
    {
      "rank": 66,
      "score": 8.143591138329747,
      "candidate": "def contains_list(list, sublist):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\nprint(contains_list([1, 2, 3, 4, 5], [2]))\nprint(contains_list([1, 2, 3, 4, 5], [3]))\nprint(contains_list([1, 2, 3, 4, 5], [4]))\nprint(contains_list([1, 2, 3, 4, 5], [4, 3]))\nprint(contains_list([1, 2, 3, 4, 5], [4, 3, 5]))"
    },
    {
      "rank": 67,
      "score": 8.121884567141883,
      "candidate": "def check_sublist(l: list, sublist: list) -> bool:\n    for i in sublist:\n        if i not in l:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert check_sublist([1, 2, 3], [1, 2]) == True\n    assert check_sublist([1, 2, 3], [3, 2]) == False\n    assert check_sublist([1, 2, 3], [1]) == False\n    assert check_sublist([1, 2, 3], [2, 3]) == True\n    assert check_sublist([1, 2, 3], [3, 2]) == False\n    assert check_sublist([1, 2, 3], [2, 1]) == False\n    assert check_sublist([1, 2, 3], [2, 3, 1]) == True\n    assert check_sublist([1, 2, 3], [2, 3, 2]) == True\n    assert check_sublist([1, 2, 3], [3, 2, 2]) == False"
    },
    {
      "rank": 68,
      "score": 8.105983444291466,
      "candidate": "def contains_sub_list(list, sub_list):\n    for i in sub_list:\n        if i in list:\n            return True\n    return False\n\n\nlist_1 = [1, 3, 5, 7, 9]\nsub_list = [5, 7, 9]\n\nprint(contains_sub_list(list_1, sub_list))"
    },
    {
      "rank": 69,
      "score": 8.08452234024709,
      "candidate": "def contains_list_sublist(my_list, sublist):\n    for i in range(len(my_list)):\n        if my_list[i] in sublist:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    my_list = [1, 2, 3, 4, 5, 6]\n    sublist = [2, 4, 6]\n    print(contains_list_sublist(my_list, sublist))"
    },
    {
      "rank": 70,
      "score": 8.024835682833125,
      "candidate": "def check_sublist(list, sub):\n    for i in range(len(list)):\n        if list[i] == sub:\n            return True\n\n    return False\n\n\nlist = [1, 2, 3, 4, 5, 6]\nsub = 5\n\nprint(check_sublist(list, sub))"
    },
    {
      "rank": 71,
      "score": 7.990432406683839,
      "candidate": "def check_list_contains_sub_list(list, sub_list):\n    for sub in sub_list:\n        if sub in list:\n            return True\n    return False\n\n\nlist = [1, 2, 3, 4, 5]\nsub_list = [4, 5, 6]\n\nprint(check_list_contains_sub_list(list, sub_list))"
    },
    {
      "rank": 72,
      "score": 7.938028884277233,
      "candidate": "def contains_sublist(lst, sublist):\n    for i in range(len(lst) - len(sublist) + 1):\n        if lst[i:i + len(sublist)] == sublist:\n            return True\n    return False\n\n\nprint(contains_sublist([1, 2, 3], [2, 3]))\nprint(contains_sublist([1, 2, 3], [2, 4]))"
    },
    {
      "rank": 73,
      "score": 7.915588979966494,
      "candidate": "def contains_sublist(list_, sublist):\n    for i in sublist:\n        if i not in list_:\n            return False\n    return True\n\nprint(contains_sublist([1,2,3,4,5], [1,2,3]))\nprint(contains_sublist([1,2,3,4,5], [3,4]))\nprint(contains_sublist([1,2,3,4,5], [5,4]))\nprint(contains_sublist([1,2,3,4,5], [1,2,3,4,5,6,7]))\nprint(contains_sublist([1,2,3,4,5], [1,2,3,4,5,6,7,8,9]))"
    },
    {
      "rank": 74,
      "score": 7.8912769574414305,
      "candidate": "def sublist(arr, sublist):\n    return len(sublist) == 0 or arr[sublist[0]] in sublist or arr[sublist[-1]] in sublist\n\nprint(sublist([1,2,3,4,5], [2,4]))\nprint(sublist([1,2,3,4,5], [1]))\nprint(sublist([1,2,3,4,5], [3,4]))\nprint(sublist([1,2,3,4,5], [1,4]))\nprint(sublist([1,2,3,4,5], [1,5]))\nprint(sublist([1,2,3,4,5], [1,4,3]))\nprint(sublist([1,2,3,4,5], [1,5,4]))\nprint(sublist([1,2,3,4,5], [1,4,3,5]))\nprint(sublist([1,2,3,4,5], [1,4,4]))\nprint(sublist([1,2,3,4,5], [2,3]))\nprint(sublist([1,2,3,4,5], [1,4,4,5]))"
    },
    {
      "rank": 75,
      "score": 7.868947655733293,
      "candidate": "def contains_sub(list, sub):\n    if len(list) == 0:\n        return False\n    for i in range(len(list)):\n        if list[i] == sub:\n            return True\n    return False\n\nprint(contains_sub([1, 2, 3, 4, 5, 6], 5))"
    },
    {
      "rank": 76,
      "score": 7.84634113240411,
      "candidate": "def sublist(list, sub):\n    for i in sub:\n        if i in list:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(sublist([1, 2, 3, 4, 5], [1, 2]))\n    print(sublist([1, 2, 3, 4, 5], [5, 2]))\n    print(sublist([1, 2, 3, 4, 5], [4, 2]))\n    print(sublist([1, 2, 3, 4, 5], [2, 4]))\n    print(sublist([1, 2, 3, 4, 5], [4, 4, 4, 4, 4]))\n    print(sublist([1, 2, 3, 4, 5], [4, 4, 4, 4, 4]))\n    print(sublist([1, 2, 3, 4, 5], [1, 2, 3]))"
    },
    {
      "rank": 77,
      "score": 7.834022619458933,
      "candidate": "def check_list_contains_sub_list(list, sub_list):\n    for i in sub_list:\n        if i in list:\n            return True\n    return False\n\nlist = [1,2,3,4,5,6]\nsub_list = [4,5]\nprint(check_list_contains_sub_list(list, sub_list))"
    },
    {
      "rank": 78,
      "score": 7.780351419995229,
      "candidate": "def contains(list1, sublist):\n    return sublist in list1\n\nprint(contains([1,2,3,4,5,6,7,8,9], [1,2,3,4,5,6,7,8,9]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,5,6,7,8]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7,8,9]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4"
    },
    {
      "rank": 79,
      "score": 7.738292593776799,
      "candidate": "def contains_sublist(list, sublist):\n    for i in range(len(list)):\n        if list[i:i+len(sublist)] == sublist:\n            return True\n    return False\n\nprint(contains_sublist([1,2,3], [1,2]))\nprint(contains_sublist([1,2,3], [2,3]))\nprint(contains_sublist([1,2,3], [1,4]))\nprint(contains_sublist([1,2,3], [3,4]))"
    },
    {
      "rank": 80,
      "score": 7.7320703513377165,
      "candidate": "def sublist_check(list1, sublist):\n    for i in range(len(list1)):\n        if sublist == list1[i:i+len(sublist)]:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    list1 = [1, 2, 3, 4, 5]\n    sublist = [1, 2]\n    print(sublist_check(list1, sublist))"
    },
    {
      "rank": 81,
      "score": 7.705183449260731,
      "candidate": "def check_list_contains(list_, sublist):\n    for i in sublist:\n        if i not in list_:\n            return False\n    return True\n\nprint(check_list_contains([1,2,3,4,5], [2,4]))"
    },
    {
      "rank": 82,
      "score": 7.5819855281879285,
      "candidate": "def check_sublist(lst, sub):\n    for i in lst:\n        if i in sub:\n            return True\n    return False\n\n\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3]))"
    },
    {
      "rank": 83,
      "score": 7.562924366763077,
      "candidate": "def check_sublist(arr, sub):\n    for i in range(len(arr)):\n        if arr[i] in sub:\n            return True\n    return False\n\n\nprint(check_sublist([1, 2, 3], [1, 3]))\nprint(check_sublist([1, 2, 3], [2]))\nprint(check_sublist([1, 2, 3], [1, 3]))"
    },
    {
      "rank": 84,
      "score": 7.4878043221155455,
      "candidate": "def check_sub_list(lst, sub_list):\n    for i in sub_list:\n        if i not in lst:\n            return False\n    return True\n\n\nprint(check_sub_list([1, 2, 3, 4, 5], [2, 3, 4]))"
    },
    {
      "rank": 85,
      "score": 7.464609382504557,
      "candidate": "def check_list(lst, sublist):\n    return sublist in lst\n\n\nprint(check_list([1, 2, 3, 4, 5], [1, 2]))\nprint(check_list([1, 2, 3, 4, 5], [3, 4]))\nprint(check_list([1, 2, 3, 4, 5], [5, 6]))\nprint(check_list([1, 2, 3, 4, 5], [6, 7]))\nprint(check_list([1, 2, 3, 4, 5], [8, 9]))"
    },
    {
      "rank": 86,
      "score": 7.134571892399572,
      "candidate": "def sublist_check(arr, sublist):\n    if sublist in arr:\n        return True\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    print(sublist_check([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 3, 4]))"
    },
    {
      "rank": 87,
      "score": 3.0,
      "candidate": "def check_list(list, sub):\n    return all(item in list for item in sub)\n\nprint(check_list([1,2,3,4,5,6], [1,2,3]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5]))\nprint(check_list([1,2,3,4,5,6], [1,2]))\nprint(check_list([1,2,3,4,5,6], [1,3,4]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5]))\nprint(check_list([1,2,3,4,5,6], [1,2]))\nprint(check_list([1,2,3,4,5,6], [1,2,3]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8,9,10]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8,9,10,11]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]))"
    },
    {
      "rank": 88,
      "score": 3.0,
      "candidate": "def contains_sublist(list_of_elements, sublist):\n    for i in sublist:\n        if i not in list_of_elements:\n            return False\n    return True\n\nlist_of_elements = [1,2,3,4,5,6,7,8,9,10]\nsublist = [1,5]\n\nprint(contains_sublist(list_of_elements, sublist))"
    },
    {
      "rank": 89,
      "score": 3.0,
      "candidate": "def sublist_exists(lst, sublist):\n    return lst.count(sublist)!= 0\n\n\nprint(sublist_exists([1, 2, 3, 4, 5], 1))\nprint(sublist_exists([1, 2, 3, 4, 5], 3))\nprint(sublist_exists([1, 2, 3, 4, 5], 5))\nprint(sublist_exists([1, 2, 3, 4, 5], 4))"
    },
    {
      "rank": 90,
      "score": 3.0,
      "candidate": "def check_sublist(list_, sublist):\n    return sublist in list_\n\ndef test_sublist():\n    assert check_sublist([1, 2, 3, 4, 5], [1, 2]) == True\n    assert check_sublist([1, 2, 3, 4, 5], [2, 3]) == False\n    assert check_sublist([1, 2, 3, 4, 5], [1, 5]) == True\n    assert check_sublist([1, 2, 3, 4, 5], [2, 3, 4]) == False"
    },
    {
      "rank": 91,
      "score": 3.0,
      "candidate": "def check_list(list, sublist):\n    return sublist in list\n\nlist = [1,2,3,4,5,6]\nprint(check_list(list, 4))\nprint(check_list(list, 5))\nprint(check_list(list, 1))\nprint(check_list(list, 6))\nprint(check_list(list, 2))\nprint(check_list(list, 1))\nprint(check_list(list, 7))\nprint(check_list(list, 4))\nprint(check_list(list, 2))\nprint(check_list(list, 3))"
    },
    {
      "rank": 92,
      "score": 3.0,
      "candidate": "def check(list, sub):\n    if sub in list:\n        return True\n    else:\n        return False\n\n\nprint(check([1, 2, 3], 1))\nprint(check([1, 2, 3], 2))\nprint(check([1, 2, 3], 3))\nprint(check([1, 2, 3], 4))"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def contains_sublist(l, s):\n    for i in range(len(l)):\n        if l[i] in s:\n            return True\n    return False\n\n\nl = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ns = [1, 2]\n\nprint(contains_sublist(l, s))\nprint(contains_sublist(l, s))\nprint(contains_sublist(l, s))\nprint(contains_sublist(l, s))"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "def check_if_list_contains(list, sublist):\n    return any(x in sublist for x in list)\n\n\ndef check_if_list_not_contains(list, sublist):\n    return any(x not in sublist for x in list)\n\n\nif __name__ == '__main__':\n    assert check_if_list_contains([1, 2, 3, 4], [2, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [2, 1]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [2, 1, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 2, 3, 4]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [2, 4]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 4]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 5]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 2, 4]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 4, 5]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 5, 2]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 4, 5]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 5, 2, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 5, 2, 3, 2]) == False\n    assert check_if_list_"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def contains(lst, sub):\n    if len(lst) == 0:\n        return False\n    if len(sub) == 0:\n        return True\n    if lst[0] in sub:\n        return contains(lst[1:], sub[1:])\n    else:\n        return contains(lst[1:], sub)\n\n\nlst = [1, 2, 3, 4, 5]\nsub = [2, 3]\n\nprint(contains(lst, sub))"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def check_sub_list(list_, sub_list):\n    return list_ in sub_list\n\n\nprint(check_sub_list([1, 2, 3, 4], [1, 2]))\nprint(check_sub_list([1, 2, 3, 4], [2, 4]))\nprint(check_sub_list([1, 2, 3, 4], [1, 3]))\nprint(check_sub_list([1, 2, 3, 4], [1, 4]))"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def check_list(list_, sublist):\n    if len(list_) == 0:\n        return False\n    elif list_[0] in sublist:\n        return True\n    else:\n        return False\n\nlist_ = [1,2,3,4,5]\nsublist = [3,4,5]\nprint(check_list(list_, sublist))"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def contains_sublist(list_of_elements, sublist):\n    return sublist in list_of_elements\n\n\nlist_of_elements = [1, 2, 3, 4, 5, 6]\nsublist = [1, 3]\n\nprint(contains_sublist(list_of_elements, sublist))\n\nlist_of_elements = [1, 2, 3, 4, 5, 6]\nsublist = [1, 3, 5]\n\nprint(contains_sublist(list_of_elements, sublist))\n\nlist_of_elements = [1, 2, 3, 4, 5, 6]\nsublist = [1, 3, 5, 7, 9]\n\nprint(contains_sublist(list_of_elements, sublist))"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def check_sublist(list, sublist):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\n\nprint(check_sublist([1, 2, 3, 4, 5], [2, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [3, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def contains_sublist(list, sub_list):\n    if len(list) == len(sub_list):\n        return True\n    else:\n        return False\n\nprint(contains_sublist([1,2,3,4,5], [2,4]))\nprint(contains_sublist([1,2,3,4,5], [5]))"
    }
  ]
}