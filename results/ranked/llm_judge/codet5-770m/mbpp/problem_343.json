{
  "timestamp": "2025-09-14T14:59:14.328224",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 343,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def arith_progression(t, n):\n    \"\"\"\n    :type t: int\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return t ** n\n\n\ndef test_arith_progression():\n    assert arith_progression(1, 1) == 1\n    assert arith_progression(1, 2) == 1\n    assert arith_progression(1, 3) == 1\n    assert arith_progression(3, 1) == 6\n    assert arith_progression(3, 2) == 3\n    assert arith_progression(3, 3) == 6\n    assert arith_progression(3, 4) == 9\n    assert arith_progression(5, 1) == 14\n    assert arith_progression(5, 2) == 28\n    assert arith_progression(5, 3) == 36\n    assert arith_progression(5, 4) == 416\n    assert arith_progression(6, 1) == 368\n    assert arith_progression(6, 2) == 524\n    assert arith_progression(6, 3) == 572\n    assert arith_progression(6, 4) == 576\n    assert arith_progression(6, 5) == 640\n    assert arith_progression(6, 6) == 624\n    assert arith_progression(6, 7) == 680\n    assert arith_progression(7, 1) == 672\n    assert arith_progression(7, 2) == 724\n    assert arith_progression(7, 3) == 736\n    assert arith_progression(7, 4) == 740\n    assert arith_progression(7, 5) == 768\n    assert arith_progression(7, 6) == 796\n    assert arith_progression(7, 7) == 796\n    assert arith_progression(7, 8) == 796\n    assert arith_progression(7, 9) == 796\n    assert arith_progression(8, 1) == 832\n    assert arith_progression(8, 2) == 8"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def arith_progression(t, n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return t\n    return arith_progression(t, n-1) + t\n\n\ndef test_arith_progression():\n    assert arith_progression(2, 2) == 1\n    assert arith_progression(2, 3) == 6\n    assert arith_progression(2, 4) == 18\n    assert arith_progression(2, 5) == 24\n    assert arith_progression(2, 6) == 36\n    assert arith_progression(2, 7) == 48\n    assert arith_progression(2, 8) == 64\n    assert arith_progression(2, 9) == 72\n    assert arith_progression(2, 10) == 96\n    assert arith_progression(2, 11) == 144\n    assert arith_progression(2, 12) == 288\n    assert arith_progression(2, 13) == 384\n    assert arith_progression(2, 14) == 464\n    assert arith_progression(2, 15) == 576\n    assert arith_progression(2, 16) == 624\n    assert arith_progression(2, 17) == 784\n    assert arith_progression(2, 18) == 896\n    assert arith_progression(2, 19) == 956\n    assert arith_progression(2, 20) == 1280\n    assert arith_progression(2, 21) == 1360\n    assert arith_progression(2, 22) == 1464\n    assert arith_progression(2, 23) == 1536\n    assert arith_progression(2, 24) == 1664\n    assert arith_progression(2, 25) == 1736\n    assert arith_progression(2, 26) == 1864\n    assert arith_progression(2, 27) == 1936\n    assert arith_progression(2, 28) == 2064\n    assert arith_progression(2, 29) == 2164\n    assert arith_progression"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def arith_prog(n, t):\n    result = []\n    result.append(1)\n    for i in range(1, n+1):\n        result.append(result[i-1] + t)\n    return result\n\nprint(arith_prog(5, 3))\n\n#Time Complexity: O(n)\n#Space Complexity: O(1)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def arith_prog(n):\n    return n * arith_prog(n-1)\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter n: \"))\n    print(arith_prog(n))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def arith(n, t):\n    return t**n\n\n\nprint(arith(3, 5))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def arith_progression(t,n):\n    if t<=0:\n        return None\n    if n<=0:\n        return None\n    if t==1:\n        return 1\n    if t==2:\n        return 2\n    if n==2:\n        return 4\n    if t==3:\n        return 6\n    if t==4:\n        return 8\n    if n==3:\n        return 12\n    if t==5:\n        return 16\n    if n==4:\n        return 20\n    if t==6:\n        return 24\n    if n==5:\n        return 32\n    if t==7:\n        return 40\n    if n==6:\n        return 48\n    if t==8:\n        return 60\n    if n==7:\n        return 72\n    if t==9:\n        return 80\n    if n==8:\n        return 96\n    if t==10:\n        return 120\n    if n==9:\n        return 144\n    if t==11:\n        return 160\n    if n==10:\n        return 288\n    if t==12:\n        return 384\n    if n==11:\n        return 456\n    if t==13:\n        return 576\n    if n==12:\n        return 672\n    if t==14:\n        return 720\n    if n==13:\n        return 832\n    if t==15:\n        return 960\n    if n==14:\n        return 1088\n    if t==16:\n        return 1132\n    if n==15:\n        return 1200\n    if t==17:\n        return 1300\n    if n==16:\n        return 1400\n    if t==18:\n        return 1500\n    if n==17:\n        return 1600\n    if t==19:\n        return 1700\n    if n==18:\n        return 1800\n    if t==20:\n        return 1900\n    if n==19:\n        return 2000\n    return None\n\nprint(arith_progression(3,1))\nprint(arith_progression(3,2))\nprint(arith_progress"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def arith_progression(t, n):\n    if t == 1:\n        return 1\n    if t == 2:\n        return 2\n    if t == 3:\n        return 4\n    if t == 4:\n        return 6\n    if t == 5:\n        return 8\n    if t == 6:\n        return 10\n    if t == 7:\n        return 12\n    if t == 8:\n        return 14\n    if t == 9:\n        return 16\n    if t == 10:\n        return 18\n    if t == 11:\n        return 20\n    if t == 12:\n        return 24\n    if t == 13:\n        return 28\n    if t == 14:\n        return 30\n    if t == 15:\n        return 32\n    if t == 16:\n        return 36\n    if t == 17:\n        return 48\n    if t == 18:\n        return 60\n    if t == 19:\n        return 72\n    if t == 20:\n        return 84\n    if t == 21:\n        return 96\n    if t == 22:\n        return 112\n    if t == 23:\n        return 160\n    if t == 24:\n        return 224\n    if t == 25:\n        return 264\n    if t == 26:\n        return 352\n    if t == 27:\n        return 432\n    if t == 28:\n        return 544\n    if t == 29:\n        return 672\n    if t == 30:\n        return 720\n    if t == 31:\n        return 832\n    if t == 32:\n        return 960\n    if t == 33:\n        return 1080\n    if t == 34:\n        return 1100\n    if t == 35:\n        return 1200\n    if t == 36:\n        return 1300\n    if t == 37:\n        return 1400\n    if t == 38:\n        return 1500\n    if t == 39:\n        return 1600\n    if t == 40:\n        return 1700\n    if t == 41:\n        return 1800\n    if t == 42:\n        return 1900\n    if t == 43:\n        return 2000\n    if t"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def arith_progression(t, n):\n    if t == 0:\n        return 1\n    if n == 0:\n        return 0\n    return arith_progression(t-1, n-1) + arith_progression(t-1, n)\n\nprint(arith_progression(3, 5))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def arith_progression(n,t):\n    if n == 0:\n        return 1\n    else:\n        return t * arith_progression(n-1,t)\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(5,2))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    else:\n        return n + arith_progression(n - 1, t)\n\n\ndef main():\n    print(arith_progression(5, 1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 11,
      "score": 9.955441845600683,
      "candidate": "def arith_progression(t, n):\n    return t**n"
    },
    {
      "rank": 12,
      "score": 9.943803190066399,
      "candidate": "def arith_prog(n):\n    num = 1\n    for i in range(n):\n        num *= 10\n    return num\n\n\n\nif __name__ == \"__main__\":\n    print(arith_prog(8))"
    },
    {
      "rank": 13,
      "score": 9.929993500049614,
      "candidate": "def arith_prog(t, n):\n    if t == 0:\n        return 1\n    if t == 1:\n        return 1\n    if t == 2:\n        return 2\n\n    return arith_prog(t-1, n) + arith_prog(t-2, n)\n\n\nprint(arith_prog(3, 2))"
    },
    {
      "rank": 14,
      "score": 9.888224859143138,
      "candidate": "def arithemetic_progression(n, t):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    elif n == 4:\n        return 3\n    elif n == 5:\n        return 4\n    elif n == 6:\n        return 5\n    elif n == 7:\n        return 6\n    elif n == 8:\n        return 7\n    elif n == 9:\n        return 8\n    else:\n        return arithemetic_progression(n-1, t) + arithemetic_progression(n-1, t-1)\n\nn = int(input())\nt = int(input())\nprint(arithemetic_progression(n, t))"
    },
    {
      "rank": 15,
      "score": 9.88499818291713,
      "candidate": "def arith_progression(n):\n    return (1 + (n - 1)**2)**(1/2)\n\n\nprint(arith_progression(3))"
    },
    {
      "rank": 16,
      "score": 9.875615147614324,
      "candidate": "def arith_progression(t, n):\n    if t == 0 or n == 0:\n        return 0\n\n    return arith_progression(t-1, n) + arith_progression(t, n-1)\n\n\nprint(arith_progression(3, 4))"
    },
    {
      "rank": 17,
      "score": 9.805961535305634,
      "candidate": "def arith(n, t):\n    # Write your code here\n    i = 1\n    while(i<=n):\n        print(i, end=\" \")\n        i += t\n\n\narith(7, 2)\narith(4, 2)\narith(5, 2)\narith(6, 2)\narith(7, 2)\narith(8, 2)\narith(9, 2)\narith(10, 2)"
    },
    {
      "rank": 18,
      "score": 9.798587794426567,
      "candidate": "def arithemetic_progression(n, t):\n    return sum(int(x) for x in str(n)) * int(t)\n\n\ndef main():\n    print(arithemetic_progression(100, 2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 19,
      "score": 9.756920531119738,
      "candidate": "def arithemetic_progression(n, t):\n    # Fill this in.\n    a = 1\n    for i in range(t):\n        a = a + (2 * i + 1)\n    return a\n\n\ndef main():\n    print(arithemetic_progression(5, 10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 20,
      "score": 9.746149377050584,
      "candidate": "def arith_prog(n, t):\n    if n == 0:\n        return 1\n\n    else:\n        return arith_prog(n - 1, t) + arith_prog(n - 2, t)\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    t = int(input())\n    result = arith_prog(n, t)\n    print(result)"
    },
    {
      "rank": 21,
      "score": 9.723761541418646,
      "candidate": "def arith_prog(t, n):\n    for i in range(t, n + 1):\n        print(i, end=' ')\n\n\narith_prog(1, 20)"
    },
    {
      "rank": 22,
      "score": 9.645154722311817,
      "candidate": "def arith_progression(n, t):\n    if n < 0:\n        return -1\n    if t < 0:\n        return -1\n    if n == 0:\n        return 1\n    return arith_progression(n-1, t) + arith_progression(n-1, t-1)\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(5, 5))\n    print(arith_progression(5, -1))\n    print(arith_progression(5, 0))"
    },
    {
      "rank": 23,
      "score": 9.586019720196871,
      "candidate": "def arith_progression(t, n):\n    # Write your code here\n    return n\n\nif __name__ == '__main__':\n    print(arith_progression(2, 5))"
    },
    {
      "rank": 24,
      "score": 9.522983460495785,
      "candidate": "def arithemetic_progression(n, t):\n    print(n, t)\n    while n > 0:\n        if n % 2 == 0:\n            print(n, \"x\", t)\n        t = t - 1\n        n = n / 2\n    return\n\n\nif __name__ == \"__main__\":\n    arithemetic_progression(3, 4)"
    },
    {
      "rank": 25,
      "score": 9.370583536698913,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return t\n    else:\n        return arith_progression(n - 1, t) + arith_progression(n - 1, t - 1)\n\n\ndef main():\n    print(arith_progression(5, 1))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 26,
      "score": 9.234050852198141,
      "candidate": "def arith_prog(t, n):\n    if t == 0:\n        return 1\n    elif t == 1:\n        return 2\n    elif t == 2:\n        return 3\n    else:\n        return arith_prog(t-1, n-1) + arith_prog(t-1, n)\n\n\nt = int(input())\nn = int(input())\nprint(arith_prog(t, n))"
    },
    {
      "rank": 27,
      "score": 9.226766272351448,
      "candidate": "def arith_progression(t, n):\n    if t == 0:\n        return 0\n    elif t == 1:\n        return 1\n    elif t == 2:\n        return 2\n    elif t == 3:\n        return 4\n    elif t == 4:\n        return 5\n    else:\n        return arith_progression(t-1, n) + arith_progression(t-2, n) + arith_progression(t-3, n) + arith_progression(t-4, n)\n\n\nprint(arith_progression(5, 4))"
    },
    {
      "rank": 28,
      "score": 9.205959372648458,
      "candidate": "def arithemetic_progression(t, n):\n    if t == 0:\n        return 1\n    else:\n        return t * arithemetic_progression(t - 1, n)\n\nif __name__ == \"__main__\":\n    print(arithemetic_progression(3, 4))"
    },
    {
      "rank": 29,
      "score": 9.183391466815202,
      "candidate": "def arith_progression(t, n):\n    if n == 0:\n        return 1\n    else:\n        return t * arith_progression(t, n - 1)\n\n\nprint(arith_progression(2, 5))\nprint(arith_progression(2, 10))\nprint(arith_progression(2, 15))\nprint(arith_progression(2, 20))\nprint(arith_progression(2, 25))\nprint(arith_progression(2, 30))\nprint(arith_progression(2, 35))\nprint(arith_progression(2, 40))\nprint(arith_progression(2, 45))\nprint(arith_progression(2, 50))\nprint(arith_progression(2, 55))\nprint(arith_progression(2, 60))\nprint(arith_progression(2, 65))\nprint(arith_progression(2, 70))\nprint(arith_progression(2, 75))\nprint(arith_progression(2, 80))\nprint(arith_progression(2, 85))\nprint(arith_progression(2, 90))\nprint(arith_progression(2, 95))\nprint(arith_progression(2, 100))"
    },
    {
      "rank": 30,
      "score": 9.177268828905222,
      "candidate": "def arith_progression(n, t):\n    if n < 0:\n        return -1\n    elif n == 0:\n        return 1\n    else:\n        return arith_progression(n - 1, t) + arith_progression(n - 2, t)\n\n\nprint(arith_progression(10, 1))"
    },
    {
      "rank": 31,
      "score": 8.95994420569242,
      "candidate": "def arithemetic_progression(n, t):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    return t * arithemetic_progression(n-1, t)\n\nprint(arithemetic_progression(10, 3))"
    },
    {
      "rank": 32,
      "score": 8.946210893390457,
      "candidate": "def arithemetic_progression(n, t):\n    ans = []\n    for i in range(1, n + 1):\n        ans.append(i * t)\n    return ans\n\nif __name__ == \"__main__\":\n    print(arithemetic_progression(10, 2))"
    },
    {
      "rank": 33,
      "score": 8.932217008005624,
      "candidate": "def arithemetic_progression(t, n):\n    if t == 0:\n        return 1\n    if t == 1:\n        return 1\n    return arithemetic_progression(t-1, n) + arithemetic_progression(t-1, n-1)\n\nif __name__ == '__main__':\n    print(arithemetic_progression(10, 3))"
    },
    {
      "rank": 34,
      "score": 8.910084504002544,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    if n == 1:\n        return t\n    return arith_progression(n - 1, t) + arith_progression(n - 2, t)\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(4, 2))"
    },
    {
      "rank": 35,
      "score": 8.902145503295483,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    if n == 1:\n        return t\n    return arith_progression(n-1, t*n)\n\nprint(arith_progression(4, 3))"
    },
    {
      "rank": 36,
      "score": 8.85571690049604,
      "candidate": "def arith_progression(n, t):\n\t\"\"\"\n\t:type n: int\n\t:type t: int\n\t:rtype: int\n\t\"\"\"\n\tif n == 0:\n\t\treturn 0\n\tif t == 0:\n\t\treturn 1\n\treturn arith_progression(n-1, t-1) + arith_progression(n-1, t)\n\n\nprint(arith_progression(3, 5))"
    },
    {
      "rank": 37,
      "score": 8.855395696632057,
      "candidate": "def arith_progression(n, t):\n    if n == 1:\n        return \"1\"\n    if n == 2:\n        return \"1\" + arith_progression(n - 1, t)\n    if n == 3:\n        return \"1\" + arith_progression(n - 2, t) + arith_progression(n - 3, t)\n    if n == 4:\n        return \"1\" + arith_progression(n - 4, t) + arith_progression(n - 5, t)\n    if n == 5:\n        return \"1\" + arith_progression(n - 6, t) + arith_progression(n - 7, t)\n    if n == 6:\n        return \"1\" + arith_progression(n - 8, t) + arith_progression(n - 9, t)\n    if n == 7:\n        return \"1\" + arith_progression(n - 10, t) + arith_progression(n - 11, t)\n    if n == 8:\n        return \"1\" + arith_progression(n - 12, t) + arith_progression(n - 13, t)\n    if n == 9:\n        return \"1\" + arith_progression(n - 14, t) + arith_progression(n - 15, t)\n    if n == 10:\n        return \"1\" + arith_progression(n - 16, t) + arith_progression(n - 17, t)\n    if n == 11:\n        return \"1\" + arith_progression(n - 18, t) + arith_progression(n - 19, t)\n    if n == 12:\n        return \"1\" + arith_progression(n - 20, t) + arith_progression(n - 21, t)\n    if n == 13:\n        return \"1\" + arith_progression(n - 22, t) + arith_progression(n - 23, t)\n    if n == 14:\n        return \"1\" + arith_progression(n - 24, t) + arith_"
    },
    {
      "rank": 38,
      "score": 8.8281618090209,
      "candidate": "def arith_prog(n, t):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return t\n    else:\n        return arith_prog(n - 1, t * (n - 1)) + arith_prog(n - 1, t)\n\nprint(arith_prog(10, 3))"
    },
    {
      "rank": 39,
      "score": 8.81367773444215,
      "candidate": "def arith_progression(n, t):\n    return (\n        ((n + 1) * (n + 2) * (n + 3) * (n + 4)) // (5 * t)\n        + ((n + 1) * (n + 2) * (n + 3) * (n + 4) * (t)) // (5 * (t + 1))\n    )\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(3, 2))"
    },
    {
      "rank": 40,
      "score": 8.76828871349479,
      "candidate": "def arith_prog(n):\n    def arith_prog_helper(n, a):\n        if n == 0:\n            return a\n        else:\n            return arith_prog_helper(n-1, a*n)\n    return arith_prog_helper(n, 1)\n\nprint(arith_prog(3))"
    },
    {
      "rank": 41,
      "score": 8.750282588864879,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    else:\n        return t * arith_progression(n - 1, t)\n\n\ndef main():\n    n = int(input(\"Enter n: \"))\n    t = int(input(\"Enter t: \"))\n    print(arith_progression(n, t))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 42,
      "score": 8.715724466237427,
      "candidate": "def arithemetic_progression(n, t):\n    if n == 0:\n        return 1\n    if t == 1:\n        return 2\n    if t == 2:\n        return 3\n    if t == 3:\n        return 4\n    if t == 4:\n        return 5\n    return arithemetic_progression(n-1, t) + arithemetic_progression(n-1, t-1)\n\n\nif __name__ == '__main__':\n    print(arithemetic_progression(5, 3))\n    print(arithemetic_progression(6, 2))\n    print(arithemetic_progression(6, 3))\n    print(arithemetic_progression(6, 4))\n    print(arithemetic_progression(6, 5))\n    print(arithemetic_progression(6, 7))\n    print(arithemetic_progression(6, 8))\n    print(arithemetic_progression(6, 9))"
    },
    {
      "rank": 43,
      "score": 8.701078161001123,
      "candidate": "def arithemetic_progression(n, t):\n    if t == 0:\n        return 1\n    else:\n        return n + arithemetic_progression(n, t-1)\n\nprint(arithemetic_progression(3, 2))"
    },
    {
      "rank": 44,
      "score": 8.632293453617281,
      "candidate": "def arith_progression(n):\n    return n * (n+1) / 2\n\n\nif __name__ == '__main__':\n    print(arith_progression(3))"
    },
    {
      "rank": 45,
      "score": 8.625262456968262,
      "candidate": "def arith_progression(n, t):\n    if t == 1:\n        return n\n    if n < 2:\n        return n\n    return arith_progression(n - 1, t - 1) + t * n\n\n\nif __name__ == '__main__':\n    n = int(input(\"Enter n: \"))\n    t = int(input(\"Enter t: \"))\n    print(arith_progression(n, t))"
    },
    {
      "rank": 46,
      "score": 8.625142247198651,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 0\n\n    return t * arith_progression(n - 1, t) + (1 - t) * arith_progression(n - 1, 1 - t)\n\n\nif __name__ == '__main__':\n    print(arith_progression(5, 3))"
    },
    {
      "rank": 47,
      "score": 8.623000730200317,
      "candidate": "def arith_prog(n):\n    # Write your code here\n    return n*n*n\n\nprint(arith_prog(5))"
    },
    {
      "rank": 48,
      "score": 8.616253589228675,
      "candidate": "def arith_prog(n, t):\n    # Write your code here\n    return t ** n\n\n\nprint(arith_prog(5, 5))"
    },
    {
      "rank": 49,
      "score": 8.610076160146226,
      "candidate": "def arithemetic_progression(t, n):\n    print(arithemetic_progression_helper(t, n))\n\ndef arithemetic_progression_helper(t, n):\n    if n == 0:\n        return 1\n    elif t == 1:\n        return 1\n    else:\n        return arithemetic_progression_helper(t-1, n) + arithemetic_progression_helper(t, n-1)\n\n\nif __name__ == \"__main__\":\n    arithemetic_progression(3, 1)"
    },
    {
      "rank": 50,
      "score": 8.606486429141842,
      "candidate": "def arith_progression(n, t):\n    if n < 0:\n        print('Invalid Input')\n    else:\n        for i in range(t, 0, -1):\n            print(i)\n        return\n\narith_progression(3, 5)"
    },
    {
      "rank": 51,
      "score": 8.60156811074208,
      "candidate": "def find_arith_progression(n, t):\n    \"\"\"\n    :param n: int\n    :param t: int\n    :return: int\n    \"\"\"\n    if t == 0:\n        return 1\n    elif t == 1:\n        return n\n    else:\n        return n + find_arith_progression(n - 1, t - 1)\n\n\nif __name__ == '__main__':\n    print(find_arith_progression(1, 5))"
    },
    {
      "rank": 52,
      "score": 8.592504582976733,
      "candidate": "def arith_progression(n, t):\n    i = 1\n    while i < n:\n        print(i, end=\" \")\n        i += t\n\n\narith_progression(10, 3)"
    },
    {
      "rank": 53,
      "score": 8.565425580227462,
      "candidate": "def arith_progression(n, t):\n    \"\"\"\n    :type n: int\n    :type t: int\n    :rtype: int\n    \"\"\"\n    ans = 1\n    for i in range(t, n+1):\n        ans *= i\n    return ans\n\n\nif __name__ == '__main__':\n    print(arith_progression(10, 2))"
    },
    {
      "rank": 54,
      "score": 8.548876241946822,
      "candidate": "def arith_progression(n, t):\n    ans = 1\n    while n > 0:\n        if n % 2 == 0:\n            ans = ans * t\n        n = n / 2\n    return ans\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(10, 3))"
    },
    {
      "rank": 55,
      "score": 8.542875062379007,
      "candidate": "def arith_progression(n, t):\n    if n == 1:\n        return 1\n    else:\n        return n * arith_progression(n - 1, t)\n\nprint(arith_progression(5, 3))"
    },
    {
      "rank": 56,
      "score": 8.490324832712195,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    return arith_progression(n - 1, t) + t\n\nprint(arith_progression(4, 2))"
    },
    {
      "rank": 57,
      "score": 8.48796797856353,
      "candidate": "def arithemetic_progression(t, n):\n    return t**n\n\nprint(arithemetic_progression(5,1))"
    },
    {
      "rank": 58,
      "score": 8.478208546788407,
      "candidate": "def arithemetic_progression(n, t):\n    return (n - 1) * t + n\n\n\nif __name__ == \"__main__\":\n    print(arithemetic_progression(10, 3))"
    },
    {
      "rank": 59,
      "score": 8.437695832075478,
      "candidate": "def arith_prog(n, t):\n    if n == 0:\n        return 0\n    return arith_prog(n - 1, t) + t\n\n\nprint(arith_prog(5, 2))"
    },
    {
      "rank": 60,
      "score": 8.426531424889468,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    else:\n        return t * arith_progression(n-1, t)\n\nprint(arith_progression(5, 3))"
    },
    {
      "rank": 61,
      "score": 8.408439383654278,
      "candidate": "def arith_progression(n, t):\n    \"\"\"\n    :type n: int\n    :type t: int\n    :rtype: int\n    \"\"\"\n    if t == 0:\n        return 1\n    if t == 1:\n        return 2\n    return arith_progression(n, t-1) + arith_progression(n, t-2)\n\n\nprint(arith_progression(5, 5))"
    },
    {
      "rank": 62,
      "score": 8.386620303250325,
      "candidate": "def arith_progression(n, t):\n    for i in range(1, t + 1):\n        print(i, end=\" \")\n\n    print()\n    for i in range(t, n + 1):\n        print(i, end=\" \")\n\n\narith_progression(10, 5)"
    },
    {
      "rank": 63,
      "score": 8.375312293858853,
      "candidate": "def arithemetic_progression(t, n):\n    if n == 0:\n        return 1\n    else:\n        return t * arithemetic_progression(t, n - 1)\n\nprint(arithemetic_progression(1, 3))"
    },
    {
      "rank": 64,
      "score": 8.334608500525688,
      "candidate": "def arithemetic_progression(n, t):\n    return (\n        n\n        + ((t - 1) // n)\n        * (n ** (t - 1))\n    )\n\n\nprint(arithemetic_progression(6, 2))"
    },
    {
      "rank": 65,
      "score": 8.331556294201176,
      "candidate": "def arith_progression(n, t):\n    num = 1\n    for i in range(n):\n        num = num + t\n    return num\n\nif __name__ == \"__main__\":\n    print(arith_progression(10, 3))"
    },
    {
      "rank": 66,
      "score": 8.327375965969855,
      "candidate": "def arithemetic_progression(n, t):\n    if n == 1:\n        return 1\n    if n == 2:\n        return t\n    return arithemetic_progression(n-1, t) + arithemetic_progression(n-1, t-1)\n\n\ndef main():\n    print(arithemetic_progression(4, 3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 67,
      "score": 8.294940769211511,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return t\n    else:\n        return t*arith_progression(n-1, t)\n\nprint(arith_progression(10, 3))\nprint(arith_progression(10, 5))\nprint(arith_progression(10, 7))"
    },
    {
      "rank": 68,
      "score": 8.2938925966498,
      "candidate": "def arithemetic_progression(t, n):\n    if t == 1:\n        return 1\n    elif t == 2:\n        return 2\n    else:\n        return arithemetic_progression(t-1, n) + arithemetic_progression(t-2, n)\n\nprint(arithemetic_progression(5, 2))"
    },
    {
      "rank": 69,
      "score": 8.289838256518838,
      "candidate": "def arith_prog_num(n, t):\n    return int(t**(n-1))\n\n\nprint(arith_prog_num(4, 1))\nprint(arith_prog_num(4, 2))\nprint(arith_prog_num(4, 3))\nprint(arith_prog_num(4, 4))\nprint(arith_prog_num(4, 5))"
    },
    {
      "rank": 70,
      "score": 8.280613371145561,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    if n == 1:\n        return t\n    return arith_progression(n - 1, t) + t\n\n\nprint(arith_progression(3, 2))"
    },
    {
      "rank": 71,
      "score": 8.251903304236286,
      "candidate": "def arith_prog(t, n):\n    result = [1]\n    for i in range(2, n + 1):\n        result.append(result[i - 1] + result[i - 2])\n    return result[-1]\n\n\nif __name__ == '__main__':\n    print(arith_prog(5, 10))"
    },
    {
      "rank": 72,
      "score": 8.248390367878367,
      "candidate": "def arithemetic_progression(t, n):\n    t += 1\n    return t * (n - 1)\n\nprint(arithemetic_progression(3, 3))"
    },
    {
      "rank": 73,
      "score": 8.214125058964552,
      "candidate": "def arith_progression(n, t):\n    return sum(int(c)**t for c in str(n))\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(10, 1))"
    },
    {
      "rank": 74,
      "score": 8.212735598038213,
      "candidate": "def arith_progression(n, t):\n    return int(n / t)\n\nprint(arith_progression(5, 3))"
    },
    {
      "rank": 75,
      "score": 8.209707251476969,
      "candidate": "def arith_progression(t, n):\n    return t**n\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(3, 2))"
    },
    {
      "rank": 76,
      "score": 8.193565922652176,
      "candidate": "def arith_prog(n, t):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return t + arith_prog(n - 1, t)\n\n\ndef main():\n    print(arith_prog(10, 2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 77,
      "score": 8.179564342560925,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return t\n    else:\n        return arith_progression(n-1, t*arith_progression(n-1, t)) + t\n\n\nif __name__ == \"__main__\":\n    print(arith_progression(5, 10))"
    },
    {
      "rank": 78,
      "score": 8.172253082181854,
      "candidate": "def arith_prog(n, t):\n    if t == 0:\n        return 1\n    else:\n        return (t**n) * arith_prog(n-1, t-1)\n\nprint(arith_prog(5, 3))"
    },
    {
      "rank": 79,
      "score": 8.163300679823958,
      "candidate": "def arithemetic_progression(t, n):\n    if n == 0:\n        return 1\n    else:\n        return t * arithemetic_progression(t, n - 1)\n\n\ndef main():\n    print(arithemetic_progression(10, 5))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 80,
      "score": 8.144125099485041,
      "candidate": "def arithemetic_progression(t, n):\n    for i in range(1, n + 1):\n        if i == 1:\n            print(\"1\")\n        else:\n            print(\"{} \".format(i), end=\"\")\n\n        if i % 2 == 0:\n            if t < i:\n                print(\"x\")\n            else:\n                print(\"1\")\n        else:\n            if t < i:\n                print(\"1\")\n            else:\n                print(\"x\")\n\n\narithemetic_progression(2, 100)"
    },
    {
      "rank": 81,
      "score": 8.143591138329747,
      "candidate": "def arithemetic_progression(n, t):\n    a = 1\n    for i in range(1, n):\n        a = a + t\n    return a\n\nprint(arithemetic_progression(10, 2))\nprint(arithemetic_progression(10, 3))\nprint(arithemetic_progression(10, 4))"
    },
    {
      "rank": 82,
      "score": 8.121884567141883,
      "candidate": "def arith_prog(n, t):\n    if n == 0:\n        return t\n    if t == 0:\n        return 0\n    return arith_prog(n-1, t-1) + arith_prog(n-1, t)\n\nn = int(input())\nt = int(input())\nprint(arith_prog(n, t))"
    },
    {
      "rank": 83,
      "score": 8.105983444291466,
      "candidate": "def arith_progression(n, t):\n    if n <= 0 or t <= 0:\n        print(\"Invalid input\")\n        return\n    elif n == 1:\n        return 1\n    elif t == 1:\n        return 1 + arith_progression(n-1, t)\n    else:\n        return arith_progression(n-1, t) + arith_progression(n-2, t)\n\n\ndef main():\n    print(arith_progression(4, 2))\n    print(arith_progression(4, 4))\n    print(arith_progression(4, 3))\n    print(arith_progression(4, 5))\n    print(arith_progression(4, 6))\n    print(arith_progression(4, 7))\n    print(arith_progression(4, 8))\n    print(arith_progression(4, 9))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 84,
      "score": 8.093417897505768,
      "candidate": "def arith_prog(t, n):\n    if t == 0:\n        return 1\n    elif t == 1:\n        return 1\n    else:\n        return arith_prog(t - 1, n) + arith_prog(t - 1, n - 1)\n\n\nprint(arith_prog(10, 5))"
    },
    {
      "rank": 85,
      "score": 8.08452234024709,
      "candidate": "def arithemetic_progression(t, n):\n    # Write your code here.\n    result = \"\"\n    for i in range(t, n + 1):\n        result = result + str(i) + \" \"\n    return result\n\n\ndef main():\n    print(arithemetic_progression(1, 100))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 86,
      "score": 7.990432406683839,
      "candidate": "def arith_progression(n, t):\n    \"\"\"\n    :type n: int\n    :type t: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return t\n    else:\n        return arith_progression(n-1, t*n)\n\n\nprint(arith_progression(10, 3))"
    },
    {
      "rank": 87,
      "score": 7.8912769574414305,
      "candidate": "def arith(n, t):\n    return (n**t) % 1000000000\n\n\nif __name__ == '__main__':\n    print(arith(20, 3))"
    },
    {
      "rank": 88,
      "score": 7.84634113240411,
      "candidate": "def arithemetic_progression(n, t):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return (t * arithemetic_progression(n-1, t)) + arithemetic_progression(n-1, t-1)\n\n\nif __name__ == \"__main__\":\n    print(arithemetic_progression(6, 3))"
    },
    {
      "rank": 89,
      "score": 7.834022619458933,
      "candidate": "def arith_progression(n, t):\n    for i in range(1, n + 1):\n        print(i, end=\" \")\n    print(t)\n\n\narith_progression(5, 1)\narith_progression(5, 2)\narith_progression(5, 3)\narith_progression(5, 4)\narith_progression(5, 5)"
    },
    {
      "rank": 90,
      "score": 7.780351419995229,
      "candidate": "def arith_prog(n, t):\n    if t == 0:\n        return 1\n    else:\n        return (n + arith_prog(n - 1, t - 1)) * arith_prog(n - 1, t)\n\nif __name__ == \"__main__\":\n    print(arith_prog(5, 10))"
    },
    {
      "rank": 91,
      "score": 7.738292593776799,
      "candidate": "def arith_prog(n, t):\n    return (n * (t ** (n - 1)))\n\n\nprint(arith_prog(5, 3))"
    },
    {
      "rank": 92,
      "score": 7.7320703513377165,
      "candidate": "def arithemetic_progression(n, t):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    return arithemetic_progression(n-1, t) + arithemetic_progression(n-1, t-1)\n\nprint(arithemetic_progression(2, 4))"
    },
    {
      "rank": 93,
      "score": 7.712686970378385,
      "candidate": "def arith_prog(n, t):\n    if t == 0:\n        return n\n    return arith_prog(n - 1, t - 1) + t\n\n\nif __name__ == \"__main__\":\n    print(arith_prog(5, 2))"
    },
    {
      "rank": 94,
      "score": 7.562924366763077,
      "candidate": "def arith_progression(n, t):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return t\n    else:\n        return t * arith_progression(n-1, t)\n\nprint(arith_progression(6, 2))"
    },
    {
      "rank": 95,
      "score": 7.4878043221155455,
      "candidate": "def arith_progression(t, n):\n    if n == 0:\n        return 1\n    else:\n        return t**n * arith_progression(t, n-1)\n\n\nprint(arith_progression(3, 4))\nprint(arith_progression(3, 5))\nprint(arith_progression(3, 6))\nprint(arith_progression(3, 7))\nprint(arith_progression(3, 8))\nprint(arith_progression(3, 9))\nprint(arith_progression(3, 10))"
    },
    {
      "rank": 96,
      "score": 7.464609382504557,
      "candidate": "def arith_progression(n):\n    return n + arith_progression(n-1)\n\n\nif __name__ == \"__main__\":\n    assert arith_progression(4) == 12\n    assert arith_progression(10) == 36"
    },
    {
      "rank": 97,
      "score": 7.134571892399572,
      "candidate": "def arith_progression(n, t):\n    n += 1\n    for i in range(1, t + 1):\n        print(n, end=' ')\n        n += i\n\n\narith_progression(5, 3)"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def find_arithemetic_progression(n):\n    return find_arithemetic_progression_helper(n, 1, 1)\n\n\ndef find_arithemetic_progression_helper(n, prev, cur):\n    if n == 0:\n        return cur\n    if n == 1:\n        return prev\n    return find_arithemetic_progression_helper(n-1, prev, cur*n)\n\n\ndef main():\n    print(find_arithemetic_progression(1))\n    print(find_arithemetic_progression(2))\n    print(find_arithemetic_progression(3))\n    print(find_arithemetic_progression(4))\n\n\nmain()"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def arith_progression(t, n):\n    n = n + 1\n    return (t * (n - 1)) / 2\n\n\ndef test_function():\n    assert arith_progression(3, 6) == 6.0\n    assert arith_progression(4, 10) == 2.0\n    assert arith_progression(5, 8) == 3.0\n    assert arith_progression(6, 15) == 2.5\n    assert arith_progression(7, 20) == 3.0\n    assert arith_progression(8, 25) == 4.0\n    assert arith_progression(9, 30) == 5.0\n    assert arith_progression(10, 35) == 5.0\n    assert arith_progression(11, 40) == 6.0\n    assert arith_progression(12, 45) == 7.0\n    assert arith_progression(13, 50) == 8.0\n    assert arith_progression(14, 55) == 8.0\n    assert arith_progression(15, 60) == 9.0\n    assert arith_progression(16, 65) == 9.0\n    assert arith_progression(17, 70) == 9.0\n    assert arith_progression(18, 75) == 8.0\n    assert arith_progression(19, 80) == 8.0\n    assert arith_progression(20, 85) == 7.0\n    assert arith_progression(21, 85) == 7.0\n    assert arith_progression(22, 85) == 7.0\n    assert arith_progression(23, 85) == 8.0\n    assert arith_progression(24, 85) == 6.0\n    assert arith_progression(25, 85) == 6.0\n    assert arith_progression(26, 85) == 6.0\n    assert arith_progression(27, 85) == 6.0\n    assert arith_progression(28, 85) == 6.0\n    assert arith_progression(29, 85) == 6.0\n    assert arith_progression(30,"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def arith_progression(n, t):\n    n = int(n)\n    if t > n:\n        return None\n    if n == 0:\n        return 1\n    else:\n        return arith_progression(n-1, t) + arith_progression(n-1, t-1)\n\n\ndef arith_progression_1(n, t):\n    n = int(n)\n    if t > n:\n        return None\n    if n == 0:\n        return 1\n    else:\n        return arith_progression_1(n-1, t) + arith_progression_1(n-1, t-1)\n\n\ndef arith_progression_2(n, t):\n    n = int(n)\n    if t > n:\n        return None\n    if n == 0:\n        return 1\n    else:\n        return arith_progression_2(n-1, t) + arith_progression_2(n-1, t-1)\n\n\ndef arith_progression_3(n, t):\n    n = int(n)\n    if t > n:\n        return None\n    if n == 0:\n        return 1\n    else:\n        return arith_progression_3(n-1, t) + arith_progression_3(n-1, t-1)\n\n\ndef arith_progression_4(n, t):\n    n = int(n)\n    if t > n:\n        return None\n    if n == 0:\n        return 1\n    else:\n        return arith_progression_4(n-1, t) + arith_progression_4(n-1, t-1)\n\n\ndef arith_progression_5(n, t):\n    n = int(n)\n    if t > n:\n        return None\n    if n == 0:\n        return 1\n    else:\n        return arith_progression_5(n-1, t) + arith_progression_5(n-1, t-1)\n\n\ndef arith_progression_6(n"
    }
  ]
}