{
  "timestamp": "2025-09-14T13:25:45.223371",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 131,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def count_same_pair(lst1, lst2, lst3):\n    count = 0\n    for i in range(len(lst1)):\n        if lst1[i] in lst2 and lst2[i] in lst3:\n            count += 1\n    return count\n\n\ndef main():\n    lst1 = [1, 2, 3, 4, 5, 6]\n    lst2 = [1, 2, 3, 4, 5, 6]\n    lst3 = [1, 2, 3, 4, 5, 6]\n    print(count_same_pair(lst1, lst2, lst3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    count = 0\n    for i in range(0, len(a)):\n        if a[i] == b[i] and a[i] == c[i]:\n            count += 1\n    return count\n\nprint(same_pair([1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3]))\nprint(same_pair([1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3]))\nprint(same_pair([1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def count_same_pair(lst1, lst2, lst3):\n    return (lst1 == lst2) and (lst1 == lst3)\n\nprint(count_same_pair([1,2,3,4,4,5,5,5], [1,2,3,4,4,5,5,5], [1,2,3,4,4,5,5,5]))\nprint(count_same_pair([1,2,3,4,4,5,5,5], [1,2,3,4,4,5,5,5], [1,2,3,4,4,5,5,5]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def count_same_pair(a, b, c):\n    return len(set(a) & set(b) & set(c))\n\nprint(count_same_pair([1,1,1], [1,1,1], [1,1,1]))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in list1:\n        for j in list2:\n            for k in list3:\n                if i == j and i == k:\n                    count += 1\n    return count\n\nprint(count_same_pair([1,1,1], [1,1,1], [1,1,1]))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def count_same_pair(list1, list2, list3):\n    counter = 0\n    for i in list1:\n        for j in list2:\n            for k in list3:\n                if i == j and i == k:\n                    counter += 1\n    return counter\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def count_same_pair(a, b, c):\n    \"\"\"\n    :type a: List[int]\n    :type b: List[int]\n    :type c: List[int]\n    :rtype: int\n    \"\"\"\n    count = 0\n    for i in a:\n        if i in b and i in c:\n            count += 1\n    return count"
    },
    {
      "rank": 8,
      "score": 9.370583536698913,
      "candidate": "def count_same_pair(a, b, c):\n    if len(a)!= len(b) or len(a)!= len(c):\n        return 0\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print(count_same_pair([1,1,1], [2,2,2], [1,1,1]))"
    },
    {
      "rank": 9,
      "score": 9.234050852198141,
      "candidate": "def same_pair(lst1, lst2, lst3):\n    lst1.sort()\n    lst2.sort()\n    lst3.sort()\n    count = 0\n    for i in range(len(lst1)):\n        if lst1[i] == lst2[i] and lst1[i] == lst3[i]:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    print(same_pair([1,2,3,4], [1,2,3,4], [1,2,3,4]))"
    },
    {
      "rank": 10,
      "score": 9.226766272351448,
      "candidate": "def count_same_pairs(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\n\n\n\nif __name__ == \"__main__\":\n    print(count_same_pairs([1, 2, 3], [2, 2, 2], [2, 2, 2]))\n    print(count_same_pairs([1, 2, 3], [2, 2, 3], [1, 2, 3]))\n    print(count_same_pairs([1, 2, 3], [2, 2, 3], [1, 2, 3]))\n    print(count_same_pairs([1, 2, 3], [2, 2, 3], [1, 2, 3]))\n    print(count_same_pairs([1, 2, 3], [2, 3, 3], [1, 2, 3]))"
    },
    {
      "rank": 11,
      "score": 9.21346272767743,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\n\nprint(count_same_pair([1, 2, 2, 3], [1, 2, 3, 4], [1, 2, 3, 4]))"
    },
    {
      "rank": 12,
      "score": 9.205959372648458,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [2, 2, 2]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [2, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))\n    print(count_same_pair([1, 2, 3], [2, 2, 2], [1, 2, 4]))"
    },
    {
      "rank": 13,
      "score": 9.183391466815202,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return sum(map(lambda x: x in list2, list1)) + sum(map(lambda x: x in list3, list1))\n\n\nprint(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]))\nprint(count_same_pair([1, 2, 3, 4], [2, 3, 4, 5], [1, 2, 3, 4]))\nprint(count_same_pair([1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 4]))\nprint(count_same_pair([1, 2, 3, 4], [1, 2, 3, 5], [1, 2, 3, 5]))"
    },
    {
      "rank": 14,
      "score": 9.177268828905222,
      "candidate": "def count_same_pair(a, b, c):\n    a = list(set(a))\n    b = list(set(b))\n    c = list(set(c))\n    return len(a.intersection(b)) + len(b.intersection(c))"
    },
    {
      "rank": 15,
      "score": 9.122564458729856,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            count += 1\n    return count\n\nprint(count_same_pair([1,1,2], [2,1,2], [2,2,2]))"
    },
    {
      "rank": 16,
      "score": 8.95994420569242,
      "candidate": "def count_same_pair(a, b, c):\n    d = {}\n    for i in a:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    for j in b:\n        if j in d:\n            d[j] += 1\n        else:\n            d[j] = 1\n    for k in c:\n        if k in d:\n            d[k] += 1\n        else:\n            d[k] = 1\n    return d[max(d.keys())]"
    },
    {
      "rank": 17,
      "score": 8.946210893390457,
      "candidate": "def count_same_pair(list1, list2, list3):\n    counter = 0\n    for x in list1:\n        for y in list2:\n            for z in list3:\n                if x == y and x == z:\n                    counter += 1\n    return counter\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [1, 3, 4, 5], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [1, 3, 4, 5], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [1, 3, 4, 5], [1, 2, 3, 4]))"
    },
    {
      "rank": 18,
      "score": 8.910084504002544,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            count += 1\n    return count\n\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [2, 3, 4]))\nprint(count_same_pair([1, 2, 3], [2, 3, 4], [1, 2, 3]))"
    },
    {
      "rank": 19,
      "score": 8.855395696632057,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]) == 2\n    assert count_same_pair([1, 1, 1], [1, 1, 2], [1, 2, 1]) == 2\n    assert count_same_pair([1, 1, 1], [1, 1, 2], [1, 2, 2]) == 0"
    },
    {
      "rank": 20,
      "score": 8.850707355641543,
      "candidate": "def count_same_pair(list1, list2, list3):\n    # Write your code here\n    result = 0\n    for item in list1:\n        if item in list2:\n            result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    list1 = [1, 2, 3]\n    list2 = [2, 3, 3]\n    list3 = [1, 2, 3]\n    print(count_same_pair(list1, list2, list3))"
    },
    {
      "rank": 21,
      "score": 8.8281618090209,
      "candidate": "def count_same_pair(list1, list2, list3):\n    list1.sort()\n    list2.sort()\n    list3.sort()\n\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            count += 1\n\n    return count\n\n\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 22,
      "score": 8.81367773444215,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] and list1[i] == list3[i]:\n            count += 1\n    return count\n\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    },
    {
      "rank": 23,
      "score": 8.76828871349479,
      "candidate": "def count_same_pair(list1, list2, list3):\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                return i, j\n\nprint(count_same_pair([1, 2, 3], [3, 2, 1], [3, 2, 1]))"
    },
    {
      "rank": 24,
      "score": 8.750282588864879,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in list1:\n        if i in list2 and i in list3:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [2, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [2, 2, 3]))"
    },
    {
      "rank": 25,
      "score": 8.701078161001123,
      "candidate": "def count_same_pair(list1, list2, list3):\n    list1.sort()\n    list2.sort()\n    list3.sort()\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            count += 1\n    return count\n\nprint(count_same_pair([1, 1, 1], [2, 2, 2], [1, 2, 3]))"
    },
    {
      "rank": 26,
      "score": 8.692801520950061,
      "candidate": "def same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\nprint(same_pair([1,2,3], [1,2,3], [1,2,3]))"
    },
    {
      "rank": 27,
      "score": 8.632293453617281,
      "candidate": "def same_pair(a, b, c):\n    if len(a) == len(b) and len(a) == len(c):\n        return sum(set(a) & set(b) & set(c))\n    else:\n        return 0\n\n\nprint(same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 28,
      "score": 8.625262456968262,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for x in list1:\n        for y in list2:\n            if x == y:\n                count += 1\n    return count\n\nprint(count_same_pair([1,1,1], [1,2,2], [1,2,2]))"
    },
    {
      "rank": 29,
      "score": 8.625142247198651,
      "candidate": "def count_same_pair(a, b, c):\n    count = 0\n    for i in a:\n        for j in b:\n            if i == j:\n                count += 1\n    return count\n\n\na = [1, 2, 3, 4, 4, 4, 4]\nb = [2, 2, 2, 2, 2, 2, 2]\nc = [3, 3, 3, 3, 3, 3, 3]\n\nprint(count_same_pair(a, b, c))"
    },
    {
      "rank": 30,
      "score": 8.623000730200317,
      "candidate": "def count_same_pairs(a, b, c):\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[i] == c[i]:\n            count += 1\n    return count\n\n\nprint(count_same_pairs([1, 2, 3], [2, 3, 4], [1, 2, 3]))\nprint(count_same_pairs([1, 2, 3], [3, 4, 5], [1, 2, 3]))\nprint(count_same_pairs([1, 2, 3], [3, 4, 5], [1, 2, 4]))\nprint(count_same_pairs([1, 2, 3], [4, 5, 6], [1, 2, 3]))\nprint(count_same_pairs([1, 2, 3], [4, 5, 6], [4, 5, 6]))"
    },
    {
      "rank": 31,
      "score": 8.616253589228675,
      "candidate": "def count_same_pair(list1, list2, list3):\n    result = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            result += 1\n    return result"
    },
    {
      "rank": 32,
      "score": 8.606486429141842,
      "candidate": "def count_same_pair(lst1, lst2, lst3):\n    lst1.sort()\n    lst2.sort()\n    lst3.sort()\n    i = 0\n    j = 0\n    k = 0\n    while i < len(lst1) and j < len(lst2) and k < len(lst3):\n        if lst1[i] == lst2[j] and lst1[i] == lst3[k]:\n            i += 1\n        elif lst1[j] == lst2[k] and lst1[j] == lst3[i]:\n            j += 1\n        elif lst1[k] == lst2[i] and lst1[k] == lst3[j]:\n            k += 1\n    return i, j, k\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 33,
      "score": 8.60156811074208,
      "candidate": "def count_same_pair(l1, l2, l3):\n    d = {}\n    for i in l1:\n        if i not in d:\n            d[i] = 0\n        d[i] += 1\n    for i in l2:\n        if i not in d:\n            d[i] = 0\n        d[i] += 1\n    for i in l3:\n        if i not in d:\n            d[i] = 0\n        d[i] += 1\n    return sum(d.values())\n\n\nl1 = [1, 2, 3, 4, 5, 6]\nl2 = [1, 2, 3, 4, 5, 6]\nl3 = [1, 2, 3, 4, 5, 6]\nprint(count_same_pair(l1, l2, l3))"
    },
    {
      "rank": 34,
      "score": 8.565425580227462,
      "candidate": "def count_same_pair(list1, list2, list3):\n    l1 = list(set(list1))\n    l2 = list(set(list2))\n    l3 = list(set(list3))\n    return len(l1.intersection(l2))\n\nprint(count_same_pair([1, 2, 3], [2, 1, 4], [2, 4, 1]))\nprint(count_same_pair([1, 2, 3], [2, 3, 1], [2, 1, 4]))\nprint(count_same_pair([1, 2, 3], [2, 3, 2], [2, 1, 4]))\nprint(count_same_pair([1, 2, 3], [2, 1, 2], [2, 2, 3]))"
    },
    {
      "rank": 35,
      "score": 8.548876241946822,
      "candidate": "def count_same_pair(a, b, c):\n    return len(set(a).intersection(b)) + len(set(b).intersection(c))\n\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 36,
      "score": 8.542875062379007,
      "candidate": "def count_same_pair(list1, list2, list3):\n    list1_dict = {}\n    list2_dict = {}\n    list3_dict = {}\n    for i in list1:\n        list1_dict[i] = list1_dict.get(i, 0) + 1\n    for i in list2:\n        list2_dict[i] = list2_dict.get(i, 0) + 1\n    for i in list3:\n        list3_dict[i] = list3_dict.get(i, 0) + 1\n    for i in list1_dict.keys():\n        if i in list2_dict.keys() and i in list3_dict.keys():\n            return list1_dict[i] * list2_dict[i] * list3_dict[i]\n    return 0\n\nif __name__ == \"__main__\":\n    assert count_same_pair([1,2,1], [2,2,2], [2,2,1]) == 2"
    },
    {
      "rank": 37,
      "score": 8.53012858503943,
      "candidate": "def same_pair(a, b, c):\n    for i in a:\n        if i in b and i in c:\n            return True\n    return False\n\na = [1,2,3,1,2,2,3]\nb = [1,2,3,1,2,2,3]\nc = [1,2,3,1,2,2,3]\nprint(same_pair(a,b,c))"
    },
    {
      "rank": 38,
      "score": 8.492983219118464,
      "candidate": "def count_same_pairs(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] == list3[i]:\n            count += 1\n    return count\n\n\nprint(count_same_pairs([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(count_same_pairs([1, 2, 3, 4, 5], [2, 2, 2, 2, 2], [2, 2, 2, 2, 2]))\nprint(count_same_pairs([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(count_same_pairs([1, 2, 3, 4, 5], [2, 2, 2, 2, 2], [2, 2, 3, 4, 5]))\nprint(count_same_pairs([1, 2, 3, 4, 5], [2, 2, 3, 4, 5], [2, 2, 3, 4, 5]))"
    },
    {
      "rank": 39,
      "score": 8.478208546788407,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return list(set(list1).intersection(list2)).count(list3[0])\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [2, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [2, 3, 3]))"
    },
    {
      "rank": 40,
      "score": 8.408439383654278,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\nprint(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]))"
    },
    {
      "rank": 41,
      "score": 8.386620303250325,
      "candidate": "def same_pair(list1, list2, list3):\n    dict1 = {}\n    dict2 = {}\n    dict3 = {}\n    for i in list1:\n        if i in dict1:\n            dict1[i] += 1\n        else:\n            dict1[i] = 1\n    for i in list2:\n        if i in dict2:\n            dict2[i] += 1\n        else:\n            dict2[i] = 1\n    for i in list3:\n        if i in dict3:\n            dict3[i] += 1\n        else:\n            dict3[i] = 1\n    count = 0\n    for i in dict1.values():\n        if i in dict2.values():\n            count += 1\n    return count\n\n\nprint(same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 42,
      "score": 8.375312293858853,
      "candidate": "def same_pair(list1, list2, list3):\n    if len(list1)!= len(list2) or len(list1)!= len(list3):\n        return False\n    else:\n        for i in range(len(list1)):\n            if list1[i]!= list2[i] or list1[i]!= list3[i]:\n                return False\n        return True\n\n\nprint(same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    },
    {
      "rank": 43,
      "score": 8.351614956112536,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\n\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 3, 4]))"
    },
    {
      "rank": 44,
      "score": 8.334608500525688,
      "candidate": "def same_pair(list_1, list_2, list_3):\n    list_1.sort()\n    list_2.sort()\n    list_3.sort()\n    return len(list_1 & list_2 & list_3)\n\nprint(same_pair([1, 2, 3], [2, 3, 4], [2, 3, 4]))\nprint(same_pair([1, 2, 3], [3, 4, 5], [2, 3, 4]))"
    },
    {
      "rank": 45,
      "score": 8.327375965969855,
      "candidate": "def count_same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[i] and a[i] == c[i]:\n            count += 1\n\n    return count\n\n\nprint(count_same_pair([1, 2, 1], [1, 2, 1], [1, 2, 2]))\nprint(count_same_pair([1, 2, 1], [2, 2, 2], [1, 2, 1]))\nprint(count_same_pair([1, 2, 1], [2, 2, 1], [1, 2, 2]))\nprint(count_same_pair([1, 2, 1], [2, 2, 2], [2, 2, 2]))\nprint(count_same_pair([1, 2, 1], [2, 2, 2], [2, 2, 2]))\nprint(count_same_pair([1, 2, 1], [2, 2, 2], [1, 2, 2]))\nprint(count_same_pair([1, 2, 1], [2, 2, 2], [1, 2, 1]))\nprint(count_same_pair([1, 2, 1], [2, 2, 2], [2, 2, 2]))"
    },
    {
      "rank": 46,
      "score": 8.327367757082776,
      "candidate": "def count_same_pair(list1, list2, list3):\n    if len(list1)!= len(list2) or len(list1)!= len(list3):\n        return 0\n\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] and list1[i] == list3[i]:\n            count += 1\n\n    return count\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1,2,3], [1,2,3], [1,2,3]))\n    print(count_same_pair([1,2,3], [1,2,4], [1,2,3]))\n    print(count_same_pair([1,2,3], [1,2,4], [1,3,2]))\n    print(count_same_pair([1,2,3], [1,3,4], [1,3,2]))"
    },
    {
      "rank": 47,
      "score": 8.298597569547805,
      "candidate": "def count_same_pair(a,b,c):\n    a.sort()\n    b.sort()\n    c.sort()\n    return len(set(a) & set(b) & set(c))\n\nprint(count_same_pair([1,2,3,4,5,6,7,8,9],[5,5,5,5,5,5,5,5,5],[5,5,5,5,5,5,5,5,5]))"
    },
    {
      "rank": 48,
      "score": 8.294940769211511,
      "candidate": "def same_pair(a,b,c):\n    a_set = set(a)\n    b_set = set(b)\n    c_set = set(c)\n    if len(a_set) == len(b_set) and len(a_set) == len(c_set):\n        for i in a_set:\n            if i in b_set:\n                return True\n    return False\n\nprint(same_pair([1,2,3,1,1],[1,2,3,1,1],[1,2,3,1,1]))"
    },
    {
      "rank": 49,
      "score": 8.2938925966498,
      "candidate": "def count_same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    return (a == b) & (a == c)\n\nif __name__ == '__main__':\n    print(count_same_pair([1,1,2], [1,2,2], [1,2,2]))\n    print(count_same_pair([1,2,3], [1,2,2], [1,2,2]))\n    print(count_same_pair([1,2,3], [2,2,2], [1,2,2]))\n    print(count_same_pair([1,2,3], [2,2,2], [1,2,3]))\n    print(count_same_pair([1,2,3], [2,2,3], [1,2,3]))\n    print(count_same_pair([1,2,3], [3,3,3], [1,2,3]))\n    print(count_same_pair([1,2,3], [3,3,3], [1,2,3]))"
    },
    {
      "rank": 50,
      "score": 8.214125058964552,
      "candidate": "def count_same_pair(list1, list2, list3):\n    \"\"\"\n    :type list1: List[int]\n    :type list2: List[int]\n    :type list3: List[int]\n    :rtype: int\n    \"\"\"\n    if len(list1)!= len(list2) or len(list2)!= len(list3):\n        return 0\n    result = 0\n    for i in range(len(list1)):\n        if list1[i]!= list2[i] or list2[i]!= list3[i]:\n            return 0\n        result += 1\n    return result\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\n    print(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\n    print(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    },
    {
      "rank": 51,
      "score": 8.212735598038213,
      "candidate": "def count_same_pair(a,b,c):\n    # write your code here\n    a_count = 0\n    b_count = 0\n    c_count = 0\n    for i in a:\n        if i in b:\n            b_count += 1\n        elif i in c:\n            c_count += 1\n        else:\n            a_count += 1\n    return a_count,b_count,c_count\n\na = [1,2,3]\nb = [2,2,2]\nc = [2,2,2]\nprint(count_same_pair(a,b,c))"
    },
    {
      "rank": 52,
      "score": 8.209707251476969,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for x, y, z in zip(list1, list2, list3):\n        if x == y and x == z:\n            count += 1\n    return count\n\n\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [2, 3, 4], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [2, 3, 4]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [2, 3, 4]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [2, 3, 4]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [2, 3, 4]))"
    },
    {
      "rank": 53,
      "score": 8.2048573255218,
      "candidate": "def count_same_pair(lst1, lst2, lst3):\n    lst1_dict = {}\n    for element in lst1:\n        lst1_dict[element] = lst1_dict.get(element, 0) + 1\n    lst2_dict = {}\n    for element in lst2:\n        lst2_dict[element] = lst2_dict.get(element, 0) + 1\n    lst3_dict = {}\n    for element in lst3:\n        lst3_dict[element] = lst3_dict.get(element, 0) + 1\n    if len(lst1_dict) == len(lst2_dict) == len(lst3_dict):\n        return 0\n    if len(lst1_dict) == len(lst2_dict) and len(lst1_dict) == len(lst3_dict):\n        return 1\n    return 2\n\n\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    },
    {
      "rank": 54,
      "score": 8.185309335307622,
      "candidate": "def count_same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    return len(a) == len(b) and len(a) == len(c) and a == b and a == c\n\n\nif __name__ == \"__main__\":\n    assert count_same_pair([1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3])\n    assert count_same_pair([1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3])\n    assert count_same_pair([1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3], [1, 2, 3, 1, 2, 3])"
    },
    {
      "rank": 55,
      "score": 8.179564342560925,
      "candidate": "def count_same_pair(list1, list2, list3):\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [2, 1, 3, 4], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [2, 1, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [2, 1, 3, 4]))\n    print(count_same_pair([1, 2, 3, 4], [2, 1, 3, 4], [1, 2, 3, 4]))"
    },
    {
      "rank": 56,
      "score": 8.172253082181854,
      "candidate": "def count_same_pairs(list1, list2, list3):\n    list1_count = 0\n    list2_count = 0\n    list3_count = 0\n\n    for i in range(0, len(list1)):\n        if list1[i] == list2[i] and list1[i] == list3[i]:\n            list1_count += 1\n        elif list2[i] == list1[i] and list2[i] == list3[i]:\n            list2_count += 1\n        elif list3[i] == list1[i] and list3[i] == list2[i]:\n            list3_count += 1\n\n    return [list1_count, list2_count, list3_count]\n\n\nprint(count_same_pairs([1, 2, 3], [3, 1, 2], [1, 2, 3]))\nprint(count_same_pairs([1, 2, 3], [3, 2, 1], [1, 2, 3]))\nprint(count_same_pairs([1, 2, 3], [1, 2, 3], [2, 3, 1]))\nprint(count_same_pairs([1, 2, 3], [3, 2, 1], [1, 3, 2]))\nprint(count_same_pairs([1, 2, 3], [1, 2, 3], [2, 3, 2]))"
    },
    {
      "rank": 57,
      "score": 8.163300679823958,
      "candidate": "def count_same_pair(list1, list2, list3):\n    list1_set = set(list1)\n    list2_set = set(list2)\n    list3_set = set(list3)\n\n    return len(list1_set.intersection(list2_set)) + len(list2_set.intersection(list3_set))"
    },
    {
      "rank": 58,
      "score": 8.144125099485041,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] and list1[i] == list3[i]:\n            count += 1\n    return count\n\n\nprint(count_same_pair([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], [4, 5, 6, 3, 2]))"
    },
    {
      "rank": 59,
      "score": 8.143591138329747,
      "candidate": "def count_same_pair(list1, list2, list3):\n    if list1 == list2 == list3:\n        return \"Same pair\"\n    else:\n        return \"Different pair\"\n\nprint(count_same_pair([1, 2, 3], [4, 5, 6], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 60,
      "score": 8.121884567141883,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return len(list(set(list1) & set(list2) & set(list3)))\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 61,
      "score": 8.105983444291466,
      "candidate": "def count_same_pair(a, b, c):\n    if len(a)!= len(b) or len(a)!= len(c):\n        return -1\n    else:\n        for i in range(len(a)):\n            if a[i]!= b[i] or a[i]!= c[i]:\n                return i\n        return -1\n\nprint(count_same_pair([1, 1, 1], [1, 2, 2], [2, 2, 2]))"
    },
    {
      "rank": 62,
      "score": 8.093417897505768,
      "candidate": "def same_pair(a, b, c):\n    return a == b and a == c\n\n\nif __name__ == '__main__':\n    print(same_pair([1, 2, 3], [1, 2, 3], [2, 2, 3]))"
    },
    {
      "rank": 63,
      "score": 8.08452234024709,
      "candidate": "def count_same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    for i in range(len(a)):\n        if a[i] == b[i] == c[i]:\n            return True\n    return False\n\nprint(count_same_pair([1,2,3,4,5,6], [1,2,3,4,5,6], [1,2,3,4,5,6]))\nprint(count_same_pair([1,2,3,4,5,6], [1,2,3,4,5,6], [1,2,3,4,5,6]))"
    },
    {
      "rank": 64,
      "score": 8.040197642997851,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return (list(set(list1) & set(list2) & set(list3)))\n\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 1, 1], [1, 2, 2], [2, 2, 2]))"
    },
    {
      "rank": 65,
      "score": 8.024835682833125,
      "candidate": "def count_same_pair(list1, list2, list3):\n    if len(list1) == len(list2) == len(list3):\n        for i in range(len(list1)):\n            if list1[i] == list2[i] == list3[i]:\n                return i\n    return -1\n\nprint(count_same_pair([1,2,3,4,5], [4,3,2,1,2], [1,2,3,4,5]))"
    },
    {
      "rank": 66,
      "score": 7.990432406683839,
      "candidate": "def count_same_pair(a, b, c):\n    # Write your code here\n    for i in range(len(a)):\n        if a[i] == b[i] and a[i] == c[i]:\n            return True\n    return False"
    },
    {
      "rank": 67,
      "score": 7.938028884277233,
      "candidate": "def count_same_pair(a, b, c):\n    a = set(a)\n    b = set(b)\n    c = set(c)\n    return len(a.intersection(b)) + len(b.intersection(c))"
    },
    {
      "rank": 68,
      "score": 7.915588979966494,
      "candidate": "def count_same_pair(list1, list2, list3):\n    list1.sort()\n    list2.sort()\n    list3.sort()\n    count = 0\n    for i in range(0, len(list1)):\n        for j in range(0, len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\n\nprint(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 69,
      "score": 7.8912769574414305,
      "candidate": "def count_same_pair(a, b, c):\n    if a == b and a == c:\n        return 1\n    elif a == b and c == a:\n        return 2\n    elif a == b and c == b:\n        return 3\n    elif a == c and b == c:\n        return 4\n    else:\n        return 0"
    },
    {
      "rank": 70,
      "score": 7.868947655733293,
      "candidate": "def same_pair(a,b,c):\n    return a == b and a == c\n\nif __name__ == '__main__':\n    assert same_pair([1,2,2],[2,2,2],[1,2,2]) == True\n    assert same_pair([1,2,2],[2,2,2],[2,2,2]) == False\n    assert same_pair([1,2,2],[1,2,2],[2,2,2]) == True\n    assert same_pair([1,2,2],[2,2,2],[1,2,2]) == False"
    },
    {
      "rank": 71,
      "score": 7.84634113240411,
      "candidate": "def same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\nprint(same_pair([1, 2, 2, 3, 3, 2], [2, 2, 2, 3, 3, 2], [3, 3, 3, 2, 3, 2]))"
    },
    {
      "rank": 72,
      "score": 7.834022619458933,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return len(set(list1) & set(list2)) == len(set(list1) & set(list3))"
    },
    {
      "rank": 73,
      "score": 7.780351419995229,
      "candidate": "def count_same_pair(a, b, c):\n    if len(a)!= len(b) or len(a)!= len(c):\n        return 0\n    else:\n        count = 0\n        for i in range(len(a)):\n            if a[i] == b[i] == c[i]:\n                count += 1\n        return count\n\n\na = [1, 2, 3, 4, 5, 6]\nb = [1, 2, 3, 4, 5, 6]\nc = [1, 2, 3, 4, 5, 6]\nprint(count_same_pair(a, b, c))"
    },
    {
      "rank": 74,
      "score": 7.705183449260731,
      "candidate": "def count_same_pair(l1, l2, l3):\n    count = 0\n    for i in l1:\n        for j in l2:\n            for k in l3:\n                if i == j and i == k:\n                    count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    assert count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]) == 2\n    assert count_same_pair([1, 2, 3], [1, 2, 3], [1, 2]) == 2"
    },
    {
      "rank": 75,
      "score": 7.5819855281879285,
      "candidate": "def count_same_pair(a, b, c):\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\nif __name__ == \"__main__\":\n    print(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\n    print(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    },
    {
      "rank": 76,
      "score": 7.4506599871439985,
      "candidate": "def count_same_pair(a,b,c):\n    count = 0\n    for i in range(len(a)):\n        for j in range(len(b)):\n            if a[i] == b[j] and a[i] == c[j]:\n                count += 1\n    return count\n\nprint(count_same_pair([1,2,3,4,1,2,3,4,5], [1,2,3,4,5,2,3,4,5], [1,2,3,4,5,2,3,4,5]))"
    },
    {
      "rank": 77,
      "score": 7.134571892399572,
      "candidate": "def count_same_pair(list1, list2, list3):\n    result = 0\n    for i in list1:\n        if i in list2 and i in list3:\n            result += 1\n    return result\n\nprint(count_same_pair([1,2,3,4,5], [1,2,3,4,5], [2,3,4,5,6]))\nprint(count_same_pair([1,2,3,4,5], [1,2,3,4,5], [4,5,6]))\nprint(count_same_pair([1,2,3,4,5], [1,2,3,4,5], [1,2,3,4]))"
    },
    {
      "rank": 78,
      "score": 3.2431381120303504,
      "candidate": "def count_same_pair(list1, list2, list3):\n    if list1 == list2 and list1 == list3:\n        return 1\n    elif list2 == list1 and list2 == list3:\n        return 1\n    elif list3 == list1 and list3 == list2:\n        return 1\n    elif list3 == list2 and list3 == list1:\n        return 1\n    else:\n        return 0\n\n\nif __name__ == '__main__':\n    print(count_same_pair([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))"
    },
    {
      "rank": 79,
      "score": 3.2243753792381424,
      "candidate": "def same_pair(list1, list2, list3):\n    return list(set(list1) & set(list2) & set(list3))\n\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))\nprint(same_pair([1,1,1], [1,2,3], [2,3,4]))\nprint(same_pair([1,1,1], [1,2,3], [3,4,5]))\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))\nprint(same_pair([1,1,1], [1,2,3], [1,2,3]))"
    },
    {
      "rank": 80,
      "score": 3.2227883478225645,
      "candidate": "def count_same_pairs(list1, list2, list3):\n    # print(list1)\n    # print(list2)\n    # print(list3)\n\n    # Initialize count\n    count = 0\n\n    # Iterate over list1\n    for x in list1:\n        # print(x)\n\n        # Iterate over list2\n        for y in list2:\n            # print(y)\n\n            # Iterate over list3\n            for z in list3:\n                # print(z)\n\n                # if the two values are the same\n                if x == y and x == z:\n                    count += 1\n\n    return count\n\n\nprint(count_same_pairs([1, 2, 2, 3], [3, 3, 4, 4], [1, 2, 2, 3]))"
    },
    {
      "rank": 81,
      "score": 3.210542487071477,
      "candidate": "def count_same_pairs(list1, list2, list3):\n    # Your code here\n    return len(set(list1) & set(list2) & set(list3))\n\n\nlist1 = [1, 2, 3, 4]\nlist2 = [1, 2, 3, 4]\nlist3 = [1, 2, 3, 4]\n\nprint(count_same_pairs(list1, list2, list3))"
    },
    {
      "rank": 82,
      "score": 3.1891853297837334,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in range(len(list1)):\n        for j in range(len(list2)):\n            if list1[i] == list2[j] and list1[i] == list3[j]:\n                count += 1\n    return count\n\n\nif __name__ == '__main__':\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3, 4]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3, 4, 5]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3, 4, 5, 6, 7]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3, 4, 5, 6]))\n    print(count_same_pair([1, 2, 3], [1, 2, 3, 4, 5, 6, 7]))"
    },
    {
      "rank": 83,
      "score": 3.124788810024772,
      "candidate": "def count_same_pair(list1, list2, list3):\n    \"\"\"\n    :type list1: List[int]\n    :type list2: List[int]\n    :type list3: List[int]\n    :rtype: int\n    \"\"\"\n    # Your code here\n    return (list(set(list1) & set(list2)).count(list3))"
    },
    {
      "rank": 84,
      "score": 3.07619058922282,
      "candidate": "def count_same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    return a == b and a == c\n\n\na = [1, 2, 3, 4, 5]\nb = [1, 2, 3, 4, 5]\nc = [1, 2, 3, 4, 5]\n\nprint(count_same_pair(a, b, c))"
    },
    {
      "rank": 85,
      "score": 3.0756127552217274,
      "candidate": "def count_same_pair(list1, list2, list3):\n    list1.sort()\n    list2.sort()\n    list3.sort()\n    return list1 == list2 and list1 == list3\n\nprint(count_same_pair([1, 2, 2], [1, 2, 2], [1, 2, 2]))\nprint(count_same_pair([1, 1, 1], [1, 2, 3], [2, 2, 2]))\nprint(count_same_pair([1, 1, 1], [1, 2, 2], [2, 2, 2]))"
    },
    {
      "rank": 86,
      "score": 3.025512195633269,
      "candidate": "def count_same_pair(lst1, lst2, lst3):\n    return len(set(lst1) & set(lst2) & set(lst3))\n\n\nprint(count_same_pair([1, 2, 3], [2, 1, 2], [2, 2, 2]))"
    },
    {
      "rank": 87,
      "score": 3.0211049786031654,
      "candidate": "def same_pair(l1, l2, l3):\n    count = 0\n    for i in range(len(l1)):\n        if l1[i] == l2[i] == l3[i]:\n            count += 1\n    return count\n\n\nprint(same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 88,
      "score": 3.0200208256947794,
      "candidate": "class Solution:\n    def countSamePair(self, l1, l2, l3):\n        \"\"\"\n        :type l1: List[int]\n        :type l2: List[int]\n        :type l3: List[int]\n        :rtype: int\n        \"\"\"\n        if len(l1)!= len(l2) or len(l1)!= len(l3):\n            return 0\n        for i in range(len(l1)):\n            if l1[i]!= l2[i] or l1[i]!= l3[i]:\n                return 0\n        return 1"
    },
    {
      "rank": 89,
      "score": 2.996895638310275,
      "candidate": "def count_same_pair(a, b, c):\n    # write your code here\n    return a.count(b) == b.count(c) == c.count(a)\n\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    },
    {
      "rank": 90,
      "score": 2.991760011004711,
      "candidate": "def count_same_pair(a,b,c):\n  return (a[0]==b[0] and a[1]==b[1] and a[2]==b[2])"
    },
    {
      "rank": 91,
      "score": 2.9480714508880967,
      "candidate": "def count_same_pair(list1, list2, list3):\n    count = 0\n    for i in list1:\n        for j in list2:\n            for k in list3:\n                if i == j and i == k:\n                    count += 1\n    return count\n\nprint(count_same_pair([1,2,3,4], [2,3,4,5], [5,5,5,5]))"
    },
    {
      "rank": 92,
      "score": 2.9288811535542205,
      "candidate": "def count_same_pair(a, b, c):\n    return a == b and a == c"
    },
    {
      "rank": 93,
      "score": 2.911431075504247,
      "candidate": "def count_same_pair(list1, list2, list3):\n    if len(list1)!= len(list2) or len(list1)!= len(list3):\n        return False\n    count = 0\n    for i in range(len(list1)):\n        if list1[i] == list2[i] and list1[i] == list3[i]:\n            count += 1\n    return count\n\nlist1 = [1, 2, 3, 4, 5]\nlist2 = [1, 2, 3, 4, 5]\nlist3 = [1, 2, 3, 4, 5]\nprint(count_same_pair(list1, list2, list3))"
    },
    {
      "rank": 94,
      "score": 2.8928821566788407,
      "candidate": "def count_same_pair(a, b, c):\n    # Write your code here\n    count = 0\n    for i in range(len(a)):\n        if a[i] == b[i] and a[i] == c[i]:\n            count += 1\n    return count\n\n\ndef main():\n    print(count_same_pair([1, 2, 3, 4], [1, 2, 3, 4], [1, 2, 3, 4]))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 95,
      "score": 2.8845958799755564,
      "candidate": "def count_same_pair(lst1, lst2, lst3):\n    if len(lst1)!= len(lst2) or len(lst1)!= len(lst3):\n        return False\n\n    result = 0\n    for i in range(len(lst1)):\n        if lst1[i] == lst2[i] or lst2[i] == lst3[i]:\n            result += 1\n\n    return result\n\n\n\n\n\nprint(count_same_pair([1, 2, 2, 1], [1, 2, 2, 1], [1, 2, 2, 1]))"
    },
    {
      "rank": 96,
      "score": 2.675170148692883,
      "candidate": "def count_same_pair(list1, list2, list3):\n    if len(list1)!= len(list2) or len(list2)!= len(list3):\n        return 0\n    return list(set(list1) & set(list2) & set(list3))\n\n\ndef test_count_same_pair():\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 1, 3]) == 1\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 1]) == 1\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [1, 3, 2]) == 1\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [1, 3, 1]) == 2\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 1]) == 2\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [1, 3, 1]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 2]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 3]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [1, 3, 3]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 3]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [1, 3, 3]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 3]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [2, 3, 2]) == 0\n    assert count_same_pair([1, 1, 1], [1, 2, 3], [1,"
    },
    {
      "rank": 97,
      "score": 2.672307917170905,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return list(set(list1) & set(list2) & set(list3))\n\n\nprint(count_same_pair([1, 2, 3], [1, 3, 2], [1, 2, 3]))"
    },
    {
      "rank": 98,
      "score": 2.594500764266571,
      "candidate": "def count_same_pair(a, b, c):\n    return a == b or b == c or c == a\n\n\nprint(count_same_pair([1, 1, 2], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 1, 2], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 1, 2], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 99,
      "score": 2.5599455437287064,
      "candidate": "def count_same_pair(a, b, c):\n    a.sort()\n    b.sort()\n    c.sort()\n    return len(set(a + b + c))\n\n\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))\nprint(count_same_pair([1, 2, 3], [1, 2, 3], [1, 2, 3]))"
    },
    {
      "rank": 100,
      "score": 2.5492758715076516,
      "candidate": "def count_same_pair(list1, list2, list3):\n    return len(set(list1) & set(list2) & set(list3))\n\n\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))\nprint(count_same_pair([1, 1, 1], [1, 1, 1], [1, 1, 1]))"
    }
  ]
}