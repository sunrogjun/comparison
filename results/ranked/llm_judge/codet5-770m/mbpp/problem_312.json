{
  "timestamp": "2025-09-14T14:45:38.274958",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 312,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def re_arrange_array(arr):\n    if len(arr) < 2:\n        return arr\n    neg = [0] * len(arr)\n    pos = [0] * len(arr)\n    neg_end = 0\n    pos_end = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            neg[i] = neg_end\n            neg_end += 1\n        elif arr[i] < 0:\n            pos[i] = pos_end\n            pos_end += 1\n        else:\n            pos[i] = i\n    return [neg[i] if i < len(neg) else pos[i] for i in range(len(arr))]\n\nif __name__ == \"__main__\":\n    arr = [1, -2, -3, 4, 5, -6, 7, 8, 9]\n    print(re_arrange_array(arr))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            neg -= 1\n        else:\n            pos += 1\n\n    return arr\n\nif __name__ == \"__main__\":\n    arr = [1,-1,2,3,-2,-1,4,5,-3,-4,-5,-6]\n    print(rearrange(arr))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def rearrange_array(arr):\n    if len(arr) == 1:\n        return arr\n    pos = arr.index('+')\n    neg = arr.index('-')\n    arr = arr[pos:neg+1] + ['+'] + arr[pos+1:neg]\n    return arr\n\n\nprint(rearrange_array([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(rearrange_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(rearrange_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\nprint(rearrange_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]))\nprint(rearrange_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]))\nprint(rearrange_array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def rearrange_list(arr):\n    pos = []\n    neg = []\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            pos.append(arr[i])\n        else:\n            neg.append(arr[i])\n    pos.sort()\n    neg.sort()\n    for i in range(len(pos)):\n        arr[pos[i]] = pos[i] + 1\n    for i in range(len(neg)):\n        arr[neg[i]] = neg[i] - 1\n    return arr\n\nprint(rearrange_list([-4, -5, -1, -2, -3, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if not nums:\n            return\n        i = 0\n        j = len(nums)-1\n        while i < j:\n            if nums[i] < 0:\n                nums[i], nums[j] = nums[j], nums[i]\n                i += 1\n                j -= 1\n            elif nums[i] > 0:\n                nums[i], nums[j] = nums[j], nums[i]\n                i += 1\n                j -= 1\n            elif nums[i] == 0:\n                i += 1\n                j -= 1\n\n\nnums = [-2,0,3,-5,6]\nsol = Solution()\nsol.rearrangeArray(nums)\nprint(nums)"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    arr.reverse()\n    arr.insert(0, 0)\n    arr.append(0)\n    return arr\n\nprint(rearrange([1,2,3,4,5]))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def re_arrange(arr):\n    arr.sort()\n    n = len(arr)\n    for i in range(n - 1):\n        arr[i], arr[n - 1 - i] = arr[n - 1 - i], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(re_arrange([1, 2, -1, 4, 5, -2]))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)-1):\n        if arr[i]>0:\n            arr[i],arr[i+1] = arr[i+1],arr[i]\n    return arr\n\n\nprint(rearrange([1,2,3,4,5,6]))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            neg -= 1\n        else:\n            pos += 1\n            neg -= 1\n    return arr\n\nprint(rearrange([-1, -2, -3, -4, -5, -6, -7, -8, -9]))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if i == 0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n        elif i == len(arr)-1:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n        else:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n\n\narr = [3, 5, -5, -4, -2, -2, -5, 4, 4, -3, -2, -5, 2, -3, -5, -4, -2, -2, -5, 3, -3, -4, -2, -2, -5, 3, -3, -4, -2, -2, -5, -4, -2, -2, -3, -2, -5, -4, -2, -2, -5, -3, -4, -2, -2, -5, 3, -3, -4, -2, -2, -5, -4, -2, -2, -5, -3, -4, -2, -2, -3, -4, -2, -2, -5, -4, -2, -2, -3, -4, -2, -2, -5, -4, -2, -2, -2, -2, -3, -4, -2, -2, -5, -4, -2, -2, -4, -2, -2, -2, -3, -5, -4, -2, -2, -2, -2, -2, -2, -3, -4, -2, -2, -2, -2, -2, -2, -2, -2, -3, -4, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def alternating_arrange(arr):\n    # Your code here\n    i = 0\n    j = len(arr)-1\n    while i < j:\n        if arr[i] < 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n        elif arr[i] > 0:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j -= 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(alternating_arrange([0, -1, 1, 2, 3, 4]))\n    print(alternating_arrange([0, -1, 1, 2, 3]))\n    print(alternating_arrange([0, -1, 1, 2, 3, 4, 5, 6, 7, 8]))\n    print(alternating_arrange([0, -1, 1, 2, 3, 4, 5]))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def re_arrange_array(arr):\n    for i in range(len(arr)-1, -1, -1):\n        arr[i], arr[i-1] = arr[i-1], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(re_arrange_array([1, -1, 2, -3, 4, -5, -6]))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def re_arrange_array(arr):\n    pos_list = []\n    neg_list = []\n    for i in arr:\n        if i > 0:\n            pos_list.append(i)\n        elif i < 0:\n            neg_list.append(i)\n    for i in pos_list:\n        arr.remove(i)\n    for i in neg_list:\n        arr.append(i)\n    return arr\n\nprint(re_arrange_array([-1,0,1,2,3]))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def rearrange(arr, neg, pos):\n    pos_index = 0\n    neg_index = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            if pos_index == len(arr) - 1:\n                pos_index = i\n            elif pos_index > neg_index:\n                pos_index = neg_index\n            else:\n                neg_index += 1\n    arr[pos_index], arr[neg_index] = arr[neg_index], arr[pos_index]\n\narr = [1, 0, -2, 3, 4, -1, 2, -1]\nrearrange(arr, -1, -1)\nprint(arr)"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n\n    while pos < neg:\n        if arr[pos] > arr[neg]:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n        else:\n            pos += 1\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [1, -2, 3, -4, 5, 6, 7, 8, 9]\n    print(rearrange(arr))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        # Method 1:\n        # O(nlogn) space:O(n)\n        for i in range(len(nums)-1, -1, -1):\n            if nums[i] > 0:\n                nums[i], nums[i-1] = nums[i-1], nums[i]\n        # Method 2:\n        # O(nlogn) space:O(n)\n        for i in range(len(nums)-1, 0, -1):\n            if nums[i] < 0:\n                nums[i], nums[i+1] = nums[i+1], nums[i]\n        # Method 3:\n        # O(n) space:O(1)\n        for i in range(len(nums)):\n            nums[i] += 1\n\n# Tests\nnums = [-5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5]\ns = Solution()\ns.rearrangeArray(nums)\nprint nums"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    arr.sort()\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n        pos += 1\n        neg -= 1\n    return arr\n\nprint(rearrange([1,2,3,4,5]))\nprint(rearrange([4,2,1]))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def re_arrange(arr):\n    arr.sort()\n    arr.reverse()\n    arr.append(0)\n    return arr\n\n\nprint(re_arrange([-2, -1, 0, 1, 2]))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: void Do not return anything, modify arr in-place instead.\n        \"\"\"\n        pos = 0\n        neg = len(arr)-1\n\n        while pos < neg:\n            while pos < neg and arr[pos] > 0:\n                pos += 1\n\n            while pos < neg and arr[pos] < 0:\n                neg -= 1\n\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n\n        return arr"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def rearrange(arr):\n    n = len(arr)\n    if n < 2:\n        return arr\n    i = 0\n    j = 1\n    while i < n - 1:\n        arr[i], arr[j] = arr[j], arr[i]\n        i += 1\n        j += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(rearrange([1, -2, 3, 4, 5, 6]))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] > 0:\n            pos += 1\n        else:\n            neg -= 1"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def rearrange(arr, pos, neg):\n    pos = 0\n    neg = len(arr) - 1\n    pos_idx = pos + neg\n    neg_idx = pos + neg\n    while pos_idx < len(arr) and neg_idx >= pos:\n        arr[pos_idx], arr[neg_idx] = arr[neg_idx], arr[pos_idx]\n        pos_idx += 1\n        neg_idx -= 1\n\nif __name__ == \"__main__\":\n    arr = [5, 2, -4, -6, -8, -9, -7, -1, -2, -3]\n    rearrange(arr, 0, len(arr) - 1)\n    print(arr)"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def rearrange_items(arr):\n    if len(arr) <= 1:\n        return arr\n\n    # find the index of the first positive and last negative item\n    pos = -1\n    neg = -1\n\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            pos = i\n        else:\n            neg = i\n\n    # swap the positive and negative items\n    arr[pos], arr[neg] = arr[neg], arr[pos]\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    assert rearrange_items([1, 2, 3, 4, 5]) == [1, 2, 3, 4, 5]\n    assert rearrange_items([-1, -2, -3, -4, -5]) == [-1, -2, -3, -4, -5]\n    assert rearrange_items([1, -2, -3, -4, -5]) == [-1, -2, -3, -4, -5]\n    assert rearrange_items([-1, -2, -3, -4]) == [-1, -2, -3, -4]\n    assert rearrange_items([0, -2, -3]) == [-2, -3, 0]"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def rearrange_items(arr):\n    if len(arr) < 2:\n        return arr\n    if arr[0] > 0:\n        arr[0], arr[1] = arr[1], arr[0]\n    if arr[-1] < 0:\n        arr[-1], arr[-2] = arr[-2], arr[-1]\n    return arr\n\n\nprint(rearrange_items([-1, 0, 1, 2, -3, 4, 5, 6, 7]))\nprint(rearrange_items([-1, 0, 1, 2, -3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    if len(arr) == 1:\n        return arr\n\n    pos = 0\n    neg = len(arr) - 1\n\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n        elif arr[pos] < 0:\n            arr[neg], arr[pos] = arr[pos], arr[neg]\n            neg -= 1\n\n    return arr\n\n\nprint(rearrange_array([-1,0,2,-3,4]))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    n = len(arr)\n    if n < 2:\n        return arr\n    if n == 2:\n        return [arr[0], arr[1]]\n    pos_pos = 0\n    neg_neg = 0\n    for i in range(n):\n        if arr[i] > 0:\n            pos_pos += 1\n        elif arr[i] < 0:\n            neg_neg += 1\n    pos_neg = pos_pos + neg_neg\n    for i in range(pos_pos, n):\n        arr[i], arr[i - pos_pos] = arr[i - pos_pos], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(rearrange_array([-2, 0, -4, 2, 5, -1, 3, 1, 4, 7]))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def re_arrange_array(array):\n    if len(array) > 0:\n        if array[0] < 0:\n            array.insert(0, -array[0])\n            array.insert(0, 0)\n            array.append(array[0])\n            array.pop()\n        if array[0] > 0:\n            array.insert(0, array[0])\n            array.insert(0, 0)\n            array.pop()\n    return array\n\n\nprint(re_arrange_array([-2, 0, 1, -3]))\nprint(re_arrange_array([-2, 0, 1, -3, 4]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6, 7]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6, 7, 8]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6, 7, 8, 9]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6, 7, 8, 9, 10]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6, 7, 8, 9, 10, 11]))\nprint(re_arrange_array([-2, 0, 1, -3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            arr[i], arr[i - 1] = arr[i - 1], arr[i]\n        elif arr[i] < 0:\n            arr[i], arr[i + 1] = arr[i + 1], arr[i]\n\n\narr = [0, -2, 3, -5, -7, -11, -13, -14, -15, -17, -19]\nrearrange_array(arr)\nprint(arr)"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def re_arrange_array(arr):\n    arr.reverse()\n    while len(arr) > 1:\n        if arr[0] > arr[-1]:\n            arr.insert(0, arr.pop())\n        else:\n            arr.insert(0, -arr.pop())\n    return arr\n\nprint(re_arrange_array([-1, -2, -3, -4, -5, -6, -7]))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    # Time: O(n) Space: O(n)\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i], arr[len(arr) - 1 - i] = arr[len(arr) - 1 - i], arr[i]\n\n\narr = [-1, 1, 2, 3, 4, 5, 6, 7]\nrearrange(arr)\nprint(arr)"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] > 0:\n            neg -= 1\n        else:\n            pos += 1\n\n    return arr\n\n\narr = [1, 2, 3, 4, 5, 6, 7]\nprint(arr)\nprint(rearrange_array(arr))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def rearrange(arr, n):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n        pos += 1\n        neg -= 1\n    return arr\n\n\ndef main():\n    arr = [1, 2, 3, 4, 5, 6, 7]\n    print(rearrange(arr, len(arr)))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    arr.reverse()\n    arr.insert(0, 0)\n    arr.append(0)\n    return arr\n\n\n\nif __name__ == \"__main__\":\n    arr = [1, -1, -2, 2, -1, -3, 3, 1, 2, 4, 4]\n    arr2 = rearrange_array(arr)\n    print(arr)\n    print(arr2)"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def rearrange(nums):\n    pos = 0\n    neg = len(nums) - 1\n    while pos <= neg:\n        if nums[pos] > 0:\n            nums[pos], nums[neg] = nums[neg], nums[pos]\n            pos += 1\n            neg -= 1\n        else:\n            pos += 1\n    return nums\n\n\ndef rearrange2(nums):\n    pos = 0\n    neg = len(nums) - 1\n    while pos <= neg:\n        if nums[pos] > 0:\n            nums[pos], nums[neg] = nums[neg], nums[pos]\n            pos += 1\n            neg -= 1\n        else:\n            pos += 1\n    return nums\n\n\nprint(rearrange([1, -2, 3, -4, 5, -6, 7, 8, 9, 10, 11]))\nprint(rearrange([-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(rearrange([-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if i % 2 == 0:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n    return arr\n\n\nprint(rearrange([-2, -1, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr)-1\n    while pos <= neg:\n        if arr[pos] > 0:\n            arr[pos+1], arr[pos] = arr[pos], arr[pos+1]\n            pos += 1\n        elif arr[pos] < 0:\n            arr[neg-1], arr[neg] = arr[neg], arr[neg-1]\n            neg -= 1\n        else:\n            pos += 1\n\n\nif __name__ == \"__main__\":\n    arr = [1, -1, 2, -2, 3, -3]\n    rearrange(arr)\n    print(arr)"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    new_arr = []\n    for item in arr:\n        if item > 0:\n            new_arr.append(item)\n        else:\n            new_arr.append(-item)\n    return new_arr\n\n\nprint(rearrange_array([-1, 2, 0, -5, -5, -1, -2, -5, -1, -3, -5, -5, -1, -2, -5, -5]))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def rearrange(arr, n):\n    for i in range(0, n):\n        if arr[i] > 0:\n            arr[i], arr[n - 1 - i] = arr[n - 1 - i], arr[i]\n    return arr\n\n\nif __name__ == '__main__':\n    arr = [1, -2, 3, 4, 5]\n    n = 5\n    print(rearrange(arr, n))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    length = len(arr)\n    pos = [arr[0]]\n    neg = [arr[0]]\n    for i in range(length):\n        if arr[i] > 0:\n            pos.append(arr[i])\n        else:\n            neg.append(arr[i])\n    pos.sort()\n    neg.sort()\n    for i in range(length):\n        if pos[i] > neg[i]:\n            arr[i], arr[pos[i]] = arr[pos[i]], arr[i]\n        else:\n            arr[i], arr[neg[i]] = arr[neg[i]], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))\n\n    arr = [-3, -2, -4, 2, 5, -1, -3]\n    print(rearrange(arr))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def rearrange_items(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n        elif arr[pos] < 0:\n            arr[neg], arr[pos] = arr[pos], arr[neg]\n            neg -= 1\n        else:\n            pos += 1\n            neg -= 1\n\n\narr = [1, -2, 3, 4, 5]\nrearrange_items(arr)\nprint(arr)"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] > 0:\n            neg -= 1\n        else:\n            pos += 1\n    return arr\n\n\nprint(rearrange([-1, -2, -3, 4, -5]))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    if len(arr) == 1:\n        return arr\n\n    if len(arr) == 2:\n        if arr[0] > 0:\n            return [0, arr[1]]\n        else:\n            return [arr[1], 0]\n\n    pos = 0\n    neg = len(arr) - 1\n    pos_index = 0\n    neg_index = 0\n\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos_index] = 0\n            pos_index += 1\n        if arr[neg] < 0:\n            arr[neg_index] = 0\n            neg_index -= 1\n\n    if pos_index < neg_index:\n        arr[pos_index], arr[neg_index] = arr[neg_index], arr[pos_index]\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(rearrange([-1, -1, 0, 1, 2, 3, 4, 5]))\n    print(rearrange([0, 0, 0, 0, 0, 0, 0, 0]))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n        pos += 1\n        neg -= 1\n\n    return arr\n\n\narr = [1, -2, 3, 4, -5, -6, 7, 8, 9]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    n = len(arr)\n    if n == 0:\n        return\n    pos = 0\n    neg = n - 1\n    while pos < neg:\n        while pos < n and arr[pos] <= 0:\n            pos += 1\n        while neg > 0 and arr[neg] >= 0:\n            neg -= 1\n        if pos < neg:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n        else:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n\nrearrange([-1, 2, 0, -4, -3, -7, -1])\nprint(arr)"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)-1):\n        if arr[i] > 0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n    return arr\n\narr = [-1, -1, 0, 1, 2, 3, 4, 5, 6]\nprint(rearrange(arr))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)-1, -1, -1):\n        if arr[i] > 0:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n\nif __name__ == \"__main__\":\n    arr = [1,2,3,4,5]\n    rearrange(arr)\n    print(arr)"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def rearrange(arr):\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n        elif arr[i] < 0:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(rearrange([1, -1, 2, -2, 3, 4, 5, -5, 6, -6, 7, -7, 8, 9]))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    arr.reverse()\n    arr.insert(0, 0)\n    arr.insert(len(arr)-1, len(arr))\n    return arr\n\narr = [3, 4, 5, -1, -2, -3]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def re_arrange_list(arr):\n    arr.sort()\n    i = 0\n    j = len(arr) - 1\n    while i < j:\n        if arr[i] > arr[j]:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n        else:\n            j -= 1\n    return arr\n\n\narr = [-10, -5, -3, -2, 0, 1, 2, 3, 4, 5]\nprint(re_arrange_list(arr))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def rearrange_array(arr):\n    pos_num = 0\n    neg_num = len(arr) - 1\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            arr[pos_num], arr[neg_num] = arr[neg_num], arr[pos_num]\n            pos_num += 1\n            neg_num -= 1\n        else:\n            pos_num += 1\n            neg_num -= 1\n    return arr"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def re_arrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            neg -= 1\n        else:\n            pos += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [5, -1, 1, -4, 2, -3, 4, -5]\n    print(re_arrange(arr))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def rearrange_arr(arr):\n    n = len(arr)\n    for i in range(n):\n        if i%2 == 0:\n            arr[i], arr[n-1-i] = arr[n-1-i], arr[i]\n    return arr\n\narr = [1,2,3,4,5,6,7,8,9]\nprint(rearrange_arr(arr))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def re_arrange(arr):\n    arr_rear = []\n    for i in arr:\n        if i < 0:\n            arr_rear.append(-i)\n        else:\n            arr_rear.append(i)\n    return arr_rear\n\narr = [-1, -3, 2, 4, -7, -9]\nprint(re_arrange(arr))"
    },
    {
      "rank": 54,
      "score": 7.0,
      "candidate": "def rearrange(arr):\n    pos = [0]*len(arr)\n    neg = [0]*len(arr)\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            pos[i] = arr[i]\n        else:\n            neg[i] = arr[i]\n    return pos + neg"
    },
    {
      "rank": 55,
      "score": 7.0,
      "candidate": "def rearrange(arr):\n    if len(arr) > 1:\n        pos = arr[0]\n        neg = arr[-1]\n        arr = arr[1:-1]\n        arr.reverse()\n        arr.append(pos)\n        arr.append(neg)\n    return arr"
    },
    {
      "rank": 56,
      "score": 7.0,
      "candidate": "def rearrange(arr):\n    arr_copy = arr.copy()\n    arr_copy.sort()\n    if len(arr_copy)%2 == 1:\n        arr_copy.insert(0,arr_copy.pop())\n        arr_copy.insert(len(arr_copy),arr_copy.pop())\n    else:\n        arr_copy.pop(0)\n        arr_copy.insert(0,arr_copy.pop())\n        arr_copy.insert(len(arr_copy),arr_copy.pop())\n    return arr_copy\n\narr = [2,1,-3,4,-5]\nprint(rearrange(arr))"
    },
    {
      "rank": 57,
      "score": 1.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if len(nums) == 1:\n            return\n        pos = 0\n        neg = len(nums) - 1\n        while pos < neg:\n            if nums[pos] > 0:\n                nums[pos], nums[neg] = nums[neg], nums[pos]\n                pos += 1\n                neg -= 1\n            elif nums[pos] < 0:\n                pos += 1\n            else:\n                pos += 1\n                neg -= 1"
    },
    {
      "rank": 58,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    # O(n) time | O(1) space\n    pos_idx = 0\n    neg_idx = 0\n    for i in range(len(arr)):\n        if i % 2 == 0:\n            arr[pos_idx], arr[neg_idx] = arr[neg_idx], arr[pos_idx]\n            pos_idx += 1\n            neg_idx += 1\n        else:\n            arr[neg_idx], arr[pos_idx] = arr[pos_idx], arr[neg_idx]\n            pos_idx += 1\n            neg_idx += 1\n    return arr\n\n\nif __name__ == '__main__':\n    arr = [0, -1, 0, 1, -1]\n    rearrange_array(arr)\n    assert arr == [-1, 0, 1, -1, 0]"
    },
    {
      "rank": 59,
      "score": 1.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        n = len(nums)\n        if n <= 1:\n            return\n        # find the last index of each positive or negative item\n        pos_pos_pos = [i for i in range(n) if nums[i] < 0]\n        neg_pos_pos = [i for i in range(n) if nums[i] > 0]\n        pos_neg_neg = [i for i in range(n) if nums[i] > 0 and nums[i] < 0]\n\n        # if there are more positive items than negative items, append them to the end\n        if len(pos_pos_pos) > len(neg_pos_neg):\n            for i in pos_pos_pos:\n                nums.append(0)\n        elif len(pos_neg_neg) > len(neg_pos_pos):\n            for i in neg_pos_neg:\n                nums.append(0)\n\n        # if there are more negative items than positive items, append them to the end\n        if len(pos_pos_pos) > len(neg_neg_neg):\n            for i in neg_neg_neg:\n                nums.append(0)\n        elif len(pos_neg_neg) > len(neg_pos_pos):\n            for i in pos_pos_pos:\n                nums.append(0)"
    },
    {
      "rank": 60,
      "score": 1.0,
      "candidate": "def rearrange_arr(arr):\n    if len(arr) == 0:\n        return arr\n\n    pos = 0\n    neg = len(arr) - 1\n\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] < 0:\n            neg -= 1\n        else:\n            pos += 1\n\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [1, -2, -3, 4, 5, 6, 7, 8]\n    print(rearrange_arr(arr))"
    },
    {
      "rank": 61,
      "score": 1.0,
      "candidate": "def rearrange(arr, pos, neg):\n    pos_end = pos + len(arr)\n    neg_end = neg + len(arr)\n    arr = arr[:pos_end] + [-1] + arr[neg_end:]\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [1, -2, 3, 4]\n    print(arr)\n    print(rearrange(arr, 0, len(arr)-1))\n\n    arr = [1, -2, 3, 4]\n    print(arr)\n    print(rearrange(arr, 0, len(arr)-1))\n\n    arr = [1, -2, 3, 4]\n    print(arr)\n    print(rearrange(arr, 0, len(arr)-1))"
    },
    {
      "rank": 62,
      "score": 1.0,
      "candidate": "def rearrange_items(arr):\n    neg = []\n    pos = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            neg.append(arr[i])\n        else:\n            pos.append(arr[i])\n    arr[:] = pos + neg\n\nif __name__ == \"__main__\":\n    arr = [4, -5, 2, -6, 1, -3, 5, -4]\n    rearrange_items(arr)\n    assert arr == [5, 2, -6, 1, -3, 4, -5]"
    },
    {
      "rank": 63,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0], arr[1], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]]\n    if len(arr) == 10:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10]]\n    if len(arr) == 11:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10], arr[11]]\n    if len(arr) == 12:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9], arr[10],"
    },
    {
      "rank": 64,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        while pos < neg and arr[pos] < 0:\n            pos += 1\n\n        while pos < neg and arr[neg] > 0:\n            neg -= 1\n\n        if pos >= neg:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n\n        pos += 1\n\n    return arr\n\n\nif __name__ == '__main__':\n    print(rearrange_array([-2, -3, -1, -4, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 65,
      "score": 1.0,
      "candidate": "def rearrange_items(arr, pos_idx, neg_idx):\n    new_arr = []\n    for i in range(len(arr)):\n        new_arr.append(arr[i])\n        if arr[i] > 0:\n            new_arr.append(arr[i-1])\n        elif arr[i] < 0:\n            new_arr.append(arr[i+1])\n    return new_arr\n\narr = [1,-2,-3,0,3,4,5,6,7]\nprint(rearrange_items(arr, 0, len(arr)-1))\nprint(rearrange_items(arr, 0, len(arr)-1))\nprint(rearrange_items(arr, 1, len(arr)-1))\nprint(rearrange_items(arr, 1, len(arr)-1))"
    },
    {
      "rank": 66,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    n = len(arr)\n    if n == 1:\n        return arr\n    i = 0\n    j = 0\n    while i < n:\n        if i % 2 == 0:\n            arr[j] = arr[i]\n            j += 1\n        else:\n            arr[i] = -arr[i]\n            i += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [0, -1, 2, -3, 4]\n    print(rearrange_array(arr))"
    },
    {
      "rank": 67,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    # Write your code here\n    if len(arr) > 0:\n        i = 0\n        j = len(arr)-1\n        while i < j:\n            if arr[i] > 0:\n                arr[i], arr[j] = arr[j], arr[i]\n                i += 1\n                j -= 1\n            elif arr[i] < 0:\n                arr[i], arr[j] = arr[j], arr[i]\n                j -= 1\n            else:\n                i += 1\n    return arr\n\narr = [-2, -3, -1, 0, 1, 2, 3, 4]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 68,
      "score": 1.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        pos = 0\n        neg = len(nums) - 1\n        while pos < neg:\n            if nums[pos] < 0:\n                nums[pos], nums[neg] = nums[neg], nums[pos]\n                pos += 1\n                neg -= 1\n            elif nums[pos] > 0:\n                pos += 1\n            else:\n                neg -= 1"
    },
    {
      "rank": 69,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    arr.reverse()\n    arr.insert(0, -1)\n    arr.append(1)\n    arr.reverse()\n    return arr\n\n\nprint(rearrange([-2, -1, 0, 1, 2, 3, 4, 5]))"
    },
    {
      "rank": 70,
      "score": 1.0,
      "candidate": "def rearrange(arr, pos, neg):\n    for i in range(pos, neg):\n        arr[i], arr[i+1] = arr[i+1], arr[i]\n\n\narr = [1, -2, 3, 4, -5, 6]\npos = 0\nneg = len(arr)-1\nrearrange(arr, pos, neg)\nprint(arr)"
    },
    {
      "rank": 71,
      "score": 1.0,
      "candidate": "def rearrange_items(arr, pos, neg):\n    for i in range(len(arr)):\n        if i == pos:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n        else:\n            arr[i], arr[i+1] = arr[i+1], arr[i]\n\narr = [4, 2, 3, 1, -5]\npos = 0\nneg = 2\nrearrange_items(arr, pos, neg)\nprint(arr)"
    },
    {
      "rank": 72,
      "score": 1.0,
      "candidate": "def alternating_rearrange(arr):\n\n    # initialize the counter\n    pos_counter = 0\n    neg_counter = 0\n    # loop through the array\n    for item in arr:\n        if item == 1:\n            pos_counter += 1\n        elif item == -1:\n            neg_counter += 1\n        else:\n            # increase the counter\n            pos_counter += 1\n            neg_counter += 1\n    # print the results\n    print(\"Array is alternating\")\n    print(\"Positive items: \", pos_counter)\n    print(\"Negative items: \", neg_counter)\n\n\nalternating_rearrange([1, -1, 2, 3, 4, 5])"
    },
    {
      "rank": 73,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    # Write your code here\n    if arr == []:\n        return\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] == 0:\n            pos += 1\n        elif arr[neg] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            neg -= 1\n\n\narr = [1, -2, 3, 4, 5, -6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [-2, -1, -1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [-2, -1, -1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [1, -2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [-2, -1, -1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [-2, -1, -1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [-2, -1, -1, 0, 1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nrearrange(arr)\nprint(arr)\n\narr = [-2, -1, -1, 0, 1, 1, 2, 3, 4"
    },
    {
      "rank": 74,
      "score": 1.0,
      "candidate": "def rearrange_items(arr):\n    # write your code here\n    new_arr = [0] * len(arr)\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            new_arr[i] = 1\n        elif arr[i] < 0:\n            new_arr[i] = -1\n    return new_arr\n\n\nif __name__ == \"__main__\":\n    arr = [3, -1, -2, -3, 5, 6, -2, -4]\n    print(rearrange_items(arr))"
    },
    {
      "rank": 75,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    pos = []\n    neg = []\n    for i in arr:\n        if i < 0:\n            neg.append(i)\n        else:\n            pos.append(i)\n    return pos + neg\n\n\narr = [-5, -2, -3, -2, -1, -5, -3]\nprint(rearrange(arr))"
    },
    {
      "rank": 76,
      "score": 1.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        nums.sort()\n        i = 0\n        j = len(nums) - 1\n        while i < j:\n            if nums[i] < 0:\n                nums[i], nums[j] = nums[j], nums[i]\n                j -= 1\n            elif nums[i] > 0:\n                i += 1\n            else:\n                i += 1"
    },
    {
      "rank": 77,
      "score": 1.0,
      "candidate": "def rearrange_negatives(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = -arr[i]\n\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            arr[i] = -arr[i]\n\n    return arr\n\narr = [2, -3, -4, 5, -6, -7]\nprint(rearrange_negatives(arr))"
    },
    {
      "rank": 78,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] > 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            neg -= 1\n        else:\n            pos += 1\n    return arr\n\n\narr = [2, 1, -3, 4, -1, -7, -8, 10]\nprint(rearrange(arr))"
    },
    {
      "rank": 79,
      "score": 1.0,
      "candidate": "def re_arrange(arr, pos, neg):\n    pos_index = pos\n    neg_index = neg\n    while pos_index < len(arr) and neg_index < len(arr):\n        if arr[pos_index] < arr[neg_index]:\n            arr[pos_index], arr[neg_index] = arr[neg_index], arr[pos_index]\n            pos_index += 1\n            neg_index += 1\n        elif arr[pos_index] > arr[neg_index]:\n            arr[pos_index], arr[neg_index] = arr[neg_index], arr[pos_index]\n            pos_index += 1\n            neg_index += 1\n        else:\n            pos_index += 1\n            neg_index += 1\n    return arr\n\narr = [1, 2, 3, 4, 5]\nprint(re_arrange(arr, 0, len(arr)-1))"
    },
    {
      "rank": 80,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    if len(arr) == 0:\n        return arr\n    elif len(arr) == 1:\n        return [arr[0]]\n    else:\n        if arr[0] < 0:\n            return [arr[0]] + rearrange_array(arr[1:])\n        else:\n            return [arr[0]] + rearrange_array(arr[1:]) + [arr[0]]\n\n\nprint(rearrange_array([-1, -2, 0, 1, 2]))\nprint(rearrange_array([-1, -2, 0, 1, 2, 3, 4, 5]))\nprint(rearrange_array([-1, -2, 0, 1, 2, 3, 4, 5, 6]))\nprint(rearrange_array([-1, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8]))"
    },
    {
      "rank": 81,
      "score": 1.0,
      "candidate": "def alternating_arrangement(arr):\n    return [arr[0], arr[1], arr[2]]\n\n\nprint(alternating_arrangement([1, 2, 3, 4]))\nprint(alternating_arrangement([2, 3, 1, 4]))\nprint(alternating_arrangement([-1, -2, -3, -4]))"
    },
    {
      "rank": 82,
      "score": 1.0,
      "candidate": "def rearrange_items(arr):\n    # Write your code here\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        if arr[pos] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n        elif arr[pos] > 0:\n            neg -= 1\n        else:\n            pos += 1\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(rearrange_items([1, -2, -3, -4, -5]))"
    },
    {
      "rank": 83,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    arr.sort()\n    arr_neg = []\n    arr_pos = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr_neg.append(arr[i])\n        else:\n            arr_pos.append(arr[i])\n    arr = arr_pos + arr_neg\n    arr.sort()\n    return arr\n\n\nif __name__ == '__main__':\n    arr = [1, -2, 3, 4, 5]\n    print(rearrange_array(arr))"
    },
    {
      "rank": 84,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    # Create a counter variable\n    counter = 0\n\n    # Loop through the array\n    for i in arr:\n        # Increment the counter\n        counter += 1\n\n        # If the counter is greater than the length of the array, then the item is a positive item\n        if counter > len(arr):\n            # Increment the counter and move on to the next item\n            counter = 1\n            arr.insert(counter, i)\n\n        # If the counter is less than the length of the array, then the item is a negative item\n        else:\n            # Increment the counter and move on to the next item\n            counter += 1\n            arr.insert(counter, -i)\n\n    return arr\n\n\n# Test cases\narr = [-2, -5, -1, 0, 5, 1, 2]\nprint(arr)\nprint(rearrange(arr))"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "class Solution(object):\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        if not nums:\n            return\n        if len(nums) == 1:\n            return\n        i = 0\n        j = 1\n        while j < len(nums):\n            if nums[i] < 0:\n                nums[i], nums[j] = nums[j], nums[i]\n                i += 1\n                j += 1\n            else:\n                i += 1"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    pos_index = 0\n    neg_index = len(arr) - 1\n\n    while pos_index < len(arr) and neg_index >= 0:\n        if arr[pos_index] < 0:\n            arr[pos_index], arr[neg_index] = arr[neg_index], arr[pos_index]\n            neg_index -= 1\n        else:\n            pos_index += 1\n    return arr\n\n\narr = [1, 2, -3, 4]\nprint(arr)\narr = rearrange_array(arr)\nprint(arr)"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        pos, neg = 0, len(nums) - 1\n        while pos < neg:\n            if nums[pos] < 0:\n                nums[pos], nums[neg] = nums[neg], nums[pos]\n                pos += 1\n                neg -= 1\n            elif nums[pos] > 0:\n                pos += 1\n            else:\n                neg -= 1"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "class Solution:\n    def rearrangeArray(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: void Do not return anything, modify nums in-place instead.\n        \"\"\"\n        pos, neg = 0, len(nums) - 1\n\n        while pos < neg:\n            nums[pos], nums[neg] = nums[neg], nums[pos]\n            pos += 1\n            neg -= 1"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    pos = 0\n    neg = len(arr) - 1\n    while pos < neg:\n        while pos < neg:\n            if arr[pos] < 0:\n                arr[pos], arr[neg] = arr[neg], arr[pos]\n                pos += 1\n                neg -= 1\n            elif arr[pos] > 0:\n                arr[pos], arr[neg] = arr[neg], arr[pos]\n                neg -= 1\n            else:\n                pos += 1\n    return arr\n\n\narr = [1, -2, 3, 4, -5, 6, 7]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "def rearrange(arr, pos, neg):\n    if pos < neg:\n        arr[pos], arr[neg] = arr[neg], arr[pos]\n    return arr\n\n\narr = [2, -1, 0, 1, -3, 4]\npos = 0\nneg = len(arr) - 1\n\nprint(rearrange(arr, pos, neg))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def rearrange_items(arr):\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        if arr[0] > arr[1]:\n            arr.append(arr[1])\n            arr.pop(0)\n        elif arr[0] < arr[1]:\n            arr.insert(0, arr[1])\n            arr.pop(1)\n        else:\n            return arr\n    else:\n        if arr[0] > arr[1]:\n            arr.append(arr[1])\n            arr.pop(0)\n        elif arr[0] < arr[1]:\n            arr.insert(0, arr[1])\n            arr.pop(1)\n        else:\n            return arr\n    return arr\n\narr = [-1, 0, 1, 2, -3, 4, -5, 6]\nprint(rearrange_items(arr))"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    n = len(arr)\n    for i in range(n):\n        if i % 2 == 1:\n            arr[i] = -arr[i]\n        else:\n            arr[i] = arr[i] + n\n    return arr\n\n\narr = [-1, 0, 1, 2, 3]\nprint(rearrange_array(arr))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def re_arrange_array(arr):\n    # write your code here\n    pos = 0\n    neg = len(arr) - 1\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[pos], arr[neg] = arr[neg], arr[pos]\n            pos += 1\n            neg -= 1\n\n    return arr\n\nprint(re_arrange_array([-5, -2, -5, -2, -5, -5, -2, -5, -2, -5]))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def rearrange_items(arr, pos, neg):\n    new_arr = []\n    for i in arr:\n        new_arr.append(i)\n        if i > 0:\n            new_arr.append(pos)\n        elif i < 0:\n            new_arr.append(neg)\n    return new_arr\n\n\narr = [-5, -3, -1, -2, 0, 2, 3, 4]\npos = 0\nneg = 1\nprint(rearrange_items(arr, pos, neg))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    n = len(arr)\n    for i in range(n-1, 0, -1):\n        if arr[i] >= 0:\n            arr[i], arr[i-1] = arr[i-1], arr[i]\n\n    return arr\n\n\nprint(rearrange_array([-4, -1, 0, 1, 2, 3, 4]))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def rearrange(arr):\n    # Fill this in.\n    n = len(arr)\n    for i in range(n):\n        if arr[i] > 0:\n            arr[i], arr[n - 1 - i] = arr[n - 1 - i], arr[i]\n        else:\n            arr[i], arr[n - 1 - i] = arr[n - 1 - i], arr[i]\n    return arr\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 3, 4, 5, 6]\n    print(rearrange(arr))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def rearrange_array(arr):\n    # write your code here\n    if len(arr) < 2:\n        return arr\n    positive = arr[0]\n    negative = arr[1]\n    arr[0] = negative\n    arr[1] = positive\n    return arr\n\n\nif __name__ == \"__main__\":\n    print(rearrange_array([-1, 2, -3, 4, 5, -1, -2, -3, 5]))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def rearrange_items(arr):\n    pos = [i for i in arr if i > 0]\n    neg = [i for i in arr if i < 0]\n    pos.sort()\n    neg.sort()\n\n    i = 0\n    j = 0\n    while i < len(pos) and j < len(neg):\n        if pos[i] > neg[j]:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j += 1\n        else:\n            arr[i], arr[j] = arr[j], arr[i]\n            i += 1\n            j += 1\n    while i < len(pos):\n        arr[i], arr[j] = arr[j], arr[i]\n        i += 1\n        j += 1\n    while i < len(neg):\n        arr[i], arr[j] = arr[j], arr[i]\n        i += 1\n        j += 1\n\n    return arr\n\n\nif __name__ == '__main__':\n    arr = [3, -2, 1, -5, 4]\n    print(rearrange_items(arr))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def rearrange_items(arr):\n    if len(arr) > 0:\n        if arr[0] < 0:\n            arr.insert(0, -arr[0])\n            arr.pop(0)\n        if arr[-1] > 0:\n            arr.insert(len(arr), -arr[-1])\n            arr.pop(-1)\n    return arr\n\n\ndef main():\n    arr = [0, 1, 2, 3, 4, 5]\n    print(rearrange_items(arr))\n\n\nmain()"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "class Solution:\n    def rearrangeArray(self, arr: List[int]) -> None:\n        if len(arr) <= 1:\n            return\n\n        positive_count = 0\n        negative_count = 0\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                positive_count += 1\n            else:\n                negative_count += 1\n\n        arr.sort()\n\n        for i in range(positive_count):\n            arr[i], arr[i+negative_count] = arr[i+negative_count], arr[i]\n\n        arr.sort()"
    }
  ]
}