{
  "timestamp": "2025-09-14T13:40:42.433667",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 165,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    perim = (a+b+c)/2\n    return perim\n\n\nprint(perimeter(3, 4, 5))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c)/2\n\nprint(perimeter(1, 2, 3))\nprint(perimeter(1, 2, 4))\nprint(perimeter(2, 4, 6))\nprint(perimeter(2, 3, 4))\nprint(perimeter(2, 4, 6))\nprint(perimeter(2, 3, 5))\nprint(perimeter(2, 3, 5))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\nprint(triangle_perimeter(3, 2, 4))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    perimeter = a + b + c\n    return perimeter\n\nprint(perimeter(3, 5, 6))\nprint(perimeter(3, 4, 5))\nprint(perimeter(2, 3, 4))\nprint(perimeter(3, 5, 2))\nprint(perimeter(3, 4, 2))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(triangle_perimeter(3, 4, 6))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(3, 4, 5))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n\t# your code here\n\treturn (a + b + c) / 2\n\nprint(triangle_perimeter(2, 4, 6))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(2, 3, 4))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    perimeter = a + b + c\n    return perimeter\n\nprint(perimeter(10, 8, 12))\nprint(perimeter(2, 3, 5))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\nprint(perimeter(2, 3, 5))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def find_perimeter(a, b):\n    return a + b\n\n\nprint(find_perimeter(4, 8))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(perimeter(3, 4, 5))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def perimeter(a, b):\n    return a * 2 + b * 2\n\n\ndef main():\n    print(perimeter(2, 3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_perimeter(2, 2, 2))\nprint(triangle_perimeter(2, 3, 3))\nprint(triangle_perimeter(3, 4, 5))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(1, 2, 3))\nprint(perimeter(3, 4, 5))\nprint(perimeter(5, 6, 7))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def perimeter(a,b,c):\n    return a+b+c\n\nprint(perimeter(3,4,5))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(perimeter(1, 1, 1))\nprint(perimeter(2, 2, 3))\nprint(perimeter(5, 3, 4))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\ndef main():\n    print(perimeter(3, 4, 5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(perimeter(5, 4, 8))\nprint(perimeter(3, 5, 7))\nprint(perimeter(5, 3, 8))\nprint(perimeter(8, 4, 5))\nprint(perimeter(8, 5, 7))\nprint(perimeter(4, 5, 7))\nprint(perimeter(4, 5, 8))\nprint(perimeter(4, 5, 6))\nprint(perimeter(4, 5, 5))\nprint(perimeter(4, 5, 4))\nprint(perimeter(4, 5, 3))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def find_perimeter(a, b, c):\n    return a + b + c\n\nprint(find_perimeter(3, 4, 5))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\nprint(perimeter(5, 3, 6))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    perimeter = a + b + c\n    return perimeter\n\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return 2 * (a + b + c)\n\nprint(perimeter(3, 6, 9))\nprint(perimeter(2, 5, 6))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(triangle_perimeter(2, 4, 6))"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    perimeter = (a + b + c) / 2\n    return perimeter\n\nprint(perimeter(2, 2, 2))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\n\nprint(triangle_perimeter(10, 20, 30))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def perimeter(a, b):\n    return (a + b) * 2\n\nif __name__ == \"__main__\":\n    print(perimeter(5, 6))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a,b,c):\n    perimeter = a + b + c\n    return perimeter\n\n\na = int(input(\"Enter a value: \"))\nb = int(input(\"Enter b value: \"))\nc = int(input(\"Enter c value: \"))\nprint(\"The perimeter of a triangle is: \",triangle_perimeter(a,b,c))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_perimeter(1, 2, 3))\nprint(triangle_perimeter(1, 2, 1))\nprint(triangle_perimeter(1, 2, 4))\nprint(triangle_perimeter(2, 2, 1))\nprint(triangle_perimeter(2, 2, 4))"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def find_perimeter(a, b):\n    perimeter = (a + b) * 2\n    return perimeter\n\nprint(find_perimeter(3, 4))"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return 2 * (a + b + c)"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\n\nprint(perimeter(2, 2, 2))"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "def perimeter(a, b):\n    perimeter = a + b\n    return perimeter\n\n\nprint(perimeter(3, 4))"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def triangle(a, b, c):\n    perimeter = (a + b + c) / 2\n    return perimeter\n\nprint(triangle(3, 5, 7))"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    perimeter = a + b + c\n    return perimeter\n\n\nprint(perimeter(2, 3, 4))"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n\tperimeter = a + b + c\n\treturn perimeter\n\nprint(perimeter(10, 20, 30))"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\nprint(triangle_perimeter(5, 5, 5))"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    if a + b == c:\n        return a\n    else:\n        return b\n\nprint(perimeter(2, 3, 4))\nprint(perimeter(3, 4, 5))\nprint(perimeter(2, 4, 6))"
    },
    {
      "rank": 40,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) * 0.5\n\n\nprint(perimeter(5, 6, 7))\nprint(perimeter(5, 6, 8))\nprint(perimeter(6, 4, 3))\nprint(perimeter(4, 5, 2))\nprint(perimeter(4, 5, 7))\nprint(perimeter(4, 5, 10))"
    },
    {
      "rank": 41,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(perimeter(1, 1, 1))\nprint(perimeter(2, 2, 2))\nprint(perimeter(3, 2, 2))"
    },
    {
      "rank": 42,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\na = int(input())\nb = int(input())\nc = int(input())\nprint(perimeter(a, b, c))"
    },
    {
      "rank": 43,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 44,
      "score": 10.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\n\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def perimeter(a, b):\n    return a + b\n\nprint(perimeter(1, 2))\nprint(perimeter(1, 3))\nprint(perimeter(2, 3))\nprint(perimeter(3, 3))\nprint(perimeter(3, 2))\nprint(perimeter(2, 4))\nprint(perimeter(4, 3))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return 2 * (a + b + c)\n\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_perimeter(1, 2, 3))\nprint(triangle_perimeter(2, 3, 1))\nprint(triangle_perimeter(3, 2, 1))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def triangle_perimeter(length):\n    return length * 2\n\n\nprint(triangle_perimeter(5))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "import math\n\ndef perimeter(a, b, c):\n    a = float(a)\n    b = float(b)\n    c = float(c)\n\n    if a > b + c:\n        raise ValueError(\"a must be less than b + c\")\n\n    perimeter = (a + b + c) / 2\n\n    return perimeter\n\n\nprint(perimeter(5, 6, 7))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(2, 2, 3))\nprint(perimeter(2, 2, 4))\nprint(perimeter(2, 1, 2))\nprint(perimeter(1, 2, 2))\nprint(perimeter(3, 2, 2))\nprint(perimeter(3, 3, 2))\nprint(perimeter(3, 2, 1))\nprint(perimeter(2, 3, 3))\nprint(perimeter(2, 2, 4))\nprint(perimeter(3, 4, 2))\nprint(perimeter(2, 2, 4))\nprint(perimeter(3, 4, 2))\nprint(perimeter(3, 3, 4))\nprint(perimeter(2, 3, 2))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(triangle_perimeter(2, 3, 4))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\n\nprint(triangle_perimeter(1, 2, 3))\nprint(triangle_perimeter(1, 2, 4))\nprint(triangle_perimeter(1, 2, 5))\nprint(triangle_perimeter(2, 4, 6))\nprint(triangle_perimeter(3, 4, 7))\nprint(triangle_perimeter(4, 4, 9))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\nprint(triangle_perimeter(1, 2, 3))\nprint(triangle_perimeter(1, 2, 4))\nprint(triangle_perimeter(1, 2, 5))\nprint(triangle_perimeter(1, 2, 6))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\nprint(perimeter(5, 2, 6))\nprint(perimeter(5, 4, 6))\nprint(perimeter(5, 3, 2))\nprint(perimeter(5, 2, 3))\nprint(perimeter(4, 2, 5))\nprint(perimeter(4, 3, 2))\nprint(perimeter(4, 3, 5))\nprint(perimeter(4, 3, 4))\nprint(perimeter(4, 3, 6))\nprint(perimeter(3, 3, 6))\nprint(perimeter(3, 2, 2))\nprint(perimeter(3, 4, 2))\nprint(perimeter(3, 3, 2))\nprint(perimeter(3, 3, 4))\nprint(perimeter(3, 3, 6))\nprint(perimeter(3, 2, 4))\nprint(perimeter(3, 2, 6))\nprint(perimeter(3, 4, 4))\nprint(perimeter(3, 4, 6))\nprint(perimeter(3, 6, 4))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))\nprint(perimeter(3, 6, 6))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return 2 * (a + b + c)\n\na = int(input(\"Enter a value: \"))\nb = int(input(\"Enter b value: \"))\nc = int(input(\"Enter c value: \"))\n\nprint(\"The perimeter is:\", triangle_perimeter(a, b, c))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a,b,c):\n    perimeter = (a+b+c)/2\n    return perimeter\n\nprint(triangle_perimeter(2,2,2))\nprint(triangle_perimeter(3,3,3))\nprint(triangle_perimeter(4,4,4))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    # your code here\n    perimeter = 2 * (a + b + c)\n    return perimeter\n\n\nprint(perimeter(2, 3, 4))\nprint(perimeter(3, 4, 2))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_perimeter(2, 2, 2))\nprint(triangle_perimeter(1, 1, 1))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_perimeter(1, 2, 3))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a+b+c\n\n\nprint(triangle_perimeter(3, 5, 5))\nprint(triangle_perimeter(2, 3, 5))\nprint(triangle_perimeter(3, 3, 5))\nprint(triangle_perimeter(3, 3, 3))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def triangle(a, b, c):\n    return a + b + c\n\nprint(triangle(1, 2, 3))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\nprint(triangle_perimeter(4, 6, 8))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(10, 10, 10))\nprint(perimeter(10, 10, 15))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def perimeter(a,b,c):\n    return (a+b+c)/2\n\nprint(perimeter(4,4,4))\nprint(perimeter(1,1,1))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    perimeter = a + b + c\n    return perimeter\n\nprint(perimeter(1, 2, 3))\nprint(perimeter(1, 3, 2))\nprint(perimeter(3, 1, 2))\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\nprint(perimeter(2, 3, 4))\nprint(perimeter(4, 4, 4))\nprint(perimeter(1, 1, 1))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(triangle_perimeter(1, 2, 3))\nprint(triangle_perimeter(2, 3, 4))\nprint(triangle_perimeter(3, 4, 5))\nprint(triangle_perimeter(4, 5, 6))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\n\nprint(triangle_perimeter(3, 5, 6))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\nprint(triangle_perimeter(2, 2, 2))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nif __name__ == '__main__':\n    a = float(input(\"Enter the first side: \"))\n    b = float(input(\"Enter the second side: \"))\n    c = float(input(\"Enter the third side: \"))\n    print(\"The perimeter of a triangle is: \", perimeter(a, b, c))\n\n\n\"\"\"\nTime Complexity: O(n)\nSpace Complexity: O(n)\n\"\"\""
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(1, 2, 3))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def find_perimeter(a, b, c):\n    \"\"\"\n    Finds the perimeter of a triangle.\n    :param a:\n    :param b:\n    :param c:\n    :return:\n    \"\"\"\n    return (a + b + c) / 2\n\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    print(find_perimeter(10, 5, 10))\n    print(find_perimeter(10, 6, 5))\n    print(find_perimeter(10, 7, 5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def find_perimeter(a, b, c):\n    if (a + b + c) > 2:\n        raise Exception(\"Triangle is not valid\")\n    perimeter = (a + b + c) / 2\n    return perimeter\n\n\ndef main():\n    a = int(input(\"Enter a value for a: \"))\n    b = int(input(\"Enter a value for b: \"))\n    c = int(input(\"Enter a value for c: \"))\n    print(f\"Perimeter is {find_perimeter(a, b, c)}\")\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\n\nprint(perimeter(1, 2, 3))\nprint(perimeter(1, 2, 4))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\nprint(triangle_perimeter(2, 2, 2))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def triangle(a,b,c):\n    return a + b + c\n\nprint(triangle(1,2,3))\nprint(triangle(2,2,2))\nprint(triangle(3,3,3))\nprint(triangle(3,2,3))\nprint(triangle(4,5,6))\nprint(triangle(4,2,2))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def perimeter(a, b):\n    return (a + b) / 2\n\nprint(perimeter(3, 4))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def find_perimeter(a, b):\n    return (a + b) / 2\n\nprint(find_perimeter(3, 4))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def find_perimeter(a,b,c):\n    if a+b>c:\n        print(\"No perimeter\")\n    elif a+c>b:\n        print(\"No perimeter\")\n    elif b+c>a:\n        print(\"No perimeter\")\n    else:\n        print(\"No perimeter\")\n\nfind_perimeter(5,6,7)"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\n\nprint(perimeter(3, 5, 7))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\n\nprint(triangle_perimeter(2, 2, 3))\nprint(triangle_perimeter(5, 2, 3))\nprint(triangle_perimeter(4, 3, 2))\nprint(triangle_perimeter(5, 2, 4))\nprint(triangle_perimeter(3, 4, 4))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    if a == 0:\n        return 0\n    elif b == 0:\n        return 0\n    elif c == 0:\n        return 0\n    else:\n        return (a + b + c) / 2"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def perimeter(a, b):\n    perimeter = (a + b) / 2\n    return perimeter\n\nprint(perimeter(1, 2))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def perimeter(a,b,c):\n\treturn 2*(a+b+c)\n\nprint(perimeter(1,2,3))\nprint(perimeter(2,3,4))\nprint(perimeter(4,3,2))\nprint(perimeter(2,4,3))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "import math\n\n\ndef triangle_perimeter(a, b, c):\n    perimeter = math.sqrt(a ** 2 + b ** 2 + c ** 2)\n    return perimeter\n\n\nprint(triangle_perimeter(10, 10, 10))\nprint(triangle_perimeter(5, 5, 5))\nprint(triangle_perimeter(10, 10, 5))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def perimeter(a, b):\n    return (a + b) * 2\n\n\nprint(perimeter(1, 1))\nprint(perimeter(2, 2))\nprint(perimeter(3, 4))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\n\nif __name__ == \"__main__\":\n    print(perimeter(3, 5, 7))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\nprint(triangle_perimeter(1, 2, 3))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def perimeter(a, b, c):\n    return a + b + c\n\nif __name__ == \"__main__\":\n    print(perimeter(1, 2, 3))\n    print(perimeter(2, 1, 3))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def perimeter(r):\n    return 3.14 * r\n\n\nprint(perimeter(5))\nprint(perimeter(7))\nprint(perimeter(9))"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\n\nprint(triangle_perimeter(1, 2, 3))\nprint(triangle_perimeter(2, 1, 3))\nprint(triangle_perimeter(1, 1, 2))\nprint(triangle_perimeter(1, 2, 3))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :type c: int\n    :rtype: int\n    \"\"\"\n    return a + b + c"
    },
    {
      "rank": 95,
      "score": 7.0,
      "candidate": "import math\n\ndef triangle_perimeter(a,b,c):\n    return a*b*c\n\nprint(triangle_perimeter(1,3,5))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return (a + b + c) / 2\n\n\n\nprint(triangle_perimeter(4, 6, 7))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    return a + b + c\n\n\nif __name__ == \"__main__\":\n    print(triangle_perimeter(10, 5, 5))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    # Write your code here\n    return (a + b + c) / 2\n\nprint(triangle_perimeter(3, 4, 5))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def triangle_perimeter(a, b, c):\n    # your code here\n    return (a + b + c) / 2\n\nprint(triangle_perimeter(5, 5, 5))\nprint(triangle_perimeter(4, 4, 4))\nprint(triangle_perimeter(4, 4, 5))\nprint(triangle_perimeter(4, 4, 7))\nprint(triangle_perimeter(4, 5, 7))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def perimeter(a, b, c):\n    return (a + b + c) / 2\n\nprint(perimeter(1, 1, 1))\nprint(perimeter(1, 2, 1))\nprint(perimeter(2, 1, 1))\nprint(perimeter(2, 2, 1))\nprint(perimeter(2, 3, 1))\nprint(perimeter(3, 3, 1))\nprint(perimeter(3, 4, 1))\nprint(perimeter(4, 4, 1))\nprint(perimeter(4, 5, 1))\nprint(perimeter(5, 5, 1))\nprint(perimeter(5, 6, 1))\nprint(perimeter(6, 6, 1))\nprint(perimeter(6, 7, 1))\nprint(perimeter(7, 7, 1))\nprint(perimeter(7, 8, 1))\nprint(perimeter(8, 8, 1))\nprint(perimeter(8, 9, 1))\nprint(perimeter(9, 9, 1))\nprint(perimeter(9, 10, 1))\nprint(perimeter(10, 10, 1))"
    }
  ]
}