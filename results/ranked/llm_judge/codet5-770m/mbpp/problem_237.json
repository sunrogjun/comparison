{
  "timestamp": "2025-09-14T14:12:30.476617",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 237,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    # Write your code here\n    return (n+1)**2\n\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(5))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n**2 - 1"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**2\n    return sum\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n):\n        sum += 1/i\n    return sum\n\n\nprint(harmonic_sum(3))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n**2 + n + 1"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n\n    return 1 + harmonic_sum(n - 1)\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 0\n    else:\n        return n * harmonic_sum(n - 1)\n\n\nprint(harmonic_sum(3))\nprint(harmonic_sum(5))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return (n + 1) * (n - 1) / 2\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(2))\n    print(harmonic_sum(3))\n    print(harmonic_sum(4))\n    print(harmonic_sum(5))\n    print(harmonic_sum(6))\n    print(harmonic_sum(7))\n    print(harmonic_sum(8))\n    print(harmonic_sum(9))\n    print(harmonic_sum(10))\n    print(harmonic_sum(11))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\nprint(harmonic_sum(6))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    if n <= 1:\n        return n\n    return harmonic_sum(n-1) + harmonic_sum(n-2) + harmonic_sum(n-3)\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n):\n        sum += i\n    return sum\n\n\nn = int(input(\"Enter a number: \"))\nprint(harmonic_sum(n))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return ((n-1)*(n+1))//2\n\n\nprint(harmonic_sum(3))\nprint(harmonic_sum(5))\nprint(harmonic_sum(7))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 0\n    else:\n        return (n-1) * harmonic_sum(n-1)"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return (n*n-1)//2"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def harmonic(n):\n    if n == 1:\n        return 1\n    else:\n        return n * harmonic(n-1)\n\nprint(harmonic(5))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return (n * (n + 1)) / 2\n\n\nprint(harmonic_sum(5))\nprint(harmonic_sum(10))\nprint(harmonic_sum(100))\nprint(harmonic_sum(1000))\nprint(harmonic_sum(10000))\nprint(harmonic_sum(1000000))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return (n**2 + n)//2\n\n\nprint(harmonic_sum(4))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\n\nprint(harmonic_sum(1))\nprint(harmonic_sum(2))\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))\nprint(harmonic_sum(6))\nprint(harmonic_sum(7))\nprint(harmonic_sum(8))\nprint(harmonic_sum(9))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 1\n    return n * harmonic_sum(n-1)\n\nprint(harmonic_sum(4))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(5))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return (2*n-1)**2\n\n\nprint(harmonic_sum(1))\nprint(harmonic_sum(2))\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))\nprint(harmonic_sum(6))\nprint(harmonic_sum(7))\nprint(harmonic_sum(8))\nprint(harmonic_sum(9))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return ((n * (n + 1)) / 2)\n\n\nprint(harmonic_sum(2))\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))\nprint(harmonic_sum(6))\nprint(harmonic_sum(7))\nprint(harmonic_sum(8))\nprint(harmonic_sum(9))"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return ((1 + (1 / n)) / 2) ** n\n\n\nprint(harmonic_sum(1))\nprint(harmonic_sum(2))\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))\nprint(harmonic_sum(6))\nprint(harmonic_sum(7))\nprint(harmonic_sum(8))\nprint(harmonic_sum(9))\nprint(harmonic_sum(10))\nprint(harmonic_sum(11))\nprint(harmonic_sum(12))\nprint(harmonic_sum(13))\nprint(harmonic_sum(14))\nprint(harmonic_sum(15))\nprint(harmonic_sum(16))\nprint(harmonic_sum(17))\nprint(harmonic_sum(18))\nprint(harmonic_sum(19))\nprint(harmonic_sum(20))\nprint(harmonic_sum(21))\nprint(harmonic_sum(22))\nprint(harmonic_sum(23))\nprint(harmonic_sum(24))\nprint(harmonic_sum(25))\nprint(harmonic_sum(26))\nprint(harmonic_sum(27))\nprint(harmonic_sum(28))\nprint(harmonic_sum(29))\nprint(harmonic_sum(30))\nprint(harmonic_sum(31))\nprint(harmonic_sum(32))\nprint(harmonic_sum(33))\nprint(harmonic_sum(34))\nprint(harmonic_sum(35))\nprint(harmonic_sum(36))\nprint(harmonic_sum(37))\nprint(harmonic_sum(38))\nprint(harmonic_sum(39))\nprint(harmonic_sum(40))\nprint(harmonic_sum(41))\nprint(harmonic_sum(42))\nprint(harmonic_sum(43))\nprint(harmonic_sum("
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return n*n + 1\n\ndef main():\n    n = int(input(\"Enter the value of n: \"))\n    print(harmonic_sum(n))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def harmonic(n):\n    return (1 + n)**2\n\nprint(harmonic(2))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def harmonic(n):\n    if n == 0:\n        return 0\n    else:\n        return 1 + harmonic(n-1)\n\ndef main():\n    n = int(input(\"Enter the number of elements: \"))\n    print(\"Harmonic sum of n-1 is\", harmonic(n))\n\nmain()"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(1,n+1):\n        harmonic_sum += (2*i)\n    return harmonic_sum\n\n\nprint(harmonic_sum(4))"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    return (1 + (n - 1) ** 2) * (1 + (n - 2) ** 2) * (1 + (n - 3) ** 2) * (1 + (n - 4) ** 2) * (1 + (n - 5) ** 2) * (1 + (n - 6) ** 2) * (1 + (n - 7) ** 2) * (1 + (n - 8) ** 2) * (1 + (n - 9) ** 2) * (1 + (n - 10) ** 2)"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def harmonic_sum(n):\n    # write your code here\n    if n == 1:\n        return 1\n    else:\n        return n*harmonic_sum(n-1)\n\n\ndef main():\n    print(harmonic_sum(4))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 32,
      "score": 9.0,
      "candidate": "def harmonic_sum(n):\n    return n*(n+1)/2\n\nn = int(input())\nprint(harmonic_sum(n))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    if n == 1:\n        return 1\n    for i in range(2, n + 1):\n        harmonic_sum += i\n    return harmonic_sum\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(0))\n    print(harmonic_sum(1))\n    print(harmonic_sum(2))\n    print(harmonic_sum(3))\n    print(harmonic_sum(4))\n    print(harmonic_sum(5))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\ndef main():\n    print(harmonic_sum(5))\n    print(harmonic_sum(6))\n    print(harmonic_sum(10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n * (n + 1)) / 2\n\nn = int(input())\nprint(harmonic_sum(n))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return sum(range(1, n+1))\n\n\nprint(harmonic_sum(10))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n*n-1)*(2*n+1)//6\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(1))\n    print(harmonic_sum(2))\n    print(harmonic_sum(3))\n    print(harmonic_sum(4))\n    print(harmonic_sum(5))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 0\n    else:\n        return n * harmonic_sum(n-1)\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(9))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n*((n+1)*(2*n+1))/6\n\nprint(harmonic_sum(7))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(n):\n        harmonic_sum += 1\n    return harmonic_sum\n\n\nif __name__ == \"__main__\":\n    assert harmonic_sum(3) == 3\n    assert harmonic_sum(4) == 6\n    assert harmonic_sum(5) == 12\n    assert harmonic_sum(6) == 24\n    assert harmonic_sum(7) == 36"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 1\n    else:\n        return n * harmonic_sum(n-1)\n\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n < 1:\n        return 0\n\n    return (n - 1) * (n - 2) * (n - 3) * (n - 4)\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    # Write your code here\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nn = int(input(\"Enter the number of terms: \"))\nprint(\"The harmonic sum of {} terms is {}\".format(n, harmonic_sum(n)))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n*(n-1)/2\n\nn = int(input())\nprint(harmonic_sum(n))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n**2 - 2*n + 1\n\ndef main():\n    print(harmonic_sum(5))\n    print(harmonic_sum(9))\n    print(harmonic_sum(6))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n    return n * harmonic_sum(n - 1)\n\n\ndef main():\n    print(harmonic_sum(10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(100))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n    return (n * (n + 1)) // 2\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(3))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 0\n    return n * (harmonic_sum(n-1) + 1)\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    # n = int(input(\"Enter a number: \"))\n    # return sum([i for i in range(1, n+1)])\n    return sum([i for i in range(1, n) if i % 2 == 0])\n\n\nprint(harmonic_sum(6))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n + 1) * (n + 2) // 2\n\n\nprint(harmonic_sum(4))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(1, n+1):\n        harmonic_sum += i\n    return harmonic_sum\n\nprint(harmonic_sum(10))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    # write your code in Python 3.6\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(5))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return ((1 + n)**(n-1))/2\n\nprint(harmonic_sum(10))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def harmonic_sum(n: int) -> int:\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    return n * (n - 1) * harmonic_sum(n - 1)\n\n\nprint(harmonic_sum(3))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 1\n    else:\n        return n*harmonic_sum(n-1)\n\n\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))\nprint(harmonic_sum(10))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n    return n * harmonic_sum(n - 1)\n\nn = int(input(\"Enter a number: \"))\nprint(harmonic_sum(n))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n):\n        sum += i\n    return sum\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n    return 1 / (n - 1) * harmonic_sum(n - 2) + (1 / n) * harmonic_sum(n - 3)\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    while n > 1:\n        harmonic_sum += n\n        n -= 1\n    return harmonic_sum\n\n\nprint(harmonic_sum(2))\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n*2 + 1\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(10))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(1, n+1):\n        harmonic_sum += i\n    return harmonic_sum\n\nprint(harmonic_sum(100))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\n\nprint(harmonic_sum(1))\nprint(harmonic_sum(2))\nprint(harmonic_sum(3))\nprint(harmonic_sum(4))\nprint(harmonic_sum(5))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (1 + n) * (1 - n) / 2\n\nprint(harmonic_sum(5))\nprint(harmonic_sum(8))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\nprint(harmonic_sum(2))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(100))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n==0:\n        return 0\n    elif n==1:\n        return 1\n    else:\n        return n*harmonic_sum(n-1)"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 0\n    return n * (n - 1) / 2\n\n\n\nif __name__ == \"__main__\":\n    assert harmonic_sum(2) == 1\n    assert harmonic_sum(3) == 2\n    assert harmonic_sum(4) == 6\n    assert harmonic_sum(5) == 24\n    assert harmonic_sum(6) == 36\n    assert harmonic_sum(7) == 64\n    assert harmonic_sum(8) == 81\n    assert harmonic_sum(9) == 100"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n*(n+1)/2"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum_of_n = 0\n\n    for i in range(1, n + 1):\n        sum_of_n += i\n\n    return sum_of_n\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n*n-1) // 2"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n - 1) * (n - 2) * (n - 3) / 6\n\n\nprint(harmonic_sum(6))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (1 + n)**2\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(\"The harmonic sum of n-1 is {}\".format(harmonic_sum(n)))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(1, n + 1):\n        harmonic_sum += i\n    return harmonic_sum\n\n\nprint(harmonic_sum(2))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 1:\n        return 1\n    else:\n        return (n - 1) * harmonic_sum(n - 1)\n\n\nn = int(input(\"Enter the number: \"))\nprint(harmonic_sum(n))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(1, n):\n        harmonic_sum += i\n    return harmonic_sum\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i\n    return sum\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def harmonic(n):\n    return (n*(n-1))/2\n\ndef harmonic_sum(n):\n    return harmonic(n) + harmonic_sum(n-1)\n\nprint(harmonic(1))\nprint(harmonic(2))\nprint(harmonic_sum(1))\nprint(harmonic_sum(2))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def harmonic_sum(n: int) -> int:\n    return (2 * n + 1) / 2\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return n * harmonic_sum(n - 1)\n\n\nprint(harmonic_sum(3))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return n*n - 1\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n + 1) * (n + 2) / 3\n\n\nn = int(input())\nprint(harmonic_sum(n))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n**2 - 1) / 2\n\nprint(harmonic_sum(7))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    harmonic_sum = 0\n    for i in range(1, n+1):\n        harmonic_sum += i**2\n    return harmonic_sum\n\nprint(harmonic_sum(10))\nprint(harmonic_sum(100))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def harmonic_sum(n):\n    return (n * (n + 1)) / 2\n\n\nif __name__ == '__main__':\n    print(harmonic_sum(4))\n    print(harmonic_sum(5))"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\n\ndef harmonic_sum_2(n):\n    return n * (n + 1) / 2 + (n + 2) / 6\n\n\ndef harmonic_sum_3(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6\n\n\ndef harmonic_sum_4(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6 + (n + 4) / 8\n\n\ndef harmonic_sum_5(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6 + (n + 4) / 8 + (n + 5) / 12\n\n\ndef harmonic_sum_6(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6 + (n + 4) / 8 + (n + 5) / 12 + (n + 6) / 24\n\n\ndef harmonic_sum_7(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6 + (n + 4) / 8 + (n + 5) / 12 + (n + 6) / 24 + (n + 7) / 36\n\n\ndef harmonic_sum_8(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6 + (n + 4) / 8 + (n + 5) / 12 + (n + 6) / 24 + (n + 7) / 36 + (n + 8) / 48\n\n\ndef harmonic_sum_9(n):\n    return n * (n + 1) / 2 + (n + 2) / 4 + (n + 3) / 6 + (n + 4) / 8 + (n + 5) / 12 + (n + 6) / 24 + (n + 7) / 36 + (n + 8) /"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 0\n    return 1 + harmonic_sum(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(2))\n    print(harmonic_sum(3))\n    print(harmonic_sum(5))\n    print(harmonic_sum(7))\n    print(harmonic_sum(11))\n    print(harmonic_sum(15))"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    sum = 0\n    if n == 1:\n        return 1\n    for i in range(n):\n        sum += harmonic_sum(n - 1)\n    return sum\n\n\nprint(harmonic_sum(3))\nprint(harmonic_sum(5))\nprint(harmonic_sum(8))"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    # Write your code here\n    return n*(n+1)/2\n\n\nprint(harmonic_sum(5))\nprint(harmonic_sum(7))\nprint(harmonic_sum(8))\nprint(harmonic_sum(12))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    return n*(n+1)//2\n\n\ndef harmonic_sum_2(n):\n    return (n*(n+1))//2\n\n\ndef harmonic_sum_3(n):\n    return (n*(n+1))//3\n\n\ndef harmonic_sum_4(n):\n    return (n*(n+1))//4\n\n\ndef harmonic_sum_5(n):\n    return (n*(n+1))//5\n\n\ndef harmonic_sum_6(n):\n    return (n*(n+1))//6\n\n\ndef harmonic_sum_7(n):\n    return (n*(n+1))//7\n\n\ndef harmonic_sum_8(n):\n    return (n*(n+1))//8\n\n\ndef harmonic_sum_9(n):\n    return (n*(n+1))//9\n\n\ndef harmonic_sum_10(n):\n    return (n*(n+1))//10\n\n\ndef harmonic_sum_11(n):\n    return (n*(n+1))//11\n\n\ndef harmonic_sum_12(n):\n    return (n*(n+1))//12\n\n\ndef harmonic_sum_13(n):\n    return (n*(n+1))//13\n\n\ndef harmonic_sum_14(n):\n    return (n*(n+1))//14\n\n\ndef harmonic_sum_15(n):\n    return (n*(n+1))//15\n\n\ndef harmonic_sum_16(n):\n    return (n*(n+1))//16\n\n\ndef harmonic_sum_17(n):\n    return (n*(n+1))//17\n\n\ndef harmonic_sum_18(n):\n    return (n*(n+1))//18\n\n\ndef harmonic_sum_19(n):\n    return (n*(n+1))//19\n\n\ndef harmonic_sum_20(n):\n    return (n*(n"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\ndef harmonic_sum_2(n):\n    return (n * (n + 1)) / 2\n\n\ndef harmonic_sum_3(n):\n    return (n * (n + 1) / 2) / 3\n\n\ndef harmonic_sum_4(n):\n    return (n * (n + 1) / 2) / 4\n\n\ndef harmonic_sum_5(n):\n    return (n * (n + 1) / 2) / 5\n\n\ndef harmonic_sum_6(n):\n    return (n * (n + 1) / 2) / 6\n\n\ndef harmonic_sum_7(n):\n    return (n * (n + 1) / 2) / 7\n\n\ndef harmonic_sum_8(n):\n    return (n * (n + 1) / 2) / 8\n\n\ndef harmonic_sum_9(n):\n    return (n * (n + 1) / 2) / 9\n\n\ndef harmonic_sum_10(n):\n    return (n * (n + 1) / 2) / 10\n\n\ndef harmonic_sum_11(n):\n    return (n * (n + 1) / 2) / 11\n\n\ndef harmonic_sum_12(n):\n    return (n * (n + 1) / 2) / 12\n\n\ndef harmonic_sum_13(n):\n    return (n * (n + 1) / 2) / 13\n\n\ndef harmonic_sum_14(n):\n    return (n * (n + 1) / 2) / 14\n\n\ndef harmonic_sum_15(n):\n    return (n * (n + 1) / 2) / 15\n\n\ndef harmonic_sum_16(n):\n    return (n * (n + 1) / 2) / 16\n\n\ndef harmonic_sum_17(n):\n    return (n * (n + 1) / 2) / 17\n\n\ndef harmonic_sum_18("
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n - 1) * (2 * n + 1) / 6\n\n\ndef harmonic_sum_2(n):\n    return n * (n - 1) * (2 * n + 1) / 3\n\n\ndef harmonic_sum_3(n):\n    return n * (n - 1) * (2 * n + 2) / 5\n\n\ndef harmonic_sum_4(n):\n    return n * (n - 1) * (2 * n + 3) / 7\n\n\ndef harmonic_sum_5(n):\n    return n * (n - 1) * (2 * n + 4) / 9\n\n\ndef harmonic_sum_6(n):\n    return n * (n - 1) * (2 * n + 5) / 12\n\n\ndef harmonic_sum_7(n):\n    return n * (n - 1) * (2 * n + 6) / 18\n\n\ndef harmonic_sum_8(n):\n    return n * (n - 1) * (2 * n + 7) / 24\n\n\ndef harmonic_sum_9(n):\n    return n * (n - 1) * (2 * n + 8) / 36\n\n\ndef harmonic_sum_10(n):\n    return n * (n - 1) * (2 * n + 9) / 48\n\n\ndef harmonic_sum_11(n):\n    return n * (n - 1) * (2 * n + 11) / 64\n\n\ndef harmonic_sum_12(n):\n    return n * (n - 1) * (2 * n + 12) / 72\n\n\ndef harmonic_sum_13(n):\n    return n * (n - 1) * (2 * n + 13) / 72\n\n\ndef harmonic_sum_14(n):\n    return n * (n - 1) * (2 * n + 14) / 72\n\n\ndef harmonic_sum_15(n):\n    return n * (n - 1) * (2 * n + 15) / 72"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def harmonic_sum(n: int) -> int:\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    return n * (harmonic_sum(n - 1) + 1)\n\n\ndef main() -> None:\n    n = int(input())\n    print(harmonic_sum(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    if n < 2:\n        return n\n    return n * (n - 1) / 2\n\n\ndef test_function():\n    assert harmonic_sum(2) == 1\n    assert harmonic_sum(4) == 1\n    assert harmonic_sum(5) == 2\n    assert harmonic_sum(6) == 6\n    assert harmonic_sum(7) == 12\n    assert harmonic_sum(8) == 24\n    assert harmonic_sum(9) == 36\n    assert harmonic_sum(10) == 48\n    assert harmonic_sum(11) == 72\n    assert harmonic_sum(12) == 90\n    assert harmonic_sum(13) == 120\n    assert harmonic_sum(14) == 144\n    assert harmonic_sum(15) == 160\n    assert harmonic_sum(16) == 220\n    assert harmonic_sum(17) == 288\n    assert harmonic_sum(18) == 320\n    assert harmonic_sum(19) == 388\n    assert harmonic_sum(20) == 420\n    assert harmonic_sum(21) == 488\n    assert harmonic_sum(22) == 520\n    assert harmonic_sum(23) == 588\n    assert harmonic_sum(24) == 620\n    assert harmonic_sum(25) == 688\n    assert harmonic_sum(26) == 720\n    assert harmonic_sum(27) == 788\n    assert harmonic_sum(28) == 820\n    assert harmonic_sum(29) == 888\n    assert harmonic_sum(30) == 920\n    assert harmonic_sum(31) == 988\n    assert harmonic_sum(32) == 1020\n    assert harmonic_sum(33) == 1088\n    assert harmonic_sum(34) == 1120\n    assert harmonic_sum(35) == 1188\n    assert harmonic_sum(36) == 1220\n    assert harmon"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    # Write your code here\n    return n * (n - 1) / 2\n\n\nprint(harmonic_sum(5))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n + 1) / 2\n\n\ndef harmonic_sum_2(n):\n    return (n * (n + 1) / 2) ** 2\n\n\ndef harmonic_sum_3(n):\n    return n * (n + 1) / 4\n\n\ndef harmonic_sum_4(n):\n    return (n * (n + 1) / 8) ** 3\n\n\ndef harmonic_sum_5(n):\n    return (n * (n + 1) / 16) ** 4\n\n\ndef harmonic_sum_6(n):\n    return (n * (n + 1) / 32) ** 5\n\n\ndef harmonic_sum_7(n):\n    return (n * (n + 1) / 64) ** 6\n\n\ndef harmonic_sum_8(n):\n    return (n * (n + 1) / 128) ** 7\n\n\ndef harmonic_sum_9(n):\n    return (n * (n + 1) / 256) ** 8"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    return n * harmonic_sum(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(0))\n    print(harmonic_sum(1))\n    print(harmonic_sum(2))\n    print(harmonic_sum(3))\n    print(harmonic_sum(4))\n    print(harmonic_sum(5))\n    print(harmonic_sum(6))\n    print(harmonic_sum(7))\n    print(harmonic_sum(8))\n    print(harmonic_sum(9))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def harmonic_sum(n: int) -> int:\n    return n ** 2 + 2 * n + 1\n\n\nif __name__ == \"__main__\":\n    print(harmonic_sum(5))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def harmonic_sum(n):\n    return n * (n - 1) / 2\n\n\nif __name__ == '__main__':\n    assert harmonic_sum(1) == 1\n    assert harmonic_sum(2) == 3\n    assert harmonic_sum(3) == 6\n    assert harmonic_sum(4) == 9\n    assert harmonic_sum(5) == 24\n    assert harmonic_sum(6) == 36\n    assert harmonic_sum(7) == 49\n    assert harmonic_sum(8) == 64\n    assert harmonic_sum(9) == 84\n    assert harmonic_sum(10) == 96"
    }
  ]
}