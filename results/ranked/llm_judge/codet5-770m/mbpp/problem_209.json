{
  "timestamp": "2025-09-14T14:00:04.884280",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 209,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def replace_max_spaces(text, max_spaces):\n    new_text = []\n    for char in text:\n        if char == \" \":\n            new_text.append(\":\")\n        elif char == \",\":\n            new_text.append(\",\")\n        elif char == \".\":\n            new_text.append(\".\")\n    return \"\".join(new_text)\n\n\nif __name__ == \"__main__\":\n    text = \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\"\n    max_spaces = 4\n    print(replace_max_spaces(text, max_spaces))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def replace_max_spaces_and_commas_and_dots(string):\n    max_spaces = max_commas = max_dots = 0\n    for char in string:\n        if char == \" \":\n            max_spaces += 1\n        elif char == \",\":\n            max_commas += 1\n        elif char == \".\":\n            max_dots += 1\n    return string[:max_spaces] + \":\" + string[max_spaces:max_commas] + \":\" + string[max_commas:max_dots]\n\n\nprint(replace_max_spaces_and_commas_and_dots(\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "import re\n\n\ndef replace_max_spaces(string, max_spaces):\n    \"\"\"\n    :type string: str\n    :type max_spaces: int\n    :rtype: str\n    \"\"\"\n\n    # find max spaces\n    spaces_count = re.search('\\s', string)\n    if spaces_count:\n        max_spaces -= spaces_count.start()\n\n    # replace spaces\n    if max_spaces > 0:\n        string = string.replace(' ', ':')\n        string = string.replace(',', ':')\n        string = string.replace('.', ':')\n\n    return string\n\n\nif __name__ == \"__main__\":\n    assert replace_max_spaces(\",\", 3) == \",:\"\n    assert replace_max_spaces(\",\", 2) == \",,:\"\n    assert replace_max_spaces(\",\", 1) == \",,:\"\n    assert replace_max_spaces(\",\", 0) == \",,:\"\n    assert replace_max_spaces(\",\", -1) == \",,:\"\n    assert replace_max_spaces(\",\", -2) == \",,,:\"\n    assert replace_max_spaces(\",\", -3) == \",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def replace_max_spaces(string, max_spaces):\n    return string.replace(' ', ': ')\n\n\ndef replace_max_commas(string, max_commas):\n    return string.replace(',', ':')\n\n\ndef replace_max_dot(string, max_dot):\n    return string.replace('.', ':')\n\n\nif __name__ == '__main__':\n    print(replace_max_spaces('Hello world', 2))\n    print(replace_max_spaces('Hello world', 3))\n    print(replace_max_spaces('Hello world', 4))\n    print(replace_max_spaces('Hello world', 5))\n    print(replace_max_spaces('Hello world', 6))\n    print(replace_max_spaces('Hello world', 7))\n    print(replace_max_spaces('Hello world', 8))\n    print(replace_max_spaces('Hello world', 9))\n    print(replace_max_spaces('Hello world', 10))\n    print(replace_max_spaces('Hello world', 11))\n    print(replace_max_spaces('Hello world', 12))\n    print(replace_max_spaces('Hello world', 13))\n    print(replace_max_spaces('Hello world', 14))\n    print(replace_max_spaces('Hello world', 15))\n    print(replace_max_spaces('Hello world', 16))\n    print(replace_max_spaces('Hello world', 17))\n    print(replace_max_spaces('Hello world', 18))\n    print(replace_max_spaces('Hello world', 19))\n    print(replace_max_spaces('Hello world', 20))\n    print(replace_max_spaces('Hello world', 21))\n    print(replace_max_spaces('Hello world', 22))\n    print(replace_max_spaces('Hello world', 23))\n    print(replace_max_spaces('Hello world', 24))\n    print(replace_max_spaces('Hello world', 25))\n    print(replace_max_spaces('Hello world', 26))\n    print(replace_max_spaces('Hello world', 27))\n    print(replace_max_spaces('Hello world', 28))\n    print(replace_max_spaces('Hello world"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def replace_max_occurences(string: str, max_occurences: int) -> str:\n    if max_occurences < 1:\n        raise ValueError(\"max_occurences must be greater than 0.\")\n\n    if max_occurences == 1:\n        return string\n\n    if max_occurences == 2:\n        return string.replace(\" \", \":\")\n\n    return string.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\")"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def replace_max_space(string, n):\n    count = 0\n    result = \"\"\n    for char in string:\n        if char == \" \":\n            count += 1\n            if count > n:\n                result += \":\"\n                count = 0\n        elif char == \",\":\n            count += 1\n        elif char == \".\":\n            count += 1\n    if count > n:\n        result += \":\"\n    return result\n\n\nprint(replace_max_space(\"a,b,c,d,e,f,g,h,i,j,k\", 2))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def replace_spaces_and_commas_with_colon(str_input):\n    return str_input.replace(\" \", \":\").replace(\",\", \":\")\n\n\nprint(replace_spaces_and_commas_with_colon(\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\"))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def replace_max_spaces_and_commas_and_dot(string):\n    space_count = 0\n    comma_count = 0\n    dot_count = 0\n    max_count = 0\n    for i in range(len(string)):\n        if string[i] == \" \":\n            space_count += 1\n        elif string[i] == \",\":\n            comma_count += 1\n        elif string[i] == \".\":\n            dot_count += 1\n        elif space_count > max_count:\n            max_count = space_count\n        elif comma_count > max_count:\n            max_count = comma_count\n        elif dot_count > max_count:\n            max_count = dot_count\n    return string[:max_count] + \":\" + string[max_count:]\n\nprint(replace_max_spaces_and_commas_and_dot(\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def replace_max(str, max_space=4):\n    spaces = 0\n    commas = 0\n    dots = 0\n\n    if len(str) > max_space:\n        str = str[:max_space]\n\n    if str.find(\",\")!= -1:\n        commas += 1\n        str = str.replace(\",\", \":\")\n\n    if str.find(\".\")!= -1:\n        dots += 1\n        str = str.replace(\".\", \":\")\n\n    if spaces == 0 and commas == 0 and dots == 0:\n        return str\n\n    return str + \":\"\n\nprint(replace_max(\",,,,.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def replace_space(string, n):\n    if string == \"\":\n        return \"\"\n\n    if string.count(\" \") > n:\n        return string\n\n    if string.count(\",\") > n:\n        return string.replace(\",\", \":\")\n\n    if string.count(\".\") > n:\n        return string.replace(\".\", \":\")\n\n    return string"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def replace_max_occurences(string: str, max_occurences: int) -> str:\n    max_occurences = max_occurences if max_occurences > 0 else 0\n    return string.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\").replace(\".\", \":\").replace(\",\", \":\").replace(\".\", \":\").replace(\",\", \":\")"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def replace_max_occurences(string, max_occurences):\n    max_occurences = max_occurences - 1\n    string = string.replace(\" \", \":\")\n    string = string.replace(\",\", \":\")\n    string = string.replace(\".\", \":\")\n    if max_occurences <= 0:\n        return string\n    return string[:max_occurences] + \":\"\n\nif __name__ == \"__main__\":\n    print(replace_max_occurences(\" \", 3))\n    print(replace_max_occurences(\",\", 3))\n    print(replace_max_occurences(\".\", 3))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def replace_max_spaces(string, max_spaces):\n    max_spaces = int(max_spaces)\n    spaces = 0\n    for char in string:\n        if char =='':\n            spaces += 1\n            if spaces > max_spaces:\n                return string[:spaces] + ':'\n        elif char == ',':\n            spaces = 0\n        elif char == '.':\n            spaces = 0\n    return string\n\n\nprint(replace_max_spaces(\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def replace(string, max_occurrences):\n    if max_occurrences < 1:\n        return string\n\n    if len(string) == 1:\n        return string\n\n    if len(string) == 2:\n        return string[:1] + \":\" + string[1:]\n\n    if string[0] == string[-1]:\n        return string[:-1] + \":\" + string[1:]\n\n    return string[:-1] + \":\" + string[1:] + \":\"\n\n\nif __name__ == '__main__':\n    print(replace(' ', 1))\n    print(replace('a', 2))\n    print(replace('a', 3))\n    print(replace('a', 4))\n    print(replace('a', 5))\n    print(replace('a', 6))\n    print(replace('a', 7))\n    print(replace('a', 8))\n    print(replace('a', 9))\n    print(replace('a', 10))\n    print(replace('a', 11))\n    print(replace('a', 12))\n    print(replace('a', 13))\n    print(replace('a', 14))\n    print(replace('a', 15))\n    print(replace('a', 16))\n    print(replace('a', 17))\n    print(replace('a', 18))\n    print(replace('a', 19))\n    print(replace('a', 20))\n    print(replace('a', 21))\n    print(replace('a', 22))\n    print(replace('a', 23))\n    print(replace('a', 24))\n    print(replace('a', 25))\n    print(replace('a', 26))\n    print(replace('a', 27))\n    print(replace('a', 28))\n    print(replace('a', 29))\n    print(replace('a', 30))\n    print(replace('a', 31))\n    print(replace('a', 32))\n    print(replace('a', 33))\n    print(replace('a', 34))\n    print(replace('a', 35))\n    print(replace('a', 36))\n    print(replace('a', 37))\n    print(replace('a', 38))\n    print(replace('a',"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def replace_max_spaces(str):\n    count = 0\n    while count < len(str):\n        if str[count] == \" \":\n            str = str[:count] + \":\"\n        elif str[count] == \",\":\n            str = str[:count] + \".\"\n        elif str[count] == \".\":\n            str = str[:count]\n        count += 1\n    return str\n\n\ndef replace_max_commas(str):\n    count = 0\n    while count < len(str):\n        if str[count] == \",\":\n            str = str[:count] + \":\"\n        elif str[count] == \".\":\n            str = str[:count]\n        count += 1\n    return str\n\n\ndef replace_max_dot(str):\n    count = 0\n    while count < len(str):\n        if str[count] == \".\":\n            str = str[:count] + \":\"\n        elif str[count] == \",\":\n            str = str[:count]\n        count += 1\n    return str\n\n\nif __name__ == \"__main__\":\n    print(replace_max_spaces(\"  \") == \"  :\")\n    print(replace_max_spaces(\" ,\") == \"  :\")\n    print(replace_max_spaces(\" ,  \") == \"  :\")\n    print(replace_max_spaces(\" , ,  \") == \"  :\")\n    print(replace_max_spaces(\" , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def replace_spaces(string, max_count):\n    if max_count == 0:\n        return string\n\n    if max_count == 1:\n        return string.replace(\" \", \":\")\n\n    if max_count == 2:\n        return string.replace(\",\", \":\")\n\n    if max_count == 3:\n        return string.replace(\".\", \":\")\n\n    if max_count == 4:\n        return string.replace(\".\", \":\")\n\n    if max_count == 5:\n        return string.replace(\".\", \":\")\n\n    return string"
    },
    {
      "rank": 17,
      "score": 9.0,
      "candidate": "def replace_comma(string, n):\n    if string == \"\":\n        return string\n\n    if n == 0:\n        return string\n\n    string = string.replace(',', ':')\n    string = string.replace('.', ':')\n    string = string.replace(' ', ':')\n\n    return string"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "def replace_max(string, n):\n    if len(string) > n:\n        return string[:n] + \":\"\n    elif len(string) == n:\n        return string\n    elif len(string) < n:\n        return string + \":\"\n    else:\n        return string + \",\"\n\nprint(replace_max(\"A, B, C, D, E, F\", 2))\nprint(replace_max(\"A, B, C, D, E, F\", 4))\nprint(replace_max(\"A, B, C, D, E, F\", 3))\nprint(replace_max(\"A, B, C, D, E, F\", 1))\nprint(replace_max(\"A, B, C, D, E, F\", 0))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "def replace_space_comma_dot(string: str, max_occurences: int):\n    return string.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\")\n\n\nprint(replace_space_comma_dot(\"this is a good text\", 2))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "def replace_spaces(text, max_spaces):\n    text = text.replace(' ', ':')\n    text = text.replace(',', ':')\n    text = text.replace('.', ':')\n\n    return text[:max_spaces]\n\n\nprint(replace_spaces('This is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))\nprint(replace_spaces('This is a sentence.  It is a sentence.  It is a sentence.', 2))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def replace_spaces_comma_dot(str):\n    return str.replace(' ',':').replace(',',':').replace('.',':')\n\nprint(replace_spaces_comma_dot('a,b,c,d'))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def replace_comma(string, n):\n    if len(string) > n:\n        string = string[:n] + ':'\n    return string\n\n\nprint(replace_comma('abc,def', 3))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def replace_max(string, n):\n    space_count = 0\n    comma_count = 0\n    dot_count = 0\n    result = \"\"\n\n    for char in string:\n        if char == \" \":\n            space_count += 1\n        elif char == \",\":\n            comma_count += 1\n        elif char == \".\":\n            dot_count += 1\n\n        if space_count > n or comma_count > n or dot_count > n:\n            result += \":\"\n\n    return result\n\n\nprint(replace_max(\",,\", 2))"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def replace_max(string, max):\n    spaces = 0\n    commas = 0\n    dots = 0\n    for char in string:\n        if char == \" \":\n            spaces += 1\n        elif char == \",\":\n            commas += 1\n        elif char == \".\":\n            dots += 1\n    string = string.replace(\" \", \":\")\n    string = string.replace(\",\", \":\")\n    string = string.replace(\".\", \":\")\n    if spaces > max:\n        string = string[:max-spaces] + \":\"\n    if commas > max:\n        string = string[:max-commas] + \":\"\n    if dots > max:\n        string = string[:max-dots] + \":\"\n    return string"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def replace_max_spaces_and_commas_and_dots(string, max_spaces, max_commas, max_dots):\n    max_spaces_count = 0\n    max_commas_count = 0\n    max_dots_count = 0\n\n    for char in string:\n        if char == \" \":\n            max_spaces_count += 1\n        elif char == \",\":\n            max_commas_count += 1\n        elif char == \".\":\n            max_dots_count += 1\n\n    max_spaces = max(max_spaces, max_spaces_count)\n    max_commas = max(max_commas, max_commas_count)\n    max_dots = max(max_dots, max_dots_count)\n\n    new_string = \"\"\n    for char in string:\n        if char == \" \":\n            new_string += \":\" * max_spaces\n        elif char == \",\":\n            new_string += \":\" * max_commas\n        elif char == \".\":\n            new_string += \":\" * max_dots\n        else:\n            new_string += char\n\n    return new_string\n\n\ndef main():\n    string = \"   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def replace_max(string: str, n: int) -> str:\n    return \":\".join([string[i:i+n] for i in range(0, len(string), n)])\n\n\nif __name__ == \"__main__\":\n    assert replace_max(\"hello, world\", 3) == \"hello:world\"\n    assert replace_max(\"hello, world\", 2) == \"hello:world\"\n    assert replace_max(\"hello, world\", 1) == \"hello:world\"\n    assert replace_max(\"hello, world\", 0) == \"hello:world\""
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def replace_max(string, max_occurence):\n    new_string = \"\"\n    for word in string.split():\n        if len(word) > max_occurence:\n            new_string += word + \":\"\n        else:\n            new_string += word\n    return new_string\n\nprint(replace_max(\"Hello, world!\", 3))\nprint(replace_max(\"Hello, world!\", 5))\nprint(replace_max(\"Hello, world!\", 9))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def replace_max_occurences(string, max_occurences):\n    space_index = string.find(' ')\n    comma_index = string.find(',')\n    dot_index = string.find('.')\n    if space_index > 0:\n        string = string[:space_index] + ':' + string[space_index+1:]\n    if comma_index > 0:\n        string = string[:comma_index] + ':' + string[comma_index+1:]\n    if dot_index > 0:\n        string = string[:dot_index] + ':' + string[dot_index+1:]\n    return string\n\n\nif __name__ == '__main__':\n    string = 'A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z'\n    max_occurences = 2\n    print(replace_max_occurences(string, max_occurences))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def replace_colon(string: str, max_occurences: int) -> str:\n    \"\"\"\n    O(n)\n    :type string: str\n    :type max_occurences: int\n    :rtype: str\n    \"\"\"\n    string = string.replace(\" \", \":\")\n    string = string.replace(\",\", \":\")\n    string = string.replace(\".\", \":\")\n    return string[:max_occurences]\n\n\nif __name__ == \"__main__\":\n    assert replace_colon(\"a,b,c\", 3) == \"a:b:c\"\n    assert replace_colon(\"a,b,c\", 5) == \"a:b:c\""
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def replace_spaces(input_string):\n    output_string = \"\"\n    space_count = 0\n    comma_count = 0\n    dot_count = 0\n\n    for char in input_string:\n        if char == \" \":\n            space_count += 1\n        elif char == \",\":\n            comma_count += 1\n        elif char == \".\":\n            dot_count += 1\n\n        if space_count > comma_count and space_count > dot_count:\n            output_string += \": \"\n            space_count = 0\n            comma_count = 0\n            dot_count = 0\n        else:\n            output_string += char\n\n    return output_string\n\nprint(replace_spaces(\"a,b,c,d\"))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def replace_space(str_, n):\n    string = \"\"\n    for char in str_:\n        if char!= \" \":\n            string += char\n        else:\n            string += \":\"\n            if len(string) > n:\n                return string\n            string = \"\"\n    return string\n\n\nprint(replace_space(\"hello world\", 5))\nprint(replace_space(\"hello world\", 3))\nprint(replace_space(\"hello world\", 4))\nprint(replace_space(\"hello world\", 2))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def replace_comma(string, n):\n    return string.replace(',', ':' * n)\n\n\nif __name__ == '__main__':\n    assert replace_comma('a,b,c,d,e,f,g,h,i', 2) == 'a:b:c:d:e:f:g:h:i'\n    assert replace_comma('a,b,c,d,e,f,g,h,i', 4) == 'a:b:c:d:e:f:g:h:i:j'\n    assert replace_comma('a,b,c,d,e,f,g,h,i', 5) == 'a:b:c:d:e:f:g:h:i:j:k'"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def replace_max_spaces(str, max_spaces):\n    spaces = 0\n    while spaces < max_spaces:\n        if str[spaces] == \" \":\n            spaces += 1\n        elif str[spaces] == \",\" or str[spaces] == \".\":\n            spaces += 1\n        else:\n            str = str.replace(str[spaces], \":\")\n            spaces = 0\n    return str\n\n\nif __name__ == \"__main__\":\n    print(replace_max_spaces(\"\", 3))\n    print(replace_max_spaces(\",\", 2))\n    print(replace_max_spaces(\".\", 1))\n    print(replace_max_spaces(\".a\", 1))\n    print(replace_max_spaces(\".a.b\", 2))\n    print(replace_max_spaces(\".a.b.c\", 2))\n    print(replace_max_spaces(\".a.b.c.d\", 2))\n    print(replace_max_spaces(\"a.b.c.d.\", 2))\n    print(replace_max_spaces(\"a.b.c.d.e\", 2))\n    print(replace_max_spaces(\"a.b.c.d.e.\", 2))\n    print(replace_max_spaces(\"a.b.c.d.e.f\", 2))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 2))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 3))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 4))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 5))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 6))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 7))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 8))\n    print(replace_max_spaces(\"a.b.c.d.e.f.\", 9))\n    print"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def replace_max(str, n):\n    if n == 0:\n        return str\n\n    if len(str) > n:\n        str = str[:n]\n        str += \":\"\n        return str\n\n    if len(str) == n:\n        return str\n\n    if str[0] == \" \":\n        str = str[1:]\n        str += \":\"\n        return str\n\n    if str[0] == \",\":\n        str = str[1:]\n        str += \":\"\n        str += replace_max(str[1:], n-1)\n        return str\n\n    if str[0] == \".\":\n        str = str[1:]\n        str += \":\"\n        str += replace_max(str[1:], n-1)\n        return str\n\n    return str\n\n\nprint(replace_max(\"hello world\", 3))\nprint(replace_max(\"hello world\", 4))\nprint(replace_max(\"hello world\", 5))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def replace_max(s, n):\n    if not s:\n        return s\n    if n < 0:\n        return s\n    if n == 0:\n        return s\n    if s[0] == '.':\n        return s[:n] + \":\"\n    if s[0] == ',':\n        return s[:n] + \",\" + s[n:]\n    if s[0] =='':\n        return s[:n] + \":\"\n    return s[:n] + \":\" + s[n:]\n\nprint(replace_max(\",,\", 2))\nprint(replace_max(\",\", 0))\nprint(replace_max(\",\", 1))\nprint(replace_max(\"\", 2))\nprint(replace_max(\"\", 0))\nprint(replace_max(\"\", 1))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def replace_max_occurrences(string, max_occurrences):\n    result = \"\"\n    for char in string:\n        if char == \" \":\n            result += \":\"\n        elif char == \",\":\n            result += \":\"\n        elif char == \".\":\n            result += \":\"\n        elif char == \" \":\n            result += \":\"\n        elif char == \",\":\n            result += \":\"\n        elif char == \".\":\n            result += \":\"\n        else:\n            result += char\n    return result\n\n\nprint(replace_max_occurrences(\".  \", 3))\nprint(replace_max_occurrences(\"  \", 3))\nprint(replace_max_occurrences(\"   \", 3))\nprint(replace_max_occurrences(\"  \", 4))\nprint(replace_max_occurrences(\"   \", 4))\nprint(replace_max_occurrences(\"  \", 5))\nprint(replace_max_occurrences(\"   \", 5))\nprint(replace_max_occurrences(\"  \", 6))\nprint(replace_max_occurrences(\"   \", 6))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def replace_max_spaces_and_commas_and_dots(string, max_num):\n    if max_num <= 0:\n        return string\n    if string[0] =='':\n        return string\n    if string[0] == ',':\n        return string[:max_num] + ':'\n    if string[0] == '.':\n        return string[:max_num] + ':'\n    return string\n\n\nif __name__ == \"__main__\":\n    print(replace_max_spaces_and_commas_and_dots(' ', 0))\n    print(replace_max_spaces_and_commas_and_dots('. ', 0))\n    print(replace_max_spaces_and_commas_and_dots(',', 0))\n    print(replace_max_spaces_and_commas_and_dots('.', 0))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def replace_max_spaces(string, max_spaces):\n    spaces = 0\n    new_string = ''\n    for char in string:\n        if char =='':\n            spaces += 1\n        elif char == ',':\n            spaces -= 1\n        elif char == '.':\n            spaces += 1\n        else:\n            new_string += char\n            if spaces == 0:\n                new_string += ':'\n    return new_string\n\nprint(replace_max_spaces('a,b,c,d,e', 3))\nprint(replace_max_spaces('a,b,c,d,e', 2))\nprint(replace_max_spaces('a,b,c,d,e', 1))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def replace_with_colon(str):\n    new_str = str\n    max_num = len(str)\n    if max_num > 0:\n        for i in range(0,max_num):\n            if str[i] == \" \":\n                new_str = new_str[:i] + \":\" + new_str[i+1:]\n            elif str[i] == \",\":\n                new_str = new_str[:i] + \".\" + new_str[i+1:]\n            elif str[i] == \".\":\n                new_str = new_str[:i] + \":\"\n    return new_str"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def replace_with_colon(text):\n    max_space = 0\n    max_comma = 0\n    max_dot = 0\n\n    for char in text:\n        if char =='':\n            max_space += 1\n        elif char == ',':\n            max_comma += 1\n        elif char == '.':\n            max_dot += 1\n\n    text = text.replace(' ', ':')\n    text = text.replace(',', ':')\n    text = text.replace('.', ':')\n\n    if max_space > max_comma:\n        text = text.replace(',', ':')\n    if max_space > max_dot:\n        text = text.replace('.', ':')\n\n    return text\n\nprint(replace_with_colon('   a, b, c  '))\nprint(replace_with_colon('  a,b,c  '))\nprint(replace_with_colon('a,b,c'))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def replace_max(s: str, n: int) -> str:\n    if not s:\n        return s\n\n    return s[:n] + \":\" + s[n:]\n\n\nprint(replace_max(\",,\", 4))\nprint(replace_max(\"a,b,c,d\", 3))\nprint(replace_max(\"a,b,c,d\", 3))\nprint(replace_max(\"a,b,c,d\", 5))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def replace_max(string, max_num):\n    # Write your code here\n    string_list = string.split(' ')\n    new_string = ''\n    for string in string_list:\n        if len(string) > max_num:\n            new_string = new_string + ':'\n        else:\n            new_string = new_string + string\n    return new_string\n\nprint(replace_max('hello world', 2))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def replace_colon(str, max_spaces, max_commas, max_dots):\n    # your code here\n    if str == \"\":\n        return \"\"\n\n    space_count = 0\n    comma_count = 0\n    dot_count = 0\n\n    for i in range(len(str)):\n        if str[i] =='':\n            space_count += 1\n        elif str[i] == ',':\n            comma_count += 1\n        elif str[i] == '.':\n            dot_count += 1\n\n    space_count = max(space_count, 0)\n    comma_count = max(comma_count, 0)\n    dot_count = max(dot_count, 0)\n\n    if space_count > max_spaces:\n        return str[:max_spaces] + \":\"\n\n    if comma_count > max_commas:\n        return str[:max_commas] + \",\"\n\n    if dot_count > max_dots:\n        return str[:max_dots] + \".\"\n\n    return str\n\nprint(replace_colon(\",,\", 1, 2, 3))\nprint(replace_colon(\"a,b,c,d,e\", 2, 2, 3))\nprint(replace_colon(\"a,b,c,d,e\", 2, 2, 3))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def replace_space_comma(text, n):\n    new_text = \"\"\n    for i in text:\n        if i == \" \":\n            new_text += \":\"\n        elif i == \",\":\n            new_text += \",\"\n        elif i == \".\":\n            new_text += \".\"\n        else:\n            new_text += i\n    return new_text\n\nprint(replace_space_comma(\"abc,def,ghi,jkl\", 2))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def replace_max_spaces_comma_dot(string, n):\n    new_string = \"\"\n\n    for i in range(len(string)):\n        if string[i] == \" \":\n            new_string += \":\"\n        elif string[i] == \",\":\n            new_string += \",\"\n        elif string[i] == \".\":\n            new_string += \".\"\n        else:\n            new_string += string[i]\n\n    return new_string[:n]\n\nprint(replace_max_spaces_comma_dot(\"This is a string\", 2))\nprint(replace_max_spaces_comma_dot(\"This is a string\", 4))\nprint(replace_max_spaces_comma_dot(\"This is a string\", 8))\nprint(replace_max_spaces_comma_dot(\"This is a string\", 11))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def replace_max_occurrences(text, max_occurrences):\n    if max_occurrences == 0:\n        return text\n\n    result = []\n    for i in text:\n        if i in'\\t\\n\\r':\n            result.append(i)\n        elif i == ',':\n            result.append(':')\n        elif i == '.':\n            result.append(':')\n\n    return ''.join(result)"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def replace_spaces(string, max_spaces):\n    space_count = 0\n    comma_count = 0\n    dot_count = 0\n\n    for char in string:\n        if char =='':\n            space_count += 1\n        elif char == ',':\n            comma_count += 1\n        elif char == '.':\n            dot_count += 1\n\n        if space_count > max_spaces and comma_count > max_spaces and dot_count > max_spaces:\n            return string\n\n    return string\n\n\nprint(replace_spaces('   ', 2))\nprint(replace_spaces(' ,', 2))\nprint(replace_spaces(' .', 2))\nprint(replace_spaces(' ,,', 2))\nprint(replace_spaces(' ,   ', 2))\nprint(replace_spaces(' ,  ,', 2))\nprint(replace_spaces(' ,  ,   ', 2))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def replace_colon(string, max_char):\n    if len(string) > max_char:\n        new_string = \"\"\n        for i in range(len(string)):\n            if i > max_char:\n                new_string += \":\"\n            else:\n                new_string += string[i]\n        return new_string\n    else:\n        return string\n\nprint(replace_colon(\"a,b,c,d\", 3))\nprint(replace_colon(\"a,b,c,d\", 4))\nprint(replace_colon(\"a,b,c,d\", 5))\nprint(replace_colon(\"a,b,c,d\", 8))\nprint(replace_colon(\"a,b,c,d\", 9))\nprint(replace_colon(\"a,b,c,d\", 10))\nprint(replace_colon(\"a,b,c,d\", 12))\nprint(replace_colon(\"a,b,c,d\", 13))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def replace_spaces_and_commas(str, n):\n    return str.replace(',', ':').replace('.', ':').replace(' ', ':').replace(':', ':').replace(' ', ':').replace(';', ':')\n\nprint(replace_spaces_and_commas('a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z', 2))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def replace_max_spaces(string, max_spaces):\n    return string[:max_spaces] + \":\"\n\n\nif __name__ == '__main__':\n    print(replace_max_spaces(\"hello world\", 5))\n    print(replace_max_spaces(\"hello, world\", 5))\n    print(replace_max_spaces(\"hello, world,\", 5))\n    print(replace_max_spaces(\"hello, world,,\", 5))\n    print(replace_max_spaces(\"hello, world,,,,\", 5))\n    print(replace_max_spaces(\"hello, world,,,,,\", 5))\n    print(replace_max_spaces(\"hello, world,,,,,\", 5))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def replace_max_spaces(s: str) -> str:\n    if len(s) > 0:\n        return s.replace(\" \", \":\")\n    return s"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def replace_max_occurences(text, max_occurences=3):\n    return ':'.join(text.replace(' ','' * max_occurences).replace(',','' * max_occurences).replace('.','' * max_occurences).split())\n\n\nif __name__ == '__main__':\n    assert replace_max_occurences('a, b, c, d, e, f, g', 2) == 'a:b:c:d:e:f:g'\n    assert replace_max_occurences('a, b, c, d, e, f, g', 3) == 'a:b:c:d:e:f:g'\n    assert replace_max_occurences('a, b, c, d, e, f, g', 4) == 'a:b:c:d:e:f:g'\n    assert replace_max_occurences('a, b, c, d, e, f, g', 5) == 'a:b:c:d:e:f:g'\n    assert replace_max_occurences('a, b, c, d, e, f, g', 6) == 'a:b:c:d:e:f:g'"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def replace_max(text, n):\n    \"\"\"\n    :type text: str\n    :type n: int\n    :rtype: str\n    \"\"\"\n    if len(text) <= n:\n        return text\n    if n < 3:\n        return text\n    if text.count(\" \") > text.count(\",\"):\n        return text\n    if text.count(\".\") > text.count(\",\"):\n        return text\n    return text + \":\""
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def replace_colon(string: str, max_count: int) -> str:\n    if not string:\n        return string\n\n    string = string.replace(' ', ':')\n    string = string.replace(',', ':')\n    string = string.replace('.', ':')\n\n    if max_count == 0:\n        return string\n\n    return string[:max_count]\n\n\nif __name__ == \"__main__\":\n    print(replace_colon(\",,\", 2))\n    print(replace_colon(\",,\", 3))\n    print(replace_colon(\",,\", 4))\n    print(replace_colon(\",,\", 5))\n    print(replace_colon(\",,\", 6))\n    print(replace_colon(\",,\", 7))\n    print(replace_colon(\",,\", 8))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def replace_max_spaces(string, n):\n    string = string.replace(\" \", \":\")\n    string = string.replace(\",\", \":\")\n    string = string.replace(\".\", \":\")\n    return string[:n]\n\n\nprint(replace_max_spaces(\"a,b,c,d\", 3))\nprint(replace_max_spaces(\"a,b,c,d\", 4))\nprint(replace_max_spaces(\"a,b,c,d\", 5))\nprint(replace_max_spaces(\"a,b,c,d\", 6))\nprint(replace_max_spaces(\"a,b,c,d\", 7))\nprint(replace_max_spaces(\"a,b,c,d\", 8))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def replace_max_spaces(str, n):\n    if len(str) > n:\n        return str[:n] + \":\"\n    else:\n        return str\n\n\ndef replace_max_comma(str, n):\n    if len(str) > n:\n        return str[:n] + \",\" + str[n:]\n    else:\n        return str\n\n\ndef replace_max_dot(str, n):\n    if len(str) > n:\n        return str[:n] + \".\" + str[n:]\n    else:\n        return str\n\n\nif __name__ == \"__main__\":\n    print(replace_max_spaces(\"hello\", 2))\n    print(replace_max_spaces(\"hello\", 3))\n    print(replace_max_spaces(\"hello\", 4))\n    print(replace_max_spaces(\"hello\", 5))\n    print(replace_max_spaces(\"hello\", 6))\n    print(replace_max_spaces(\"hello\", 7))\n    print(replace_max_spaces(\"hello\", 8))\n    print(replace_max_spaces(\"hello\", 9))\n    print(replace_max_spaces(\"hello\", 10))\n    print(replace_max_spaces(\"hello\", 11))\n    print(replace_max_spaces(\"hello\", 12))\n    print(replace_max_spaces(\"hello\", 13))\n    print(replace_max_spaces(\"hello\", 14))\n    print(replace_max_spaces(\"hello\", 15))\n    print(replace_max_spaces(\"hello\", 16))\n    print(replace_max_spaces(\"hello\", 17))\n    print(replace_max_spaces(\"hello\", 18))\n    print(replace_max_spaces(\"hello\", 19))\n    print(replace_max_spaces(\"hello\", 20))\n    print(replace_max_spaces(\"hello\", 21))\n    print(replace_max_spaces(\"hello\", 22))\n    print(replace_max_spaces(\"hello\", 23))\n    print(replace_max_spaces(\"hello\", 24))\n    print(replace_max_spaces(\"hello\", 25))\n    print(replace_max_spaces(\"hello\", 26))\n    print(replace_max_spaces(\"hello\", 27))\n    print"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def replace_max_spaces(string, n):\n    new_string = ''\n    for character in string:\n        if character =='':\n            new_string += ':'\n        elif character == ',':\n            new_string += ','\n        elif character == '.':\n            new_string += '.'\n        else:\n            new_string += character\n    return new_string[:n]\n\n\nprint(replace_max_spaces('a,b,c,d,e,f,g,h', 3))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def replace_max_spaces_and_commas(string, max_spaces_or_commas):\n    result = ''\n    for char in string:\n        if char =='':\n            result += ':'\n        elif char == ',':\n            result += ':'\n        elif char == '.':\n            result += ':'\n    return result[:max_spaces_or_commas]\n\nprint(replace_max_spaces_and_commas(' ', 3))\nprint(replace_max_spaces_and_commas('a', 3))\nprint(replace_max_spaces_and_commas('a.b', 3))\nprint(replace_max_spaces_and_commas('a.b.c', 3))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def replace_max_occurrences(string, n):\n    return string.replace(' ', ':').replace(',', ':').replace('.', ':')\n\n\nprint(replace_max_occurrences('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z', 2))\nprint(replace_max_occurrences('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z', 1))\nprint(replace_max_occurrences('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z', 3))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def replace_colon(text: str, max_len: int) -> str:\n    \"\"\"\n    :type text: str\n    :type max_len: int\n    :rtype: str\n    \"\"\"\n    space_count = 0\n    comma_count = 0\n    dot_count = 0\n    new_text = []\n\n    for char in text:\n        if char == \" \":\n            space_count += 1\n        elif char == \",\":\n            comma_count += 1\n        elif char == \".\":\n            dot_count += 1\n\n    if space_count > max_len or comma_count > max_len or dot_count > max_len:\n        return text\n\n    new_text.append(\":\")\n\n    if space_count > max_len:\n        new_text.append(\" \")\n    if comma_count > max_len:\n        new_text.append(\",\")\n    if dot_count > max_len:\n        new_text.append(\".\")\n\n    return \"\".join(new_text)"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def replace_comma(str, n):\n    if n <= 0:\n        return str\n    else:\n        return str[:n] + ':' + str[n:]\n\n\nprint(replace_comma('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o', 5))\nprint(replace_comma('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o', 0))\nprint(replace_comma('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o', 1))\nprint(replace_comma('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o', 2))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def replace_colon(string, max_count):\n    return \":\".join([string[i:i+max_count] for i in range(0, len(string), max_count)])\n\n\nprint(replace_colon(\"space, comma, dot\", 3))\nprint(replace_colon(\", space, comma, dot\", 3))\nprint(replace_colon(\", space, comma, dot\", 2))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def replace_max_space_and_comma(text, max_space, max_comma, max_dot):\n    new_text = \"\"\n    for character in text:\n        if character == \" \":\n            new_text += \":\"\n        elif character == \",\":\n            new_text += \",\"\n        elif character == \".\":\n            new_text += \".\"\n        else:\n            new_text += character\n    return new_text[:max_space]\n\n\n\nprint(replace_max_space_and_comma(\"abcdefghijklmnopqrstuvwxyz\", 3, 2, 1))\nprint(replace_max_space_and_comma(\"abcdefghijklmnopqrstuvwxyz\", 3, 2, 1, \".\"))\nprint(replace_max_space_and_comma(\"abcdefghijklmnopqrstuvwxyz\", 3, 2, 1, \",\"))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def replace(string, max_count):\n    result = ''\n    for char in string:\n        if char =='':\n            result += ':'\n        elif char == ',':\n            result += ','\n        elif char == '.':\n            result += '.'\n        else:\n            result += char\n    return result[:max_count]\n\nprint(replace('hello, world', 2))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def replace_max_occurrences(s: str, n: int) -> str:\n    # write your code in Python 3.6\n    if len(s) < n:\n        return s\n    else:\n        return ':'.join(s[:n].split(' ')) + ':'.join(s[n:].split(',')) + ':'.join(s[n+1:].split('.'))\n\n\nif __name__ == '__main__':\n    print(replace_max_occurrences('abc', 3))\n    print(replace_max_occurrences('abc', 4))\n    print(replace_max_occurrences('abc', 5))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def replace_max_spaces(str, n):\n    if n == 0:\n        return str\n\n    str_list = str.split()\n    str_list_new = []\n\n    for i in range(len(str_list)):\n        if i == 0:\n            str_list_new.append(\":\")\n        else:\n            str_list_new.append(str_list[i])\n            if i == len(str_list) - 1:\n                str_list_new.append(\":\")\n\n    return \"\".join(str_list_new)\n\n\nprint(replace_max_spaces(\"abc,def,ghi,jkl\", 2))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def replace_colon(string: str, n: int) -> str:\n    if n < 0:\n        return string\n\n    if n == 0:\n        return string\n\n    if string.find(' ') >= 0:\n        return string.replace(' ', ':')\n\n    if string.find(',') >= 0:\n        return string.replace(',', ':')\n\n    if string.find('.') >= 0:\n        return string.replace('.', ':')\n\n    return string"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def replace_max(string: str, max_count: int) -> str:\n    max_count = max(max_count, len(string))\n    string = string.replace(' ', ':')\n    string = string.replace(',', ':')\n    string = string.replace('.', ':')\n    return string[:max_count]\n\n\nif __name__ == '__main__':\n    print(replace_max('a, b, c', 2))\n    print(replace_max('a.b.c', 2))\n    print(replace_max('a, b.c', 3))\n    print(replace_max('a, b.c.d', 3))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def replace_space_comma_dot(str_, max_n):\n    space = str_.count(\" \")\n    comma = str_.count(\",\")\n    dot = str_.count(\".\")\n    if space > max_n or comma > max_n or dot > max_n:\n        return str_[:max_n] + \":\"\n    return str_"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def replace_spaces(string):\n    new_string = \"\"\n    for char in string:\n        if char == \" \":\n            new_string += \":\"\n        elif char == \",\":\n            new_string += \":\"\n        elif char == \".\":\n            new_string += \":\"\n        else:\n            new_string += char\n    return new_string\n\nprint(replace_spaces(\"   hello world   \"))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def replace_spaces(str):\n    n = int(input(\"Enter the number of spaces: \"))\n    str = str.replace(\" \", \":\")\n    str = str.replace(\",\", \":\")\n    str = str.replace(\".\", \":\")\n    return str[:n]\n\n\nprint(replace_spaces(\",,,\"))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def replace_spaces(text: str, max_spaces: int) -> str:\n    return text.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\")[:max_spaces]\n\n\nassert replace_spaces(\"Hello world\", 3) == \"Hello:world\"\nassert replace_spaces(\"Hello world\", 4) == \"Hello:world\"\nassert replace_spaces(\"Hello world\", 5) == \"Hello:world\"\nassert replace_spaces(\"Hello world\", 6) == \"Hello:world\"\nassert replace_spaces(\"Hello world\", 7) == \"Hello:world\""
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def replace_max_occurence(text, max_occurence):\n    if not text:\n        return text\n    result = \"\"\n    for i in range(len(text)):\n        if i == 0:\n            if len(text) > max_occurence:\n                result += text[:max_occurence] + \":\"\n            else:\n                result += text\n        else:\n            if len(text) > max_occurence:\n                result += text[i-1] + \":\"\n            else:\n                result += text[i-1]\n    return result\n\n\ndef main():\n    print(replace_max_occurence(\"\", 2))\n    print(replace_max_occurence(\"ab\", 2))\n    print(replace_max_occurence(\"ab\", 1))\n    print(replace_max_occurence(\"ab\", 3))\n    print(replace_max_occurence(\"ab\", 4))\n    print(replace_max_occurence(\"ab\", 5))\n    print(replace_max_occurence(\"ab\", 6))\n    print(replace_max_occurence(\"ab\", 7))\n\n\nmain()"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def replace_spaces(s):\n    return s.replace(' ',':').replace(',', ':')\n\n\nprint(replace_spaces(\"this is a string\"))\nprint(replace_spaces(\"this is a string, this is a string\"))\nprint(replace_spaces(\"this is a string, this is a string, this is a string\"))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def replace_max_spaces(str):\n    max_spaces = 0\n    max_comma = 0\n    max_dot = 0\n    for char in str:\n        if char =='':\n            max_spaces += 1\n        elif char == ',':\n            max_comma += 1\n        elif char == '.':\n            max_dot += 1\n    return str.replace(' ', ':') + ':' * (max_spaces + max_comma + max_dot)\n\nprint(replace_max_spaces(\",,,,,,,,,,,,,,,,,,,,,,,,,,,,,\"))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def replace_spaces(string, n):\n    if len(string) > n:\n        return string[:n] + \":\"\n    else:\n        return string\n\n\nprint(replace_spaces(\"ab,cd,ef\", 2))\nprint(replace_spaces(\"ab,cd,ef\", 3))\nprint(replace_spaces(\"ab,cd,ef\", 4))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def replace_space_and_comma(string, max_number):\n    return string.replace(' ', ':').replace(',', ':')\n\nprint(replace_space_and_comma('1,2,3', 2))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def replace_max(string: str, max_occ: int) -> str:\n    # Write your code here\n    string_list = list(string)\n    for i in range(max_occ):\n        if string_list[i] in [' ', ',', '.']:\n            string_list[i] = ':'\n    return ''.join(string_list)"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def replace_max_occurence(string, max_occurence):\n    return re.sub('[a-zA-Z0-9]', ':', string)\n\nprint(replace_max_occurence('abc', 1))\nprint(replace_max_occurence('abc', 2))\nprint(replace_max_occurence('abc', 3))\nprint(replace_max_occurence('abc', 4))"
    },
    {
      "rank": 80,
      "score": 1.0,
      "candidate": "def replace_max(string, max):\n    max = max + 1\n    result = \"\"\n    i = 0\n    while i < len(string):\n        if string[i] == \" \":\n            result += string[i] + \":\"\n            i += 1\n        elif string[i] == \",\":\n            result += string[i]\n            i += 1\n        elif string[i] == \".\":\n            result += string[i]\n            i += 1\n        else:\n            result += string[i]\n        i += 1\n        if i >= max:\n            break\n    return result\n\n\nprint(replace_max(\", \", 2))"
    },
    {
      "rank": 81,
      "score": 1.0,
      "candidate": "def replace_max_occurrences(string, max_occurrences):\n    new_string = \"\"\n    for char in string:\n        if char == \" \":\n            new_string += \":\"\n        elif char == \",\":\n            new_string += \",\"\n        elif char == \".\":\n            new_string += \".\"\n        else:\n            new_string += char\n    return new_string[:max_occurrences]\n\n\ndef test_function():\n    assert replace_max_occurrences(\"  \", 2) == \"  :\"\n    assert replace_max_occurrences(\",\", 2) == \",:\"\n    assert replace_max_occurrences(\".\", 2) == \".\"\n    assert replace_max_occurrences(\".\", 1) == \".\"\n    assert replace_max_occurrences(\".\", 0) == \".\"\n    assert replace_max_occurrences(\".\", -1) == \".\"\n    assert replace_max_occurrences(\".\", 0) == \".\"\n    assert replace_max_occurrences(\".\", -2) == \".\"\n    assert replace_max_occurrences(\".\", -3) == \".\"\n    assert replace_max_occurrences(\".\", -4) == \".\"\n    assert replace_max_occurrences(\".\", -5) == \".\"\n    assert replace_max_occurrences(\".\", -6) == \".\"\n    assert replace_max_occurrences(\".\", -7) == \".\"\n    assert replace_max_occurrences(\".\", -8) == \".\"\n    assert replace_max_occurrences(\".\", -9) == \".\"\n    assert replace_max_occurrences(\".\", -10) == \".\"\n    assert replace_max_occurrences(\".\", -11) == \".\"\n    assert replace_max_occurrences(\".\", -12) == \".\"\n    assert replace_max_occurrences(\".\", -13) == \".\"\n    assert replace_max_occurrences(\".\", -14) == \".\"\n    assert replace_max_occurrences(\".\", -15) == \".\"\n    assert replace_max_occurrences(\".\", -16) == \".\"\n    assert replace_max_occurrences(\".\", -17) == \".\"\n    assert replace_max_occurrences(\".\", -18) == \".\""
    },
    {
      "rank": 82,
      "score": 1.0,
      "candidate": "def replace_max_spaces_and_commas_and_dot(string, n):\n    return string[:n] + \":\" + string[n:]\n\n\nif __name__ == \"__main__\":\n    string = \"a,b,c,d\"\n    n = 3\n    print(replace_max_spaces_and_commas_and_dot(string, n))"
    },
    {
      "rank": 83,
      "score": 1.0,
      "candidate": "def replace_spaces(text: str, max_occ: int) -> str:\n    if max_occ <= 0:\n        return text\n    result = \"\"\n    for char in text:\n        if char == \" \":\n            result += \":\"\n        elif char == \",\":\n            result += \":\"\n        elif char == \".\":\n            result += \":\"\n    return result\n\n\nif __name__ == \"__main__\":\n    print(replace_spaces(\",, \", 4))\n    print(replace_spaces(\",,,, \", 4))\n    print(replace_spaces(\",,,,, \", 4))"
    },
    {
      "rank": 84,
      "score": 1.0,
      "candidate": "def replace_max_occurences(str):\n    return str.replace(' ', ':').replace(',', ':').replace('.', ':')\n\n\nprint(replace_max_occurences(',,,'))"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "def replace_max_occurences(s, max_occurences):\n    max_occurences = max_occurences.lower()\n    if len(s) <= max_occurences:\n        return s\n    else:\n        return s.replace(' ', ':').replace(',', ':').replace('.', ':')\n\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5))\nprint(replace_max_occurences('this is a test', 5"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "def replace_max_spaces_and_commas_and_dots(string, max_spaces=3, max_commas=3, max_dots=3):\n    return string.replace(\" \", \":\").replace(\",\", \":\").replace(\".\", \":\")"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "import unittest\n\n\ndef replace_max_occurrences(text, max_occurrences):\n    \"\"\"\n    :type text: str\n    :type max_occurrences: int\n    :rtype: str\n    \"\"\"\n    if len(text) <= max_occurrences:\n        return text\n    else:\n        new_text = \"\"\n        for char in text:\n            if char == \" \":\n                new_text += \":\"\n            elif char == \",\":\n                new_text += \":\"\n            elif char == \".\":\n                new_text += \":\"\n            else:\n                new_text += char\n        return new_text\n\n\nclass Test(unittest.TestCase):\n\n    def test_replace_max_occurrences(self):\n        self.assertEqual(replace_max_occurrences(\"   \", 1), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 2), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 3), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 4), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 5), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 6), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 7), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 8), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 9), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 10), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 11), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 12), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 13), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 14), \"   :\")\n        self.assertEqual(replace_max_occurrences(\"   \", 15), \"   :\")\n        self.assertEqual("
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "def replace_spaces_and_commas(str):\n    return str.replace(' ', ':')\n\n\ndef replace_dotted_points(str):\n    return str.replace('.', ':')\n\n\ndef replace_dotted_points_2(str):\n    return str.replace('.', ':').replace(',', ':')\n\n\ndef replace_dotted_points_3(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_4(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_5(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_6(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_7(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_8(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_9(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_10(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points_11(str):\n    return str.replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':').replace('.', ':')\n\n\ndef replace_dotted_points"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def replace_max(input_string, n):\n    return ':'.join([input_string[i:i+n] for i in range(len(input_string)-n+1)])\n\n\nif __name__ == '__main__':\n    assert replace_max('a,b,c,d', 3) == 'a:b:c:d'\n    assert replace_max('a,b,c,d', 4) == 'a:b:c:d'\n    assert replace_max('a,b,c,d', 5) == 'a:b:c:d'\n    assert replace_max('a,b,c,d', 6) == 'a:b:c:d'\n    assert replace_max('a,b,c,d', 8) == 'a:b:c:d'\n    assert replace_max('a,b,c,d', 9) == 'a:b:c:d'"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "def replace_max_space(string, max_space):\n    if string == \"\":\n        return string\n    else:\n        return string[:max_space] + \":\"\n\n\nprint(replace_max_space(\"\", 0))\nprint(replace_max_space(\"a\", 0))\nprint(replace_max_space(\"a,b,c\", 0))\nprint(replace_max_space(\"a,b,c\", 1))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def replace_spaces_and_comma(string, max_occurrences):\n    \"\"\"\n    :type string: str\n    :type max_occurrences: int\n    :rtype: str\n    \"\"\"\n    if string == \"\":\n        return \"\"\n    if max_occurrences == 0:\n        return string\n    if max_occurrences > 0:\n        return string[:max_occurrences] + \":\"\n    else:\n        return string\n\nif __name__ == \"__main__\":\n    assert replace_spaces_and_comma(\" \", 1) == \" \"\n    assert replace_spaces_and_comma(\",\", 1) == \",\"\n    assert replace_spaces_and_comma(\".\", 1) == \".\"\n    assert replace_spaces_and_comma(\" \", 2) == \" \"\n    assert replace_spaces_and_comma(\",\", 2) == \",\"\n    assert replace_spaces_and_comma(\".\", 2) == \".\"\n    assert replace_spaces_and_comma(\" \", 3) == \" \"\n    assert replace_spaces_and_comma(\",\", 3) == \",\"\n    assert replace_spaces_and_comma(\".\", 3) == \".\"\n    assert replace_spaces_and_comma(\" \", 4) == \" \"\n    assert replace_spaces_and_comma(\",\", 4) == \",\"\n    assert replace_spaces_and_comma(\".\", 4) == \".\"\n    assert replace_spaces_and_comma(\" \", 5) == \" \"\n    assert replace_spaces_and_comma(\",\", 5) == \",\"\n    assert replace_spaces_and_comma(\".\", 5) == \".\"\n    assert replace_spaces_and_comma(\" \", 6) == \" \"\n    assert replace_spaces_and_comma(\",\", 6) == \",\"\n    assert replace_spaces_and_comma(\".\", 6) == \".\""
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def replace_max_occurences(string, n):\n    if len(string) == 0:\n        return string\n    if len(string) == 1:\n        return string + ':'\n    if len(string) == 2:\n        return string + ':'\n    if len(string) == 3:\n        return string + ':'\n    if len(string) == 4:\n        return string + ':'\n    if len(string) == 5:\n        return string + ':'\n    if len(string) == 6:\n        return string + ':'\n    if len(string) == 7:\n        return string + ':'\n    if len(string) == 8:\n        return string + ':'\n    if len(string) == 9:\n        return string + ':'\n    if len(string) == 10:\n        return string + ':'\n    if len(string) == 11:\n        return string + ':'\n    if len(string) == 12:\n        return string + ':'\n    if len(string) == 13:\n        return string + ':'\n    if len(string) == 14:\n        return string + ':'\n    if len(string) == 15:\n        return string + ':'\n    if len(string) == 16:\n        return string + ':'\n    if len(string) == 17:\n        return string + ':'\n    if len(string) == 18:\n        return string + ':'\n    if len(string) == 19:\n        return string + ':'\n    if len(string) == 20:\n        return string + ':'\n    if len(string) == 21:\n        return string + ':'\n    if len(string) == 22:\n        return string + ':'\n    if len(string) == 23:\n        return string + ':'\n    if len(string) == 24:\n        return string + ':'\n    if len(string) == 25:\n        return string + ':'\n    if len(string) == 26:\n        return string + ':'\n    if len(string) == 27:\n        return string + ':'\n    if len(string) == 28:\n        return string + ':'\n    if len(string) == 29:\n        return string + ':'\n    if len(string) == 30:\n        return string + ':'"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def replace_max_spaces(string: str, max_count: int) -> str:\n    \"\"\"\n    :type string: str\n    :type max_count: int\n    :rtype: str\n    \"\"\"\n    if not string:\n        return string\n    return \":\".join([string[i] for i in range(len(string)) if string[i] in [\" \", \",\", \".\"]])\n\n\ndef replace_max_commas(string: str, max_count: int) -> str:\n    \"\"\"\n    :type string: str\n    :type max_count: int\n    :rtype: str\n    \"\"\"\n    if not string:\n        return string\n    return string[0].join([string[i] for i in range(1, len(string)) if string[i] == \",\"])\n\n\ndef replace_max_dots(string: str, max_count: int) -> str:\n    \"\"\"\n    :type string: str\n    :type max_count: int\n    :rtype: str\n    \"\"\"\n    if not string:\n        return string\n    return string[0].join([string[i] for i in range(1, len(string)) if string[i] == \".\"])\n\n\ndef main():\n    print(replace_max_spaces(\",,,\", 3))\n    print(replace_max_spaces(\",,,,\", 3))\n    print(replace_max_spaces(\",,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\", 3))\n    print(replace_max_spaces(\",,,,,,\","
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def replace_max(text, max_occurences):\n    new_text = []\n    for word in text:\n        if word not in [\" \", \",\", \".\"]:\n            new_text.append(word)\n        else:\n            if len(new_text) > max_occurences:\n                new_text.pop()\n            else:\n                new_text.append(\":\")\n    return \"\".join(new_text)\n\n\nprint(replace_max(\"a, b, c, d\", 2))\nprint(replace_max(\"a, b, c, d\", 3))\nprint(replace_max(\"a, b, c, d\", 4))"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def replace_max_occurences(string, max_occurences):\n    new_string = \"\"\n    count = 0\n    for char in string:\n        if char == \" \":\n            count += 1\n            if count == max_occurences:\n                new_string += \":\"\n                count = 0\n        elif char == \",\" or char == \".\":\n            count -= 1\n            if count == 0:\n                new_string += char\n    return new_string\n\n\nif __name__ == \"__main__\":\n    string = \"a, b, c, d, e, f, g, h, i, j, k, l, m, n\"\n    max_occurences = 2\n    print(replace_max_occurences(string, max_occurences))\n\n    string = \"a, b, c, d, e, f, g, h, i, j, k, l, m, n\"\n    max_occurences = 3\n    print(replace_max_occurences(string, max_occurences))\n\n    string = \"a, b, c, d, e, f, g, h, i, j, k, l, m, n\"\n    max_occurences = 4\n    print(replace_max_occurences(string, max_occurences))\n\n    string = \"a, b, c, d, e, f, g, h, i, j, k, l, m, n\"\n    max_occurences = 5\n    print(replace_max_occurences(string, max_occurences))\n\n    string = \"a, b, c, d, e, f, g, h, i, j, k, l, m, n\"\n    max_occurences = 6\n    print(replace_max_occurences(string, max_occurences))\n\n    string = \"a, b, c, d, e, f, g, h, i, j, k, l, m, n\"\n    max_occurences = 7\n    print(replace_max_occurences(string, max_occurences))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def replace_max_spaces_comma_dots(str, n):\n    str = str.replace(' ', ':')\n    str = str.replace(',', ':')\n    str = str.replace('.', ':')\n    return str[:n]\n\n\n\nif __name__ == \"__main__\":\n    print(replace_max_spaces_comma_dots(\"This is a string\", 3))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def replace_max_space(s: str, max_space: int) -> str:\n    return s.replace(' ', ':').replace(',', ':').replace('.', ':')\n\n\nif __name__ == '__main__':\n    assert replace_max_space(\"Space\", 1) == \"Space\"\n    assert replace_max_space(\",\", 2) == \",:\"\n    assert replace_max_space(\".\", 3) == \".:\"\n    assert replace_max_space(\".\", 4) == \".:\""
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def replace_max_spaces_comma_dot(str_to_replace, max_count):\n    if not max_count:\n        return str_to_replace\n\n    if max_count == 1:\n        return str_to_replace\n\n    if max_count == 2:\n        return str_to_replace + \":\"\n\n    if max_count > 2:\n        return str_to_replace + \",\"\n\n    if max_count > 3:\n        return str_to_replace + \".\"\n\n    return str_to_replace"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def replace_max(text, max_occurences):\n    \"\"\"\n    :type text: str\n    :type max_occurences: int\n    :rtype: str\n    \"\"\"\n    if len(text) <= max_occurences:\n        return text\n    else:\n        return text[:max_occurences - 1] + \":\"\n\n\nif __name__ == \"__main__\":\n    print(replace_max(\"a, b, c\", 3))\n    print(replace_max(\"a, b, c\", 3))\n    print(replace_max(\"a, b, c\", 4))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def replace_max_spaces(text, max_spaces):\n    return text.replace(\" \", \":\" * (max_spaces - 1))\n\n\ndef replace_max_comma(text, max_comma):\n    return text.replace(\",\", \":\" * (max_comma - 1))\n\n\ndef replace_max_dot(text, max_dot):\n    return text.replace(\".\", \":\" * (max_dot - 1))\n\n\ndef main():\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 4))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 4))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 4))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 4))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 4))\n    print(replace_max_spaces(\"The quick brown fox jumps over the lazy dog.\", 4))\n\n    print(replace_max_comma(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_comma(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_comma(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_comma(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_comma(\"The quick brown fox jumps over the lazy dog.\", 3))\n    print(replace_max_comma(\"The quick brown fox jumps over the lazy dog.\","
    }
  ]
}