{
  "timestamp": "2025-09-14T13:18:20.035024",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 114,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def max_diff_binary(s):\n    \"\"\"\n    :type s: str\n    :rtype: int\n    \"\"\"\n    n = len(s)\n    if n < 2:\n        return 0\n    dp = [[0 for _ in range(n)] for _ in range(n)]\n\n    for i in range(n):\n        for j in range(i, n):\n            if s[i] == '1' and s[j] == '1':\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            else:\n                dp[i][j] = dp[i - 1][j]\n    return max(dp[-1]) - min(dp[-1])\n\n\nif __name__ == '__main__':\n    s = \"10101\"\n    print(max_diff_binary(s))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        # Runtime: 48 ms, faster than 82.63% of Python3 online submissions for Maximum Difference in Binary Strings.\n        # Memory Usage: 13.4 MB, less than 100.00% of Python3 online submissions for Maximum Difference in Binary Strings.\n        return max(sum(int(c) for c in s if c == \"1\"), sum(int(c) for c in s if c == \"0\"))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def max_diff(s):\n    length = len(s)\n    max_diff = 0\n    left = 0\n    right = 0\n    for i in range(length):\n        if s[i] == '0':\n            left = i\n        else:\n            right = i\n    for i in range(length - 1, -1, -1):\n        if s[i] == '1':\n            max_diff = max(max_diff, right - left)\n            left = right + 1\n        else:\n            right = i\n    return max_diff\n\n\nif __name__ == '__main__':\n    s = '100'\n    print(max_diff(s))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        # Runtime: 36 ms, faster than 78.48% of Python3 online submissions for Max Diff in Binary String.\n        # Memory Usage: 13.6 MB, less than 10.36% of Python3 online submissions for Max Diff in Binary String.\n        s = list(s)\n        count = [0] * 2\n        for i in range(len(s)):\n            if s[i] == '0':\n                count[0] += 1\n            else:\n                count[1] += 1\n        max_diff = 0\n        for i in range(2):\n            max_diff = max(max_diff, count[i] - count[i-1])\n        return max_diff\n\n\nif __name__ == '__main__':\n    s = Solution()\n    assert s.maxDiffInBinary(\"0101\") == 1\n    assert s.maxDiffInBinary(\"101\") == 3\n    assert s.maxDiffInBinary(\"0111\") == 1\n    assert s.maxDiffInBinary(\"1111\") == 1\n    assert s.maxDiffInBinary(\"111111\") == 3\n    assert s.maxDiffInBinary(\"11111\") == 3\n    assert s.maxDiffInBinary(\"111111111\") == 2"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def max_diff(s):\n    count0 = 0\n    count1 = 0\n    max_diff = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count0 += 1\n        else:\n            count1 += 1\n        max_diff = max(max_diff, count0 - count1)\n    return max_diff\n\n\ns
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        count = 0\n        max_diff = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                count += 1\n            else:\n                if count > max_diff:\n                    max_diff = count\n                count = 0\n        if count > max_diff:\n            max_diff = count\n        return max_diff\n\n\ns = Solution()\nprint(s.maxDiffInBinary(\"11\"))\nprint(s.maxDiffInBinary(\"100\"))\nprint(s.maxDiffInBinary(\"01\"))\nprint(s.maxDiffInBinary(\"10001\"))\nprint(s.maxDiffInBinary(\"111111\"))\nprint(s.maxDiffInBinary(\"1111011\"))\nprint(s.maxDiffInBinary(\"11110101\"))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        count_0 = 0\n        count_1 = 0\n        max_diff = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n            max_diff = max(max_diff, abs(count_1 - count_0))\n        return max_diff\n\n\ns = Solution()\nprint(s.maxDiffInBinary('100'))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def max_diff(binary_string):\n    max_diff = 0\n    max_count = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            max_count += 1\n        else:\n            max_diff = max(max_diff, max_count - i)\n            max_count = 0\n    return max_diff\n\nprint(max_diff(\"11\"))\nprint(max_diff(\"111\"))\nprint(max_diff(\"101\"))\nprint(max_diff(\"1011\"))\nprint(max_diff(\"11111\"))\nprint(max_diff(\"01\"))\nprint(max_diff(\"0101\"))\nprint(max_diff(\"110101\"))\nprint(max_diff(\"1101111\"))\nprint(max_diff(\"11011111\"))\nprint(max_diff(\"11110111\"))\nprint(max_diff(\"11111111\"))\nprint(max_diff(\"1111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"111111111111\"))\nprint(max_diff(\"1111"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def findMaxDiff(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if len(s) <= 1:\n            return 0\n        m = 0\n        for i in range(len(s) - 1):\n            if s[i] == '0':\n                m = max(m, i + 1)\n            else:\n                m = max(m, i)\n        return m\n\n\ns = Solution()\nprint(s.findMaxDiff('11'))\nprint(s.findMaxDiff
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def max_diff(s):\n    if len(s) == 1:\n        return 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n    return max(count_0, count_1)\n\n\nassert max_diff('100') == 0\nassert max_diff('1100') == 1\nassert max_diff('0110') == 2\nassert max_diff('0110') == 3\nassert max_diff('1100') == 4\nassert max_diff('1110') == 5\nassert max_diff('1100') == 6\nassert max_diff('1110') == 7\nassert max_diff('1100') == 8"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def max_diff(binary_string):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        max_diff = max(max_diff, abs(count_0 - count_1))\n\n    return max_diff\n\n\nif __name__ == '__main__':\n    print(max_diff(\"10001\"))\n    print(max_diff(\"1000110101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def maxDifference(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if len(s) <= 1:\n            return 0\n\n        n = len(s)\n        dp = [[0 for _ in range(n)] for _ in range(n)]\n        dp[0][0] = 0\n        for i in range(1, n):\n            dp[0][i] = dp[0][i-1] + s[i]\n\n        for i in range(1, n):\n            for j in range(1, i):\n                if s[j] == '0':\n                    dp[i][j] = max(dp[i][j-1], dp[i-1][j])\n\n        return max(dp[n-1][n-1], dp[n-1][0])"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def max_difference(s):\n    # write your code here\n    diff = 0\n    n = len(s)\n    for i in range(n):\n        if s[i] == '0':\n            diff = max(diff, i-n+1)\n        else:\n            diff = max(diff, i-n)\n    return diff"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        max_diff = 0\n        count_0 = 0\n        count_1 = 0\n        for c in s:\n            if c == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n            max_diff = max(max_diff, count_0 - count_1)\n        return max_diff\n\n\ns = Solution()\nprint(s.maxDiffInBinary('11'))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def max_diff_binary(s):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(s)):\n        if s[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_0 - count_1)\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    s = \"100\"\n    print(max_diff_binary(s))"
    },
    {
      "rank": 16,
      "score": 8.855039776476367,
      "candidate": "def find_max_diff(s):\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n\n    return max(count_0-count_1, 0)\n\nif __name__ == \"__main__\":\n    s = \"111111\"\n    print(find_max_diff(s))"
    },
    {
      "rank": 17,
      "score": 8.828696896077238,
      "candidate": "def max_diff(s):\n    \"\"\"\n    :type s: str\n    :rtype: int\n    \"\"\"\n    if len(s) <= 1:\n        return 0\n    ans = 0\n    left = 0\n    right = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            right += 1\n        else:\n            ans = max(ans, right - left)\n            left = right\n            right = 0\n    ans = max(ans, right - left)\n    return ans"
    },
    {
      "rank": 18,
      "score": 8.698086177496258,
      "candidate": "def find_max_diff(binary_str):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n\n    for i in range(len(binary_str)):\n        if binary_str[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        if count_0 > count_1:\n            max_diff = max(max_diff, count_0 - count_1)\n\n    return max_diff\n\n\nif __name__ == '__main__':\n    print(find_max_diff(\"01100\"))\n    print(find_max_diff(\"1011\"))\n    print(find_max_diff(\"0010\"))"
    },
    {
      "rank": 19,
      "score": 8.686577275414656,
      "candidate": "def max_diff(s):\n    max_diff = 0\n    count = 0\n    for i in s:\n        if i == '1':\n            count += 1\n        else:\n            max_diff = max(max_diff, count - max_diff)\n            count = 0\n    return max_diff\n\n\nprint(max_diff(\"011\"))\nprint(max_diff(\"011\"))\nprint(max_diff(\"1011\"))\nprint(max_diff(\"101\"))"
    },
    {
      "rank": 20,
      "score": 8.655701158266936,
      "candidate": "def max_diff(binary_string):\n    if not binary_string:\n        return 0\n    max_diff = 0\n    prev = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '1':\n            prev = 0\n            continue\n        elif binary_string[i] == '0':\n            max_diff = max(max_diff, prev)\n            prev = i + 1\n    return max_diff\n\n\n\nprint(max_diff(\"011101\"))\nprint(max_diff(\"10101\"))\nprint(max_diff(\"011101110011\"))\nprint(max_diff(\"0101001\"))\nprint(max_diff(\"01010010111\"))"
    },
    {
      "rank": 21,
      "score": 8.636445755243251,
      "candidate": "def max_diff(s):\n    return max(abs(s.count(0) - s.count(1)), s.count(0) + s.count(1))\n\nprint(max_diff('01010101010101'))"
    },
    {
      "rank": 22,
      "score": 8.54212592921432,
      "candidate": "def find_max_diff_0(binary_str):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_1 - count_0))\n    return max_diff\n\ndef find_max_diff_1(binary_str):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == \"1\":\n            count_1 += 1\n        else:\n            count_0 += 1\n        max_diff = max(max_diff, abs(count_1 - count_0))\n    return max_diff\n\ndef main():\n    binary_str = \"1101\"\n    print(find_max_diff_0(binary_str))\n    print(find_max_diff_1(binary_str))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 23,
      "score": 8.526148750919216,
      "candidate": "def max_diff(binary_string):\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n    return max(count_0, count_1)"
    },
    {
      "rank": 24,
      "score": 8.495628365770417,
      "candidate": "def max_diff_1(s):\n    max_diff = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        max_diff = max(max_diff, count)\n    return max_diff\n\n\ndef max_diff_2(s):\n    max_diff = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        max_diff = max(max_diff, count - i)\n    return max_diff\n\n\ndef max_diff_3(s):\n    max_diff = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '1':\n            count += 1\n        else:\n            count -= 1\n        max_diff = max(max_diff, count - i)\n    return max_diff\n\n\ndef max_diff_4(s):\n    max_diff = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count += 1\n        else:\n            count -= 1\n        max_diff = max(max_diff, count + i)\n    return max_diff\n\n\nif __name__ == '__main__':\n    print(max_diff_1(\"11111\"))\n    print(max_diff_2(\"11111\"))\n    print(max_diff_3(\"11111\"))\n    print(max_diff_4(\"11111\"))"
    },
    {
      "rank": 25,
      "score": 8.435129674275856,
      "candidate": "def max_diff_0s(binary_str):\n    max_0s = 0\n    max_1s = 0\n\n    for i in range(len(binary_str)):\n        if binary_str[i] == '0':\n            max_0s = max(max_0s, i)\n        else:\n            max_1s = max(max_1s, i)\n\n    return max(max_0s - max_1s, 0)\n\n\nif __name__ == '__main__':\n    print(max_diff_0s(\"110011\"))"
    },
    {
      "rank": 26,
      "score": 8.425721812833558,
      "candidate": "def find_max_diff(s: str) -> int:\n    count = [0] * 2\n    for i in range(len(s)):\n        if s[i] == \"1\":\n            count[0] += 1\n        else:\n            count[1] += 1\n    max_diff = 0\n    for i in range(2):\n        for j in range(i + 1, len(s)):\n            if count[i] - count[j] > max_diff:\n                max_diff = count[i] - count[j]\n    return max_diff\n\n\nassert find_max_diff(\"11\") == 0\nassert find_max_diff(\"1111\") == 5\nassert find_max_diff(\"110111\") == 3\nassert find_max_diff(\"1101111011\") == 7\nassert find_max_diff(\"11011110110\") == 9\nassert find_max_diff(\"110111101100\") == 12\nassert find_max_diff(\"1101111011011\") == 16\nassert find_max_diff(\"11011110110011\") == 19"
    },
    {
      "rank": 27,
      "score": 8.408495726139936,
      "candidate": "def max_diff(s):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in s:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_1 - count_0)\n    return max_diff\n\n\nprint(max_diff('100'))"
    },
    {
      "rank": 28,
      "score": 8.383568835637657,
      "candidate": "def find_max_diff(binary_string):\n    count = 0\n    max_diff = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count += 1\n        else:\n            max_diff = max(max_diff, count - i)\n            count = 0\n    return max_diff\n\n\nprint(find_max_diff('0111'))"
    },
    {
      "rank": 29,
      "score": 8.383564567016377,
      "candidate": "def max_diff(string):\n    n = len(string)\n    if n == 0:\n        return 0\n    # base case\n    if n == 1:\n        return 1\n    max_diff = 0\n    max_diff_of_1 = 0\n    # initialize\n    for i in range(n):\n        if string[i] == \"0\":\n            max_diff_of_1 = max(max_diff_of_1, max_diff)\n            max_diff = 0\n        else:\n            max_diff += 1\n    # print(max_diff_of_1)\n    return max(max_diff_of_1, max_diff)\n\n\nif __name__ == \"__main__\":\n    print(max_diff(\"111111\"))\n    print(max_diff(\"101010101\"))\n    print(max_diff(\"1101010101\"))\n    print(max_diff(\"1101010101\"))\n    print(max_diff(\"1101010101\"))\n    print(max_diff(\"11111111\"))\n    print(max_diff(\"11111111\"))\n    print(max_diff(\"11111111\"))\n    print(max_diff(\"11111111\"))\n    print(max_diff(\"11111111\"))\n    print(max_diff(\"11111111\"))\n    print(max_diff(\"11111111\"))"
    },
    {
      "rank": 30,
      "score": 8.368604069498193,
      "candidate": "def max_difference(binary):\n    n = len(binary)\n    max_diff = 0\n    left = 0\n    right = 0\n    while right < n:\n        if binary[right] == '1':\n            right += 1\n        else:\n            max_diff = max(max_diff, right - left)\n            left = right\n    return max_diff\n\n\ndef max_difference_2(binary):\n    n = len(binary)\n    max_diff = 0\n    left = 0\n    right = 0\n    while right < n:\n        if binary[right] == '1':\n            right += 1\n        else:\n            if binary[left] == '0':\n                max_diff = max(max_diff, right - left)\n            else:\n                left = right\n    return max_diff\n\n\nprint(max_difference
    },
    {
      "rank": 31,
      "score": 8.366157483591229,
      "candidate": "def max_diff(s):\n    n = len(s)\n    max_diff = 0\n    max_diff_pos = 0\n    for i in range(n):\n        if s[i] == '1':\n            max_diff_pos = i\n            if i > 0:\n                max_diff += i - max_diff_pos\n    return max_diff\n\n\ndef main():\n    print(max_diff('1110011'))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 32,
      "score": 8.364049226723129,
      "candidate": "def max_diff_0s_1s(s):\n    # Write your code here\n    count_0s = 0\n    count_1s = 0\n    max_diff = 0\n    for i in s:\n        if i == '0':\n            count_0s += 1\n        else:\n            count_1s += 1\n        max_diff = max(max_diff, count_0s - count_1s)\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_diff_0s_1s(\"101\"))"
    },
    {
      "rank": 33,
      "score": 8.344323051536202,
      "candidate": "def max_difference(binary):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for c in binary:\n        if c == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_0 - count_1)\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_difference('11101101'))"
    },
    {
      "rank": 34,
      "score": 8.3246783639949,
      "candidate": "class Solution:\n    # @param s, a string\n    # @return an integer\n    def maxDiff(self, s):\n        if len(s) < 2:\n            return 0\n\n        count0, count1 = 0, 0\n        for i in range(1, len(s)):\n            if s[i] == '0':\n                count0 += 1\n            else:\n                count1 += 1\n\n        return max(count0 - count1, count0)\n\n\ns = Solution()\nprint(s.maxDiff('11010111'))"
    },
    {
      "rank": 35,
      "score": 8.323955844313204,
      "candidate": "def max_diff_binary(s):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_1 - count_0))\n    return max_diff\n\n\nprint(max_diff_binary('11'))\nprint(max_diff_binary('1010011'))\nprint(max_diff_binary
    },
    {
      "rank": 36,
      "score": 8.322381104101357,
      "candidate": "def max_diff_0_1(binary_string):\n    # Write your code here\n    if not binary_string:\n        return 0\n    max_0 = max_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            max_0 = max(max_0, i-max_1)\n            max_1 = max(max_1, i-max_0)\n    return max(max_0, max_1)\n\nprint(max_diff_0_1('110011'))"
    },
    {
      "rank": 37,
      "score": 8.276713308247112,
      "candidate": "def max_diff_binary(s):\n    ans = 0\n    n = len(s)\n    s_len = n\n    for i in range(n):\n        if s[i] == '1':\n            ans = max(ans, s_len - i)\n            s_len -= 1\n    return ans\n\n\nprint(max_diff_binary(\"1100110011001100110011001101\"))\nprint(max_diff_binary(\"0111111101111111111111110101\"))\nprint(max_diff_binary(\"110111011101110111010111\"))\nprint(max_diff_binary(\"00001111\"))"
    },
    {
      "rank": 38,
      "score": 8.181108353157494,
      "candidate": "def max_diff_binary(binary):\n    \"\"\"\n    :type binary: str\n    :rtype: int\n    \"\"\"\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in binary:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    print(max_diff_binary(\"11\"))\n    print(max_diff_binary(\"10101\"))\n    print(max_diff_binary(\"1100\"))"
    },
    {
      "rank": 39,
      "score": 8.16943960291591,
      "candidate": "def max_difference(s: str) -> int:\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n\n    for i in s:\n        if i == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_1 - count_0)\n\n    return max_diff\n\n\nprint(max_difference(\"100\"))"
    },
    {
      "rank": 40,
      "score": 8.127025095451978,
      "candidate": "def max_diff(s):\n    if len(s) <= 1:\n        return 0\n    if s[0] == '0':\n        return 1\n    l = 0\n    r = 1\n    max_diff = 0\n    while r < len(s):\n        if s[r] == '0':\n            if s[l] == '1':\n                max_diff = max(max_diff, r - l)\n            l += 1\n        else:\n            if s[l] == '1':\n                r += 1\n    return max_diff\n\nprint(max_diff(\"1101\"))"
    },
    {
      "rank": 41,
      "score": 7.763310717381112,
      "candidate": "def max_diff_binary(s):\n    max_diff = 0\n    zero_count = 0\n    one_count = 0\n\n    for i in s:\n        if i == \"0\":\n            zero_count += 1\n        else:\n            one_count += 1\n\n        max_diff = max(max_diff, zero_count - one_count)\n\n    return max_diff"
    },
    {
      "rank": 42,
      "score": 3.926139092254469,
      "candidate": "def max_diff_in_binary_string(binary_string):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        if count_0 > count_1:\n            max_diff = max(max_diff, i - count_0 + 1)\n\n    return max_diff\n\n\nif __name__ == '__main__':\n    binary_string = \"100010101010101\"\n    print(max_diff_in_binary_string(binary_string))"
    },
    {
      "rank": 43,
      "score": 3.782321827907003,
      "candidate": "def max_diff_0s_1s(binary_string):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == \"1\":\n            count_1 += 1\n        else:\n            count_0 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\nprint(max_diff_0s_1s(\"101\"))\nprint(max_diff_0s_1s(\"0011\"))\nprint(max_diff_0s_1s(\"10101\"))\nprint(max_diff_0s_1s(\"110011\"))\nprint(max_diff_0s_1s(\"1010111\"))"
    },
    {
      "rank": 44,
      "score": 3.7690182832329846,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if len(s) <= 1:\n            return len(s)\n\n        i, j = 0, 0\n        count = [0] * 2\n        while i < len(s) - 1:\n            if s[i] == \"0\":\n                count[0] += 1\n            else:\n                count[1] += 1\n\n            if s[i+1] == \"0\":\n                count[1] += 1\n            else:\n                count[0] += 1\n\n            i += 1\n\n        max_diff = 0\n        for i in range(2):\n            for j in range(i + 1, len(s)):\n                if count[i] > count[j]:\n                    max_diff = max(max_diff, j - i)\n\n        return max_diff"
    },
    {
      "rank": 45,
      "score": 3.761514928204013,
      "candidate": "class Solution:\n    def findMaxDiff(self, s: str) -> int:\n        diff = 0\n        left, right = 0, 0\n        for i in range(len(s)):\n            if s[i] == '1':\n                right += 1\n            else:\n                diff = max(diff, right - left)\n                left = right\n        diff = max(diff, right - left)\n        return diff\n\n\nif __name__ == '__main__':\n    assert Solution().findMaxDiff('111111') == 4\n    assert Solution().findMaxDiff('11') == 1\n    assert Solution().findMaxDiff('100') == 1\n    assert Solution().findMaxDiff('01') == 0"
    },
    {
      "rank": 46,
      "score": 3.732824384460777,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        count_0 = 0\n        count_1 = 0\n        for c in s:\n            if c == \"0\":\n                count_0 += 1\n            else:\n                count_1 += 1\n        return max(count_0, count_1)"
    },
    {
      "rank": 47,
      "score": 3.6781200142854114,
      "candidate": "def binary_string_length(binary_string):\n    if len(binary_string) == 0:\n        return 0\n    result = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        result = max(result, count_0 - count_1)\n    return result\n\n\nprint(binary_string_length(\"1100\"))"
    },
    {
      "rank": 48,
      "score": 3.5285611131094576,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        count = 0\n        for i in s:\n            if i == '0':\n                count += 1\n            else:\n                count -= 1\n        return count\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    assert s.maxDiffInBinary('11') == 0\n    assert s.maxDiffInBinary('01') == 1\n    assert s.maxDiffInBinary('10') == 2"
    },
    {
      "rank": 49,
      "score": 3.5154997612479755,
      "candidate": "class Solution(object):\n    def maxDifference(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        l = len(s)\n        l = l - l % 2\n        if l == 0:\n            return 0\n        # print(s)\n        if l == 1:\n            return 1\n        # print(l)\n        dp = [[0 for _ in range(l+1)] for _ in range(2)]\n        dp[0][0] = 0\n        dp[0][1] = s[0]\n        for i in range(1, l+1):\n            dp[0][i] = max(dp[0][i-1], dp[0][i-2]+1)\n            dp[1][i] = max(dp[1][i-1], dp[1][i-2]+1)\n        for i in range(1, l+1):\n            for j in range(2, l+1):\n                if s[i-1] == '0':\n                    dp[i][j] = max(dp[i-1][j-1], dp[i-1][j-2]+1)\n                else:\n                    dp[i][j] = max(dp[i-1][j-1], dp[i-1][j-2])\n        return max(dp[l][l], dp[l-1][l])\n\n\nif __name__ == '__main__':\n    print(Solution().maxDifference(\"10111\"))\n    print(Solution().maxDifference(\"11101\"))\n    print(Solution().maxDifference(\"0111\"))"
    },
    {
      "rank": 50,
      "score": 3.501766448946012,
      "candidate": "def max_diff(binary_string):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in binary_string:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        if count_0 > count_1:\n            max_diff = count_0 - count_1\n    return max_diff\n\n\nif __name__ == '__main__':\n    binary_string = '10100'\n    print(max_diff(binary_string))"
    },
    {
      "rank": 51,
      "score": 3.4112724560515946,
      "candidate": "def max_diff(s: str) -> int:\n    \"\"\"\n    :type s: str\n    :rtype: int\n    \"\"\"\n    if len(s) == 1:\n        return 0\n    res = 0\n    i = 0\n    j = 0\n    while i < len(s) and j < len(s):\n        if s[i] == \"0\":\n            j += 1\n        else:\n            res = max(res, j - i)\n            i = j\n            j = 0\n    res = max(res, j - i)\n    return res\n\n\nprint(max_diff(\"1111\"))\nprint(max_diff(\"0101\"))\nprint(max_diff(\"1101\"))"
    },
    {
      "rank": 52,
      "score": 3.410951252187612,
      "candidate": "def max_diff(s):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_1 - count_0)\n    return max_diff\n\n\ns = \"011\"\nprint(max_diff(s))\n\ns = \"011\"\nprint(max_diff(s))\n\ns = \"11\"\nprint(max_diff(s))\n\ns = \"101\"\nprint(max_diff(s))\n\ns = \"100\"\nprint(max_diff(s))"
    },
    {
      "rank": 53,
      "score": 3.3837173645764542,
      "candidate": "class Solution:\n    def findMaxDiff(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        # \u5bf9\u5b57\u7b26\u4e32\u4e2d\u76840\u8fdb\u884c\u6392\u5e8f\n        s = sorted(s)\n        # \u5bf9\u5b57\u7b26\u4e32\u4e2d\u76841\u8fdb\u884c\u6392\u5e8f\n        s = sorted(s, key=lambda x: -(x == '0'))\n        # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a0\u7684\u60c5\u51b5\n        if s[0] == '0':\n            # \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u67090\u5219\u8fd4\u56de1\n            return 1\n\n        # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a1\u7684\u60c5\u51b5\n        if s[-1] == '1':\n            # \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u67091\u5219\u8fd4\u56de0\n            return 0\n\n        # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a0\u7684\u60c5\u51b5\n        if len(s) == 1:\n            return len(s)\n\n        # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a1\u7684\u60c5\u51b5\n        if s[0] == '0' and s[-1] == '1':\n            # \u8fd4\u56de\u5dee\u5206\n            return len(s) - 1\n\n        # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a1\u7684\u60c5\u51b5\n        if s[0] == '1' and s[-1] == '"
    },
    {
      "rank": 54,
      "score": 3.3238442690503462,
      "candidate": "class Solution(object):\n    def maxDifference(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if s is None or len(s) == 0:\n            return 0\n\n        dp = [[0 for _ in range(len(s) + 1)] for _ in range(len(s) + 1)]\n        dp[0][0] = 0\n        dp[0][1] = 0\n\n        for i in range(1, len(s) + 1):\n            dp[i][0] = dp[i - 1][0]\n            dp[i][1] = dp[i - 1][1]\n\n            for j in range(i - 1, -1, -1):\n                if s[j] == '0':\n                    dp[i][j] = max(dp[i][j], dp[i + 1][j - 1] + 1)\n                else:\n                    dp[i][j] = max(dp[i][j], dp[i + 1][j] + 1)\n\n        return dp[len(s)][len(s)]"
    },
    {
      "rank": 55,
      "score": 3.305838144420434,
      "candidate": "def find_max_diff(binary_string):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\nprint(find_max_diff(\"111111\"))\nprint(find_max_diff(\"11\"))\nprint(find_max_diff(\"111111\"))"
    },
    {
      "rank": 56,
      "score": 3.2712800217929825,
      "candidate": "class Solution(object):\n    def find_max_diff(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        count_0 = 0\n        count_1 = 0\n        max_diff = 0\n        for i in s:\n            if i == \"0\":\n                count_0 += 1\n            else:\n                count_1 += 1\n            max_diff = max(max_diff, count_0 - count_1)\n        return max_diff\n\n\ns = Solution()\nprint(s.find_max_diff(\"10101\"))"
    },
    {
      "rank": 57,
      "score": 3.2483570765056164,
      "candidate": "class Solution:\n    def maxDiff(self, s: str) -> int:\n        count_0, count_1 = 0, 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n        return max(count_0, count_1) - min(count_0, count_1)\n\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    assert sol.maxDiff(\"1111\") == 1\n    assert sol.maxDiff(\"0111\") == 2\n    assert sol.maxDiff(\"0000\") == 2\n    assert sol.maxDiff(\"1100\") == 2\n    assert sol.maxDiff(\"1011\") == 3"
    },
    {
      "rank": 58,
      "score": 3.180818012523817,
      "candidate": "def max_diff(s):\n    # write your code here\n    if s is None or len(s) == 0:\n        return 0\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in s:\n        if i == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_0 - count_1)\n    return max_diff\n\n\ns = '100'\nprint(max_diff(s))"
    },
    {
      "rank": 59,
      "score": 3.180697802754207,
      "candidate": "class Solution:\n    def findMaxDiff(self, s: str) -> int:\n        count = 0\n        max_diff = 0\n        for i in s:\n            if i == \"0\":\n                count += 1\n            else:\n                max_diff = max(max_diff, count)\n                count = 0\n        return max(max_diff, count)"
    },
    {
      "rank": 60,
      "score": 3.178556285755873,
      "candidate": "class Solution:\n    # @param A : string\n    # @return an integer\n    def maxDiff(self, A):\n        n = len(A)\n        max_diff = 0\n        count_0 = 0\n        count_1 = 0\n        for i in range(n):\n            if A[i] == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n            max_diff = max(max_diff, abs(count_0 - count_1))\n        return max_diff\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.maxDiff(\"011\"))"
    },
    {
      "rank": 61,
      "score": 3.1718091447842305,
      "candidate": "def find_max_difference(binary_string):\n    binary_string = binary_string[::-1]\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\nbinary_string = \"1100\"\nprint(find_max_difference(binary_string))"
    },
    {
      "rank": 62,
      "score": 3.165631715701782,
      "candidate": "def max_diff(s):\n    l = len(s)\n    if l == 0:\n        return 0\n    dp = [0 for _ in range(l)]\n    dp[0] = 1\n    for i in range(1, l):\n        if s[i] == '0':\n            dp[i] = dp[i - 1] + 1\n        else:\n            dp[i] = dp[i - 1]\n    max_diff = 0\n    for i in range(l - 1, -1, -1):\n        if s[i] == '1':\n            max_diff = max(dp[i + 1], max_diff)\n    return max_diff\n\n\nif __name__ == '__main__':\n    assert max_diff(\"1111\") == 0\n    assert max_diff(\"0111\") == 1\n    assert max_diff(\"10111\") == 2\n    assert max_diff(\"111101\") == 0\n    assert max_diff(\"01110111\") == 2"
    },
    {
      "rank": 63,
      "score": 3.1620419846973977,
      "candidate": "def max_diff_of_zeros(s):\n    # write your code here\n    zeros = 0\n    ones = 0\n    for c in s:\n        if c == '0':\n            zeros += 1\n        else:\n            ones += 1\n    return max(zeros, ones)\n\nif __name__ == '__main__':\n    s = \"11\"\n    print(max_diff_of_zeros(s))"
    },
    {
      "rank": 64,
      "score": 3.1209811357830173,
      "candidate": "def max_diff(binary_str):\n    # write your code here\n    binary_str = binary_str.replace(\"1\", \"0\")\n    binary_str = binary_str.replace(\"0\", \"1\")\n    max_len = 0\n    max_count = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == \"1\":\n            max_count += 1\n        else:\n            if max_count > max_len:\n                max_len = max_count\n            max_count = 0\n    if max_count > max_len:\n        max_len = max_count\n    return max_len\n\n\nprint(max_diff(\"1010111\"))"
    },
    {
      "rank": 65,
      "score": 3.104431797502378,
      "candidate": "def max_diff(binary_string):\n    # Write your code here\n    n = len(binary_string)\n    if n < 2:\n        return 0\n    max_diff = 0\n    count_zero = 0\n    count_one = 0\n    for i in range(n):\n        if binary_string[i] == '0':\n            count_zero += 1\n        elif binary_string[i] == '1':\n            count_one += 1\n    max_diff = max(max_diff, count_zero - count_one)\n    return max_diff\n\n\nprint(max_diff('01'))"
    },
    {
      "rank": 66,
      "score": 3.085684140594985,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        d = {}\n        for i in range(len(s)):\n            d[s[i]] = d.get(s[i], 0) + 1\n        max_diff = 0\n        for key in d:\n            if key in s:\n                max_diff = max(max_diff, d[key] - i)\n        return max_diff\n\n\nprint(Solution().maxDiffInBinary(\"100\"))\nprint(Solution().maxDiffInBinary(\"101\"))\nprint(Solution().maxDiffInBinary(\"10\"))\nprint(Solution().maxDiffInBinary(\"11\"))\nprint(Solution().maxDiffInBinary(\"10101\"))"
    },
    {
      "rank": 67,
      "score": 3.055461294854933,
      "candidate": "class Solution:\n    def maxDifference(self, s: str) -> int:\n        count = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                count += 1\n        max_diff = 0\n        for i in range(1, len(s)):\n            if s[i] == '0' and s[i-1] == '1':\n                count += 1\n            else:\n                max_diff = max(max_diff, count - i)\n                count = 0\n        return max_diff\n\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    print(sol.maxDifference(\"1111\"))"
    },
    {
      "rank": 68,
      "score": 3.045880388267751,
      "candidate": "def find_max_diff(s):\n    ans = 0\n    count0 = 0\n    count1 = 0\n    for i in range(len(s)):\n        if s[i] == '0':\n            count0 += 1\n        else:\n            count1 += 1\n        ans = max(ans, count0 - count1)\n    return ans\n\n\nprint(find_max_diff(\"1101\"))\nprint(find_max_diff(\"10101\"))\nprint(find_max_diff(\"0101\"))"
    },
    {
      "rank": 69,
      "score": 3.043523534119086,
      "candidate": "class Solution:\n    def maxDifference(self, s: str) -> int:\n        count_0, count_1 = 0, 0\n        for c in s:\n            if c == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n        return max(count_0, count_1)"
    },
    {
      "rank": 70,
      "score": 3.033764102343962,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if s is None or len(s) == 0:\n            return 0\n        n = len(s)\n        result = 0\n        result_max = 0\n        for i in range(n):\n            if s[i] == '0':\n                result_max = max(result, result_max)\n                result = 0\n            else:\n                result += 1\n        return max(result_max, result)\n\na = Solution()\nprint(a.maxDiffInBinary(\"111111\"))"
    },
    {
      "rank": 71,
      "score": 2.993251387631033,
      "candidate": "def max_diff(binary_string):\n    if len(binary_string) == 0:\n        return 0\n    count = 0\n    max_count = 0\n    for i in range(0, len(binary_string)):\n        if binary_string[i] == '0':\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 0\n    max_count = max(max_count, count)\n    return max_count - count\n\n\ndef main():\n    binary_string = \"11100\"\n    print(max_diff(binary_string))\n\n\nmain()"
    },
    {
      "rank": 72,
      "score": 2.94217585880588,
      "candidate": "class Solution:\n    def findMaxDiff(self, s: str) -> int:\n        count = 0\n        for c in s:\n            if c == '0':\n                count += 1\n            else:\n                count -= 1\n        return max(count, abs(count))"
    },
    {
      "rank": 73,
      "score": 2.9071705116680913,
      "candidate": "def max_diff_0_1(binary_string):\n    # Fill this in.\n    binary_string = binary_string.replace('0', '')\n    binary_string = binary_string.replace('1', '')\n    return max(len(binary_string) - len(binary_string.replace('0', '')), len(binary_string) - len(binary_string.replace('1', '')))\n\n\ndef max_diff_0_1_1(binary_string):\n    # Fill this in.\n    binary_string = binary_string.replace('0', '')\n    binary_string = binary_string.replace('1', '')\n    return max(len(binary_string) - len(binary_string.replace('0', '')), len(binary_string) - len(binary_string.replace('1', '')))\n\n\ndef max_diff_0_1_2(binary_string):\n    # Fill this in.\n    binary_string = binary_string.replace('0', '')\n    binary_string = binary_string.replace('1', '')\n    return max(len(binary_string) - len(binary_string.replace('0', '')), len(binary_string) - len(binary_string.replace('1', '')))\n\n\ndef max_diff_0_1_3(binary_string):\n    # Fill this in.\n    binary_string = binary_string.replace('0', '')\n    binary_string = binary_string.replace('1', '')\n    return max(len(binary_string) - len(binary_string.replace('0', '')), len(binary_string) - len(binary_string.replace('1', '')))\n\n\ndef max_diff_0_1_4(binary_string):\n    # Fill this in.\n    binary_string = binary_string.replace('0', '')\n    binary_string = binary_string.replace('1', '')\n    return max(len(binary_string) - len(binary_string.replace('0', '')), len(binary_string) - len(binary_string.replace('1', '')))\n\n\ndef max_diff_0_1_5(binary_string):\n    # Fill this in"
    },
    {
      "rank": 74,
      "score": 2.890164056081244,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if s == '0':\n            return 0\n        n = len(s)\n        dp = [[0 for _ in range(n+1)] for _ in range(n+1)]\n        dp[0][0] = 1\n        for i in range(1, n+1):\n            dp[i][0] = dp[i-1][0]\n            dp[i][i] = dp[i-1][i]\n        for i in range(1, n+1):\n            dp[0][i] = dp[0][i-1]\n            dp[i][i] = dp[i-1][i]\n        for i in range(1, n+1):\n            for j in range(1, n+1):\n                if s[i-1] == '0':\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n                else:\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1] + 1)\n        return dp[n][n]"
    },
    {
      "rank": 75,
      "score": 2.887111849756732,
      "candidate": "def max_difference(binary_str):\n    n = len(binary_str)\n    if n == 0:\n        return 0\n    binary_str = binary_str[::-1]\n    sum_0 = 0\n    sum_1 = 0\n    res = 0\n    for i in range(n):\n        if binary_str[i] == '0':\n            sum_0 += 1\n        else:\n            sum_1 += 1\n        res = max(res, abs(sum_0 - sum_1))\n    return res\n\n\nprint(max_difference(\"11001100\"))"
    },
    {
      "rank": 76,
      "score": 2.8504963247670663,
      "candidate": "def max_0_1(str):\n    n = len(str)\n    if n == 0:\n        return 0\n\n    dp = [[0] * n for _ in range(n)]\n    dp[0][0] = 1\n\n    for i in range(1, n):\n        dp[i][0] = dp[i - 1][0]\n        for j in range(i - 1):\n            if str[j] == '0':\n                dp[i][j + 1] = max(dp[i][j + 1], dp[i - 1][j] + 1)\n\n    return max(dp[n - 1])\n\n\ndef test():\n    assert max_0_1(\"101010101010101010101010101\") == 3\n    assert max_0_1(\"101010101010101010101010101010101\") == 2\n    assert max
    },
    {
      "rank": 77,
      "score": 2.7671351232148718,
      "candidate": "class Solution:\n    def maxDifference(self, s: str) -> int:\n        count = [0] * len(s)\n        count[0] = 1\n        for i in range(1, len(s)):\n            if s[i] == '0':\n                count[i] = count[i - 1] + 1\n            else:\n                count[i] = count[i - 1]\n        max_diff = 0\n        for i in range(len(s)):\n            for j in range(len(s)):\n                if i == j:\n                    continue\n                if count[i] > count[j]:\n                    max_diff = max(max_diff, abs(i - j))\n        return max_diff"
    },
    {
      "rank": 78,
      "score": 2.760412881077355,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        dp = [0] * len(s)\n        dp[0] = 1\n        for i in range(1, len(s)):\n            dp[i] = max(dp[i - 1], dp[i - 1] + (s[i] == '1'))\n        return dp[-1]\n\n\ns = Solution()\nprint(s.maxDiffInBinary('11'))"
    },
    {
      "rank": 79,
      "score": 2.7408648908631763,
      "candidate": "def max_0_1(binary_string):\n    count_0 = 0\n    count_1 = 0\n    max_diff = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\nprint(max_0_1(\"11\"))"
    },
    {
      "rank": 80,
      "score": 2.7278086377374087,
      "candidate": "class Solution:\n    def maxDifference(self, s: str) -> int:\n        n = len(s)\n        dp = [0 for i in range(n + 1)]\n        dp[0] = 1\n        for i in range(1, n + 1):\n            if s[i - 1] == \"1\":\n                dp[i] = dp[i - 2]\n            else:\n                dp[i] = dp[i - 1] + 1\n\n        ans = 0\n        for i in range(1, n + 1):\n            ans = max(ans, dp[i] - dp[i - 1])\n        return ans\n\n\nif __name__ == \"__main__\":\n    s = \"110110\"\n    out = 3\n    res = Solution().maxDifference(s)\n    assert res == out, f\"Result: {res}, Expected: {out}\"\n\n    s = \"110110111000101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101"
    },
    {
      "rank": 81,
      "score": 2.718856235379514,
      "candidate": "def max_diff_zero_one(s):\n    zero_count = 0\n    one_count = 0\n    for c in s:\n        if c == \"0\":\n            zero_count += 1\n        else:\n            one_count += 1\n    return max(zero_count - one_count, 0)\n\n\nif __name__ == \"__main__\":\n    assert max_diff_zero_one(\"100\") == 1\n    assert max_diff_zero_one(\"10001\") == 2\n    assert max_diff_zero_one(\"1111\") == 3\n    assert max_diff_zero_one(\"110111\") == 5\n    assert max_diff_zero_one(\"11001\") == 7"
    },
    {
      "rank": 82,
      "score": 2.6996806550405976,
      "candidate": "def max_diff(s):\n    # write your code here\n    max_0_1 = 0\n    max_1_0 = 0\n    for i in range(len(s)):\n        if s[i] == \"0\":\n            max_0_1 += 1\n        else:\n            max_1_0 += 1\n\n    return max(max_0_1, max_1_0)\n\n\nprint(max_diff(\"1111\"))"
    },
    {
      "rank": 83,
      "score": 2.6991466938853015,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        count = 0\n        i = 0\n        j = 0\n        result = 0\n        while i < len(s) and j < len(s):\n            if s[i] == '1':\n                count += 1\n            elif s[j] == '1':\n                count -= 1\n            if count == 0:\n                result = max(result, j - i)\n            i += 1\n            j += 1\n        return result"
    },
    {
      "rank": 84,
      "score": 2.6615389998470205,
      "candidate": "def find_max_diff_in_binary_string(binary_string):\n    binary_string = list(binary_string)\n    binary_string.sort()\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(len(binary_string)):\n        if binary_string[i] == '0':\n            count_0 += 1\n        elif binary_string[i] == '1':\n            count_1 += 1\n        max_diff = max(max_diff, abs(count_0 - count_1))\n    return max_diff\n\n\nprint(find_max_diff_in_binary_string('01'))\nprint(find_max_diff_in_binary_string('10101'))\nprint(find_max_diff_in_binary_string('110101'))\nprint(find_max_diff_in_binary_string('11010100'))"
    },
    {
      "rank": 85,
      "score": 2.6400778958026456,
      "candidate": "class Solution(object):\n    def maxDiff(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if len(s) == 0:\n            return 0\n        if len(s) == 1:\n            return max(len(s) - 1, 0)\n        i = 0\n        j = 0\n        max_diff = 0\n        while i < len(s) and j < len(s):\n            if s[i] == '1':\n                i += 1\n                if i == len(s):\n                    max_diff = max(max_diff, j - i)\n            else:\n                j += 1\n                if j == len(s):\n                    max_diff = max(max_diff, i - j)\n        return max_diff\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.maxDiff('01')\n    print s.maxDiff('10')\n    print s.maxDiff('11')\n    print s.maxDiff('101')\n    print s.maxDiff('10101')\n    print s.maxDiff('11101')\n    print s.maxDiff('11111')\n    print s.maxDiff('1011011')"
    },
    {
      "rank": 86,
      "score": 2.5957531985534064,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        i = 0\n        j = 0\n        max_diff = 0\n        while i < len(s) and j < len(s):\n            if s[i] == \"0\":\n                if s[j] == \"1\":\n                    i += 1\n                    j += 1\n                else:\n                    max_diff = max(max_diff, i - j)\n                    j += 1\n            else:\n                if s[j] == \"1\":\n                    j += 1\n                else:\n                    i += 1\n        return max_diff"
    },
    {
      "rank": 87,
      "score": 2.580391238388681,
      "candidate": "class Solution:\n    def findMaximumDifference(self, s: str) -> int:\n        count_0 = 0\n        count_1 = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                count_0 += 1\n            else:\n                count_1 += 1\n        return max(count_0 - count_1, 0)"
    },
    {
      "rank": 88,
      "score": 2.5459879622393946,
      "candidate": "def max_diff(s):\n    max_diff = 0\n    left = 0\n    right = 0\n\n    for i in range(len(s)):\n        if s[i] == '1':\n            right += 1\n        else:\n            left = max(left, right)\n            max_diff = max(max_diff, right - left)\n            left = 0\n            right = 0\n\n    return max(max_diff, right - left)\n\n\nprint(max_diff('0100'))"
    },
    {
      "rank": 89,
      "score": 2.446832512996986,
      "candidate": "def max_diff(binary_str):\n    # write your code here\n    count = 0\n    max_diff = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == '1':\n            count += 1\n        else:\n            if count!= 0:\n                max_diff = max(max_diff, i - count)\n            count = 0\n    return max_diff\n\n\nprint(max_diff('1010'))"
    },
    {
      "rank": 90,
      "score": 2.4245032112888487,
      "candidate": "def max_diff_binary(binary):\n    binary_str = \"\".join(binary)\n    max_diff = 0\n    left = 0\n    right = 0\n    for i in range(len(binary_str)):\n        if binary_str[i] == \"0\":\n            right = i\n            while right < len(binary_str) and binary_str[right] == \"0\":\n                right += 1\n            max_diff = max(max_diff, right - left + 1)\n            left = right + 1\n    return max_diff\n\n\nbinary = \"11101101\"\nprint(max_diff_binary(binary))"
    },
    {
      "rank": 91,
      "score": 2.4018966879596646,
      "candidate": "def max_diff_0(binary):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n\n    for i in binary:\n        if i == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n\n        max_diff = max(max_diff, count_1 - count_0)\n\n    return max_diff\n\n\ndef max_diff_1(binary):\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n\n    for i in binary:\n        if i == \"1\":\n            count_1 += 1\n        else:\n            count_0 += 1\n\n        max_diff = max(max_diff, count_0 - count_1)\n\n    return max_diff\n\n\nprint(max_diff_0(\"1110\"))\nprint(max_diff_0(\"100\"))\nprint(max_diff_0(\"101\"))\nprint(max_diff_0(\"1010\"))\n\nprint(max_diff_1(\"1110\"))\nprint(max_diff_1(\"100\"))\nprint(max_diff_1(\"101\"))\nprint(max_diff_1(\"1010\"))"
    },
    {
      "rank": 92,
      "score": 2.3359069755507846,
      "candidate": "def max_diff(s):\n    max_diff = 0\n    for i in range(1, len(s)):\n        if s[i] == '1':\n            max_diff = max(max_diff, i - s[i - 1])\n    return max_diff\n\n\nif __name__ == '__main__':\n    assert max_diff('11') == 2\n    assert max_diff('100') == 2\n    assert max_diff('111111') == 3\n    assert max_diff('1100') == 3\n    assert max_diff('110111') == 3\n    assert max_diff('1111') == 3\n    assert max_diff('111111000') == 3\n    assert max_diff('101010101') == 2\n    assert max_diff('0101010101') == 1\n    assert max_diff('01010101010101') == 1"
    },
    {
      "rank": 93,
      "score": 2.293848149332354,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s: str) -> int:\n        if len(s) == 0:\n            return 0\n        res = 0\n        curr = 0\n        for i in range(len(s)):\n            if s[i] == '0':\n                curr += 1\n            else:\n                curr = 0\n            res = max(res, curr - res)\n        return res"
    },
    {
      "rank": 94,
      "score": 2.287625906893272,
      "candidate": "class Solution(object):\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if len(s) < 2:\n            return 0\n\n        if s[0]!= '0':\n            return 0\n\n        max_diff = 0\n        count_zero = 0\n        count_one = 0\n\n        for i in range(1, len(s)):\n            if s[i] == '0':\n                count_zero += 1\n            else:\n                count_one += 1\n            max_diff = max(max_diff, count_zero - count_one)\n\n        return max_diff\n\n\nif __name__ == \"__main__\":\n    assert Solution().maxDiffInBinary(\"10101\") == 1\n    assert Solution().maxDiffInBinary(\"0101\") == 1\n    assert Solution().maxDiffInBinary(\"1101\") == 1\n    assert Solution().maxDiffInBinary(\"10100\") == 1\n    assert Solution().maxDiffInBinary(\"10001\") == 1\n    assert Solution().maxDiffInBinary(\"1010101\") == 2"
    },
    {
      "rank": 95,
      "score": 2.260739004816286,
      "candidate": "class Solution:\n    def maxDiff(self, s: str) -> int:\n        ans = 0\n        count = 0\n        for i in range(len(s)):\n            if s[i] == \"1\":\n                count += 1\n            else:\n                ans = max(ans, count - i)\n                count = 0\n        return max(ans, count - i)\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.maxDiff(\"10\"))"
    },
    {
      "rank": 96,
      "score": 2.137541083743484,
      "candidate": "def max_diff_binary(binary_string):\n    n = len(binary_string)\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in range(n):\n        if binary_string[i] == '0':\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_1 - count_0)\n    return max_diff\n\n\nbinary_string = \"10100\"\nprint(max_diff_binary(binary_string))"
    },
    {
      "rank": 97,
      "score": 2.118479922318633,
      "candidate": "def max_diff(binary_string):\n    max_diff = 0\n    n = len(binary_string)\n    for i in range(n):\n        if binary_string[i] == '0':\n            max_diff = max(max_diff, n - i)\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    assert max_diff('100') == 0\n    assert max_diff('101') == 1\n    assert max_diff('1110') == 2\n    assert max_diff('1111') == 3\n    assert max_diff('111101') == 4\n    assert max_diff('111111') == 5\n    assert max_diff('11111101') == 6\n    assert max_diff('11111100') == 7\n    assert max_diff('111111101') == 8"
    },
    {
      "rank": 98,
      "score": 2.043359877671101,
      "candidate": "def max_diff_binary_string(s: str) -> int:\n    result = 0\n\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == \"1\":\n            result = max(result, i - result)\n\n    return result\n\n\ndef max_diff_binary_string_2(s: str) -> int:\n    result = 0\n\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] == \"0\":\n            result = max(result, i - result)\n\n    return result\n\n\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1011\"))\nprint(max_diff_binary_string(\"1101\"))\nprint(max_diff_binary_string(\"11\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))\nprint(max_diff_binary_string(\"1100110011\"))"
    },
    {
      "rank": 99,
      "score": 2.020164938060112,
      "candidate": "class Solution:\n    def maxDiffInBinary(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        if not s:\n            return 0\n        left = 0\n        right = 0\n        res = 0\n        for i, char in enumerate(s):\n            if char == \"0\":\n                right = max(right, i)\n            else:\n                res = max(res, right - left)\n                left = right + 1\n        return res"
    },
    {
      "rank": 100,
      "score": 2.006215542699554,
      "candidate": "def max_diff(s: str) -> int:\n    \"\"\"\n    Time: O(n)\n    Space: O(n)\n    \"\"\"\n    max_diff = 0\n    count_0 = 0\n    count_1 = 0\n    for i in s:\n        if i == \"0\":\n            count_0 += 1\n        else:\n            count_1 += 1\n        max_diff = max(max_diff, count_0 - count_1)\n    return max_diff\n\n\nif __name__ == \"__main__\":\n    assert max_diff(\"0100\") == 3\n    assert max_diff(\"1010\") == 3\n    assert max_diff(\"1010011\") == 3\n    assert max_diff(\"1010111\") == 1\n    assert max_diff(\"101101011\") == 1\n    assert max_diff(\"10110111\") == 1"
    }
  ]
}