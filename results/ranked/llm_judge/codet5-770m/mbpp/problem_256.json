{
  "timestamp": "2025-09-14T14:20:48.922960",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 256,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    square_sum = 0\n    for i in range(1, n+1):\n        square_sum = square_sum + i ** 2\n    return square_sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    if n < 0:\n        print(\"n should be non-negative\")\n    else:\n        sum = 0\n        for i in range(1, n + 1):\n            sum += i**2\n        return sum\n\nprint(sum_of_squares(3))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i\n    return sum\n\n\ndef main():\n    n = int(input(\"Enter the number of odd numbers: \"))\n    print(\"Sum of squares of first {} odd numbers is {}\".format(n, sum_of_squares(n)))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n+1):\n        sum += i * i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i\n    return sum\n\nn = int(input(\"Enter the value of n: \"))\n\nprint(sum_of_squares(n))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i*i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum = sum + i**2\n    return sum\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n\tsum = 0\n\tfor i in range(1,n+1):\n\t\tsum = sum + i*i\n\treturn sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def odd_numbers_sum(n):\n\tsum = 0\n\tfor i in range(n):\n\t\tsum += i**2\n\treturn sum\n\nprint(odd_numbers_sum(5))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\nprint(sum_of_squares(4))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    return (n**2)\n\nprint(sum_of_squares(1))\nprint(sum_of_squares(2))\nprint(sum_of_squares(3))\nprint(sum_of_squares(4))\nprint(sum_of_squares(5))\nprint(sum_of_squares(6))\nprint(sum_of_squares(7))\nprint(sum_of_squares(8))\nprint(sum_of_squares(9))\nprint(sum_of_squares(10))\nprint(sum_of_squares(11))\nprint(sum_of_squares(12))\nprint(sum_of_squares(13))\nprint(sum_of_squares(14))\nprint(sum_of_squares(15))\nprint(sum_of_squares(16))\nprint(sum_of_squares(17))\nprint(sum_of_squares(18))\nprint(sum_of_squares(19))\nprint(sum_of_squares(20))\nprint(sum_of_squares(21))\nprint(sum_of_squares(22))\nprint(sum_of_squares(23))\nprint(sum_of_squares(24))\nprint(sum_of_squares(25))\nprint(sum_of_squares(26))\nprint(sum_of_squares(27))\nprint(sum_of_squares(28))\nprint(sum_of_squares(29))\nprint(sum_of_squares(30))\nprint(sum_of_squares(31))\nprint(sum_of_squares(32))\nprint(sum_of_squares(33))\nprint(sum_of_squares(34))\nprint(sum_of_squares(35))\nprint(sum_of_squares(36))\nprint(sum_of_squares(37))\nprint(sum_of_squares(38))\nprint(sum_of_squares(39))\nprint(sum_of_squares(40))\nprint(sum_of_squares(41"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i * i\n    return sum_of_squares\n\n\nif __name__ == '__main__':\n    n = int(input('Enter the number of odd numbers to sum the squares of: '))\n    sum_of_squares(n)"
    },
    {
      "rank": 16,
      "score": 6.5,
      "candidate": "def odd_num(num):\n    return sum([x**2 for x in range(1, num+1)])\n\nprint(odd_num(5))\nprint(odd_num(8))\nprint(odd_num(13))\nprint(odd_num(17))"
    },
    {
      "rank": 17,
      "score": 6.5,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\nn = int(input(\"Enter the number of odd numbers: \"))\nprint(\"Sum of squares of first {0} odd numbers is: {1}\".format(n, sum_of_squares(n)))"
    },
    {
      "rank": 18,
      "score": 6.5,
      "candidate": "def odd_sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i**2\n    return sum\n\nprint(odd_sum_of_squares(5))\nprint(odd_sum_of_squares(10))\nprint(odd_sum_of_squares(15))"
    },
    {
      "rank": 19,
      "score": 3.926139092254469,
      "candidate": "def sum_of_squares(n):\n    sum_squares = 0\n    for i in range(1, n+1):\n        sum_squares += i**2\n    return sum_squares\n\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 20,
      "score": 3.7896064077536957,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 21,
      "score": 3.782321827907003,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(100))"
    },
    {
      "rank": 22,
      "score": 3.7690182832329846,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 23,
      "score": 3.761514928204013,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i*i\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 24,
      "score": 3.732824384460777,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum = sum + i*i\n    return sum\n\nn = int(input(\"Enter a number : \"))\nprint(\"The sum of squares of first\", n, \"odd natural numbers is : \", sum_of_squares(n))"
    },
    {
      "rank": 25,
      "score": 3.6781200142854114,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1,2):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 26,
      "score": 3.5285611131094576,
      "candidate": "def sum_of_squares(n):\n    square_sum = 0\n    for i in range(1, n + 1):\n        square_sum += i * i\n    return square_sum\n\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 27,
      "score": 3.5154997612479755,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 28,
      "score": 3.501766448946012,
      "candidate": "def sum_of_squares(n):\n\tsum = 0\n\tfor i in range(1, n):\n\t\tsum += i**2\n\treturn sum\n\nprint(sum_of_squares(20))"
    },
    {
      "rank": 29,
      "score": 3.4877725635611796,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1, 2):\n        sum += i ** 2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 30,
      "score": 3.4656400595580994,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares = sum_of_squares + i ** 2\n    return sum_of_squares\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of numbers you want to sum of squares of: \"))\n    print(sum_of_squares(n))"
    },
    {
      "rank": 31,
      "score": 3.4112724560515946,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 32,
      "score": 3.410951252187612,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(100))"
    },
    {
      "rank": 33,
      "score": 3.406262911197099,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1,2):\n        sum = sum + i**2\n    return sum\n\nif __name__ == '__main__':\n    n = int(input(\"Enter the number of odd numbers: \"))\n    print(\"The sum of squares of first {0} odd natural numbers is {1}\".format(n, sum_of_squares(n)))"
    },
    {
      "rank": 34,
      "score": 3.3837173645764542,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1,2):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 35,
      "score": 3.3692332899977053,
      "candidate": "def sum_of_squares(n):\n    square = 0\n    for i in range(n):\n        square += i**2\n    return square\n\nprint(sum_of_squares(4))"
    },
    {
      "rank": 36,
      "score": 3.3238442690503462,
      "candidate": "def sum_of_squares(n):\n    return (n * (n + 1) * (2 * n + 1)) / 6\n\n\nprint(sum_of_squares(1))"
    },
    {
      "rank": 37,
      "score": 3.305838144420434,
      "candidate": "def sum_of_squares(n):\n    return sum([i*i for i in range(1,n+1)])\n\nprint(sum_of_squares(10))\nprint(sum_of_squares(100))"
    },
    {
      "rank": 38,
      "score": 3.2712800217929825,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i*i\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 39,
      "score": 3.2483570765056164,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1, 2):\n        sum += i ** 2\n    return sum\n\n\nprint(sum_of_squares(20))"
    },
    {
      "rank": 40,
      "score": 3.1878490091728358,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 41,
      "score": 3.180818012523817,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 42,
      "score": 3.180697802754207,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i ** 2\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 43,
      "score": 3.178556285755873,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 44,
      "score": 3.1718091447842305,
      "candidate": "def sum_of_squares(n):\n    squares = 0\n    for i in range(1, n + 1, 2):\n        squares += i * i\n    return squares\n\nprint(sum_of_squares(100))"
    },
    {
      "rank": 45,
      "score": 3.165631715701782,
      "candidate": "def sum_of_squares(n):\n    return (n**2)\n\nprint(sum_of_squares(3))"
    },
    {
      "rank": 46,
      "score": 3.1620419846973977,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i*i\n    return sum\n\nprint(sum_of_squares(4))"
    },
    {
      "rank": 47,
      "score": 3.157123666297637,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i*i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 48,
      "score": 3.1209811357830173,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n\n    for i in range(1, n + 1):\n        sum_of_squares += i * i\n\n    return sum_of_squares\n\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 49,
      "score": 3.104431797502378,
      "candidate": "def odd_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print(odd_sum_of_squares(10))\n    print(odd_sum_of_squares(20))"
    },
    {
      "rank": 50,
      "score": 3.0984306179345618,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of odd numbers: \"))\n    print(sum_of_squares(n))"
    },
    {
      "rank": 51,
      "score": 3.085684140594985,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\n\nprint(sum_of_squares(int(input(\"Enter the number: \"))))"
    },
    {
      "rank": 52,
      "score": 3.055461294854933,
      "candidate": "def sum_of_squares(n):\n    sum_squares = 0\n    for i in range(n):\n        sum_squares += i**2\n    return sum_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 53,
      "score": 3.045880388267751,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 54,
      "score": 3.043523534119086,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(20))"
    },
    {
      "rank": 55,
      "score": 3.033764102343962,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i * i\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print(sum_of_squares(5))"
    },
    {
      "rank": 56,
      "score": 2.993251387631033,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(1))"
    },
    {
      "rank": 57,
      "score": 2.982086980445024,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1,2):\n        sum += i**2\n    return sum\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(10))"
    },
    {
      "rank": 58,
      "score": 2.963994939209833,
      "candidate": "def sum_of_squares(n):\n    total_squares = 0\n    for i in range(1, n+1):\n        total_squares = total_squares + i**2\n    return total_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 59,
      "score": 2.94217585880588,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i\n    return sum\n\nprint(sum_of_squares(3))"
    },
    {
      "rank": 60,
      "score": 2.930867849414408,
      "candidate": "def odd_sum_of_squares(n):\n    return sum([i**2 for i in range(n) if i%2==0])\n\nprint(odd_sum_of_squares(10))"
    },
    {
      "rank": 61,
      "score": 2.9071705116680913,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares = sum_of_squares + (i*i)\n    return sum_of_squares\n\n\nprint(sum_of_squares(15))"
    },
    {
      "rank": 62,
      "score": 2.890164056081244,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares = sum_of_squares + i ** 2\n    return sum_of_squares\n\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(100))"
    },
    {
      "rank": 63,
      "score": 2.887111849756732,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1, 2):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 64,
      "score": 2.8829315215254097,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 65,
      "score": 2.882923312638332,
      "candidate": "def odd_square(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i\n    return sum\n\n\nprint(odd_square(5))"
    },
    {
      "rank": 66,
      "score": 2.8541531251033616,
      "candidate": "def sum_of_squares(n):\n    total = 0\n    for i in range(1, n+1, 2):\n        total += i**2\n    return total\n\n\ndef main():\n    print(sum_of_squares(3))\n    print(sum_of_squares(4))\n    print(sum_of_squares(5))\n    print(sum_of_squares(6))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 67,
      "score": 2.8504963247670663,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(int(input(\"Enter a number to sum of squares of: \"))))"
    },
    {
      "rank": 68,
      "score": 2.8494481522053556,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 69,
      "score": 2.8453938120743927,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i*i\n    return sum\n\n\ndef main():\n    n = int(input(\"Enter the number of numbers: \"))\n    sum = sum_of_squares(n)\n    print(\"The sum of squares of the first %d odd numbers is %d\" % (n, sum))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 70,
      "score": 2.8074588597918417,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i*i\n    return sum_of_squares"
    },
    {
      "rank": 71,
      "score": 2.769680614520106,
      "candidate": "def odd_numbers_sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\nprint(odd_numbers_sum_of_squares(5))"
    },
    {
      "rank": 72,
      "score": 2.768291153593769,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 73,
      "score": 2.7671351232148718,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(7))"
    },
    {
      "rank": 74,
      "score": 2.765262807032524,
      "candidate": "def sum_of_squares(n):\n    return sum([i**2 for i in range(n)])\n\n\nif __name__ == '__main__':\n    n = int(input(\"Enter the number of odd numbers to sum of squares : \"))\n    print(sum_of_squares(n))"
    },
    {
      "rank": 75,
      "score": 2.760412881077355,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i**2\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 76,
      "score": 2.7278086377374087,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i\n    return sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 77,
      "score": 2.718856235379514,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum = sum + i**2\n    return sum\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 78,
      "score": 2.6996806550405976,
      "candidate": "def sum_of_squares(n):\n    square_sum = 0\n    for i in range(1, n):\n        square_sum += i ** 2\n    return square_sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 79,
      "score": 2.6991466938853015,
      "candidate": "def sum_of_squares(n):\n    return(n**2)\n\n\nprint(sum_of_squares(100))"
    },
    {
      "rank": 80,
      "score": 2.677440122697438,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i\n    return sum\n\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 81,
      "score": 2.6615389998470205,
      "candidate": "def sum_of_squares(n):\n    squares = 0\n    for i in range(n):\n        squares += i**2\n    return squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 82,
      "score": 2.6400778958026456,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i ** 2\n    return sum\n\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 83,
      "score": 2.580391238388681,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i*i\n    return sum\n\nn = int(input(\"Enter the number of odd numbers: \"))\nprint(sum_of_squares(n))"
    },
    {
      "rank": 84,
      "score": 2.5459879622393946,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 85,
      "score": 2.493584439832788,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i*i\n    return sum\n\nn = int(input(\"Enter number: \"))\nprint(\"Sum of squares of first {} odd natural numbers is {}\".format(n, sum_of_squares(n)))"
    },
    {
      "rank": 86,
      "score": 2.4711445355220496,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(6))"
    },
    {
      "rank": 87,
      "score": 2.446832512996986,
      "candidate": "def sum_of_squares(n):\n    if n <= 0:\n        return 0\n    else:\n        return n**2 + sum_of_squares(n-1)\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(3))"
    },
    {
      "rank": 88,
      "score": 2.4245032112888487,
      "candidate": "def sum_of_squares(n):\n\tsum = 0\n\tfor i in range(1, n+1):\n\t\tsum += i**2\n\treturn sum\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 89,
      "score": 2.4018966879596646,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum = sum + i**2\n    return sum\n\nprint(sum_of_squares(5))\nprint(sum_of_squares(10))"
    },
    {
      "rank": 90,
      "score": 2.389578175014489,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i * i\n    return sum\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 91,
      "score": 2.3359069755507846,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1,n+1,2):\n        sum_of_squares = sum_of_squares + i**2\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 92,
      "score": 2.293848149332354,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1,2):\n        sum += i**2\n    return sum\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 93,
      "score": 2.287625906893272,
      "candidate": "def sum_of_squares(n):\n    return sum([x**2 for x in range(n)])"
    },
    {
      "rank": 94,
      "score": 2.260739004816286,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1, 2):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 95,
      "score": 2.137541083743484,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(1))\nprint(sum_of_squares(2))\nprint(sum_of_squares(3))\nprint(sum_of_squares(4))"
    },
    {
      "rank": 96,
      "score": 2.118479922318633,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1, 2):\n        sum += i**2\n    return sum\n\nprint(sum_of_squares(6))"
    },
    {
      "rank": 97,
      "score": 2.043359877671101,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1,2):\n        sum += i**2\n    return sum\n\nn = int(input(\"enter the number: \"))\nprint(sum_of_squares(n))"
    },
    {
      "rank": 98,
      "score": 2.020164938060112,
      "candidate": "def odd_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares = sum_of_squares + (i*i)\n    return sum_of_squares\n\nprint(odd_sum_of_squares(20))"
    },
    {
      "rank": 99,
      "score": 2.006215542699554,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares = sum_of_squares + i**2\n    return sum_of_squares\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 100,
      "score": 1.6901274479551278,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\ndef main():\n    print(sum_of_squares(1))\n    print(sum_of_squares(2))\n    print(sum_of_squares(3))\n    print(sum_of_squares(4))\n\nif __name__ == '__main__':\n    main()"
    }
  ]
}