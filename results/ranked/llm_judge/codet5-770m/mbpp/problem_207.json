{
  "timestamp": "2025-09-14T13:59:11.469247",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 207,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def minimum_operations(num1, num2):\n    if num1 > num2:\n        return num1 - num2\n    else:\n        return num2 - num1\n\nprint(minimum_operations(5, 10))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def min_ops(a, b):\n    if a == b:\n        return 0\n    else:\n        return (a + b) % (10 ** 9 + 7)\n\nprint(min_ops(2, 5))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def min_operations(n1, n2):\n    if n1 == n2:\n        return 0\n    else:\n        return abs(n1-n2)\n\nprint(min_operations(1, 2))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def min_operations(num1, num2):\n    num1, num2 = sorted([num1, num2])\n    if num1 == num2:\n        return 0\n    else:\n        return 1 + min(num1, num2)\n\nprint(min_operations(4, 4))\nprint(min_operations(5, 5))\nprint(min_operations(1, 2))\nprint(min_operations(5, 4))\nprint(min_operations(10, 5))\nprint(min_operations(3, 4))\nprint(min_operations(3, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(3, 8))\nprint(min_operations(2, 4))\nprint(min_operations(2, 5))\nprint(min_operations(1, 2))\nprint(min_operations(3, 4))\nprint(min_operations(4, 5))\nprint(min_operations(1, 2))\nprint(min_operations(4, 5))\nprint(min_operations(4, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(3, 8))\nprint(min_operations(2, 4))\nprint(min_operations(2, 5))\nprint(min_operations(1, 2))\nprint(min_operations(4, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(2, 4))\nprint(min_operations(4, 5))\nprint(min_operations(1, 2))\nprint(min_operations(4, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(2, 4))\nprint(min_operations(1, 2))\nprint(min_operations(4, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(4, 8))\nprint(min_operations(2, 4))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def min_ops(a,b):\n    # Your code here\n    if a == b:\n        return 0\n    else:\n        return a + b\n\n\nprint(min_ops(2, 3))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def min_operations(a,b):\n    if a == b:\n        return 0\n    else:\n        return (a + b)\n\nprint(min_operations(1, 2))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def minimum_operation(a,b):\n    if(a==b):\n        return 0\n    else:\n        return min(a,b) + min(b,a)\n\n\nprint(minimum_operation(2,3))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def min_operations(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations2(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations3(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations4(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations5(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations6(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations7(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations8(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\ndef min_operations9(a,b):\n    if a==b:\n        return 0\n    if a<b:\n        return 1\n    if a>b:\n        return -1\n\n\nif __name__==\"__main__\":\n    a=int(input(\"Enter a number: \"))\n    b=int(input(\"Enter a number: \"))\n    print(\"Minimum operations required to make two numbers equal are: \",min_operations(a,b))\n    print(\"Minimum operations required to make two numbers equal are: \",min_operations2(a,b))\n    print(\"Minimum operations required to make two numbers equal"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def min_ops(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_ops(b, a)\n    return 1 + min_ops(a, b)\n\n\nprint(min_ops(1, 1))"
    },
    {
      "rank": 10,
      "score": 9.370583536698913,
      "candidate": "def min_operations(a,b):\n    if a == b:\n        return 0\n    else:\n        return 1 + min_operations(b,a % b)\n\nprint(min_operations(10,20))"
    },
    {
      "rank": 11,
      "score": 9.234050852198141,
      "candidate": "def minimum_operations(a,b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1\n    else:\n        return 2\n\nprint(minimum_operations(2,3))"
    },
    {
      "rank": 12,
      "score": 9.226766272351448,
      "candidate": "def minimumOperations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1\n    else:\n        return 2\n\n\nprint(minimumOperations(2, 3))"
    },
    {
      "rank": 13,
      "score": 9.21346272767743,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return min(a,b) + min(b,a)\n\n\nprint(min_operations(1,2))"
    },
    {
      "rank": 14,
      "score": 9.205959372648458,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return 1 + min_operations(a, b - a)\n\nprint(min_operations(1, 2))\nprint(min_operations(2, 3))\nprint(min_operations(4, 5))\nprint(min_operations(3, 4))"
    },
    {
      "rank": 15,
      "score": 9.183391466815202,
      "candidate": "def min_operations(a, b):\n    # Write your code here\n    a = int(a)\n    b = int(b)\n    if a == b:\n        return 0\n    if a > b:\n        return 1\n    return 2\n\nprint(min_operations(2, 3))"
    },
    {
      "rank": 16,
      "score": 9.177268828905222,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nif __name__ == \"__main__\":\n    print(min_operations(7, 6))"
    },
    {
      "rank": 17,
      "score": 9.122564458729856,
      "candidate": "def min_operations(a,b):\n    if a==b:\n        return 0\n    elif a>b:\n        return 1\n    else:\n        return 2\n\nprint(min_operations(5,6))"
    },
    {
      "rank": 18,
      "score": 8.973005557553902,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nprint(min_operations(5, 5))\nprint(min_operations(5, 10))\nprint(min_operations(5, -5))"
    },
    {
      "rank": 19,
      "score": 8.95994420569242,
      "candidate": "def minimum_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a == b:\n        return 0\n    else:\n        return abs(a - b)\n\n\nif __name__ == \"__main__\":\n    print(minimum_operations(1, 2))"
    },
    {
      "rank": 20,
      "score": 8.946210893390457,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a % b)\n    else:\n        return 1 + min_operations(a, b % b)\n\n\nprint(min_operations(3, 4))"
    },
    {
      "rank": 21,
      "score": 8.932217008005624,
      "candidate": "def minimum_operations(a, b):\n    if a > b:\n        return a - b\n    return b - a\n\n\nprint(minimum_operations(2, 3))"
    },
    {
      "rank": 22,
      "score": 8.910084504002544,
      "candidate": "def min_operations(a, b):\n    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return 1\n    return min(min_operations(a-1, b), min_operations(a, b-1))\n\n\nprint(min_operations(5, 6))"
    },
    {
      "rank": 23,
      "score": 8.85571690049604,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    return 2 + min_operations(a, b)\n\n\nif __name__ == '__main__':\n    print(min_operations(2, 5))"
    },
    {
      "rank": 24,
      "score": 8.855395696632057,
      "candidate": "def min_operations(a, b):\n    if a > b:\n        return 1 + min_operations(b, a)\n    elif a < b:\n        return 1 + min_operations(a, b)\n    elif a == b:\n        return 0\n    else:\n        return 0\n\nprint(min_operations(6, 3))\nprint(min_operations(2, 5))\nprint(min_operations(3, 4))"
    },
    {
      "rank": 25,
      "score": 8.850707355641543,
      "candidate": "def minimum_operation(a, b):\n    if a < b:\n        return a + b\n    else:\n        return a - b\n\n\nif __name__ == \"__main__\":\n    print(minimum_operation(4, 3))"
    },
    {
      "rank": 26,
      "score": 8.8281618090209,
      "candidate": "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n    if a < b:\n        return a + b\n    else:\n        return b + a\n\n\nprint(min_operations(2, 1))"
    },
    {
      "rank": 27,
      "score": 8.81367773444215,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return abs(a - b)\n\n\nprint(min_operations(2, 5))"
    },
    {
      "rank": 28,
      "score": 8.76828871349479,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 < num2:\n        return 1 + min_operations(num1, num2)\n    else:\n        return 1 + min_operations(num2, num1)\n\n\nif __name__ == '__main__':\n    assert min_operations(1, 2) == 1\n    assert min_operations(2, 1) == 2\n    assert min_operations(3, 2) == 3\n    assert min_operations(5, 2) == 6"
    },
    {
      "rank": 29,
      "score": 8.750282588864879,
      "candidate": "def min_operations(a, b):\n    return max(abs(a - b), abs(a + b))\n\nprint(min_operations(1, 1))\nprint(min_operations(2, 1))\nprint(min_operations(3, 1))"
    },
    {
      "rank": 30,
      "score": 8.715724466237427,
      "candidate": "def min_operations(num1, num2):\n    \"\"\"\n    :type num1: int\n    :type num2: int\n    :rtype: int\n    \"\"\"\n    if num1 == num2:\n        return 0\n    else:\n        return abs(num1 - num2)"
    },
    {
      "rank": 31,
      "score": 8.692801520950061,
      "candidate": "def min_operations(a, b):\n    if a < b:\n        return min_operations(b, a)\n    else:\n        return min_operations(a, b) + 1\n\n\nprint(min_operations(5, 4))\nprint(min_operations(8, 6))\nprint(min_operations(7, 3))\nprint(min_operations(10, 9))\nprint(min_operations(3, 1))"
    },
    {
      "rank": 32,
      "score": 8.632293453617281,
      "candidate": "def min_ops(a, b):\n    # Write your code here\n    if a < b:\n        return min_ops(b, a)\n    else:\n        return min_ops(a, b) + 1\n\n\nprint(min_ops(1, 2))\nprint(min_ops(2, 1))"
    },
    {
      "rank": 33,
      "score": 8.625262456968262,
      "candidate": "def min_operations(x, y):\n    if x == y:\n        return 0\n    elif x > y:\n        return 1 + min_operations(y, x)\n    else:\n        return 1 + min_operations(x, y)\n\n\nprint(min_operations(2, 3))\nprint(min_operations(4, 5))"
    },
    {
      "rank": 34,
      "score": 8.625142247198651,
      "candidate": "def min_operations(a, b):\n    return (abs(a - b) + abs(a + b)) // 2\n\n\nprint(min_operations(1, 2))"
    },
    {
      "rank": 35,
      "score": 8.623000730200317,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 > num2:\n        return min_operations(num2, num1)\n    return min_operations(num1, num2) + 1\n\n\nprint(min_operations(1, 1))\nprint(min_operations(1, 2))\nprint(min_operations(2, 2))"
    },
    {
      "rank": 36,
      "score": 8.616253589228675,
      "candidate": "def min_operations(a,b):\n    if a == b:\n        return 0\n    else:\n        return (a+b)\n\n\nprint(min_operations(2,3))"
    },
    {
      "rank": 37,
      "score": 8.610076160146226,
      "candidate": "def min_operations(a, b):\n    if a > b:\n        return (a + b) // 2\n    else:\n        return (a + b) // 2\n\n\nprint(min_operations(1, 1))\nprint(min_operations(1, 2))\nprint(min_operations(2, 1))\nprint(min_operations(2, 2))\nprint(min_operations(3, 2))\nprint(min_operations(3, 3))"
    },
    {
      "rank": 38,
      "score": 8.606486429141842,
      "candidate": "def min_ops(a, b):\n    return max(abs(a - b), abs(a + b))\n\nprint(min_ops(3, 2))\nprint(min_ops(2, 3))\nprint(min_ops(1, 2))\nprint(min_ops(1, 3))\nprint(min_ops(3, 3))\nprint(min_ops(3, 2))\nprint(min_ops(1, 3))"
    },
    {
      "rank": 39,
      "score": 8.60156811074208,
      "candidate": "def min_ops(a,b):\n    if a==b:\n        return 0\n    elif a>b:\n        return 1\n    else:\n        return 2\nprint(min_ops(2,4))"
    },
    {
      "rank": 40,
      "score": 8.565425580227462,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 < num2:\n        return 1 + min_operations(num2, num1)\n    return 1 + min_operations(num1, num2)\n\n\nif __name__ == \"__main__\":\n    num1 = int(input(\"Enter first number: \"))\n    num2 = int(input(\"Enter second number: \"))\n    print(\"Minimum operations required: \" + str(min_operations(num1, num2)))"
    },
    {
      "rank": 41,
      "score": 8.548876241946822,
      "candidate": "def min_ops(num1, num2):\n    num1 = abs(num1)\n    num2 = abs(num2)\n    if num1 > num2:\n        return num1 + num2\n    else:\n        return num2 + num1\n\n\nif __name__ == '__main__':\n    print(min_ops(1, 2))\n    print(min_ops(2, 1))\n    print(min_ops(1, -2))\n    print(min_ops(-1, -2))\n    print(min_ops(1, -2))"
    },
    {
      "rank": 42,
      "score": 8.542875062379007,
      "candidate": "def minimum_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n\n    if a == b:\n        return 0\n    else:\n        return 1 + min(a, b)\n\n\nprint(minimum_operations(1, 1))\nprint(minimum_operations(1, 2))\nprint(minimum_operations(2, 1))\nprint(minimum_operations(2, 2))\nprint(minimum_operations(2, 3))\nprint(minimum_operations(3, 2))\nprint(minimum_operations(3, 4))"
    },
    {
      "rank": 43,
      "score": 8.53012858503943,
      "candidate": "def min_ops(a,b):\n    if a == 0:\n        return b\n    else:\n        return min_ops(b%a,a)\n\nprint(min_ops(3,4))"
    },
    {
      "rank": 44,
      "score": 8.499905739299377,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n\n    if num1 < num2:\n        return 1\n\n    if num2 < num1:\n        return 2\n\n\nnum1 = int(input(\"Enter the first number: \"))\nnum2 = int(input(\"Enter the second number: \"))\nprint(min_operations(num1, num2))"
    },
    {
      "rank": 45,
      "score": 8.490324832712195,
      "candidate": "def min_operations(a, b):\n    # Write your code here\n    if a == b:\n        return 0\n    else:\n        return (b - a)\n\n\nif __name__ == '__main__':\n    a = int(input(\"Enter first number: \"))\n    b = int(input(\"Enter second number: \"))\n    print(\"Minimum operations required are: \" + str(min_operations(a, b)))"
    },
    {
      "rank": 46,
      "score": 8.48796797856353,
      "candidate": "def min_operations(a, b):\n    if a == 0 or b == 0:\n        return 0\n\n    if a > b:\n        return 1 + min_operations(b, a % b)\n    else:\n        return 1 + min_operations(a, b % a)\n\n\nprint(min_operations(2, 3))"
    },
    {
      "rank": 47,
      "score": 8.478208546788407,
      "candidate": "def min_operations(num1, num2):\n    return abs(num1 - num2)\n\nprint(min_operations(4, 3))\nprint(min_operations(3, 4))\nprint(min_operations(5, 3))\nprint(min_operations(5, 5))\nprint(min_operations(3, 5))\nprint(min_operations(3, 4))\nprint(min_operations(3, 3))\nprint(min_operations(3, 4))\nprint(min_operations(3, 3))"
    },
    {
      "rank": 48,
      "score": 8.437695832075478,
      "candidate": "def min_ops(a,b):\n    if a==b:\n        return 0\n    if a>b:\n        return 1\n    return 2\n\nprint(min_ops(5,5))"
    },
    {
      "rank": 49,
      "score": 8.426531424889468,
      "candidate": "def min_operations(a, b):\n    # Code here\n    if a == b:\n        return 0\n    if a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nprint(min_operations(10, 20))"
    },
    {
      "rank": 50,
      "score": 8.408439383654278,
      "candidate": "def min_operations(a,b):\n    if a==b:\n        return 0\n    if a>b:\n        return 1\n    if a<b:\n        return -1\n\nif __name__ == \"__main__\":\n    print(min_operations(3,5))"
    },
    {
      "rank": 51,
      "score": 8.386620303250325,
      "candidate": "def min_operations(a,b):\n    if b == 0:\n        return a\n    elif b < 0:\n        return -1\n    else:\n        return min_operations(b, a%b) + 1\n\nprint(min_operations(1,2))\nprint(min_operations(2,2))\nprint(min_operations(2,3))\nprint(min_operations(3,2))\nprint(min_operations(3,4))\nprint(min_operations(5,5))\nprint(min_operations(5,6))\nprint(min_operations(5,7))\nprint(min_operations(6,7))\nprint(min_operations(7,8))\nprint(min_operations(8,9))\nprint(min_operations(9,10))\nprint(min_operations(10,9))\nprint(min_operations(10,12))\nprint(min_operations(12,12))\nprint(min_operations(12,8))\nprint(min_operations(12,9))\nprint(min_operations(8,12))\nprint(min_operations(9,12))\nprint(min_operations(9,8))\nprint(min_operations(8,9))\nprint(min_operations(9,8))"
    },
    {
      "rank": 52,
      "score": 8.375312293858853,
      "candidate": "def min_operations(a, b):\n    if a < b:\n        return min_operations(b, a)\n    elif b < a:\n        return min_operations(a, b)\n    else:\n        return max(a, b)\n\n\nprint(min_operations(1, 2))"
    },
    {
      "rank": 53,
      "score": 8.351614956112536,
      "candidate": "def min_ops(x, y):\n    if x > y:\n        return x - y\n    else:\n        return y - x\n\n\nprint(min_ops(5, 4))"
    },
    {
      "rank": 54,
      "score": 8.334608500525688,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\nprint(min_operations(3, 4))"
    },
    {
      "rank": 55,
      "score": 8.331556294201176,
      "candidate": "def minimum_operations(a, b):\n    # a, b = int(input(\"Enter two numbers:\")), int(input(\"Enter two numbers:\"))\n    # if a == b:\n    #     return 0\n    # else:\n    #     return max(a - b, b - a)\n\n    a, b = int(input(\"Enter two numbers:\")), int(input(\"Enter two numbers:\"))\n    if a == b:\n        return 0\n    elif a > b:\n        return 1 + minimum_operations(b, a)\n    else:\n        return 1 + minimum_operations(a, b)\n\n\nprint(minimum_operations(2, 3))\nprint(minimum_operations(5, 7))\nprint(minimum_operations(5, 2))\nprint(minimum_operations(2, 3))\nprint(minimum_operations(2, 2))"
    },
    {
      "rank": 56,
      "score": 8.327375965969855,
      "candidate": "def min_operations(a,b):\n    #a = int(input(\"Enter a: \"))\n    #b = int(input(\"Enter b: \"))\n    #print(min(a,b))\n    #print(max(a,b))\n    if a > b:\n        return a\n    else:\n        return b\n\n\na = int(input(\"Enter a: \"))\nb = int(input(\"Enter b: \"))\nprint(min_operations(a,b))"
    },
    {
      "rank": 57,
      "score": 8.327367757082776,
      "candidate": "def min_operations(a,b):\n    min_ops = 0\n    if a<b:\n        min_ops = 1 + min_operations(b,a)\n    elif a>b:\n        min_ops = 1 + min_operations(a,b-1)\n    return min_ops\n\n\nprint(min_operations(2,3))\nprint(min_operations(2,4))\nprint(min_operations(4,3))\nprint(min_operations(4,5))\nprint(min_operations(5,4))"
    },
    {
      "rank": 58,
      "score": 8.298597569547805,
      "candidate": "def min_ops(a, b):\n    if b == 0:\n        return a\n    else:\n        return min_ops(a, b//2) + b\n\n\nprint(min_ops(5, 2))"
    },
    {
      "rank": 59,
      "score": 8.294940769211511,
      "candidate": "def minimum_operations(a,b):\n    #Write your code here.\n    if a == b:\n        return 0\n    if a < b:\n        return 1\n    return 2\n\nprint(minimum_operations(2, 3))"
    },
    {
      "rank": 60,
      "score": 8.2938925966498,
      "candidate": "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a > b:\n        return max(a, b) - min(a, b)\n    else:\n        return max(b, a) - min(b, a)\n\n\nprint(min_operations(3, 2))"
    },
    {
      "rank": 61,
      "score": 8.289838256518838,
      "candidate": "def min_operations(a,b):\n    if a == b:\n        return 0\n    elif a > b:\n        return 1 + min_operations(b,a)\n    else:\n        return 1 + min_operations(a,b)\n\nprint(min_operations(4,3))"
    },
    {
      "rank": 62,
      "score": 8.251903304236286,
      "candidate": "def minimumOperations(a, b):\n    if a < b:\n        return 1 + minimumOperations(b, a)\n    else:\n        return 1 + minimumOperations(a, b)\n\n\nif __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    print(minimumOperations(a, b))"
    },
    {
      "rank": 63,
      "score": 8.214125058964552,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nif __name__ == '__main__':\n    print(min_operations(5, 4))"
    },
    {
      "rank": 64,
      "score": 8.212735598038213,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1\n    if b > a:\n        return 1 + min_operations(b, a)\n\na = int(input())\nb = int(input())\nprint(min_operations(a, b))"
    },
    {
      "rank": 65,
      "score": 8.211579567659316,
      "candidate": "def minimum_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + minimum_operations(b, a)\n    return 1 + minimum_operations(a, b)\n\nprint(minimum_operations(1, 2))"
    },
    {
      "rank": 66,
      "score": 8.209707251476969,
      "candidate": "def minimum_operations(a, b):\n    if a == b:\n        return 0\n\n    return 1 + min(minimum_operations(a, b - a), minimum_operations(b, a - b))\n\n\ndef main():\n    print(minimum_operations(1, 1))\n    print(minimum_operations(1, 2))\n    print(minimum_operations(1, 2))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 67,
      "score": 8.2048573255218,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a%b)\n    return 1 + min_operations(a, b%a)\n\n\nprint(min_operations(2, 3))"
    },
    {
      "rank": 68,
      "score": 8.172253082181854,
      "candidate": "def min_operations(a,b):\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b,a)\n    return 1 + min_operations(a,b)\n\n\n\nif __name__ == \"__main__\":\n    print(min_operations(2,2))\n    print(min_operations(2,3))\n    print(min_operations(4,4))\n    print(min_operations(5,5))\n    print(min_operations(5,6))\n    print(min_operations(10,10))\n    print(min_operations(5,5))"
    },
    {
      "rank": 69,
      "score": 8.163300679823958,
      "candidate": "def min_operations(a, b):\n    if a > b:\n        a, b = b, a\n\n    diff = a - b\n    return diff\n\n\nprint(min_operations(2, 2))\nprint(min_operations(2, 3))\nprint(min_operations(3, 2))\nprint(min_operations(3, 3))\nprint(min_operations(3, 4))\nprint(min_operations(4, 3))"
    },
    {
      "rank": 70,
      "score": 8.144125099485041,
      "candidate": "def minimum_operations(n1, n2):\n    if n1 == n2:\n        return 0\n\n    if n1 > n2:\n        return 1\n\n    return 2\n\n\nprint(minimum_operations(3, 4))"
    },
    {
      "rank": 71,
      "score": 8.143591138329747,
      "candidate": "def min_operation(a, b):\n    if a == b:\n        return 0\n    else:\n        return (a + b)\n\n\nprint(min_operation(2, 3))"
    },
    {
      "rank": 72,
      "score": 8.121884567141883,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    elif num1 > num2:\n        return 1\n    else:\n        return 2\n\n\nprint(min_operations(2, 3))"
    },
    {
      "rank": 73,
      "score": 8.105983444291466,
      "candidate": "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a > b:\n        return min(a, b)\n    if a < b:\n        return max(a, b)\n    return 0\n\n\nprint(min_operations(4, 5))"
    },
    {
      "rank": 74,
      "score": 8.08452234024709,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1\n    else:\n        return 2\n\n\nprint(min_operations(3, 4))"
    },
    {
      "rank": 75,
      "score": 8.024835682833125,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 > num2:\n        return 1 + min_operations(num2, num1)\n    else:\n        return 2 + min_operations(num1, num2)\n\n\ndef main():\n    print(min_operations(4, 7))\n    print(min_operations(5, 6))\n    print(min_operations(8, 6))\n    print(min_operations(9, 6))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 76,
      "score": 7.990432406683839,
      "candidate": "def min_operations(a,b):\n    # Write your code here\n    c=a-b\n    if c<0:\n        c=c+(abs(c))\n    return c\n\nprint(min_operations(1,2))"
    },
    {
      "rank": 77,
      "score": 7.938028884277233,
      "candidate": "def min_operations(a, b):\n    if a < b:\n        return min(a, b) + 1\n    else:\n        return min(b, a) + 1\n\n\nprint(min_operations(2, 5))"
    },
    {
      "rank": 78,
      "score": 7.915588979966494,
      "candidate": "def min_ops(a, b):\n    if a == b:\n        return 0\n    else:\n        return min(a, b) + 1\n\n\nprint(min_ops(1, 2))\nprint(min_ops(1, 3))\nprint(min_ops(3, 1))\nprint(min_ops(1, 5))"
    },
    {
      "rank": 79,
      "score": 7.8912769574414305,
      "candidate": "def min_operations(a,b):\n    if a>b:\n        return min(b-a,min_operations(b,a-b))\n    else:\n        return min(a-b,min_operations(a,b-a))\n\nprint(min_operations(5,3))"
    },
    {
      "rank": 80,
      "score": 7.868947655733293,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return (a + b)\n\n\nprint(min_operations(2, 3))\nprint(min_operations(2, 4))\nprint(min_operations(2, 5))\nprint(min_operations(2, 6))\nprint(min_operations(4, 5))"
    },
    {
      "rank": 81,
      "score": 7.84634113240411,
      "candidate": "def minimum_operations(x, y):\n    return abs(x-y)\n\n\nif __name__ == \"__main__\":\n    print(minimum_operations(4, 4))\n    print(minimum_operations(2, 2))\n    print(minimum_operations(2, 4))"
    },
    {
      "rank": 82,
      "score": 7.834022619458933,
      "candidate": "def minimum_operations(x, y):\n    if x == y:\n        return 0\n    else:\n        return 1 + min(minimum_operations(x, y), minimum_operations(y, x))\n\n\nif __name__ == '__main__':\n    print(minimum_operations(2, 3))\n    print(minimum_operations(5, 2))"
    },
    {
      "rank": 83,
      "score": 7.780351419995229,
      "candidate": "def min_operations(a,b):\n    # Write your code here\n    a_set = set(a)\n    b_set = set(b)\n    return len(a_set.intersection(b_set)) + len(b_set.intersection(a_set))\n\nprint(min_operations(2,4))"
    },
    {
      "rank": 84,
      "score": 7.738292593776799,
      "candidate": "def minimum_operations(x, y):\n    if x == y:\n        return 0\n    if x < y:\n        return 1 + minimum_operations(y, x)\n    return 1 + minimum_operations(x, y)\n\nprint(minimum_operations(5, 6))"
    },
    {
      "rank": 85,
      "score": 7.7320703513377165,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    if num1 < num2:\n        return 1\n    else:\n        return -1\n\n\nif __name__ == \"__main__\":\n    print(min_operations(2, 2))"
    },
    {
      "rank": 86,
      "score": 7.705183449260731,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    else:\n        return max(a + b, a - b)\n\n\ndef main():\n    print(min_operations(1, 1))\n    print(min_operations(4, 1))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 87,
      "score": 7.5819855281879285,
      "candidate": "def minimumOperations(a, b):\n    if a > b:\n        return b - a\n    else:\n        return a - b\n\n\nif __name__ == \"__main__\":\n    print(minimumOperations(1, 1))"
    },
    {
      "rank": 88,
      "score": 7.562924366763077,
      "candidate": "def min_ops(a, b):\n    if a < b:\n        return (b - a)\n    else:\n        return (a - b)\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nprint(\"Minimum operations required are: \", min_ops(a, b))"
    },
    {
      "rank": 89,
      "score": 7.4878043221155455,
      "candidate": "def min_operations(num1, num2):\n    if num1 == num2:\n        return 0\n    else:\n        return min(num1, num2) + max(num1, num2)\n\nprint(min_operations(3, 2))\nprint(min_operations(3, 4))\nprint(min_operations(3, 5))\nprint(min_operations(3, 6))\nprint(min_operations(3, 7))\nprint(min_operations(6, 7))\nprint(min_operations(6, 8))\nprint(min_operations(7, 8))\nprint(min_operations(7, 9))\nprint(min_operations(7, 10))\nprint(min_operations(7, 11))"
    },
    {
      "rank": 90,
      "score": 7.464609382504557,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    if a < b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\nprint(min_operations(1, 1))"
    },
    {
      "rank": 91,
      "score": 7.4506599871439985,
      "candidate": "def min_operations(a, b):\n    return (a + b) - min(a, b)\n\n\nprint(min_operations(2, 2))\nprint(min_operations(4, 2))\nprint(min_operations(2, 4))\nprint(min_operations(4, 4))"
    },
    {
      "rank": 92,
      "score": 7.134571892399572,
      "candidate": "def min_operations(a, b):\n    if a == b:\n        return 0\n    elif a < b:\n        return 1\n    else:\n        return 2\n\n\nprint(min_operations(5, 3))"
    },
    {
      "rank": 93,
      "score": 3.0,
      "candidate": "def min_operations(x, y):\n    min_op = abs(x - y)\n    return min_op\n\n\nprint(min_operations(1, 2))"
    },
    {
      "rank": 94,
      "score": 3.0,
      "candidate": "def min_operations(a,b):\n    if(a==b):\n        return 0\n    elif(a>b):\n        return 1\n    else:\n        return 2\n\nprint(min_operations(2,3))"
    },
    {
      "rank": 95,
      "score": 3.0,
      "candidate": "def min_ops(num1, num2):\n    num1 = abs(num1)\n    num2 = abs(num2)\n    if num1 == num2:\n        return 0\n\n    if num1 < num2:\n        return 1\n    else:\n        return -1\n\nprint(min_ops(2, 3))\nprint(min_ops(4, 5))\nprint(min_ops(8, 10))\nprint(min_ops(4, -10))\nprint(min_ops(4, -4))"
    },
    {
      "rank": 96,
      "score": 3.0,
      "candidate": "def min_operations(num1, num2):\n    # write your code here\n    if num1 == num2:\n        return 0\n    elif num1 > num2:\n        return 1 + min_operations(num2, num1 % num2)\n    elif num2 > num1:\n        return 1 + min_operations(num1 % num2, num2)"
    },
    {
      "rank": 97,
      "score": 3.0,
      "candidate": "def min_operations(a, b):\n    return (abs(a) + abs(b))\n\nprint(min_operations(1, 2))"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "import math\n\ndef min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    else:\n        return 1 + min_operations(a, b)\n\n\na = 2\nb = 3\nprint(min_operations(a, b))"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def min_operations(a, b):\n    # write your code here\n    if a == b:\n        return 0\n    else:\n        return 1 + min(min_operations(a, b - a), min_operations(a - b, b))\n\n\nprint(min_operations(2, 3))\nprint(min_operations(2, 6))\nprint(min_operations(3, 4))\nprint(min_operations(4, 4))\nprint(min_operations(5, 5))\nprint(min_operations(4, 7))\nprint(min_operations(7, 7))\nprint(min_operations(7, 7))\nprint(min_operations(7, 8))"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def min_operations(a, b):\n    \"\"\"\n    :type a: int\n    :type b: int\n    :rtype: int\n    \"\"\"\n    if a == b:\n        return 0\n    if a > b:\n        return 1 + min_operations(b, a)\n    return 1 + min_operations(a, b)\n\n\nprint(min_operations(10, 20))\nprint(min_operations(20, 10))\nprint(min_operations(20, 100))\nprint(min_operations(100, 20))\nprint(min_operations(100, 100))"
    }
  ]
}