{
  "timestamp": "2025-09-14T15:12:47.675157",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 374,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nprint(perrin(10))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def perrin_number(n):\n    if n == 0:\n        return 0\n    return perrin_number(n-1) + n\n\n\ndef main():\n    print(perrin_number(10))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n==1:\n        return 1\n    return perrin(n-1)+perrin(n-2)\n\nprint(perrin(5))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def perrin_recursion(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n\n    return perrin_recursion(n - 1) + perrin_recursion(n - 2)\n\n\ndef perrin_recursive(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    return perrin_recursive(n - 1) + perrin_recursive(n - 2) + perrin_recursive(n - 3)\n\n\nif __name__ == \"__main__\":\n    print(perrin_recursive(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursion(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursion(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursion(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5))\n    print(perrin_recursive(5"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def perrin(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 1\n    else:\n        return n * perrin(n-1)\n\n\nif __name__ == \"__main__\":\n    assert perrin(0) == 1\n    assert perrin(1) == 2\n    assert perrin(2) == 6\n    assert perrin(3) == 13\n    assert perrin(4) == 24\n    assert perrin(5) == 35\n    assert perrin(6) == 49\n    assert perrin(7) == 64\n    assert perrin(8) == 81\n    assert perrin(9) == 119\n    assert perrin(10) == 384\n    assert perrin(11) == 5040\n    assert perrin(12) == 8780\n    assert perrin(13) == 6640\n    assert perrin(14) == 41600\n    assert perrin(15) == 36400\n    assert perrin(16) == 26800\n    assert perrin(17) == 21600\n    assert perrin(18) == 18400\n    assert perrin(19) == 88800\n    assert perrin(20) == 18400\n    assert perrin(21) == 41600\n    assert perrin(22) == 5040\n    assert perrin(23) == 6400\n    assert perrin(24) == 38400\n    assert perrin(25) == 90600\n    assert perrin(26) == 153600\n    assert perrin(27) == 51600\n    assert perrin(28) == 41600\n    assert perrin(29) == 21600\n    assert perrin(30) == 18400\n    assert perrin(31) == 88800\n    assert perrin(32) == 88800\n    assert perrin(33) == 70600\n    assert perrin(34) == 51600\n    assert perrin(35"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def perrin_num(n):\n    if n <= 0:\n        return\n    print(\" \".join([str(n), \"perrin\"][n > 1]))\n    perrin_num(n - 1)\n\n\nperrin_num(10)"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n + find_nth_perrin(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(find_nth_perrin(6))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    return n + perrin(n-1)\n\n\nprint(perrin(4))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return perrin(n - 1) + perrin(n - 2)\n\nif __name__ == '__main__':\n    print(perrin(5))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def find_perrin(n):\n    if n == 1:\n        return 1\n\n    return find_perrin(n - 1) + find_perrin(n - 2)\n\n\nprint(find_perrin(5))"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(10))"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(4))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def perrin_num(n):\n    if n == 1:\n        return 1\n    else:\n        return n + perrin_num(n - 1)\n\nprint(perrin_num(6))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n+perrin(n-1)\n\nprint(perrin(9))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def perrin_recursion(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return perrin_recursion(n-1) + perrin_recursion(n-2)\n\nprint(perrin_recursion(5))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n * perrin(n - 1)\n\nprint(perrin(int(input())))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return n + perrin(n-1)\n\nprint(perrin(5))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def find_nth_perrin(n):\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n + find_nth_perrin(n - 1)\n\nprint(find_nth_perrin(5))"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    else:\n        return perrin(n-1) + perrin(n-2)\n\nprint(perrin(5))"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    else:\n        return perrin(n-1) + perrin(n-2)\n\nprint(perrin(int(input())))"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(5))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n - 1) + perrin(n - 2)\n\nprint(perrin(6))"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    return perrin(n-1) + perrin(n-2)\n\n\nif __name__ == \"__main__\":\n    print(perrin(5))"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return 1\n    return n + perrin(n-1)\n\n\nprint(perrin(10))"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    return n + perrin(n-1)\n\nprint(perrin(7))"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def perrin_number(n):\n    if n == 1:\n        return 1\n    return perrin_number(n - 1) + perrin_number(n - 2)\n\nprint(perrin_number(3))"
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def perrin_counter(n):\n    if n == 0:\n        return 0\n    return n + perrin_counter(n-1)\n\nprint(perrin_counter(20))"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nprint(perrin(5))"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def perrin_number(n):\n    if n < 0:\n        return False\n    elif n == 0:\n        return True\n    elif n == 1:\n        return False\n    else:\n        return perrin_number(n - 1) or perrin_number(n - 2)\n\n\ndef main():\n    n = int(input(\"Enter the number of elements: \"))\n    print(perrin_number(n))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n + perrin(n-1)\n\n\nprint(perrin(5))"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return 1\n    else:\n        return perrin(n - 1) + perrin(n - 2)\n\nprint(perrin(10))"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n\n    return perrin(n-1) + perrin(n-2)\n\ndef main():\n    print(perrin(3))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "def perrin_number(n):\n    if n == 1:\n        return 1\n    return perrin_number(n-1) + perrin_number(n-2)\n\nprint(perrin_number(10))"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n * perrin(n-1)\n\nprint(perrin(int(input())))"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nif __name__ == \"__main__\":\n    print(perrin(10))"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 3\n    else:\n        return perrin(n - 1) + perrin(n - 2) + perrin(n - 3)\n\n\nif __name__ == '__main__':\n    print(perrin(5))"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "def find_perrin(n):\n    if n <= 0:\n        return 0\n    else:\n        return n + find_perrin(n-1)\n\n\nif __name__ == \"__main__\":\n    print(find_perrin(5))"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\n\ndef main():\n    print(perrin(5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nprint(perrin(8))"
    },
    {
      "rank": 40,
      "score": 10.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n + perrin(n-1)\n\nprint(perrin(5))"
    },
    {
      "rank": 41,
      "score": 9.0,
      "candidate": "def perrin(n):\n\t\n\tif n == 0:\n\t\treturn 0\n\t\n\tif n == 1:\n\t\treturn 1\n\t\n\treturn perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(5))"
    },
    {
      "rank": 42,
      "score": 9.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    else:\n        return perrin(n-1)+perrin(n-2)\n\nprint(perrin(int(input())))"
    },
    {
      "rank": 43,
      "score": 9.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of perrin numbers: \"))\n    print(perrin(n))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def perrin_number(n):\n    if n == 1:\n        return 1\n    return perrin_number(n - 1) + perrin_number(n - 2)\n\n\nprint(perrin_number(6))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return n + perrin(n-1)\n\ndef main():\n    print(perrin(10))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return n\n    else:\n        return n + perrin(n - 1)\n\n\nif __name__ == '__main__':\n    print(perrin(6))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nprint(perrin(5))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def perrin(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n + perrin(n-1)\n\n\nif __name__ == \"__main__\":\n    print(perrin(10))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n + perrin(n - 1)\n\n\nprint(perrin(10))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return n + perrin(n-1)\n\nprint(perrin(10))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    def helper(n, i):\n        if i == n:\n            return True\n        if i < n:\n            if helper(n, i + 1):\n                return False\n            if helper(n, i + 2):\n                return False\n        return True\n    return helper(n, 0)\n\nprint(find_nth_perrin(5))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\nprint(perrin(7))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n, p):\n    if n == 0:\n        return p[0]\n    elif n == 1:\n        return p[0] * p[1]\n    else:\n        return find_nth_perrin(n - 1, p + [p[0] * p[1]])\n\ndef main():\n    n = int(input())\n    p = list(map(int, input().split()))\n    print(find_nth_perrin(n, p))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    return n + perrin(n-1)\n\nprint(perrin(5))\nprint(perrin(10))\nprint(perrin(20))\nprint(perrin(30))\nprint(perrin(40))\nprint(perrin(50))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n + find_nth_perrin(n - 1)\n\n\nprint(find_nth_perrin(7))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return n + perrin(n-1)\n\nprint(perrin(10))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    return perrin(n-1) + perrin(n-2)\n\nprint(perrin(10))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(6))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def find_perrin_number(n):\n    if n < 1:\n        return -1\n    if n == 1:\n        return 1\n    return find_perrin_number(n - 1) + find_perrin_number(n - 2)\n\n\nif __name__ == '__main__':\n    print(find_perrin_number(6))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n * perrin(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(perrin(8))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return n * perrin(n-1)\n\nprint(perrin(3))\nprint(perrin(4))\nprint(perrin(5))\nprint(perrin(6))\nprint(perrin(7))\nprint(perrin(8))\nprint(perrin(9))\nprint(perrin(10))\nprint(perrin(11))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n - 1) + perrin(n - 2)\n\nprint(perrin(int(input())))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def perrin_number(n):\n    if n == 1:\n        return 1\n    else:\n        return n + perrin_number(n-1)\n\nprint(perrin_number(4))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(5))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return find_nth_perrin(n-1) + find_nth_perrin(n-2)\n\nprint(find_nth_perrin(4))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 0:\n        return 1\n    return find_nth_perrin(n-1) + find_nth_perrin(n-2)\n\n\nprint(find_nth_perrin(5))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\nprint(perrin(4))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nprint(perrin(10))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def perrin_number(n):\n    if n <= 1:\n        return 1\n    return perrin_number(n - 1) + perrin_number(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(perrin_number(5))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def perrin_number(n):\n\tif n < 2:\n\t\treturn n\n\telse:\n\t\treturn perrin_number(n-1) + perrin_number(n-2)\n\nprint(perrin_number(5))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n==1:\n        return 1\n    return n+perrin(n-1)\n\nprint(perrin(5))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n + find_nth_perrin(n - 1)\n\nif __name__ == \"__main__\":\n    print(find_nth_perrin(10))"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n <= 1:\n        return n\n    return find_nth_perrin(n-1) + find_nth_perrin(n-2)\n\nprint(find_nth_perrin(10))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n <= 0:\n        return -1\n    elif n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\n\ndef main():\n    print(perrin(6))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def perrin_num(n):\n    if n == 1:\n        return 1\n    return n * perrin_num(n-1)\n\n\nprint(perrin_num(4))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    else:\n        return perrin(n-1)+perrin(n-2)\n\n\nprint(perrin(5))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n==1:\n        return 1\n    else:\n        return n+find_nth_perrin(n-1)\n\nprint(find_nth_perrin(5))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n <= 1:\n        return n\n    return find_nth_perrin(n - 1) + find_nth_perrin(n - 2)\n\n\nprint(find_nth_perrin(5))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def find_nth_perrin_number(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return find_nth_perrin_number(n - 1) + find_nth_perrin_number(n - 2)\n\n\nprint(find_nth_perrin_number(7))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n <= 1:\n        return n\n    return perrin(n-1) + perrin(n-2)\n\n\nprint(perrin(10))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n < 1:\n        return -1\n    return find_nth_perrin(n-1)+find_nth_perrin(n-2)\n\nprint(find_nth_perrin(5))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def perrin_number(n):\n    if n == 1:\n        return 1\n    else:\n        return n + perrin_number(n-1)\n\nprint(perrin_number(6))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    else:\n        return n + perrin(n-1)\n\n\nif __name__ == \"__main__\":\n    print(perrin(5))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def find_nth_perrin_number(n):\n    if n == 1:\n        return 1\n    else:\n        return find_nth_perrin_number(n-1) + find_nth_perrin_number(n-2)\n\nprint(find_nth_perrin_number(5))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def perrin_num(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return perrin_num(n-1) + perrin_num(n-2)\n\nprint(perrin_num(4))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def perrin_recursion(n):\n    if n == 1:\n        return 1\n    return n + perrin_recursion(n - 1)\n\n\ndef perrin(n):\n    return perrin_recursion(n)\n\n\nprint(perrin(6))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def perrin_number(n):\n    if n == 1:\n        return 1\n    else:\n        return n + perrin_number(n-1)\n\nprint(perrin_number(5))"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return perrin(n-1) + perrin(n-2)\n\nprint(perrin(3))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 1\n    return perrin(n-1) + perrin(n-2)\n\nif __name__ == '__main__':\n    print(perrin(5))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 1:\n        return 1\n    return n * find_nth_perrin(n-1)\n\nprint(find_nth_perrin(100))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def find_nth_perrin_number(n):\n    if n == 1:\n        return 1\n    return find_nth_perrin_number(n - 1) + find_nth_perrin_number(n - 2)\n\nprint(find_nth_perrin_number(4))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 1:\n        return 1\n    else:\n        return n + find_nth_perrin(n-1)\n\nprint(find_nth_perrin(10))"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def find_nth_perrin(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    return n * find_nth_perrin(n-1)\n\n\nprint(find_nth_perrin(3))"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    return perrin(n - 1) + perrin(n - 2)\n\nprint(perrin(6))"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n < 2:\n        return n\n    return perrin(n - 1) + perrin(n - 2)\n\nprint(perrin(10))"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "def find_perrin(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return find_perrin(n - 1) + find_perrin(n - 2)\n\n\nprint(find_perrin(6))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "def perrin(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1 + 2\n    elif n == 3:\n        return 1 + 2 + 3\n    else:\n        return perrin(n-1) + perrin(n-2) + perrin(n-3)\n\nprint(perrin(4))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def perrin(n):\n    \"\"\"\n    Find the nth perrin number using recursion\n    :param n:\n    :return:\n    \"\"\"\n    if n == 0:\n        return 1\n    return perrin(n - 1) + perrin(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(perrin(10))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def perrin_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 2:\n        return n\n    else:\n        return perrin_number(n-1) + perrin_number(n-2)\n\n\nif __name__ == \"__main__\":\n    assert perrin_number(1) == 1\n    assert perrin_number(2) == 2\n    assert perrin_number(3) == 3\n    assert perrin_number(4) == 6\n    assert perrin_number(5) == 8\n    assert perrin_number(6) == 12\n    assert perrin_number(7) == 15\n    assert perrin_number(8) == 19\n    assert perrin_number(9) == 24"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def perrin_num(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n\n    if n % 2 == 0:\n        return perrin_num(n // 2) + perrin_num(n // 2)\n    else:\n        return perrin_num(n // 2) * perrin_num(n // 2)\n\n\nif __name__ == \"__main__\":\n    print(perrin_num(10))"
    }
  ]
}