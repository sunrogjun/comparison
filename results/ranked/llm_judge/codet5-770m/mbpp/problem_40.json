{
  "timestamp": "2025-09-14T12:45:58.943341",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 40,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\nis_equilateral(3, 4, 5)\nis_equilateral(3, 4, 6)\nis_equilateral(3, 4, 7)\nis_equilateral(5, 6, 4)\nis_equilateral(5, 6, 8)\nis_equilateral(5, 6, 9)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        print(\"True\")\n    else:\n        print(\"False\")\n\n\na = int(input(\"Enter a value\"))\nb = int(input(\"Enter b value\"))\nc = int(input(\"Enter c value\"))\nequilateral(a, b, c)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def triangle(a, b, c):\n    if a == b and a == c and b == c:\n        print(\"Triangle is equilateral\")\n    else:\n        print(\"Triangle is not equilateral\")\n\ntriangle(1, 2, 3)\ntriangle(2, 4, 6)\ntriangle(3, 4, 6)\ntriangle(3, 4, 7)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def triangle(a,b,c):\n    if (a==b==c):\n        print(\"It is equilateral\")\n    else:\n        print(\"It is not equilateral\")\n\n\ntriangle(4,7,11)\ntriangle(2,5,7)\ntriangle(3,6,9)\ntriangle(4,5,8)\ntriangle(1,2,3)\ntriangle(5,8,9)"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def triangle_equilateral(a, b, c):\n    if (a + b == c) and (a + c == b):\n        print(a, b, c, \"is equilateral.\")\n    else:\n        print(a, b, c, \"is not equilateral.\")\n\n\na = float(input(\"Enter the first side: \"))\nb = float(input(\"Enter the second side: \"))\nc = float(input(\"Enter the third side: \"))\ntriangle_equilateral(a, b, c)"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def checkTriangle(a, b, c):\n    if a == b or a == c or b == c:\n        print(\"Triangle is equilateral\")\n    else:\n        print(\"Triangle is not equilateral\")\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\ncheckTriangle(a, b, c)"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b and a == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ntriangle_equilateral(3, 5, 7)\ntriangle_equilateral(5, 3, 7)\ntriangle_equilateral(5, 8, 3)\ntriangle_equilateral(6, 9, 3)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def isEquilateral(a,b,c):\n    if a == b and a == c:\n        return True\n    else:\n        return False\n\nprint(isEquilateral(3,4,5))\nprint(isEquilateral(4,5,6))\nprint(isEquilateral(2,3,4))\nprint(isEquilateral(4,5,6))\nprint(isEquilateral(3,3,4))"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def checkTriangleEquilateral(a, b, c):\n    return a == b and b == c and c == a\n\nprint(checkTriangleEquilateral(3, 4, 5))\nprint(checkTriangleEquilateral(6, 8, 10))\nprint(checkTriangleEquilateral(12, 15, 18))\nprint(checkTriangleEquilateral(15, 18, 12))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def isEquilateral(a,b,c):\n    if a == b and a == c:\n        print(\"Triangle is equilateral\")\n    else:\n        print(\"Triangle is not equilateral\")\n\na = float(input(\"Enter the first number: \"))\nb = float(input(\"Enter the second number: \"))\nc = float(input(\"Enter the third number: \"))\nisEquilateral(a,b,c)"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def check_triangle(a, b, c):\n    if a == b + c:\n        print(\"Triangle is equilateral\")\n    else:\n        print(\"Triangle is not equilateral\")\n\ncheck_triangle(3, 4, 5)"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def is_equilateral(a, b, c):\n    return ((a + b) == c) and ((a + c) == b) and ((a + b) == c)\n\na = int(input(\"Enter the first triangle number: \"))\nb = int(input(\"Enter the second triangle number: \"))\nc = int(input(\"Enter the third triangle number: \"))\n\nif is_equilateral(a, b, c):\n    print(\"Triangle is equilateral\")\nelse:\n    print(\"Triangle is not equilateral\")"
    },
    {
      "rank": 13,
      "score": 9.370583536698913,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and b == c and c == a:\n        return True\n    else:\n        return False\n\n\nprint(is_equilateral(2, 3, 5))\nprint(is_equilateral(4, 6, 7))\nprint(is_equilateral(4, 6, 8))\nprint(is_equilateral(3, 5, 7))\nprint(is_equilateral(5, 8, 3))"
    },
    {
      "rank": 14,
      "score": 9.234050852198141,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif a!= b and a!= c:\n        return False\n\n\nif __name__ == '__main__':\n    a = int(input('Enter the first triangle: '))\n    b = int(input('Enter the second triangle: '))\n    c = int(input('Enter the third triangle: '))\n\n    if is_equilateral(a, b, c):\n        print('The triangle is equilateral')\n    else:\n        print('The triangle is not equilateral')"
    },
    {
      "rank": 15,
      "score": 9.226766272351448,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif a!= b and a!= c:\n        return False\n    else:\n        return False\n\n\na = int(input())\nb = int(input())\nc = int(input())\n\nif is_equilateral(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 16,
      "score": 9.21346272767743,
      "candidate": "a = float(input(\"Enter the triangle's first triangle's sides: \"))\nb = float(input(\"Enter the triangle's second triangle's sides: \"))\nc = float(input(\"Enter the triangle's third triangle's sides: \"))\n\nif a == b and b == c and a == c:\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 17,
      "score": 9.205959372648458,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b or a == c or b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nc = int(input(\"Enter the third number: \"))\ncheck_equilateral(a, b, c)"
    },
    {
      "rank": 18,
      "score": 9.183391466815202,
      "candidate": "def is_equilateral(a, b, c):\n    if abs(a - b) == abs(a - c) and abs(b - c) == abs(b - a):\n        return True\n    else:\n        return False\n\n\nprint(is_equilateral(3, 2, 4))\nprint(is_equilateral(2, 4, 2))"
    },
    {
      "rank": 19,
      "score": 9.177268828905222,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b == c:\n        return True\n    else:\n        return False\n\n\na = int(input(\"enter the first triangle number: \"))\nb = int(input(\"enter the second triangle number: \"))\nc = int(input(\"enter the third triangle number: \"))\n\nif is_equilateral(a, b, c):\n    print(\"triangle is equilateral\")\nelse:\n    print(\"triangle is not equilateral\")"
    },
    {
      "rank": 20,
      "score": 9.122564458729856,
      "candidate": "def triangle_equilateral(a, b, c):\n    if (a + b == c) and (a + c == c):\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ntriangle_equilateral(4, 8, 12)"
    },
    {
      "rank": 21,
      "score": 8.973005557553902,
      "candidate": "def check_equilateral(a, b, c):\n    if (a == b and b == c):\n        return True\n    else:\n        return False\n\nprint(check_equilateral(1, 1, 1))\nprint(check_equilateral(3, 2, 4))\nprint(check_equilateral(4, 3, 5))"
    },
    {
      "rank": 22,
      "score": 8.95994420569242,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b == c:\n        return True\n    elif a!= b or b!= c or c!= a:\n        return False\n    else:\n        return True\n\n\nif __name__ == \"__main__\":\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    print(is_equilateral(a, b, c))"
    },
    {
      "rank": 23,
      "score": 8.946210893390457,
      "candidate": "def check_triangle(a, b, c):\n    return (a == b and a == c) or (b == c and b == a) or (c == a and c == b)\n\nprint(check_triangle(5, 6, 7))"
    },
    {
      "rank": 24,
      "score": 8.932217008005624,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif b == c or b == a or a == c:\n        return True\n    else:\n        return False\n\nprint(is_equilateral(3, 4, 5))"
    },
    {
      "rank": 25,
      "score": 8.910084504002544,
      "candidate": "def check_triangle(a, b, c):\n    if a == b and a == c and b == c:\n        return True\n    else:\n        return False\n\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\n\nif check_triangle(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 26,
      "score": 8.85571690049604,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b == c:\n        return True\n    else:\n        return False\n\nprint(is_equilateral(4, 5, 6))\nprint(is_equilateral(8, 6, 9))\nprint(is_equilateral(3, 3, 2))\nprint(is_equilateral(1, 2, 3))\nprint(is_equilateral(0, 0, 0))\nprint(is_equilateral(1, 1, 1))\nprint(is_equilateral(0, 0, 0))"
    },
    {
      "rank": 27,
      "score": 8.855395696632057,
      "candidate": "def check_triangle(a, b, c):\n    if a == b and a == c:\n        return \"is equilateral\"\n    if a!= b and a!= c:\n        return \"is not equilateral\"\n\n\na = int(input(\"a: \"))\nb = int(input(\"b: \"))\nc = int(input(\"c: \"))\n\nprint(check_triangle(a, b, c))"
    },
    {
      "rank": 28,
      "score": 8.850707355641543,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif a!= b and a!= c:\n        return False\n\ndef main():\n    a = float(input(\"Enter a value: \"))\n    b = float(input(\"Enter b value: \"))\n    c = float(input(\"Enter c value: \"))\n    print(is_equilateral(a, b, c))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 29,
      "score": 8.8281618090209,
      "candidate": "def triangle_equilateral(a, b, c):\n    if (a == b == c):\n        print(\"The triangle is equilateral.\")\n    else:\n        print(\"The triangle is not equilateral.\")\n\n\ntriangle_equilateral(3, 4, 5)"
    },
    {
      "rank": 30,
      "score": 8.81367773444215,
      "candidate": "def is_equilateral(a, b, c):\n    return (a == b and b == c and c == a)\n\nprint(is_equilateral(2, 2, 2))\nprint(is_equilateral(3, 2, 2))\nprint(is_equilateral(4, 3, 2))\nprint(is_equilateral(4, 4, 4))"
    },
    {
      "rank": 31,
      "score": 8.76828871349479,
      "candidate": "def is_equilateral(a, b, c):\n    return a == b and a == c and b == c\n\nprint(is_equilateral(3, 4, 5))"
    },
    {
      "rank": 32,
      "score": 8.750282588864879,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and b == c:\n        print(\"It is equilateral triangle\")\n    else:\n        print(\"It is not equilateral triangle\")\n\n\na = float(input(\"Enter the first side of the triangle: \"))\nb = float(input(\"Enter the second side of the triangle: \"))\nc = float(input(\"Enter the third side of the triangle: \"))\nis_equilateral(a, b, c)"
    },
    {
      "rank": 33,
      "score": 8.715724466237427,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b == c:\n        return True\n    else:\n        return False\n\na = int(input(\"Enter a: \"))\nb = int(input(\"Enter b: \"))\nc = int(input(\"Enter c: \"))\n\nif is_equilateral(a,b,c):\n    print(\"Triangle is equilateral.\")\nelse:\n    print(\"Triangle is not equilateral.\")"
    },
    {
      "rank": 34,
      "score": 8.692801520950061,
      "candidate": "def is_equilateral(a, b, c):\n    a1 = a * a\n    b1 = b * b\n    c1 = c * c\n\n    if a1 == b1 == c1:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    a = int(input(\"Enter a: \"))\n    b = int(input(\"Enter b: \"))\n    c = int(input(\"Enter c: \"))\n    print(\"Is the triangle equilateral? \", is_equilateral(a, b, c))"
    },
    {
      "rank": 35,
      "score": 8.632293453617281,
      "candidate": "def is_equilateral(a, b, c):\n    if (a == b and a == c and b == c):\n        return True\n    else:\n        return False\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nc = int(input(\"Enter the third number: \"))\nif is_equilateral(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 36,
      "score": 8.625262456968262,
      "candidate": "a = int(input(\"Enter the side of the triangle: \"))\nb = int(input(\"Enter the side of the triangle: \"))\nc = int(input(\"Enter the side of the triangle: \"))\n\nif a == b == c:\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 37,
      "score": 8.625142247198651,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\na = int(input(\"Enter the first side of the triangle: \"))\nb = int(input(\"Enter the second side of the triangle: \"))\nc = int(input(\"Enter the third side of the triangle: \"))\ntriangle_equilateral(a, b, c)"
    },
    {
      "rank": 38,
      "score": 8.623000730200317,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b + c and a == c + b and a == b:\n        return True\n    return False\n\nprint(triangle_equilateral(4, 2, 6))"
    },
    {
      "rank": 39,
      "score": 8.616253589228675,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b == c:\n        print(a, b, c, \"is equilateral\")\n    else:\n        print(a, b, c, \"is not equilateral\")\n\na = int(input(\"Enter the first side of the triangle: \"))\nb = int(input(\"Enter the second side of the triangle: \"))\nc = int(input(\"Enter the third side of the triangle: \"))\nis_equilateral(a, b, c)"
    },
    {
      "rank": 40,
      "score": 8.610076160146226,
      "candidate": "def equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    a = int(input())\n    b = int(input())\n    c = int(input())\n    print(equilateral(a, b, c))"
    },
    {
      "rank": 41,
      "score": 8.606486429141842,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b or b == c or c == a:\n        return True\n    return False\n\n\na = int(input(\"Enter a: \"))\nb = int(input(\"Enter b: \"))\nc = int(input(\"Enter c: \"))\n\nif is_equilateral(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 42,
      "score": 8.60156811074208,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    if b == c and b == a:\n        return True\n    if c == a and c == b:\n        return True\n    return False\n\n\nprint(check_equilateral(1, 2, 3))\nprint(check_equilateral(1, 3, 4))\nprint(check_equilateral(1, 2, 3))\nprint(check_equilateral(2, 3, 3))\nprint(check_equilateral(2, 4, 4))\nprint(check_equilateral(2, 4, 5))\nprint(check_equilateral(3, 4, 5))\nprint(check_equilateral(4, 5, 5))\nprint(check_equilateral(4, 5, 6))"
    },
    {
      "rank": 43,
      "score": 8.565425580227462,
      "candidate": "def triangle(n):\n    if (n == 1 or n == 2):\n        return True\n    else:\n        return False\n\nprint(triangle(int(input())))"
    },
    {
      "rank": 44,
      "score": 8.548876241946822,
      "candidate": "def check(a, b, c):\n    if a == b and a == c:\n        return True\n    if a == b or a == c or b == c:\n        return False\n\n\na = float(input(\"a = \"))\nb = float(input(\"b = \"))\nc = float(input(\"c = \"))\nif check(a, b, c):\n    print(\"Triangle is equilateral\")\nelse:\n    print(\"Triangle is not equilateral\")"
    },
    {
      "rank": 45,
      "score": 8.542875062379007,
      "candidate": "def check_equilateral(a, b, c):\n    if a + b > c and a + c > b and b + c > a:\n        return True\n    else:\n        return False\n\nprint(check_equilateral(1, 1, 1))"
    },
    {
      "rank": 46,
      "score": 8.53012858503943,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b == c:\n        return True\n    return False\n\n\nprint(check_equilateral(5, 7, 8))"
    },
    {
      "rank": 47,
      "score": 8.499905739299377,
      "candidate": "def check_triangle(a, b, c):\n    if a == b and a == c:\n        print(\"triangle is equilateral\")\n    else:\n        print(\"triangle is not equilateral\")\n\ncheck_triangle(2, 2, 2)"
    },
    {
      "rank": 48,
      "score": 8.490324832712195,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b or a == c or b == c:\n        return True\n    else:\n        return False\n\n\nprint(is_equilateral(3,4,5))\nprint(is_equilateral(2,3,4))\nprint(is_equilateral(2,4,6))\nprint(is_equilateral(1,1,1))\nprint(is_equilateral(1,2,3))\nprint(is_equilateral(1,2,5))\nprint(is_equilateral(2,2,2))\nprint(is_equilateral(1,1,1))"
    },
    {
      "rank": 49,
      "score": 8.48796797856353,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b and a == c:\n        return True\n    elif a!= b and a!= c:\n        return False\n\n\nprint(is_equilateral(2,3,4))\nprint(is_equilateral(1,2,3))\nprint(is_equilateral(1,3,2))"
    },
    {
      "rank": 50,
      "score": 8.478208546788407,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b + c and a == c + b and a == b:\n        return True\n    return False\n\n\nprint(is_equilateral(3, 3, 3))\nprint(is_equilateral(4, 4, 4))\nprint(is_equilateral(5, 5, 5))"
    },
    {
      "rank": 51,
      "score": 8.437695832075478,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nc = int(input(\"Enter the third number: \"))\ncheck_equilateral(a, b, c)"
    },
    {
      "rank": 52,
      "score": 8.426531424889468,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ncheck_equilateral(2, 2, 3)\ncheck_equilateral(2, 2, 4)\ncheck_equilateral(1, 1, 1)"
    },
    {
      "rank": 53,
      "score": 8.408439383654278,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b and a == c:\n        return True\n    if a == b or a == c or b == c:\n        return False\n    return False\n\nprint(is_equilateral(1,2,3))"
    },
    {
      "rank": 54,
      "score": 8.386620303250325,
      "candidate": "def check_triangle(a, b, c):\n    if (a + b > c and a + c > b and b + c > a):\n        print(\"Triangle is equilateral\")\n    else:\n        print(\"Triangle is not equilateral\")\n\ncheck_triangle(3, 4, 5)\ncheck_triangle(5, 4, 6)\ncheck_triangle(2, 4, 8)\ncheck_triangle(5, 3, 2)"
    },
    {
      "rank": 55,
      "score": 8.375312293858853,
      "candidate": "def check_triangle(a, b, c):\n\n    if a == b and a == c:\n        return True\n    else:\n        return False\n\n\nprint(check_triangle(3, 4, 5))\nprint(check_triangle(2, 3, 4))"
    },
    {
      "rank": 56,
      "score": 8.351614956112536,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ntriangle_equilateral(1, 2, 3)\ntriangle_equilateral(1, 2, 4)\ntriangle_equilateral(4, 2, 3)\ntriangle_equilateral(4, 2, 4)"
    },
    {
      "rank": 57,
      "score": 8.334608500525688,
      "candidate": "def triangle_equilateral(a,b,c):\n    if a+b==c or a+c==b or b+c==a:\n        return True\n    else:\n        return False\n\n\nif __name__ == '__main__':\n    a = int(input(\"Enter a value: \"))\n    b = int(input(\"Enter b value: \"))\n    c = int(input(\"Enter c value: \"))\n    print(triangle_equilateral(a,b,c))"
    },
    {
      "rank": 58,
      "score": 8.331556294201176,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and b == c and c == a:\n        return True\n    return False\n\na = int(input(\"Enter the first side: \"))\nb = int(input(\"Enter the second side: \"))\nc = int(input(\"Enter the third side: \"))\nif is_equilateral(a, b, c):\n    print(\"The triangle is equilateral.\")\nelse:\n    print(\"The triangle is not equilateral.\")"
    },
    {
      "rank": 59,
      "score": 8.327375965969855,
      "candidate": "def check_triangle(a, b, c):\n    if a == b == c:\n        print(\"The triangle is equilateral.\")\n    else:\n        print(\"The triangle is not equilateral.\")\n\n\na = int(input(\"Enter the length of triangle: \"))\nb = int(input(\"Enter the length of triangle: \"))\nc = int(input(\"Enter the length of triangle: \"))\ncheck_triangle(a, b, c)"
    },
    {
      "rank": 60,
      "score": 8.327367757082776,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a + b > c and a + c > b and b + c > a:\n        print(f'The triangle is equilateral.')\n    else:\n        print(f'The triangle is not equilateral.')\n\ntriangle_equilateral(5, 5, 5)"
    },
    {
      "rank": 61,
      "score": 8.298597569547805,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b + c and a == c + b and a == b - c:\n        return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(is_equilateral(5, 3, 6))"
    },
    {
      "rank": 62,
      "score": 8.294940769211511,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        return True\n    return False\n\n\nprint(is_equilateral(3, 4, 5))\nprint(is_equilateral(4, 5, 6))\nprint(is_equilateral(5, 4, 6))"
    },
    {
      "rank": 63,
      "score": 8.2938925966498,
      "candidate": "def triangle(a, b, c):\n    if (a == b and a == c and b == c):\n        return True\n    else:\n        return False\n\nprint(triangle(3, 4, 5))\nprint(triangle(4, 5, 3))\nprint(triangle(2, 4, 5))"
    },
    {
      "rank": 64,
      "score": 8.289838256518838,
      "candidate": "def is_equilateral(a, b, c):\n    if (a + b + c) == (a * b * c):\n        return True\n    else:\n        return False\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nc = int(input(\"Enter the third number: \"))\n\nif is_equilateral(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 65,
      "score": 8.251903304236286,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b == c:\n        return True\n    return False\n\na = int(input(\"Enter the first triangle side: \"))\nb = int(input(\"Enter the second triangle side: \"))\nc = int(input(\"Enter the third triangle side: \"))\n\nif check_equilateral(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 66,
      "score": 8.214125058964552,
      "candidate": "def check_triangle(a,b,c):\n    if (a+b)!= (c+c):\n        return False\n    else:\n        return True\n\n\nprint(check_triangle(4,4,4))"
    },
    {
      "rank": 67,
      "score": 8.212735598038213,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif a!= b and a!= c and b!= c:\n        return False\n    else:\n        return False\n\n\nprint(triangle_equilateral(2, 2, 2))\nprint(triangle_equilateral(3, 3, 3))\nprint(triangle_equilateral(4, 4, 4))\nprint(triangle_equilateral(5, 5, 5))\nprint(triangle_equilateral(6, 6, 6))\nprint(triangle_equilateral(7, 7, 7))\nprint(triangle_equilateral(8, 8, 8))\nprint(triangle_equilateral(9, 9, 9))"
    },
    {
      "rank": 68,
      "score": 8.211579567659316,
      "candidate": "def triangle_equilateral(a,b,c):\n    if a == b or a == c or b == c:\n        return True\n    return False\n\nprint(triangle_equilateral(3,4,5))\nprint(triangle_equilateral(5,4,3))\nprint(triangle_equilateral(2,5,4))\nprint(triangle_equilateral(1,2,3))\nprint(triangle_equilateral(1,4,4))\nprint(triangle_equilateral(5,6,6))"
    },
    {
      "rank": 69,
      "score": 8.209707251476969,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b == c:\n        print(True)\n    else:\n        print(False)\n\n\ntriangle_equilateral(3, 5, 6)"
    },
    {
      "rank": 70,
      "score": 8.2048573255218,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b and b == c:\n        return True\n    elif a == c and b == c:\n        return True\n    elif a!= b and a!= c and b!= c:\n        return False\n\na = int(input(\"Enter the first side of triangle: \"))\nb = int(input(\"Enter the second side of triangle: \"))\nc = int(input(\"Enter the third side of triangle: \"))\n\nprint(is_equilateral(a,b,c))"
    },
    {
      "rank": 71,
      "score": 8.185309335307622,
      "candidate": "def triangle_equilateral(a, b, c):\n    if (a + b > c or a + c > b or b + c > a):\n        return False\n    return True\n\n\nprint(triangle_equilateral(2, 3, 4))\nprint(triangle_equilateral(2, 4, 3))\nprint(triangle_equilateral(4, 4, 2))\nprint(triangle_equilateral(4, 2, 2))\nprint(triangle_equilateral(4, 4, 4))\nprint(triangle_equilateral(4, 4, 4))\nprint(triangle_equilateral(4, 4, 4))\nprint(triangle_equilateral(4, 4, 4))\nprint(triangle_equilateral(4, 4, 4))"
    },
    {
      "rank": 72,
      "score": 8.172253082181854,
      "candidate": "def check_equilateral(a,b,c):\n    if a==b and b==c and c==a:\n        return True\n    else:\n        return False\n\na = float(input(\"Enter the first number:\"))\nb = float(input(\"Enter the second number:\"))\nc = float(input(\"Enter the third number:\"))\n\nif check_equilateral(a,b,c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 73,
      "score": 8.163300679823958,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b + c or a == c + b or b == c + a:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\na = int(input(\"Enter the first triangle: \"))\nb = int(input(\"Enter the second triangle: \"))\nc = int(input(\"Enter the third triangle: \"))\nis_equilateral(a, b, c)"
    },
    {
      "rank": 74,
      "score": 8.144125099485041,
      "candidate": "def isEquilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif b == c:\n        return True\n    elif c == a:\n        return True\n    else:\n        return False\n\n\nprint(isEquilateral(1, 1, 1))\nprint(isEquilateral(3, 3, 3))"
    },
    {
      "rank": 75,
      "score": 8.143591138329747,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b and a == c:\n        return True\n    elif a!= b or a!= c:\n        return False\n\nprint(is_equilateral(2,2,2))\nprint(is_equilateral(3,2,2))\nprint(is_equilateral(4,2,2))\nprint(is_equilateral(1,2,3))\nprint(is_equilateral(3,2,4))"
    },
    {
      "rank": 76,
      "score": 8.121884567141883,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b and a == c:\n        return \"Triangle is equilateral\"\n    else:\n        return \"Triangle is not equilateral\"\n\na = int(input(\"Enter a value: \"))\nb = int(input(\"Enter b value: \"))\nc = int(input(\"Enter c value: \"))\nprint(triangle_equilateral(a, b, c))"
    },
    {
      "rank": 77,
      "score": 8.105983444291466,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b and a == c and b == c:\n        return True\n    else:\n        return False\n\na = float(input(\"enter the first triangle value:\"))\nb = float(input(\"enter the second triangle value:\"))\nc = float(input(\"enter the third triangle value:\"))\nif is_equilateral(a,b,c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 78,
      "score": 8.08452234024709,
      "candidate": "def is_equilateral(a, b, c):\n    if a + b > c and a + c > b and b + c > a:\n        return True\n    else:\n        return False\n\n\nprint(is_equilateral(1, 2, 3))\nprint(is_equilateral(1, 2, 4))\nprint(is_equilateral(1, 3, 4))\nprint(is_equilateral(3, 3, 4))\nprint(is_equilateral(2, 2, 4))\nprint(is_equilateral(3, 3, 4))"
    },
    {
      "rank": 79,
      "score": 8.040197642997851,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        print(\"The triangle is equilateral\")\n    elif a!= b or a!= c or b!= c:\n        print(\"The triangle is not equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nc = int(input(\"Enter the third number: \"))\nis_equilateral(a, b, c)"
    },
    {
      "rank": 80,
      "score": 8.024835682833125,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    if a!= b and a!= c and b!= c:\n        return False\n\n\na = int(input(\"Enter the first side of the triangle: \"))\nb = int(input(\"Enter the second side of the triangle: \"))\nc = int(input(\"Enter the third side of the triangle: \"))\n\nif is_equilateral(a, b, c):\n    print(\"The triangle is equilateral\")\nelse:\n    print(\"The triangle is not equilateral\")"
    },
    {
      "rank": 81,
      "score": 7.990432406683839,
      "candidate": "def is_equilateral(a,b,c):\n    if a==b or a==c or b==c:\n        return True\n    return False\n\n\ndef main():\n    a = int(input(\"Enter the value of a: \"))\n    b = int(input(\"Enter the value of b: \"))\n    c = int(input(\"Enter the value of c: \"))\n    print(is_equilateral(a,b,c))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 82,
      "score": 7.938028884277233,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        return True\n    else:\n        return False\n\n\ndef main():\n    print(is_equilateral(1, 3, 5))\n    print(is_equilateral(4, 5, 3))\n    print(is_equilateral(10, 10, 10))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 83,
      "score": 7.915588979966494,
      "candidate": "def is_equilateral(a, b, c):\n    a = float(a)\n    b = float(b)\n    c = float(c)\n    if a == b and a == c:\n        return True\n    elif a!= b and a!= c:\n        return False\n    else:\n        return False\n\na = float(input(\"Enter a: \"))\nb = float(input(\"Enter b: \"))\nc = float(input(\"Enter c: \"))\nprint(is_equilateral(a, b, c))"
    },
    {
      "rank": 84,
      "score": 7.8912769574414305,
      "candidate": "def equilateral(a, b, c):\n    if a == b and a == c:\n        print(\"The triangle is equilateral\")\n    elif a!= b and a!= c and b!= c:\n        print(\"The triangle is not equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\nequilateral(3, 3, 3)\nequilateral(4, 5, 6)\nequilateral(5, 6, 7)\nequilateral(9, 9, 9)"
    },
    {
      "rank": 85,
      "score": 7.868947655733293,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b and a == c:\n        print(\"True\")\n    else:\n        print(\"False\")\n\na = float(input(\"Enter the first number: \"))\nb = float(input(\"Enter the second number: \"))\nc = float(input(\"Enter the third number: \"))\ntriangle_equilateral(a, b, c)"
    },
    {
      "rank": 86,
      "score": 7.84634113240411,
      "candidate": "def triangle(a,b,c):\n    if a == b or a == c or b == c:\n        return True\n    return False\n\nprint(triangle(3,4,5))\nprint(triangle(3,2,4))\nprint(triangle(4,2,3))\nprint(triangle(4,5,2))"
    },
    {
      "rank": 87,
      "score": 7.834022619458933,
      "candidate": "def check_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    elif b == a and b == c:\n        return True\n    elif c == a and c == b:\n        return True\n    else:\n        return False\n\n\nprint(check_equilateral(1, 1, 1))\nprint(check_equilateral(1, 2, 3))\nprint(check_equilateral(2, 2, 2))\nprint(check_equilateral(2, 2, 3))\nprint(check_equilateral(3, 2, 3))\nprint(check_equilateral(3, 3, 3))"
    },
    {
      "rank": 88,
      "score": 7.780351419995229,
      "candidate": "def triangle(a, b, c):\n    if a == b == c:\n        print(\"It is a triangle.\")\n    elif a!= b or a!= c or b!= c:\n        print(\"It is not a triangle.\")\n    else:\n        print(\"It is a triangle.\")\n\nif __name__ == \"__main__\":\n    a = int(input(\"Enter the first number: \"))\n    b = int(input(\"Enter the second number: \"))\n    c = int(input(\"Enter the third number: \"))\n    triangle(a, b, c)"
    },
    {
      "rank": 89,
      "score": 7.738292593776799,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c and b == c:\n        return True\n    else:\n        return False\n\nprint(is_equilateral(2, 3, 4))\nprint(is_equilateral(2, 5, 6))\nprint(is_equilateral(5, 5, 5))"
    },
    {
      "rank": 90,
      "score": 7.7320703513377165,
      "candidate": "def is_equilateral(a,b,c):\n    if a == b and a == c and b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\na = int(input(\"Enter the first number: \"))\nb = int(input(\"Enter the second number: \"))\nc = int(input(\"Enter the third number: \"))\nis_equilateral(a,b,c)"
    },
    {
      "rank": 91,
      "score": 7.705183449260731,
      "candidate": "def triangle_equilateral(a, b, c):\n    if a == b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ntriangle_equilateral(5, 6, 7)"
    },
    {
      "rank": 92,
      "score": 7.5819855281879285,
      "candidate": "def check_triangle(a, b, c):\n    if a == b and b == c and c == a:\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    a = int(input(\"Enter the value of a: \"))\n    b = int(input(\"Enter the value of b: \"))\n    c = int(input(\"Enter the value of c: \"))\n    print(check_triangle(a, b, c))"
    },
    {
      "rank": 93,
      "score": 7.562924366763077,
      "candidate": "def is_equilateral(a, b, c):\n\n    if (a + b == c):\n        return True\n    else:\n        return False\n\n\nprint(is_equilateral(1, 2, 3))\nprint(is_equilateral(1, 2, 4))\nprint(is_equilateral(3, 4, 5))"
    },
    {
      "rank": 94,
      "score": 7.4878043221155455,
      "candidate": "def is_equilateral(a, b, c):\n    return (a == b and b == c and c == a)\n\nprint(is_equilateral(2, 3, 4))\nprint(is_equilateral(3, 4, 5))\nprint(is_equilateral(4, 5, 6))\nprint(is_equilateral(7, 8, 9))\nprint(is_equilateral(7, 8, 10))"
    },
    {
      "rank": 95,
      "score": 7.464609382504557,
      "candidate": "def is_equilateral(a, b, c):\n\n    if a == b or b == c or c == a:\n        return True\n\n    return False\n\n\nif __name__ == '__main__':\n\n    print(is_equilateral(3, 4, 5))\n    print(is_equilateral(3, 4, 6))\n    print(is_equilateral(3, 4, 7))\n    print(is_equilateral(2, 2, 2))\n    print(is_equilateral(2, 2, 3))\n    print(is_equilateral(3, 4, 5))\n    print(is_equilateral(2, 2, 3))"
    },
    {
      "rank": 96,
      "score": 7.4506599871439985,
      "candidate": "def triangle(a, b, c):\n    if a == b and a == c and b == c:\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ntriangle(5, 5, 5)\ntriangle(5, 5, 15)\ntriangle(5, 15, 5)\ntriangle(15, 15, 5)\ntriangle(15, 15, 15)\ntriangle(15, 15, 15)"
    },
    {
      "rank": 97,
      "score": 7.134571892399572,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        print(\"The triangle is equilateral.\")\n    elif a!= b or a!= c or b!= c:\n        print(\"The triangle is not equilateral.\")\n\n\n# Driver code\nis_equilateral(3, 4, 5)\nis_equilateral(7, 8, 9)"
    },
    {
      "rank": 98,
      "score": 3.0,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b or a == c or b == c:\n        return True\n    return False\n\n\nprint(is_equilateral(3, 3, 3))\nprint(is_equilateral(5, 5, 5))\nprint(is_equilateral(7, 7, 7))\nprint(is_equilateral(3, 4, 6))\nprint(is_equilateral(5, 4, 4))\nprint(is_equilateral(7, 5, 4))\nprint(is_equilateral(3, 5, 3))\nprint(is_equilateral(5, 5, 5))\nprint(is_equilateral(7, 5, 5))\nprint(is_equilateral(3, 6, 7))\nprint(is_equilateral(5, 6, 6))\nprint(is_equilateral(7, 6, 6))\nprint(is_equilateral(3, 6, 8))\nprint(is_equilateral(5, 6, 7))\nprint(is_equilateral(7, 6, 8))\nprint(is_equilateral(3, 6, 9))\nprint(is_equilateral(5, 6, 9))\nprint(is_equilateral(7, 6, 9))\nprint(is_equilateral(3, 5, 8))\nprint(is_equilateral(5, 4, 8))\nprint(is_equilateral(7, 4, 8))\nprint(is_equilateral(3, 7, 8))\nprint(is_equilateral(5, 4, 7))\nprint(is_equilateral(7, 4, 7))\nprint(is_equilateral(3, 6, 7))\nprint(is_equilateral(5, 6, 6))\nprint(is_equilateral(7, 6, 6))\nprint(is_equilateral(3, 6, 7))\nprint(is_equilateral(5, 6, 7))\nprint(is_equ"
    },
    {
      "rank": 99,
      "score": 3.0,
      "candidate": "def triangle_is_equilateral(a, b, c):\n    if (a + b == c) or (a + c == b) or (b + c == a):\n        print(\"The triangle is equilateral\")\n    else:\n        print(\"The triangle is not equilateral\")\n\n\ntriangle_is_equilateral(3, 4, 5)\ntriangle_is_equilateral(5, 6, 8)\ntriangle_is_equilateral(6, 8, 4)"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def is_equilateral(a, b, c):\n    if a == b and a == c:\n        return True\n    if b == a and b == c:\n        return True\n    if c == a and c == b:\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    print(is_equilateral(5, 5, 5))\n    print(is_equilateral(5, 8, 5))\n    print(is_equilateral(8, 8, 8))\n    print(is_equilateral(8, 8, 8))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilateral(7, 7, 7))\n    print(is_equilater"
    }
  ]
}