{
  "timestamp": "2025-09-14T15:54:11.359241",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 469,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def max_occurence(string):\n    return max(string)\n\n\nif __name__ == '__main__':\n    string = 'aab'\n    print(max_occurence(string))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def max_occurring(string):\n    max_char = ''\n    for char in string:\n        if char in max_char:\n            max_char = max_char + char\n        else:\n            max_char = char\n    return max_char\n\n\nprint(max_occurring('abcde'))\nprint(max_occurring('abcd'))\nprint(max_occurring(''))\nprint(max_occurring('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def max_occurence(str):\n    max_char = \"\"\n    max_occurence = 0\n\n    for char in str:\n        if char not in max_char:\n            max_char = char\n            max_occurence += 1\n    return max_char, max_occurence\n\nprint(max_occurence(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def max_occurring(s):\n    max_char = ''\n    max_count = 0\n    for char in s:\n        if char == max_char:\n            max_count += 1\n        else:\n            if max_count > max_count:\n                max_char = char\n                max_count = 1\n    return max_char\n\n\nif __name__ == \"__main__\":\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcbb\"))\n    print(max_occurring(\"abcabcb"
    },
    {
      "rank": 5,
      "score": 6.259472425587803,
      "candidate": "def max_char_in_string(str):\n    max_char = ''\n    max_count = 0\n    for i in str:\n        if i not in max_char:\n            max_char += i\n        else:\n            max_count = max_char.count(i)\n            if max_count > max_count:\n                max_char = i\n    return max_char\nprint(max_char_in_string('hello'))\nprint(max_char_in_string('hello world'))\nprint(max_char_in_string('hello world hello'))"
    },
    {
      "rank": 6,
      "score": 6.12293974108703,
      "candidate": "def max_char(str):\n    max_char = ''\n    max_char_value = 0\n\n    for i in range(len(str)):\n        if str[i] in max_char:\n            max_char_value += 1\n        else:\n            max_char = str[i]\n            max_char_value = 1\n\n    return max_char, max_char_value\n\nprint(max_char('abc'))"
    },
    {
      "rank": 7,
      "score": 6.115655161240337,
      "candidate": "def maximum_occurring(string):\n    max_char = 0\n    for char in string:\n        if string.count(char) > max_char:\n            max_char = string.count(char)\n    return max_char\n\nprint(maximum_occurring('hola'))\nprint(maximum_occurring('abcd'))\nprint(maximum_occurring(''))\nprint(maximum_occurring('abcdabcdabcd'))"
    },
    {
      "rank": 8,
      "score": 6.1023516165663185,
      "candidate": "def find_max_occurence(s):\n    char_dict = {}\n    for char in s:\n        if char in char_dict:\n            char_dict[char] += 1\n        else:\n            char_dict[char] = 1\n\n    max_occ = 0\n    max_occ_char = \"\"\n    for char, count in char_dict.items():\n        if count > max_occ:\n            max_occ = count\n            max_occ_char = char\n\n    return max_occ_char\n\n\nprint(find_max_occurence(\"Python\"))"
    },
    {
      "rank": 9,
      "score": 6.094848261537346,
      "candidate": "def max_occurrence(string):\n    max_occurring = 0\n    max_occurring_index = 0\n    for i in range(len(string)):\n        if string[i] == max_occurring:\n            max_occurring_index = i\n        else:\n            continue\n\n    return string[max_occurring_index]\n\nprint(max_occurrence('abcd'))"
    },
    {
      "rank": 10,
      "score": 6.072280355704092,
      "candidate": "def max_occurring_char(str):\n  char_dict = {}\n  max_char = \"\"\n  for char in str:\n    if char in char_dict:\n      char_dict[char] += 1\n    else:\n      char_dict[char] = 1\n\n  for key, value in char_dict.items():\n    if value > len(max_char):\n      max_char = key\n  return max_char\n\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abc\"))"
    },
    {
      "rank": 11,
      "score": 6.066157717794111,
      "candidate": "def max_occurring_char(string):\n    max_occurring_char = \"\"\n    for char in string:\n        if char not in max_occurring_char:\n            max_occurring_char += char\n    return max_occurring_char\n\nprint(max_occurring_char(\"ABCDE\"))"
    },
    {
      "rank": 12,
      "score": 6.011453347618746,
      "candidate": "def max_char(string):\n    string_len = len(string)\n    char_count = {}\n    for i in range(string_len):\n        if string[i] in char_count:\n            char_count[string[i]]+=1\n        else:\n            char_count[string[i]]=1\n    max_char = max(char_count, key=char_count.get)\n    return max_char\n\n\nprint(max_char(\"the quick brown fox jumps over the lazy dog\"))\nprint(max_char(\"the quick brown fox jumps over the lazy dog\"))\nprint(max_char(\"the quick brown fox jumps over the lazy dog\"))"
    },
    {
      "rank": 13,
      "score": 5.861894446442792,
      "candidate": "def max_char(string):\n    char_list = [0] * 26\n    for char in string:\n        char_list[ord(char) - ord('a')] += 1\n    char_max = max(char_list)\n    return char_max\n\n\nif __name__ == '__main__':\n    string = \"abcd\"\n    print(max_char(string))"
    },
    {
      "rank": 14,
      "score": 5.848833094581309,
      "candidate": "def max_occurring(str):\n    if str == None:\n        return None\n    char_map = {}\n    max_char = \"\"\n    max_count = 0\n    for char in str:\n        if char not in char_map:\n            char_map[char] = 1\n        else:\n            char_map[char] += 1\n    for char in char_map:\n        if char_map[char] > max_count:\n            max_count = char_map[char]\n            max_char = char\n    return max_char\n\n\nif __name__ == \"__main__\":\n    print(max_occurring(\"a\"))\n    print(max_occurring(\"abc\"))\n    print(max_occurring(\"aabababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
      "rank": 15,
      "score": 5.835099782279346,
      "candidate": "def max_occurring(str):\n    max_char = str[0]\n    for char in str:\n        if char > max_char:\n            max_char = char\n    return max_char\n\n\nprint(max_occurring(\"abcde\"))\nprint(max_occurring(\"abbcc\"))\nprint(max_occurring(\"abcdeabcc\"))"
    },
    {
      "rank": 16,
      "score": 5.8211058968945135,
      "candidate": "def max_occurring(string):\n    if not string:\n        return -1\n\n    count = 0\n    max_count = 0\n    max_index = 0\n    max_char = \"\"\n\n    for i in range(len(string)):\n        if string[i] in max_char:\n            count += 1\n        else:\n            max_char = string[i]\n            max_index = i\n            max_count = count\n    return max_char, max_index, max_count\n\n\nif __name__ == \"__main__\":\n    string = \"abcd\"\n    print(\"Max occurring character is \", max_occurring(string))"
    },
    {
      "rank": 17,
      "score": 5.817655828599778,
      "candidate": "def max_occurring_char(str):\n    max_count = 0\n    max_char = ''\n    for char in str:\n        if str.count(char) > max_count:\n            max_count = str.count(char)\n            max_char = char\n\n    return max_char\n\n\nif __name__ == \"__main__\":\n    print(max_occurring_char('hello'))\n    print(max_occurring_char('hello, world'))\n    print(max_occurring_char(''))"
    },
    {
      "rank": 18,
      "score": 5.798973392891433,
      "candidate": "def maximum_occurring_char(str):\n    max_char = 0\n    max_count = 0\n\n    for i in str:\n        if str.count(i) > max_count:\n            max_char = i\n            max_count = str.count(i)\n\n    return max_char\n\n\nif __name__ == \"__main__\":\n    str = \"abcabcbb\"\n    print(maximum_occurring_char(str))"
    },
    {
      "rank": 19,
      "score": 5.791034392184371,
      "candidate": "def max_occurring_char(string):\n    max_char = ''\n    max_count = 0\n\n    for i in range(len(string)):\n        if string[i] in max_char:\n            max_count += 1\n        else:\n            max_char = string[i]\n            max_count = 1\n\n    return max_char, max_count\n\n\nprint(max_occurring_char('abcd'))"
    },
    {
      "rank": 20,
      "score": 5.744605789384928,
      "candidate": "def max_occurring(s):\n    max_value = 0\n    max_char = ''\n    for char in s:\n        if char > max_value:\n            max_value = char\n            max_char = char\n    return max_char\n\nprint(max_occurring(\"abcabcbb\"))\nprint(max_occurring(\"abcabcbbab\"))\nprint(max_occurring(\"abababababab\"))"
    },
    {
      "rank": 21,
      "score": 5.744284585520946,
      "candidate": "def max_char(str):\n  if not str:\n    return 0\n  return max(str.count('a'), str.count('e'), str.count('i'), str.count('o'), str.count('u'))\n\n\nif __name__ == \"__main__\":\n  print(max_char(\"aaa\"))\n  print(max_char(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
      "rank": 22,
      "score": 5.739596244530433,
      "candidate": "def max_occurring(string):\n    max_occur = 0\n    max_char = ''\n    for i in string:\n        if string.count(i) > max_occur:\n            max_occur = string.count(i)\n            max_char = i\n    return max_char\n\nprint(max_occurring(\"abcabcabcabcabc\"))\nprint(max_occurring(\"abcabcabcabc\"))\nprint(max_occurring(\"\"))\nprint(max_occurring(\"abc\"))"
    },
    {
      "rank": 23,
      "score": 5.717050697909788,
      "candidate": "def max_occurring(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    max_occurring = string[0]\n    max_count = 0\n    for char in string:\n        if char == max_occurring:\n            max_count += 1\n        else:\n            max_occurring = char\n            max_count = 1\n    return max_occurring\n\n\nif __name__ == \"__main__\":\n    string = \"aaaaaaaaa\"\n    print(max_occurring(string))"
    },
    {
      "rank": 24,
      "score": 5.702566623331039,
      "candidate": "def max_occurring(string):\n    result = \"\"\n    max_value = 0\n    for i in string:\n        if string.count(i) > max_value:\n            max_value = string.count(i)\n            result = i\n    return result\n\n\nprint(max_occurring(\"pwwkew\"))"
    },
    {
      "rank": 25,
      "score": 5.65717760238368,
      "candidate": "def max_occurence(s):\n    count = 0\n    max_char = \"\"\n    for i in s:\n        if i not in max_char:\n            count += 1\n            max_char += i\n        else:\n            count = 0\n    return max_char\n\nprint(max_occurence(\"abcabcbb\"))\nprint(max_occurence(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
      "rank": 26,
      "score": 5.639171477753768,
      "candidate": "def max_occurring_char(str):\n    char_list = []\n    for i in str:\n        if i not in char_list:\n            char_list.append(i)\n    return max(char_list)\n\nprint(max_occurring_char('hello world'))\nprint(max_occurring_char(''))\nprint(max_occurring_char('abcd'))\nprint(max_occurring_char('abcdabcd'))\nprint(max_occurring_char('abcdabcdabcd'))"
    },
    {
      "rank": 27,
      "score": 5.604613355126316,
      "candidate": "def max_char(str):\n    max_char = \"\"\n    for char in str:\n        if char not in max_char:\n            max_char = char\n    return max_char\n\nif __name__ == \"__main__\":\n    str = \"the quick brown fox jumps over the lazy dog\"\n    print(max_char(str))"
    },
    {
      "rank": 28,
      "score": 5.589967049890012,
      "candidate": "def find_max_char(str):\n    max_char = ''\n    max_count = 0\n    for i in str:\n        if i == max_char:\n            max_count += 1\n        else:\n            if max_count > max_count:\n                max_count = max_count\n                max_char = i\n    return max_char\n\n\nif __name__ == \"__main__\":\n    str = \"hello\"\n    print(find_max_char(str))"
    },
    {
      "rank": 29,
      "score": 5.58169040983895,
      "candidate": "def max_occurring_char(str):\n    max_len = 0\n    max_char = \"\"\n    for i in str:\n        if str.count(i) > max_len:\n            max_len = str.count(i)\n            max_char = i\n    return max_char\n\n\nprint(max_occurring_char(\"aabcccc\"))"
    },
    {
      "rank": 30,
      "score": 5.52118234250617,
      "candidate": "def max_occurring(str):\n    max_occurring_char = ''\n    for char in str:\n        if str.count(char) > max_occurring_char.count(char):\n            max_occurring_char = char\n\n    return max_occurring_char"
    },
    {
      "rank": 31,
      "score": 5.514151345857151,
      "candidate": "def max_char(str):\n    count = 0\n    max_char = \"\"\n    for i in str:\n        if i not in max_char:\n            max_char += i\n            count += 1\n        else:\n            if count > count:\n                max_char = i\n                count = 1\n    return max_char\n\nprint(max_char(\"hello\"))\nprint(max_char(\"hello there\"))\nprint(max_char(\"hello there\"))\nprint(max_char(\"hello there\"))"
    },
    {
      "rank": 32,
      "score": 5.5140311360875405,
      "candidate": "def max_occurring(string):\n    char_count = {}\n    for char in string:\n        char_count[char] = char_count.get(char, 0) + 1\n    max_count = max(char_count.values())\n    return max_count\n\nprint(max_occurring(\"ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
      "rank": 33,
      "score": 5.5118896190892075,
      "candidate": "def max_occurring_char(str):\n    max_char = ''\n    for char in str:\n        if char in max_char:\n            max_char = max_char.replace(char, '')\n        else:\n            max_char = char\n    return max_char\n\nprint(max_occurring_char('hello'))\nprint(max_occurring_char('hello world'))\nprint(max_occurring_char('hello world bye'))\nprint(max_occurring_char('hello world bye world'))\nprint(max_occurring_char('hello world bye world bye'))\nprint(max_occurring_char('hello world bye world bye'))\nprint(max_occurring_char('hello world bye world bye'))\nprint(max_occurring_char('hello world bye world bye'))"
    },
    {
      "rank": 34,
      "score": 5.505142478117564,
      "candidate": "def find_max_char(string):\n    max_index = 0\n    max_char = \"\"\n    for i in string:\n        if string.count(i) > max_index:\n            max_index = string.count(i)\n            max_char = i\n    return max_char\n\nprint(find_max_char(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"))"
    },
    {
      "rank": 35,
      "score": 5.498965049035116,
      "candidate": "def max_occurring(string):\n    max_occur = -1\n    max_occur_index = 0\n    for i in string:\n        if string.count(i) > max_occur:\n            max_occur = string.count(i)\n            max_occur_index = string.index(i)\n    return max_occur_index\n\nprint(max_occurring(\"abcdabcdabcdabcd\"))"
    },
    {
      "rank": 36,
      "score": 5.497708888163176,
      "candidate": "def max_occurring(s):\n    max_char = ''\n    for i in range(len(s)):\n        if s[i] in max_char:\n            max_char = max_char.replace(s[i], '')\n        else:\n            max_char = s[i]\n    return max_char\n\n\nif __name__ == \"__main__\":\n    print(max_occurring('abc'))\n    print(max_occurring('abcd'))\n    print(max_occurring('abcdabcd'))\n    print(max_occurring('abcdabcdabcdabcdabcdabcd'))\n    print(max_occurring('abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdabcdab"
    },
    {
      "rank": 37,
      "score": 5.495375318030732,
      "candidate": "def max_occurring(str):\n    # write your code here\n    if len(str) == 0:\n        return 0\n    else:\n        result = 0\n        for i in str:\n            if str.count(i) > result:\n                result = str.count(i)\n        return result\n\nif __name__ == \"__main__\":\n    print(max_occurring('abcd'))\n    print(max_occurring('aab'))\n    print(max_occurring('abb'))\n    print(max_occurring('abcc'))"
    },
    {
      "rank": 38,
      "score": 5.490456999630971,
      "candidate": "def find_max_occurence(str):\n    max_occurence = 0\n    max_occurence_char = \"\"\n    for i in str:\n        if str.count(i) > max_occurence:\n            max_occurence = str.count(i)\n            max_occurence_char = i\n    return max_occurence_char\n\n\nprint(find_max_occurence(\"abcd\"))\nprint(find_max_occurence(\"a\"))\nprint(find_max_occurence(\"abcd\"))\nprint(find_max_occurence(\"abcd\"))\nprint(find_max_occurence(\"abcd\"))\nprint(find_max_occurence(\"abcd\"))\nprint(find_max_occurence(\"abcd\"))"
    },
    {
      "rank": 39,
      "score": 5.454314469116351,
      "candidate": "def max_occurring_char(str):\n    max_occurring_char = str[0]\n    max_occurring_index = 0\n    for i in range(1, len(str)):\n        if str[i] == max_occurring_char:\n            max_occurring_index = i\n        else:\n            max_occurring_char = str[i]\n            max_occurring_index = i\n    return max_occurring_char, max_occurring_index\n\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abcabcabc\"))\nprint(max_occurring_char(\"abcabcabc\"))\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"\"))\nprint(max_occurring_char(\"abcdef\"))"
    },
    {
      "rank": 40,
      "score": 5.437765130835712,
      "candidate": "def max_occurring(string):\n    max_occurring_char = ''\n    max_occurring_count = 0\n    for i in range(len(string)):\n        if string[i] in max_occurring_char:\n            max_occurring_count += 1\n        else:\n            max_occurring_char = string[i]\n            max_occurring_count = 1\n    return max_occurring_char, max_occurring_count\n\n\nif __name__ == \"__main__\":\n    print(max_occurring(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
      "rank": 41,
      "score": 5.431763951267896,
      "candidate": "def max_char(str):\n    max_char = ''\n    char_count = {}\n    for i in str:\n        if i in char_count:\n            char_count[i] += 1\n        else:\n            char_count[i] = 1\n    max_char = max(char_count, key=char_count.get)\n    return max_char\n\n\nif __name__ == '__main__':\n    str = \"abcd\"\n    print(max_char(str))"
    },
    {
      "rank": 42,
      "score": 5.419017473928319,
      "candidate": "def max_char(str):\n    max_char = ''\n    max_char_count = 0\n    for i in str:\n        if i not in max_char and str.count(i) > max_char_count:\n            max_char = i\n            max_char_count = str.count(i)\n    return max_char\n\n\nprint(max_char('hello world'))\nprint(max_char('abc'))\nprint(max_char('abcde'))\nprint(max_char(''))"
    },
    {
      "rank": 43,
      "score": 5.388794628188267,
      "candidate": "def find_max_char(str):\n    max_char = ''\n    for char in str:\n        if len(char) > len(max_char):\n            max_char = char\n    return max_char\n\n\nif __name__ == '__main__':\n    str = 'hello'\n    print(find_max_char(str))"
    },
    {
      "rank": 44,
      "score": 5.381872108007354,
      "candidate": "def max_char(str):\n    max_char = \"\"\n    max_count = 0\n\n    for i in range(len(str)):\n        if str[i] in max_char:\n            max_count = max_count + 1\n        else:\n            max_char = str[i]\n            max_count = 1\n\n    return max_char, max_count\n\n\nstr = \"hey\"\nprint(max_char(str))"
    },
    {
      "rank": 45,
      "score": 5.379213721601085,
      "candidate": "def max_occurring_char(string):\n    max_occ = ''\n    for i in string:\n        if string.count(i) > max_occ.count(i):\n            max_occ = i\n    return max_occ\n\nprint(max_occurring_char('Hello'))"
    },
    {
      "rank": 46,
      "score": 5.376856867452419,
      "candidate": "def max_occurences(str):\n    max_occurences = 0\n    max_occurence = \"\"\n    for c in str:\n        if str.count(c) > max_occurences:\n            max_occurences = str.count(c)\n            max_occurence = c\n    return max_occurence\n\n\nprint(max_occurences(\"abcd\"))"
    },
    {
      "rank": 47,
      "score": 5.367097435677296,
      "candidate": "def max_occ(str):\n    count = {}\n    for ch in str:\n        if ch not in count:\n            count[ch] = 1\n        else:\n            count[ch] += 1\n    max_char = ''\n    max_count = 0\n    for ch in count:\n        if count[ch] > max_count:\n            max_char = ch\n            max_count = count[ch]\n    return max_char\n\n\nprint(max_occ('hello'))\nprint(max_occ('hey'))\nprint(max_occ('hey world'))"
    },
    {
      "rank": 48,
      "score": 5.326584720964367,
      "candidate": "def find_max_char(str):\n  max_char = \"\"\n  max_count = 0\n  for char in str:\n    if char == max_char:\n      max_count += 1\n    else:\n      max_char = char\n      max_count = 1\n  return max_char, max_count\n\nstr = input(\"Enter string: \")\nprint(find_max_char(str))"
    },
    {
      "rank": 49,
      "score": 5.315420313778358,
      "candidate": "def max_occurence(string):\n    \"\"\"\n    :type string: str\n    :rtype: int\n    \"\"\"\n    char_dict = {}\n    max_occurence = 0\n\n    for char in string:\n        if char in char_dict:\n            char_dict[char] += 1\n        else:\n            char_dict[char] = 1\n\n        if char_dict[char] > max_occurence:\n            max_occurence = char_dict[char]\n\n    return max_occurence\n\n\nprint(max_occurence(\"abcd\"))"
    },
    {
      "rank": 50,
      "score": 5.297328272543167,
      "candidate": "def max_occurring(s):\n    max_char = \"\"\n    max_char_count = 0\n    for i in s:\n        if s.count(i) > max_char_count:\n            max_char = i\n            max_char_count = s.count(i)\n    return max_char\n\n\nprint(max_occurring(\"hello world\"))"
    },
    {
      "rank": 51,
      "score": 5.275509192139213,
      "candidate": "def max_char(str):\n    max_index = 0\n    max_char = \"\"\n    for i in range(len(str)):\n        if str[i] not in max_char:\n            max_char += str[i]\n            max_index += 1\n    return max_char, max_index\n\n\nif __name__ == \"__main__\":\n    str = \"abc\"\n    print(max_char(str))"
    },
    {
      "rank": 52,
      "score": 5.264201182747741,
      "candidate": "def maximum_occurring_char(string):\n    max_char = ''\n    max_count = 0\n    for char in string:\n        if char not in max_char:\n            max_char = char\n            max_count = 1\n        elif char == max_char:\n            max_count += 1\n    return max_char, max_count\n\n\nprint(maximum_occurring_char('hello world'))"
    },
    {
      "rank": 53,
      "score": 5.240503845001426,
      "candidate": "def max_occurring_char(str):\n    max_char = ''\n    max_char_occur = 0\n\n    for char in str:\n        if char == max_char:\n            max_char_occur += 1\n        else:\n            if max_char_occur > 0:\n                max_char = char\n                max_char_occur = 1\n            else:\n                max_char = char\n    return max_char\n\n\n\n\n\n\nif __name__ == \"__main__\":\n    print(max_occurring_char(\"abc\"))\n    print(max_occurring_char(\"abcd\"))\n    print(max_occurring_char(\"\"))\n    print(max_occurring_char(\"abcdabcd\"))\n    print(max_occurring_char(\"abcabcdabcd\"))\n    print(max_occurring_char(\"abcabcdabcdabc\"))\n    print(max_occurring_char(\"\"))"
    },
    {
      "rank": 54,
      "score": 5.223497389414578,
      "candidate": "def max_occurring_char(str):\n    max_char = 0\n    for char in str:\n        if str.count(char) > max_char:\n            max_char = str.count(char)\n    return max_char\n\nprint(max_occurring_char(\"hello world\"))"
    },
    {
      "rank": 55,
      "score": 5.220445183090066,
      "candidate": "def max_occurring_char(str):\n    max_char = \"\"\n    max_count = 0\n    for i in str:\n        if str.count(i) > max_count:\n            max_char = i\n            max_count = str.count(i)\n    return max_char"
    },
    {
      "rank": 56,
      "score": 5.216264854858744,
      "candidate": "def max_char(str):\n    max_char = \"\"\n    for char in str:\n        if len(max_char) < len(char):\n            max_char = char\n\n    return max_char\n\n\nprint(max_char(\"abab\"))\nprint(max_char(\"abc\"))\nprint(max_char(\"ababababababab\"))\nprint(max_char(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
      "rank": 57,
      "score": 5.216256645971666,
      "candidate": "def max_occurring(str):\n    max_char = ''\n    max_count = 0\n    for char in str:\n        if char not in max_char:\n            max_char = char\n            max_count = 1\n        elif char == max_char:\n            max_count += 1\n    return max_char, max_count\n\n\nprint(max_occurring('hello'))\nprint(max_occurring('hello world'))\nprint(max_occurring('hello world world'))"
    },
    {
      "rank": 58,
      "score": 5.1874864584366955,
      "candidate": "def max_char(string):\n    max_value = 0\n    max_index = 0\n    for i in range(0, len(string)):\n        if(string[i] > max_value):\n            max_value = string[i]\n            max_index = i\n    return max_value\n\nprint(max_char(\"aabcc\"))\nprint(max_char(\"abcd\"))\nprint(max_char(\"\"))\nprint(max_char(\"a\"))"
    },
    {
      "rank": 59,
      "score": 5.1838296581004,
      "candidate": "def max_char_in_string(str):\n    max_char = 0\n    for char in str:\n        if str.count(char) > max_char:\n            max_char = str.count(char)\n    return max_char\n\n\nif __name__ == \"__main__\":\n    str = input(\"Enter a string: \")\n    print(f\"The maximum occurring character in {str} is {max_char_in_string(str)}\")"
    },
    {
      "rank": 60,
      "score": 5.18278148553869,
      "candidate": "def max_char_in_string(str):\n    if len(str) == 0:\n        return 0\n    max_char = str[0]\n    count = 0\n    for char in str:\n        if char == max_char:\n            count += 1\n        else:\n            max_char = char\n            count = 1\n    return max_char, count\n\n\nprint(max_char_in_string(\"abcdabcd\"))\nprint(max_char_in_string(\"\"))\nprint(max_char_in_string(\"abcde\"))"
    },
    {
      "rank": 61,
      "score": 5.178727145407727,
      "candidate": "def max_occurring(string):\n    max_count = 0\n    max_char = ''\n\n    for char in string:\n        if char not in max_char:\n            max_char = char\n            max_count += 1\n\n    return max_char, max_count\n\n\nprint(max_occurring(\"abcabcbb\"))\nprint(max_occurring(\"abcdef\"))\nprint(max_occurring(\"abcdefghijklmnopqrstuvwxyz\"))"
    },
    {
      "rank": 62,
      "score": 5.16950226003445,
      "candidate": "def max_occurring_char(str):\n    max_char = \"\"\n    for char in str:\n        if char not in max_char:\n            max_char = char\n    return max_char\n\n\nprint(max_occurring_char(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab"
    },
    {
      "rank": 63,
      "score": 5.140792193125176,
      "candidate": "def max_occurring(string):\n    max_count = 0\n    max_char = \"\"\n    for i in range(len(string)):\n        if string[i] in max_char:\n            max_count = max_count + 1\n        else:\n            max_char = string[i]\n    return max_char, max_count\n\nprint(max_occurring(\"abcd\"))"
    },
    {
      "rank": 64,
      "score": 5.137279256767255,
      "candidate": "def max_occurring(string):\n    max_count = 0\n    max_char = \"\"\n\n    for i in range(len(string)):\n        if string[i] in max_char:\n            max_count += 1\n        else:\n            max_char = string[i]\n            max_count = 1\n\n    return max_char, max_count\n\nprint(max_occurring(\"abcabcbb\"))\nprint(max_occurring(\"abcdef\"))\nprint(max_occurring(\"abcabcbbabcbbabcbbabcbbabcbbabcbbabcbb\"))"
    },
    {
      "rank": 65,
      "score": 5.10301394785344,
      "candidate": "def max_char(s):\n    max_char = \"\"\n    for char in s:\n        if char not in max_char:\n            max_char = char\n    return max_char\n\n\nprint(max_char(\"abcd\"))"
    },
    {
      "rank": 66,
      "score": 5.101624486927102,
      "candidate": "def max_char(str):\n    char_dict = {}\n    for i in str:\n        if i in char_dict:\n            char_dict[i] += 1\n        else:\n            char_dict[i] = 1\n    return max(char_dict.items(), key=lambda x: x[1])[0]\n\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint(max_char(\"hello world\"))\nprint"
    },
    {
      "rank": 67,
      "score": 5.100468456548206,
      "candidate": "def max_occurring(str):\n    max_char = \"\"\n    max_count = 0\n    for c in str:\n        if c not in max_char:\n            max_char = c\n            max_count = 1\n        else:\n            max_count += 1\n    return max_char, max_count\n\nprint(max_occurring(\"abcabcbb\"))\nprint(max_occurring(\"ababccccc\"))"
    },
    {
      "rank": 68,
      "score": 5.098596140365858,
      "candidate": "def max_occurring(s):\n    max_char = \"\"\n    for c in s:\n        if c not in max_char:\n            max_char = c\n    return max_char\n\nif __name__ == '__main__':\n    print(max_occurring(\"abc\"))\n    print(max_occurring(\"abc\"))"
    },
    {
      "rank": 69,
      "score": 5.093746214410689,
      "candidate": "def maximum_occurring_character(str):\n    max_char = str[0]\n    for i in range(len(str)):\n        if str[i] == max_char:\n            max_char += 1\n        else:\n            max_char = str[i]\n    return max_char\n\nprint(maximum_occurring_character(\"abcd\"))"
    },
    {
      "rank": 70,
      "score": 5.082454811541066,
      "candidate": "def max_occurring_char(str):\n    # Write your code here\n    max_char = \"\"\n    max_occurring_char_index = 0\n    for char in str:\n        if char == max_char:\n            max_occurring_char_index += 1\n        else:\n            if max_occurring_char_index > 0:\n                max_char = char\n                max_occurring_char_index = 0\n    return max_char\n\nprint(max_occurring_char(\"hello\"))\nprint(max_occurring_char(\"hello world\"))\nprint(max_occurring_char(\"\"))"
    },
    {
      "rank": 71,
      "score": 5.07419822419651,
      "candidate": "def max_occurring_char(string):\n    max_count = 0\n    max_char = \"\"\n    for char in string:\n        if string.count(char) > max_count:\n            max_char = char\n            max_count = string.count(char)\n\n    return max_char\n\n\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abcabc\"))\nprint(max_occurring_char(\"abcabcabc\"))"
    },
    {
      "rank": 72,
      "score": 5.068453231449815,
      "candidate": "def max_occurring_char(str1):\n    max_count = 0\n    max_char = \"\"\n    for char in str1:\n        if str1.count(char) > max_count:\n            max_char = char\n            max_count = str1.count(char)\n    return max_char\n\n\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abcdef\"))\nprint(max_occurring_char(\"abcd\"))\nprint(max_occurring_char(\"abcdabc\"))\nprint(max_occurring_char(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(max_occurring_char(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(max_occurring_char(\"abcdefghijklmnopqrstuvwxyz\"))\nprint(max_occurring_char(\"abcdefghijklmnopqrstuvwxyz\"))"
    },
    {
      "rank": 73,
      "score": 5.061141971070743,
      "candidate": "def max_char(str):\n    max_char = ''\n    for i in str:\n        if len(max_char) < len(i):\n            max_char = i\n    return max_char\n\nstr = 'babadaba'\nprint(max_char(str))"
    },
    {
      "rank": 74,
      "score": 5.052189568712848,
      "candidate": "def max_occurring_char(str):\n    # find the maximum occurring character in a given string\n    char_list = list(set(str))\n    max_occur = max(char_list)\n    return max_occur\n\n\nstr = input(\"Enter a string: \")\nprint(f\"Maximum occurring character is {max_occurring_char(str)}\")"
    },
    {
      "rank": 75,
      "score": 5.0330139883739315,
      "candidate": "def max_char(str):\n    max_char = str[0]\n    count = 0\n\n    for i in str:\n        if i == max_char:\n            count += 1\n        else:\n            if count > 0:\n                max_char = i\n                count = 0\n            else:\n                count = 1\n    if count > 0:\n        max_char = i\n        count = 0\n\n    return max_char\n\n\nif __name__ == \"__main__\":\n    str = \"abc\"\n    print(max_char(str))"
    },
    {
      "rank": 76,
      "score": 5.032480027218636,
      "candidate": "def max_char(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    # Write your code here\n    max_char = \"\"\n    for i in str:\n        if str.count(i) > len(max_char):\n            max_char = i\n    return max_char\n\nprint(max_char(\"abcde\"))"
    },
    {
      "rank": 77,
      "score": 5.010773456030772,
      "candidate": "def max_occurring_char(str):\n    max_char = \"\"\n    max_occ = 0\n    for char in str:\n        if str.count(char) > max_occ:\n            max_occ = str.count(char)\n            max_char = char\n    return max_char\n\n\nprint(max_occurring_char(\"abcd\"))"
    },
    {
      "rank": 78,
      "score": 4.994872333180354,
      "candidate": "def max_occurring(string):\n    max_occurring_char = \"\"\n    for i in string:\n        if i not in max_occurring_char:\n            max_occurring_char = i\n    return max_occurring_char\n\nstring = \"love\"\nprint(max_occurring(string))"
    },
    {
      "rank": 79,
      "score": 4.982306786394657,
      "candidate": "def max_occurring(str):\n    max_occurring_char = \"\"\n    for char in str:\n        if char not in max_occurring_char:\n            max_occurring_char = char\n    return max_occurring_char\n\nprint(max_occurring(\"bobby\"))\nprint(max_occurring(\"a\"))"
    },
    {
      "rank": 80,
      "score": 4.97341122913598,
      "candidate": "def max_occurring_char(str):\n    char_dict = {}\n    for i in range(len(str)):\n        if str[i] not in char_dict:\n            char_dict[str[i]] = 1\n        else:\n            char_dict[str[i]] += 1\n    max_dict = max(char_dict.values())\n    return max_dict\n\nstr = input(\"Enter a string: \")\nprint(max_occurring_char(str))"
    },
    {
      "rank": 81,
      "score": 4.92908653188674,
      "candidate": "def max_occurring_char(s):\n    char_count = {}\n    max_char = \"\"\n    for i in s:\n        if i not in char_count.keys():\n            char_count[i] = 1\n        else:\n            char_count[i] += 1\n    for key, val in char_count.items():\n        if val > len(max_char):\n            max_char = key\n    return max_char\n\n\nif __name__ == \"__main__\":\n    print(max_occurring_char(\"hello\"))\n    print(max_occurring_char(\"hello\"))\n    print(max_occurring_char(\"hello\"))\n    print(max_occurring_char(\"hello\"))"
    },
    {
      "rank": 82,
      "score": 4.913724571722015,
      "candidate": "def max_occurring(str):\n    max_occur = \"\"\n    for i in range(len(str)):\n        if str[i] not in max_occur:\n            max_occur = str[i]\n    return max_occur\n\n\ndef main():\n    print(max_occurring(\"abc\"))\n    print(max_occurring(\"abab\"))\n    print(max_occurring(\"aba\"))\n    print(max_occurring(\"abcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabcabc"
    },
    {
      "rank": 83,
      "score": 4.879321295572728,
      "candidate": "def max_occurence(str):\n    if len(str) == 0:\n        return 0\n    max_occurence_str = \"\"\n    max_occurence_index = -1\n    max_occurence_char = \"\"\n    for i in range(len(str)):\n        if str[i] == str[max_occurence_index]:\n            max_occurence_index += 1\n            if max_occurence_index == len(str):\n                max_occurence_str = str[i]\n                max_occurence_index = -1\n        else:\n            if max_occurence_index!= -1:\n                max_occurence_str += str[max_occurence_index]\n            max_occurence_index = i\n            max_occurence_str = str[max_occurence_index]\n    return max_occurence_str\n\n\nif __name__ == \"__main__\":\n    print(max_occurence(\"abcd\"))\n    print(max_occurence(\"abc\"))\n    print(max_occurence(\"abcd\"))\n    print(max_occurence(\"abcdabcd\"))\n    print(max_occurence(\"\"))\n    print(max_occurence(\"\"))\n    print(max_occurence(\"abc\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))\n    print(max_occurence(\"abcde\"))"
    },
    {
      "rank": 84,
      "score": 4.826917773166122,
      "candidate": "def max_occurring(string):\n    dic = {}\n    for i in range(len(string)):\n        if string[i] in dic:\n            dic[string[i]]+=1\n        else:\n            dic[string[i]]=1\n    return max(dic.items(), key=lambda x: x[1])[0]\n\nprint(max_occurring(\"applepenapple\"))\nprint(max_occurring(\"applepenappleapple\"))"
    },
    {
      "rank": 85,
      "score": 4.8044778688553835,
      "candidate": "def max_char(string):\n    char = string[0]\n    count = 0\n    for i in range(1, len(string)):\n        if string[i] == char:\n            count += 1\n        else:\n            if count > 0:\n                return char\n            char = string[i]\n            count = 1\n    return char\n\n\nif __name__ == \"__main__\":\n    print(max_char(\"abccabcc\"))\n    print(max_char(\"abcabcabcabcabcabcabcabcabcabcabc\"))"
    },
    {
      "rank": 86,
      "score": 4.78016584633032,
      "candidate": "def find_max_char(str):\n    max_char = str[0]\n    max_count = 0\n\n    for i in str:\n        if i > max_char:\n            max_char = i\n            max_count += 1\n\n    return max_char, max_count\n\n\nprint(find_max_char(\"Python\"))"
    },
    {
      "rank": 87,
      "score": 4.757836544622182,
      "candidate": "def find_max_char(s):\n    s = s.replace(\" \", \"\")\n    max_char = \"\"\n    max_count = 0\n    for char in s:\n        if char not in max_char:\n            max_char += char\n            max_count += 1\n    return max_char, max_count\n\n\nprint(find_max_char(\"The quick brown fox jumps over the lazy dog\"))"
    },
    {
      "rank": 88,
      "score": 4.735230021292999,
      "candidate": "def max_occurring(str):\n    \"\"\"\n    :param str: the string to be searched\n    :return: the maximum occurring character\n    \"\"\"\n    if len(str) == 0:\n        return 0\n    max_char = str[0]\n    max_count = 1\n    for char in str:\n        if char == max_char:\n            max_count += 1\n        else:\n            if max_count > max_count:\n                max_count = max_count\n                max_char = char\n    return max_char\n\n\n\nif __name__ == '__main__':\n    string = \"abcc\"\n    print(max_occurring(string))"
    },
    {
      "rank": 89,
      "score": 4.722911508347822,
      "candidate": "def max_char(str):\n    max_char = str[0]\n    for i in range(1, len(str)):\n        if str[i] == str[i - 1]:\n            continue\n        if str[i] > max_char:\n            max_char = str[i]\n    return max_char\n\nprint(max_char(\"abcabcbb\"))"
    },
    {
      "rank": 90,
      "score": 4.669240308884119,
      "candidate": "def max_occurring_char(string):\n    if not string:\n        return string\n    max_char = string[0]\n    for char in string:\n        if char > max_char:\n            max_char = char\n    return max_char\n\nprint(max_occurring_char(\"abcdefghijklmnopqrstuvwxyz\"))"
    },
    {
      "rank": 91,
      "score": 4.627181482665688,
      "candidate": "def max_occurring_char(str):\n    max_char = ''\n    max_count = 0\n\n    for char in str:\n        if char == max_char:\n            max_count += 1\n        else:\n            if max_count > max_count:\n                max_char = char\n                max_count = 1\n\n    return max_char\n\nprint(max_occurring_char(\"babad\"))\nprint(max_occurring_char(\"abba\"))"
    },
    {
      "rank": 92,
      "score": 4.620959240226606,
      "candidate": "def max_occurring(s):\n    s_count = {}\n    max_count = 0\n    for i in s:\n        if i not in s_count:\n            s_count[i] = 1\n        else:\n            s_count[i] += 1\n        if s_count[i] > max_count:\n            max_count = s_count[i]\n    return max_count\n\n\ns = 'the quick brown fox jumps over the lazy dog'\nprint(max_occurring(s))"
    },
    {
      "rank": 93,
      "score": 4.59407233814962,
      "candidate": "def max_occurring_char(str):\n    max_num = 0\n    max_char = ''\n    for char in str:\n        if char not in max_char:\n            max_num = str.count(char)\n            max_char = char\n    return max_num, max_char\n\n\nprint(max_occurring_char(\"abcde\"))\nprint(max_occurring_char(\"abcde\"))\nprint(max_occurring_char(\"abcde\"))\nprint(max_occurring_char(\"abcde\"))\nprint(max_occurring_char(\"abcde\"))\nprint(max_occurring_char(\"abcde\"))"
    },
    {
      "rank": 94,
      "score": 4.470874417076818,
      "candidate": "def max_char(string):\n    max_char = \"\"\n    max_count = 0\n    for char in string:\n        if char not in max_char:\n            max_char = char\n            max_count = 1\n        else:\n            max_count += 1\n    return max_char, max_count\n\n\nif __name__ == \"__main__\":\n    print(max_char(\"abcabcbb\"))"
    },
    {
      "rank": 95,
      "score": 4.451813255651967,
      "candidate": "def max_char_in_string(string):\n    if len(string) == 1:\n        return string[0]\n    else:\n        string_list = list(string)\n        max_char = max(string_list)\n        for i in range(len(string)):\n            if string_list[i] == max_char:\n                string_list[i] = ''\n        return ''.join(string_list)\n\nprint(max_char_in_string('abc'))\nprint(max_char_in_string('abb'))\nprint(max_char_in_string('ababa'))\nprint(max_char_in_string('abcaba'))"
    },
    {
      "rank": 96,
      "score": 4.376693211004435,
      "candidate": "def max_char(str):\n    max_char = str[0]\n    max_count = 0\n    for i in str:\n        if i == max_char:\n            max_count += 1\n        else:\n            if max_count > max_count:\n                max_count = max_count\n                max_char = i\n    return max_char\n\nprint(max_char(\"abcd\"))\nprint(max_char(\"\"))\nprint(max_char(\"a\"))\nprint(max_char(\"c\"))\nprint(max_char(\"cab\"))\nprint(max_char(\"abcdabcd\"))\nprint(max_char(\"abc\"))\nprint(max_char(\"abc\"))\nprint(max_char(\"abc\"))\nprint(max_char(\"abc\"))\nprint(max_char(\"abc\"))"
    },
    {
      "rank": 97,
      "score": 4.3534982713934465,
      "candidate": "def max_char(str):\n  max_char = \"\"\n  max_count = 0\n\n  for char in str:\n    if char in max_char:\n      max_count = max_count + 1\n    else:\n      max_char = char\n      max_count = 1\n\n  return max_char, max_count\n\nprint(max_char(\"Hello World\"))"
    },
    {
      "rank": 98,
      "score": 4.339548876032888,
      "candidate": "def maximum_occurring(str):\n    max_char = ''\n    max_value = 0\n    for i in str:\n        if i in str:\n            str.count(i)\n            if i == max_char:\n                max_value = max_value + 1\n            else:\n                max_value = max_value\n                max_char = i\n        else:\n            max_value = max_value + 1\n    return max_value, max_char\n\nprint(maximum_occurring(\"abcd\"))\nprint(maximum_occurring(\"abc\"))\nprint(maximum_occurring(\"bcd\"))\nprint(maximum_occurring(\"\"))\nprint(maximum_occurring(\"abcdef\"))"
    },
    {
      "rank": 99,
      "score": 4.0234607812884615,
      "candidate": "def max_char(string):\n    max_char = 0\n    for i in range(len(string)):\n        if string[i] in string:\n            if string[i] > max_char:\n                max_char = string[i]\n    return max_char\n\n\nprint(max_char(\"aabcc\"))"
    },
    {
      "rank": 100,
      "score": 3.0,
      "candidate": "def max_occurring_char(str):\n    max_len = 0\n    max_char = \"\"\n    for i in range(len(str)):\n        if str[i] in max_char:\n            max_len += 1\n        else:\n            if max_len > 0:\n                max_char = str[i]\n                max_len = 1\n    return max_char\n\n\nprint(max_occurring_char(\"abcd\"))\nprint(max_occurring_char(\"aaaa\"))\nprint(max_occurring_char(\"abc\"))\nprint(max_occurring_char(\"abcdef\"))"
    }
  ]
}