{
  "timestamp": "2025-09-14T14:46:59.142931",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 315,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def most_occurrences(lst):\n    return max(set(lst), key=lst.count)\n\n\ndef main():\n    print(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"a\", \"b\"]))\n    print(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\"]))\n    print(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\"]))\n    print(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\"]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "from typing import List\n\n\ndef most_occurrences(str_list: List[str]) -> str:\n    \"\"\"\n    :type str_list: List[str]\n    :rtype: str\n    \"\"\"\n    return max(set(str_list), key=str_list.count)\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"cat\", \"cat\", \"dog\", \"dog\", \"cat\", \"cat\"]))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def most_occurence(word_list):\n    return max(set(word_list), key=word_list.count)\n\n\nprint(most_occurence([\"a\", \"b\", \"a\", \"b\", \"a\", \"b\", \"a\"]))"
    },
    {
      "rank": 4,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    # write your code here\n    if not strings:\n        return \"\"\n\n    counts = {}\n    for word in strings:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n\n    max_word = max(counts, key=counts.get)\n    return max_word"
    },
    {
      "rank": 5,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    str_list.sort()\n    return str_list[-1]"
    },
    {
      "rank": 6,
      "score": 8.0,
      "candidate": "def most_common_word(strings):\n    dictionary = {}\n    for word in strings:\n        if word in dictionary:\n            dictionary[word] += 1\n        else:\n            dictionary[word] = 1\n\n    max_count = 0\n    max_word = ''\n    for word, count in dictionary.items():\n        if count > max_count:\n            max_word = word\n            max_count = count\n\n    return max_word\n\n\nprint(most_common_word(['a', 'b', 'a', 'b', 'b']))\nprint(most_common_word(['a', 'b', 'a', 'b', 'b']))\nprint(most_common_word(['a', 'b', 'a', 'b', 'b']))"
    },
    {
      "rank": 7,
      "score": 8.0,
      "candidate": "def most_occur(strings):\n    count = {}\n    for word in strings:\n        count[word] = count.get(word, 0) + 1\n\n    max_count = 0\n    max_word = ''\n    for word in count:\n        if count[word] > max_count:\n            max_count = count[word]\n            max_word = word\n\n    return max_word\n\n\nif __name__ == '__main__':\n    print(most_occur(['hello', 'hello', 'hola', 'hola', 'hola', 'hola']))\n    print(most_occur(['hello', 'hello', 'hola', 'hola', 'hola']))"
    },
    {
      "rank": 8,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    return max(set(string_list), key=string_list.count)\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\", \"a\"]))"
    },
    {
      "rank": 9,
      "score": 8.0,
      "candidate": "def most_common_word(strings):\n    word = ''\n    word_count = {}\n    for string in strings:\n        if string in word_count:\n            word_count[string] += 1\n        else:\n            word_count[string] = 1\n\n    for key in word_count.keys():\n        if word_count[key] > len(strings):\n            word = key\n            break\n\n    return word\n\n\nprint(most_common_word(['cat', 'dog', 'cat', 'dog', 'cat', 'dog', 'cat']))"
    },
    {
      "rank": 10,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    if len(strings) == 0:\n        return \"no strings\"\n\n    counts = {}\n    for string in strings:\n        if string not in counts:\n            counts[string] = 0\n        counts[string] += 1\n\n    max_count = 0\n    max_word = \"\"\n    for key, value in counts.items():\n        if value > max_count:\n            max_count = value\n            max_word = key\n\n    return max_word\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"apple\", \"banana\", \"apple\", \"banana\", \"apple\"]))"
    },
    {
      "rank": 11,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    return max(set(string_list), key=string_list.count)\n\n\nprint(most_occurrences([\"p\", \"p\", \"a\", \"a\", \"e\", \"e\"]))"
    },
    {
      "rank": 12,
      "score": 8.0,
      "candidate": "def most_occurrences(strs):\n    dic = {}\n    for word in strs:\n        if word in dic:\n            dic[word] += 1\n        else:\n            dic[word] = 1\n\n    max_count = 0\n    max_word = ''\n    for key, value in dic.items():\n        if value > max_count:\n            max_count = value\n            max_word = key\n\n    return max_word\n\n\nprint(most_occurrences([\"the\", \"a\", \"b\", \"c\", \"a\", \"a\"]))"
    },
    {
      "rank": 13,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    count = {}\n\n    for word in strings:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n\n    max_count = 0\n    max_word = None\n\n    for word, count in count.items():\n        if count > max_count:\n            max_count = count\n            max_word = word\n\n    return max_word\n\n\nstrings = [\"python\", \"python\", \"programming\", \"programming\"]\nprint(most_occurrences(strings))"
    },
    {
      "rank": 14,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    return sorted(strings, key = strings.count, reverse = True)[0]\n\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"a\", \"a\"]))"
    },
    {
      "rank": 15,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    # Your code here\n    dictionary = {}\n    for string in strings:\n        if string in dictionary:\n            dictionary[string] += 1\n        else:\n            dictionary[string] = 1\n\n    return max(dictionary, key=dictionary.get)\n\n\nstrings = [\"bob\", \"bobby\", \"bobby\", \"bobby\", \"bobby\", \"bobby\", \"bobby\", \"bobby\"]\nprint(most_occurrences(strings))"
    },
    {
      "rank": 16,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n  counts = {}\n  for word in strings:\n    if word in counts:\n      counts[word] += 1\n    else:\n      counts[word] = 1\n  return max(counts, key=counts.get)\n\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))"
    },
    {
      "rank": 17,
      "score": 8.0,
      "candidate": "def most_occurrences(s):\n    s = set(s)\n    return max(s, key=s.count)"
    },
    {
      "rank": 18,
      "score": 8.0,
      "candidate": "def most_common(words):\n    most_common = {}\n    for word in words:\n        if word in most_common:\n            most_common[word] += 1\n        else:\n            most_common[word] = 1\n    return max(most_common, key=most_common.get)\n\n\nprint(most_common([\"cat\", \"dog\", \"racecar\", \"car\"]))"
    },
    {
      "rank": 19,
      "score": 8.0,
      "candidate": "def most_occurrences(strs):\n    if not strs:\n        return None\n\n    counts = {}\n    for word in strs:\n        if word not in counts:\n            counts[word] = 0\n\n        counts[word] += 1\n\n    max_count = 0\n    max_word = None\n    for word in counts:\n        if counts[word] > max_count:\n            max_count = counts[word]\n            max_word = word\n\n    return max_word\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"cat\", \"dog\", \"rat\", \"cat\", \"rat\"]))"
    },
    {
      "rank": 20,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    counts = {}\n    for s in strings:\n        if s in counts:\n            counts[s] += 1\n        else:\n            counts[s] = 1\n    return max(counts.items(), key=lambda x: x[1])[0]\n\n\nif __name__ == '__main__':\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))\n    print(most_occurrences(['cat', 'dog', 'racecar', 'car', 'horse', 'horse']))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "def most_occurrences(strs):\n    return max(set(strs), key=strs.count)\n\n\n\nif __name__ == \"__main__\":\n    strs = [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"]\n    print(most_occurrences(strs))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    return max(set(str_list), key=str_list.count)\n\nprint(most_occurrences([\"a\",\"b\",\"c\",\"a\",\"c\",\"a\",\"c\"]))\nprint(most_occurrences([\"a\",\"b\",\"c\",\"a\",\"c\",\"a\"]))\nprint(most_occurrences([\"a\",\"b\",\"c\",\"a\",\"c\",\"a\"]))\nprint(most_occurrences([\"a\",\"b\",\"c\",\"a\",\"c\",\"a\"]))"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def most_common(lst):\n    dic = {}\n    for word in lst:\n        if word in dic:\n            dic[word] += 1\n        else:\n            dic[word] = 1\n    max_count = 0\n    max_word = ''\n    for key, val in dic.items():\n        if val > max_count:\n            max_count = val\n            max_word = key\n    return max_word"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "def most_occurrences(word, words):\n    count = {}\n    for word in words:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n    return max(count, key=count.get)"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def most_occurrences(s, n):\n    return sorted(s, key=s.count, reverse=True)[n-1]\n\n\nprint(most_occurrences(['a', 'b', 'a', 'c', 'b', 'a', 'c', 'a'], 4))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    pass\n\n\nstrings = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]\nprint(most_occurrences(strings))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    dic = {}\n    for word in str_list:\n        if word in dic.keys():\n            dic[word] += 1\n        else:\n            dic[word] = 1\n\n    return max(dic, key=dic.get)\n\n\nprint(most_occurrences([\"a\", \"b\", \"a\", \"b\", \"a\", \"b\", \"a\", \"c\", \"c\", \"c\", \"c\"]))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def most_occurrences(word_list):\n    \"\"\"\n    :type word_list: List[str]\n    :rtype: str\n    \"\"\"\n    # Your code here\n    word_count = {}\n    for word in word_list:\n        if word in word_count:\n            word_count[word] += 1\n        else:\n            word_count[word] = 1\n    max_word = max(word_count.items(), key=lambda x: x[1])\n    return max_word[0]\n\n\nif __name__ == \"__main__\":\n    word_list = [\"cat\", \"cat\", \"dog\", \"dog\", \"fox\"]\n    print(most_occurrences(word_list))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def most_occurrences(word_list):\n    word_dict = {}\n    for word in word_list:\n        if word in word_dict:\n            word_dict[word] += 1\n        else:\n            word_dict[word] = 1\n    return max(word_dict.items(), key=lambda x: x[1])[0]\n\n\nif __name__ == '__main__':\n    print(most_occurrences(['a', 'b', 'c', 'a', 'b', 'c']))"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    count = 0\n    for word in str_list:\n        if str_list.count(word) > count:\n            count = str_list.count(word)\n            most_occurrences = word\n    return most_occurrences\n\n\n\nprint(most_occurrences([\"cat\", \"bat\", \"bat\", \"bat\", \"cat\"]))"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    # TODO: Implement\n    word_count = {}\n    for word in words:\n        if word in word_count:\n            word_count[word] += 1\n        else:\n            word_count[word] = 1\n    return max(word_count, key=word_count.get)\n\n\ndef main():\n    words = ['hello', 'world', 'hello', 'hell']\n    print(most_occurrences(words))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "from collections import Counter\n\ndef most_occurrences(strings):\n    return max(Counter(strings).most_common(1))[0][0]\n\n\nif __name__ == '__main__':\n    assert most_occurrences([\"hello\", \"hello\", \"hello\", \"helloworld\", \"hello\", \"hello\", \"helloworld\", \"hello\"]) == \"hello\"\n    assert most_occurrences([\"hello\", \"hello\", \"hello\", \"helloworld\", \"hello\", \"hello\", \"helloworld\", \"hello\"]) == \"helloworld\"\n    assert most_occurrences([\"hello\", \"hello\", \"hello\", \"helloworld\", \"hello\", \"hello\", \"helloworld\", \"hello\"]) == \"hello\"\n    assert most_occurrences([\"hello\", \"hello\", \"hello\", \"helloworld\", \"hello\", \"hello\", \"helloworld\", \"hello\"]) == \"hello\""
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    word_count = {}\n    for string in strings:\n        word_count[string] = word_count.get(string, 0) + 1\n\n    return max(word_count, key=word_count.get)\n\n\ndef main():\n    print(most_occurrences([\"a\", \"a\", \"b\", \"b\"]))\n    print(most_occurrences([\"a\", \"a\", \"b\", \"b\", \"c\"]))\n    print(most_occurrences([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\", \"c\"]))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    word_counts = {}\n    for word in words:\n        if word not in word_counts:\n            word_counts[word] = 1\n        else:\n            word_counts[word] += 1\n\n    most_occurences = {}\n    for word, count in word_counts.items():\n        if count > most_occurences.get(word, 0):\n            most_occurences[word] = count\n\n    return most_occurences.get(max(most_occurences.keys()), max(most_occurences.keys()))\n\n\nprint(most_occurrences(['a', 'b', 'c', 'd', 'e', 'a', 'b', 'c', 'd', 'e']))\nprint(most_occurrences(['a', 'b', 'c', 'd', 'e', 'a', 'b', 'c', 'd', 'e']))\nprint(most_occurrences(['a', 'b', 'c', 'd', 'e', 'a', 'b', 'c', 'd', 'e']))\nprint(most_occurrences(['a', 'b', 'c', 'd', 'e', 'a', 'b', 'c', 'd', 'e']))\nprint(most_occurrences(['a', 'b', 'c', 'd', 'e', 'a', 'b', 'c', 'd', 'e']))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def most_common_word(strings):\n    counts = {}\n    for word in strings:\n        counts[word] = counts.get(word, 0) + 1\n\n    word = max(counts, key=counts.get)\n\n    return word\n\n\nprint(most_common_word([\"the\", \"world\", \"is\", \"king\", \"of\", \"the\", \"ladder\"]))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def most_occurrences(s):\n    s = list(s)\n    return max(set(s), key=s.count)\n\n\nif __name__ == \"__main__\":\n    s = [\"a\", \"a\", \"b\", \"b\", \"b\", \"c\", \"c\", \"c\"]\n    print(most_occurrences(s))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    count = {}\n    for word in str_list:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n    return max(count.items(), key=lambda x: x[1])[0]\n\n\nprint(most_occurrences([\"cat\", \"cat\", \"dog\", \"dog\", \"dog\"]))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def most_occurence(strings):\n    count = {}\n    for word in strings:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n    return max(count, key=count.get)\n\n\nstrings = [\"this\", \"is\", \"a\", \"word\", \"in\", \"the\", \"world\"]\nprint(most_occurence(strings))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    if words == []:\n        return None\n    else:\n        word_count = {}\n        for word in words:\n            if word not in word_count:\n                word_count[word] = 0\n            word_count[word] += 1\n        max_count = max(word_count.values())\n        max_word = \"\"\n        for word in word_count:\n            if word_count[word] == max_count:\n                max_word = word\n        return max_word\n\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"apple\", \"banana\", \"apple\", \"banana\", \"apple\", \"banana\", \"apple\", \"banana\"]))\n    print(most_occurrences([\"apple\", \"banana\", \"apple\", \"banana\", \"apple\", \"banana\", \"apple\", \"banana\"]))\n    print(most_occurrences([\"apple\", \"banana\", \"apple\", \"banana\", \"apple\", \"banana\", \"apple\", \"banana\"]))"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def most_common_word(list):\n    return max(set(list), key=list.count)\n\n\nif __name__ == \"__main__\":\n    print(most_common_word([\"cat\", \"dog\", \"rat\", \"rat\", \"cat\"]))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    max_count = 0\n    max_word = \"\"\n    for word in strings:\n        if strings.count(word) > max_count:\n            max_count = strings.count(word)\n            max_word = word\n    return max_word\n\nprint(most_occurrences([\"hello\", \"hey\", \"hola\", \"hola\", \"hello\", \"hola\", \"hola\"]))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    # Write your code here\n    max_count = 0\n    max_word = ''\n    for word in str_list:\n        if str_list.count(word) > max_count:\n            max_count = str_list.count(word)\n            max_word = word\n\n    return max_word"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def most_common(strs):\n    counts = {}\n    for i in strs:\n        if i not in counts:\n            counts[i] = 1\n        else:\n            counts[i] += 1\n    return max(counts, key=counts.get)\n\n\ndef test_most_common():\n    assert most_common([\"a\", \"a\", \"a\", \"a\"]) == \"a\"\n    assert most_common([\"a\", \"a\", \"b\"]) == \"b\"\n    assert most_common([\"a\", \"b\", \"a\"]) == \"a\"\n    assert most_common([\"a\", \"b\", \"b\", \"a\"]) == \"a\"\n    assert most_common([\"a\", \"b\", \"b\", \"a\", \"b\", \"b\"]) == \"b\"\n    assert most_common([\"a\", \"b\", \"b\", \"a\", \"b\", \"b\"]) == \"b\"\n    assert most_common([\"a\", \"b\", \"b\", \"a\"]) == \"a\"\n    assert most_common([\"a\", \"b\", \"b\"]) == \"a\"\n    assert most_common([\"a\", \"b\"]) == \"a\"\n    assert most_common([\"a\", \"b\", \"b\"]) == \"a\"\n    assert most_common([\"a\", \"b\", \"b\"]) == \"a\"\n    assert most_common([\"a\", \"b\", \"b\"]) == \"a\""
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    max_count = 0\n    max_word = None\n\n    for word in words:\n        count = words.count(word)\n        if count > max_count:\n            max_count = count\n            max_word = word\n\n    return max_word\n\n\nif __name__ == '__main__':\n    assert most_occurrences([\"cat\", \"dog\", \"racecar\", \"car\"]) == \"car\", \"First\"\n    assert most_occurrences([\"cat\", \"dog\", \"racecar\", \"car\"]) == \"car\", \"Second\"\n    assert most_occurrences([\"cat\", \"dog\", \"racecar\"]) == \"car\", \"Third\""
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    counts = {}\n    for word in strings:\n        counts[word] = counts.get(word, 0) + 1\n\n    return max(counts, key=counts.get)\n\n\nprint(most_occurrences([\"cat\", \"dog\", \"rat\", \"bat\"]))"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def most_common(strs):\n    return max(set(strs), key=strs.count)\n\n\nprint(most_common([\"cat\", \"dog\", \"rat\", \"cat\", \"rat\"]))"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    return max(set(str_list), key=str_list.count)\n\nprint(most_occurrences([\"hello\", \"hel\", \"lo\", \"loo\", \"hello\"]))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    if len(string_list) == 0:\n        return None\n    string_dict = {}\n    for string in string_list:\n        if string in string_dict:\n            string_dict[string] += 1\n        else:\n            string_dict[string] = 1\n\n    max_key = max(string_dict, key=string_dict.get)\n    return max_key\n\nprint(most_occurrences([\"a\", \"b\", \"c\", \"b\", \"c\", \"a\"]))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    return max(set(words), key=words.count)\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences(['a', 'b', 'a', 'b', 'a']))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def most_occuring_word(strings):\n    counts = {}\n    for word in strings:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n\n    most_occuring = max(counts.items(), key=lambda item: item[1])\n    return most_occuring[0]\n\n\nprint(most_occuring_word([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def most_occuring(word_list):\n    word_list = sorted(word_list)\n    word = word_list[0]\n    count = 0\n    for word in word_list:\n        if word == word:\n            count += 1\n    return word, count\n\nprint(most_occuring(['a', 'b', 'b', 'a', 'c', 'c']))"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def most_common_word(words):\n    counts = {}\n    for word in words:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    return max(counts, key=counts.get)\n\nprint(most_common_word([\"a\", \"b\", \"c\", \"c\", \"a\", \"b\"]))"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    # Your code here\n    return max(set(str_list), key=str_list.count)"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def most_common(list):\n    word_count = {}\n    for word in list:\n        if word not in word_count:\n            word_count[word] = 1\n        else:\n            word_count[word] += 1\n    return max(word_count.items(), key=lambda x: x[1])[0]"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    dict_count = {}\n    for word in string_list:\n        if word in dict_count:\n            dict_count[word] += 1\n        else:\n            dict_count[word] = 1\n\n    return max(dict_count, key=dict_count.get)\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\"]))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def most_common(strings):\n    d = {}\n    for s in strings:\n        if s not in d:\n            d[s] = 1\n        else:\n            d[s] += 1\n    return max(d, key=d.get)\n\n\nif __name__ == '__main__':\n    strings = ['cat', 'bat', 'rat', 'bat', 'bat']\n    print(most_common(strings))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    str_list.sort()\n    return str_list[-1]\n\n\nstr_list = [\"a\", \"b\", \"b\", \"a\", \"b\", \"c\"]\n\nprint(most_occurrences(str_list))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def most_occurrences(string):\n    word_count = {}\n    for word in string:\n        if word in word_count:\n            word_count[word] += 1\n        else:\n            word_count[word] = 1\n\n    most_occurrences_word = max(word_count, key=word_count.get)\n    return most_occurrences_word\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"cat\", \"dog\", \"cat\", \"dog\", \"cat\", \"dog\"]))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    string_list.sort()\n    return string_list[-1]"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def most_occurrences(word, strings):\n    word_occurrences = {}\n    for word_string in strings:\n        if word_string in word_occurrences:\n            word_occurrences[word_string] += 1\n        else:\n            word_occurrences[word_string] = 1\n    return max(word_occurrences, key=word_occurrences.get)\n\n\nprint(most_occurrences(\"baba\", [\"baba\", \"bab\", \"baba\", \"bab\"]))\nprint(most_occurrences(\"baba\", [\"baba\", \"bab\", \"baba\", \"bab\"]))\nprint(most_occurrences(\"baba\", [\"bab\", \"bab\", \"baba\", \"bab\"]))\nprint(most_occurrences(\"baba\", [\"bab\", \"baba\", \"baba\", \"bab\"]))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    # Write your code here\n    count = {}\n    for word in string_list:\n        if word in count.keys():\n            count[word] += 1\n        else:\n            count[word] = 1\n    max_count = 0\n    max_word = ''\n    for word in count.keys():\n        if count[word] > max_count:\n            max_count = count[word]\n            max_word = word\n    return max_word\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"cat\", \"dog\", \"dog\", \"cat\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"cat\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"dog\", \"cat\"]))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def most_occurrences(string):\n    string = sorted(string)\n    return string[len(string) - 1]\n\n\nstring = ['a', 'b', 'b', 'b', 'b']\nprint(most_occurrences(string))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def most_occurrences(str):\n    pass"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def most_common_word(strings):\n    count = {}\n    for word in strings:\n        if word not in count:\n            count[word] = 1\n        else:\n            count[word] += 1\n    return max(count, key=count.get)"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    counts = {}\n    for s in strings:\n        if s not in counts:\n            counts[s] = 1\n        else:\n            counts[s] += 1\n\n    return max(counts, key=counts.get)\n\n\nprint(most_occurrences(['a', 'b', 'b', 'c', 'c', 'c']))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def get_most_occur(list_of_strings):\n    sorted_list = sorted(list_of_strings)\n    return sorted_list[0]\n\n\nprint(get_most_occur([\"cat\", \"dog\", \"bat\", \"rat\"]))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    word_count = {}\n    for word in words:\n        if word in word_count:\n            word_count[word] += 1\n        else:\n            word_count[word] = 1\n    return max(word_count, key=word_count.get)\n\n\nprint(most_occurrences([\"cat\", \"cat\", \"cat\", \"dog\", \"dog\", \"dog\", \"dog\"]))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    counter = {}\n    for word in string_list:\n        if word not in counter:\n            counter[word] = 1\n        else:\n            counter[word] += 1\n    return max(counter, key=counter.get)"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def most_occurrences(string, word_list):\n    max_count = 0\n    most_occurrences = \"\"\n    for word in word_list:\n        if string in word:\n            count = word_list.count(word)\n            if count > max_count:\n                max_count = count\n                most_occurrences = word\n    return most_occurrences\n\n\nprint(most_occurrences(\"hello\", [\"hello\", \"helo\"]))\nprint(most_occurrences(\"hello\", [\"helo\", \"hey\"]))\nprint(most_occurrences(\"hello\", [\"hey\", \"hey\", \"hey\"]))\nprint(most_occurrences(\"hello\", [\"hey\", \"hey\", \"hey\", \"hey\", \"hey\"]))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def most_common_word(strings):\n    if strings:\n        return max(strings, key=strings.count)\n\n\nif __name__ == '__main__':\n    print(most_common_word([\"cat\", \"cat\", \"dog\", \"dog\", \"dog\", \"cat\"]))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "def most_occurrences(str_list):\n    # Write your code here\n    counts = {}\n    for word in str_list:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n    max_count = 0\n    max_word = ''\n    for word in counts:\n        if counts[word] > max_count:\n            max_count = counts[word]\n            max_word = word\n    return max_word\n\n\nprint(most_occurrences([\"hello\", \"hello\", \"world\", \"hello\", \"hola\", \"hola\"]))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def most_occurrences(words):\n    return max(set(words), key=words.count)\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"python\", \"java\", \"c\", \"c++\", \"c#\", \"java\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\", \"c#\","
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def most_common(strings):\n    return max(set(strings), key=strings.count)\n\nprint(most_common([\"great\", \"great\", \"great\", \"great\"]))\nprint(most_common([\"great\", \"great\", \"great\", \"great\", \"great\"]))\nprint(most_common([\"great\", \"great\", \"great\", \"great\", \"great\", \"great\", \"great\", \"great\"]))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "def most_occuring_word(str):\n    freq = {}\n    for word in str:\n        if word not in freq:\n            freq[word] = 1\n        else:\n            freq[word] += 1\n    return max(freq, key=freq.get)\n\nprint(most_occuring_word([\"cat\", \"dog\", \"rat\", \"cat\", \"rat\", \"cat\"]))\nprint(most_occuring_word([\"cat\", \"dog\", \"rat\", \"cat\", \"cat\", \"rat\"]))\nprint(most_occuring_word([\"cat\", \"dog\", \"rat\", \"cat\", \"cat\", \"cat\"]))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def most_occurence_word(strings):\n    return max(strings, key=strings.count)\n\n\nstrings = [\"hello\", \"hello\", \"hola\", \"hello\", \"hola\"]\nprint(most_occurence_word(strings))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    return max(set(strings), key=strings.count)\n\n\nprint(most_occurrences([\"pizza\", \"apple\", \"pizza\", \"apple\", \"pizza\"]))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def most_common_word(words):\n    word_count = {}\n    for word in words:\n        if word in word_count:\n            word_count[word] += 1\n        else:\n            word_count[word] = 1\n\n    most_common_word = max(word_count, key=word_count.get)\n\n    return most_common_word\n\n\nif __name__ == '__main__':\n    print(most_common_word([\"dog\", \"cat\", \"dog\", \"cat\"]))"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    # Write your code here\n    dic = {}\n    for string in strings:\n        if string in dic:\n            dic[string] += 1\n        else:\n            dic[string] = 1\n    return max(dic, key=dic.get)\n\n\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    # Write your code here\n    counts = {}\n    for word in strings:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n\n    max_count = 0\n    most_occurrences_word = \"\"\n    for word in counts:\n        if counts[word] > max_count:\n            most_occurrences_word = word\n            max_count = counts[word]\n\n    return most_occurrences_word\n\n\nif __name__ == \"__main__\":\n    strings = [\"the\", \"quick\", \"brown\", \"fox\", \"jumps\", \"over\", \"the\", \"lazy\", \"dog\", \"jumps\"]\n    print(most_occurrences(strings))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    return max(strings, key=strings.count)\n\n\nprint(most_occurrences(['a', 'a', 'b', 'b', 'b', 'c', 'c', 'c']))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def most_occurrences(string_list):\n    most_occurrences = {}\n    for word in string_list:\n        if word in most_occurrences:\n            most_occurrences[word] += 1\n        else:\n            most_occurrences[word] = 1\n    word_with_most_occurrences = max(most_occurrences, key=most_occurrences.get)\n    return word_with_most_occurrences\n\nprint(most_occurrences(['a', 'b', 'a', 'b', 'a']))\nprint(most_occurrences(['a', 'b', 'a', 'b', 'b']))\nprint(most_occurrences(['a', 'b', 'a', 'b', 'b']))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def most_common_word(list_of_strings):\n    return max(set(list_of_strings), key=list_of_strings.count)\n\n\nif __name__ == \"__main__\":\n    assert most_common_word([\"a\", \"b\", \"b\", \"a\", \"c\", \"c\", \"a\", \"b\"]) == \"c\"\n    assert most_common_word([\"a\", \"b\", \"b\", \"a\", \"c\", \"c\", \"a\", \"b\"]) == \"a\"\n    assert most_common_word([\"a\", \"b\", \"b\", \"a\", \"c\", \"c\", \"a\", \"b\"]) == \"a\"\n    assert most_common_word([\"a\", \"b\", \"b\", \"a\", \"c\", \"c\", \"a\", \"b\"]) == \"a\"\n    assert most_common_word([\"a\", \"b\", \"b\", \"a\", \"c\", \"c\", \"a\", \"b\"]) == \"a\""
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def most_occurrences(strings):\n    max_count = 0\n    max_count_word = \"\"\n    for word in strings:\n        count = strings.count(word)\n        if count > max_count:\n            max_count = count\n            max_count_word = word\n\n    return max_count_word\n\n\nif __name__ == '__main__':\n    strings = [\"this\", \"is\", \"a\", \"test\"]\n    print(most_occurrences(strings))"
    },
    {
      "rank": 84,
      "score": 7.0,
      "candidate": "def most_occurrences(list_of_strings):\n    most_occurrences = {}\n    for string in list_of_strings:\n        if string in most_occurrences.keys():\n            most_occurrences[string] += 1\n        else:\n            most_occurrences[string] = 1\n    return max(most_occurrences, key=most_occurrences.get)\n\n\nprint(most_occurrences([\"a\", \"b\", \"b\", \"a\"]))\nprint(most_occurrences([\"a\", \"b\", \"b\", \"b\"]))\nprint(most_occurrences([\"a\", \"b\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"b\", \"b\", \"b\"]))\nprint(most_occurrences([\"a\", \"b\", \"b\", \"b\", \"a\"]))"
    },
    {
      "rank": 85,
      "score": 1.0,
      "candidate": "def most_occurrences(str_list):\n    # Write your code here\n    dict_of_word = {}\n    for word in str_list:\n        if word in dict_of_word:\n            dict_of_word[word] += 1\n        else:\n            dict_of_word[word] = 1\n    max_word = max(dict_of_word.items(), key=lambda x: x[1])[0]\n    return max_word\n\n\nprint(most_occurrences(['a', 'b', 'c', 'b', 'a']))"
    },
    {
      "rank": 86,
      "score": 1.0,
      "candidate": "def most_occurrences(string_list):\n    word_count = {}\n    for word in string_list:\n        if word in word_count:\n            word_count[word] += 1\n        else:\n            word_count[word] = 1\n    return max(word_count, key=word_count.get)\n\n\nif __name__ == '__main__':\n    string_list = ['hello', 'world', 'hello', 'world']\n    print(most_occurrences(string_list))"
    },
    {
      "rank": 87,
      "score": 1.0,
      "candidate": "def most_common_word(str_list):\n    count = {}\n    for word in str_list:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n\n    return max(count, key=count.get)\n\n\nprint(most_common_word([\"apple\", \"banana\", \"orange\", \"apple\", \"banana\"]))\nprint(most_common_word([\"apple\", \"banana\", \"orange\", \"apple\", \"banana\"]))\nprint(most_common_word([\"apple\", \"banana\", \"orange\", \"apple\"]))\nprint(most_common_word([\"banana\", \"orange\", \"apple\", \"banana\"]))\nprint(most_common_word([\"banana\", \"orange\", \"apple\", \"banana\", \"banana\"]))"
    },
    {
      "rank": 88,
      "score": 1.0,
      "candidate": "def most_occurrences(words):\n    return max(set(words), key=words.count)\n\nif __name__ == '__main__':\n    words = [\"this\", \"is\", \"a\", \"test\", \"string\", \"list\", \"of\", \"words\"]\n    print(most_occurrences(words))\n\n    words = [\"this\", \"is\", \"a\", \"test\", \"string\", \"list\"]\n    print(most_occurrences(words))\n\n    words = [\"this\", \"is\", \"a\", \"test\", \"string\", \"list\", \"of\", \"words\", \"and\", \"one\", \"two\", \"three\"]\n    print(most_occurrences(words))\n\n    words = [\"this\", \"is\", \"a\", \"test\", \"string\", \"list\", \"of\", \"words\", \"and\", \"one\", \"two\", \"three\"]\n    print(most_occurrences(words))"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def most_occurrences(strings):\n    # Your code here\n    counts = {}\n    for word in strings:\n        if word in counts:\n            counts[word] += 1\n        else:\n            counts[word] = 1\n\n    max_count = 0\n    max_word = \"\"\n    for key, value in counts.items():\n        if value > max_count:\n            max_count = value\n            max_word = key\n\n    return max_word\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\", \"cow\", \"cat\", \"racecar\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\", \"cow\", \"dog\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\", \"cow\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\", \"cow\"]))\n    print(most_occurrences([\"cat\", \"dog\", \"racecar\", \"cow\"]))"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "import collections\n\n\ndef most_occurrences(s):\n    c = collections.Counter(s)\n    return c.most_common(1)[0][0]\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"cats\", \"dogs\", \"cats\", \"dogs\", \"cats\"]))"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "def most_occurrences(string_list):\n    count_dict = {}\n    for string in string_list:\n        count_dict.setdefault(string, 0)\n        count_dict[string] += 1\n\n    max_count = 0\n    max_word = ''\n    for key, value in count_dict.items():\n        if value > max_count:\n            max_count = value\n            max_word = key\n\n    return max_word\n\n\nif __name__ == \"__main__\":\n    assert most_occurrences([\"a\", \"b\", \"c\", \"b\"]) == \"b\"\n    assert most_occurrences([\"a\", \"b\", \"c\", \"b\", \"b\"]) == \"b\"\n    assert most_occurrences([\"a\", \"b\", \"c\"]) == \"a\"\n    assert most_occurrences([\"a\", \"b\", \"c\", \"b\", \"b\", \"b\", \"b\"]) == \"a\"\n    assert most_occurrences([\"a\", \"b\", \"c\"]) == \"a\"\n    assert most_occurrences([\"a\", \"b\", \"c\", \"b\", \"b\", \"b\", \"b\"]) == \"a\"\n    assert most_occurrences([\"a\", \"b\", \"c\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\", \"b\"]) == \"a\"\n    assert most_occurrences([\"a\", \"b\", \"c\"]) == \"a\""
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "def most_occurrences(strings):\n    # Write your code here\n    word = None\n    count = 0\n    for word in strings:\n        if word in string:\n            count += 1\n\n    if count > 0:\n        return word\n    else:\n        return 'Not Found'\n\n\nprint(most_occurrences(['i', 'love', 'python', 'python', 'python', 'i', 'love', 'python', 'python']))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def most_occurrences(word_list, n=3):\n    word_list = list(set(word_list))\n    word_list = sorted(word_list, key=word_list.count, reverse=True)\n    return word_list[n]\n\n\nprint(most_occurrences([\"abc\", \"a\", \"abc\", \"abcd\", \"abcd\", \"abc\"]))\nprint(most_occurrences([\"abc\", \"a\", \"abc\", \"abcd\", \"abcd\", \"abc\"]))\nprint(most_occurrences([\"abc\", \"a\", \"abc\", \"abcd\", \"abcd\", \"abc\"]))\nprint(most_occurrences([\"abc\", \"a\", \"abc\", \"abcd\", \"abcd\", \"abc\"]))\nprint(most_occurrences([\"abc\", \"a\", \"abc\", \"abcd\", \"abcd\", \"abc\"]))\nprint(most_occurrences([\"abc\", \"a\", \"abc\", \"abcd\", \"abcd\", \"abc\"]))"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "import re\n\ndef most_occurrences(s: list) -> str:\n    s = set(s)\n    return max(s, key=s.count)\n\n\nif __name__ == \"__main__\":\n    assert most_occurrences([\"hello\", \"hola\", \"hola\", \"hello\", \"hola\", \"hola\"]) == \"hello\"\n    assert most_occurrences([\"hello\", \"hola\", \"hola\", \"hello\", \"hola\"]) == \"hola\"\n    assert most_occurrences([\"hello\", \"hola\", \"hola\", \"hello\", \"hola\"]) == \"hola\"\n    assert most_occurrences([\"hello\", \"hola\", \"hola\", \"hello\", \"hola\"]) == \"hello\""
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def most_occurrences(words):\n    if words:\n        return max(words, key=words.count)\n    return None\n\n\ndef most_occurrences_2(words):\n    if words:\n        return max(set(words), key=words.count)\n    return None\n\n\ndef most_occurrences_3(words):\n    if words:\n        return max(set(words), key=words.count, reverse=True)\n    return None\n\n\ndef most_occurrences_4(words):\n    if words:\n        return max(set(words), key=words.count, key=words.count, reverse=True)\n    return None\n\n\ndef most_occurrences_5(words):\n    if words:\n        return max(set(words), key=words.count, key=words.count, reverse=True)\n    return None\n\n\nif __name__ == \"__main__\":\n    words = [\"cat\", \"bat\", \"bat\", \"bat\", \"bat\", \"bat\"]\n    print(most_occurrences(words))\n    print(most_occurrences_2(words))\n    print(most_occurrences_3(words))\n    print(most_occurrences_4(words))\n    print(most_occurrences_5(words))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def most_common_word(string_list):\n    # Write your code here\n    dict_words = {}\n    for word in string_list:\n        if word not in dict_words:\n            dict_words[word] = 1\n        else:\n            dict_words[word] += 1\n    word = max(dict_words, key=dict_words.get)\n    return word\n\n\nprint(most_common_word([\"cow\", \"pig\", \"dog\", \"cow\", \"dog\", \"cat\"]))\nprint(most_common_word([\"cat\", \"dog\", \"cat\", \"dog\", \"dog\"]))\nprint(most_common_word([\"cat\", \"dog\", \"cat\", \"dog\", \"dog\"]))\nprint(most_common_word([\"cat\", \"dog\", \"cat\", \"dog\", \"dog\"]))"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def get_most_occuring(string_list):\n    if string_list is None or len(string_list) == 0:\n        return None\n\n    frequency_dict = {}\n    for word in string_list:\n        if word in frequency_dict:\n            frequency_dict[word] += 1\n        else:\n            frequency_dict[word] = 1\n\n    return max(frequency_dict, key=frequency_dict.get)\n\n\nif __name__ == \"__main__\":\n    print(get_most_occuring([\"hello\", \"hello\", \"hello\", \"hello\", \"hello\", \"hola\"]))\n    print(get_most_occuring([\"hola\", \"hola\", \"hola\"]))\n    print(get_most_occuring([\"hola\", \"hola\", \"hola\", \"hello\", \"hello\", \"hola\"]))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def most_occurrences(string_list):\n    return sorted(string_list, key=string_list.count, reverse=True)[0]\n\n\nif __name__ == '__main__':\n    print(most_occurrences([\"hello\", \"world\", \"hello\", \"goodbye\", \"goodbye\", \"goodbye\", \"goodbye\"]))\n    print(most_occurrences([\"hello\", \"world\", \"hello\", \"goodbye\", \"goodbye\", \"goodbye\"]))"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def most_occurrences(lst):\n    count = {}\n    for word in lst:\n        count[word] = count.get(word, 0) + 1\n\n    return max(count, key=count.get)\n\n\nprint(most_occurrences([\"a\", \"a\", \"a\", \"b\", \"b\", \"c\"]))\nprint(most_occurrences([\"a\", \"a\", \"a\", \"b\", \"c\", \"c\"]))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def most_occurrences(string_list):\n    count = dict()\n\n    for word in string_list:\n        if word in count:\n            count[word] += 1\n        else:\n            count[word] = 1\n\n    max_count = max(count.values())\n    max_count_index = list(count.values()).index(max_count)\n\n    return string_list[max_count_index]\n\n\nif __name__ == \"__main__\":\n    print(most_occurrences([\"apple\", \"pear\", \"banana\", \"apple\", \"pear\", \"banana\"]))"
    }
  ]
}