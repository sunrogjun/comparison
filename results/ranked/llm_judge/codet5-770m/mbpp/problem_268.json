{
  "timestamp": "2025-09-14T14:25:57.524913",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codet5-770m",
  "dataset": "mbpp",
  "problem_number": 268,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def decagonal(n):\n    a = 1\n    b = 1\n    for i in range(1, n+1):\n        c = a + b\n        a = b\n        b = c\n    return c\n\nprint(decagonal(10))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def find_nth_decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 1:\n        return 0\n    else:\n        return (n * (n + 1)) / 2\n\n\nif __name__ == \"__main__\":\n    print(find_nth_decagonal_number(5))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    a = 1\n    b = 1\n    for i in range(2, n + 1):\n        c = a + b\n        a = b\n        b = c\n    return b\n\n\nif __name__ == \"__main__\":\n    print(decagonal_number(1))\n    print(decagonal_number(2))\n    print(decagonal_number(3))\n    print(decagonal_number(4))\n    print(decagonal_number(5))\n    print(decagonal_number(6))\n    print(decagonal_number(7))\n    print(decagonal_number(8))\n    print(decagonal_number(9))\n    print(decagonal_number(10))\n    print(decagonal_number(11))\n    print(decagonal_number(12))\n    print(decagonal_number(13))\n    print(decagonal_number(14))\n    print(decagonal_number(15))\n    print(decagonal_number(16))\n    print(decagonal_number(17))\n    print(decagonal_number(18))\n    print(decagonal_number(19))\n    print(decagonal_number(20))\n    print(decagonal_number(21))\n    print(decagonal_number(22))\n    print(decagonal_number(23))\n    print(decagonal_number(24))\n    print(decagonal_number(25))\n    print(decagonal_number(26))\n    print(decagonal_number(27))\n    print(decagonal_number(28))\n    print(decagonal_number(29))\n    print(decagonal_number(30))\n    print(decagonal_number(31))\n    print(decagonal_number(32))\n    print(decagonal_number(33))\n    print(decagonal_number(34))\n    print("
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def decagonal(n):\n    n += 1\n    if n <= 1:\n        return 1\n\n    return n + decagonal(n-1)\n\n\nprint(decagonal(6))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def nth_decagonal(n):\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 3\n    if n == 3:\n        return 6\n    if n == 4:\n        return 9\n    if n == 5:\n        return 13\n    if n == 6:\n        return 17\n    if n == 7:\n        return 19\n    if n == 8:\n        return 21\n    if n == 9:\n        return 31\n    if n == 10:\n        return 37\n    if n == 11:\n        return 41\n    if n == 12:\n        return 53\n    if n == 13:\n        return 61\n    if n == 14:\n        return 67\n    if n == 15:\n        return 71\n    if n == 16:\n        return 73\n    if n == 17:\n        return 79\n    if n == 18:\n        return 81\n    if n == 19:\n        return 83\n    if n == 20:\n        return 89\n    if n == 21:\n        return 91\n    if n == 22:\n        return 97\n    if n == 23:\n        return 100\n\nprint(nth_decagonal(input(\"Enter the number: \")))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def decagonal(n):\n    return sum(int(i)**n for i in str(sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(int(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(i)**n for i in str(1 + sum(1 + sum(i)**n for i in str"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def decagonal(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return n + decagonal(n - 1)\n\n\nprint(decagonal(5))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def nth_decagonal(n):\n    a = 0\n    b = 1\n    for i in range(n):\n        a, b = b, a + b\n    return a\n\n\ndef test_nth_decagonal():\n    assert nth_decagonal(3) == 8\n    assert nth_decagonal(4) == 12\n    assert nth_decagonal(5) == 24\n    assert nth_decagonal(6) == 36\n    assert nth_decagonal(7) == 42\n    assert nth_decagonal(8) == 52\n    assert nth_decagonal(9) == 60\n    assert nth_decagonal(10) == 84\n    assert nth_decagonal(11) == 100\n    assert nth_decagonal(12) == 143\n    assert nth_decagonal(13) == 366\n    assert nth_decagonal(14) == 792\n    assert nth_decagonal(15) == 912\n    assert nth_decagonal(16) == 1216\n    assert nth_decagonal(17) == 1616\n    assert nth_decagonal(18) == 1920\n    assert nth_decagonal(19) == 1932\n    assert nth_decagonal(20) == 1968\n    assert nth_decagonal(21) == 2344\n    assert nth_decagonal(22) == 2868\n    assert nth_decagonal(23) == 2888\n    assert nth_decagonal(24) == 3296\n    assert nth_decagonal(25) == 3646\n    assert nth_decagonal(26) == 4246\n    assert nth_decagonal(27) == 5444\n    assert nth_decagonal(28) == 6044\n    assert nth_decagonal(29) == 7844\n    assert nth_decagonal(30) == 8444\n    assert nth_decagonal(31) == 9844\n    assert nth_decagonal(32) == 104844\n    assert nth_decagonal(33) == 11644\n    assert nth_decagonal(34) == 12644"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def decagonal_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30\n    if n == 32:\n        return 31\n    if n == 33:\n        return 32\n    if n == 34:\n        return 33\n    if n == 35:\n        return 34\n    if n == 36:\n        return 35\n    if n == 37:\n        return 36\n    if n == 38:\n        return 37\n    if n == 39:\n        return 38\n    if n == 40:\n        return 39\n    if n == 41:\n        return 40\n    if n == 42:\n        return 41\n    if n == 43:\n        return 42\n    if n == 44:\n        return 43\n    if n =="
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def decagonal_number(n):\n    n = str(n)\n    l = len(n)\n    for i in range(l-1,0,-1):\n        if n[i] == '1':\n            continue\n        if int(n[i-1]) > int(n[i]):\n            return int(n[i:])\n    return int(n)\n\n\ndef main():\n    print(decagonal_number(1))\n    print(decagonal_number(5))\n    print(decagonal_number(10))\n    print(decagonal_number(100))\n    print(decagonal_number(1000))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 11,
      "score": 9.20387850009311,
      "candidate": "def decagonal_number(n):\n    if n < 1:\n        return 0\n    return n * decagonal_number(n - 1)\n\n\nif __name__ == '__main__':\n    print(decagonal_number(10))"
    },
    {
      "rank": 12,
      "score": 9.075039436695493,
      "candidate": "def decagonal(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n\n    return decagonal(n - 1) + decagonal(n - 2)"
    },
    {
      "rank": 13,
      "score": 9.050381002788466,
      "candidate": "def nth_decagonal(n):\n    def next_num(n):\n        return n + 1 if n >= 1 else 0\n\n    if n == 1:\n        return 1\n    else:\n        return next_num(n - 1) + next_num(n - 2) + next_num(n - 3)\n\n\nif __name__ == '__main__':\n    print(nth_decagonal(10))"
    },
    {
      "rank": 14,
      "score": 9.045360439702282,
      "candidate": "def decagonal_number(n):\n    if n < 0:\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    sum = 0\n    for i in range(1, n + 1):\n        sum = sum + i * (i + 1) // 2\n    return sum\n\n\nprint(decagonal_number(3))"
    },
    {
      "rank": 15,
      "score": 9.000502856158482,
      "candidate": "def nth_decagonal(n, a):\n    if n == 0:\n        return 0\n    if n == 1:\n        return a\n    return a + (nth_decagonal(n-1, a) - a)\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    a = int(input())\n    print(nth_decagonal(n, a))"
    },
    {
      "rank": 16,
      "score": 8.867154248667784,
      "candidate": "def decagonal(n):\n    result = 0\n    for i in range(1, n + 1):\n        result += i\n        result += i * (i + 1) // 2\n    return result\n\n\nprint(decagonal(100))"
    },
    {
      "rank": 17,
      "score": 8.855892932580174,
      "candidate": "def decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    # check if n is a valid decagonal number\n    if n < 0:\n        return -1\n    # check if n is a valid number\n    elif n <= 1:\n        return 1\n    # if n is a valid decagonal number, return the first digit of the nth decagonal number\n    else:\n        return decagonal(n-1) + decagonal(n-2) + decagonal(n-3)"
    },
    {
      "rank": 18,
      "score": 8.844417946564612,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 1:\n        return None\n    if n == 1:\n        return 1\n\n    if n % 2 == 1:\n        return n * (n - 1) / 2\n\n    return n * (n - 1) / 2 + (n - 1) / 4\n\n\nif __name__ == \"__main__\":\n    print(nth_decagonal(5))"
    },
    {
      "rank": 19,
      "score": 8.826269293282087,
      "candidate": "def nthDecagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    count = 0\n    while n > 1:\n        if n % 2 == 0:\n            n = n/2\n        else:\n            n = 3*n + 1\n        count += 1\n    return count"
    },
    {
      "rank": 20,
      "score": 8.777580031626066,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    n = n + 1\n    return n - 1\n\ndef nth_decagonal_2(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    n = n + 1\n    if n == 1:\n        return 1\n    return n - 2\n\n\nif __name__ == \"__main__\":\n    print(nth_decagonal(1))\n    print(nth_decagonal(2))\n    print(nth_decagonal(3))\n    print(nth_decagonal(4))\n    print(nth_decagonal(5))\n    print(nth_decagonal_2(1))\n    print(nth_decagonal_2(2))\n    print(nth_decagonal_2(3))\n    print(nth_decagonal_2(4))\n    print(nth_decagonal_2(5))"
    },
    {
      "rank": 21,
      "score": 8.759092683397137,
      "candidate": "def find_nth_decagonal_number(n):\n    count = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            print(i)\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    find_nth_decagonal_number(1000000)"
    },
    {
      "rank": 22,
      "score": 8.747215742242563,
      "candidate": "def find_decagonal_number(n):\n    if n <= 1:\n        return n\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 2\n    if n == 5:\n        return 3\n    if n == 6:\n        return 4\n    if n == 7:\n        return 5\n    if n == 8:\n        return 6\n    if n == 9:\n        return 7\n    if n == 10:\n        return 8\n    if n == 11:\n        return 9\n    if n == 12:\n        return 10\n\n    if n % 11 == 0:\n        return find_decagonal_number(n // 11) * 11 + find_decagonal_number(n % 11)\n    return find_decagonal_number(n // 11) + find_decagonal_number(n % 11)\n\n\nprint(find_decagonal_number(int(input(\"Enter a number: \"))))"
    },
    {
      "rank": 23,
      "score": 8.709996745065729,
      "candidate": "def decagonal(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n\n    d = decagonal(n-1)\n\n    return d*d - 2*(n-2)\n\nprint(decagonal(3))\nprint(decagonal(5))\nprint(decagonal(10))\nprint(decagonal(15))"
    },
    {
      "rank": 24,
      "score": 8.66689406231469,
      "candidate": "def decagonal(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    else:\n        return decagonal(n-1) + decagonal(n-2)\n\nprint(decagonal(4))"
    },
    {
      "rank": 25,
      "score": 8.65488409202092,
      "candidate": "def decagonal_number(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n\n    if n % 2 == 0:\n        return decagonal_number(n // 2) + decagonal_number(n // 2)\n    else:\n        return decagonal_number(n // 2) + 3 * decagonal_number(n // 2)\n\n\nif __name__ == '__main__':\n    print(decagonal_number(5))"
    },
    {
      "rank": 26,
      "score": 8.592715214713975,
      "candidate": "def nth_decagonal_number(n):\n    num = 1\n    while n > 1:\n        num += 1\n        n -= 1\n        if num == n:\n            return num\n        if num % 2 == 0:\n            num += 1\n    return 0\n\nif __name__ == \"__main__\":\n    print(nth_decagonal_number(5))\n    print(nth_decagonal_number(15))\n    print(nth_decagonal_number(1000))\n    print(nth_decagonal_number(10000))"
    },
    {
      "rank": 27,
      "score": 8.592616642702895,
      "candidate": "def nth_decagonal_number(n):\n    return n * (n + 1) // 2\n\n\nif __name__ == '__main__':\n    print(nth_decagonal_number(20))"
    },
    {
      "rank": 28,
      "score": 8.585327943167513,
      "candidate": "def decagonal(n):\n    if n == 1:\n        return 1\n    else:\n        return n + decagonal(n-1)\n\nif __name__ == \"__main__\":\n    print(decagonal(5))"
    },
    {
      "rank": 29,
      "score": 8.579232399404916,
      "candidate": "def find_decagonal_number(n):\n    if n < 1:\n        raise ValueError\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    decagonal_number = 2\n    while decagonal_number < n:\n        decagonal_number += 1\n        if decagonal_number % 2 == 0:\n            decagonal_number = decagonal_number // 2\n        else:\n            decagonal_number = 3 * decagonal_number + 1\n    return decagonal_number\n\n\ndef main():\n    print(find_decagonal_number(20))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 30,
      "score": 8.573285850808507,
      "candidate": "def nth_decagonal_number(n):\n\tif n == 1:\n\t\treturn 0\n\telif n == 2:\n\t\treturn 1\n\telif n == 3:\n\t\treturn 1\n\telif n == 4:\n\t\treturn 2\n\telif n == 5:\n\t\treturn 3\n\telse:\n\t\treturn n * nth_decagonal_number(n-1)\n\nif __name__ == \"__main__\":\n\tprint(nth_decagonal_number(5))"
    },
    {
      "rank": 31,
      "score": 8.525157551150786,
      "candidate": "def decagonal(n):\n    if n == 1:\n        return 1\n    else:\n        return n + decagonal(n-1)\n\n\nprint(decagonal(20))"
    },
    {
      "rank": 32,
      "score": 8.482066362824,
      "candidate": "def nth_decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    a = 1\n    b = 2\n    for i in range(n):\n        a, b = b, a+b\n    return b"
    },
    {
      "rank": 33,
      "score": 8.472131008366494,
      "candidate": "def decagonal(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n\n    if n % 2 == 0:\n        return n + 2 * decagonal(n // 2)\n\n    return n + 3 * decagonal(n // 3)\n\n\nif __name__ == \"__main__\":\n    print(decagonal(1))\n    print(decagonal(5))\n    print(decagonal(10))"
    },
    {
      "rank": 34,
      "score": 8.351876161244965,
      "candidate": "def decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return (n * (n + 1)) / 2\n\n\nif __name__ == \"__main__\":\n    print(decagonal(5))"
    },
    {
      "rank": 35,
      "score": 8.348441560807878,
      "candidate": "def decagonal_number(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    elif n == 3:\n        return 9\n    elif n == 4:\n        return 16\n    elif n == 5:\n        return 25\n    else:\n        return decagonal_number(n - 1) + decagonal_number(n - 2) + decagonal_number(n - 3)\n\n\nprint(decagonal_number(int(input())))"
    },
    {
      "rank": 36,
      "score": 8.321851430753439,
      "candidate": "def find_nth_decagonal_number(n):\n    a = 1\n    while n > 0:\n        n -= 1\n        a += 1\n        a += (a+1) // 2\n    return a\n\nif __name__ == '__main__':\n    print(find_nth_decagonal_number(10))"
    },
    {
      "rank": 37,
      "score": 8.320991929252836,
      "candidate": "def nthDecagonalNumber(n):\n    return n * (n - 1) // 2\n\n\nprint(nthDecagonalNumber(8))"
    },
    {
      "rank": 38,
      "score": 8.25349524548064,
      "candidate": "def decagonal(n):\n    if n <= 1:\n        return n\n\n    if n == 2:\n        return 1\n\n    return decagonal(n - 1) + decagonal(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(decagonal(6))"
    },
    {
      "rank": 39,
      "score": 8.247983006927877,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return n * nth_decagonal(n - 1)\n\nprint(nth_decagonal(5))"
    },
    {
      "rank": 40,
      "score": 8.238724056574785,
      "candidate": "def nth_decagonal_number(n):\n    if n < 0:\n        return \"Invalid input\"\n\n    a = 0\n    b = 1\n    c = 1\n    d = 1\n    for i in range(n):\n        a += c\n        b += d\n        c += a\n        d += b\n    return c\n\n\nif __name__ == \"__main__\":\n    print(nth_decagonal_number(20))"
    },
    {
      "rank": 41,
      "score": 8.221247527389119,
      "candidate": "def nth_decagonal_number(n):\n    n = int(n)\n    for i in range(2, n+1):\n        if i % 3 == 0 and i % 5 == 0:\n            print(i)\n\nnth_decagonal_number(6)"
    },
    {
      "rank": 42,
      "score": 8.213906557455646,
      "candidate": "def find_nth_decagonal(n):\n    n = int(n)\n    sum = 0\n    for i in range(2, n):\n        sum += i * (i + 1) // 2\n    return sum\n\nprint(find_nth_decagonal(int(input())))"
    },
    {
      "rank": 43,
      "score": 8.179945345056344,
      "candidate": "def find_decagonal_number(n):\n\tx = 1\n\twhile n > 1:\n\t\tn -= 1\n\t\tx += n\n\treturn x\n\nprint(find_decagonal_number(5))"
    },
    {
      "rank": 44,
      "score": 8.149308319002614,
      "candidate": "def decagonal(n):\n    if n == 1:\n        return 1\n    return n * decagonal(n - 1)\n\n\nprint(decagonal(4))"
    },
    {
      "rank": 45,
      "score": 8.112962067258238,
      "candidate": "def decagonal_number(n):\n    n = int(n)\n    if n < 0:\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return n * decagonal_number(n-1) + decagonal_number(n-2)\n\nprint(decagonal_number(10))"
    },
    {
      "rank": 46,
      "score": 8.02918368510733,
      "candidate": "def find_decagonal_number(n):\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 1\n\n    return find_decagonal_number(n-1) + find_decagonal_number(n-2)\n\n\nif __name__ == \"__main__\":\n    print(find_decagonal_number(10))"
    },
    {
      "rank": 47,
      "score": 7.9725370777013005,
      "candidate": "def find_nth_decagonal_number(n):\n\treturn find_nth_decagonal_number_helper(1, n)\n\ndef find_nth_decagonal_number_helper(n, current_number):\n\tif n == 1:\n\t\treturn current_number\n\telse:\n\t\treturn find_nth_decagonal_number_helper(n-1, current_number+n)\n\nprint(find_nth_decagonal_number(4))"
    },
    {
      "rank": 48,
      "score": 7.9438985479563256,
      "candidate": "def decagonal(n):\n    decagonal_list = []\n    for i in range(1, n + 1):\n        sum = 0\n        for j in range(1, i):\n            sum += i * j\n        decagonal_list.append(sum)\n    return decagonal_list[-1]\n\n\nprint(decagonal(20))"
    },
    {
      "rank": 49,
      "score": 7.860297688096927,
      "candidate": "def decagonal(n):\n    decagonal_list = [1, 2, 4, 6, 8, 10, 12, 16, 18, 20, 24, 28, 32, 36, 40, 48, 56, 60, 64, 72, 80, 96, 100]\n    if n < 0:\n        return None\n    elif n == 0:\n        return decagonal_list[0]\n    elif n > len(decagonal_list) - 1:\n        return decagonal_list[n]\n    else:\n        return decagonal_list[n - 1] + decagonal(n - 2)\n\nif __name__ == \"__main__\":\n    print(decagonal(12))\n    print(decagonal(20))\n    print(decagonal(30))\n    print(decagonal(40))\n    print(decagonal(50))\n    print(decagonal(60))\n    print(decagonal(70))\n    print(decagonal(80))\n    print(decagonal(90))\n    print(decagonal(100))\n    print(decagonal(120))"
    },
    {
      "rank": 50,
      "score": 7.838250428393799,
      "candidate": "def decagonal(n):\n    a = 1\n    b = 1\n    for i in range(1, n+1):\n        a, b = b, a+b\n    return a\n\nprint(decagonal(10))"
    },
    {
      "rank": 51,
      "score": 7.659999544134748,
      "candidate": "def nth_decagonal(n):\n    if n < 0:\n        return 0\n\n    for i in range(2, n):\n        if n % i == 0:\n            return i\n\n    return 0\n\n\nif __name__ == \"__main__\":\n    print(nth_decagonal(100))"
    },
    {
      "rank": 52,
      "score": 3.773814279598622,
      "candidate": "def find_decagonal_number(n):\n    a = 1\n    b = 2\n    c = 3\n    d = 4\n    e = 5\n    f = 6\n    g = 7\n    h = 8\n    i = 9\n    k = 10\n    l = 11\n    m = 12\n    n = 13\n    o = 14\n    p = 15\n    q = 16\n    r = 17\n    s = 18\n    t = 19\n    u = 20\n    v = 21\n    w = 22\n    x = 23\n    y = 24\n    z = 25\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1\n    z = z * z\n    z = z + 1"
    },
    {
      "rank": 53,
      "score": 3.766675391348863,
      "candidate": "def decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 6\n    if n == 4:\n        return 13\n    if n == 5:\n        return 16\n    if n == 6:\n        return 25\n    if n == 7:\n        return 36\n    if n == 8:\n        return 45\n    if n == 9:\n        return 54\n    if n == 10:\n        return 64\n    if n == 11:\n        return 78\n    if n == 12:\n        return 90\n    if n == 13:\n        return 100\n    if n == 14:\n        return 110\n    if n == 15:\n        return 120\n    if n == 16:\n        return 130\n    if n == 17:\n        return 140\n    if n == 18:\n        return 165\n    if n == 19:\n        return 175\n    if n == 20:\n        return 180\n    if n == 21:\n        return 200\n    if n == 22:\n        return 210\n    if n == 23:\n        return 240\n    if n == 24:\n        return 260\n    if n == 25:\n        return 280\n    if n == 26:\n        return 300\n    if n == 27:\n        return 310\n    if n == 28:\n        return 320\n    if n == 29:\n        return 330\n    if n == 30:\n        return 340\n    if n == 31:\n        return 350\n    if n == 32:\n        return 360\n    if n == 33:\n        return 370\n    if n == 34:\n        return 380\n    if n == 35:\n        return 400\n    if n == 36:\n        return 410\n    if n == 37:\n        return 420\n    if n == 38:\n        return 430\n    if n == 39:\n        return 440\n    if n == 40:\n        return 450\n    if n == 41:\n        return 460\n    if n == 42:"
    },
    {
      "rank": 54,
      "score": 3.7462846296399324,
      "candidate": "def find_nth_decagonal(n, d):\n    if n == 0 or d == 0:\n        return 0\n    if n < 0 or d < 0:\n        return 0\n    if n == 1:\n        return 1\n    return d + find_nth_decagonal(n-1, d)\n\nprint(find_nth_decagonal(0, 1))"
    },
    {
      "rank": 55,
      "score": 3.517989890847269,
      "candidate": "def find_nth_decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30\n    if n == 32:\n        return 31\n    if n == 33:\n        return 32\n    if n == 34:\n        return 33\n    if n == 35:\n        return 34\n    if n == 36:\n        return 35\n    if n == 37:\n        return 36\n    if n == 38:\n        return 37\n    if n == 39:\n        return 38\n    if n == 40:\n        return 39\n    if n == 41:\n        return 40\n    if n == 42:\n        return 41\n    if n == 43:\n        return 42"
    },
    {
      "rank": 56,
      "score": 3.4485470376740164,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30\n    if n == 32:\n        return 31\n    if n == 33:\n        return 32\n    if n == 34:\n        return 33\n    if n == 35:\n        return 34\n    if n == 36:\n        return 35\n    if n == 37:\n        return 36\n    if n == 38:\n        return 37\n    if n == 39:\n        return 38\n    if n == 40:\n        return 39\n    if n == 41:\n        return 40\n    if n == 42:\n        return 41\n    if n == 43:"
    },
    {
      "rank": 57,
      "score": 3.4030470069305627,
      "candidate": "def find_decagonal(n):\n    if n == 1:\n        return 1\n\n    a = 2\n    b = 3\n    while True:\n        if n % a == 0:\n            a += 1\n        if n % b == 0:\n            b += 1\n        if n % a == 0 and n % b == 0:\n            return n\n        n += 1\n\n\nprint(find_decagonal(10))"
    },
    {
      "rank": 58,
      "score": 3.4027322271438596,
      "candidate": "def nth_decagonal_number(n):\n    # Find the nth decagonal number\n    for i in range(n):\n        print(i)\n        # Calculate the next decagonal number\n        new_num = (i + 1) * (i + 2) * (i + 3) * (i + 4) * (i + 5) * (i + 6) * (i + 7) * (i + 8) * (i + 9) * (i + 10)\n        print(new_num)\n\nnth_decagonal_number(6)"
    },
    {
      "rank": 59,
      "score": 3.2997213815320254,
      "candidate": "def find_nth_decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1 + 1\n    if n == 4:\n        return 1 + 2 + 1\n    if n == 5:\n        return 1 + 2 + 2 + 1\n    if n == 6:\n        return 1 + 2 + 2 + 2 + 1\n    if n == 7:\n        return 1 + 2 + 2 + 2 + 2\n    if n == 8:\n        return 1 + 2 + 2 + 2 + 2\n    if n == 9:\n        return 1 + 2 + 2 + 2 + 2\n    if n == 10:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 11:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 12:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 13:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 14:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 15:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 16:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 17:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 18:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 19:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 20:\n        return 1 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2 + 2\n    if n == 21:\n        return 1 + 2 + 2 + 2 + 2"
    },
    {
      "rank": 60,
      "score": 3.243389934975504,
      "candidate": "def nthDecagonal(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30\n    if n == 32:\n        return 31\n    if n == 33:\n        return 32\n    if n == 34:\n        return 33\n    if n == 35:\n        return 34\n    if n == 36:\n        return 35\n    if n == 37:\n        return 36\n    if n == 38:\n        return 37\n    if n == 39:\n        return 38\n    if n == 40:\n        return 39\n    if n == 41:\n        return 40\n    if n == 42:\n        return 41\n    if n == 43:\n        return 42\n    if n == 44:\n        return 43\n    if n == 45"
    },
    {
      "rank": 61,
      "score": 3.1840920289893795,
      "candidate": "def nth_decagonal_number(n):\n    return nth_decagonal_number_helper(0, n)\n\n\ndef nth_decagonal_number_helper(i, n):\n    if i == n - 1:\n        return 1\n    elif i == n:\n        return i\n    else:\n        return nth_decagonal_number_helper(i + 1, n) + nth_decagonal_number_helper(i + 1, n - 1)\n\n\ndef main():\n    print(nth_decagonal_number(3))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 62,
      "score": 3.1749851600407557,
      "candidate": "def decagonal_number(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 6\n    if n == 5:\n        return 8\n    if n == 6:\n        return 10\n    if n == 7:\n        return 12\n    if n == 8:\n        return 14\n    if n == 9:\n        return 16\n    if n == 10:\n        return 18\n    if n == 11:\n        return 20\n    if n == 12:\n        return 22\n    if n == 13:\n        return 24\n    if n == 14:\n        return 28\n    if n == 15:\n        return 30\n    if n == 16:\n        return 32\n    if n == 17:\n        return 36\n    if n == 18:\n        return 40\n    if n == 19:\n        return 48\n    if n == 20:\n        return 56\n    if n == 21:\n        return 64\n    if n == 22:\n        return 80\n    if n == 23:\n        return 96\n    if n == 24:\n        return 128\n    if n == 25:\n        return 192\n    if n == 26:\n        return 256\n    if n == 27:\n        return 384\n    if n == 28:\n        return 416\n    if n == 29:\n        return 512\n    if n == 30:\n        return 672\n    if n == 31:\n        return 832\n    if n == 32:\n        return 1028\n    if n == 33:\n        return 1232\n    if n == 34:\n        return 1432\n    if n == 35:\n        return 1632\n    if n == 36:\n        return 1832\n    if n == 37:\n        return 2032\n    if n == 38:\n        return 2432\n    if n == 39:\n        return 2832\n    if n == 40:\n        return 3232\n    if n == 41:\n        return 3632\n    if n == 42:\n        return 4832\n    if n == 43:\n        return 6432\n    if n == 44:\n        return 96"
    },
    {
      "rank": 63,
      "score": 3.1623190813877464,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 2:\n        return n\n    if n < 4:\n        return n - 1\n\n    if n % 2 == 1:\n        return (n - 1) * (n - 1) / 2\n\n    return (n - 1) * (n - 2) / 6\n\n\ndef main():\n    \"\"\"\n    >>> main()\n    27\n    \"\"\"\n    import doctest\n\n    doctest.testmod()\n\n\nif __name__ == \"__main__\":\n    import sys\n\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**6)\n    if \"-t\" in sys.argv:\n        import time\n\n        start = time.time()\n        main()\n        end = time.time()\n        print(\"Time: %f seconds\" % (end - start))\n    else:\n        print(nth_decagonal(int(input().strip())))"
    },
    {
      "rank": 64,
      "score": 3.1588011450034497,
      "candidate": "def find_decagonal_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return find_decagonal_number(n-1) + find_decagonal_number(n-2)\n\n\nif __name__ == \"__main__\":\n    print(find_decagonal_number(1))\n    print(find_decagonal_number(2))\n    print(find_decagonal_number(3))\n    print(find_decagonal_number(4))"
    },
    {
      "rank": 65,
      "score": 3.1185615130673567,
      "candidate": "def nth_decagonal_number(n):\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    if n == 2:\n        return 3\n    if n == 3:\n        return 4\n    if n == 4:\n        return 5\n    if n == 5:\n        return 6\n    if n == 6:\n        return 7\n    if n == 7:\n        return 8\n    if n == 8:\n        return 9\n    if n == 9:\n        return 10\n    if n == 10:\n        return 11\n    if n == 11:\n        return 12\n    if n == 12:\n        return 13\n    if n == 13:\n        return 14\n    if n == 14:\n        return 15\n    if n == 15:\n        return 16\n    if n == 16:\n        return 17\n    if n == 17:\n        return 18\n    if n == 18:\n        return 19\n    if n == 19:\n        return 20\n    if n == 20:\n        return 21\n    if n == 21:\n        return 22\n    if n == 22:\n        return 23\n    if n == 23:\n        return 24\n    if n == 24:\n        return 25\n    if n == 25:\n        return 26\n    if n == 26:\n        return 27\n    if n == 27:\n        return 28\n    if n == 28:\n        return 29\n    if n == 29:\n        return 30\n    if n == 30:\n        return 31\n    if n == 31:\n        return 32\n    if n == 32:\n        return 33\n    if n == 33:\n        return 34\n    if n == 34:\n        return 35\n    if n == 35:\n        return 36\n    if n == 36:\n        return 37\n    if n == 37:\n        return 38\n    if n == 38:\n        return 39\n    if n == 39:\n        return 40\n    if n == 40:\n        return 41\n    if n == 41:\n        return 42\n    if n == 42:\n        return 43\n    if n == 43:\n        return 44\n    if"
    },
    {
      "rank": 66,
      "score": 3.10234316155233,
      "candidate": "def decagonal(n):\n    if n == 0:\n        return 0\n    return decagonal(n - 1) + decagonal(n - 2)\n\n\nprint(decagonal(10))"
    },
    {
      "rank": 67,
      "score": 3.0839704577830855,
      "candidate": "def decagonal(n):\n    d = 1\n    while d < n:\n        d += 2\n        if d == n:\n            return d\n        else:\n            d += 1\n\n\nprint(decagonal(1))\nprint(decagonal(2))\nprint(decagonal(3))\nprint(decagonal(4))\nprint(decagonal(5))\nprint(decagonal(6))\nprint(decagonal(7))\nprint(decagonal(8))\nprint(decagonal(9))\nprint(decagonal(10))\nprint(decagonal(11))"
    },
    {
      "rank": 68,
      "score": 3.0543520689578343,
      "candidate": "def nth_decagonal_number(n):\n    if n == 1:\n        return 0\n    else:\n        return n * (n + 1) // 2"
    },
    {
      "rank": 69,
      "score": 3.042653063436704,
      "candidate": "def decagonal(n):\n    \"\"\"\n    Returns the nth decagonal number\n    :param n:\n    :return:\n    \"\"\"\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 1\n\n    if n == 3:\n        return 2\n\n    if n == 4:\n        return 3\n\n    if n == 5:\n        return 4\n\n    if n == 6:\n        return 5\n\n    if n == 7:\n        return 6\n\n    if n == 8:\n        return 7\n\n    if n == 9:\n        return 8\n\n    if n == 10:\n        return 9\n\n    if n == 11:\n        return 10\n\n    if n == 12:\n        return 11\n\n    if n == 13:\n        return 12\n\n    if n == 14:\n        return 13\n\n    if n == 15:\n        return 14\n\n    if n == 16:\n        return 15\n\n    if n == 17:\n        return 16\n\n    if n == 18:\n        return 17\n\n    if n == 19:\n        return 18\n\n    if n == 20:\n        return 19\n\n    if n == 21:\n        return 20\n\n    if n == 22:\n        return 21\n\n    if n == 23:\n        return 22\n\n    if n == 24:\n        return 23\n\n    if n == 25:\n        return 24\n\n    if n == 26:\n        return 25\n\n    if n == 27:\n        return 26\n\n    if n == 28:\n        return 27\n\n    if n == 29:\n        return 28\n\n    if n == 30:\n        return 29\n\n    if n == 31:\n        return 30\n\n    if n == 32:\n        return 31\n\n    if n == 33:\n        return 32\n\n    if n == 34:\n        return 33\n\n    if n == 35:\n        return 34\n\n    if n == 36:\n        return 35\n\n    if n == 37:\n        return 36\n\n    if n == 38:\n        return 37\n\n    if n == 39:\n        return 38\n\n    if n == 40:"
    },
    {
      "rank": 70,
      "score": 2.9933863598784125,
      "candidate": "def decagonal_number(n):\n    if n == 1:\n        return 1\n    return n * (n - 1) // 2\n\n\nprint(decagonal_number(10))"
    },
    {
      "rank": 71,
      "score": 2.9824452408361237,
      "candidate": "def nth_decagonal(n):\n    if n == 1:\n        return 1\n\n    n_sum = 0\n    n_sum += (n-1)\n    n_sum += (n-2)\n    n_sum += (n-3)\n    n_sum += (n-4)\n    n_sum += (n-5)\n    n_sum += (n-6)\n    n_sum += (n-7)\n    n_sum += (n-8)\n    n_sum += (n-9)\n\n    return n_sum\n\n\nprint(nth_decagonal(5))"
    },
    {
      "rank": 72,
      "score": 2.9647150404256366,
      "candidate": "def nth_decagonal_number(n):\n    # Write your code here\n    if n < 0:\n        return \"nth_decagonal_number: n must be >= 0\"\n    if n == 0:\n        return 0\n    i = 1\n    while i * i <= n:\n        j = i * i\n        while j < n:\n            if j < n:\n                print(j, end=\" \")\n            j += j\n        print()\n        i += 1\n    return n\n\n\nif __name__ == \"__main__\":\n    print(nth_decagonal_number(10))"
    },
    {
      "rank": 73,
      "score": 2.943332341629762,
      "candidate": "def find_nth_decagonal(n):\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 2\n    if n == 5:\n        return 3\n    if n == 6:\n        return 4\n    if n == 7:\n        return 5\n    if n == 8:\n        return 6\n    if n == 9:\n        return 7\n    if n == 10:\n        return 8\n    if n == 11:\n        return 9\n    if n == 12:\n        return 10\n    if n == 13:\n        return 11\n    if n == 14:\n        return 12\n    if n == 15:\n        return 13\n    if n == 16:\n        return 14\n    if n == 17:\n        return 15\n    if n == 18:\n        return 16\n    if n == 19:\n        return 17\n    if n == 20:\n        return 18\n    if n == 21:\n        return 19\n    if n == 22:\n        return 20\n    if n == 23:\n        return 21\n    if n == 24:\n        return 22\n    if n == 25:\n        return 23\n    if n == 26:\n        return 24\n    if n == 27:\n        return 25\n    if n == 28:\n        return 26\n    if n == 29:\n        return 27\n    if n == 30:\n        return 28\n    if n == 31:\n        return 29\n    if n == 32:\n        return 30\n    if n == 33:\n        return 31\n    if n == 34:\n        return 32\n    if n == 35:\n        return 33\n    if n == 36:\n        return 34\n    if n == 37:\n        return 35\n    if n == 38:\n        return 36\n    if n == 39:\n        return 37\n    if n == 40:\n        return 38\n    if n == 41:\n        return 39\n    if n == 42:\n        return 40\n    if n == 43:\n        return 41\n    if n == 44:\n        return 42\n    if n == 45:\n        return 43"
    },
    {
      "rank": 74,
      "score": 2.9322504924261197,
      "candidate": "def decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n\n    return (decagonal_number(n - 1) + decagonal_number(n - 2)) % 10"
    },
    {
      "rank": 75,
      "score": 2.9090271014347295,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 1:\n        return 0\n    a = 1\n    b = 2\n    c = 3\n    d = 4\n    e = 5\n    f = 6\n    g = 7\n    h = 8\n    i = 9\n    j = 10\n    k = 11\n    l = 12\n    m = 13\n    n = 14\n    o = 15\n    p = 16\n    q = 17\n    r = 18\n    s = 19\n    t = 20\n    u = 21\n    v = 22\n    w = 23\n    x = 24\n    y = 25\n    z = 26\n    return a + b + c + d + e + f + g + h + i + j + k + l + m + n + o + p + q + r + s + t + u + v + w + x + y + z"
    },
    {
      "rank": 76,
      "score": 2.892360774959619,
      "candidate": "def find_decagonal_number(n):\n    if n < 1:\n        return None\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n    if n == 4:\n        return 5\n    if n == 5:\n        return 6\n    if n == 6:\n        return 7\n    if n == 7:\n        return 8\n    if n == 8:\n        return 9\n    if n == 9:\n        return 10\n    if n == 10:\n        return 11\n\n    return find_decagonal_number(n-1) + find_decagonal_number(n-2) + find_decagonal_number(n-3) + find_decagonal_number(n-4) + find_decagonal_number(n-5) + find_decagonal_number(n-6)\n\n\ndef main():\n    print(find_decagonal_number(int(input())))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 77,
      "score": 2.8852728910949015,
      "candidate": "def decagonal_number(n):\n    if n < 1:\n        return None\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n\n    a = decagonal_number(n-1)\n    b = decagonal_number(n-2)\n    c = decagonal_number(n-3)\n    d = decagonal_number(n-4)\n    e = decagonal_number(n-5)\n    f = decagonal_number(n-6)\n    g = decagonal_number(n-7)\n    h = decagonal_number(n-8)\n    i = decagonal_number(n-9)\n    j = decagonal_number(n-10)\n\n    total = a + b + c + d + e + f + g + h + i + j\n\n    return total\n\nprint(decagonal_number(5))"
    },
    {
      "rank": 78,
      "score": 2.857070062601294,
      "candidate": "def decagonal_number(n):\n    i = 1\n    while i <= n:\n        print(i)\n        i += 1\n\n\ndecagonal_number(100)"
    },
    {
      "rank": 79,
      "score": 2.8484859358329047,
      "candidate": "def find_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        return None\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 + 1\n    if n == 3:\n        return 1 + 2 + 1\n    if n == 4:\n        return 1 + 2 + 3 + 1\n    if n == 5:\n        return 1 + 2 + 3 + 4 + 1\n    if n == 6:\n        return 1 + 2 + 3 + 4 + 5 + 1\n    if n == 7:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 1\n    if n == 8:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 1\n    if n == 9:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 1\n    if n == 10:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 1\n    if n == 11:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 1\n    if n == 12:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 1\n    if n == 13:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 1\n    if n == 14:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 1\n    if n == 15:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 1\n    if n == 16:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 1\n    if n == 17:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 +"
    },
    {
      "rank": 80,
      "score": 2.811309682596005,
      "candidate": "def decagonal(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 4\n    if n == 4:\n        return 6\n    if n == 5:\n        return 8\n    if n == 6:\n        return 10\n    if n == 7:\n        return 12\n    if n == 8:\n        return 14\n    if n == 9:\n        return 16\n    if n == 10:\n        return 18\n    if n == 11:\n        return 20\n    if n == 12:\n        return 24\n    if n == 13:\n        return 30\n    if n == 14:\n        return 32\n    if n == 15:\n        return 40\n    if n == 16:\n        return 48\n    if n == 17:\n        return 56\n    if n == 18:\n        return 64\n    if n == 19:\n        return 82\n    if n == 20:\n        return 80\n    if n == 21:\n        return 100\n    if n == 22:\n        return 112\n    if n == 23:\n        return 120\n    if n == 24:\n        return 144\n    if n == 25:\n        return 160\n    if n == 26:\n        return 184\n    if n == 27:\n        return 192\n    if n == 28:\n        return 224\n    if n == 29:\n        return 288\n    if n == 30:\n        return 320\n    if n == 31:\n        return 384\n    if n == 32:\n        return 448\n    if n == 33:\n        return 496\n    if n == 34:\n        return 524\n    if n == 35:\n        return 592\n    if n == 36:\n        return 624\n    if n == 37:\n        return 692\n    if n == 38:\n        return 724\n    if n == 39:\n        return 792\n    if n == 40:\n        return 824\n    if n == 41:\n        return 896\n    if n == 42:\n        return 924\n    if n == 43:\n        return 996\n    if n == 44:\n        return 10"
    },
    {
      "rank": 81,
      "score": 2.774287002229704,
      "candidate": "def decagonal_number(n):\n    return sum(decagonal_number_helper(n))\n\n\ndef decagonal_number_helper(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n\n    if n == 4:\n        return 5\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30\n    if n == 32:\n        return 31\n    if n == 33:\n        return 32\n    if n == 34:\n        return 33\n    if n == 35:\n        return 34\n    if n == 36:\n        return 35\n    if n == 37:\n        return 36\n    if n == 38:\n        return 37\n    if n == 39:\n        return 38\n    if n == 40:\n        return 39\n    if n == 41:\n        return 40\n    if n == 42:\n        return 41\n    if n == 43:"
    },
    {
      "rank": 82,
      "score": 2.7729253305218933,
      "candidate": "def decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    return decagonal_number(n - 1) + decagonal_number(n - 2)\n\n\nif __name__ == '__main__':\n    print(decagonal_number(5))"
    },
    {
      "rank": 83,
      "score": 2.7699575508918737,
      "candidate": "def decagonal(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 1 + 2\n\n    if n == 3:\n        return 1 + 2 + 3\n\n    if n == 4:\n        return 1 + 2 + 3 + 4\n\n    if n == 5:\n        return 1 + 2 + 3 + 4 + 5\n\n    if n == 6:\n        return 1 + 2 + 3 + 4 + 5 + 6\n\n    if n == 7:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7\n\n    if n == 8:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8\n\n    if n == 9:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\n\n    if n == 10:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10\n\n    if n == 11:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11\n\n    if n == 12:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12\n\n    if n == 13:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13\n\n    if n == 14:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14\n\n    if n == 15:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15\n\n    if n == 16:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16\n\n    if n == 17:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17\n\n    if n == 18:\n        return 1 + 2"
    },
    {
      "rank": 84,
      "score": 2.7460475930459127,
      "candidate": "def find_decagonal_number(n):\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 2\n\n    return find_decagonal_number(n - 1) + find_decagonal_number(n - 2)\n\n\nprint(find_decagonal_number(4))"
    },
    {
      "rank": 85,
      "score": 2.740417500154151,
      "candidate": "def decagonal(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n    if n == 4:\n        return 6\n    if n == 5:\n        return 9\n    if n == 6:\n        return 16\n    if n == 7:\n        return 25\n    if n == 8:\n        return 36\n    if n == 9:\n        return 49\n    if n == 10:\n        return 64\n    if n == 11:\n        return 81\n    if n == 12:\n        return 100\n    if n == 13:\n        return 101\n    if n == 14:\n        return 102\n    if n == 15:\n        return 103\n    if n == 16:\n        return 104\n    if n == 17:\n        return 105\n    if n == 18:\n        return 106\n    if n == 19:\n        return 107\n    if n == 20:\n        return 108\n    if n == 21:\n        return 109\n    if n == 22:\n        return 110\n    if n == 23:\n        return 111\n    if n == 24:\n        return 112\n    if n == 25:\n        return 113\n    if n == 26:\n        return 114\n    if n == 27:\n        return 115\n    if n == 28:\n        return 116\n    if n == 29:\n        return 117\n    if n == 30:\n        return 118\n    if n == 31:\n        return 119\n    if n == 32:\n        return 120\n    if n == 33:\n        return 121\n    if n == 34:\n        return 122\n    if n == 35:\n        return 123\n    if n == 36:\n        return 125\n    if n == 37:\n        return 126\n    if n == 38:\n        return 127\n    if n == 39:\n        return 130\n    if n == 40:\n        return 131\n    if n == 41:\n        return 132\n    if n == 42:\n        return 133\n    if n == 43:\n        return 134\n    if n == 44:\n        return 1"
    },
    {
      "rank": 86,
      "score": 2.7056870419397856,
      "candidate": "def find_nth_decagonal(n):\n    if n < 1:\n        return -1\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n\n    if n % 2 == 0:\n        return find_nth_decagonal(n - 1) + find_nth_decagonal(n - 2)\n    else:\n        return find_nth_decagonal(n - 1) + find_nth_decagonal(n - 2) + find_nth_decagonal(n - 3)\n\n\nif __name__ == \"__main__\":\n    print(find_nth_decagonal(6))"
    },
    {
      "rank": 87,
      "score": 2.7051637600075953,
      "candidate": "def find_nth_decagonal(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 4\n    if n == 4:\n        return 9\n\n    return (find_nth_decagonal(n-1) + find_nth_decagonal(n-2)) % 10**9\n\n\nif __name__ == \"__main__\":\n    print(find_nth_decagonal(5))"
    },
    {
      "rank": 88,
      "score": 2.66830821985008,
      "candidate": "def find_decagonal_number(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 2\n\n    if n == 3:\n        return 3\n\n    if n == 4:\n        return 4\n\n    if n == 5:\n        return 5\n\n    if n == 6:\n        return 6\n\n    if n == 7:\n        return 7\n\n    if n == 8:\n        return 8\n\n    if n == 9:\n        return 9\n\n    if n == 10:\n        return 10\n\n    if n == 11:\n        return 11\n\n    if n == 12:\n        return 12\n\n    if n == 13:\n        return 13\n\n    if n == 14:\n        return 14\n\n    if n == 15:\n        return 15\n\n    if n == 16:\n        return 16\n\n    if n == 17:\n        return 17\n\n    if n == 18:\n        return 18\n\n    if n == 19:\n        return 19\n\n    if n == 20:\n        return 20\n\n    if n == 21:\n        return 21\n\n    if n == 22:\n        return 22\n\n    if n == 23:\n        return 23\n\n    if n == 24:\n        return 24\n\n    if n == 25:\n        return 25\n\n    if n == 26:\n        return 26\n\n    if n == 27:\n        return 27\n\n    if n == 28:\n        return 28\n\n    if n == 29:\n        return 29\n\n    if n == 30:\n        return 30\n\n    if n == 31:\n        return 31\n\n    if n == 32:\n        return 32\n\n    if n == 33:\n        return 33\n\n    if n == 34:\n        return 34\n\n    if n == 35:\n        return 35\n\n    if n == 36:\n        return 36\n\n    if n == 37:\n        return 37\n\n    if n == 38:\n        return 38\n\n    if n == 39:\n        return 39\n\n    if n == 40:\n        return 40\n\n    if n =="
    },
    {
      "rank": 89,
      "score": 2.588783413620907,
      "candidate": "def find_decagonal(n):\n    if n < 0:\n        raise ValueError\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return 2 * find_decagonal(n - 1) + find_decagonal(n - 2)\n\n\nif __name__ == \"__main__\":\n    print(find_decagonal(0))\n    print(find_decagonal(1))\n    print(find_decagonal(2))\n    print(find_decagonal(3))\n    print(find_decagonal(4))\n    print(find_decagonal(5))\n    print(find_decagonal(6))\n    print(find_decagonal(7))\n    print(find_decagonal(8))\n    print(find_decagonal(9))\n    print(find_decagonal(10))\n    print(find_decagonal(11))\n    print(find_decagonal(12))\n    print(find_decagonal(13))\n    print(find_decagonal(14))\n    print(find_decagonal(15))\n    print(find_decagonal(16))\n    print(find_decagonal(17))\n    print(find_decagonal(18))\n    print(find_decagonal(19))\n    print(find_decagonal(20))\n    print(find_decagonal(21))\n    print(find_decagonal(22))\n    print(find_decagonal(23))\n    print(find_decagonal(24))\n    print(find_decagonal(25))\n    print(find_decagonal(26))\n    print(find_decagonal(27))\n    print(find_decagonal(28))\n    print(find_decagonal(29))\n    print(find_decagonal(30))\n    print(find_decagonal(31))\n    print(find_decagonal(32))\n    print(find_decagonal(33))\n    print(find_decagonal("
    },
    {
      "rank": 90,
      "score": 2.555068202994607,
      "candidate": "def find_nth_decagonal_number(n):\n    n = n - 1\n    while n > 0:\n        print(n)\n        n = n - 2\n\n\nfind_nth_decagonal_number(6)"
    },
    {
      "rank": 91,
      "score": 2.481721644811609,
      "candidate": "def find_decagonal(n):\n    pass\n\n\nif __name__ == \"__main__\":\n    find_decagonal(1)"
    },
    {
      "rank": 92,
      "score": 2.457895862737046,
      "candidate": "def find_nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n <= 0:\n        raise ValueError('n must be greater than 0')\n\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 2\n\n    if n == 3:\n        return 3\n\n    if n == 4:\n        return 4\n\n    if n == 5:\n        return 5\n\n    if n == 6:\n        return 6\n\n    if n == 7:\n        return 7\n\n    if n == 8:\n        return 8\n\n    if n == 9:\n        return 9\n\n    if n == 10:\n        return 10\n\n    if n == 11:\n        return 11\n\n    if n == 12:\n        return 12\n\n    if n == 13:\n        return 13\n\n    if n == 14:\n        return 14\n\n    if n == 15:\n        return 15\n\n    if n == 16:\n        return 16\n\n    if n == 17:\n        return 17\n\n    if n == 18:\n        return 18\n\n    if n == 19:\n        return 19\n\n    if n == 20:\n        return 20\n\n    if n == 21:\n        return 21\n\n    if n == 22:\n        return 22\n\n    if n == 23:\n        return 23\n\n    if n == 24:\n        return 24\n\n    if n == 25:\n        return 25\n\n    if n == 26:\n        return 26\n\n    if n == 27:\n        return 27\n\n    if n == 28:\n        return 28\n\n    if n == 29:\n        return 29\n\n    if n == 30:\n        return 30\n\n    if n == 31:\n        return 31\n\n    if n == 32:\n        return 32\n\n    if n == 33:\n        return 33\n\n    if n == 34:\n        return 34\n\n    if n == 35:\n        return 35\n\n    if n == 36:\n        return 36\n\n    if n == 37:\n        return 37\n\n    if n == 38:\n        return 38"
    },
    {
      "rank": 93,
      "score": 2.4138587542004712,
      "candidate": "def find_decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 5\n    if n == 4:\n        return 8\n    if n == 5:\n        return 13\n    if n == 6:\n        return 21\n    if n == 7:\n        return 34\n    if n == 8:\n        return 55\n    if n == 9:\n        return 89\n    if n == 10:\n        return 106\n    if n == 11:\n        return 113\n    if n == 12:\n        return 145\n    if n == 13:\n        return 165\n    if n == 14:\n        return 178\n    if n == 15:\n        return 182\n    if n == 16:\n        return 193\n    if n == 17:\n        return 213\n    if n == 18:\n        return 237\n    if n == 19:\n        return 259\n    if n == 20:\n        return 261\n    if n == 21:\n        return 263\n    if n == 22:\n        return 271\n    if n == 23:\n        return 278\n    if n == 24:\n        return 294\n    if n == 25:\n        return 295\n    if n == 26:\n        return 297\n    if n == 27:\n        return 311\n    if n == 28:\n        return 315\n    if n == 29:\n        return 339\n    if n == 30:\n        return 349\n    if n == 31:\n        return 351\n    if n == 32:\n        return 352\n    if n == 33:\n        return 354\n    if n == 34:\n        return 357\n    if n == 35:\n        return 358\n    if n == 36:\n        return 359\n    if n == 37:\n        return 361\n    if n == 38:\n        return 363\n    if n == 39:\n        return 366\n    if n == 40:"
    },
    {
      "rank": 94,
      "score": 2.349188836039769,
      "candidate": "def decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        raise ValueError('n must be non-negative')\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    if n == 2:\n        return 3\n    if n == 3:\n        return 4\n    if n == 4:\n        return 5\n    if n == 5:\n        return 6\n    if n == 6:\n        return 7\n    if n == 7:\n        return 8\n    if n == 8:\n        return 9\n    if n == 9:\n        return 10\n    if n == 10:\n        return 11\n    if n == 11:\n        return 12\n    if n == 12:\n        return 13\n    if n == 13:\n        return 14\n    if n == 14:\n        return 15\n    if n == 15:\n        return 16\n    if n == 16:\n        return 17\n    if n == 17:\n        return 18\n    if n == 18:\n        return 19\n    if n == 19:\n        return 20\n    if n == 20:\n        return 21\n    if n == 21:\n        return 22\n    if n == 22:\n        return 23\n    if n == 23:\n        return 24\n    if n == 24:\n        return 25\n    if n == 25:\n        return 26\n    if n == 26:\n        return 27\n    if n == 27:\n        return 28\n    if n == 28:\n        return 29\n    if n == 29:\n        return 30\n    if n == 30:\n        return 31\n    if n == 31:\n        return 32\n    if n == 32:\n        return 33\n    if n == 33:\n        return 34\n    if n == 34:\n        return 35\n    if n == 35:\n        return 36\n    if n == 36:\n        return 37\n    if n == 37:\n        return 38\n    if n == 38:\n        return 39\n    if n == 39:\n        return 40\n    if n == 40:\n        return 41\n    if n == 41:"
    },
    {
      "rank": 95,
      "score": 2.307971186345707,
      "candidate": "def nth_decagonal(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n\n    return (nth_decagonal(n-1) + nth_decagonal(n-2) + nth_decagonal(n-3)) % 1000000007\n\n\nprint(nth_decagonal(1))\nprint(nth_decagonal(2))\nprint(nth_decagonal(3))\nprint(nth_decagonal(4))\nprint(nth_decagonal(5))\nprint(nth_decagonal(6))\nprint(nth_decagonal(7))\nprint(nth_decagonal(8))\nprint(nth_decagonal(9))"
    },
    {
      "rank": 96,
      "score": 2.154790262068614,
      "candidate": "def find_decagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 3\n    if n == 3:\n        return 6\n    if n == 4:\n        return 9\n    if n == 5:\n        return 12\n    if n == 6:\n        return 15\n    if n == 7:\n        return 18\n    if n == 8:\n        return 21\n    if n == 9:\n        return 28\n    if n == 10:\n        return 34\n    if n == 11:\n        return 55\n    if n == 12:\n        return 89\n    if n == 13:\n        return 144\n    if n == 14:\n        return 288\n    if n == 15:\n        return 384\n    if n == 16:\n        return 448\n    if n == 17:\n        return 576\n    if n == 18:\n        return 664\n    if n == 19:\n        return 704\n    if n == 20:\n        return 888\n    if n == 21:\n        return 976\n    if n == 22:\n        return 1096\n    if n == 23:\n        return 1164\n    if n == 24:\n        return 1280\n    if n == 25:\n        return 1310\n    if n == 26:\n        return 1440\n    if n == 27:\n        return 1536\n    if n == 28:\n        return 1664\n    if n == 29:\n        return 1720\n    if n == 30:\n        return 1880\n    if n == 31:\n        return 1944\n    if n == 32:\n        return 2096\n    if n == 33:\n        return 2340\n    if n == 34:\n        return 2464\n    if n == 35:\n        return 2536\n    if n == 36:\n        return 2684\n    if n == 37:\n        return 2880\n    if n == 38:\n        return 2944\n    if n == 39:\n        return 3096\n    if n == 40:\n        return"
    },
    {
      "rank": 97,
      "score": 2.1361103238722605,
      "candidate": "def nth_decagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 3\n    if n == 3:\n        return 5\n    if n == 4:\n        return 7\n    if n == 5:\n        return 9\n    if n == 6:\n        return 11\n    if n == 7:\n        return 13\n    if n == 8:\n        return 17\n    if n == 9:\n        return 19\n    if n == 10:\n        return 23\n    if n == 11:\n        return 29\n    if n == 12:\n        return 31\n    if n == 13:\n        return 37\n    if n == 14:\n        return 41\n    if n == 15:\n        return 43\n    if n == 16:\n        return 47\n    if n == 17:\n        return 53\n    if n == 18:\n        return 59\n    if n == 19:\n        return 61\n    if n == 20:\n        return 67\n    if n == 21:\n        return 71\n    if n == 22:\n        return 73\n    if n == 23:\n        return 79\n    if n == 24:\n        return 81\n    if n == 25:\n        return 83\n    if n == 26:\n        return 89\n    if n == 27:\n        return 91\n    if n == 28:\n        return 97\n    if n == 29:\n        return 101\n    if n == 30:\n        return 103\n    if n == 31:\n        return 104\n    if n == 32:\n        return 105\n    if n == 33:\n        return 106\n    if n == 34:\n        return 107\n    if n == 35:\n        return 108\n    if n == 36:\n        return 109\n    if n == 37:\n        return 110\n    if n == 38:\n        return 111\n    if n == 39:\n        return 112\n    if n == 40:\n        return 113\n    if n == 41:\n        return 114\n    if n == 42:\n        return 115\n    if"
    },
    {
      "rank": 98,
      "score": 2.03976163929891,
      "candidate": "def find_decagonal_number(n):\n    # Write your code here.\n    return find_decagonal_number_helper(n, 1, 1)\n\ndef find_decagonal_number_helper(n, current_num, previous_num):\n    if n == 1:\n        return current_num\n\n    next_num = current_num * (current_num + 1) // 2\n\n    if next_num > n:\n        return find_decagonal_number_helper(n, next_num, previous_num)\n\n    else:\n        return find_decagonal_number_helper(n - 1, next_num, previous_num + next_num)\n\nif __name__ == \"__main__\":\n    print(find_decagonal_number(8))"
    },
    {
      "rank": 99,
      "score": 2.0260912318455624,
      "candidate": "def find_nth_decagonal_number(n):\n    '''\n    :param n: the number to be found\n    :return: the nth decagonal number\n    '''\n    if n < 0:\n        return -1\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n\n    decagonal_numbers = []\n    for i in range(1, n):\n        decagonal_numbers.append(decagonal_numbers[i - 1] + decagonal_numbers[i - 2])\n\n    return decagonal_numbers[-1]\n\n\nif __name__ == \"__main__\":\n    print(find_nth_decagonal_number(2))"
    },
    {
      "rank": 100,
      "score": 1.7163248989960254,
      "candidate": "def decagonal_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n\n\nprint(decagonal_number(1))\nprint(decagonal_number(2))\nprint(decagonal_number(3))\nprint(decagonal_number(4))\nprint(decagonal_number(5))\nprint(decagonal_number(6))\nprint(decagonal_number(7))\nprint(decagonal_number(8))\nprint(decagonal_number(9))"
    }
  ]
}