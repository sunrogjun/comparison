{
  "timestamp": "2025-09-14T17:02:29.610322",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "humaneval",
  "problem_number": 121,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "odd_sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            odd_sum += i\n    return odd_sum"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "odd = [x for x in lst if x % 2 == 1]\n    even = [x for x in lst if x % 2 == 0]\n    return sum(odd) + sum(even)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "if not lst:\n        return 0\n    odd_list = []\n    for i in lst:\n        if i % 2:\n            odd_list.append(i)\n    return sum(odd_list)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "odds = [x for x in lst if x % 2]\n    return sum(odds)"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "odd = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd += i\n    return odd"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "odd = [x for x in lst if x % 2]\n    even = [x for x in lst if x % 2 == 0]\n    return sum(odd) + sum(even)"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "return sum([i % 2 == 0 for i in lst if i % 2 == 1])"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "s = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            s += lst[i]\n    return s"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "return sum([x for x in lst if x % 2 == 1])"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "odds = 0\n    for i in lst:\n        if i % 2 == 1:\n            odds += i\n    return odds\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "res = 0\n    for i in lst:\n        res += i if i % 2 else 0\n    return res\n\nif __name__ == '__main__':\n    lst = [5, 8, 7, 1]\n    print solution(lst)"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "odd_pos = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            odd_pos += lst[i]\n    return odd_pos"
    },
    {
      "rank": 13,
      "score": 9.997030610557655,
      "candidate": "odd = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd += i\n    return odd\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n    if doctest.testmod().failed:\n        exit(1)"
    },
    {
      "rank": 14,
      "score": 9.99211827139581,
      "candidate": "odd = 0\n    even = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd += i\n        else:\n            even += i\n    return odd + even"
    },
    {
      "rank": 15,
      "score": 9.974557377874588,
      "candidate": "odd = 0\n    for i in range(len(lst)):\n        if i%2 == 1:\n            odd += lst[i]\n    return odd"
    },
    {
      "rank": 16,
      "score": 9.950329213892962,
      "candidate": "return sum(i for i in lst if i % 2 == 1)"
    },
    {
      "rank": 17,
      "score": 9.876296743566986,
      "candidate": "return sum(x for x in lst if x % 2!= 0)"
    },
    {
      "rank": 18,
      "score": 9.841634274153163,
      "candidate": "odds = [i for i in lst if i % 2 == 1]\n    return sum(odds)"
    },
    {
      "rank": 19,
      "score": 9.777177153526427,
      "candidate": "result = 0\n    for i in range(0, len(lst)):\n        if lst[i] % 2 == 0:\n            result += lst[i]\n    return result"
    },
    {
      "rank": 20,
      "score": 9.68655539903304,
      "candidate": "evens = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            evens = evens + lst[i]\n    return evens"
    },
    {
      "rank": 21,
      "score": 9.678026711410935,
      "candidate": "ans = 0\n    for x in lst:\n        if x % 2 == 0:\n            ans += x\n    return ans\n\n# Time:  O(n)\n# Space: O(1)\nclass Solution2(object):\n    def solution(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: int\n        \"\"\"\n        ans = 0\n        for i in xrange(len(nums)):\n            if i % 2 == 0:\n                ans += nums[i]\n        return ans\n\nif __name__ == \"__main__\":\n    print Solution().solution([5, 8, 7, 1])"
    },
    {
      "rank": 22,
      "score": 9.56887257274645,
      "candidate": "sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            sum += i\n    return sum"
    },
    {
      "rank": 23,
      "score": 3.7896064077536957,
      "candidate": "even_pos = 0\n    odd_pos = 0\n    for i in lst:\n        if i % 2 == 0:\n            even_pos += i\n        else:\n            odd_pos += i\n    return even_pos + odd_pos"
    },
    {
      "rank": 24,
      "score": 3.761514928204013,
      "candidate": "evens = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            evens += lst[i]\n    return evens\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 25,
      "score": 3.738947022370758,
      "candidate": "ans = 0\n    for i in lst:\n        if i % 2 == 0:\n            ans += i\n    return ans\n\n\nif __name__ == '__main__':\n    assert solution([]) == 0\n    assert solution([1]) == 1\n    assert solution([2]) == 2\n    assert solution([3]) == 3\n    assert solution([4]) == 4\n    assert solution([5]) == 5\n    assert solution([6]) == 6\n    assert solution([7]) == 7\n    assert solution([8]) == 8\n    assert solution([9]) == 9\n    assert solution([10]) == 10\n    assert solution([11]) == 11\n    assert solution([12]) == 12\n    assert solution([13]) == 13\n    assert solution([14]) == 14\n    assert solution([15]) == 15\n    assert solution([16]) == 16\n    assert solution([17]) == 17\n    assert solution([18]) == 18\n    assert solution([19]) == 19\n    assert solution([20]) == 20\n    assert solution([21]) == 21\n    assert solution([22]) == 22\n    assert solution([23]) == 23\n    assert solution([24]) == 24\n    assert solution([25]) == 25\n    assert solution([26]) == 26\n    assert solution([27]) == 27\n    assert solution([28]) == 28\n    assert solution([29]) == 29\n    assert solution([30]) == 30\n    assert solution([31]) == 31\n    assert solution([32]) == 32\n    assert solution([33]) == 33\n    assert solution([34]) == 34\n    assert solution([35]) == 35\n    assert solution([36]) == 36\n    assert solution([37]) == 37\n    assert solution([38]) == 38\n    assert solution([39]) == 39\n    assert solution([40]) == 40\n    assert solution([41]) == 41\n    assert solution([42]) == 42\n    assert solution([43]) == 43\n    assert solution([44]) == 44\n    assert solution([45]) == 45\n    assert solution([46]) == 46\n    assert solution([47]) == 47\n    assert solution([48]) == 48\n    assert solution([49]) == 49\n    assert solution([50]) == 50\n    assert solution([51]) == 51\n    assert"
    },
    {
      "rank": 26,
      "score": 3.6781200142854114,
      "candidate": "if not lst:\n        return 0\n    odds = [i for i in lst if i % 2 == 1]\n    evens = [i for i in lst if i % 2 == 0]\n    return sum(odds) + sum(evens)"
    },
    {
      "rank": 27,
      "score": 3.5285611131094576,
      "candidate": "odds = 0\n    evens = 0\n    for i in lst:\n        if i % 2 == 1:\n            odds += i\n        else:\n            evens += i\n    return odds"
    },
    {
      "rank": 28,
      "score": 3.4877725635611796,
      "candidate": "odds = []\n    for i in lst:\n        if i % 2 == 1:\n            odds.append(i)\n    return sum(odds)\n\n\ndef test_solution():\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    \n\nif __name__ == '__main__':\n    test_solution()"
    },
    {
      "rank": 29,
      "score": 3.4843224952664444,
      "candidate": "ret = 0\n    for i in lst:\n        ret += i if i % 2 else 0\n    return ret"
    },
    {
      "rank": 30,
      "score": 3.4656400595580994,
      "candidate": "even_pos = 0\n    odd_pos = 0\n    for val in lst:\n        if val % 2 == 0:\n            even_pos += val\n        else:\n            odd_pos += val\n    return even_pos + odd_pos"
    },
    {
      "rank": 31,
      "score": 3.457701058851037,
      "candidate": "return sum(x for x in lst if x % 2!= 0)\n\n\nif __name__ == \"__main__\":\n    print solution([5, 8, 7, 1])\n    print solution([3, 3, 3, 3, 3])\n    print solution([30, 13, 24, 321])"
    },
    {
      "rank": 32,
      "score": 3.410951252187612,
      "candidate": "result = 0\n    for i in lst:\n        if i % 2 == 1:\n            result += i\n    return result\n\n\nif __name__ == '__main__':\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 33,
      "score": 3.406262911197099,
      "candidate": "odds = []\n    for x in lst:\n        if x % 2 == 1:\n            odds.append(x)\n    return sum(odds)"
    },
    {
      "rank": 34,
      "score": 3.3692332899977053,
      "candidate": "if not lst:\n        return 0\n    if not lst[0]:\n        return 0\n    sum = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 0:\n            sum += lst[i]\n    return sum\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 35,
      "score": 3.305838144420434,
      "candidate": "if not lst:\n        return 0\n    odd_sum = 0\n    even_sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            even_sum += lst[i]\n        else:\n            odd_sum += lst[i]\n    return even_sum + odd_sum"
    },
    {
      "rank": 36,
      "score": 3.2712800217929825,
      "candidate": "odd_pos = 0\n    for i in lst:\n        if i % 2:\n            odd_pos += i\n    return odd_pos"
    },
    {
      "rank": 37,
      "score": 3.256633716556678,
      "candidate": "odd_sum = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd_sum += i\n    return odd_sum\n\n\ndef main():\n    pass\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 38,
      "score": 3.2483570765056164,
      "candidate": "odds = 0\n    for i in lst:\n        if i % 2 == 1:\n            odds += i\n    return odds\n\nprint solution([5, 8, 7, 1])\nprint solution([3, 3, 3, 3, 3])\nprint solution([30, 13, 24, 321])"
    },
    {
      "rank": 39,
      "score": 3.1878490091728358,
      "candidate": "evens = 0\n    for i in lst:\n        if i % 2 == 1:\n            evens += i\n    return evens\n\n\nif __name__ == '__main__':\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 40,
      "score": 3.178556285755873,
      "candidate": "odds = [x for x in lst if x % 2!= 0]\n    return sum(odds)"
    },
    {
      "rank": 41,
      "score": 3.1718091447842305,
      "candidate": "odds = [i for i in lst if i % 2 == 1]\n    return sum(odds)"
    },
    {
      "rank": 42,
      "score": 3.165631715701782,
      "candidate": "even_odd_sum = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            even_odd_sum += lst[i]\n    return even_odd_sum\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 43,
      "score": 3.1643755548298422,
      "candidate": "res = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            res += lst[i]\n    return res\n\nif __name__ == '__main__':\n    print solution([5, 8, 7, 1])"
    },
    {
      "rank": 44,
      "score": 3.1620419846973977,
      "candidate": "even_pos = 0\n    odd_pos = 0\n    for i in lst:\n        if i % 2 == 0:\n            odd_pos += i\n        else:\n            even_pos += i\n    return odd_pos - even_pos\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 45,
      "score": 3.157123666297637,
      "candidate": "result = 0\n    for num in lst:\n        if num % 2 == 0:\n            result += num\n    return result\n\n# if __name__ == '__main__':\n#     assert solution([3, 3, 3, 3, 3]) == 9\n#     assert solution([5, 8, 7, 1]) == 12\n#     assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 46,
      "score": 3.148060138532288,
      "candidate": "res = 0\n    for i in lst:\n        res += i if i % 2 else 0\n    return res"
    },
    {
      "rank": 47,
      "score": 3.1305276360899446,
      "candidate": "odds = 0\n    for i in lst:\n        odds += i if i % 2 else 0\n    return odds"
    },
    {
      "rank": 48,
      "score": 3.1209811357830173,
      "candidate": "odd_sum = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd_sum += i\n    return odd_sum\n\nif __name__ == \"__main__\":\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 49,
      "score": 3.104431797502378,
      "candidate": "return sum(i for i in lst if i % 2 == 1)"
    },
    {
      "rank": 50,
      "score": 3.085684140594985,
      "candidate": "ret = 0\n    for i in lst:\n        ret += i if i % 2 == 1 else 0\n    return ret\n\n\nif __name__ == '__main__':\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 51,
      "score": 3.055461294854933,
      "candidate": "return sum(x % 2 for x in lst)\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([1, 1, 1, 1, 1]) == 0\n    assert solution([]) == 0\n    assert solution([-1]) == -1"
    },
    {
      "rank": 52,
      "score": 3.0485387746740202,
      "candidate": "odd = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            odd += lst[i]\n    return odd"
    },
    {
      "rank": 53,
      "score": 3.045880388267751,
      "candidate": "return sum([e % 2 for e in lst if e % 2 == 1])\n\nif __name__ == '__main__':\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([-5, -3, -2, -1]) == 0\n    assert solution([1, 2, 3]) == 0"
    },
    {
      "rank": 54,
      "score": 3.043523534119086,
      "candidate": "sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            sum += lst[i]\n    return sum\n\n\nif __name__ == '__main__':\n    lst = [5, 8, 7, 1]\n    print(solution(lst))\n    lst = [3, 3, 3, 3, 3]\n    print(solution(lst))\n    lst = [30, 13, 24, 321]\n    print(solution(lst))"
    },
    {
      "rank": 55,
      "score": 3.033764102343962,
      "candidate": "odd_pos = 0\n    even_pos = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd_pos += i\n        else:\n            even_pos += i\n    return odd_pos + even_pos\n\n\ndef test_solution():\n    assert solution([1, 2, 3, 4]) == 6\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([30, 13, 24, 321, 0]) == 0\n    assert solution([-1, -1, -1, -1]) == 0\n    assert solution([]) == 0\n    assert solution([1, 2, 3, 4, 5]) == 15\n    assert solution([1, 2, 3, 4, 5, 6]) == 24\n    assert solution([1, 2, 3, 4, 5, 6, 7]) == 30\n\nif __name__ == \"__main__\":\n    test_solution()"
    },
    {
      "rank": 56,
      "score": 3.0025567283212307,
      "candidate": "odds = 0\n    for num in lst:\n        if num % 2!= 0:\n            odds += num\n    return odds"
    },
    {
      "rank": 57,
      "score": 2.963994939209833,
      "candidate": "odd = 0\n    even = 0\n    for i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n            odd += i\n    return even"
    },
    {
      "rank": 58,
      "score": 2.930867849414408,
      "candidate": "return sum(x for x in lst if x % 2 == 1)\n\n\ndef test_solution():\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n\nif __name__ == '__main__':\n    test_solution()"
    },
    {
      "rank": 59,
      "score": 2.9071705116680913,
      "candidate": "odd = 0\n    for i in lst:\n        if i % 2!= 0:\n            odd += i\n    return odd\n\nif __name__ == '__main__':\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([2, 2, 2, 2, 2]) == 0"
    },
    {
      "rank": 60,
      "score": 2.890164056081244,
      "candidate": "if not lst:\n        return 0\n    ret = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 0:\n            ret += lst[i]\n    return ret\n\nif __name__ == '__main__':\n    print solution([5, 8, 7, 1])\n    print solution([3, 3, 3, 3, 3])\n    print solution([30, 13, 24, 321])"
    },
    {
      "rank": 61,
      "score": 2.8829315215254097,
      "candidate": "evens = 0\n    for i in lst:\n        if i % 2 == 0:\n            evens += i\n    return evens"
    },
    {
      "rank": 62,
      "score": 2.882923312638332,
      "candidate": "return sum(x for x in lst if x % 2!= 0)\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 63,
      "score": 2.8827064333124266,
      "candidate": "ans = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            ans += lst[i]\n    return ans\n\nif __name__ == \"__main__\":\n    lst = [5, 8, 7, 1]\n    print solution(lst)"
    },
    {
      "rank": 64,
      "score": 2.8541531251033616,
      "candidate": "ans = 0\n    for i in lst:\n        ans += i if i % 2 else 0\n    return ans"
    },
    {
      "rank": 65,
      "score": 2.8504963247670663,
      "candidate": "sum = 0\n    for i in lst:\n        if i % 2 == 0:\n            sum += i\n    return sum"
    },
    {
      "rank": 66,
      "score": 2.8494481522053556,
      "candidate": "ret = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 0:\n            ret += lst[i]\n    return ret\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([]) == 0"
    },
    {
      "rank": 67,
      "score": 2.8453938120743927,
      "candidate": "ret = 0\n    for i in range(len(lst)):\n        ret += lst[i] % 2\n    return ret\n\nif __name__ == '__main__':\n    for i in range(1, int(raw_input()) + 1):\n        lst = [int(j) for j in raw_input().split()]\n        print \"Case #%d: %d\" % (i, solution(lst))"
    },
    {
      "rank": 68,
      "score": 2.836168926701116,
      "candidate": "if not lst:\n        return 0\n    odd_sum = 0\n    for i in range(0, len(lst)):\n        if i % 2 == 1:\n            odd_sum += lst[i]\n    return odd_sum\n\n# print solution([1, 2, 3])\n# print solution([4, 3, 2, 1])\n# print solution([1, 1, 1, 1, 1])\n# print solution([-1, -1, -1, -1, -1])"
    },
    {
      "rank": 69,
      "score": 2.8074588597918417,
      "candidate": "if not lst:\n        return 0\n    odd_sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            odd_sum += lst[i]\n    return odd_sum\n\n\nif __name__ == '__main__':\n    assert solution([3, 3, 3, 3, 3]) == 9, 'invalid'\n    assert solution([30, 13, 24, 321]) == 0, 'invalid'\n    assert solution([5, 8, 7, 1]) == 12, 'invalid'"
    },
    {
      "rank": 70,
      "score": 2.803945923433921,
      "candidate": "return sum(x for x in lst if x % 2 == 1)\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 71,
      "score": 2.769680614520106,
      "candidate": "return sum(i for i in lst if i % 2 == 1)\n\n\ndef test_solution():\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([-1, -2, -3, -4, -5]) == -1\n    assert solution([-1, -2, -3, -4, -5]) == -1\n    assert solution([-1, -2, -3, -4, -5]) == -1\n\n\nif __name__ == '__main__':\n    test_solution()"
    },
    {
      "rank": 72,
      "score": 2.768291153593769,
      "candidate": "odd_sum = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            odd_sum += lst[i]\n    return odd_sum\n\nif __name__ == '__main__':\n    lst = [5, 8, 7, 1]\n    print solution(lst)\n    lst = [3, 3, 3, 3, 3]\n    print solution(lst)\n    lst = [30, 13, 24, 321]\n    print solution(lst)"
    },
    {
      "rank": 73,
      "score": 2.7671351232148718,
      "candidate": "ret = 0\n    for x in lst:\n        if x % 2 == 1:\n            ret += x\n    return ret\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n    assert solution([-1, 1, -2, 2]) == 2"
    },
    {
      "rank": 74,
      "score": 2.765262807032524,
      "candidate": "odd = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            odd += lst[i]\n    return odd\n\nif __name__ == '__main__':\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert solution([5, 8, 7, 1]) == 12, \"1st example\"\n    assert solution([3, 3, 3, 3, 3]) == 9, \"2nd example\"\n    assert solution([30, 13, 24, 321]) == 0, \"3rd example\"\n    assert solution([5, 8, 7, 1]) == 12, \"4th example\"\n    assert solution([5, 8, 7, 1]) == 12, \"5th example\"\n    assert solution([5, 8, 7, 1]) == 12, \"6th example\"\n    assert solution([5, 8, 7, 1]) == 12, \"7th example\"\n    assert solution([5, 8, 7, 1]) == 12, \"8th example\"\n    assert solution([5, 8, 7, 1]) == 12, \"9th example\""
    },
    {
      "rank": 75,
      "score": 2.760412881077355,
      "candidate": "result = 0\n    for i in lst:\n        if i % 2 == 0:\n            result += i\n    return result\n\n\nif __name__ == '__main__':\n    lst = [5, 8, 7, 1]\n    print solution(lst)\n    lst = [3, 3, 3, 3, 3]\n    print solution(lst)\n    lst = [30, 13, 24, 321]\n    print solution(lst)"
    },
    {
      "rank": 76,
      "score": 2.749121478207732,
      "candidate": "return sum(x for x in lst if x % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 77,
      "score": 2.7408648908631763,
      "candidate": "odds = [e for e in lst if e % 2 == 1]\n    return sum(odds)\n\nif __name__ == '__main__':\n    print solution([5, 8, 7, 1])"
    },
    {
      "rank": 78,
      "score": 2.735119898116481,
      "candidate": "odd_sum = 0\n    even_sum = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd_sum += i\n        else:\n            even_sum += i\n    return odd_sum + even_sum\n\nif __name__ == '__main__':\n    lst = [3, 3, 3, 3, 3]\n    print solution(lst)"
    },
    {
      "rank": 79,
      "score": 2.7278086377374087,
      "candidate": "return sum(i % 2 for i in lst if i % 2)\n\n\nif __name__ == '__main__':\n    print(solution([5, 8, 7, 1]))\n    print(solution([3, 3, 3, 3, 3]))\n    print(solution([30, 13, 24, 321]))"
    },
    {
      "rank": 80,
      "score": 2.6996806550405976,
      "candidate": "if len(lst) == 0:\n        return 0\n    return sum(i for i in lst if i % 2 == 1)"
    },
    {
      "rank": 81,
      "score": 2.6991466938853015,
      "candidate": "return sum(x for x in lst if x % 2 == 0)\n\nif __name__ == \"__main__\":\n    print solution([5, 8, 7, 1])\n    print solution([3, 3, 3, 3, 3])\n    print solution([30, 13, 24, 321])"
    },
    {
      "rank": 82,
      "score": 2.677440122697438,
      "candidate": "odd = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            odd += lst[i]\n    return odd\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 83,
      "score": 2.6615389998470205,
      "candidate": "odds = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            odds += lst[i]\n    return odds"
    },
    {
      "rank": 84,
      "score": 2.648973453061324,
      "candidate": "even = 0\n    odd = 0\n    for i in lst:\n        if i % 2 == 0:\n            even += i\n        else:\n            odd += i\n    return even + odd"
    },
    {
      "rank": 85,
      "score": 2.5957531985534064,
      "candidate": "odds = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            odds += lst[i]\n    return odds\n\nif __name__ == '__main__':\n    import sys\n    f = open(os.environ['OUTPUT_PATH'], 'w')\n    n = int(input())\n    lst = list(map(int, input().rstrip().split()))\n    solution(lst)\n    f.write(str(solution(lst)) + '\\n')\n    f.close()\n    sys.exit(0)"
    },
    {
      "rank": 86,
      "score": 2.580391238388681,
      "candidate": "if not lst:\n        return 0\n    odds = [e for e in lst if e % 2 == 1]\n    return sum(odds)\n\nif __name__ == '__main__':\n    assert solution([1, 2, 3]) == 6\n    assert solution([1, 2, 3, 4]) == 12\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 87,
      "score": 2.5459879622393946,
      "candidate": "odd = 0\n    for i in lst:\n        odd += i if i % 2 == 1 else 0\n    return odd\n\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 88,
      "score": 2.4711445355220496,
      "candidate": "odds = [x for x in lst if x % 2 == 1]\n    return sum(odds)\n\n\nif __name__ == '__main__':\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 89,
      "score": 2.446832512996986,
      "candidate": "return sum(e % 2 for e in lst)\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 90,
      "score": 2.4245032112888487,
      "candidate": "result = 0\n    for i in lst:\n        if i % 2 == 1:\n            result += i\n    return result"
    },
    {
      "rank": 91,
      "score": 2.4018966879596646,
      "candidate": "odd = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd += i\n    return odd\n\nif __name__ == \"__main__\":\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0"
    },
    {
      "rank": 92,
      "score": 2.389578175014489,
      "candidate": "odd_pos = 0\n    even_pos = 0\n    for i in lst:\n        if i % 2 == 1:\n            odd_pos += i\n        else:\n            even_pos += i\n    return odd_pos + even_pos"
    },
    {
      "rank": 93,
      "score": 2.3359069755507846,
      "candidate": "if not lst:\n        return 0\n    odds = [i for i in lst if i % 2 == 1]\n    evens = [i for i in lst if i % 2 == 0]\n    return sum(odds) + sum(evens)\n\nif __name__ == '__main__':\n    assert(solution([5, 8, 7, 1]) == 12)\n    assert(solution([3, 3, 3, 3, 3]) == 9)\n    assert(solution([30, 13, 24, 321]) == 0)\n    assert(solution([-1, 2, -3, 4]) == -3)\n    assert(solution([-1, -2, -3, -4]) == 0)\n    assert(solution([-1, -2, -3, -4, -5]) == -5)"
    },
    {
      "rank": 94,
      "score": 2.293848149332354,
      "candidate": "even_sum = 0\n    odd_sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            even_sum += lst[i]\n        else:\n            odd_sum += lst[i]\n    return even_sum + odd_sum"
    },
    {
      "rank": 95,
      "score": 2.260739004816286,
      "candidate": "return sum(x for x in lst if x % 2 == 0)\n\n\ndef main():\n    pass\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 96,
      "score": 2.137541083743484,
      "candidate": "odd_sum = 0\n    for i in range(len(lst)):\n        if i % 2 == 0:\n            odd_sum += lst[i]\n    return odd_sum"
    },
    {
      "rank": 97,
      "score": 2.118479922318633,
      "candidate": "return sum(i for i in lst if i % 2 == 1)"
    },
    {
      "rank": 98,
      "score": 2.043359877671101,
      "candidate": "return sum(i % 2 for i in lst if i % 2)\n\n\nif __name__ == '__main__':\n    for i in range(1, int(raw_input()) + 1):\n        lst = list(map(int, raw_input().split()))\n        print \"Case #{}: {}\".format(i, solution(lst))"
    },
    {
      "rank": 99,
      "score": 2.006215542699554,
      "candidate": "# Brute force solution\n    return sum(x for x in lst if x % 2!= 0)\n\n\ndef test_solution():\n    assert solution([5, 8, 7, 1]) == 12\n    assert solution([3, 3, 3, 3, 3]) == 9\n    assert solution([30, 13, 24, 321]) == 0\n\n\nif __name__ == '__main__':\n    test_solution()"
    },
    {
      "rank": 100,
      "score": 1.6901274479551278,
      "candidate": "odd_even_sum = 0\n    for i in range(len(lst)):\n        if lst[i] % 2 == 1:\n            odd_even_sum += lst[i]\n    return odd_even_sum"
    }
  ]
}