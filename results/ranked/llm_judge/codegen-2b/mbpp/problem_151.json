{
  "timestamp": "2025-09-14T18:29:06.649330",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "mbpp",
  "problem_number": 151,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "from __future__ import print_function\n\ndef sum_positive_integers(n):\n    return sum(i for i in range(1, n+1) if i % 2 == 0)\n\ndef main():\n    print(sum_positive_integers(10))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "# @include\ndef sum_of_n_plus_x_integers(n, x):\n    return sum(i for i in range(n, -x, -1) if i >= 0)\n# @exclude\n\n\ndef main():\n    for n in range(1, 5):\n        for x in range(1, n):\n            print(f'n = {n}, x = {x}, sum_of_n_plus_x_integers(n, x) = {sum_of_n_plus_x_integers(n, x)}')\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def sum(n):\n    s = 0\n    for i in range(n):\n        s += i\n    return s\n\n#print(sum(1))\n#print(sum(2))\n#print(sum(3))\n#print(sum(4))\n#print(sum(5))\n#print(sum(6))\n#print(sum(7))\n#print(sum(8))\n#print(sum(9))\n#print(sum(10))\n#print(sum(11))\n#print(sum(12))\n#print(sum(13))\n#print(sum(14))\n#print(sum(15))\n#print(sum(16))\n#print(sum(17))\n#print(sum(18))\n#print(sum(19))\n#print(sum(20))\n#print(sum(21))\n#print(sum(22))\n#print(sum(23))\n#print(sum(24))\n#print(sum(25))\n#print(sum(26))\n#print(sum(27))\n#print(sum(28))\n#print(sum(29))\n#print(sum(30))\n#print(sum(31))\n#print(sum(32))\n#print(sum(33))\n#print(sum(34))\n#print(sum(35))\n#print(sum(36))\n#print(sum(37))\n#print(sum(38))\n#print(sum(39))\n#print(sum(40))\n#print(sum(41))\n#print(sum(42))\n#print(sum(43))\n#print(sum(44))\n#print(sum(45))\n#print(sum(46))\n#print(sum(47))\n#print(sum(48))\n#print(sum(49))\n#print(sum(50))\n#print(sum(51))\n#print(sum(52))\n#print(sum(53))\n#print(sum(54))\n#print(sum(55))\n#print(sum(56))\n#print(sum(57))\n#print(sum(58))\n#print(sum(59))\n#print(sum(60))\n#print"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def sum_of_positive_integers(n):\n    return sum(i for i in range(1, n+1) if i > 0)\n\nif __name__ == '__main__':\n    print(sum_of_positive_integers(3))\n    print(sum_of_positive_integers(4))\n    print(sum_of_positive_integers(5))\n    print(sum_of_positive_integers(6))\n    print(sum_of_positive_integers(7))\n    print(sum_of_positive_integers(8))\n    print(sum_of_positive_integers(9))\n    print(sum_of_positive_integers(10))\n    print(sum_of_positive_integers(11))\n    print(sum_of_positive_integers(12))\n    print(sum_of_positive_integers(13))\n    print(sum_of_positive_integers(14))\n    print(sum_of_positive_integers(15))\n    print(sum_of_positive_integers(16))\n    print(sum_of_positive_integers(17))\n    print(sum_of_positive_integers(18))\n    print(sum_of_positive_integers(19))\n    print(sum_of_positive_integers(20))\n    print(sum_of_positive_integers(21))\n    print(sum_of_positive_integers(22))\n    print(sum_of_positive_integers(23))\n    print(sum_of_positive_integers(24))\n    print(sum_of_positive_integers(25))\n    print(sum_of_positive_integers(26))\n    print(sum_of_positive_integers(27))\n    print(sum_of_positive_integers(28))\n    print(sum_of_positive_integers(29))\n    print(sum_of_positive_integers(30))\n    print(sum_of_positive_integers(31))\n    print(sum_of_positive_integers(32))\n    print(sum_of_positive_integers(33))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "# https://www.hackerrank.com/challenges/sum-of-positive-integers/problem\n\ndef sum_positive_integers(n, x):\n    \"\"\"\n    :type n: int\n    :type x: int\n    :rtype: int\n    \"\"\"\n    return n * (n + 2) * (n + 3) + x * (n + 1) * (n + 2)\n\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    x = int(input())\n    print(sum_positive_integers(n, x))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "import time\nstart = time.time()\n\ndef get_sum(n, x):\n    return sum(i for i in range(1, n+1) if i >= x)\n\n\ndef main():\n    print(get_sum(9, 2))\n    print(get_sum(10, 3))\n    print(get_sum(11, 4))\n    print(get_sum(12, 5))\n    print(get_sum(13, 6))\n    print(get_sum(14, 7))\n    print(get_sum(15, 8))\n    print(get_sum(16, 9))\n    print(get_sum(17, 10))\n    print(get_sum(18, 11))\n    print(get_sum(19, 12))\n    print(get_sum(20, 13))\n    print(get_sum(21, 14))\n    print(get_sum(22, 15))\n    print(get_sum(23, 16))\n    print(get_sum(24, 17))\n    print(get_sum(25, 18))\n    print(get_sum(26, 19))\n    print(get_sum(27, 20))\n    print(get_sum(28, 21))\n    print(get_sum(29, 22))\n    print(get_sum(30, 23))\n    print(get_sum(31, 24))\n    print(get_sum(32, 25))\n    print(get_sum(33, 26))\n    print(get_sum(34, 27))\n    print(get_sum(35, 28))\n    print(get_sum(36, 29))\n    print(get_sum(37, 30))\n    print(get_sum(38, 31))\n    print(get_sum(39, 32))\n    print(get_sum(40, 33))\n    print(get_sum(41, 34))\n    print(get_sum(42, 35))\n    print(get_sum(43, 36))\n    print(get_sum(44, 37))\n    print(get_sum(45, 38))\n    print(get_sum(46, 39))\n    print(get_sum("
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "def sum_of_positive_integers(n):\n    return sum(range(1, n + 1))\n\n# Time:  O(n)\n# Space: O(n)\n# DP\n# 8ms\nclass Solution(object):\n    def getSum(self, n, x):\n        \"\"\"\n        :type n: int\n        :type x: int\n        :rtype: int\n        \"\"\"\n        if n <= 0:\n            return 0\n        # n + n - 2 + n - 4...\n        # n + n - 2 + n - 4 + n - 6...\n        return sum_of_positive_integers(n + n - 2 + n - 4 + n - 6 + x)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def sum_of_n(n):\n    s = 0\n    while n > 0:\n        s += n\n        n -= 2\n    return s\n\nif __name__ == \"__main__\":\n    print sum_of_n(2)\n    print sum_of_n(5)\n    print sum_of_n(9)\n    print sum_of_n(11)\n    print sum_of_n(12)\n    print sum_of_n(13)\n    print sum_of_n(14)\n    print sum_of_n(15)\n    print sum_of_n(16)\n    print sum_of_n(17)\n    print sum_of_n(18)\n    print sum_of_n(19)\n    print sum_of_n(20)\n    print sum_of_n(21)\n    print sum_of_n(22)\n    print sum_of_n(23)\n    print sum_of_n(24)\n    print sum_of_n(25)\n    print sum_of_n(26)\n    print sum_of_n(27)\n    print sum_of_n(28)\n    print sum_of_n(29)\n    print sum_of_n(30)\n    print sum_of_n(31)\n    print sum_of_n(32)\n    print sum_of_n(33)\n    print sum_of_n(34)\n    print sum_of_n(35)\n    print sum_of_n(36)\n    print sum_of_n(37)\n    print sum_of_n(38)\n    print sum_of_n(39)\n    print sum_of_n(40)\n    print sum_of_n(41)\n    print sum_of_n(42)\n    print sum_of_n(43)\n    print sum_of_n(44)\n    print sum_of_n(45)\n    print sum_of_n(46)\n    print sum_of_n(47)\n    print sum_of_n(48)\n    print sum_of_n(49)"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "def sum_from_n(n):\n\ts = 0\n\twhile n > 0:\n\t\ts += n\n\t\tn -= 2\n\treturn s\n\nprint sum_from_n(100)"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "import unittest\n\ndef sum_of_positive_integers(n):\n    result = 0\n    for i in range(n):\n        result += i\n    return result\n\nclass TestSumOfPositiveIntegers(unittest.TestCase):\n\n    def test_sum_of_positive_integers(self):\n        self.assertEqual(sum_of_positive_integers(0), 0)\n        self.assertEqual(sum_of_positive_integers(1), 1)\n        self.assertEqual(sum_of_positive_integers(2), 3)\n        self.assertEqual(sum_of_positive_integers(3), 6)\n        self.assertEqual(sum_of_positive_integers(4), 10)\n        self.assertEqual(sum_of_positive_integers(5), 15)\n        self.assertEqual(sum_of_positive_integers(6), 21)\n        self.assertEqual(sum_of_positive_integers(7), 28)\n        self.assertEqual(sum_of_positive_integers(8), 36)\n        self.assertEqual(sum_of_positive_integers(9), 45)\n        self.assertEqual(sum_of_positive_integers(10), 55)\n        self.assertEqual(sum_of_positive_integers(11), 66)\n        self.assertEqual(sum_of_positive_integers(12), 78)\n        self.assertEqual(sum_of_positive_integers(13), 91)\n        self.assertEqual(sum_of_positive_integers(14), 106)\n        self.assertEqual(sum_of_positive_integers(15), 121)\n        self.assertEqual(sum_of_positive_integers(16), 136)\n        self.assertEqual(sum_of_positive_integers(17), 151)\n        self.assertEqual(sum_of_positive_integers(18), 166)\n        self.assertEqual(sum_of_positive_integers(19), 181)\n        self.assertEqual(sum_of_positive_integers"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def calculate(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: int\n        \"\"\"\n        if x == 0:\n            return 0\n\n        return sum(x+i for i in xrange(x+1))\n\ns = Solution()\nprint s.calculate(5)\nprint s.calculate(6)\nprint s.calculate(7)\nprint s.calculate(8)\nprint s.calculate(9)"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def sum_of_n_plus_n_minus_2_plus_n_minus_4_up_to_n(n):\n    sum = 0\n    for i in range(1, n):\n        sum += i\n    for i in range(2, n):\n        sum += n - i\n    for i in range(3, n):\n        sum += i - 2\n    for i in range(4, n):\n        sum += i - 4\n    return sum\n\nprint sum_of_n_plus_n_minus_2_plus_n_minus_4_up_to_n(1000)"
    },
    {
      "rank": 13,
      "score": 9.984157773252326,
      "candidate": "def sum_of_the_positive_integers(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i\n    return s\n\nif __name__ == '__main__':\n    print(sum_of_the_positive_integers(4))\n    print(sum_of_the_positive_integers(5))\n    print(sum_of_the_positive_integers(6))\n    print(sum_of_the_positive_integers(7))\n    print(sum_of_the_positive_integers(8))\n    print(sum_of_the_positive_integers(9))\n    print(sum_of_the_positive_integers(10))\n    print(sum_of_the_positive_integers(11))\n    print(sum_of_the_positive_integers(12))\n    print(sum_of_the_positive_integers(13))\n    print(sum_of_the_positive_integers(14))\n    print(sum_of_the_positive_integers(15))\n    print(sum_of_the_positive_integers(16))\n    print(sum_of_the_positive_integers(17))\n    print(sum_of_the_positive_integers(18))\n    print(sum_of_the_positive_integers(19))\n    print(sum_of_the_positive_integers(20))\n    print(sum_of_the_positive_integers(21))\n    print(sum_of_the_positive_integers(22))\n    print(sum_of_the_positive_integers(23))\n    print(sum_of_the_positive_integers(24))\n    print(sum_of_the_positive_integers(25))\n    print(sum_of_the_positive_integers(26))\n    print(sum_of_the_positive_integers(27))\n    print(sum_of_the_positive_integers(28))\n    print(sum_of_the_positive_integers(29))\n    print(sum_of_the_positive_integers(30"
    },
    {
      "rank": 14,
      "score": 9.95915502513396,
      "candidate": "def sum_to_x(n, x):\n    if n == x:\n        return n\n    if n < x:\n        return sum_to_x(n, x)\n    if n == x:\n        return n\n    return sum_to_x(n - 2, x) + sum_to_x(n - 4, x) + sum_to_x(n - 6, x) + sum_to_x(n - 8, x) + sum_to_x(n - 10, x) + sum_to_x(n - 12, x) + sum_to_x(n - 14, x) + sum_to_x(n - 16, x) + sum_to_x(n - 18, x) + sum_to_x(n - 20, x) + sum_to_x(n - 22, x) + sum_to_x(n - 24, x) + sum_to_x(n - 26, x) + sum_to_x(n - 28, x) + sum_to_x(n - 30, x) + sum_to_x(n - 32, x) + sum_to_x(n - 34, x) + sum_to_x(n - 36, x) + sum_to_x(n - 38, x) + sum_to_x(n - 40, x) + sum_to_x(n - 42, x) + sum_to_x(n - 44, x) + sum_to_x(n - 46, x) + sum_to_x(n - 48, x) + sum_to_x(n - 50, x) + sum_to_x(n - 52, x) + sum_to_x(n - 54, x) + sum_to_x(n - 56, x) + sum_to_x(n - 58, x) + sum_to_x(n - 60, x) + sum_to_x(n - 62, x) + sum_to_x(n - 64, x) + sum_to_x(n - 66, x) + sum_to_x(n - 68, x) + sum_to_x(n - 70, x) +"
    },
    {
      "rank": 15,
      "score": 9.913736206310926,
      "candidate": "def sum_of_the_positive_integers_until_n_minus_x(x):\n    n = 0\n    s = 0\n    while n < x:\n        s += n\n        n += 2\n    return s\n\nprint(sum_of_the_positive_integers_until_n_minus_x(5))\n\n\"\"\"\n# https://www.hackerrank.com/challenges/sum-of-the-positive-integers-until-n-minus-x\n#\n# Write a function that returns the sum of the positive integers from 1 to n.\n#\n# Example:\n#\n# Input:\n# n = 5\n#\n# Output:\n# 7\n#\n# Explanation:\n# 1 + 2 + 3 + 4 + 5 = 7\n# 1 + 2 + 3 + 4 + 6 = 11\n# 1 + 2 + 3 + 5 + 6 = 12\n# 1 + 2 + 4 + 5 + 6 = 13\n# 1 + 2 + 4 + 6 + 7 = 14\n# 1 + 3 + 5 + 6 + 7 = 15\n# 1 + 3 + 5 + 7 + 8 = 16\n# 1 + 4 + 5 + 7 + 8 = 17\n# 1 + 4 + 6 + 7 + 8 = 18\n# 1 + 5 + 6 + 7 + 8 = 19\n# 1 + 6 + 7 + 8 + 9 = 20\n# 1 + 6 + 7 + 9 + 10 = 21\n# 1 + 7 + 8 + 9 + 10 = 22\n# 1 + 7 + 9 + 10 + 11 = 23\n# 1 + 8 + 9 + 10 + 11 = 24\n# 1 + 9 + 10 + 11 + 12 = 25\n# 1 + 9 + 10 + 12 + 13 = 26\n# 1 + 10 + 11 + 12 + 13 = 27\n# 1 + 10 + 12 + 13 + 14 = 28\n# 1 + 11 + 12 + 13 + 14 = 29\n# 1 + 11 + 13 + 14 + 15 = 30\n# 1 + 12 + 13 + 14 + 15 = 31\n# 1 + 13 + 14 + 15 + 16 = 32\n# 1 + 13 + 15 + 16 + 17 = 33\n# 1 + 14 + 15 + 16 + 17 = 34\n# 1 + 15 + 16 + 17 + 18 = 35\n# 1 + 15 +"
    },
    {
      "rank": 16,
      "score": 9.889613450411401,
      "candidate": "def sum_of_positive_integers(n):\n    if n > 0:\n        return sum(range(1, n+1))\n    return 0\n\nif __name__ == \"__main__\":\n    print sum_of_positive_integers(1)\n    print sum_of_positive_integers(2)\n    print sum_of_positive_integers(3)\n    print sum_of_positive_integers(4)\n    print sum_of_positive_integers(5)\n    print sum_of_positive_integers(6)\n    print sum_of_positive_integers(7)\n    print sum_of_positive_integers(8)\n    print sum_of_positive_integers(9)"
    },
    {
      "rank": 17,
      "score": 9.876296743566986,
      "candidate": "def sum_of_positive_integers(n):\n    i = 2\n    while i < n:\n        i += 1\n        if i % 2 == 0:\n            n = n - i\n        else:\n            n = n + i\n    return n\n\nif __name__ == '__main__':\n    print sum_of_positive_integers(100)"
    },
    {
      "rank": 18,
      "score": 9.867859488217864,
      "candidate": "# def sum_of_numbers(n, x):\n#     if x == 0:\n#         return 0\n#     sum = 0\n#     for i in range(n, -x, -1):\n#         sum += i\n#     return sum\n\ndef sum_of_numbers(n, x):\n    if x == 0:\n        return 0\n    if x == 1:\n        return n\n    if n == 1:\n        return 1\n    sum = 0\n    for i in range(n, -x, -1):\n        sum += i\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_numbers(2, 0)\n    print sum_of_numbers(3, 0)\n    print sum_of_numbers(4, 0)\n    print sum_of_numbers(5, 0)\n    print sum_of_numbers(6, 0)\n    print sum_of_numbers(7, 0)\n    print sum_of_numbers(8, 0)\n    print sum_of_numbers(9, 0)\n    print sum_of_numbers(10, 0)\n    print sum_of_numbers(11, 0)\n    print sum_of_numbers(12, 0)\n    print sum_of_numbers(13, 0)\n    print sum_of_numbers(14, 0)\n    print sum_of_numbers(15, 0)\n    print sum_of_numbers(16, 0)\n    print sum_of_numbers(17, 0)\n    print sum_of_numbers(18, 0)\n    print sum_of_numbers(19, 0)\n    print sum_of_numbers(20, 0)\n    print sum_of_numbers(21, 0)\n    print sum_of_numbers(22, 0)\n    print sum_of_numbers(23, 0)\n    print sum_of_numbers(24, 0)\n    print sum_of_numbers(25, 0)\n    print sum_of_numbers(26, 0)\n    print sum_of_numbers(27, 0)"
    },
    {
      "rank": 19,
      "score": 9.841634274153163,
      "candidate": "class Solution:\n    # @param {int} n\n    # @return {int}\n    def getSum(self, n):\n        if n < 0:\n            return 0\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        n -= 2\n        ans = 1\n        while n > 0:\n            ans += n\n            n -= 2\n        return ans\n\n    # @param {int} n\n    # @return {int}\n    def getSum2(self, n):\n        if n < 0:\n            return 0\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        n -= 2\n        ans = 1\n        while n > 0:\n            ans += n\n            n -= 2\n        return ans\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.getSum(10)\n    print s.getSum2(10)"
    },
    {
      "rank": 20,
      "score": 9.822131407363498,
      "candidate": "class Solution:\n    # @return an integer\n    def sumNumbers(self, n):\n        result = 0\n        x = 1\n        while x <= n:\n            result += x\n            x += 2\n        return result\n\nif __name__ == \"__main__\":\n    solution = Solution()\n    print solution.sumNumbers(3)\n    print solution.sumNumbers(4)\n    print solution.sumNumbers(5)\n    print solution.sumNumbers(6)\n    print solution.sumNumbers(7)\n    print solution.sumNumbers(8)\n    print solution.sumNumbers(9)\n    print solution.sumNumbers(10)\n    print solution.sumNumbers(11)\n    print solution.sumNumbers(12)\n    print solution.sumNumbers(13)\n    print solution.sumNumbers(14)\n    print solution.sumNumbers(15)\n    print solution.sumNumbers(16)\n    print solution.sumNumbers(17)\n    print solution.sumNumbers(18)\n    print solution.sumNumbers(19)\n    print solution.sumNumbers(20)\n    print solution.sumNumbers(21)\n    print solution.sumNumbers(22)\n    print solution.sumNumbers(23)\n    print solution.sumNumbers(24)\n    print solution.sumNumbers(25)\n    print solution.sumNumbers(26)\n    print solution.sumNumbers(27)\n    print solution.sumNumbers(28)\n    print solution.sumNumbers(29)\n    print solution.sumNumbers(30)\n    print solution.sumNumbers(31)\n    print solution.sumNumbers(32)\n    print solution.sumNumbers(33)\n    print solution.sumNumbers(34)\n    print solution.sumNumbers(35)\n    print solution.sumNumbers(36)\n    print solution.sumNumbers(37)\n    print solution.sumNumbers(38)\n    print solution.sumNumbers(39)\n    print solution.sumNumbers(40)\n    print solution.sumNumbers(41)\n    print solution.sumNumbers(42)\n    print solution.sumNumbers(43)\n    print solution.sumNumbers(44)\n    print solution.sumNumbers(45)\n    print solution.sumNumbers(46)"
    },
    {
      "rank": 21,
      "score": 9.56887257274645,
      "candidate": "class Solution(object):\n    def calculate(self, n, x):\n        \"\"\"\n        :type n: int\n        :type x: int\n        :rtype: int\n        \"\"\"\n        sum = 0\n        while x > 0:\n            sum += n + n - 2 * n - 4 * n\n            n += 1\n            x -= 1\n        return sum"
    },
    {
      "rank": 22,
      "score": 9.423656077100256,
      "candidate": "class Solution(object):\n    def getSum(self, n, x):\n        \"\"\"\n        :type n: int\n        :type x: int\n        :rtype: int\n        \"\"\"\n        ans = 0\n        while n >= 0:\n            ans += n\n            n -= 2\n            n -= 4\n        return ans"
    },
    {
      "rank": 23,
      "score": 9.14831015455784,
      "candidate": "def sum_from_n(n):\n    sum = 0\n    for i in range(n, 0, -1):\n        sum += i\n    return sum\n\nif __name__ == \"__main__\":\n    print sum_from_n(10)"
    },
    {
      "rank": 24,
      "score": 9.039009033653768,
      "candidate": "# http://www.hackerearth.com/practice/algorithms/data-structures/basic-and-advanced/trees/practice-problems/algorithm/sum-of-positive-integers/\n\ndef sum_of_positive_integers(n):\n    s = 0\n    while n > 0:\n        s += n\n        n -= 2\n    return s\n\nif __name__ == \"__main__\":\n    print sum_of_positive_integers(100)"
    },
    {
      "rank": 25,
      "score": 9.028898339701513,
      "candidate": "def sum_positive_integers(n):\n    res = 0\n    for i in range(1,n):\n        res = res + i\n    for i in range(2,n):\n        res = res + (n - i)\n    for i in range(3,n):\n        res = res + (n - i)\n    return res\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(sum_positive_integers(n))"
    },
    {
      "rank": 26,
      "score": 8.959815655301357,
      "candidate": "def sum_from_n(n):\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return n + sum_from_n(n-2) + sum_from_n(n-4)\n\ndef main():\n    print(sum_from_n(10))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 27,
      "score": 8.815151592750942,
      "candidate": "def sum_of_n_plus_x(n):\n\t# initialize the sum\n\tsum = 0\n\t# calculate the sum\n\tfor x in range(1, n):\n\t\tsum += x\n\t# calculate the sum of the positive integers\n\tfor x in range(1, n-1):\n\t\tsum += (n-x)\n\treturn sum\n\n# test case\nprint sum_of_n_plus_x(10)\nprint sum_of_n_plus_x(9)\nprint sum_of_n_plus_x(8)\nprint sum_of_n_plus_x(7)\nprint sum_of_n_plus_x(6)\nprint sum_of_n_plus_x(5)\nprint sum_of_n_plus_x(4)\nprint sum_of_n_plus_x(3)\nprint sum_of_n_plus_x(2)\nprint sum_of_n_plus_x(1)\nprint sum_of_n_plus_x(0)"
    },
    {
      "rank": 28,
      "score": 8.812529540846942,
      "candidate": "def sum_of_n_numbers(n):\n    sum = 0\n    for i in range(n, 0, -1):\n        if i % 2 == 0:\n            sum += i\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_n_numbers(5)"
    },
    {
      "rank": 29,
      "score": 8.792297249171233,
      "candidate": "def sum_positive_integers(n, x):\n    return sum(i for i in range(x+1, n+1) if i >= 0)"
    },
    {
      "rank": 30,
      "score": 8.75320425695424,
      "candidate": "from functools import reduce\n\ndef sum_of_n_plus_x(n, x):\n    return reduce(lambda accum, x: accum + x, range(1, x+1), 0) + n\n\nif __name__ == \"__main__\":\n    print sum_of_n_plus_x(5, 2)"
    },
    {
      "rank": 31,
      "score": 8.73606964152255,
      "candidate": "def positive_integers(n):\n    sum = 0\n    for i in xrange(n, 0, -1):\n        sum += i\n    return sum\n\nif __name__ == '__main__':\n    print(positive_integers(10))"
    },
    {
      "rank": 32,
      "score": 8.725061744842701,
      "candidate": "def sum_of_n_plus(n):\n    sum = 0\n    for i in range(n+1):\n        sum += i\n    return sum\n\nprint sum_of_n_plus(3)"
    },
    {
      "rank": 33,
      "score": 8.690566088922708,
      "candidate": "# https://www.hackerrank.com/challenges/sum-of-primes/problem\n\ndef sum_of_primes(n):\n    # sum_of_primes = sum(sum(prime(i)) for i in range(1, n+1))\n    sum_of_primes = 0\n    for i in range(1, n+1):\n        if is_prime(i):\n            sum_of_primes += i\n    return sum_of_primes\n\ndef is_prime(n):\n    # return n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0\n    if n % 2 == 0 or n % 3 == 0 or n % 5 == 0 or n % 7 == 0 or n % 11 == 0 or n % 13 == 0:\n        return False\n    else:\n        return True\n\nif __name__ == '__main__':\n    n = int(input())\n    print(sum_of_primes(n))"
    },
    {
      "rank": 34,
      "score": 8.676881434203974,
      "candidate": "def sum_of_positive_integers(n):\n    return sum(i for i in range(1,n+1) if i > 0)\n\nif __name__ == \"__main__\":\n    print sum_of_positive_integers(100)"
    },
    {
      "rank": 35,
      "score": 8.5872096914158,
      "candidate": "class Solution(object):\n    def sumNumbers(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 0\n        for i in xrange(1, n+1):\n            res += i\n        return res"
    },
    {
      "rank": 36,
      "score": 8.581866133962546,
      "candidate": "class Solution:\n    # @param {integer} n\n    # @param {integer} x\n    # @return {integer}\n    def getSum(self, n, x):\n        sum = 0\n        while x > 0:\n            if x % 2 == 0:\n                sum += x\n            x = x // 2\n        while n > 0:\n            if n % 2 == 0:\n                sum += n\n            n = n // 2\n        return sum\n\ns = Solution()\nprint(s.getSum(20, 10))"
    },
    {
      "rank": 37,
      "score": 8.581774774537642,
      "candidate": "import time\nstart_time = time.time()\n\ndef sum_n_plus_minus(n):\n    sum = 0\n    for x in range(2, n+1):\n        sum += x\n    return sum\n\nprint(sum_n_plus_minus(100))\nprint(time.time() - start_time)"
    },
    {
      "rank": 38,
      "score": 8.57501939448046,
      "candidate": "def sum_n_until_x(x):\n    n = 1\n    sum = 0\n    while n <= x:\n        sum += n\n        n += 2\n    return sum\n\nprint sum_n_until_x(6)"
    },
    {
      "rank": 39,
      "score": 8.5703245483778,
      "candidate": "# A simple solution\ndef sum_n_p_n_p_n_p_n_p_n(n):\n    return (n * (n + 1) * (2 * n + 1) * (3 * n + 1) * (4 * n + 1)) / 6\n\ndef sum_n_p_n_p_n_p_n_p_n(n):\n    return (n * (n + 1) * (2 * n + 1) * (3 * n + 1) * (4 * n + 1)) / 6\n\nif __name__ == \"__main__\":\n    print sum_n_p_n_p_n_p_n_p_n(5)\n    print sum_n_p_n_p_n_p_n(10)\n    print sum_n_p_n_p_n_p_n_p_n(15)"
    },
    {
      "rank": 40,
      "score": 8.56385843083065,
      "candidate": "# https://discuss.leetcode.com/topic/48502/java-solution-o-n-sum-of-all-positive-integers-from-1-to-n-with-given-x-range\n\nclass Solution(object):\n    def getSum(self, n, x):\n        \"\"\"\n        :type n: int\n        :type x: int\n        :rtype: int\n        \"\"\"\n        return self.getSum(n, x, 0)\n\n    def getSum(self, n, x, sum):\n        if sum == n:\n            return sum\n        if sum > n:\n            return 0\n        if sum == 0:\n            return 1\n        if sum > x:\n            return self.getSum(n, x, sum-1)\n        return self.getSum(n, x, sum) + self.getSum(n-x, x, sum)"
    },
    {
      "rank": 41,
      "score": 8.536390107639537,
      "candidate": "import math\n\ndef sum_to(x):\n    s = 0\n    for i in range(x, 0, -1):\n        s += i\n    return s\n\nif __name__ == '__main__':\n    print sum_to(100)"
    },
    {
      "rank": 42,
      "score": 8.470105162225856,
      "candidate": "class Solution:\n    # @param {integer} x\n    # @return {integer}\n    def getSum(self, x):\n        if x <= 0:\n            return 0\n        else:\n            return sum([i for i in range(1, x+1)])"
    },
    {
      "rank": 43,
      "score": 8.44638755796858,
      "candidate": "def sum_positive(n):\n    s = 0\n    for i in range(1, n):\n        s += i\n    return s\n\ndef sum_negative(n):\n    s = 0\n    for i in range(1, n):\n        s += i\n    return s - n\n\n\nif __name__ == '__main__':\n    for i in range(1, 100):\n        s = sum_positive(i)\n        s_neg = sum_negative(i)\n        if s == s_neg:\n            print(\"Sum: %d\" % s)\n        else:\n            print(\"Sum: %d\" % s)"
    },
    {
      "rank": 44,
      "score": 8.430830549582662,
      "candidate": "#!/usr/bin/python\n\ndef sum_of_numbers_with_odd_number_of_term(n):\n    if n <= 0:\n        return 0\n    \n    return sum_of_numbers_with_odd_number_of_term(n-2) + sum_of_numbers_with_odd_number_of_term(n-4) + sum_of_numbers_with_odd_number_of_term(n-6) + sum_of_numbers_with_odd_number_of_term(n-8) + sum_of_numbers_with_odd_number_of_term(n-10) + sum_of_numbers_with_odd_number_of_term(n-12) + sum_of_numbers_with_odd_number_of_term(n-14) + sum_of_numbers_with_odd_number_of_term(n-16) + sum_of_numbers_with_odd_number_of_term(n-18) + sum_of_numbers_with_odd_number_of_term(n-20) + sum_of_numbers_with_odd_number_of_term(n-22) + sum_of_numbers_with_odd_number_of_term(n-24) + sum_of_numbers_with_odd_number_of_term(n-26) + sum_of_numbers_with_odd_number_of_term(n-28) + sum_of_numbers_with_odd_number_of_term(n-30) + sum_of_numbers_with_odd_number_of_term(n-32) + sum_of_numbers_with_odd_number_of_term(n-34) + sum_of_numbers_with_odd_number_of_term(n-36) + sum_of_numbers_with_odd_number_of_term(n-38) + sum_of_numbers_with_odd_number_of_term(n-40) + sum_of_numbers_with_odd_number_of_term(n-42) + sum_of_n"
    },
    {
      "rank": 45,
      "score": 8.391904009999395,
      "candidate": "def sum_positive_integers_to_x(n, x):\n    return sum(i for i in range(n+x) if i >= 0)"
    },
    {
      "rank": 46,
      "score": 8.358649450259561,
      "candidate": "from collections import Counter\n\ndef sum_of_numbers_until_x(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    total = 0\n    for i in range(n, 0, -1):\n        total += i\n    return total\n\nif __name__ == '__main__':\n    print(sum_of_numbers_until_x(30))\n    print(sum_of_numbers_until_x(3))\n    print(sum_of_numbers_until_x(2))\n    print(sum_of_numbers_until_x(1))\n    print(sum_of_numbers_until_x(0))"
    },
    {
      "rank": 47,
      "score": 8.355472400803755,
      "candidate": "def sum_of_n_plus_x(x):\n    sum = 0\n    for i in range(1, x):\n        sum += i\n    for i in range(2, x):\n        sum += i\n        for j in range(i, x):\n            sum += j\n    return sum\n\nprint sum_of_n_plus_x(10)"
    },
    {
      "rank": 48,
      "score": 8.330025040120514,
      "candidate": "class Solution(object):\n    def getSum(self, x):\n        \"\"\"\n        :type x: int\n        :rtype: int\n        \"\"\"\n        if x < 0:\n            return 0\n        ans = 0\n        while x > 0:\n            ans += x\n            x -= 1\n        return ans\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.getSum(0))\n    print(s.getSum(1))\n    print(s.getSum(2))\n    print(s.getSum(3))\n    print(s.getSum(4))\n    print(s.getSum(5))\n    print(s.getSum(6))\n    print(s.getSum(7))\n    print(s.getSum(8))\n    print(s.getSum(9))\n    print(s.getSum(10))"
    },
    {
      "rank": 49,
      "score": 8.298113177886245,
      "candidate": "def sum_of_n_plus_x(n, x):\n    s = 0\n    while n >= 0:\n        s += n\n        n -= x\n    return s"
    },
    {
      "rank": 50,
      "score": 8.266044177789162,
      "candidate": "def sum_positive_integers_recursive(n, x):\n    if n == 0:\n        return 0\n    else:\n        return sum_positive_integers_recursive(n-1, x) + sum_positive_integers_recursive(n-2, x)\n\ndef sum_positive_integers_iterative(n, x):\n    res = 0\n    for i in range(0, n):\n        res += i\n    return res\n\nif __name__ == \"__main__\":\n    #print sum_positive_integers_recursive(1, 0)\n    #print sum_positive_integers_recursive(2, 1)\n    print sum_positive_integers_iterative(1, 0)"
    },
    {
      "rank": 51,
      "score": 8.247501761500459,
      "candidate": "def sum_of_the_positive_integers_until_n(n):\n    # write your code here\n    sum = 0\n    while n > 0:\n        sum += n\n        n -= 2\n    return sum\n\nif __name__ == '__main__':\n    print(sum_of_the_positive_integers_until_n(100))"
    },
    {
      "rank": 52,
      "score": 8.215795931797274,
      "candidate": "# https://www.hackerrank.com/challenges/sum-of-positive-integers/problem\n\ndef sum_of_positive_integers(n):\n    sum = 0\n    for x in range(n, 0, -1):\n        sum += x\n    return sum\n\nif __name__ == '__main__':\n    n = int(input())\n    print(sum_of_positive_integers(n))"
    },
    {
      "rank": 53,
      "score": 8.007066885023969,
      "candidate": "class Solution(object):\n    def sumNumbers(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n == 0:\n            return 0\n        x = 1\n        y = 1\n        for i in range(2, n + 1):\n            x = x * i\n        for i in range(2, n + 1):\n            y = y * i\n        return x + y"
    },
    {
      "rank": 54,
      "score": 7.980523857455456,
      "candidate": "# https://www.hackerearth.com/practice/algorithms/searching/binary-search-algorithm/practice-problems/algorithm/python-binary-search-algorithm/\n# https://www.youtube.com/watch?v=G-v1_J8kx0I&t=2m16s\ndef binarySearch(n, x):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 3\n    elif n == 4:\n        return 4\n    else:\n        if x > n - 1:\n            return 0\n        if x < 1:\n            return 0\n        return binarySearch(n-2, x-1) + binarySearch(n-4, x-2)\n\ndef main():\n    print(binarySearch(10, 0))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 55,
      "score": 7.939733745863041,
      "candidate": "def sum_of_all_positive_integers(n, x):\n    s = 0\n    for i in range(n-x+1):\n        s += i\n    return s\n\nprint sum_of_all_positive_integers(10, 0)"
    },
    {
      "rank": 56,
      "score": 7.907769037937034,
      "candidate": "def sum_of_the_positive_integers(n, x):\n    sum = 0\n    while n > 0:\n        sum += n\n        n -= 1\n        if n < x:\n            break\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_the_positive_integers(100, 3)"
    },
    {
      "rank": 57,
      "score": 7.88830876415424,
      "candidate": "# https://discuss.leetcode.com/topic/929/short-java-solution-with-explanation\n\nclass Solution(object):\n    def getSum(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        if n <= 0:\n            return 0\n        result = 0\n        for i in range(1, n+1):\n            result += i\n        return result\n\nif __name__ == '__main__':\n    solution = Solution()\n    print solution.getSum(3)\n    print solution.getSum(4)\n    print solution.getSum(5)"
    },
    {
      "rank": 58,
      "score": 7.788975668089492,
      "candidate": "def sum_from_x(x):\n    sum = 0\n    for i in range(x, 0, -1):\n        sum += i\n    return sum\n\nif __name__ == '__main__':\n    print(sum_from_x(5))"
    },
    {
      "rank": 59,
      "score": 7.774489185406606,
      "candidate": "# https://www.hackerrank.com/challenges/counting-numbers/problem\n\ndef sum_of_numbers(n):\n    return sum(i for i in range(1, n+1) if i % 2 == 0)\n\ndef sum_of_numbers_2(n):\n    return sum(i for i in range(1, n+1) if i % 2 == 0) + sum(i for i in range(2, n+1) if i % 2 == 0)\n\ndef sum_of_numbers_3(n):\n    return sum(i for i in range(1, n+1) if i % 2 == 0) + sum(i for i in range(3, n+1) if i % 2 == 0) + sum(i for i in range(4, n+1) if i % 2 == 0)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(sum_of_numbers(n))\n    print(sum_of_numbers_2(n))\n    print(sum_of_numbers_3(n))"
    },
    {
      "rank": 60,
      "score": 7.689168256896106,
      "candidate": "def sum_of_n_plus_x_until_n_minus_x(x):\n    if x == 0:\n        return 1\n    return sum_of_n_plus_x_until_n_minus_x(x - 1) + sum_of_n_plus_x_until_n_minus_x(x - 2) + sum_of_n_plus_x_until_n_minus_x(x - 3)\n\nprint(sum_of_n_plus_x_until_n_minus_x(0))\n\n# Output:\n# 1"
    },
    {
      "rank": 61,
      "score": 3.6092119425632103,
      "candidate": "def get_sum(n, x):\n    return ((n-1)**2) + ((n-2)**2) + ((n-4)**2) + ((n-5)**2) + ((n-6)**2) + ((n-7)**2) + ((n-8)**2)\n\nif __name__ == \"__main__\":\n    print get_sum(9, 3)"
    },
    {
      "rank": 62,
      "score": 3.5911576178966067,
      "candidate": "def get_sum_until(n, x):\n    if x <= 0:\n        return 0\n    return sum(get_sum_until(n, x-1)) + n\n\ndef test_get_sum_until():\n    assert get_sum_until(10, 0) == 10\n    assert get_sum_until(20, 0) == 20\n    assert get_sum_until(30, 0) == 30\n    assert get_sum_until(40, 0) == 40\n    assert get_sum_until(50, 0) == 50\n    assert get_sum_until(60, 0) == 60\n    assert get_sum_until(70, 0) == 70\n    assert get_sum_until(80, 0) == 80\n    assert get_sum_until(90, 0) == 90\n    assert get_sum_until(100, 0) == 100\n    assert get_sum_until(120, 0) == 120\n    assert get_sum_until(130, 0) == 130\n    assert get_sum_until(140, 0) == 140\n    assert get_sum_until(150, 0) == 150\n    assert get_sum_until(160, 0) == 160\n    assert get_sum_until(170, 0) == 170\n    assert get_sum_until(180, 0) == 180\n    assert get_sum_until(190, 0) == 190\n    assert get_sum_until(200, 0) == 200\n    assert get_sum_until(220, 0) == 220\n    assert get_sum_until(230, 0) == 230\n    assert get_sum_until(240, 0) == 240\n    assert get_sum_until(250, 0) == 250\n    assert get_sum_until(260, 0) == 260\n    assert get_sum_until(270, 0) == 270\n    assert get_sum_until(280, 0) == 280\n    assert get_sum_until(290, 0) == 290\n    assert get_sum_until(300, 0) == 300\n    assert get_sum_until(310, 0) == 310\n    assert get_sum_until(320, 0) == 320\n    assert get_sum_until("
    },
    {
      "rank": 63,
      "score": 3.4123998089983805,
      "candidate": "def sum_of_n_plus_x_pos_integers(n, x):\n    return sum(x+i for i in range(1, n+x))\n\n\nif __name__ == \"__main__\":\n    print(sum_of_n_plus_x_pos_integers(50, 5))\n    print(sum_of_n_plus_x_pos_integers(100, 4))\n    print(sum_of_n_plus_x_pos_integers(1000, 3))\n    print(sum_of_n_plus_x_pos_integers(10000, 2))\n    print(sum_of_n_plus_x_pos_integers(100000, 1))\n    print(sum_of_n_plus_x_pos_integers(1000000, 0))"
    },
    {
      "rank": 64,
      "score": 3.3290179648412757,
      "candidate": "def sum_of_positive_integers(n):\n    # write your code here\n    result = 0\n    while n > 0:\n        result += n\n        n -= 2\n        n -= 4\n    return result\n\nprint(sum_of_positive_integers(10))"
    },
    {
      "rank": 65,
      "score": 3.3287610017500895,
      "candidate": "def sum_positive_integers(n, x):\n    if n <= 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n    if n == 4:\n        return 4\n    if n == 5:\n        return 5\n    if n == 6:\n        return 6\n    if n == 7:\n        return 7\n    if n == 8:\n        return 8\n    if n == 9:\n        return 9\n    if n == 10:\n        return 10\n    if n == 11:\n        return 11\n    if n == 12:\n        return 12\n    if n == 13:\n        return 13\n    if n == 14:\n        return 14\n    if n == 15:\n        return 15\n    if n == 16:\n        return 16\n    if n == 17:\n        return 17\n    if n == 18:\n        return 18\n    if n == 19:\n        return 19\n    if n == 20:\n        return 20\n    if n == 21:\n        return 21\n    if n == 22:\n        return 22\n    if n == 23:\n        return 23\n    if n == 24:\n        return 24\n    if n == 25:\n        return 25\n    if n == 26:\n        return 26\n    if n == 27:\n        return 27\n    if n == 28:\n        return 28\n    if n == 29:\n        return 29\n    if n == 30:\n        return 30\n    if n == 31:\n        return 31\n    if n == 32:\n        return 32\n    if n == 33:\n        return 33\n    if n == 34:\n        return 34\n    if n == 35:\n        return 35\n    if n == 36:\n        return 36\n    if n == 37:\n        return 37\n    if n == 38:\n        return 38\n    if n == 39:\n        return 39\n    if n == 40:\n        return 40\n    if n == 41:\n        return 41\n    if n == 42:\n        return 42\n    if n == 43:\n        return 43\n    if n == 44:\n        return 44\n    if n"
    },
    {
      "rank": 66,
      "score": 3.2053069732453423,
      "candidate": "def sum_of_n_plus_x(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    # sum = 0\n    # for i in range(1,n+1):\n    #     sum += i\n    # return sum\n    # \n    # return 0\n    \n    # \n    # sum = 0\n    # for i in range(2,n+1):\n    #     sum += i\n    # return sum\n    # \n    # return 0\n    \n    sum = 0\n    for i in range(2,n+1):\n        sum += i\n    return sum\n\nif __name__ == '__main__':\n    # print(sum_of_n_plus_x(10))\n    print(sum_of_n_plus_x(100))\n    print(sum_of_n_plus_x(10000))\n    print(sum_of_n_plus_x(1000000))"
    },
    {
      "rank": 67,
      "score": 3.1315004438638736,
      "candidate": "def sum_pos_integers(n):\n    # write your code here\n    sum = 0\n    for i in xrange(1, n + 1):\n        sum += i\n    return sum\n\nif __name__ == \"__main__\":\n    print sum_pos_integers(8)\n    print sum_pos_integers(4)\n    print sum_pos_integers(3)\n    print sum_pos_integers(2)\n    print sum_pos_integers(1)\n    print sum_pos_integers(0)\n    print sum_pos_integers(-1)\n    print sum_pos_integers(-2)\n    print sum_pos_integers(-3)\n    print sum_pos_integers(-4)\n    print sum_pos_integers(-5)\n    print sum_pos_integers(-6)\n    print sum_pos_integers(-7)\n    print sum_pos_integers(-8)\n    print sum_pos_integers(-9)\n    print sum_pos_integers(-10)\n    print sum_pos_integers(-11)\n    print sum_pos_integers(-12)\n    print sum_pos_integers(-13)\n    print sum_pos_integers(-14)\n    print sum_pos_integers(-15)\n    print sum_pos_integers(-16)\n    print sum_pos_integers(-17)\n    print sum_pos_integers(-18)\n    print sum_pos_integers(-19)\n    print sum_pos_integers(-20)\n    print sum_pos_integers(-21)\n    print sum_pos_integers(-22)\n    print sum_pos_integers(-23)\n    print sum_pos_integers(-24)\n    print sum_pos_integers(-25)\n    print sum_pos_integers(-26)\n    print sum_pos_integers(-27)\n    print sum_pos_integers(-28)\n    print sum_pos_integers(-29)\n    print sum_pos_integers(-30)\n    print sum_pos_integers(-31)\n    print sum_pos_integers(-"
    },
    {
      "rank": 68,
      "score": 3.129633587757918,
      "candidate": "class Solution:\n    # @param {integer} n\n    # @return {integer}\n    def getSum(self, n):\n        sum = 0\n        for i in range(1, n+1):\n            if i % 2 == 0:\n                sum += i\n            else:\n                sum += i*(i-2)\n        return sum\n            \n\nif __name__ == '__main__':\n    solution = Solution()\n    print solution.getSum(2)\n    print solution.getSum(3)\n    print solution.getSum(4)\n    print solution.getSum(5)\n    print solution.getSum(6)\n    print solution.getSum(7)\n    print solution.getSum(8)\n    print solution.getSum(9)\n    print solution.getSum(10)\n    print solution.getSum(11)\n    print solution.getSum(12)\n    print solution.getSum(13)\n    print solution.getSum(14)\n    print solution.getSum(15)\n    print solution.getSum(16)\n    print solution.getSum(17)\n    print solution.getSum(18)\n    print solution.getSum(19)\n    print solution.getSum(20)\n    print solution.getSum(21)\n    print solution.getSum(22)\n    print solution.getSum(23)\n    print solution.getSum(24)\n    print solution.getSum(25)\n    print solution.getSum(26)\n    print solution.getSum(27)\n    print solution.getSum(28)\n    print solution.getSum(29)\n    print solution.getSum(30)\n    print solution.getSum(31)\n    print solution.getSum(32)\n    print solution.getSum(33)\n    print solution.getSum(34)\n    print solution.getSum(35)\n    print solution.getSum(36)\n    print solution.getSum(37)\n    print solution.getSum(38)\n    print solution.getSum(39)\n    print solution.getSum(40)\n    print solution.getSum(41)\n    print solution.getSum(42"
    },
    {
      "rank": 69,
      "score": 3.104422108871956,
      "candidate": "class Solution(object):\n    def combinationSum2(self, num, target):\n        \"\"\"\n        :type num: int\n        :type target: int\n        :rtype: List[List[int]]\n        \"\"\"\n        if target == 0:\n            return [[]]\n        if target < 0:\n            return []\n        nums = [0] * num\n        res = []\n        for i in range(num):\n            res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])\n        res.append([])"
    },
    {
      "rank": 70,
      "score": 3.0787444943476494,
      "candidate": "# https://discuss.leetcode.com/topic/58358/java-solution-with-explanation\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/56491/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n# https://discuss.leetcode.com/topic/63463/java-solution-with-explanation-and-explanation-of-algorithm\n\n# time: O(n)\n# space: O(n)\n\nclass Solution(object):\n    def getSum(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        result = 0\n        for i in range(2, n):\n            result += i\n        return result\n\nif __name__ == \"__main__\":\n    print(Solution().getSum(8))"
    },
    {
      "rank": 71,
      "score": 3.0443690358839466,
      "candidate": "def sum_of_positive_integers(n, x):\n    return n * (n+2) * (n+3) + sum(range(2, n+1))\n\nprint sum_of_positive_integers(1, 0)\nprint sum_of_positive_integers(2, 1)\nprint sum_of_positive_integers(3, 2)\nprint sum_of_positive_integers(4, 3)\nprint sum_of_positive_integers(5, 4)\nprint sum_of_positive_integers(6, 5)\nprint sum_of_positive_integers(7, 6)\nprint sum_of_positive_integers(8, 7)\nprint sum_of_positive_integers(9, 8)\nprint sum_of_positive_integers(10, 9)"
    },
    {
      "rank": 72,
      "score": 3.038831019739216,
      "candidate": "def sum_of_positive_integers(n):\n    return sum(i for i in range(n+1) if i > 0)\n\nif __name__ == \"__main__\":\n    assert sum_of_positive_integers(1) == 1\n    assert sum_of_positive_integers(2) == 3\n    assert sum_of_positive_integers(3) == 6\n    assert sum_of_positive_integers(4) == 10\n    assert sum_of_positive_integers(5) == 15\n    assert sum_of_positive_integers(6) == 21\n    assert sum_of_positive_integers(7) == 28\n    assert sum_of_positive_integers(8) == 36\n    assert sum_of_positive_integers(9) == 45\n    assert sum_of_positive_integers(10) == 55\n    assert sum_of_positive_integers(11) == 66\n    assert sum_of_positive_integers(12) == 78\n    assert sum_of_positive_integers(13) == 90\n    assert sum_of_positive_integers(14) == 102\n    assert sum_of_positive_integers(15) == 113\n    assert sum_of_positive_integers(16) == 124\n    assert sum_of_positive_integers(17) == 136\n    assert sum_of_positive_integers(18) == 148\n    assert sum_of_positive_integers(19) == 161\n    assert sum_of_positive_integers(20) == 173\n    assert sum_of_positive_integers(21) == 186\n    assert sum_of_positive_integers(22) == 199\n    assert sum_of_positive_integers(23) == 212\n    assert sum_of_positive_integers(24) == 225\n    assert sum_of_positive_integers(25) == 236\n    assert sum_of_positive_integers(26) == 247\n    assert sum_of_positive_integers(27) == 258\n    assert sum_of_positive_integers(28) == 269\n    assert sum_of_positive_integers(29) == 281\n    assert"
    },
    {
      "rank": 73,
      "score": 3.036704310614201,
      "candidate": "def sum_of_positive_integers(n):\n    return sum(n+i for i in range(2, n+1))\n\n\nif __name__ == \"__main__\":\n    assert(sum_of_positive_integers(0) == 0)\n    assert(sum_of_positive_integers(1) == 1)\n    assert(sum_of_positive_integers(2) == 3)\n    assert(sum_of_positive_integers(3) == 6)\n    assert(sum_of_positive_integers(4) == 10)\n    assert(sum_of_positive_integers(5) == 15)\n    assert(sum_of_positive_integers(6) == 21)\n    assert(sum_of_positive_integers(7) == 28)\n    assert(sum_of_positive_integers(8) == 36)\n    assert(sum_of_positive_integers(9) == 45)\n    assert(sum_of_positive_integers(10) == 55)\n    assert(sum_of_positive_integers(11) == 66)\n    assert(sum_of_positive_integers(12) == 77)\n    assert(sum_of_positive_integers(13) == 88)\n    assert(sum_of_positive_integers(14) == 99)\n    assert(sum_of_positive_integers(15) == 110)\n    assert(sum_of_positive_integers(16) == 121)\n    assert(sum_of_positive_integers(17) == 132)\n    assert(sum_of_positive_integers(18) == 143)\n    assert(sum_of_positive_integers(19) == 154)\n    assert(sum_of_positive_integers(20) == 165)\n    assert(sum_of_positive_integers(21) == 176)\n    assert(sum_of_positive_integers(22) == 187)\n    assert(sum_of_positive_integers(23) == 198)\n    assert(sum_of_positive_integers(24) == 209)\n    assert(sum_of_positive_integers(25) == 220)"
    },
    {
      "rank": 74,
      "score": 2.9946011101048264,
      "candidate": "def sum_numbers(n, x):\n    s = 0\n    while n > x:\n        s += n\n        n -= 2\n    return s\n\nprint sum_numbers(3, 0)\n#>>> 6\n\nprint sum_numbers(4, 0)\n#>>> 12\n\nprint sum_numbers(5, 0)\n#>>> 22\n\nprint sum_numbers(6, 0)\n#>>> 30\n\nprint sum_numbers(7, 0)\n#>>> 42\n\nprint sum_numbers(8, 0)\n#>>> 58\n\nprint sum_numbers(9, 0)\n#>>> 70\n\nprint sum_numbers(10, 0)\n#>>> 82\n\nprint sum_numbers(11, 0)\n#>>> 98\n\nprint sum_numbers(12, 0)\n#>>> 116\n\nprint sum_numbers(13, 0)\n#>>> 128\n\nprint sum_numbers(14, 0)\n#>>> 146\n\nprint sum_numbers(15, 0)\n#>>> 154\n\nprint sum_numbers(16, 0)\n#>>> 162\n\nprint sum_numbers(17, 0)\n#>>> 168\n\nprint sum_numbers(18, 0)\n#>>> 178\n\nprint sum_numbers(19, 0)\n#>>> 188\n\nprint sum_numbers(20, 0)\n#>>> 198\n\nprint sum_numbers(21, 0)\n#>>> 208\n\nprint sum_numbers(22, 0)\n#>>> 218\n\nprint sum_numbers(23, 0)\n#>>> 218\n\nprint sum_numbers(24, 0)\n#>>> 218\n\nprint sum_numbers(25, 0)\n#>>> 218\n\nprint sum_numbers(26, 0)\n#>>> 218\n\nprint sum_numbers(27, 0)\n#>>> 218\n\nprint sum_numbers(28, 0)\n#>>> 218\n\nprint sum_numbers(29, 0)\n#>>> 218\n\nprint sum_numbers(30, 0)\n#>>> 218\n\nprint sum_numbers(31, 0)\n#>>> 218\n\nprint sum_numbers(32, 0"
    },
    {
      "rank": 75,
      "score": 2.9537406870447036,
      "candidate": "# https://leetcode.com/problems/n-pairs-sum/discuss/410418/Python-solution-2\nclass Solution(object):\n    def nPairsSum(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        sum = 0\n        for i in range(1, n+1):\n            sum += i\n            for j in range(i, n+1):\n                if i + j < n:\n                    sum += (i+j) * (i-j)\n        return sum\n\nif __name__ == \"__main__\":\n    print(Solution().nPairsSum(2))"
    },
    {
      "rank": 76,
      "score": 2.9121312448649954,
      "candidate": "def sum_pos(n, x):\n    return sum(range(1, n+x+1))\n\n# Test cases\n\nprint(sum_pos(5, 3))\nprint(sum_pos(10, 3))\nprint(sum_pos(20, 3))\nprint(sum_pos(30, 3))\nprint(sum_pos(50, 3))\nprint(sum_pos(60, 3))"
    },
    {
      "rank": 77,
      "score": 2.9063386501106656,
      "candidate": "class Solution:\n    # @param {integer} x\n    # @return {integer}\n    def getSum(self, x):\n        ans = 0\n        while x > 0:\n            ans += x\n            x -= 1\n        return ans\n\n\nif __name__ == '__main__':\n    print(Solution().getSum(4))"
    },
    {
      "rank": 78,
      "score": 2.906165146649941,
      "candidate": "import time\n\n\ndef get_sum(n, x):\n    \"\"\"\n    :type n: int\n    :type x: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        return 0\n\n    return n + n * (n - 2) + n * (n - 4) + x * (n - x) + get_sum(n - x, x)\n\n\nif __name__ == '__main__':\n    start = time.time()\n    print(get_sum(1000, 2))\n    print('Took: {}'.format(time.time() - start))"
    },
    {
      "rank": 79,
      "score": 2.883322500082689,
      "candidate": "def sum_of_numbers(n):\n    return sum(i for i in range(1, n+1) if i % 2 == 0)\n\n\ndef test_sum_of_numbers():\n    assert sum_of_numbers(0) == 0\n    assert sum_of_numbers(1) == 1\n    assert sum_of_numbers(2) == 3\n    assert sum_of_numbers(3) == 6\n    assert sum_of_numbers(4) == 10\n    assert sum_of_numbers(5) == 15\n    assert sum_of_numbers(6) == 21\n    assert sum_of_numbers(7) == 28\n    assert sum_of_numbers(8) == 35\n    assert sum_of_numbers(9) == 42\n    assert sum_of_numbers(10) == 50\n    assert sum_of_numbers(11) == 57\n    assert sum_of_numbers(12) == 63\n    assert sum_of_numbers(13) == 70\n    assert sum_of_numbers(14) == 77\n    assert sum_of_numbers(15) == 84\n    assert sum_of_numbers(16) == 91\n    assert sum_of_numbers(17) == 98\n    assert sum_of_numbers(18) == 105\n    assert sum_of_numbers(19) == 112\n    assert sum_of_numbers(20) == 119\n    assert sum_of_numbers(21) == 126\n    assert sum_of_numbers(22) == 133\n    assert sum_of_numbers(23) == 140\n    assert sum_of_numbers(24) == 147\n    assert sum_of_numbers(25) == 154\n    assert sum_of_numbers(26) == 161\n    assert sum_of_numbers(27) == 168\n    assert sum_of_numbers(28) == 175\n    assert sum_of_numbers(29) == 182\n    assert sum_of_numbers(30) == 189\n    assert sum_of_numbers(31) == 196\n    assert sum_of_numbers(32) == 203\n    assert"
    },
    {
      "rank": 80,
      "score": 2.880397059813653,
      "candidate": "# @include\ndef sum_of_positive_integers_until_n_is_smaller_than_x(n, x):\n    return sum(i for i in range(n + (n - 2) + (n - 4), n - x, -1) if i > 0)\n# @exclude\n\ndef main():\n    assert sum_of_positive_integers_until_n_is_smaller_than_x(5, 2) == 2\n    assert sum_of_positive_integers_until_n_is_smaller_than_x(5, 0) == 0\n    assert sum_of_positive_integers_until_n_is_smaller_than_x(5, 5) == 4\n    assert sum_of_positive_integers_until_n_is_smaller_than_x(5, 7) == 6\n    assert sum_of_positive_integers_until_n_is_smaller_than_x(5, 10) == 10\n    assert sum_of_positive_integers_until_n_is_smaller_than_x(5, 100) == 100\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 81,
      "score": 2.8763150496595142,
      "candidate": "def sum_of_positive_integers(n):\n    return sum(range(2,n+1))\n\nif __name__ == \"__main__\":\n    print(sum_of_positive_integers(5))"
    },
    {
      "rank": 82,
      "score": 2.868935141360893,
      "candidate": "# https://www.youtube.com/watch?v=rU9t2v5eDgQ\n\ndef sum_of_numbers(x):\n    n = 1\n    s = 0\n    while n < x:\n        s += n\n        n += 2\n    return s\n\nif __name__ == '__main__':\n    assert sum_of_numbers(9) == sum_of_numbers(10) == sum_of_numbers(11) == sum_of_numbers(12)\n    assert sum_of_numbers(100) == sum_of_numbers(101) == sum_of_numbers(102) == sum_of_numbers(103)\n    assert sum_of_numbers(10000) == sum_of_numbers(10001) == sum_of_numbers(10002) == sum_of_numbers(10003)\n    assert sum_of_numbers(1000000) == sum_of_numbers(1000001) == sum_of_numbers(10000002) == sum_of_numbers(10000003)\n    assert sum_of_numbers(10000000) == sum_of_numbers(10000001) == sum_of_numbers(10000002) == sum_of_numbers(10000003)\n    assert sum_of_numbers(100000000) == sum_of_numbers(100000001) == sum_of_numbers(100000001) == sum_of_numbers(100000001)"
    },
    {
      "rank": 83,
      "score": 2.815744491616085,
      "candidate": "def sum_of_the_positive_integers_until_n_minus_x(n, x):\n    return (n + (n - 2) * (n - 3) * (n - 4)) / ((x + 1) * (x + 2))\n\nif __name__ == '__main__':\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 1))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 2))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 3))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 4))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 5))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 6))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 7))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 8))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 9))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 10))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 100))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 1000))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 10000))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 100000))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 1000000))\n    print(sum_of_the_positive_integers_until_n_minus_x(3, 10000000))\n    print(sum"
    },
    {
      "rank": 84,
      "score": 2.814632922875015,
      "candidate": "def sum_until(n, x):\n    # write your code here\n    if n < x:\n        return 0\n    return sum(sum_until(n-2, x) + sum_until(n-4, x) + sum_until(n-6, x) + sum_until(n-8, x) + sum_until(n-10, x) + sum_until(n-12, x) + sum_until(n-14, x) + sum_until(n-16, x) + sum_until(n-18, x) + sum_until(n-20, x) + sum_until(n-22, x) + sum_until(n-24, x) + sum_until(n-26, x) + sum_until(n-28, x) + sum_until(n-30, x) + sum_until(n-32, x) + sum_until(n-34, x) + sum_until(n-36, x) + sum_until(n-38, x) + sum_until(n-40, x) + sum_until(n-42, x) + sum_until(n-44, x) + sum_until(n-46, x) + sum_until(n-48, x) + sum_until(n-50, x) + sum_until(n-52, x) + sum_until(n-54, x) + sum_until(n-56, x) + sum_until(n-58, x) + sum_until(n-60, x) + sum_until(n-62, x) + sum_until(n-64, x) + sum_until(n-66, x) + sum_until(n-68, x) + sum_until(n-70, x) + sum_until(n-72, x) + sum_until(n-74, x) + sum_until(n-76, x) + sum_until(n-78, x) + sum_until(n-80, x) + sum_until(n-82, x) + sum_until(n-84, x) + sum_until(n-86, x) + sum_until(n-"
    },
    {
      "rank": 85,
      "score": 2.8137080985718974,
      "candidate": "def sum_positive_integers_n_x(n):\n    return sum(range(1, n + 1)) + sum(range(n - 2, 0, -1)) + sum(range(n - 4, 0, -2))\n\ndef sum_positive_integers_n_x_2(n):\n    return sum(range(1, n + 1)) + sum(range(n - 2, 0, -1)) + sum(range(n - 4, 0, -2)) + sum(range(n - 6, 0, -3))\n\ndef sum_positive_integers_n_x_3(n):\n    return sum(range(1, n + 1)) + sum(range(n - 2, 0, -1)) + sum(range(n - 4, 0, -2)) + sum(range(n - 6, 0, -3)) + sum(range(n - 8, 0, -4))\n\ndef sum_positive_integers_n_x_4(n):\n    return sum(range(1, n + 1)) + sum(range(n - 2, 0, -1)) + sum(range(n - 4, 0, -2)) + sum(range(n - 6, 0, -3)) + sum(range(n - 8, 0, -4)) + sum(range(n - 10, 0, -5))\n\ndef sum_positive_integers_n_x_5(n):\n    return sum(range(1, n + 1)) + sum(range(n - 2, 0, -1)) + sum(range(n - 4, 0, -2)) + sum(range(n - 6, 0, -3)) + sum(range(n - 8, 0, -4)) + sum(range(n - 10, 0, -5)) + sum(range(n - 12, 0, -6))\n\ndef sum_positive_integers_n_x_6(n):\n    return sum(range(1, n + 1)) + sum(range(n - 2, 0, -1)) + sum(range(n - 4, 0, -2)) + sum(range(n - 6, 0, -3)) + sum(range(n -"
    },
    {
      "rank": 86,
      "score": 2.808330304861884,
      "candidate": "# Definition for an interval.\nclass Interval(object):\n    def __init__(self, s=0, e=0):\n        self.start = s\n        self.end = e\n\n    def __repr__(self):\n        return '[%s, %s]' % (self.start, self.end)\n\n\nclass Solution(object):\n    def add(self, n, x):\n        \"\"\"\n        :type n: int\n        :type x: int\n        :rtype: int\n        \"\"\"\n        if x == 0:\n            return n\n        if x < 0:\n            return self.add(-x, n)\n        if x == 1:\n            return n\n        if x == 2:\n            return n + n\n        if x == 3:\n            return n + n + n\n        if x == 4:\n            return n + n + n + n\n        if x == 5:\n            return n + n + n + n + n\n        if x == 6:\n            return n + n + n + n + n + n\n        if x > 6:\n            return 0\n        return self.add(n, x-1) + self.add(n, x-2) + self.add(n, x-3) + self.add(n, x-4) + self.add(n, x-5)\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.add(10, 1)\n    print s.add(10, 2)\n    print s.add(10, 3)\n    print s.add(10, 4)\n    print s.add(10, 5)\n    print s.add(10, 6)"
    },
    {
      "rank": 87,
      "score": 2.7880959184931844,
      "candidate": "def sum_of_n_plus_x(n, x):\n    return n * (n + 1) * (n + 2) / 2 - (n - x) * (n - x - 2)\n\nif __name__ == \"__main__\":\n    print(sum_of_n_plus_x(5, 0))\n    print(sum_of_n_plus_x(5, 1))\n    print(sum_of_n_plus_x(5, 2))\n    print(sum_of_n_plus_x(5, 3))\n    print(sum_of_n_plus_x(5, 4))\n    print(sum_of_n_plus_x(5, 5))"
    },
    {
      "rank": 88,
      "score": 2.7822469101899268,
      "candidate": "class Solution:\n    # @param n, an integer\n    # @return an integer\n    def getSum(self, n):\n        n = max(n, 0)\n        if n == 0:\n            return 0\n        res = 0\n        while n > 0:\n            res += n\n            n -= 2\n        return res\n\nif __name__ == '__main__':\n    sol = Solution()\n    print(sol.getSum(8))"
    },
    {
      "rank": 89,
      "score": 2.74195209815795,
      "candidate": "def sum_of_n_plus_x(n, x):\n    return sum(n+(n-2)*(n-3)*(n-4) <= x)\n\nprint(sum_of_n_plus_x(3, 4))\n# 5\nprint(sum_of_n_plus_x(5, 4))\n# 13\nprint(sum_of_n_plus_x(5, 3))\n# 4\nprint(sum_of_n_plus_x(5, 2))\n# 2\nprint(sum_of_n_plus_x(5, 1))\n# 0\nprint(sum_of_n_plus_x(5, 0))\n# 0\nprint(sum_of_n_plus_x(5, -1))\n# 0\nprint(sum_of_n_plus_x(5, -2))\n# 0\nprint(sum_of_n_plus_x(5, -3))\n# 0\nprint(sum_of_n_plus_x(5, -4))\n# 0\nprint(sum_of_n_plus_x(5, -5))\n# 0\nprint(sum_of_n_plus_x(5, -6))\n# 0\nprint(sum_of_n_plus_x(5, -7))\n# 0"
    },
    {
      "rank": 90,
      "score": 2.7292311998776166,
      "candidate": "class Solution(object):\n    def sumOfSquares(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(1, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares2(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares3(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares4(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares5(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares6(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares7(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i\n        return res\n        \n    def sumOfSquares8(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        res = 1\n        for i in range(2, n+1):\n            res += i * i"
    },
    {
      "rank": 91,
      "score": 2.719178762449059,
      "candidate": "def sum_positive_integers(n):\n    return sum(range(n+2, n+n*n))\n\nif __name__ == \"__main__\":\n    print(sum_positive_integers(20))"
    },
    {
      "rank": 92,
      "score": 2.6643129907109446,
      "candidate": "def sum_positive_integers_to_x(n, x):\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        return sum_positive_integers_to_x(n - 2, x) + sum_positive_integers_to_x(n - 4, x) + sum_positive_integers_to_x(n - 6, x)\n\nif __name__ == '__main__':\n    print(sum_positive_integers_to_x(1, 0))"
    },
    {
      "rank": 93,
      "score": 2.6367903697915156,
      "candidate": "def sum_of_positive_integers_n_plus_x(n, x):\n    return sum(i for i in range(1, n+x+1) if i > 0)\n\n\nif __name__ == '__main__':\n    print(sum_of_positive_integers_n_plus_x(12, -3))"
    },
    {
      "rank": 94,
      "score": 2.5948675518662303,
      "candidate": "def getSum(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return n * (getSum(n-2) + getSum(n-4) + getSum(n-6) + getSum(n-8))\n\nif __name__ == '__main__':\n    print getSum(100)"
    },
    {
      "rank": 95,
      "score": 2.5769156284176398,
      "candidate": "def sum_of_positive_integers(n):\n    sum = 0\n    while n >= 0:\n        sum += n\n        n -= 2\n        if n % 2 == 0:\n            n -= 1\n        if n % 3 == 0:\n            n -= 2\n        if n % 5 == 0:\n            n -= 4\n    return sum\n\n\nif __name__ == '__main__':\n    print sum_of_positive_integers(20)\n    print sum_of_positive_integers(100)\n    print sum_of_positive_integers(500)"
    },
    {
      "rank": 96,
      "score": 2.557466010397589,
      "candidate": "# I implemented this function myself.\n# I didn't know how to use the sum function in the previous problem.\n\ndef sum_positive_integers(n):\n    s = 0\n    while n > 0:\n        s += n\n        n += 2\n    return s\n\nif __name__ == \"__main__\":\n    print sum_positive_integers(10)\n    print sum_positive_integers(9)\n    print sum_positive_integers(8)\n    print sum_positive_integers(7)\n    print sum_positive_integers(6)\n    print sum_positive_integers(5)\n    print sum_positive_integers(4)\n    print sum_positive_integers(3)\n    print sum_positive_integers(2)\n    print sum_positive_integers(1)\n    print sum_positive_integers(0)"
    },
    {
      "rank": 97,
      "score": 2.5215173503677315,
      "candidate": "import timeit\n\ndef sum_positive_integers(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    sum = 0\n    for i in range(2, n+1):\n        sum += i\n    return sum\n\nn = 100\nstart = timeit.default_timer()\nprint(sum_positive_integers(n))\nprint(\"Time elapsed:\", timeit.default_timer() - start)"
    },
    {
      "rank": 98,
      "score": 2.430100725514617,
      "candidate": "def sum_of_n_plus_n_minus_x(n):\n\tsum = 0\n\twhile n > 0:\n\t\tsum += n\n\t\tn -= 2\n\treturn sum\n\nprint(sum_of_n_plus_n_minus_x(100))"
    },
    {
      "rank": 99,
      "score": 2.408591203853029,
      "candidate": "def sum(n, x=0):\n    if n < x:\n        return 0\n    return sum(n+1, x) + sum(n+2, x) + sum(n+3, x)\n\nprint(sum(3))"
    },
    {
      "rank": 100,
      "score": 2.234687902136881,
      "candidate": "def sum_of_possible_numbers(n):\n    res = 0\n    for i in range(n):\n        res += i\n        if i > 0:\n            res += n-i\n    return res\n\nif __name__ == '__main__':\n    print sum_of_possible_numbers(3)\n    print sum_of_possible_numbers(4)\n    print sum_of_possible_numbers(5)\n    print sum_of_possible_numbers(6)\n    print sum_of_possible_numbers(7)"
    }
  ]
}