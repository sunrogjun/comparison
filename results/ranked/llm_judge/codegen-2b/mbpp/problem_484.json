{
  "timestamp": "2025-09-14T20:57:46.558991",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "mbpp",
  "problem_number": 484,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "#!/usr/bin/python\nimport re\ndef remove_lowercase(str):\n    return re.sub(\"[a-z]\", \"\", str)\n\nif __name__ == \"__main__\":\n    print(remove_lowercase(\"abcde\"))\n    print(remove_lowercase(\"abcdef\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lowercase(\"abcd\"))\n    print(remove_lower"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "# https://www.hackerrank.com/challenges/remove-substrings-regex\n\ndef remove_substrings(string):\n    # write your code here\n    \n    # Complete the function below.\n    return ''.join(c for c in string if c.isupper())\n\nif __name__ == '__main__':\n    string = input().strip()\n    print(remove_substrings(string))"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "# https://leetcode.com/problems/remove-lowercase-substrings/discuss/153688/Python-2-O(n)\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        s = s.lower()\n        r = []\n        for i in range(len(s)):\n            if s[i] == s[i].upper():\n                r.append(s[i])\n            else:\n                r.append(s[i].upper())\n        return ''.join(r)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return ''.join(c for c in s if c.lower()!= c)"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "# https://leetcode.com/problems/remove-all-lowercase-words/discuss/71513/Easy-Regex-JavaScript-Solution\n\nclass Solution(object):\n    def removeLowercase(self, str):\n        \"\"\"\n        :type str: str\n        :rtype: str\n        \"\"\"\n        if not str:\n            return str\n\n        pattern = '(' + '|'.join(map(re.escape, str.lower())) + ')'\n        return re.sub(pattern, '', str)\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.removeLowercase(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\"))"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "__author__ = 'Danyang'\n\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        ret = ''\n        for c in s:\n            if c.lower()!= c:\n                ret += c\n        return ret\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.removeLowercase('abcd'))\n    print(s.removeLowercase('aBcD'))\n    print(s.removeLowercase('abc'))\n    print(s.removeLowercase('AaBb'))"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "# Example\n# Given s = \"Hello\", return \"hello\".\n# Given s = \"Hello World\", return \"hello world\".\n# Given s = \"Aa Bb Cc\", return \"aabbcc\".\n# Note:\n#     You may assume the string contains only lowercase letters.\n#     If the substring to be removed does not exist in the string, return the original string.\n#     If the substring to be removed is the only substring in the string, return the empty string.\n\nclass Solution(object):\n    def removeLowercaseLetters(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        s = s.lower()\n        pattern = '[' + ''.join(chr(i) for i in range(97, 123)) + ']'\n        regex = re.compile(pattern)\n        return regex.sub('', s)\n\nif __name__ == '__main__':\n    print Solution().removeLowercaseLetters('Hello')\n    print Solution().removeLowercaseLetters('Hello World')\n    print Solution().removeLowercaseLetters('Aa Bb Cc')"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return s.translate(str.maketrans(\"abcdefghijklmnopqrstuvwxyz\", \"1234567890\"), ord('a')-ord('A'))\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrst"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "# https://www.hackerrank.com/challenges/remove-lowercase\ndef remove_lowercase(string):\n    return ''.join(char for char in string if char.islower())\n\nif __name__ == '__main__':\n    string = input()\n    print(remove_lowercase(string))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "# https://leetcode.com/problems/remove-lowercase/\n\nclass Solution:\n    # @param s, a string\n    # @return a string\n    def removeLowercase(self, s):\n        return ''.join(c for c in s if c.isupper())\n\n\nif __name__ == \"__main__\":\n    solution = Solution()\n    print solution.removeLowercase(\"abcdefghijklmnopqrstuvwxyz\")"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def remove_lowercase(string):\n    pattern = re.compile(\"[a-z]\")\n    return pattern.sub(\"\", string)\n\nprint remove_lowercase(\"abcd\")"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "# https://leetcode.com/problems/remove-all-lowercase/discuss/481759/Python-Solution-Using-Regex-with-Dictionary\n\n# https://leetcode.com/problems/remove-all-lowercase/discuss/157857/Java-O(N)-Time-and-O(1)-Space-Solution-with-Python-Regex-with-Dictionary\n# Python Solution using regex\ndef remove_lowercase(s):\n    lowercase = {c.lower() for c in s}\n    return ''.join(c for c in s if c.lower() not in lowercase)\n\n# https://leetcode.com/problems/remove-all-lowercase/discuss/157857/Java-O(N)-Time-and-O(1)-Space-Solution-with-Python-Regex-with-Dictionary\n# Java Solution using regex\ndef remove_lowercase(s):\n    return s.replace('a', '').replace('e', '').replace('i', '').replace('o', '').replace('u', '')\n\n# Test cases\nprint(remove_lowercase('abcabc'))\nprint(remove_lowercase('ab'))\nprint(remove_lowercase('abcd'))"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "__author__ = 'Danyang'\n\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        regex = re.compile(r'[a-z]')\n        return regex.sub('', s)\n\n\nif __name__==\"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"abcdefg\")"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def remove_lowercase(string):\n    regex = re.compile(r'[a-z]')\n    return regex.sub('', string)\n\nprint remove_lowercase(\"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcdefghijkl"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def remove_lowercase(string):\n    regex = r'[a-z]+'\n    return re.sub(regex, '', string)\n\nprint(remove_lowercase('abcde'))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        s = ''.join(c for c in s if c.isupper())\n        return s\n        \n        \n        \n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"aBcDeFgHiJkLmNoPqRsTuVwXyZ\")"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return re.sub('[a-z]', '', s)"
    },
    {
      "rank": 18,
      "score": 9.0,
      "candidate": "import re\n\n\ndef remove_lowercase(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    pattern = re.compile(\"[a-z]\")\n    return pattern.sub(\"\", string)\n\n\nif __name__ == '__main__':\n    string = \"Hello world\"\n    print(remove_lowercase(string))"
    },
    {
      "rank": 19,
      "score": 9.0,
      "candidate": "import re\n\ndef removeLowerCaseSubstrings(s):\n    \"\"\"\n    :type s: str\n    :rtype: str\n    \"\"\"\n    lower = re.compile(r'[a-z]')\n    return lower.sub(\"\", s)\n\nprint(removeLowerCaseSubstrings(\"I am a very long string that should be long enough\"))"
    },
    {
      "rank": 20,
      "score": 9.0,
      "candidate": "def remove_lowercase(s):\n    pattern = re.compile(r'[a-z]*')\n    return pattern.sub('', s)\n\nif __name__ == '__main__':\n    s = \"Hello world\"\n    print(remove_lowercase(s))\n    print(s)\n    print(remove_lowercase(s))\n    print(s)"
    },
    {
      "rank": 21,
      "score": 9.0,
      "candidate": "import re\n\ndef remove_lowercase(string):\n    return re.sub(r'[a-z]', '', string)\n\n#Test Cases\nprint(remove_lowercase('abcd'))\nprint(remove_lowercase('abc'))\nprint(remove_lowercase('xyz'))\nprint(remove_lowercase('abcdef'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_lowercase(string: str) -> str:\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    return re.sub(r'[a-z]', '', string)\n\n\ndef main():\n    print(remove_lowercase(\"Hello\"))\n    print(remove_lowercase(\"aA\"))\n    print(remove_lowercase(\"hello\"))\n    print(remove_lowercase(\"hello world\"))\n    print(remove_lowercase(\"HELLO WORLD\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"hello world\"))\n    print(remove_lowercase(\"HELLO WORLD\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print(remove_lowercase(\"Hello World\"))\n    print("
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def remove_lowercase_substrings(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    return re.sub('(?<![A-Z])[a-z]+', '', string)\n\n\nif __name__ == '__main__':\n    assert remove_lowercase_substrings('abcdefg') == 'abcdefg', 'abcdefg'\n    assert remove_lowercase_substrings('abcd') == 'abcd', 'abcd'\n    assert remove_lowercase_substrings('abcdefghijklmnopqrstuvwxyz') == 'abcdefghijklmnopqrstuvwxyz', 'abcdefghijklmnopqrstuvwxyz'"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "# https://www.hackerrank.com/challenges/lowercase/problem\n\ndef removeLowercase(string):\n    regex = r'(?<![a-z])[a-z]*[a-z]'\n    return re.sub(regex, '', string)\n\nif __name__ == \"__main__\":\n    string = input().strip()\n    print(removeLowercase(string))"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_lowercase(string):\n    return re.sub(r'[a-z]', '', string)\n\nif __name__ == '__main__':\n    print(remove_lowercase('hello'))\n    print(remove_lowercase('hello world'))\n    print(remove_lowercase('Hello world'))\n    print(remove_lowercase('Hello World'))\n    print(remove_lowercase('Hello World, how are you?'))"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def remove_lowercase_substring(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    \n    regex = re.compile('[a-z]')\n    return regex.sub('', string)\n\nif __name__ == '__main__':\n    string = 'abcd'\n    print(remove_lowercase_substring(string))"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def remove_lowercase(str):\n    pattern = re.compile(r'[a-z]')\n    return pattern.sub('', str)\n\nif __name__ == '__main__':\n    s = \"Hello World\"\n    print(remove_lowercase(s))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def remove_lowercase(string):\n    regex = re.compile('[a-z]')\n    return regex.sub('', string)\n\nif __name__ == \"__main__\":\n    print(remove_lowercase('hello'))\n    print(remove_lowercase('Hello'))\n    print(remove_lowercase('hello World'))\n    print(remove_lowercase('Hello World'))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def removeLowerCaseSubstring(string):\n    # Write your code here\n    return string.translate(string.maketrans('','','abcdefghijklmnopqrstuvwxyz'), 'abcdefghijklmnopqrstuvwxyz')\n\nprint removeLowerCaseSubstring(\"The quick brown fox jumps over the lazy dog\")"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def remove_lowercase(string):\n    if string.lower() == string:\n        return string\n    return re.sub('(?i)['+string.lower()+']+', '', string)\n\nif __name__ == '__main__':\n    assert remove_lowercase('abcd') == 'abcd', \"Lowercase\"\n    assert remove_lowercase('abcd') == 'abcd', \"No lowercase\"\n    assert remove_lowercase('ABCD') == 'abcd', \"No lowercase and extra space\""
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        s = s.lower()\n        s = re.sub(r'(?<![A-Z])[a-z]{1}', '', s)\n        return s\n\n\nif __name__ == '__main__':\n    assert Solution().removeLowercase(\"aBcDeFg\") == \"abcdefg\"\n    assert Solution().removeLowercase(\"aBcDeFg\") == \"abcdefg\"\n    assert Solution().removeLowercase(\"aBcDeFg\") == \"abcdefg\"\n    assert Solution().removeLowercase(\"aBcDeFg\") == \"abcdefg\""
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "# https://stackoverflow.com/questions/361552/how-to-replace-all-substrings-of-a-string-which-contain-a-given-string\ndef remove_lowercase_substring(str, substring):\n    return re.sub(r'\\b' + substring + '\\b', '', str)\n\n\ndef remove_lowercase_substring_regex(str, substring):\n    return re.sub(substring, '', str)\n\n\nif __name__ == '__main__':\n    print(remove_lowercase_substring('abcdefg', 'c'))\n    print(remove_lowercase_substring_regex('abcdefg', 'c'))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def remove_lowercase(string):\n    return ''.join([s for s in string if s.isupper()])\n\nif __name__ == '__main__':\n    print(remove_lowercase('aBcDeFgHiJkLmNoPqRsTuVwXyZ'))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def removeLowercase(s):\n    # Write your code here\n    regex = re.compile('[a-z]')\n    return regex.sub('', s)\n\nif __name__ == '__main__':\n    print(removeLowercase(\"Hello, World! How are you?\"))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_lowercase(string):\n    return re.sub(r'(?i)[a-z]', '', string)\n\nif __name__ == '__main__':\n    string = 'abcdefghijklmnopqrstuvwxyz'\n    print(remove_lowercase(string))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowcaseLetters(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        import re\n        return re.sub(r'[a-z]', '', s)"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_lowercase(s):\n    return re.sub(r'[a-z]', '', s)\n\nprint(remove_lowercase('a'))\nprint(remove_lowercase('A'))\nprint(remove_lowercase('abc'))\nprint(remove_lowercase('abcdef'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        # use regex to replace all lowercase letters\n        return s.replace('a','A').replace('e','E').replace('i','I').replace('o','O').replace('u','U')\n\n\nif __name__ == '__main__':\n    s = Solution()\n    s.removeLowercase('hello')\n    print s.removeLowercase('Hello')\n    print s.removeLowercase('hellohello')\n    print s.removeLowercase('HelloWorld')\n    print s.removeLowercase('Hello world')"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "import re\n\n# Complete the function below.\ndef removeLowercase(str):\n    regex = re.compile('[a-z]')\n    return regex.sub('', str)\n\nif __name__ == \"__main__\":\n    assert removeLowercase(\"hello\") == \"hello\"\n    assert removeLowercase(\"Hello\") == \"hello\"\n    assert removeLowercase(\"Hello World\") == \"hello World\"\n    assert removeLowercase(\"Hello World! How are you?\") == \"hello World!\"\n    assert removeLowercase(\"Hello World! How are you?\") == \"Hello World!\""
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        if not s:\n            return s\n        regex = '[' + ''.join(map(lambda c: str(c).lower(), s)) + ']'\n        return re.sub(regex, '', s)\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.removeLowercase('abc')\n    print s.removeLowercase('AaBbCc')\n    print s.removeLowercase('a')\n    print s.removeLowercase('abbc')"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        # https://leetcode.com/problems/remove-lowercase/discuss/29991/Java-and-Python-Solution-with-regex\n        s = s.lower()\n        return re.sub(r'[a-z]', '', s)\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.removeLowercase('abcd'))\n    print(s.removeLowercase('abCd'))\n    print(s.removeLowercase('abc'))\n    print(s.removeLowercase('abcdefghijklmnopqrstuvwxyz'))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "import re\n\ns = 'Hello World!'\n\ndef remove_lowercase(s):\n    return re.sub('[a-z]', '', s)\n\n\nprint(remove_lowercase(s))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def remove_lowercase(string):\n    regex = r\"(?i)\\b[a-z]\"\n    return string.replace(regex, \"\")\n\n# Test Cases\nprint(remove_lowercase(\"abc\"))\nprint(remove_lowercase(\"abC\"))\nprint(remove_lowercase(\"abC1\"))\nprint(remove_lowercase(\"abC12\"))\nprint(remove_lowercase(\"abC123\"))"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_lowercase(s):\n    return re.sub('[a-z]*', '', s)\n\n#Test cases\ns = \"This is a test string\"\nprint(\"Remove lowercase:\", remove_lowercase(s))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def removeLowerCaseSubstrings(str):\n    pattern = r\"([a-z])([A-Z])([a-z]|[A-Z])\"\n    regex = re.compile(pattern)\n    return regex.sub(\"\", str)\n\n\n\nif __name__ == \"__main__\":\n    print removeLowerCaseSubstrings(\"hello world\")"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def removeLowerCaseSubStrings(string):\n    # Complete this function\n    pattern = r'[a-z]+'\n    return re.sub(pattern, '', string)\n\nif __name__ == '__main__':\n    string = 'abcABCABC'\n    print 'Before:', string\n    print 'After:', removeLowerCaseSubStrings(string)"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def removeLowercaseSubstrings(string):\n    pattern = r'[a-z]*'\n    return re.sub(pattern, '', string)\n\nprint removeLowercaseSubstrings('aBcD')"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "# write your code here\ndef removeLowercaseSubstrings(string):\n    regex = r'[a-z]*'\n    return re.sub(regex, '', string)\n\nif __name__ == '__main__':\n    s = 'The quick brown fox jumps over the lazy dog'\n    print(removeLowercaseSubstrings(s))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        pattern = '[' + ''.join(chr(i) for i in range(97, 122)) + ']'\n        return re.sub(pattern, '', s)\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.removeLowercase('abcdefg'))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "# Definition for a substring.\nclass Substring(object):\n    def __init__(self, s):\n        \"\"\"\n        :type s: str\n        \"\"\"\n        self.s = s\n        self.start = -1\n        self.end = -1\n\n    def __str__(self):\n        return self.s\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        l = []\n        for c in s:\n            if c.isalpha():\n                l.append(c)\n        r = s.replace(''.join(l), '')\n        return r\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.removeLowercase('abcABCabc')"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        p = re.compile(r'[a-z]')\n        return p.sub('', s)\n\nif __name__ == \"__main__\":\n    print Solution().removeLowercase(\"Hello world\")"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        import re\n        return re.sub(r'[a-z]', lambda m: m.group(0)[1], s)\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"abcde\")\n    print s.removeLowercase(\"abcd\")\n    print s.removeLowercase(\"abcd\")\n    print s.removeLowercase(\"abc\")\n    print s.removeLowercase(\"aBc\")\n    print s.removeLowercase(\"abc\")\n    print s.removeLowercase(\"abc\")\n    print s.removeLowercase(\"abcd\")\n    print s.removeLowercase(\"abcd\")\n    print s.removeLowercase(\"abc\")"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return re.sub('[a-z]', '', s)\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"abcABCABC\")\n    print s.removeLowercase(\"abcd\")"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "# https://github.com/pydanny/Regex/blob/master/regex.py\n# https://stackoverflow.com/a/18258828/131498\n\nimport re\n\ndef remove_lowercase(string):\n    regex = re.compile(r'(?i)[a-z]')\n    return regex.sub(\"\", string)\n\nif __name__ == '__main__':\n    string = \"Hello World!\"\n    print(remove_lowercase(string))\n    # print(string)"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "import re\n\n# Your function should return the string after removing lowercase substrings\ndef remove_lowercase_substrings(s):\n    new_string = re.sub('[a-z]', '', s)\n    return new_string\n\n# Test Cases\ns = 'test'\nprint(remove_lowercase_substrings(s))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_lowercase_substring(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    regex = re.compile(r'[a-z]')\n    return regex.sub('', string)\n\nprint(remove_lowercase_substring('Hello, world!'))\n\n\"\"\"\nOutput:\n\nHello, world!\n\"\"\""
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "# https://www.geeksforgeeks.org/remove-lowercase-substrings-from-a-given-string-by-using-regex/\ndef removeLowercase(string):\n    regex = re.compile('[a-z]')\n    return regex.sub('', string)\n\nif __name__ == '__main__':\n    string = 'aabccd'\n    print(removeLowercase(string))"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "# https://leetcode.com/problems/remove-lowercase/discuss/3560/C%2B%2B-Python-Regex-Solution\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return s.translate(str.maketrans(\"abcdefghijklmnopqrstuvwxyz\", 'nopqrstuvwxyz'), 'abcdefghijklmnopqrstuvwxyz')\n\nif __name__ == '__main__':\n    print Solution().removeLowercase(\"Hello World\")"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def remove_lowercase(s):\n    pattern = r'[a-z]'\n    regex = re.compile(pattern)\n    return regex.sub('', s)\n\nprint(remove_lowercase(\"abcABCdef\"))"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def remove_lowercase_substring(s):\n    pattern = r'[a-z]*'\n    s = re.sub(pattern, '', s)\n    return s\n\ndef test_remove_lowercase_substring():\n    assert remove_lowercase_substring('abc') == 'abc'\n    assert remove_lowercase_substring('Abc') == 'abc'\n    assert remove_lowercase_substring('abcdef') == 'abcdef'\n    assert remove_lowercase_substring('Abcdef') == 'abcdef'\n    assert remove_lowercase_substring('aBcDeF') == 'abcdef'\n    assert remove_lowercase_substring('aBcDeFg') == 'abcdefg'\n    assert remove_lowercase_substring('aBcDeFgH') == 'abcdefgh'\n\nif __name__ == '__main__':\n    test_remove_lowercase_substring()"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, str):\n        \"\"\"\n        :type str: str\n        :rtype: str\n        \"\"\"\n        return re.sub(r'[a-z]', lambda m: m.group(0).upper(), str)"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def remove_lowercase_substring(string):\n    # write your code here\n    import re\n    return re.sub(r'[a-z]', '', string)\n\nif __name__ == '__main__':\n    s = 'This is a string with lowercase letters'\n    print remove_lowercase_substring(s)"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def remove_lowercase(s):\n    regex = r'[a-z]*'\n    return re.sub(regex, '', s)\n\n\nif __name__ == '__main__':\n    s = 'hello world'\n    print(remove_lowercase(s))"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def remove_lowercase_substring(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    return re.sub('[a-z]', '', str)\n\nif __name__ == '__main__':\n    s = 'Hello, World! How are you?'\n    print(remove_lowercase_substring(s))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        s = s.lower()\n        return re.sub(r'[a-z]', lambda m: m.group(0), s)\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"aBcD\")\n    print s.removeLowercase(\"abc\")\n    print s.removeLowercase(\"aBcD1\")"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        if not s:\n            return s\n        s = s.lower()\n        result = ''\n        for i in range(len(s)):\n            if s[i].isalpha():\n                result += s[i]\n        return result\n\nif __name__ == '__main__':\n    s = Solution()\n    print(s.removeLowercase('aAaBb'))\n    print(s.removeLowercase('AaBbCc'))\n    print(s.removeLowercase('aA'))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "# Definition for a substring.\nclass Substring:\n    def __init__(self, s: str, start: int, end: int):\n        self.s = s\n        self.start = start\n        self.end = end\n\nclass Solution:\n    def removeLowercaseSubstrings(self, s: str) -> str:\n        regex = r'[a-z]{' + str(len(s)) + r'}'\n        return ''.join(filter(lambda x: x.start!= x.end, (re.finditer(regex, s))))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "# https://leetcode.com/problems/remove-all-lowercase-words/\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return \"\".join(x for x in s if x.lower()!= x).lower()"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def remove_lowercase(string):\n    pattern = r'[a-z]'\n    regex = re.compile(pattern)\n    return regex.sub('', string)\n\nif __name__ == '__main__':\n    print(remove_lowercase('Hello'))"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "import re\n\n# Complete the lowercase function below.\ndef lowercase(s):\n    return re.sub('[a-z]', '', s)\n\nif __name__ == '__main__':\n    s = 'Abcde'\n    print(lowercase(s))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "class Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return s.translate(str.maketrans({\"a\": \"A\", \"b\": \"B\", \"c\": \"C\", \"d\": \"D\", \"e\": \"E\", \"f\": \"F\", \"g\": \"G\", \"h\": \"H\", \"i\": \"I\", \"j\": \"J\", \"k\": \"K\", \"l\": \"L\", \"m\": \"M\", \"n\": \"N\", \"o\": \"O\", \"p\": \"P\", \"q\": \"Q\", \"r\": \"R\", \"s\": \"S\", \"t\": \"T\", \"u\": \"U\", \"v\": \"V\", \"w\": \"W\", \"x\": \"X\", \"y\": \"Y\", \"z\": \"Z\"}))\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.removeLowercase(\"abcdefghijklmnopqrstuvwxyz\")"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def removeLowercase(s):\n    return ''.join([c for c in s if c!= c.lower()])\n\nif __name__ == \"__main__\":\n    print removeLowercase(\"abCcDeFg\")"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def removeLowerCaseSubstring(s):\n    regex = r\"([a-z])\"\n    pattern = re.compile(regex)\n    return pattern.sub(r\"\\1\", s)\n\n\n\nprint(removeLowerCaseSubstring(\"Hello, world\"))\nprint(removeLowerCaseSubstring(\"Hello, world\"))\nprint(removeLowerCaseSubstring(\"hello, world\"))\nprint(removeLowerCaseSubstring(\"Hello, world\"))\nprint(removeLowerCaseSubstring(\"Hello, world\"))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_lowercase(string):\n    return re.sub(r'[a-z]*', '', string)\n\n\nprint(remove_lowercase('abcd'))\nprint(remove_lowercase('abcdef'))\nprint(remove_lowercase('A'))\nprint(remove_lowercase('a'))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "# Your function should return the string with all lowercase substrings removed.\n\nimport re\n\ndef remove_lowercase_substrings(string):\n    pattern = re.compile('[a-z]')\n    return pattern.sub('', string)\n\nif __name__ == '__main__':\n    print(remove_lowercase_substrings('aBcDeFgHiJkLmNoPqRsTuVwXyZ'))"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "import re\n\n# Complete the lowercase function below.\ndef lowercase(s):\n    return re.sub(r'[a-z]', lambda m: m.group(0).lower(), s)\n\n\nif __name__ == '__main__':\n    s = \"this is a test\"\n    print(lowercase(s))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "import re\n\ndef remove_lowercase_substrings(string):\n    pattern = re.compile(r'[a-z]')\n    return pattern.sub('', string)\n\nif __name__ == '__main__':\n    print remove_lowercase_substrings(\"abc\")\n    print remove_lowercase_substrings(\"abcdefghijklmnopqrstuvwxyz\")"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def removeLowerCaseSubstrings(s):\n    regex = re.compile('[a-z]*[A-Z]*')\n    return regex.sub('', s)\n\n\nif __name__ == '__main__':\n    s = 'this is lowercase string'\n    print removeLowerCaseSubstrings(s)"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "import re\n\n\ndef remove_lowercase_substring(str):\n    \"\"\"\n    :type str: str\n    :rtype: str\n    \"\"\"\n    return re.sub(r'[a-z]', '', str)\n\nif __name__ == '__main__':\n    print(remove_lowercase_substring('abcABCdEf'))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "class Solution:\n    def removeLowercase(self, s: str) -> str:\n        s = s.lower()\n        regex = r\"[a-z]\"\n        result = re.sub(regex, \"\", s)\n        return result.upper()\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.removeLowercase(\"abcdefg\"))\n    print(s.removeLowercase(\"abCdefg\"))\n    print(s.removeLowercase(\"abcdEfG\"))\n    print(s.removeLowercase(\"abcdEfG\"))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def remove_lowercase_substring(string, substring):\n    pattern = r'[a-z]*'\n    regex = re.compile(pattern)\n    return regex.sub(substring, string)\n\nif __name__ == '__main__':\n    test_string = 'abcd'\n    test_substring = 'abc'\n    print('Original string: {}'.format(test_string))\n    print('Substring to remove: {}'.format(test_substring))\n    print('Result: {}'.format(remove_lowercase_substring(test_string, test_substring)))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "# https://leetcode.com/problems/remove-lowercase/description/\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return ''.join(x for x in s if x.isupper() or x.islower())\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.removeLowercase('a')\n    print s.removeLowercase('Aa')\n    print s.removeLowercase('AaA')\n    print s.removeLowercase('AaAaAa')\n    print s.removeLowercase('AAaAAaAaAaAa')\n    print s.removeLowercase('AAaAAaAAaAAaAAa')\n    print s.removeLowercase('AaAaAaAaAaAa')"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def remove_lowercase(s):\n    r = re.compile(r'[a-z]')\n    return r.sub('', s)\n\n# Test Cases\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))\nprint(remove_lowercase('abcdefghijklmnopqrstuvwxyz'))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "# write your code here\n\ndef remove_lowercase(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    return ''.join(ch for ch in string if ch.isalpha())\n\nif __name__ == '__main__':\n    print remove_lowercase('abcd')\n    print remove_lowercase('AaBbCc')"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def remove_lowercase_substrings(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    # split the string into a list of words\n    words = string.split()\n    # loop through each word, removing all lowercase substrings\n    for word in words:\n        # get the regex for lowercase substrings\n        regex = re.compile(r'[a-z]*[a-z]')\n        # remove all lowercase substrings\n        word = re.sub(regex, '', word)\n        # join the word back into one string\n        string = string.replace(word, '')\n    # return the string\n    return string\n\nif __name__ == '__main__':\n    # test code\n    string = 'Hello world! How are you? I am fine.'\n    print remove_lowercase_substrings(string)"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def remove_lowercase(string):\n    regex = re.compile(r'[a-z]', re.IGNORECASE)\n    return regex.sub('', string)\n\ndef test():\n    assert remove_lowercase('abc') == 'abc'\n    assert remove_lowercase('aBc') == 'abc'\n    assert remove_lowercase('aBcA') == 'abc'\n    assert remove_lowercase('abc') == 'abc'\n    assert remove_lowercase('aBcA') == 'abc'\n    assert remove_lowercase('Aa') == 'a'\n    assert remove_lowercase('AaBc') == 'aBc'\n    assert remove_lowercase('AaBcA') == 'aBcA'\n\nif __name__ == '__main__':\n    test()"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "# https://leetcode.com/problems/remove-lowercase/\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        return ''.join(ch for ch in s if ch.isupper())\n\ndef main():\n    s = Solution()\n    print(s.removeLowercase(\"aBc def\"))\n    print(s.removeLowercase(\"abcdef\"))\n    print(s.removeLowercase(\"abcdefghijklmnopqrstuvwxyz\"))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 88,
      "score": 2.0,
      "candidate": "# Definition for a substring.\nclass Substring:\n    def __init__(self, s: str, start: int, end: int):\n        self.s = s\n        self.start = start\n        self.end = end\n\n    def __str__(self):\n        return self.s[self.start:self.end]\n\n    def __repr__(self):\n        return str(self)\n\n\nclass Solution:\n    def removeLowcaseLetters(self, s: str) -> str:\n        s = s.lower()\n        s = ''.join(c for c in s if c.isalpha())\n        return s\n\n\n# TESTS\nfor s, expected in [\n    [\"a\", \"a\"],\n    [\"a\", \"A\"],\n    [\"abc\", \"abc\"],\n    [\"a\", \"A\"],\n    [\"abc\", \"abc\"],\n    [\"aBc\", \"aBC\"],\n    [\"abC\", \"ABC\"],\n]:\n    sol = Solution()\n    actual = sol.removeLowcaseLetters(s)\n    print(\"Remove lowercase letters from\", s, \"->\", actual)\n    assert actual == expected"
    },
    {
      "rank": 89,
      "score": 1.0,
      "candidate": "def remove_lowercase(s):\n    return re.sub(r'[a-z]', '', s)\n\n# TEST CASES\n\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == 'hello world'\n# remove_lowercase('Hello World') == '"
    },
    {
      "rank": 90,
      "score": 1.0,
      "candidate": "class Solution:\n    def removeLowercase(self, s: str) -> str:\n        \"\"\"\n        Brute force:\n        1. Check if the character is lowercase.\n        2. If so, check if the substring is lowercase.\n        3. If so, remove it.\n        4. Otherwise, keep it.\n        \n        Time complexity: O(n)\n        Space complexity: O(n)\n        \"\"\"\n        def removeLowercase(s: str, i: int, j: int) -> int:\n            if i == j:\n                return i + 1\n            if s[i] == s[j]:\n                return removeLowercase(s, i + 1, j + 1)\n            return j + 1\n        \n        return ''.join(ch for ch in s if ch.isupper())\n\n\nclass Solution:\n    def removeLowercase(self, s: str) -> str:\n        \"\"\"\n        Brute force:\n        1. Check if the character is lowercase.\n        2. If so, check if the substring is lowercase.\n        3. If so, remove it.\n        4. Otherwise, keep it.\n        \n        Time complexity: O(n)\n        Space complexity: O(n)\n        \"\"\"\n        def removeLowercase(s: str, i: int, j: int) -> int:\n            if i == j:\n                return i + 1\n            if s[i] == s[j]:\n                return removeLowercase(s, i + 1, j + 1)\n            return j + 1\n        \n        return ''.join(ch for ch in s if ch.isupper())"
    },
    {
      "rank": 91,
      "score": 1.0,
      "candidate": "# https://leetcode.com/problems/remove-all-lowercase-words/discuss/231488/Python-DP-solution-with-regex\n\nclass Solution:\n    def removeLowercaseWords(self, s: str) -> str:\n        \"\"\"\n        Do not return anything, modify s in-place instead\n        \"\"\"\n        if not s:\n            return s\n        \n        # dp[i][j] = true if i-1, j-1, i-2, j-2, i-3, j-3, i-4, j-4 substring is all lowercase.\n        # dp[i][j] = dp[i-1][j-1] and dp[i-2][j-2] and dp[i-3][j-3] and dp[i-4][j-4]\n        dp = [[False] * len(s) for _ in range(len(s)+1)]\n        \n        for i in range(1, len(s)+1):\n            for j in range(1, len(s)+1):\n                if i == 1 or j == 1:\n                    dp[i][j] = False\n                else:\n                    if s[i-1] == s[j-1] and dp[i-1][j-1]:\n                        dp[i][j] = True\n                    else:\n                        dp[i][j] = dp[i-1][j] and dp[i][j-1] and dp[i-2][j] and dp[i-3][j-1] and dp[i-4][j-2]\n        \n        # print(dp)\n        # print(s)\n        return \"\".join([x for x in s if dp[len(s)-1][len(s)-1]])"
    },
    {
      "rank": 92,
      "score": 1.0,
      "candidate": "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\n\"\"\"\nGiven a string, remove all lowercase substrings.\n\nNote:\n    The string contains only lowercase English letters.\n    The length of the string is less than 1,000.\n    The string could be empty.\n\"\"\"\n\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        if not s:\n            return s\n        s = s.lower()\n        r = []\n        for c in s:\n            if c.isalpha():\n                r.append(c)\n        return \"\".join(r)\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print(s.removeLowercase(\"\"))\n    print(s.removeLowercase(\"a\"))\n    print(s.removeLowercase(\"aa\"))\n    print(s.removeLowercase(\"aaabbbccc\"))\n    print(s.removeLowercase(\"aaabbbcccdddeee\"))"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "__author__ = 'Danyang'\n\n\nclass Solution(object):\n    def removeLowercaseSubstrings(self, s):\n        \"\"\"\n        use regex\n        :param s: str\n        :return: str\n        \"\"\"\n        res = []\n        for i in range(len(s)):\n            if not s[i].isalpha() and not s[i].isdigit():\n                res.append(s[:i])\n                s = s[i:]\n        return ''.join(res)\n\n    def removeLowercaseSubstrings2(self, s):\n        \"\"\"\n        use regex\n        :param s: str\n        :return: str\n        \"\"\"\n        res = []\n        for i in range(len(s)):\n            if s[i].isalpha():\n                res.append(s[:i])\n                s = s[i:]\n        return ''.join(res)\n\n\nif __name__ == \"__main__\":\n    assert Solution().removeLowercaseSubstrings('abcde') == 'abcde'\n    assert Solution().removeLowercaseSubstrings('abcdefg') == 'abcdefg'\n    assert Solution().removeLowercaseSubstrings('abcdeabcdefg') == 'abcdefg'"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def remove_lowercase(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    return ''.join(c for c in string if c.isupper())\n\n# Your RemoveLowercase function should return the same string\n\n# Example\n# remove_lowercase(\"lowercase\") == \"lowercase\"\n# remove_lowercase(\"Some String\") == \"some string\""
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "# https://leetcode.com/problems/remove-duplicates-from-sorted-array/\n\nclass Solution(object):\n    def removeDuplicates(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        res = []\n        if not s:\n            return ''\n        n = len(s)\n        i = 0\n        while i < n:\n            if s[i]!= s[i+1]:\n                res.append(s[i])\n                i += 2\n            else:\n                i += 1\n        return ''.join(res)"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def remove_lowercase(string):\n    # TODO: implement it\n    pass\n\nif __name__ == '__main__':\n    print remove_lowercase('hello')"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def remove_lowercase(string):\n    \"\"\"\n    :type string: str\n    :rtype: str\n    \"\"\"\n    # regex to match lower case\n    pattern = re.compile('[a-z]')\n    return string.replace(pattern, '')\n\n\nif __name__ == '__main__':\n    assert remove_lowercase('abc') == 'abc'\n    assert remove_lowercase('abc123') == 'abc123'\n    assert remove_lowercase('abc123abc') == 'abc123'\n    assert remove_lowercase('abc123abc123abc') == 'abc123abc123abc'"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "# Example 1\n# Input: \"Hello world\"\n# Output: \"hello world\"\n# Example 2\n# Input: \"Hello World\"\n# Output: \"hello world\"\n# Example 3\n# Input: \"Hello WorlD\"\n# Output: \"hello world\"\n# Example 4\n# Input: \"HELLOWORLD\"\n# Output: \"HELLOWORLD\"\n# Example 5\n# Input: \"HELLOWORLD\"\n# Output: \"HELLOWORLD\"\n# Example 6\n# Input: \"Hello world\"\n# Output: \"Hello World\"\n# Example 7\n# Input: \"Hello world\"\n# Output: \"Hello World\"\n# Example 8\n# Input: \"Hello world\"\n# Output: \"Hello World\"\n# Example 9\n# Input: \"Hello world\"\n# Output: \"Hello World\"\n\ndef remove_lowercase_substrings(string):\n    pattern = re.compile(r'[a-z]')\n    return pattern.sub('', string)\n\n# Test cases\nprint(remove_lowercase_substrings(\"Hello world\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"Hello WorlD\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"Hello world\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"Hello world\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"Hello World\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"Hello World\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"HELLOWORLD\"))\nprint(remove_lowercase_substrings(\"HELLOWOR"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "# https://www.hackerrank.com/challenges/remove-lowercase\n# https://www.hackerrank.com/challenges/remove-uppercase\n# https://www.hackerrank.com/challenges/remove-lowercase-regex\n# https://www.hackerrank.com/challenges/remove-uppercase-regex\n# https://www.hackerrank.com/challenges/remove-lowercase-regex/problem\n# https://www.hackerrank.com/challenges/remove-uppercase-regex/problem\n\ndef remove_lowercase(string):\n    # Remove lowercase substrings.\n    # Return the string with lowercase substrings removed.\n    # Input:\n    #   string = \"aabbcc\"\n    #   string = \"cbaabb\"\n    # Output:\n    #   \"abbcc\"\n    #   \"cc\"\n    #   \"aabbcc\"\n    #   \"cbaabb\"\n    #   \"cbaabb\"\n    #   \"cbaabb\"\n\n    # Iterate through the string and remove the lowercase substrings.\n    for i in range(len(string)):\n        # If the character is lowercase, replace it with an empty string.\n        if string[i].islower():\n            string = string[:i] + string[i+1:]\n    return string\n\n\n# print(remove_lowercase(\"aabbcc\"))\n# print(remove_lowercase(\"cbaabb\"))\n# print(remove_lowercase(\"aabbcc\"))\n# print(remove_lowercase(\"cbaabb\"))\n\n# test_case = \"abbcc\"\n# test_case = \"cbaabb\"\n# test_case = \"aabbcc\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n# test_case = \"cbaabb\"\n\n# remove_lowercase(test_case)"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "# TODO:\n# - use a list for storing the lowercase substrings to remove\n# - implement a function to remove all lowercase substrings from a given string\n# - use a regex to remove all lowercase substrings\n# - use a regex to remove all lowercase substrings from a given string\n\nclass Solution(object):\n    def removeLowercase(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        # TODO:\n        # - use a list for storing the lowercase substrings to remove\n        # - implement a function to remove all lowercase substrings from a given string\n        # - use a regex to remove all lowercase substrings from a given string\n        # - use a regex to remove all lowercase substrings from a given string\n        # - use a regex to remove all lowercase substrings from a given string\n        return s\n\n\nif __name__ == '__main__':\n    Solution().removeLowercase(\"abc\")\n    Solution().removeLowercase(\"abC\")\n    Solution().removeLowercase(\"aBc\")\n    Solution().removeLowercase(\"aBC\")\n    Solution().removeLowercase(\"aBc\")\n    Solution().removeLowercase(\"A\")"
    }
  ]
}