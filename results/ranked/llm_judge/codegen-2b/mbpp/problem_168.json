{
  "timestamp": "2025-09-14T18:36:38.281713",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "mbpp",
  "problem_number": 168,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "import math\n\n\ndef is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if math.gcd(n, 11)!= 1:\n        return False\n    return True\n\nif __name__ == '__main__':\n    assert is_keith_number(2)\n    assert is_keith_number(3)\n    assert is_keith_number(4)\n    assert is_keith_number(6)\n    assert is_keith_number(8)\n    assert is_keith_number(9)\n    assert is_keith_number(10)\n    assert is_keith_number(11)\n    assert is_keith_number(12)\n    assert is_keith_number(13)\n    assert is_keith_number(14)\n    assert is_keith_number(15)\n    assert is_keith_number(16)\n    assert is_keith_number(17)\n    assert is_keith_number(18)\n    assert is_keith_number(19)\n    assert is_keith_number(20)\n    assert is_keith_number(21)\n    assert is_keith_number(22)\n    assert is_keith_number(23)\n    assert is_keith_number(24)\n    assert is_keith_number(25)\n    assert is_keith_number(26)\n    assert is_keith_number(27)\n    assert is_keith_number(28)\n    assert is_keith_number(29)\n    assert is_keith_number(30)\n    assert is_keith_number(31)\n    assert is_keith_number(32)\n    assert is_keith_number(33)\n    assert is_keith_number(34)\n    assert is_keith_number"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "# https://www.hackerrank.com/challenges/keith-numbers\n# https://www.reddit.com/r/dailyprogrammer/comments/4zk1zd/20150907_challenge_56_intermediate_solutions/\n\ndef keith_number(n):\n    # A keith number is a number that is equal to the sum of its digits\n    # multiplied by its own value.\n    # For example, 7 is a keith number because 7 = 7 * 7 = 49.\n    # For example, 8 is not a keith number because 8!= 8 * 8 = 64.\n    # For example, 13 is a keith number because 13 = 13 * 13 = 262.\n    # For example, 23 is a keith number because 23 = 23 * 23 = 462.\n    # For example, 36 is a keith number because 36 = 36 * 36 = 1296.\n    # For example, 54 is a keith number because 54 = 54 * 54 = 1512.\n    # For example, 63 is a keith number because 63 = 63 * 63 = 1596.\n    # For example, 96 is a keith number because 96 = 96 * 96 = 3456.\n    # For example, 100 is a keith number because 100 = 100 * 100 = 4100.\n    # For example, 200 is a keith number because 200 = 200 * 200 = 8200.\n    # For example, 1000 is a keith number because 1000 = 1000 * 1000 = 400000.\n    # For example, 1001 is not a keith number because 1001!= 1001 * 1001 = 410001.\n    # For example, 987 is not a keith number because 987!= 987 * 987 = 4987.\n    # For example, 999 is a keith number because 999 = 999 * 999 = 499999.\n    # For example, 1001 is a keith number because 1001 = 1001 * 1001 = 410001.\n    # For example, 987 is not a keith number because 987!= 987 * 987 = 4987.\n    # For example, 987 is not a keith number because 987!= 987 * 987 = 4987.\n    # For example, 987 is not a keith number because 987"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "# Definition for a keith number.\nclass keithNumber(object):\n    def __init__(self, num):\n        \"\"\"\n        :type num: int\n        \"\"\"\n        self.num = num\n        self.is_keith = False\n\n    def is_keith(self):\n        \"\"\"\n        :rtype: bool\n        \"\"\"\n        if self.is_keith:\n            return True\n        else:\n            return False\n\n    def get_keith_num(self):\n        \"\"\"\n        :rtype: int\n        \"\"\"\n        return self.num\n\n\nclass Solution(object):\n    def is_keith(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        n = abs(num)\n        if n % 2 == 0:\n            if n == 2:\n                return True\n            if n == 4:\n                return True\n            if n == 6:\n                return True\n            if n == 8:\n                return True\n        return False\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.is_keith(0)\n    print s.is_keith(1)\n    print s.is_keith(2)\n    print s.is_keith(3)\n    print s.is_keith(4)\n    print s.is_keith(5)\n    print s.is_keith(6)\n    print s.is_keith(7)\n    print s.is_keith(8)\n    print s.is_keith(9)\n    print s.is_keith(10)\n    print s.is_keith(11)\n    print s.is_keith(12)\n    print s.is_keith(13)\n    print s.is_keith(14)\n    print s.is_keith(15)\n    print s.is_keith(16)\n    print s.is_keith(17)\n    print s.is_keith(18)\n    print s.is_keith(19)\n    print s.is_keith(20)\n    print s"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "# https://www.codewars.com/kata/keith-number/train/python\n\ndef is_keith_number(n):\n    if n % 2 == 0 and n % 3 == 0 and n % 5 == 0 and n % 7 == 0:\n        return True\n    else:\n        return False\n\nprint(is_keith_number(10))\nprint(is_keith_number(20))\nprint(is_keith_number(30))\nprint(is_keith_number(50))\nprint(is_keith_number(60))\nprint(is_keith_number(70))\nprint(is_keith_number(80))\nprint(is_keith_number(90))\nprint(is_keith_number(100))\nprint(is_keith_number(110))\nprint(is_keith_number(120))\nprint(is_keith_number(130))\nprint(is_keith_number(140))\nprint(is_keith_number(150))\nprint(is_keith_number(160))\nprint(is_keith_number(170))\nprint(is_keith_number(180))\nprint(is_keith_number(190))\nprint(is_keith_number(200))\nprint(is_keith_number(210))\nprint(is_keith_number(220))\nprint(is_keith_number(230))\nprint(is_keith_number(240))\nprint(is_keith_number(250))\nprint(is_keith_number(260))\nprint(is_keith_number(270))\nprint(is_keith_number(280))\nprint(is_keith_number(290))\nprint(is_keith_number(300))\nprint(is_keith_number(310))\nprint(is_keith_number(320))\nprint(is_keith_number(330))\nprint(is_keith_number(340))\nprint(is_keith_number(350))\nprint(is_keith_number(360))\nprint(is_keith_number(370))\nprint(is_"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def isKeithSquare(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 0:\n            return False\n        if num % 2 == 0:\n            return num == 0 or self.isKeithSquare(num / 2)\n        else:\n            return self.isKeithSquare(num * num)\n\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.isKeithSquare(20)\n    print s.isKeithSquare(10)\n    print s.isKeithSquare(30)\n    print s.isKeithSquare(12)\n    print s.isKeithSquare(36)\n    print s.isKeithSquare(14)\n    print s.isKeithSquare(21)\n    print s.isKeithSquare(1)"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "from math import ceil\n\ndef is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    \n    cnt = 1\n    while n!= 0:\n        n, rem = divmod(n, 10)\n        cnt += rem\n    return cnt % 3 == 0\n\n\nif __name__ == '__main__':\n    assert is_keith_number(0)\n    assert is_keith_number(1)\n    assert is_keith_number(2)\n    assert is_keith_number(3)\n    assert is_keith_number(4)\n    assert is_keith_number(5)\n    assert is_keith_number(6)\n    assert is_keith_number(7)\n    assert is_keith_number(8)\n    assert is_keith_number(9)\n    assert is_keith_number(10)\n    assert is_keith_number(11)\n    assert is_keith_number(12)\n    assert is_keith_number(13)\n    assert is_keith_number(14)\n    assert is_keith_number(15)\n    assert is_keith_number(16)\n    assert is_keith_number(17)\n    assert is_keith_number(18)\n    assert is_keith_number(19)\n    assert is_keith_number(20)\n    assert is_keith_number(21)\n    assert is_keith_number(22)\n    assert is_keith_number(23)\n    assert is_keith_number(24)\n    assert is_keith_number(25)\n    assert is_keith_number(26)\n    assert is_keith_number(27)\n    assert is_keith_number(28)\n    assert is_keith_number(29)\n    assert is_keith_number(30)\n    assert is_keith_number(31)\n    assert is_keith_number(32)"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "# Definition for a keith number.\n# class KeithNumber(object):\n#     def __init__(self, x):\n#         self.x = x\n#         self.is_keith = True\n#         self.check()\n#\n#     def check(self):\n#         if self.x == 0:\n#             self.is_keith = False\n#         else:\n#             self.x -= 1\n#             if self.x % 2 == 0:\n#                 self.is_keith = True\n#             else:\n#                 self.is_keith = False\n#\n#\n# class Solution(object):\n#     def isKeithNumber(self, x):\n#         \"\"\"\n#         :type x: int\n#         :rtype: bool\n#         \"\"\"\n#         if x <= 0:\n#             return False\n#         if x == 1 or x == -1:\n#             return True\n#         if x % 2 == 0:\n#             return True\n#         return False\n\n# if __name__ == '__main__':\n#     print Solution().isKeithNumber(1)\n#     print Solution().isKeithNumber(-1)\n#     print Solution().isKeithNumber(0)\n#     print Solution().isKeithNumber(2)\n#     print Solution().isKeithNumber(3)\n#     print Solution().isKeithNumber(4)\n#     print Solution().isKeithNumber(5)\n#     print Solution().isKeithNumber(6)\n#     print Solution().isKeithNumber(7)\n#     print Solution().isKeithNumber(8)\n#     print Solution().isKeithNumber(9)\n#     print Solution().isKeithNumber(10)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "# Definition for a keith number.\nclass Number:\n    def __init__(self, x):\n        self.num = x\n        self.is_keith = False\n\n    def is_keith(self):\n        return self.is_keith\n\n\nclass Solution:\n    def isKeithNumber(self, x):\n        return self.is_keith_helper(x)\n\n    def is_keith_helper(self, x):\n        if x < 0:\n            return False\n        if x == 0:\n            return True\n        if x % 2 == 0:\n            return self.is_keith_helper(x/2)\n        if x % 3 == 0:\n            return self.is_keith_helper(x/3)\n        if x % 5 == 0:\n            return self.is_keith_helper(x/5)\n        if x % 7 == 0:\n            return self.is_keith_helper(x/7)\n        if x % 11 == 0:\n            return self.is_keith_helper(x/11)\n        return False\n\nif __name__ == '__main__':\n    assert Solution().isKeithNumber(1) == False\n    assert Solution().isKeithNumber(2) == False\n    assert Solution().isKeithNumber(3) == True\n    assert Solution().isKeithNumber(4) == False\n    assert Solution().isKeithNumber(5) == False\n    assert Solution().isKeithNumber(6) == False\n    assert Solution().isKeithNumber(7) == False\n    assert Solution().isKeithNumber(8) == True\n    assert Solution().isKeithNumber(9) == False\n    assert Solution().isKeithNumber(10) == False\n    assert Solution().isKeithNumber(11) == False\n    assert Solution().isKeithNumber(12) == False\n    assert Solution().isKeithNumber(13) == True\n    assert Solution().isKeithNumber(14) == False\n    assert Solution().isKeithNumber(15) == False\n    assert Solution().isKeithNumber(16) == False\n    assert Solution().isKeithNumber(17) =="
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "from math import sqrt\n\n\ndef keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if sqrt(n) == int(sqrt(n)):\n        return True\n    return keith_number(int(sqrt(n)))\n\n\nif __name__ == '__main__':\n    assert keith_number(0) == True\n    assert keith_number(1) == True\n    assert keith_number(2) == True\n    assert keith_number(3) == True\n    assert keith_number(4) == True\n    assert keith_number(5) == True\n    assert keith_number(6) == True\n    assert keith_number(7) == True\n    assert keith_number(8) == True\n    assert keith_number(9) == True\n    assert keith_number(10) == True\n    assert keith_number(11) == True\n    assert keith_number(12) == True\n    assert keith_number(13) == True\n    assert keith_number(14) == True\n    assert keith_number(15) == True\n    assert keith_number(16) == True\n    assert keith_number(17) == True\n    assert keith_number(18) == True\n    assert keith_number(19) == True\n    assert keith_number(20) == True\n    assert keith_number(21) == True\n    assert keith_number(22) == True\n    assert keith_number(23) == True\n    assert keith_number(24) == True\n    assert keith_number(25) == True\n    assert keith_number(26) == True\n    assert keith_number(27) == True\n    assert keith_number(28) == True\n    assert keith_number(29) == True\n    assert keith_number(30) == True\n    assert keith_number(31) == True\n    assert keith_number(32) == True"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "# Definition for a keith number.\nclass keithNumber(object):\n    def __init__(self, num):\n        \"\"\"\n        :type num: int\n        \"\"\"\n        self.num = num\n\n    def __repr__(self):\n        return \"%s\" % self.num\n\n    def __str__(self):\n        return \"%s\" % self.num\n\nclass Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num == 1:\n            return True\n        if num == 0:\n            return False\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        if num % 11 == 0:\n            return False\n        if num % 13 == 0:\n            return False\n        if num % 17 == 0:\n            return False\n        if num % 19 == 0:\n            return False\n        if num % 23 == 0:\n            return False\n        if num % 29 == 0:\n            return False\n        if num % 31 == 0:\n            return False\n        if num % 37 == 0:\n            return False\n        if num % 41 == 0:\n            return False\n        if num % 43 == 0:\n            return False\n        if num % 47 == 0:\n            return False\n        if num % 53 == 0:\n            return False\n        if num % 59 == 0:\n            return False\n        if num % 61 == 0:\n            return False\n        if num % 67 == 0:\n            return False\n        if num % 71 == 0:\n            return False\n        if num % 73 == 0:\n            return False\n        if num % 79 == 0:\n            return False\n        if num % 83 == 0:\n            return False\n        if num % 89 == 0:\n            return False\n        if num % 97 == 0:\n            return False\n        if num % 101 == 0:\n            return False\n        if num % 103 == 0:\n            return False\n        if num % 107 == 0:\n            return False"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "# Definition for a keith number.\nclass KNumber:\n    def __init__(self, x):\n        self.value = x\n\n    def __str__(self):\n        return str(self.value)\n\n    def __repr__(self):\n        return str(self.value)\n\n    def __eq__(self, other):\n        return self.value == other\n\n    def __hash__(self):\n        return hash(self.value)\n\n\nclass Solution:\n    # @param n, an integer\n    # @return a boolean\n    def isKeithNumber(self, n):\n        if n % 2 == 0:\n            return False\n        if n == 1:\n            return True\n        while n % 2 == 0:\n            n /= 2\n        while n % 3 == 0:\n            n /= 3\n        while n % 5 == 0:\n            n /= 5\n        while n % 7 == 0:\n            n /= 7\n        if n % 11 == 0:\n            return False\n        return True"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "class Solution(object):\n    def isKeithSquare(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 0:\n            return False\n        if num == 0:\n            return True\n        if num == 1:\n            return True\n        if num == 2:\n            return True\n        if num == 3:\n            return True\n        if num == 4:\n            return True\n        if num == 5:\n            return True\n        if num == 6:\n            return True\n        if num == 7:\n            return True\n        if num == 8:\n            return True\n        if num == 9:\n            return True\n        if num % 2 == 0:\n            return self.isKeithSquare(num / 2)\n        else:\n            return self.isKeithSquare(num - 1)"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "import math\n\ndef is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    if n % 2 == 0 or n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return False\n    if math.sqrt(n) == int(math.sqrt(n)):\n        return False\n    for i in range(1, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    assert is_keith_number(0) == False\n    assert is_keith_number(1) == True\n    assert is_keith_number(2) == False\n    assert is_keith_number(3) == False\n    assert is_keith_number(4) == True\n    assert is_keith_number(5) == False\n    assert is_keith_number(6) == False\n    assert is_keith_number(7) == False\n    assert is_keith_number(8) == False\n    assert is_keith_number(9) == True\n    assert is_keith_number(10) == False\n    assert is_keith_number(11) == False\n    assert is_keith_number(12) == False\n    assert is_keith_number(13) == True\n    assert is_keith_number(14) == False\n    assert is_keith_number(15) == False\n    assert is_keith_number(16) == False\n    assert is_keith_number(17) == False\n    assert is_keith_number(18) == False\n    assert is_keith_number(19) == False\n    assert is_keith_number(20) == False\n    assert is_keith_number(21) == False\n    assert is_keith_number(22) == True\n    assert is_keith_number(23) == False\n    assert is_keith_number("
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def is_keith_number(n):\n    if n == 0 or n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    return True\n\n# Test cases\nassert is_keith_number(0)\nassert not is_keith_number(1)\nassert is_keith_number(2)\nassert not is_keith_number(3)\nassert is_keith_number(4)\nassert not is_keith_number(5)\nassert is_keith_number(6)\nassert not is_keith_number(7)\nassert is_keith_number(8)\nassert not is_keith_number(9)\nassert is_keith_number(10)\nassert not is_keith_number(11)\nassert is_keith_number(12)\nassert not is_keith_number(13)\nassert is_keith_number(14)\nassert not is_keith_number(15)"
    },
    {
      "rank": 15,
      "score": 9.986386105138218,
      "candidate": "class Solution:\n    \"\"\"\n    @param: num: A positive integer\n    @return: A boolean\n    \"\"\"\n    def isKeithNumber(self, num):\n        # write your code here\n        if num < 3:\n            return True\n        if num % 2 == 0 or num % 3 == 0:\n            return False\n        \n        sum = 0\n        while num > 0:\n            sum += num % 10\n            num //= 10\n        return sum == sum % 4\n\n# print(Solution().isKeithNumber(9))\n# print(Solution().isKeithNumber(10))\n# print(Solution().isKeithNumber(11))\n# print(Solution().isKeithNumber(12))\n# print(Solution().isKeithNumber(13))\n# print(Solution().isKeithNumber(14))\n# print(Solution().isKeithNumber(15))\n# print(Solution().isKeithNumber(16))\n# print(Solution().isKeithNumber(17))\n# print(Solution().isKeithNumber(18))\n# print(Solution().isKeithNumber(19))\n# print(Solution().isKeithNumber(20))\n# print(Solution().isKeithNumber(21))\n# print(Solution().isKeithNumber(22))\n# print(Solution().isKeithNumber(23))\n# print(Solution().isKeithNumber(24))\n# print(Solution().isKeithNumber(25))\n# print(Solution().isKeithNumber(26))\n# print(Solution().isKeithNumber(27))\n# print(Solution().isKeithNumber(28))\n# print(Solution().isKeithNumber(29))\n# print(Solution().isKeithNumber(30))\n# print(Solution().isKeithNumber(31))\n# print(Solution().isKeithNumber(32))\n# print(Solution().isKeithNumber(33))\n# print(Solution().isKeithNumber(34))\n# print(Solution().isKeithNumber(35))\n# print(Solution().isKeithNumber(36))\n# print(Solution().isKeithNumber(37))\n# print(Solution().isKeithNumber(38))\n# print(Solution().isKeithNumber"
    },
    {
      "rank": 16,
      "score": 9.972636153799472,
      "candidate": "class Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 0:\n            return False\n        if num == 0:\n            return True\n        if num % 3 == 0:\n            if num % 5 == 0:\n                return True\n            else:\n                return False\n        else:\n            return False\n\na = Solution()\nprint a.isKeithNumber(10)\nprint a.isKeithNumber(11)\nprint a.isKeithNumber(12)\nprint a.isKeithNumber(13)\nprint a.isKeithNumber(14)\nprint a.isKeithNumber(15)\nprint a.isKeithNumber(16)\nprint a.isKeithNumber(17)\nprint a.isKeithNumber(18)\nprint a.isKeithNumber(19)\nprint a.isKeithNumber(20)"
    },
    {
      "rank": 17,
      "score": 9.956053652692468,
      "candidate": "def is_keith_number(n):\n    if n < 0:\n        return False\n    \n    if n == 0:\n        return True\n    \n    for x in range(2, n):\n        if n % x == 0:\n            return False\n    \n    return True\n    \nprint(is_keith_number(100))\nprint(is_keith_number(101))\nprint(is_keith_number(102))\nprint(is_keith_number(103))\nprint(is_keith_number(104))\nprint(is_keith_number(105))\nprint(is_keith_number(106))\nprint(is_keith_number(107))\nprint(is_keith_number(108))\nprint(is_keith_number(109))\nprint(is_keith_number(110))\nprint(is_keith_number(111))\nprint(is_keith_number(112))\nprint(is_keith_number(113))\nprint(is_keith_number(114))\nprint(is_keith_number(115))\nprint(is_keith_number(116))\nprint(is_keith_number(117))\nprint(is_keith_number(118))\nprint(is_keith_number(119))\nprint(is_keith_number(120))\nprint(is_keith_number(121))\nprint(is_keith_number(122))\nprint(is_keith_number(123))\nprint(is_keith_number(124))\nprint(is_keith_number(125))\nprint(is_keith_number(126))\nprint(is_keith_number(127))\nprint(is_keith_number(128))\nprint(is_keith_number(129))\nprint(is_keith_number(130))\nprint(is_keith_number(131))\nprint(is_keith_number(132))\nprint(is_keith_number(133))\nprint(is_keith_number(134))\nprint(is_keith_number(135))\nprint(is_keith_number(136"
    },
    {
      "rank": 18,
      "score": 9.91102795635931,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    Check if num is a keith number.\n\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    return num == sum(map(int, str(num)))\n\nif __name__ == '__main__':\n    assert is_keith_number(0) == True\n    assert is_keith_number(1) == True\n    assert is_keith_number(2) == True\n    assert is_keith_number(3) == False\n    assert is_keith_number(4) == False\n    assert is_keith_number(5) == False\n    assert is_keith_number(6) == False\n    assert is_keith_number(7) == False\n    assert is_keith_number(8) == False\n    assert is_keith_number(9) == True\n    assert is_keith_number(10) == False\n    assert is_keith_number(11) == False\n    assert is_keith_number(12) == False\n    assert is_keith_number(13) == False\n    assert is_keith_number(14) == False\n    assert is_keith_number(15) == False\n    assert is_keith_number(16) == False\n    assert is_keith_number(17) == False\n    assert is_keith_number(18) == False\n    assert is_keith_number(19) == False\n    assert is_keith_number(20) == False\n    assert is_keith_number(21) == False\n    assert is_keith_number(22) == False\n    assert is_keith_number(23) == False\n    assert is_keith_number(24) == False\n    assert is_keith_number(25) == False\n    assert is_keith_number(26) == False\n    assert is_keith_number(27) == False\n    assert is_keith_number(28) == False\n    assert is_keith_number(29) == False\n    assert is_keith_number(30) == False\n    assert is_keith_number"
    },
    {
      "rank": 19,
      "score": 9.889156375078555,
      "candidate": "class Solution(object):\n    def isKeithSquare(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        # if num < 1 or num > 1000:\n        #     return False\n        # if num == 1:\n        #     return True\n        # if num % 2 == 0:\n        #     if num % 3 == 0:\n        #         return False\n        #     else:\n        #         return True\n        # else:\n        #     return False\n        if num == 1 or num == 2:\n            return True\n        if num % 2 == 0:\n            if num % 3 == 0:\n                return False\n            else:\n                return True\n        else:\n            return False"
    },
    {
      "rank": 20,
      "score": 9.85099890180978,
      "candidate": "from math import sqrt\n\n\ndef is_keith_number(x):\n    \"\"\"\n    :type x: int\n    :rtype: bool\n    \"\"\"\n    if x < 0:\n        return False\n    if x == 0:\n        return True\n    sqrt_x = sqrt(x)\n    sqrt_x_minus_1 = sqrt(x-1)\n    return sqrt_x_minus_1 == sqrt(sqrt_x_minus_1)"
    },
    {
      "rank": 21,
      "score": 9.821599733344717,
      "candidate": "def is_keith_number(n):\n    if n == 1:\n        return False\n    if n % 2 == 0:\n        return True\n    if n == 2:\n        return True\n    if n % 3 == 0:\n        return True\n    if n == 3:\n        return True\n    if n % 5 == 0:\n        return True\n    if n == 5:\n        return True\n    if n % 7 == 0:\n        return True\n    if n == 7:\n        return True\n    if n % 11 == 0:\n        return True\n    if n == 11:\n        return True\n    if n % 13 == 0:\n        return True\n    if n == 13:\n        return True\n    if n % 17 == 0:\n        return True\n    if n == 17:\n        return True\n    if n % 19 == 0:\n        return True\n    if n == 19:\n        return True\n    if n % 23 == 0:\n        return True\n    if n == 23:\n        return True\n    if n % 29 == 0:\n        return True\n    if n == 29:\n        return True\n    if n % 31 == 0:\n        return True\n    if n == 31:\n        return True\n    if n % 37 == 0:\n        return True\n    if n == 37:\n        return True\n    if n % 41 == 0:\n        return True\n    if n == 41:\n        return True\n    return False\n\n\ndef keith_number_test():\n    assert is_keith_number(1) == False\n    assert is_keith_number(2) == True\n    assert is_keith_number(3) == True\n    assert is_keith_number(4) == True\n    assert is_keith_number(5) == True\n    assert is_keith_number(6) == True\n    assert is_keith_number(7) == True\n    assert is_keith_number(8) == True\n    assert is_keith_number(9) == True\n    assert is_keith_number(10) == True\n    assert is_keith_number(11) == True\n    assert is_keith_number("
    },
    {
      "rank": 22,
      "score": 9.809332323437877,
      "candidate": "import sys\nimport math\n\n\n# @include\ndef is_keith_number(n):\n    n = int(n)\n    if n == 0:\n        return True\n    if n < 0:\n        return False\n\n    n_square = n * n\n    n_cube = n * n * n\n    if n_square > n_cube:\n        return False\n\n    if n_cube < n:\n        return False\n\n    if n_cube == n:\n        return True\n\n    if n_square < n:\n        return False\n\n    return True\n# @exclude\n\n\ndef main():\n    for n in [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 20, 24, 30, 40, 50, 60, 70, 80, 90, 100, 1000]:\n        if is_keith_number(n):\n            print(n, \"is a keith number\")\n        else:\n            print(n, \"is not a keith number\")\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 23,
      "score": 9.803057317056014,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num <= 0:\n        return False\n    if num == 1:\n        return True\n    if num % 2 == 0:\n        return False\n    if num % 3 == 0:\n        return False\n    if num % 5 == 0:\n        return False\n    if num % 7 == 0:\n        return False\n    if num % 11 == 0:\n        return False\n    if num % 13 == 0:\n        return False\n    if num % 17 == 0:\n        return False\n    if num % 19 == 0:\n        return False\n    if num % 23 == 0:\n        return False\n    if num % 29 == 0:\n        return False\n    if num % 31 == 0:\n        return False\n    if num % 37 == 0:\n        return False\n    if num % 41 == 0:\n        return False\n    if num % 43 == 0:\n        return False\n    if num % 47 == 0:\n        return False\n    if num % 53 == 0:\n        return False\n    if num % 59 == 0:\n        return False\n    if num % 61 == 0:\n        return False\n    if num % 67 == 0:\n        return False\n    if num % 71 == 0:\n        return False\n    if num % 73 == 0:\n        return False\n    if num % 79 == 0:\n        return False\n    if num % 83 == 0:\n        return False\n    if num % 89 == 0:\n        return False\n    if num % 97 == 0:\n        return False\n    if num % 101 == 0:\n        return False\n    if num % 103 == 0:\n        return False\n    if num % 107 == 0:\n        return False\n    if num % 109 == 0:\n        return False\n    if num % 113 == 0:\n        return False\n    if num % 127 == 0:\n        return False\n    if num % 131 == 0:\n        return False\n    if num % 137 == 0:\n        return False\n    if num % 139 == 0:\n        return False\n    if num % 149 == 0:\n        return False\n    if num"
    },
    {
      "rank": 24,
      "score": 9.798691122568526,
      "candidate": "def is_keith_number(num):\n  if num < 0:\n    return False\n  return str(num) == str(int(str(num)) + 1)\n\n\n# test cases\ntest_cases = [\n    [0, True],\n    [1, False],\n    [2, True],\n    [3, True],\n    [4, True],\n    [5, True],\n    [6, False],\n    [7, False],\n    [8, False],\n    [9, False],\n    [10, True],\n    [11, False],\n    [12, False],\n    [13, True],\n    [14, True],\n    [15, True],\n    [16, False],\n    [17, False],\n    [18, False],\n    [19, False],\n    [20, True],\n    [21, True],\n    [22, True],\n    [23, True],\n    [24, False],\n    [25, False],\n    [26, False],\n    [27, False],\n    [28, False],\n    [29, True],\n    [30, True],\n    [31, True],\n    [32, True],\n    [33, False],\n    [34, False],\n    [35, False],\n    [36, False],\n    [37, False],\n    [38, False],\n    [39, True],\n    [40, True],\n    [41, False],\n    [42, False],\n    [43, False],\n    [44, False],\n    [45, True],\n    [46, True],\n    [47, True],\n    [48, True],\n    [49, True],\n    [50, True],\n    [51, True],\n    [52, True],\n    [53, False],\n    [54, False],\n    [55, False],\n    [56, False],\n    [57, False],\n    [58, False],\n    [59, False],\n    [60, False],\n    [61, True],\n    [62, True],\n    [63, True],\n    [64, True],\n    [65, False"
    },
    {
      "rank": 25,
      "score": 9.79313456468043,
      "candidate": "# https://www.hackerrank.com/challenges/keith-numbers/problem\n\n# The number is keith number if and only if it is a multiple of 10^3\n# or a multiple of 10^5 and is divisible by 1, 3, 5, 7, 9.\n\ndef is_keith(n):\n    return n % 10**3 == 0 or n % 10**5 == 0 and n % 10 == 0 and n % 3 == 0 and n % 5 == 0 and n % 7 == 0 and n % 9 == 0\n\n\n# Complete the keith_numbers function below.\ndef keith_numbers(n):\n    return [x for x in range(1, n+1) if is_keith(x)]\n\nif __name__ == \"__main__\":\n    test_cases = [\n        [2],\n        [3],\n        [5],\n        [10],\n        [100],\n        [1000],\n        [10000],\n        [100000],\n        [100000000],\n        [1000000000]\n    ]\n\n    for test_case in test_cases:\n        print(keith_numbers(*test_case))"
    },
    {
      "rank": 26,
      "score": 9.771757297830854,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 1:\n        return False\n    if n < 1:\n        return False\n    if n == 2:\n        return True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return False\n    if n % 11 == 0:\n        return False\n    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return False\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return False\n    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return False\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n        return False\n    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return False\n    if n % 53 == 0:\n        return False\n    if n % 59 == 0:\n        return False\n    if n % 61 == 0:\n        return False\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n        return False\n    if n % 73 == 0:\n        return False\n    if n % 79 == 0:\n        return False\n    if n % 83 == 0:\n        return False\n    if n % 89 == 0:\n        return False\n    if n % 97 == 0:\n        return False\n    if n % 101 == 0:\n        return False\n    if n % 103 == 0:\n        return False\n    if n % 107 == 0:\n        return False\n    if n % 109 == 0:\n        return False\n    if n % 113 == 0:\n        return False\n    if n % 127 == 0:\n        return False\n    if n % 131 == 0:\n        return False\n    if n % 137 == 0:\n        return False\n    if n % 139 == 0:\n        return False\n    if n % 149"
    },
    {
      "rank": 27,
      "score": 9.742769639883736,
      "candidate": "# Definition for a keith number.\nclass Toddable(object):\n    def __init__(self, value):\n        self.value = value\n        self.is_keith = False\n        self.next_keith = None\n\n    def __str__(self):\n        return str(self.value)\n\n    def __repr__(self):\n        return str(self.value)\n\n\nclass Solution(object):\n    def isKeithSpiralNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num <= 1:\n            return False\n        if num == 2:\n            return True\n        for i in range(2, num):\n            if num % i == 0:\n                if i == 2:\n                    return False\n                if not self.isKeithSpiralNumber(i):\n                    return False\n                if not self.isKeithSpiralNumber(i + num / i):\n                    return False\n        return True\n\n\nif __name__ == \"__main__\":\n    print Solution().isKeithSpiralNumber(2)\n    print Solution().isKeithSpiralNumber(3)\n    print Solution().isKeithSpiralNumber(4)\n    print Solution().isKeithSpiralNumber(5)"
    },
    {
      "rank": 28,
      "score": 9.69277243090059,
      "candidate": "class Solution:\n    # @param {integer} n\n    # @return {boolean}\n    def isKeithNumber(self, n):\n        if n < 2:\n            return False\n        if n == 2:\n            return True\n        if n % 2 == 0:\n            return False\n        for i in range(3, n + 1, 2):\n            if n % i == 0:\n                return False\n        return True\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.isKeithNumber(2)\n    print s.isKeithNumber(3)\n    print s.isKeithNumber(4)\n    print s.isKeithNumber(5)\n    print s.isKeithNumber(6)\n    print s.isKeithNumber(7)\n    print s.isKeithNumber(8)\n    print s.isKeithNumber(9)\n    print s.isKeithNumber(10)"
    },
    {
      "rank": 29,
      "score": 9.65495085130194,
      "candidate": "import math\n\ndef keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num == 0:\n        return False\n    sum = 0\n    for i in range(1, int(math.sqrt(num)) + 1):\n        if num % i == 0:\n            sum += i\n    if sum == num:\n        return True\n    return False\n\nif __name__ == '__main__':\n    print(keith_number(1))\n    print(keith_number(2))\n    print(keith_number(3))\n    print(keith_number(4))\n    print(keith_number(5))\n    print(keith_number(6))\n    print(keith_number(7))\n    print(keith_number(8))\n    print(keith_number(9))\n    print(keith_number(10))\n    print(keith_number(11))\n    print(keith_number(12))\n    print(keith_number(13))\n    print(keith_number(14))\n    print(keith_number(15))\n    print(keith_number(16))\n    print(keith_number(17))\n    print(keith_number(18))\n    print(keith_number(19))\n    print(keith_number(20))\n    print(keith_number(21))\n    print(keith_number(22))\n    print(keith_number(23))\n    print(keith_number(24))\n    print(keith_number(25))\n    print(keith_number(26))\n    print(keith_number(27))\n    print(keith_number(28))\n    print(keith_number(29))\n    print(keith_number(30))\n    print(keith_number(31))\n    print(keith_number(32))\n    print(keith_number(33))\n    print(keith_number(34))\n    print(keith_number(35))\n    print(keith_number(36))\n    print(ke"
    },
    {
      "rank": 30,
      "score": 9.61512417427292,
      "candidate": "class Solution:\n    # @param {integer} x\n    # @return {boolean}\n    def isKeithSquare(self, x):\n        if x < 2:\n            return False\n        if x == 2:\n            return True\n        if x % 2 == 0:\n            return False\n        if x % 4 == 0:\n            return False\n        if x % 8 == 0:\n            return False\n        if x % 16 == 0:\n            return False\n        if x % 32 == 0:\n            return False\n        if x % 64 == 0:\n            return False\n        if x % 128 == 0:\n            return False\n        return True"
    },
    {
      "rank": 31,
      "score": 9.598069846996758,
      "candidate": "# Definition for a keith number.\nclass Number:\n    def __init__(self, number):\n        self.number = number\n        self.is_keith = False\n\n    def is_keith(self):\n        return self.is_keith\n\n\nclass Solution(object):\n    def is_keith(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 0:\n            return False\n        if num == 0:\n            return True\n        if num % 2 == 0:\n            return False\n        for i in range(3, int(num ** 0.5) + 1, 2):\n            if num % i == 0:\n                return False\n        return True\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    nums = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9,\n        10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n        30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\n        50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\n        70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89,\n        90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109,\n        110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129,\n        130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142"
    },
    {
      "rank": 32,
      "score": 9.536079413011011,
      "candidate": "# The following is my solution to the keith number problem.\n# The solution is very simple.\n# We keep track of whether the number is even or odd,\n# and then we check if the sum of the digits is divisible by 2.\n# We use the sum of the digits to decide whether the number is a keith number.\n# If the sum is divisible by 2, the number is a keith number.\n# If the sum is not divisible by 2, the number is not a keith number.\n#\n# Time complexity: O(n)\n# Space complexity: O(1)\n#\n# def is_keith(n):\n#     sum = 0\n#     for i in range(len(str(n))):\n#         sum += int(str(n)[i])\n#     return sum % 2 == 0\n\ndef is_keith(n):\n    sum = 0\n    for i in range(len(str(n))):\n        sum += int(str(n)[i])\n    return sum % 2 == 0\n\nif __name__ == '__main__':\n    print(is_keith(1234))\n    print(is_keith(12345))\n    print(is_keith(123456))\n    print(is_keith(1234567))\n    print(is_keith(12345678))\n    print(is_keith(123456789))\n    print(is_keith(1234567890))\n    print(is_keith(12345678901))\n    print(is_keith(123456789012))\n    print(is_keith(1234567890123))\n    print(is_keith(12345678901234))\n    print(is_keith(123456789012345))\n    print(is_keith(1234567890123456))\n    print(is_keith(12345678901234567))\n    print(is_keith(123456789012345678))\n    print(is_keith(1234567890123456789))"
    },
    {
      "rank": 33,
      "score": 9.463324593492588,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    return n == sum(map(int, str(n)))\n\n\ndef keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 0:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n**0.5)+1):\n        if is_keith_number(n/i):\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert keith_number(10) == False\n    assert keith_number(11) == True\n    assert keith_number(123) == True\n    assert keith_number(12345) == True\n    assert keith_number(1234567) == False\n    assert keith_number(123456789) == False\n    assert keith_number(1234567891) == False\n    assert keith_number(12345678912) == False\n    assert keith_number(123456789123) == False\n    assert keith_number(12345678912345) == False\n    assert keith_number(1234567891234567) == False\n    assert keith_number(123456789123456789) == False"
    },
    {
      "rank": 34,
      "score": 9.443864319709794,
      "candidate": "import unittest\n\nclass Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 1:\n            return False\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        if num % 11 == 0:\n            return False\n        if num % 13 == 0:\n            return False\n        if num % 17 == 0:\n            return False\n        if num % 19 == 0:\n            return False\n        if num % 23 == 0:\n            return False\n        if num % 29 == 0:\n            return False\n        if num % 31 == 0:\n            return False\n        if num % 37 == 0:\n            return False\n        if num % 41 == 0:\n            return False\n        if num % 43 == 0:\n            return False\n        if num % 47 == 0:\n            return False\n        if num % 53 == 0:\n            return False\n        if num % 59 == 0:\n            return False\n        if num % 61 == 0:\n            return False\n        if num % 67 == 0:\n            return False\n        if num % 71 == 0:\n            return False\n        if num % 73 == 0:\n            return False\n        if num % 79 == 0:\n            return False\n        if num % 83 == 0:\n            return False\n        if num % 89 == 0:\n            return False\n        if num % 97 == 0:\n            return False\n        if num % 101 == 0:\n            return False\n        if num % 103 == 0:\n            return False\n        if num % 109 == 0:\n            return False\n        if num % 113 == 0:\n            return False\n        if num % 127 == 0:\n            return False\n        if num % 131 == 0:\n            return False\n        if num % 137 == 0:\n            return False\n        if num % 139 == 0:\n            return False\n        if num % 149 == 0:\n            return False\n        if num % 151 == 0:\n            return False"
    },
    {
      "rank": 35,
      "score": 9.438161643660377,
      "candidate": "class Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num == 0:\n            return False\n        if num < 0:\n            return False\n        if num % 3 == 0 or num % 5 == 0:\n            return False\n        for i in range(4, int(num**0.5) + 1, 4):\n            if num % i == 0:\n                return False\n        return True\n\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.isKeithNumber(-1)\n    print s.isKeithNumber(1)\n    print s.isKeithNumber(3)\n    print s.isKeithNumber(4)\n    print s.isKeithNumber(8)"
    },
    {
      "rank": 36,
      "score": 9.344531223645047,
      "candidate": "def is_keith_number(n):\n    # base case\n    if n <= 0:\n        return False\n    # base case\n    if n == 1:\n        return True\n    # base case\n    if n % 2 == 0:\n        return False\n    # base case\n    if n % 3 == 0:\n        return False\n    # base case\n    if n % 5 == 0:\n        return False\n    # base case\n    if n % 7 == 0:\n        return False\n    # base case\n    if n % 11 == 0:\n        return False\n    # base case\n    if n % 13 == 0:\n        return False\n    # base case\n    if n % 17 == 0:\n        return False\n    # base case\n    if n % 19 == 0:\n        return False\n    # base case\n    if n % 23 == 0:\n        return False\n    # base case\n    if n % 29 == 0:\n        return False\n    # base case\n    if n % 31 == 0:\n        return False\n    # base case\n    if n % 37 == 0:\n        return False\n    # base case\n    if n % 41 == 0:\n        return False\n    # base case\n    if n % 43 == 0:\n        return False\n    # base case\n    if n % 47 == 0:\n        return False\n    # base case\n    if n % 53 == 0:\n        return False\n    # base case\n    if n % 59 == 0:\n        return False\n    # base case\n    if n % 61 == 0:\n        return False\n    # base case\n    if n % 67 == 0:\n        return False\n    # base case\n    if n % 71 == 0:\n        return False\n    # base case\n    if n % 73 == 0:\n        return False\n    # base case\n    if n % 79 == 0:\n        return False\n    # base case\n    if n % 83 == 0:\n        return False\n    # base case\n    if n % 89 == 0:\n        return False\n    # base case\n    if n % 97 == 0:\n        return False\n    # base case\n    if n % 101 == 0:\n        return False"
    },
    {
      "rank": 37,
      "score": 9.330044740962162,
      "candidate": "class Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        # if num <= 0 or num % 2 == 0:\n        #     return False\n        # if num <= 10:\n        #     return True\n        # if num % 2 == 0:\n        #     return False\n        # if num % 3 == 0:\n        #     return False\n        # if num % 5 == 0:\n        #     return False\n        # if num % 7 == 0:\n        #     return False\n        # return True\n        return num % 10 == 0 or num % 11 == 0 or num % 12 == 0 or num % 13 == 0 or num % 14 == 0 or num % 15 == 0 or num % 16 == 0 or num % 17 == 0 or num % 18 == 0 or num % 19 == 0\n\n\nif __name__ == \"__main__\":\n    print Solution().isKeithNumber(2)\n    print Solution().isKeithNumber(3)\n    print Solution().isKeithNumber(4)\n    print Solution().isKeithNumber(5)\n    print Solution().isKeithNumber(6)\n    print Solution().isKeithNumber(7)\n    print Solution().isKeithNumber(8)\n    print Solution().isKeithNumber(9)\n    print Solution().isKeithNumber(10)\n    print Solution().isKeithNumber(11)\n    print Solution().isKeithNumber(12)\n    print Solution().isKeithNumber(13)\n    print Solution().isKeithNumber(14)\n    print Solution().isKeithNumber(15)\n    print Solution().isKeithNumber(16)\n    print Solution().isKeithNumber(17)\n    print Solution().isKeithNumber(18)\n    print Solution().isKeithNumber(19)\n    print Solution().isKeithNumber(20)"
    },
    {
      "rank": 38,
      "score": 9.255325352925686,
      "candidate": "# Definition for a keith number.\nclass KenNumber(object):\n    def __init__(self, number):\n        \"\"\"\n        :type number: int\n        \"\"\"\n        self.number = number\n        self.is_keith = True\n        self.factor = 1\n        self.is_prime = True\n        self.prime_factors = []\n        self.prime_factors.append(number)\n        self.prime_factors.append(number * number)\n        self.prime_factors.append(number * number * number)\n\n    def is_prime(self):\n        for i in range(2, int(math.sqrt(self.number)) + 1):\n            if self.number % i == 0:\n                self.prime_factors.append(i)\n                if self.number / i!= i:\n                    self.prime_factors.append(self.number / i)\n                break\n        return len(self.prime_factors) == 2\n\n    def is_keith(self):\n        if self.is_prime:\n            self.factor = self.number\n            for i in range(2, int(math.sqrt(self.number)) + 1):\n                if self.number % i == 0:\n                    self.factor = i\n                    break\n            if self.factor == self.number:\n                self.is_keith = False\n        return self.is_keith\n\n    def __str__(self):\n        if self.is_keith:\n            return str(self.number)\n        else:\n            return \"Not a keith number\"\n\n\ndef is_keith_number(number):\n    \"\"\"\n    :type number: int\n    :rtype: bool\n    \"\"\"\n    if number % 2 == 0:\n        number = number / 2\n    while number > 1:\n        if number % 2 == 0:\n            number = number / 2\n        else:\n            return False\n    return True\n\n\ndef keith_number_problem():\n    \"\"\"\n    :rtype: int\n    \"\"\"\n    for i in range(1, 1000000):\n        if is_keith_number(i):\n            print(i)\n    return"
    },
    {
      "rank": 39,
      "score": 9.074219027177483,
      "candidate": "import math\n\ndef keith_number(n):\n    return math.sqrt(n) == math.sqrt(n + 0.0)\n\nif __name__ == '__main__':\n    assert keith_number(0) == False\n    assert keith_number(1) == True\n    assert keith_number(2) == True\n    assert keith_number(3) == False\n    assert keith_number(4) == False\n    assert keith_number(5) == True\n    assert keith_number(6) == False\n    assert keith_number(7) == True\n    assert keith_number(8) == False\n    assert keith_number(9) == True\n    assert keith_number(10) == True\n    assert keith_number(11) == False\n    assert keith_number(12) == True\n    assert keith_number(13) == False\n    assert keith_number(14) == True\n    assert keith_number(15) == False\n    assert keith_number(16) == True\n    assert keith_number(17) == False\n    assert keith_number(18) == True\n    assert keith_number(19) == False\n    assert keith_number(20) == True\n    assert keith_number(21) == False\n    assert keith_number(22) == True\n    assert keith_number(23) == False\n    assert keith_number(24) == True\n    assert keith_number(25) == False\n    assert keith_number(26) == True\n    assert keith_number(27) == False\n    assert keith_number(28) == True\n    assert keith_number(29) == False\n    assert keith_number(30) == True\n    assert keith_number(31) == False\n    assert keith_number(32) == True\n    assert keith_number(33) == False\n    assert keith_number(34) == True\n    assert keith_number(35) == False\n    assert keith_number(36) == True\n    assert keith_number(37) == False\n    assert keith_number(38)"
    },
    {
      "rank": 40,
      "score": 8.967376877042874,
      "candidate": "def keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num < 0:\n        return False\n    for i in range(2, int(num**0.5)+1):\n        if num % i == 0:\n            return False\n    return True\n\nprint(keith_number(10))\nprint(keith_number(12))\nprint(keith_number(15))"
    },
    {
      "rank": 41,
      "score": 8.94692841965656,
      "candidate": "import math\n\ndef is_keith_number(number):\n    return number % 10 == 0 or math.sqrt(number) == math.floor(math.sqrt(number))\n\nif __name__ == \"__main__\":\n    for n in range(0, 10000):\n        if is_keith_number(n):\n            print n\n            break"
    },
    {
      "rank": 42,
      "score": 8.942765025877772,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    num = str(num)\n    if len(num) < 4:\n        return True\n    for i in range(len(num)):\n        if num[i]!= num[len(num) - i - 1]:\n            return False\n    return True\n\nif __name__ == \"__main__\":\n    num = int(input())\n    print(is_keith_number(num))\n    print(is_keith_number(int(input())))"
    },
    {
      "rank": 43,
      "score": 8.794984282093068,
      "candidate": "from math import sqrt\n\ndef is_keith_number(number):\n    \"\"\"\n    :type number: int\n    :rtype: bool\n    \"\"\"\n    n = number\n    while n > 0:\n        k = int(sqrt(n))\n        if k**2 == n:\n            return True\n        n -= k\n    return False\n\nif __name__ == '__main__':\n    n = int(input())\n    print(is_keith_number(n))"
    },
    {
      "rank": 44,
      "score": 8.776129787666047,
      "candidate": "def keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num == 0:\n        return False\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0 and not num % 11 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0 and not num % 11 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0 and not num % 11 == 0 and not num % 13 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0 and not num % 11 == 0 and not num % 13 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0 and not num % 11 == 0 and not num % 13 == 0 and not num % 17 == 0:\n    #     return True\n    # if not num % 2 == 0 and not num % 3 == 0 and not num % 5 == 0 and not num % 7 == 0 and not num % 11"
    },
    {
      "rank": 45,
      "score": 8.720703224058472,
      "candidate": "def keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 0 or n == 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nif __name__ == '__main__':\n    n = int(input('Enter a number : '))\n    if keith_number(n):\n        print('This number is a keith number.')\n    else:\n        print('This number is not a keith number.')"
    },
    {
      "rank": 46,
      "score": 8.705372252356433,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nif __name__ == '__main__':\n    n = int(input())\n    print(is_keith_number(n))"
    },
    {
      "rank": 47,
      "score": 8.66465854739868,
      "candidate": "class Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num <= 0:\n            return False\n        if num == 1:\n            return True\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        return True"
    },
    {
      "rank": 48,
      "score": 8.628914859263674,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 0:\n        return False\n    if n % 2 == 0:\n        return False\n    \n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True"
    },
    {
      "rank": 49,
      "score": 8.618955371702986,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    n = abs(n)\n    if n < 1:\n        return False\n    if n % 2 == 0:\n        return True\n    for i in range(3, int(n**0.5)+1, 2):\n        if n % i == 0:\n            return False\n    return True"
    },
    {
      "rank": 50,
      "score": 8.567400692960641,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    for i in range(1, n):\n        if n % i == 0:\n            return False\n    return True\n\nif __name__ == '__main__':\n    n = int(input())\n    print(is_keith_number(n))"
    },
    {
      "rank": 51,
      "score": 8.561274662897722,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    # If n is even, then n is not a keith number\n    if n % 2 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 3 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 5 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 7 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 11 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 13 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 17 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 19 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 23 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 29 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 31 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 37 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 41 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 43 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 47 == 0:\n        return False\n\n    # If n is odd, then n is a keith number\n    if n % 53 == 0:\n        return True\n\n    # If n is even, then n is not a keith number\n    if n % 59 == 0:"
    },
    {
      "rank": 52,
      "score": 8.557074011121657,
      "candidate": "from math import ceil\nfrom functools import reduce\n\ndef keith_number(n):\n    \"\"\"\n    Returns True if the number is keith number, False otherwise.\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    \n    for i in range(3, int(ceil(n ** 0.5)) + 1, 2):\n        if n % i == 0:\n            return False\n    \n    return True\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    \n    print(keith_number(10))\n    print(keith_number(11))\n    print(keith_number(12))\n    print(keith_number(13))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 53,
      "score": 8.554632994038675,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    return n == sum(int(i) * pow(n, i) for i in range(2, n + 1))\n\n# Your code here"
    },
    {
      "rank": 54,
      "score": 8.551288537526839,
      "candidate": "import math\n\ndef is_keith(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    return math.sqrt(n) == math.sqrt(n + 1)\n\n\nif __name__ == \"__main__\":\n    assert is_keith(0)\n    assert is_keith(1)\n    assert is_keith(2)\n    assert is_keith(3)\n    assert is_keith(4)\n    assert is_keith(5)\n    assert is_keith(6)\n    assert not is_keith(7)\n    assert not is_keith(8)\n    assert not is_keith(9)\n    assert not is_keith(10)\n    assert not is_keith(11)"
    },
    {
      "rank": 55,
      "score": 8.5451253386464,
      "candidate": "import math\n\n\ndef is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num == 0:\n        return False\n\n    if math.floor(math.sqrt(num)) == math.floor(math.sqrt(num)):\n        return True\n\n    for i in range(2, int(math.ceil(math.sqrt(num))) + 1):\n        if num % i == 0:\n            return False\n\n    return True\n\n\nif __name__ == '__main__':\n    print(is_keith_number(14))\n    print(is_keith_number(11))\n    print(is_keith_number(5))"
    },
    {
      "rank": 56,
      "score": 8.533203236985607,
      "candidate": "import math\nfrom euler import is_keith_number\n\n\ndef keith_number(number):\n    if number <= 0:\n        return False\n    if number == 1:\n        return True\n    if number % 2 == 0:\n        return False\n    return is_keith_number(number)\n\n\nif __name__ == \"__main__\":\n    print(keith_number(100))\n    print(keith_number(10000))"
    },
    {
      "rank": 57,
      "score": 8.502709660049035,
      "candidate": "def keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 0:\n        return False\n    if n % 2 == 0:\n        return False\n    sum = 0\n    for i in range(3, int(n**0.5) + 1, 2):\n        if n % i == 0:\n            sum += i\n    if sum == n:\n        return True\n    else:\n        return False\n\n\nif __name__ == \"__main__\":\n    assert keith_number(1) == False\n    assert keith_number(2) == False\n    assert keith_number(3) == True\n    assert keith_number(4) == True\n    assert keith_number(5) == True\n    assert keith_number(6) == True\n    assert keith_number(7) == False\n    assert keith_number(8) == False\n    assert keith_number(9) == False\n    assert keith_number(10) == False\n    assert keith_number(11) == False\n    assert keith_number(12) == False\n    assert keith_number(13) == False\n    assert keith_number(14) == False\n    assert keith_number(15) == True\n    assert keith_number(16) == False\n    assert keith_number(17) == False\n    assert keith_number(18) == False\n    assert keith_number(19) == False\n    assert keith_number(20) == False\n    assert keith_number(21) == False\n    assert keith_number(22) == False\n    assert keith_number(23) == False\n    assert keith_number(24) == False\n    assert keith_number(25) == False\n    assert keith_number(26) == False\n    assert keith_number(27) == False\n    assert keith_number(28) == False\n    assert keith_number(29) == False\n    assert keith_number(30) == True\n    assert keith_number(31) == False\n    assert keith_number(32) == False\n    assert"
    },
    {
      "rank": 58,
      "score": 8.4821581249458,
      "candidate": "import math\n\ndef is_keith_number(num):\n    '''\n    returns true if num is a keith number\n    '''\n    # make sure num is an integer\n    num = int(num)\n    # make sure num is a positive integer\n    if num < 0:\n        return False\n    # make sure num is a square\n    if math.sqrt(num) == num:\n        return False\n    # check for 3, 5, and 9\n    if num % 3 == 0 or num % 5 == 0 or num % 9 == 0:\n        return False\n    # return true if num is a keith number\n    return True\n\nif __name__ == '__main__':\n    # test cases\n    assert is_keith_number(10)\n    assert is_keith_number(16)\n    assert is_keith_number(20)\n    assert is_keith_number(25)\n    assert is_keith_number(36)\n    assert is_keith_number(49)\n    assert is_keith_number(53)\n    assert is_keith_number(80)\n    assert is_keith_number(100)\n    assert is_keith_number(125)\n    assert is_keith_number(130)\n    assert is_keith_number(140)\n    assert is_keith_number(160)\n    assert is_keith_number(200)\n    assert is_keith_number(250)\n    assert is_keith_number(252)\n    assert is_keith_number(500)\n    assert is_keith_number(1000)\n    assert is_keith_number(1001)\n    assert is_keith_number(1002)\n    assert is_keith_number(1003)\n    assert is_keith_number(1004)\n    assert is_keith_number(1005)\n    assert is_keith_number(1006)\n    assert is_keith_number(1007)\n    assert is_keith_number(1008)\n    assert is_keith_number(1009)\n    assert is_keith_number(1010)"
    },
    {
      "rank": 59,
      "score": 8.467404034038339,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num == 1:\n        return True\n    if num == 0:\n        return False\n    if num % 2 == 0:\n        return False\n    return is_keith_number(num / 2)"
    },
    {
      "rank": 60,
      "score": 8.381320392378747,
      "candidate": "#!/usr/bin/env python\n\nimport sys\n\ndef keith_number(number):\n    if number < 0:\n        return False\n    if number == 0:\n        return True\n    digits = []\n    while number!= 0:\n        digits.append(number % 10)\n        number /= 10\n    if len(digits) == 1 and digits[0] == 9:\n        return True\n    if len(digits) == 2 and digits[0] == 5 and digits[1] == 6:\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    keith_number(sys.argv[1])"
    },
    {
      "rank": 61,
      "score": 8.36975600257969,
      "candidate": "#!/usr/bin/env python\n\nimport math\n\ndef is_keith_number(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0\n\ndef is_keith_number_recursive(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0 and is_keith_number_recursive(num/5)\n\ndef is_keith_number_iterative(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0 and is_keith_number_iterative(num/5)\n\ndef is_keith_number_DP(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0 and is_keith_number_DP(num/5)\n\ndef is_keith_number_DP_iterative(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0 and is_keith_number_DP_iterative(num/5)\n\ndef is_keith_number_DP_recursive(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0 and is_keith_number_DP_recursive(num/5)\n\ndef is_keith_number_DP_iterative_recursive(num):\n    \"\"\"\n    The number is keith number if it is a multiple of 5.\n    \"\"\"\n    return num % 5 == 0 and is_keith_number_DP_iterative_recursive(num/5)\n\nif __name__ == \"__main__\":\n    print is_keith_number(6)\n    print is_keith_number_iterative(6)\n    print is_keith_number_recursive(6)\n    print is_keith_number_DP(6)\n    print is_keith_number_DP_iterative"
    },
    {
      "rank": 62,
      "score": 8.364832297038511,
      "candidate": "from utils.prime_number import is_prime\n\ndef keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 1:\n        return False\n    elif n == 2:\n        return True\n    elif n % 2 == 0:\n        return False\n    elif is_prime(n):\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    print(keith_number(2))\n    print(keith_number(3))\n    print(keith_number(5))\n    print(keith_number(6))\n    print(keith_number(8))\n    print(keith_number(13))\n    print(keith_number(17))\n    print(keith_number(19))"
    },
    {
      "rank": 63,
      "score": 8.342781945286049,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n <= 0:\n        return False\n\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n\n    for i in range(3, n, 2):\n        if n % i == 0:\n            return False\n    return True\n\nif __name__ == '__main__':\n    n = int(input())\n    print(is_keith_number(n))"
    },
    {
      "rank": 64,
      "score": 8.333039314601203,
      "candidate": "from math import sqrt\n\n\ndef is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n    return True\n\n\ndef main():\n    print(is_keith_number(1))\n    print(is_keith_number(2))\n    print(is_keith_number(3))\n    print(is_keith_number(4))\n    print(is_keith_number(5))\n    print(is_keith_number(6))\n    print(is_keith_number(7))\n    print(is_keith_number(8))\n    print(is_keith_number(9))\n    print(is_keith_number(10))\n    print(is_keith_number(11))\n    print(is_keith_number(12))\n    print(is_keith_number(13))\n    print(is_keith_number(14))\n    print(is_keith_number(15))\n    print(is_keith_number(16))\n    print(is_keith_number(17))\n    print(is_keith_number(18))\n    print(is_keith_number(19))\n    print(is_keith_number(20))\n    print(is_keith_number(21))\n    print(is_keith_number(22))\n    print(is_keith_number(23))\n    print(is_keith_number(24))\n    print(is_keith_number(25))\n    print(is_keith_number(26))\n    print(is_keith_number(27))\n    print(is_keith_number(28))\n    print(is_keith_number(29))\n    print(is_keith_number(30))\n    print(is_keith_number(31))\n    print(is_keith_number(32))\n    print"
    },
    {
      "rank": 65,
      "score": 8.225103727878702,
      "candidate": "import math\nimport unittest\n\n\ndef is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n % 3 == 0 or n % 5 == 0:\n        return False\n    if math.sqrt(n) == int(math.sqrt(n)):\n        return False\n    if n % 7 == 0:\n        return False\n    if n % 11 == 0:\n        return False\n    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return False\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return False\n    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return False\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n        return False\n    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return False\n    if n % 53 == 0:\n        return False\n    if n % 59 == 0:\n        return False\n    if n % 61 == 0:\n        return False\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n        return False\n    if n % 73 == 0:\n        return False\n    if n % 79 == 0:\n        return False\n    if n % 83 == 0:\n        return False\n    if n % 89 == 0:\n        return False\n    if n % 97 == 0:\n        return False\n    if n % 101 == 0:\n        return False\n    if n % 103 == 0:\n        return False\n    if n % 109 == 0:\n        return False\n    if n % 127 == 0:\n        return False\n    if n % 131 == 0:\n        return False\n    if n % 137 == 0:\n        return False\n    if n % 139 == 0:\n        return False\n    if n % 149 == 0:\n        return False\n    if n % 151 == 0:\n        return False\n    if"
    },
    {
      "rank": 66,
      "score": 8.205746392526144,
      "candidate": "import math\n\ndef keith_number(number):\n    if number % 10 == 0:\n        return False\n    if number % 2 == 0:\n        return True\n    if number % 3 == 0:\n        return True\n    if math.sqrt(number) == math.sqrt(number + 1):\n        return True\n    return False\n\nif __name__ == '__main__':\n    print keith_number(123)"
    },
    {
      "rank": 67,
      "score": 8.159110486548748,
      "candidate": "def is_keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    #if n < 0:\n    #    return False\n    #if n == 0:\n    #    return True\n    if n == 1 or n == -1:\n        return True\n    if n % 2 == 0:\n        return False\n    #if n % 3 == 0:\n    #    return False\n    return n.is_square()\n\nif __name__ == \"__main__\":\n    n = -1\n    while n < 0:\n        n = input(\"Enter a positive integer: \")\n    print(\"%s is a keith number.\" % n)\n    print(\"%s is a keith number.\" % n + \" \" * len(str(n)))"
    },
    {
      "rank": 68,
      "score": 8.068290553282395,
      "candidate": "# Definition for a keith number.\nclass KenNumber:\n    def __init__(self, num):\n        self.num = num\n\n    def __eq__(self, other):\n        return self.num == other.num\n\n    def __hash__(self):\n        return hash(self.num)\n\n\ndef is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    # Keep checking until the number is zero.\n    while num!= 0:\n        if num % 2 == 0:\n            # If num is even, then num must be a keith number.\n            return False\n        num //= 2\n    # If num is zero, then num is a keith number.\n    return True\n\nif __name__ == '__main__':\n    assert is_keith_number(25)\n    assert is_keith_number(27)\n    assert not is_keith_number(29)"
    },
    {
      "rank": 69,
      "score": 8.053106628120862,
      "candidate": "import math\n\n\ndef is_keith_number(num):\n    if num < 0:\n        return False\n    if math.floor(math.sqrt(num)) == math.floor(math.sqrt(num + 1)):\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    num = int(input())\n    if is_keith_number(num):\n        print('Number is a keith number.')\n    else:\n        print('Number is not a keith number.')"
    },
    {
      "rank": 70,
      "score": 8.037734192257016,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    num = abs(num)\n    if num == 1:\n        return True\n    if num % 2 == 0:\n        return False\n    if num < 3:\n        return True\n    if num < 17:\n        return False\n    if num < 100:\n        return True\n    if num < 1000:\n        return False\n    if num < 10001:\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    print(is_keith_number(1))\n    print(is_keith_number(2))\n    print(is_keith_number(3))\n    print(is_keith_number(4))\n    print(is_keith_number(5))\n    print(is_keith_number(6))\n    print(is_keith_number(7))\n    print(is_keith_number(8))\n    print(is_keith_number(9))\n    print(is_keith_number(10))\n    print(is_keith_number(11))\n    print(is_keith_number(12))\n    print(is_keith_number(13))\n    print(is_keith_number(14))\n    print(is_keith_number(15))\n    print(is_keith_number(16))\n    print(is_keith_number(17))\n    print(is_keith_number(18))\n    print(is_keith_number(19))\n    print(is_keith_number(20))\n    print(is_keith_number(21))\n    print(is_keith_number(22))\n    print(is_keith_number(23))\n    print(is_keith_number(24))\n    print(is_keith_number(25))\n    print(is_keith_number(26))\n    print(is_keith_number(27))\n    print(is_keith_number(28))\n    print(is_keith_number(29))"
    },
    {
      "rank": 71,
      "score": 7.768671013480141,
      "candidate": "class Solution(object):\n    def isKeptNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 2:\n            return True\n        for x in range(2, num):\n            if x % num!= 0:\n                return False\n        return True\n\nif __name__ == \"__main__\":\n    print Solution().isKeptNumber(3)\n    print Solution().isKeptNumber(5)\n    print Solution().isKeptNumber(6)"
    },
    {
      "rank": 72,
      "score": 7.553731109053931,
      "candidate": "def keith_number(n):\n\t\"\"\"\n\tn is a positive integer.\n\tReturn whether n is a keith number or not.\n\t\"\"\"\n\tif n < 0:\n\t\treturn False\n\tfor i in range(2, int(n**0.5)+1):\n\t\tif n%i == 0:\n\t\t\treturn False\n\treturn True\n\nif __name__ == '__main__':\n\tprint keith_number(1)\n\tprint keith_number(2)\n\tprint keith_number(3)\n\tprint keith_number(4)\n\tprint keith_number(5)\n\tprint keith_number(6)\n\tprint keith_number(7)\n\tprint keith_number(8)\n\tprint keith_number(9)\n\tprint keith_number(10)\n\tprint keith_number(11)\n\tprint keith_number(12)\n\tprint keith_number(13)\n\tprint keith_number(14)\n\tprint keith_number(15)\n\tprint keith_number(16)\n\tprint keith_number(17)\n\tprint keith_number(18)\n\tprint keith_number(19)\n\tprint keith_number(20)\n\tprint keith_number(21)\n\tprint keith_number(22)\n\tprint keith_number(23)\n\tprint keith_number(24)\n\tprint keith_number(25)\n\tprint keith_number(26)\n\tprint keith_number(27)\n\tprint keith_number(28)\n\tprint keith_number(29)\n\tprint keith_number(30)\n\tprint keith_number(31)\n\tprint keith_number(32)\n\tprint keith_number(33)\n\tprint keith_number(34)\n\tprint keith_number(35)\n\tprint keith_number(36)\n\tprint keith_number(37)\n\tprint keith_number(38)\n\tprint keith_number(39)\n\tprint keith_number(40)\n\tprint keith_number(41)\n\tprint keith_number"
    },
    {
      "rank": 73,
      "score": 3.426448359794247,
      "candidate": "def is_keith_number(number):\n    if number < 0:\n        return False\n    if number == 0:\n        return True\n    if number % 2 == 0:\n        return False\n    if number % 3 == 0:\n        return False\n    if number % 5 == 0:\n        return False\n    if number % 7 == 0:\n        return False\n    if number % 11 == 0:\n        return False\n    if number % 13 == 0:\n        return False\n    if number % 17 == 0:\n        return False\n    if number % 19 == 0:\n        return False\n    if number % 23 == 0:\n        return False\n    if number % 29 == 0:\n        return False\n    if number % 31 == 0:\n        return False\n    if number % 37 == 0:\n        return False\n    if number % 41 == 0:\n        return False\n    if number % 43 == 0:\n        return False\n    if number % 47 == 0:\n        return False\n    if number % 53 == 0:\n        return False\n    if number % 59 == 0:\n        return False\n    if number % 61 == 0:\n        return False\n    if number % 67 == 0:\n        return False\n    if number % 71 == 0:\n        return False\n    if number % 73 == 0:\n        return False\n    if number % 79 == 0:\n        return False\n    if number % 83 == 0:\n        return False\n    if number % 89 == 0:\n        return False\n    if number % 97 == 0:\n        return False\n    if number % 101 == 0:\n        return False\n    if number % 103 == 0:\n        return False\n    if number % 107 == 0:\n        return False\n    if number % 109 == 0:\n        return False\n    if number % 113 == 0:\n        return False\n    if number % 127 == 0:\n        return False\n    if number % 131 == 0:\n        return False\n    if number % 137 == 0:\n        return False\n    if number % 139 == 0:\n        return False\n    if number % 149 == 0:\n        return False\n    if number % 151 == 0:\n        return False\n    if number % 157 == 0:"
    },
    {
      "rank": 74,
      "score": 3.2563125929565806,
      "candidate": "class Solution:\n    # @return a boolean\n    def isKeithSquare(self, num):\n        if num < 1:\n            return False\n        if num == 1:\n            return True\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        if num % 11 == 0:\n            return False\n        if num % 13 == 0:\n            return False\n        if num % 17 == 0:\n            return False\n        if num % 19 == 0:\n            return False\n        if num % 23 == 0:\n            return False\n        if num % 29 == 0:\n            return False\n        if num % 31 == 0:\n            return False\n        if num % 37 == 0:\n            return False\n        if num % 41 == 0:\n            return False\n        if num % 43 == 0:\n            return False\n        if num % 47 == 0:\n            return False\n        if num % 53 == 0:\n            return False\n        if num % 59 == 0:\n            return False\n        if num % 61 == 0:\n            return False\n        if num % 67 == 0:\n            return False\n        if num % 71 == 0:\n            return False\n        if num % 73 == 0:\n            return False\n        if num % 79 == 0:\n            return False\n        if num % 83 == 0:\n            return False\n        if num % 89 == 0:\n            return False\n        if num % 97 == 0:\n            return False\n        if num % 101 == 0:\n            return False\n        if num % 103 == 0:\n            return False\n        if num % 109 == 0:\n            return False\n        if num % 113 == 0:\n            return False\n        if num % 127 == 0:\n            return False\n        if num % 131 == 0:\n            return False\n        if num % 137 == 0:\n            return False\n        if num % 139 == 0:\n            return False\n        if num % 149 == 0:\n            return False\n        if num % 151 == 0:\n            return False\n        if num % 157 == 0:\n            return"
    },
    {
      "rank": 75,
      "score": 3.230312575388893,
      "candidate": "class Solution:\n\t\"\"\"\n\t@param num: A number\n\t@return: True if the number is a keith number, otherwise false\n\t\"\"\"\n\tdef isKeithNumber(self, num):\n\t\t\"\"\"\n\t\t:type num: int\n\t\t:rtype: bool\n\t\t\"\"\"\n\t\tif num < 2:\n\t\t\treturn True\n\t\tif num % 2 == 0:\n\t\t\treturn False\n\t\tif num % 3 == 0:\n\t\t\treturn False\n\t\tif num % 5 == 0:\n\t\t\treturn False\n\t\tif num % 7 == 0:\n\t\t\treturn False\n\t\treturn True\n\nif __name__ == \"__main__\":\n\tprint Solution().isKeithNumber(7)"
    },
    {
      "rank": 76,
      "score": 3.105195445136788,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num % 2 == 0:\n        return False\n    if num % 3 == 0:\n        return False\n    if num % 5 == 0:\n        return False\n    if num % 7 == 0:\n        return False\n    if num % 11 == 0:\n        return False\n    if num % 13 == 0:\n        return False\n    if num % 17 == 0:\n        return False\n    if num % 19 == 0:\n        return False\n    if num % 23 == 0:\n        return False\n    if num % 29 == 0:\n        return False\n    if num % 31 == 0:\n        return False\n    if num % 37 == 0:\n        return False\n    if num % 41 == 0:\n        return False\n    if num % 43 == 0:\n        return False\n    if num % 47 == 0:\n        return False\n    if num % 53 == 0:\n        return False\n    if num % 59 == 0:\n        return False\n    if num % 61 == 0:\n        return False\n    if num % 67 == 0:\n        return False\n    if num % 71 == 0:\n        return False\n    if num % 73 == 0:\n        return False\n    if num % 79 == 0:\n        return False\n    if num % 83 == 0:\n        return False\n    if num % 89 == 0:\n        return False\n    if num % 97 == 0:\n        return False\n    if num % 101 == 0:\n        return False\n    if num % 103 == 0:\n        return False\n    if num % 107 == 0:\n        return False\n    if num % 109 == 0:\n        return False\n    if num % 113 == 0:\n        return False\n    if num % 127 == 0:\n        return False\n    if num % 131 == 0:\n        return False\n    if num % 137 == 0:\n        return False\n    if num % 139 == 0:\n        return False\n    if num % 149 == 0:\n        return False\n    if num % 151 == 0:\n        return False\n    if num % 157 == 0:\n        return False"
    },
    {
      "rank": 77,
      "score": 3.101190769542356,
      "candidate": "# TODO:\n# 1. check if the number is a keith number\n# 2. check if the number is a keith number\n\ndef is_keith_number(n):\n    \"\"\"\n    Returns True if the number is a keith number.\n    Returns False otherwise.\n    \"\"\"\n    return n > 0 and n % 10 == 0 and n % 100!= 11\n\ndef keith_number(n):\n    \"\"\"\n    Returns the keith number of the given number.\n    \"\"\"\n    return n + n % 10\n\nif __name__ == \"__main__\":\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert is_keith_number(123), \"123 is keith number\"\n    assert is_keith_number(1324), \"1324 is keith number\"\n    assert not is_keith_number(0), \"0 is not keith number\"\n    assert not is_keith_number(-1), \"Negative numbers are not keith numbers\"\n    assert not is_keith_number(14), \"14 is not keith number\"\n    assert not is_keith_number(123456789), \"123456789 is not keith number\"\n    assert keith_number(123) == 123, \"123 is keith number\"\n    assert keith_number(1324) == 1324, \"1324 is keith number\"\n    assert keith_number(0) == 0, \"0 is keith number\"\n    assert keith_number(-1) == -1, \"Negative numbers are keith numbers\"\n    assert keith_number(14) == 14, \"14 is keith number\"\n    assert keith_number(123456789) == 123456789, \"123456789 is keith number\""
    },
    {
      "rank": 78,
      "score": 3.0920503107047117,
      "candidate": "# https://en.wikipedia.org/wiki/Keith_number_theorem\n\ndef keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    # keith number is always divisible by 5\n    if num % 5 == 0:\n        return True\n    # keith number is always divisible by 3\n    if num % 3 == 0:\n        return True\n    # keith number is always divisible by 7\n    if num % 7 == 0:\n        return True\n    # keith number is always divisible by 11\n    if num % 11 == 0:\n        return True\n    # keith number is always divisible by 13\n    if num % 13 == 0:\n        return True\n    return False\n\n# ------------------------------------------------------------------------------\n\nif __name__ == '__main__':\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert keith_number(2) == True, \"2 is keith\"\n    assert keith_number(3) == True, \"3 is keith\"\n    assert keith_number(5) == True, \"5 is keith\"\n    assert keith_number(6) == True, \"6 is keith\"\n    assert keith_number(7) == True, \"7 is keith\"\n    assert keith_number(11) == True, \"11 is keith\"\n    assert keith_number(13) == True, \"13 is keith\"\n    assert keith_number(17) == True, \"17 is keith\"\n    assert keith_number(19) == True, \"19 is keith\"\n    assert keith_number(23) == True, \"23 is keith\"\n    assert keith_number(29) == True, \"29 is keith\"\n    assert keith_number(31) == True, \"31 is keith\"\n    assert keith_number(37) == True, \"37 is keith\"\n    assert keith_number(41) == True, \"41 is keith\"\n    assert keith_number(43) == True, \"43 is keith\"\n    assert keith_number(47) == True"
    },
    {
      "rank": 79,
      "score": 3.0677494360384894,
      "candidate": "class Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num == 0:\n            return False\n        if num < 0:\n            return False\n        if num == 1:\n            return True\n        if num == 2:\n            return True\n        if num % 2 == 0:\n            return False\n        if num % 2 == 1:\n            return True\n\n        return self.isKeithNumber(num/2) and self.isKeithNumber(num/2 + 1)\n\n\nif __name__ == '__main__':\n    print Solution().isKeithNumber(10)"
    },
    {
      "rank": 80,
      "score": 3.0584818066013315,
      "candidate": "def keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    return n > 0 and n % 17 == 0\n\n# The above solution is not correct as the condition is not respected.\n# A better solution is to check if the sum of the digits is divisible by 17.\n# If so, the number is keith number.\n\ndef keith_number2(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n > 0 and n % 17 == 0:\n        return True\n    return False"
    },
    {
      "rank": 81,
      "score": 3.0551211460433545,
      "candidate": "import math\n\n\ndef is_keith_number(num):\n    \"\"\"\n    Returns True if the number is a keith number, else False.\n\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num < 0:\n        return False\n    if math.sqrt(num) == math.floor(math.sqrt(num)):\n        return True\n    if num % 2 == 0:\n        return False\n    if num % 3 == 0:\n        return False\n    if num % 5 == 0:\n        return False\n    if num % 7 == 0:\n        return False\n    if num % 11 == 0:\n        return False\n    if num % 13 == 0:\n        return False\n    if num % 17 == 0:\n        return False\n    if num % 19 == 0:\n        return False\n    if num % 23 == 0:\n        return False\n    if num % 29 == 0:\n        return False\n    if num % 31 == 0:\n        return False\n    if num % 37 == 0:\n        return False\n    if num % 41 == 0:\n        return False\n    if num % 43 == 0:\n        return False\n    if num % 47 == 0:\n        return False\n    if num % 53 == 0:\n        return False\n    if num % 59 == 0:\n        return False\n    if num % 61 == 0:\n        return False\n    return True\n\nif __name__ == \"__main__\":\n    assert is_keith_number(0) == True\n    assert is_keith_number(1) == False\n    assert is_keith_number(2) == False\n    assert is_keith_number(3) == False\n    assert is_keith_number(4) == False\n    assert is_keith_number(5) == False\n    assert is_keith_number(6) == False\n    assert is_keith_number(7) == False\n    assert is_keith_number(8) == False\n    assert is_keith_number(9) == False\n    assert is_keith_number(10) == True\n    assert is_keith_number(11) == True\n    assert is_"
    },
    {
      "rank": 82,
      "score": 3.0271817138174515,
      "candidate": "# Definition for a keith number.\nclass KenNumber(object):\n    def __init__(self, num):\n        \"\"\"\n        :type num: int\n        \"\"\"\n        self.num = num\n\n    def __eq__(self, other):\n        if self.num == other.num:\n            return True\n        else:\n            return False\n\n    def __str__(self):\n        if self.num < 0:\n            return \"Negative\"\n        else:\n            return str(self.num)\n\n\n# Your KenNumber object will be instantiated and called as such:\n# obj = KenNumber(num)\n# param_1 = obj.is_keith_number(num)\n\n# Example 1:\n\n# Input: 4\n# Output: True\n# Example 2:\n\n# Input: 8\n# Output: False\n\nclass Solution(object):\n    def is_keith_number(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        for i in xrange(1, num):\n            if num % i == 0:\n                return False\n        return True\n\nif __name__ == \"__main__\":\n    Solution().is_keith_number(4)\n    Solution().is_keith_number(8)"
    },
    {
      "rank": 83,
      "score": 3.0256930174299406,
      "candidate": "import math\n\n# check if number is keith number\ndef is_keith(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# check if number is keith number\ndef is_keith_2(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# check if number is keith number\ndef is_keith_3(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# check if number is keith number\ndef is_keith_4(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# check if number is keith number\ndef is_keith_5(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(n)) + 1):\n        if n % i == 0:\n            return False\n    return True\n\n# check if number is keith number\ndef is_keith_6(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n % 2 == 0:"
    },
    {
      "rank": 84,
      "score": 2.9962207770733786,
      "candidate": "# Definition for a keith number.\nclass ToddCoxeter:\n    def __init__(self, n):\n        self.n = n\n\n    def get_keith_number(self, n):\n        if n == 0:\n            return False\n        if n == 1:\n            return True\n        if n == self.n:\n            return True\n        if n % 2 == 0:\n            return self.get_keith_number(n / 2)\n        return self.get_keith_number(n * 3 + 1) and self.get_keith_number(n * 3 + 2)\n\n\nclass Solution:\n    def isKeithNumber(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        if n < 0:\n            return False\n        if n == 0:\n            return True\n        if n == 1:\n            return True\n        if n == self.n:\n            return True\n        if n % 2 == 0:\n            return self.isKeithNumber(n / 2)\n        return self.isKeithNumber(n * 3 + 1) and self.isKeithNumber(n * 3 + 2)"
    },
    {
      "rank": 85,
      "score": 2.9612859956720685,
      "candidate": "import math\n\n\nclass Solution:\n    def isKeithNumber(self, N):\n        \"\"\"\n        :type N: int\n        :rtype: bool\n        \"\"\"\n        # keith number\n        if N == 0:\n            return False\n        # N is a prime\n        if N % 2 == 0:\n            return False\n        # N is not a prime\n        if N % 3 == 0:\n            return False\n        # N is a multiple of 5\n        if N % 5 == 0:\n            return False\n        # N is a multiple of 3\n        if N % 3 == 0:\n            return False\n        # N is a multiple of 7\n        if N % 7 == 0:\n            return False\n        # N is a multiple of 13\n        if N % 13 == 0:\n            return False\n        # N is a multiple of 17\n        if N % 17 == 0:\n            return False\n        # N is a multiple of 19\n        if N % 19 == 0:\n            return False\n        # N is a multiple of 23\n        if N % 23 == 0:\n            return False\n        # N is a multiple of 29\n        if N % 29 == 0:\n            return False\n        # N is a multiple of 31\n        if N % 31 == 0:\n            return False\n        # N is a multiple of 37\n        if N % 37 == 0:\n            return False\n        # N is a multiple of 41\n        if N % 41 == 0:\n            return False\n        # N is a multiple of 43\n        if N % 43 == 0:\n            return False\n        # N is a multiple of 47\n        if N % 47 == 0:\n            return False\n        # N is a multiple of 53\n        if N % 53 == 0:\n            return False\n        # N is a multiple of 59\n        if N % 59 == 0:\n            return False\n        # N is a multiple of 61\n        if N % 61 == 0:\n            return False\n        # N is a multiple of 67\n        if N % 67 == 0:\n            return False\n        # N is a multiple of 71\n        if N % 71 == 0:\n            return False\n        # N is a multiple of 73\n        if N % 73 == 0:"
    },
    {
      "rank": 86,
      "score": 2.93678263586377,
      "candidate": "class Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        # num = num % 10\n        if num == 0:\n            return True\n        if num == 1:\n            return True\n        if num == 5:\n            return True\n        if num == 7:\n            return True\n        if num == 9:\n            return True\n        if num == 11:\n            return True\n        if num == 13:\n            return True\n        if num == 17:\n            return True\n        if num == 19:\n            return True\n        if num == 23:\n            return True\n        if num == 29:\n            return True\n        if num == 31:\n            return True\n        if num == 37:\n            return True\n        if num == 41:\n            return True\n        if num == 43:\n            return True\n        if num == 47:\n            return True\n        if num == 53:\n            return True\n        if num == 59:\n            return True\n        if num == 61:\n            return True\n        if num == 67:\n            return True\n        if num == 71:\n            return True\n        if num == 73:\n            return True\n        if num == 79:\n            return True\n        if num == 83:\n            return True\n        if num == 89:\n            return True\n        if num == 97:\n            return True\n        if num == 101:\n            return True\n        if num == 103:\n            return True\n        if num == 107:\n            return True\n        if num == 109:\n            return True\n        if num == 113:\n            return True\n        if num == 127:\n            return True\n        if num == 131:\n            return True\n        if num == 137:\n            return True\n        if num == 139:\n            return True\n        if num == 149:\n            return True\n        if num == 151:\n            return True\n        if num == 157:\n            return True\n        if num == 163:\n            return True\n        if num == 167:\n            return True\n        if num == 173:\n            return True\n        if num == 179:\n            return True\n        if num"
    },
    {
      "rank": 87,
      "score": 2.934315602654959,
      "candidate": "import math\n\n\ndef keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num % 17 == 0:\n        return True\n    if num % 19 == 0:\n        return True\n    if num % 23 == 0:\n        return True\n    if num % 29 == 0:\n        return True\n    if num % 31 == 0:\n        return True\n    if num % 37 == 0:\n        return True\n    if num % 41 == 0:\n        return True\n    if num % 43 == 0:\n        return True\n    if num % 47 == 0:\n        return True\n    if num % 53 == 0:\n        return True\n    if num % 59 == 0:\n        return True\n    if num % 61 == 0:\n        return True\n    if num % 67 == 0:\n        return True\n    if num % 71 == 0:\n        return True\n    if num % 73 == 0:\n        return True\n    if num % 79 == 0:\n        return True\n    if num % 83 == 0:\n        return True\n    if num % 89 == 0:\n        return True\n    if num % 97 == 0:\n        return True\n    if num % 101 == 0:\n        return True\n    if num % 103 == 0:\n        return True\n    if num % 107 == 0:\n        return True\n    if num % 109 == 0:\n        return True\n    if num % 113 == 0:\n        return True\n    if num % 127 == 0:\n        return True\n    if num % 131 == 0:\n        return True\n    if num % 137 == 0:\n        return True\n    if num % 139 == 0:\n        return True\n    if num % 149 == 0:\n        return True\n    if num % 151 == 0:\n        return True\n    if num % 157 == 0:\n        return True\n    if num % 163 == 0:\n        return True\n    if num % 167 == 0:\n        return True\n    if num % 173 == 0:\n        return True\n    if num % 179 == 0:\n        return True\n    if num % 181 == 0:\n        return True\n    if num % 191 == 0:"
    },
    {
      "rank": 88,
      "score": 2.915690965234999,
      "candidate": "class Solution(object):\n    def isKei(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num == 0:\n            return False\n        if num == 1:\n            return True\n        if num % 2 == 0:\n            return False\n        if num == 2:\n            return True\n        if num % 3 == 0:\n            return False\n        if num == 3:\n            return True\n        if num % 5 == 0:\n            return False\n        if num == 5:\n            return True\n        if num % 7 == 0:\n            return False\n        if num == 7:\n            return True\n        if num % 11 == 0:\n            return False\n        if num == 11:\n            return True\n        if num % 13 == 0:\n            return False\n        if num == 13:\n            return True\n        if num % 17 == 0:\n            return False\n        if num == 17:\n            return True\n        if num % 19 == 0:\n            return False\n        if num == 19:\n            return True\n        if num % 23 == 0:\n            return False\n        if num == 23:\n            return True\n        if num % 29 == 0:\n            return False\n        if num == 29:\n            return True\n        if num % 31 == 0:\n            return False\n        if num == 31:\n            return True\n        if num % 37 == 0:\n            return False\n        if num == 37:\n            return True\n        if num % 41 == 0:\n            return False\n        if num == 41:\n            return True\n        if num % 43 == 0:\n            return False\n        if num == 43:\n            return True\n        if num % 47 == 0:\n            return False\n        if num == 47:\n            return True\n        if num % 53 == 0:\n            return False\n        if num == 53:\n            return True\n        if num % 59 == 0:\n            return False\n        if num == 59:\n            return True\n        if num % 61 == 0:\n            return False\n        if num == 61:\n            return True\n        if num % 67 == 0:\n            return False\n        if num == 67:"
    },
    {
      "rank": 89,
      "score": 2.9134205347616597,
      "candidate": "from math import log\n\nclass Solution(object):\n    def isKeptNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 1:\n            return False\n        if num == 1:\n            return True\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        if num % 11 == 0:\n            return False\n        if num % 13 == 0:\n            return False\n        if num % 17 == 0:\n            return False\n        if num % 19 == 0:\n            return False\n        if num % 23 == 0:\n            return False\n        if num % 29 == 0:\n            return False\n        if num % 31 == 0:\n            return False\n        if num % 37 == 0:\n            return False\n        if num % 41 == 0:\n            return False\n        if num % 43 == 0:\n            return False\n        if num % 47 == 0:\n            return False\n        if num % 53 == 0:\n            return False\n        if num % 59 == 0:\n            return False\n        if num % 61 == 0:\n            return False\n        if num % 67 == 0:\n            return False\n        if num % 71 == 0:\n            return False\n        if num % 73 == 0:\n            return False\n        if num % 79 == 0:\n            return False\n        if num % 83 == 0:\n            return False\n        if num % 89 == 0:\n            return False\n        if num % 97 == 0:\n            return False\n        if num % 101 == 0:\n            return False\n        if num % 103 == 0:\n            return False\n        if num % 107 == 0:\n            return False\n        if num % 109 == 0:\n            return False\n        if num % 113 == 0:\n            return False\n        if num % 127 == 0:\n            return False\n        if num % 131 == 0:\n            return False\n        if num % 137 == 0:\n            return False\n        if num % 139 == 0:\n            return False\n        if num"
    },
    {
      "rank": 90,
      "score": 2.892176961483431,
      "candidate": "from math import isqrt\n\ndef keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 1:\n        return False\n    i = 1\n    while i <= isqrt(n):\n        if n % i == 0:\n            return False\n        i += 1\n    return True\n\n# Your keith_number function should return true for these cases.\n# [1, 2, 3, 4, 5, 6, 8, 9, 10]\n\n# Your keith_number function should return false for these cases.\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nif __name__ == '__main__':\n    assert keith_number(0) == False\n    assert keith_number(1) == True\n    assert keith_number(2) == True\n    assert keith_number(3) == False\n    assert keith_number(4) == True\n    assert keith_number(5) == False\n    assert keith_number(6) == False\n    assert keith_number(7) == False\n    assert keith_number(8) == False\n    assert keith_number(9) == True\n    assert keith_number(10) == False"
    },
    {
      "rank": 91,
      "score": 2.8710211441312596,
      "candidate": "def keith_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: bool\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return True\n    if n % 2 == 0:\n        return False\n    for i in range(3, int(n ** 0.5) + 1, 2):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef test_keith_number():\n    assert keith_number(1) == True\n    assert keith_number(2) == False\n    assert keith_number(3) == False\n    assert keith_number(4) == True\n    assert keith_number(5) == False\n    assert keith_number(6) == False\n    assert keith_number(7) == True\n    assert keith_number(8) == False\n    assert keith_number(9) == True\n    assert keith_number(10) == False\n    assert keith_number(11) == False\n    assert keith_number(12) == True\n    assert keith_number(13) == False\n    assert keith_number(14) == False\n    assert keith_number(15) == False\n    assert keith_number(16) == True\n    assert keith_number(17) == False\n    assert keith_number(18) == False\n    assert keith_number(19) == True\n    assert keith_number(20) == False\n    assert keith_number(21) == False\n    assert keith_number(22) == False\n    assert keith_number(23) == False\n    assert keith_number(24) == True\n    assert keith_number(25) == False\n    assert keith_number(26) == False\n    assert keith_number(27) == True\n    assert keith_number(28) == False\n    assert keith_number(29) == False\n    assert keith_number(30) == False\n    assert keith_number(31) == False\n    assert keith_number(32) == True\n    assert keith_number(33) == False\n    assert"
    },
    {
      "rank": 92,
      "score": 2.8702430460125106,
      "candidate": "# Definition for a keith number.\n# class keithNumber(object):\n#     def __init__(self, num):\n#         self.num = num\n#         self.is_keith = True\n#         if self.num > 0 and self.num < 100:\n#             self.is_keith = False\n#         if self.num > 100 and self.num < 1000:\n#             self.is_keith = False\n#         if self.num > 1000:\n#             self.is_keith = False\n\nclass Solution(object):\n    def isKeithNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num == 0:\n            return True\n        if num < 0:\n            return False\n        if num == 1:\n            return True\n        if num == 2:\n            return True\n        if num == 3:\n            return True\n        if num == 4:\n            return True\n        if num == 5:\n            return True\n        if num == 6:\n            return True\n        if num == 7:\n            return True\n        if num == 8:\n            return True\n        if num == 9:\n            return True\n        if num == 10:\n            return True\n        if num == 11:\n            return True\n        if num == 12:\n            return True\n        if num == 13:\n            return True\n        if num == 14:\n            return True\n        if num == 15:\n            return True\n        if num == 16:\n            return True\n        if num == 17:\n            return True\n        if num == 18:\n            return True\n        if num == 19:\n            return True\n        if num == 20:\n            return True\n        if num == 21:\n            return True\n        if num == 22:\n            return True\n        if num == 23:\n            return True\n        if num == 24:\n            return True\n        if num == 25:\n            return True\n        if num == 26:\n            return True\n        if num == 27:\n            return True\n        if num == 28:\n            return True\n        if num == 29:\n            return True\n        if num == 30:"
    },
    {
      "rank": 93,
      "score": 2.869595669000328,
      "candidate": "class Solution:\n\t\"\"\"\n\t@param: num: a number\n\t@return: true if the number is keith number, or false\n\t\"\"\"\n\tdef isKeithNumber(self, num):\n\t\tif num <= 0:\n\t\t\treturn False\n\t\t# check the number if it is odd or even\n\t\tif num % 2 == 0:\n\t\t\treturn True\n\t\t# check if the number is divisible by 3 and 5\n\t\tif num % 3 == 0 and num % 5 == 0:\n\t\t\treturn True\n\t\treturn False\n\nif __name__ == \"__main__\":\n\ts = Solution()\n\tprint s.isKeithNumber(1)\n\tprint s.isKeithNumber(2)\n\tprint s.isKeithNumber(3)\n\tprint s.isKeithNumber(4)\n\tprint s.isKeithNumber(5)\n\tprint s.isKeithNumber(6)\n\tprint s.isKeithNumber(7)\n\tprint s.isKeithNumber(8)\n\tprint s.isKeithNumber(9)\n\tprint s.isKeithNumber(10)\n\tprint s.isKeithNumber(11)\n\tprint s.isKeithNumber(12)\n\tprint s.isKeithNumber(13)\n\tprint s.isKeithNumber(14)\n\tprint s.isKeithNumber(15)\n\tprint s.isKeithNumber(16)\n\tprint s.isKeithNumber(17)\n\tprint s.isKeithNumber(18)\n\tprint s.isKeithNumber(19)\n\tprint s.isKeithNumber(20)\n\tprint s.isKeithNumber(21)\n\tprint s.isKeithNumber(22)\n\tprint s.isKeithNumber(23)\n\tprint s.isKeithNumber(24)\n\tprint s.isKeithNumber(25)\n\tprint s.isKeithNumber(26)\n\tprint s.isKeithNumber(27)\n\tprint s.isKeithNumber(28)\n\tprint s.isKeithNumber(29)\n\tprint s.isKeithNumber(30)\n\tprint s.isKeithNumber(31)"
    },
    {
      "rank": 94,
      "score": 2.865831213403319,
      "candidate": "def is_keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num < 0:\n        return False\n    if num == 0:\n        return True\n    if num % 2 == 0:\n        return False\n    if num % 3 == 0:\n        return False\n    if num % 5 == 0:\n        return False\n    if num % 7 == 0:\n        return False\n    if num % 11 == 0:\n        return False\n    if num % 13 == 0:\n        return False\n    if num % 17 == 0:\n        return False\n    if num % 19 == 0:\n        return False\n    if num % 23 == 0:\n        return False\n    if num % 29 == 0:\n        return False\n    if num % 31 == 0:\n        return False\n    if num % 37 == 0:\n        return False\n    if num % 41 == 0:\n        return False\n    if num % 43 == 0:\n        return False\n    if num % 47 == 0:\n        return False\n    if num % 53 == 0:\n        return False\n    if num % 59 == 0:\n        return False\n    if num % 61 == 0:\n        return False\n    if num % 67 == 0:\n        return False\n    if num % 71 == 0:\n        return False\n    if num % 73 == 0:\n        return False\n    if num % 79 == 0:\n        return False\n    if num % 83 == 0:\n        return False\n    if num % 89 == 0:\n        return False\n    if num % 97 == 0:\n        return False\n    if num % 101 == 0:\n        return False\n    if num % 103 == 0:\n        return False\n    if num % 109 == 0:\n        return False\n    if num % 113 == 0:\n        return False\n    if num % 127 == 0:\n        return False\n    if num % 131 == 0:\n        return False\n    if num % 137 == 0:\n        return False\n    if num % 139 == 0:\n        return False\n    if num % 149 == 0:\n        return False\n    if num % 151 == 0:\n        return False\n    if num"
    },
    {
      "rank": 95,
      "score": 2.8425594918125277,
      "candidate": "class Solution(object):\n    def isKeptNumber(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num <= 0:\n            return False\n        if num == 1 or num == 2:\n            return True\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        if num % 11 == 0:\n            return False\n        if num % 13 == 0:\n            return False\n        if num % 17 == 0:\n            return False\n        if num % 19 == 0:\n            return False\n        if num % 23 == 0:\n            return False\n        if num % 29 == 0:\n            return False\n        if num % 31 == 0:\n            return False\n        if num % 37 == 0:\n            return False\n        if num % 41 == 0:\n            return False\n        if num % 43 == 0:\n            return False\n        if num % 47 == 0:\n            return False\n        if num % 53 == 0:\n            return False\n        if num % 59 == 0:\n            return False\n        if num % 61 == 0:\n            return False\n        if num % 67 == 0:\n            return False\n        if num % 71 == 0:\n            return False\n        if num % 73 == 0:\n            return False\n        if num % 79 == 0:\n            return False\n        if num % 83 == 0:\n            return False\n        if num % 89 == 0:\n            return False\n        if num % 97 == 0:\n            return False\n        if num % 101 == 0:\n            return False\n        if num % 103 == 0:\n            return False\n        if num % 107 == 0:\n            return False\n        if num % 109 == 0:\n            return False\n        if num % 113 == 0:\n            return False\n        if num % 127 == 0:\n            return False\n        if num % 131 == 0:\n            return False\n        if num % 137 == 0:\n            return False\n        if num % 139 == 0:\n            return False\n        if num % 149"
    },
    {
      "rank": 96,
      "score": 2.8315221485757687,
      "candidate": "import math\n\ndef keith_number(num):\n    return all(num % p == 0 for p in range(1, num))\n\nif __name__ == '__main__':\n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert keith_number(2), \"2 is a keith number\"\n    assert not keith_number(3), \"3 is not a keith number\"\n    assert not keith_number(4), \"4 is not a keith number\"\n    assert keith_number(6), \"6 is a keith number\"\n    assert keith_number(8), \"8 is a keith number\"\n    assert keith_number(9), \"9 is a keith number\""
    },
    {
      "rank": 97,
      "score": 2.7984436216494815,
      "candidate": "class Solution:\n    \"\"\"\n    @param: n: Given integer\n    @return: True or False\n    \"\"\"\n    def isKeithSquare(self, n):\n        if n <= 0:\n            return False\n        if n == 1:\n            return True\n        if n % 2 == 0:\n            return self.isKeithSquare(n/2)\n        else:\n            return self.isKeithSquare(3*n+1) or self.isKeithSquare(3*n-1)\n\nif __name__ == \"__main__\":\n    s = Solution()\n    print s.isKeithSquare(10)\n    print s.isKeithSquare(15)"
    },
    {
      "rank": 98,
      "score": 2.6281079063084394,
      "candidate": "import math\n\n\ndef keith_number(num):\n    \"\"\"\n    :type num: int\n    :rtype: bool\n    \"\"\"\n    if num % 2 == 0:\n        return True\n    if num % 3 == 0:\n        return True\n    if num % 5 == 0:\n        return True\n    if num % 7 == 0:\n        return True\n    if num % 11 == 0:\n        return True\n    if num % 13 == 0:\n        return True\n    if num % 17 == 0:\n        return True\n    if num % 19 == 0:\n        return True\n    if num % 23 == 0:\n        return True\n    if num % 29 == 0:\n        return True\n    if num % 31 == 0:\n        return True\n    if num % 37 == 0:\n        return True\n    if num % 41 == 0:\n        return True\n    if num % 43 == 0:\n        return True\n    if num % 47 == 0:\n        return True\n    if num % 53 == 0:\n        return True\n    if num % 59 == 0:\n        return True\n    if num % 61 == 0:\n        return True\n    if num % 67 == 0:\n        return True\n    if num % 71 == 0:\n        return True\n    if num % 73 == 0:\n        return True\n    if num % 79 == 0:\n        return True\n    if num % 83 == 0:\n        return True\n    if num % 89 == 0:\n        return True\n    if num % 97 == 0:\n        return True\n    if num % 101 == 0:\n        return True\n    if num % 103 == 0:\n        return True\n    if num % 109 == 0:\n        return True\n    if num % 113 == 0:\n        return True\n    if num % 127 == 0:\n        return True\n    return False\n\n\nif __name__ == '__main__':\n    assert keith_number(1) == False\n    assert keith_number(2) == False\n    assert keith_number(3) == False\n    assert keith_number(4) == False\n    assert keith_number(5) == True\n    assert keith_number(6) == False"
    },
    {
      "rank": 99,
      "score": 2.601070507860232,
      "candidate": "class Solution(object):\n    def isKeithSquare(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        sqr = 0\n        while num > 0:\n            sqr = sqr * num % 10\n            num = num / 10\n        return sqr == 1\n\nif __name__ == '__main__':\n    s = Solution()\n    print s.isKeithSquare(1)\n    print s.isKeithSquare(10)\n    print s.isKeithSquare(100)\n    print s.isKeithSquare(1000)"
    },
    {
      "rank": 100,
      "score": 2.4642815314958164,
      "candidate": "class Solution(object):\n    def isKeithSquare(self, num):\n        \"\"\"\n        :type num: int\n        :rtype: bool\n        \"\"\"\n        if num < 0:\n            return False\n        if num == 0:\n            return True\n        if num % 2 == 0:\n            return False\n        if num % 3 == 0:\n            return False\n        if num % 5 == 0:\n            return False\n        if num % 7 == 0:\n            return False\n        if num % 11 == 0:\n            return False\n        if num % 13 == 0:\n            return False\n        if num % 17 == 0:\n            return False\n        if num % 19 == 0:\n            return False\n        if num % 23 == 0:\n            return False\n        if num % 29 == 0:\n            return False\n        if num % 31 == 0:\n            return False\n        if num % 37 == 0:\n            return False\n        if num % 41 == 0:\n            return False\n        if num % 43 == 0:\n            return False\n        if num % 47 == 0:\n            return False\n        if num % 53 == 0:\n            return False\n        if num % 59 == 0:\n            return False\n        if num % 61 == 0:\n            return False\n        if num % 67 == 0:\n            return False\n        if num % 71 == 0:\n            return False\n        if num % 73 == 0:\n            return False\n        if num % 79 == 0:\n            return False\n        if num % 83 == 0:\n            return False\n        if num % 89 == 0:\n            return False\n        if num % 97 == 0:\n            return False\n        if num % 101 == 0:\n            return False\n        if num % 103 == 0:\n            return False\n        if num % 107 == 0:\n            return False\n        if num % 109 == 0:\n            return False\n        if num % 113 == 0:\n            return False\n        if num % 127 == 0:\n            return False\n        if num % 131 == 0:\n            return False\n        if num % 137 == 0:\n            return False\n        if num % 139 == 0:\n            return False\n        if num % 149 == 0:"
    }
  ]
}