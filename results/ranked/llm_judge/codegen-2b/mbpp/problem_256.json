{
  "timestamp": "2025-09-14T19:16:06.575898",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "mbpp",
  "problem_number": 256,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def sumOfSquares(n):\n    return sum(x**2 for x in range(1, n+1) if x % 2 == 1)\n\nprint sumOfSquares(5)"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    return sum(n * (n + 1) * (2 * n + 1))\n\nif __name__ == '__main__':\n    print sum_of_squares(5)\n    print sum_of_squares(10)\n    print sum_of_squares(15)\n    print sum_of_squares(20)\n    print sum_of_squares(25)\n    print sum_of_squares(30)\n    print sum_of_squares(35)\n    print sum_of_squares(40)\n    print sum_of_squares(45)\n    print sum_of_squares(50)\n    print sum_of_squares(55)\n    print sum_of_squares(60)\n    print sum_of_squares(65)\n    print sum_of_squares(70)\n    print sum_of_squares(75)\n    print sum_of_squares(80)\n    print sum_of_squares(85)\n    print sum_of_squares(90)\n    print sum_of_squares(95)\n    print sum_of_squares(100)\n    print sum_of_squares(105)\n    print sum_of_squares(110)\n    print sum_of_squares(115)\n    print sum_of_squares(120)\n    print sum_of_squares(125)\n    print sum_of_squares(130)\n    print sum_of_squares(135)\n    print sum_of_squares(140)\n    print sum_of_squares(145)\n    print sum_of_squares(150)\n    print sum_of_squares(155)\n    print sum_of_squares(160)\n    print sum_of_squares(165)\n    print sum_of_squares(170)\n    print sum_of_squares(175)\n    print sum_of_squares(180)\n    print sum_of_squares(185)\n    print sum_of_squares(190)\n    print sum_of_squares(195)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += i ** 2\n    return sum\n\nprint(sum_of_squares(2))\nprint(sum_of_squares(3))\nprint(sum_of_squares(4))\nprint(sum_of_squares(5))\nprint(sum_of_squares(6))\nprint(sum_of_squares(7))\nprint(sum_of_squares(8))\nprint(sum_of_squares(9))\nprint(sum_of_squares(10))\nprint(sum_of_squares(11))\nprint(sum_of_squares(12))\nprint(sum_of_squares(13))\nprint(sum_of_squares(14))\nprint(sum_of_squares(15))\nprint(sum_of_squares(16))\nprint(sum_of_squares(17))\nprint(sum_of_squares(18))\nprint(sum_of_squares(19))\nprint(sum_of_squares(20))"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    return sum(i**2 for i in range(n) if i % 2 and i > 1)\n\nif __name__ == '__main__':\n    print(sum_of_squares(100))"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def sum_squares(n):\n    return sum(x*x for x in range(1, n+1) if x % 2 == 1)\n\ndef main():\n    n = int(input())\n    print(sum_squares(n))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 1)\n\n\nif __name__ == \"__main__\":\n    assert sum_of_squares(1) == 0\n    assert sum_of_squares(2) == 4\n    assert sum_of_squares(3) == 9\n    assert sum_of_squares(4) == 16\n    assert sum_of_squares(5) == 25\n    assert sum_of_squares(6) == 36\n    assert sum_of_squares(7) == 49\n    assert sum_of_squares(8) == 64\n    assert sum_of_squares(9) == 81\n    assert sum_of_squares(10) == 100"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i**2\n    return s\n\nif __name__ == '__main__':\n    print(sum_of_squares(10))\n    print(sum_of_squares(5))\n    print(sum_of_squares(7))\n    print(sum_of_squares(13))\n    print(sum_of_squares(18))\n    print(sum_of_squares(21))\n    print(sum_of_squares(23))\n    print(sum_of_squares(29))\n    print(sum_of_squares(31))\n    print(sum_of_squares(33))\n    print(sum_of_squares(37))\n    print(sum_of_squares(41))\n    print(sum_of_squares(43))\n    print(sum_of_squares(47))\n    print(sum_of_squares(53))\n    print(sum_of_squares(59))\n    print(sum_of_squares(61))\n    print(sum_of_squares(67))\n    print(sum_of_squares(71))\n    print(sum_of_squares(73))\n    print(sum_of_squares(79))\n    print(sum_of_squares(83))\n    print(sum_of_squares(89))\n    print(sum_of_squares(97))\n    print(sum_of_squares(101))\n    print(sum_of_squares(103))\n    print(sum_of_squares(107))\n    print(sum_of_squares(109))\n    print(sum_of_squares(113))\n    print(sum_of_squares(127))\n    print(sum_of_squares(131))\n    print(sum_of_squares(137))\n    print(sum_of_squares(139))\n    print(sum_of_squares(149))\n    print(sum_of_squares(151))"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1,n+1):\n        if i % 2 == 1:\n            sum_of_squares = sum_of_squares + i**2\n    return sum_of_squares\n\n# Test Cases\n\nprint sum_of_squares(7)\n#>>> 9\n\nprint sum_of_squares(3)\n#>>> 9\n\nprint sum_of_squares(4)\n#>>> 14\n\nprint sum_of_squares(5)\n#>>> 21\n\nprint sum_of_squares(6)\n#>>> 36\n\nprint sum_of_squares(7)\n#>>> 49\n\nprint sum_of_squares(8)\n#>>> 64\n\nprint sum_of_squares(9)\n#>>> 81\n\nprint sum_of_squares(10)\n#>>> 100\n\nprint sum_of_squares(11)\n#>>> 121\n\nprint sum_of_squares(12)\n#>>> 144"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "#!/usr/bin/python\n\ndef sum_of_squares(n):\n    \"\"\"\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares(n) -> sum\n    sum_of_squares"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "# TODO:\n# 1. Use the built-in sum() function to sum the numbers.\n# 2. Use the built-in sum() function to sum the numbers.\n# 3. Use the built-in sum() function to sum the numbers.\n# 4. Use the built-in sum() function to sum the numbers.\n# 5. Use the built-in sum() function to sum the numbers.\n# 6. Use the built-in sum() function to sum the numbers.\n# 7. Use the built-in sum() function to sum the numbers.\n# 8. Use the built-in sum() function to sum the numbers.\n# 9. Use the built-in sum() function to sum the numbers.\n# 10. Use the built-in sum() function to sum the numbers.\n# 11. Use the built-in sum() function to sum the numbers.\n# 12. Use the built-in sum() function to sum the numbers.\n# 13. Use the built-in sum() function to sum the numbers.\n# 14. Use the built-in sum() function to sum the numbers.\n# 15. Use the built-in sum() function to sum the numbers.\n# 16. Use the built-in sum() function to sum the numbers.\n# 17. Use the built-in sum() function to sum the numbers.\n# 18. Use the built-in sum() function to sum the numbers.\n# 19. Use the built-in sum() function to sum the numbers.\n# 20. Use the built-in sum() function to sum the numbers.\n# 21. Use the built-in sum() function to sum the numbers.\n# 22. Use the built-in sum() function to sum the numbers.\n# 23. Use the built-in sum() function to sum the numbers.\n# 24. Use the built-in sum() function to sum the numbers.\n# 25. Use the built-in sum() function to sum the numbers.\n# 26. Use the built-in sum() function to sum the numbers.\n# 27. Use the built-in sum() function to sum the numbers.\n# 28. Use the built-in sum() function to sum the numbers.\n# 29. Use the built-in sum() function to sum the numbers.\n# 30. Use the built-in sum() function to sum"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i**2\n    return sum\n\nprint sum_of_squares(5)\n\n\"\"\"\nWrite a python function to find the sum of the squares of the first n even natural numbers.\n\"\"\"\n\ndef sum_of_even_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i**2\n    return sum\n\nprint sum_of_even_squares(5)"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "# O(n^2)\n# O(n^2)\ndef sumOfSquares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(map(lambda x: x**2, range(1, n+1)))\n\nprint(sumOfSquares(5))"
    },
    {
      "rank": 13,
      "score": 9.0,
      "candidate": "def sum_squares(n):\n    sum = 0\n    for i in range(1,n):\n        if i % 2 == 1:\n            sum += (i**2)\n    return sum\n\nprint(sum_squares(10))\nprint(sum_squares(6))"
    },
    {
      "rank": 14,
      "score": 9.0,
      "candidate": "def sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 1)\n\ndef main():\n    print(\"Sum of squares of odd natural numbers\")\n    print(sum_of_squares(100))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 15,
      "score": 9.0,
      "candidate": "def sum_squares(n):\n    sum = 0\n    for i in range(0, n):\n        sum += i ** 2\n    return sum\n\nif __name__ == \"__main__\":\n    print sum_squares(5)"
    },
    {
      "rank": 16,
      "score": 9.0,
      "candidate": "def sum_squares(n):\n    sum_squares = 0\n    for x in range(1, n + 1):\n        if x % 2 == 0:\n            sum_squares += x ** 2\n    return sum_squares\n\nprint sum_squares(10)"
    },
    {
      "rank": 17,
      "score": 9.0,
      "candidate": "def sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            s += i**2\n    return s\n\nif __name__ == '__main__':\n    print sum_of_squares(10)\n    print sum_of_squares(3)"
    },
    {
      "rank": 18,
      "score": 9.0,
      "candidate": "def sum_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum += (i * i)\n    return sum\n\nn = input(\"Enter n: \")\nprint(sum_squares(n))"
    },
    {
      "rank": 19,
      "score": 9.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 20,
      "score": 9.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum([i**2 for i in range(1, n+1) if i % 2 == 1])\n\nn = int(input())\nprint(sum_of_squares(n))"
    },
    {
      "rank": 21,
      "score": 8.0,
      "candidate": "from collections import defaultdict\n\n\ndef sum_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    d = defaultdict(int)\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            d[i] += i ** 2\n    return sum(d.values())\n\n\nif __name__ == '__main__':\n    print(sum_squares(10))"
    },
    {
      "rank": 22,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += i ** 2\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_squares(10)"
    },
    {
      "rank": 23,
      "score": 8.0,
      "candidate": "def sumOfSquares(n):\n    sum = 0\n    for i in range(n):\n        sum += i**2\n    return sum\n\nprint sumOfSquares(3)"
    },
    {
      "rank": 24,
      "score": 8.0,
      "candidate": "import math\n\ndef find_sum_of_squares(n):\n    return (n * (n + 1) * (2 * n + 1)) / 6\n\ndef main():\n    print(find_sum_of_squares(3))\n    print(find_sum_of_squares(5))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 25,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\nprint sum_of_squares(10)"
    },
    {
      "rank": 26,
      "score": 8.0,
      "candidate": "def sumOfSquares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i * i\n    return sum\n\nprint sumOfSquares(10)"
    },
    {
      "rank": 27,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum(i**2 for i in range(1, n+1) if i % 2 == 1)\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 28,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(0, n):\n        sum_of_squares += i * i\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(sum_of_squares(n))"
    },
    {
      "rank": 29,
      "score": 8.0,
      "candidate": "def sum_squares(n):\n    \"\"\"\n    Sum of squares of first n odd natural numbers.\n    \"\"\"\n    return sum([(i + 1) * (i + 2) for i in range(n) if (i + 1) % 2 == 1])\n\nif __name__ == \"__main__\":\n    print sum_squares(10)"
    },
    {
      "rank": 30,
      "score": 8.0,
      "candidate": "def sum_of_odd_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\nprint sum_of_odd_squares(7)"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    return n * (n + 1) * (2 * n + 1) / 6\n\nif __name__ == \"__main__\":\n    #test_sum_of_squares(5)\n    print(sum_of_squares(5))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def find_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print(find_sum_of_squares(10))"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum(x*x for x in range(1, n+1) if x%2==1)\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum_of_squares += i * i\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(10))\n    #print(sum_of_squares(9))\n    #print(sum_of_squares(8))\n    #print(sum_of_squares(7))\n    #print(sum_of_squares(6))\n    #print(sum_of_squares(5))\n    #print(sum_of_squares(4))\n    #print(sum_of_squares(3))\n    #print(sum_of_squares(2))\n    #print(sum_of_squares(1))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum += i ** 2\n    return sum\n\nprint(sum_of_squares(15))"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    # print(n)\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(10))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(i**2 for i in range(n, 0, -2) if i % 2 == 1)\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(20))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum([i**2 for i in range(1, n+1) if i % 2 == 1])\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(3))"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum([(i**2) for i in range(1, n+1) if i % 2 == 1])\n\n\n# Time:  O(n)\n# Space: O(1)\n# DP\n# DP[i] = sum(i^2)\n# DP[i] = sum(i^2) + sum(i^2-i)\n# DP[i] = sum(i^2) + sum(i^2-i)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) + sum(i^2-i+2) +... + sum(i^2-i+n)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) + sum(i^2-i+2) +... + sum(i^2-i+n)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) + sum(i^2-i+2) +... + sum(i^2-i+n)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) + sum(i^2-i+2) +... + sum(i^2-i+n)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) + sum(i^2-i+2) +... + sum(i^2-i+n)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) + sum(i^2-i+2) +... + sum(i^2-i+n)\n# DP[i] = sum(i^2) + sum(i^2-i) + sum(i^2-i+1) +"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    s = 0\n    for i in range(n):\n        s += i ** 2\n    return s\n\nprint(\"Sum of squares of first {} odd natural numbers: {}\".format(n, sum_of_squares(n)))\n\n\"\"\"\nOutput:\nSum of squares of first 6 odd natural numbers:\n9\n21\n49\n385\n1430\n\n\"\"\""
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "import math\n\n\ndef sum_squares_odd_n_odd(n):\n    return sum(math.pow(x, 2) for x in range(1, n + 1) if x % 2 == 1)\n\n\nif __name__ == '__main__':\n    print(sum_squares_odd_n_odd(10))"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i * (i + 1)\n    return sum\n\nprint sum_of_squares(5)"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def sum_squares_odd_n(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += i ** 2\n    return sum\n\nprint sum_squares_odd_n(10)"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(3))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def sum_squares(n):\n    return sum(n*x**2 for x in range(1, n+1) if x % 2 == 1)\n\nprint sum_squares(10)"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    >>> sum_of_squares(10)\n    1225\n    >>> sum_of_squares(1)\n    1\n    >>> sum_of_squares(7)\n    22\n    \"\"\"\n    n = int(n)\n    sum_of_squares = 0\n    for i in range(1, n):\n        if i % 2 == 1:\n            sum_of_squares += i * i\n    return sum_of_squares\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    >>> sum_of_squares(4)\n    44\n    >>> sum_of_squares(6)\n    246\n    >>> sum_of_squares(8)\n    932\n    >>> sum_of_squares(10)\n    10240\n    \"\"\"\n    result = 0\n    for i in range(1, n+1):\n        result += i ** 2\n    return result\n\nif __name__ == '__main__':\n    print sum_of_squares(4)\n    print sum_of_squares(6)\n    print sum_of_squares(8)\n    print sum_of_squares(10)"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def sumOfSquares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum += i * i\n    return sum\n\ndef main():\n    print sumOfSquares(3)\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    if n == 1:\n        return 0\n    return sum([x**2 for x in range(1, n, 2)])\n\nprint sum_of_squares(1)\nprint sum_of_squares(2)\nprint sum_of_squares(3)\nprint sum_of_squares(4)\nprint sum_of_squares(5)\nprint sum_of_squares(6)\nprint sum_of_squares(7)\nprint sum_of_squares(8)\nprint sum_of_squares(9)\nprint sum_of_squares(10)"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print sum_of_squares(10)"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "#!/usr/bin/python\n\n# @include\n\ndef sum_of_squares(n):\n  return sum([x * x for x in range(1, n+1) if x % 2 == 1])\n\n# @exclude\n\nif __name__ == '__main__':\n  assert sum_of_squares(1) == 0\n  assert sum_of_squares(2) == 4\n  assert sum_of_squares(3) == 9\n  assert sum_of_squares(4) == 16\n  assert sum_of_squares(5) == 25\n  assert sum_of_squares(6) == 36\n  assert sum_of_squares(7) == 49\n  assert sum_of_squares(8) == 64\n  assert sum_of_squares(9) == 81\n  assert sum_of_squares(10) == 100\n  assert sum_of_squares(11) == 121\n  assert sum_of_squares(12) == 144\n  assert sum_of_squares(13) == 169\n  assert sum_of_squares(14) == 196\n  assert sum_of_squares(15) == 225\n  assert sum_of_squares(16) == 256\n  assert sum_of_squares(17) == 289\n  assert sum_of_squares(18) == 324\n  assert sum_of_squares(19) == 361\n  assert sum_of_squares(20) == 400\n  assert sum_of_squares(21) == 432\n  assert sum_of_squares(22) == 489\n  assert sum_of_squares(23) == 556\n  assert sum_of_squares(24) == 627\n  assert sum_of_squares(25) == 714\n  assert sum_of_squares(26) == 825\n  assert sum_of_squares(27) == 945\n  assert sum_of_squares(28) == 1150\n  assert sum_of_squares(29) == 1365\n  assert sum_of_squares(30) == 1590\n  assert sum_of_squares(31) == 1920"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1,n):\n        if i % 2 == 0:\n            sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum([i**2 for i in range(1, n+1) if i % 2 == 1])\n\nif __name__ == '__main__':\n    n = int(input('Enter the number of odd natural numbers you want to find sum of squares: '))\n    print('The sum of squares of the first {} odd natural numbers is {}.'.format(n, sum_of_squares(n)))"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(0, n):\n        sum += i**2\n    return sum\n\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of odd natural numbers you want to sum to squares: \"))\n    print(\"The sum of squares of the first {0} odd natural numbers is {1}\".format(n, sum_of_squares(n)))"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\ndef main():\n    print(sum_of_squares(10))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "#!/usr/bin/env python\n\nimport math\n\ndef find_sum_of_squares(n):\n    sum_of_squares = 0\n\n    for i in range(n):\n        sum_of_squares += i * (i + 1)\n\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    sum_of_squares = find_sum_of_squares(5)\n    print(sum_of_squares)"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def find_sum_of_odd_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum_of_squares += i**2\n    return sum_of_squares\n\nprint find_sum_of_odd_squares(100)"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum([i**2 for i in range(1, n+1) if i % 2 == 1])\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum += i ** 2\n    return sum\n\nprint(sum_of_squares(10))\nprint(sum_of_squares(100))\nprint(sum_of_squares(1000))"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(20))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i**2\n    return s"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        sum += i ** 2\n    return sum\n\nprint sum_of_squares(4)"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(2))"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum(n * x ** 2 for x in range(1, n + 1) if x % 2 == 1)\n\nprint sum_of_squares(10)"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "import math\n\ndef find_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += (i ** 2)\n    return sum_of_squares\n\nprint(find_sum_of_squares(5))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "# sum of squares of first n odd natural numbers\ndef sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i * i\n    return s\n\n# sum of squares of first n even natural numbers\ndef sum_of_even_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i * i\n    return s\n\n# sum of squares of first n even natural numbers\ndef sum_of_odd_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i * (i+2)\n    return s\n\nprint sum_of_odd_squares(1)\nprint sum_of_odd_squares(2)\nprint sum_of_odd_squares(3)\nprint sum_of_odd_squares(4)\nprint sum_of_odd_squares(5)"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum += i ** 2\n    return sum\n\n# Your code here\nprint sum_of_squares(10)"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def sum_of_odd_squares(n):\n    return sum(i**2 for i in range(1, n+1) if i % 2 == 1)\n\nprint(sum_of_odd_squares(15))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "# This is a good solution\n\ndef sum_squares(n):\n    return sum(x * x for x in range(1, n + 1) if x % 2 == 1)\n\nprint(sum_squares(5))\n\n# This is a bad solution\n\ndef sum_squares(n):\n    return sum(x * x for x in range(1, n + 1) if x % 2 == 1) if n % 2 == 0 else 0\n\nprint(sum_squares(5))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        if i % 2 == 1:\n            sum += i ** 2\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_squares(4)"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def find_sum_of_squares(n):\n    \"\"\"\n    Write a function to calculate the sum of squares of the first n odd natural numbers.\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum += i*i\n    return sum\n\n\ndef test():\n    assert find_sum_of_squares(1) == 0\n    assert find_sum_of_squares(2) == 4\n    assert find_sum_of_squares(3) == 9\n    assert find_sum_of_squares(4) == 16\n    assert find_sum_of_squares(5) == 25\n    assert find_sum_of_squares(6) == 36\n    assert find_sum_of_squares(7) == 49\n    assert find_sum_of_squares(8) == 64\n    assert find_sum_of_squares(9) == 81\n    assert find_sum_of_squares(10) == 100\n    assert find_sum_of_squares(11) == 121\n    assert find_sum_of_squares(12) == 144\n    assert find_sum_of_squares(13) == 169\n    assert find_sum_of_squares(14) == 196\n    assert find_sum_of_squares(15) == 225\n    assert find_sum_of_squares(16) == 256\n    assert find_sum_of_squares(17) == 289\n    assert find_sum_of_squares(18) == 324\n    assert find_sum_of_squares(19) == 361\n    assert find_sum_of_squares(20) == 400\n    assert find_sum_of_squares(21) == 429\n    assert find_sum_of_squares(22) == 464\n    assert find_sum_of_squares(23) == 509\n    assert find_sum_of_squares(24) == 544\n    assert find_sum_of_squares(25) == 589\n    assert find_sum_of_squares(26) == 634\n    assert find_sum_of_squ"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    \"\"\"\n    Sum of squares of first n odd natural numbers.\n    \"\"\"\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += pow(i, 2)\n    return sum_of_squares\n\nprint(sum_of_squares(5))"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "#!/usr/bin/python\n\ndef sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        if i % 2 == 1:\n            sum += i**2\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_squares(5)"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "from math import sqrt\n\n\ndef sum_of_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += pow(i, 2)\n    return sum\n\n\nif __name__ == '__main__':\n    print(sum_of_squares(10))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "from math import sqrt\n\ndef sumOfSquares(n):\n    return sum(x * x for x in range(1, n + 1) if x % 2 == 1)\n\nprint(sumOfSquares(20))\n\n\"\"\"\nOutput:\n\n>>> sumOfSquares(20)\n2525\n\"\"\""
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(3))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def find_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += (i + 1) * (i + 2)\n    return sum_of_squares\n\nprint(find_sum_of_squares(5))\n#>>> 10"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    return sum(x*x for x in range(1, n+1) if x % 2 == 1)\n\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint sum_of_squares(6)"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def sumOfSquares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\ndef test():\n    assert sumOfSquares(6) == 90\n    assert sumOfSquares(2) == 4\n    assert sumOfSquares(0) == 0\n\nif __name__ == \"__main__\":\n    test()"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "import time\n\ndef sum_of_squares(n):\n    return sum(i * i for i in range(1, n + 1) if i % 2 and i % 3 == 0)\n\n\nif __name__ == '__main__':\n    start = time.time()\n    print(sum_of_squares(5))\n    print(\"--- %s seconds ---\" % (time.time() - start))"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    \"\"\"\n    Write a python function to calculate sum of square of first n odd natural numbers.\n    \"\"\"\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print sum_of_squares(6)"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    total = 0\n    for x in range(1, n + 1):\n        total += x * x\n    return total\n\nprint sum_of_squares(5)"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum += i * i\n    return sum\n\nprint sum_of_squares(10)"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "from math import sqrt\n\ndef sum_of_squares(n):\n    sum = 0\n    for i in range(1,n+1):\n        if i % 2 == 1:\n            sum += i**2\n    return sum\n\nprint sum_of_squares(5)\n\n\"\"\"\nOutput:\n\n6\n\"\"\""
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def find_sum_of_squares_n(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum_of_squares += i * i\n    return sum_of_squares\n\ndef main():\n    print \"sum of squares of the first 5 odd natural numbers is\", find_sum_of_squares_n(5)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "import math\n\ndef sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += (i+1)**2\n    return sum_of_squares\n\nprint sum_of_squares(10)\n\n\"\"\"\nTest cases:\n\n>>> sum_of_squares(10)\n165\n>>> sum_of_squares(20)\n1260\n\"\"\""
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "# Create a function sum_of_squares that takes an integer n as a parameter\n# and returns the sum of the squares of the first n odd natural numbers\ndef sum_of_squares(n):\n    # Sum of the squares of the first n odd natural numbers\n    sum = 0\n    for i in range(0, n):\n        if i % 2 == 1:\n            sum += (i ** 2)\n    return sum\n\n# Test the function\nprint(\"Sum of the squares of the first 3 odd natural numbers is {}\".format(sum_of_squares(3)))\nprint(\"Sum of the squares of the first 5 odd natural numbers is {}\".format(sum_of_squares(5)))\nprint(\"Sum of the squares of the first 7 odd natural numbers is {}\".format(sum_of_squares(7)))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(10))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    s = 0\n    for i in range(1, n + 1):\n        if i % 2 == 1:\n            s += i * i\n    return s\n\nprint sum_of_squares(10)"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum += i**2\n    return sum\n\nprint sum_of_squares(4)"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 1:\n            sum_of_squares += i * i\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def sum_squares(n):\n    if n < 1:\n        return 0\n    else:\n        return sum([i * i for i in range(1, n) if i % 2 == 1])\n\nprint sum_squares(3)"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "import math\n\ndef sum_squares(n):\n    return sum(map(lambda x: x**2, range(1, n+1)))\n\nprint(sum_squares(1))\nprint(sum_squares(2))\nprint(sum_squares(3))\nprint(sum_squares(4))\nprint(sum_squares(5))\nprint(sum_squares(6))\nprint(sum_squares(7))\nprint(sum_squares(8))\nprint(sum_squares(9))\nprint(sum_squares(10))\nprint(sum_squares(11))\nprint(sum_squares(12))\nprint(sum_squares(13))\nprint(sum_squares(14))\nprint(sum_squares(15))\nprint(sum_squares(16))\nprint(sum_squares(17))\nprint(sum_squares(18))\nprint(sum_squares(19))\nprint(sum_squares(20))\nprint(sum_squares(21))\nprint(sum_squares(22))\nprint(sum_squares(23))\nprint(sum_squares(24))\nprint(sum_squares(25))\nprint(sum_squares(26))\nprint(sum_squares(27))\nprint(sum_squares(28))\nprint(sum_squares(29))\nprint(sum_squares(30))\nprint(sum_squares(31))\nprint(sum_squares(32))\nprint(sum_squares(33))\nprint(sum_squares(34))\nprint(sum_squares(35))\nprint(sum_squares(36))\nprint(sum_squares(37))\nprint(sum_squares(38))\nprint(sum_squares(39))\nprint(sum_squares(40))\nprint(sum_squares(41))\nprint(sum_squares(42))\nprint(sum_squares(43))\nprint(sum_squares(44))\nprint(sum_squares(45))\nprint(sum_squares(46))\nprint(sum_squares(47))\nprint(sum_squ"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "import math\n\n\ndef sum_of_squares(n):\n    return (n * (n + 1)) / 2\n\n\ndef sum_of_squares_recursive(n):\n    return sum_of_squares_recursive(n - 2) + sum_of_squares_recursive(n - 1)\n\n\ndef sum_of_squares_iterative(n):\n    return sum(x * x for x in range(1, n + 1) if x % 2 == 1)\n\n\ndef sum_of_squares_recursive_test():\n    assert sum_of_squares_recursive(5) == sum_of_squares(5)\n    assert sum_of_squares_recursive(6) == sum_of_squares(6)\n    assert sum_of_squares_recursive(7) == sum_of_squares(7)\n\n\ndef sum_of_squares_iterative_test():\n    assert sum_of_squares_iterative(5) == sum_of_squares(5)\n    assert sum_of_squares_iterative(6) == sum_of_squares(6)\n    assert sum_of_squares_iterative(7) == sum_of_squares(7)\n\n\ndef sum_of_squares_recursive_test():\n    assert sum_of_squares_recursive(5) == sum_of_squares(5)\n    assert sum_of_squares_recursive(6) == sum_of_squares(6)\n    assert sum_of_squares_recursive(7) == sum_of_squares(7)\n\n\ndef sum_of_squares_iterative_test():\n    assert sum_of_squares_iterative(5) == sum_of_squares(5)\n    assert sum_of_squares_iterative(6) == sum_of_squares(6)\n    assert sum_of_squares_iterative(7) == sum_of_squares(7)\n\n\ndef main():\n    sum_of_squares_recursive_test()\n    sum_of_squares_iterative_test()\n\n\nif"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "# Write a function to find the sum of the squares of the first n natural numbers.\ndef sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\n# Test your function\nprint sum_of_squares(10)\n#>>> [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n\n# Test your function\nprint sum_of_squares(3)\n#>>> [1, 4, 9]\n\n# Test your function\nprint sum_of_squares(4)\n#>>> [1, 4, 9, 16]\n\n# Test your function\nprint sum_of_squares(6)\n#>>> [1, 4, 9, 16, 25, 36]"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "# Problem Statement\n# ---------------\n# The sum of the squares of the first n odd natural numbers is the sum of the squares of the first n even natural numbers.\n# For example, the sum of the squares of the first two odd natural numbers is the sum of the squares of the first two even natural numbers.\n# The sum of the squares of the first three odd natural numbers is the sum of the squares of the first three even natural numbers.\n# The sum of the squares of the first four odd natural numbers is the sum of the squares of the first four even natural numbers.\n# The sum of the squares of the first five odd natural numbers is the sum of the squares of the first five even natural numbers.\n# The sum of the squares of the first six odd natural numbers is the sum of the squares of the first six even natural numbers.\n# The sum of the squares of the first seven odd natural numbers is the sum of the squares of the first seven even natural numbers.\n# The sum of the squares of the first eight odd natural numbers is the sum of the squares of the first eight even natural numbers.\n# The sum of the squares of the first nine odd natural numbers is the sum of the squares of the first nine even natural numbers.\n# The sum of the squares of the first 10 odd natural numbers is the sum of the squares of the first 10 even natural numbers.\n# The sum of the squares of the first 11 odd natural numbers is the sum of the squares of the first 11 even natural numbers.\n# The sum of the squares of the first 12 odd natural numbers is the sum of the squares of the first 12 even natural numbers.\n# The sum of the squares of the first 13 odd natural numbers is the sum of the squares of the first 13 even natural numbers.\n# The sum of the squares of the first 14 odd natural numbers is the sum of the squares of the first 14 even natural numbers.\n# Write a function named sum_of_squares_odd_natural_numbers which takes as input a positive integer n and returns the sum of the squares of the first n odd natural numbers.\n\ndef sum_of_squares_odd_natural_numbers(n):\n    # print(n)\n    sum = 0\n    for i in range(0, n):\n        if i % 2 == 1:\n            sum += (i ** 2)\n    return sum\n\n#"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "# Write a function sum_of_squares(n) that takes an integer n and returns the sum of its squares.\n# Note: You can assume that n is positive.\n\ndef sum_of_squares(n):\n    return sum(i * i for i in range(1, n + 1) if i % 2 == 1)\n\nprint sum_of_squares(10)\nprint sum_of_squares(15)\nprint sum_of_squares(21)\nprint sum_of_squares(25)\n\n\"\"\"\nInput: n = 10\nOutput: 15\n\nInput: n = 15\nOutput: 25\n\nInput: n = 21\nOutput: 35\n\nInput: n = 25\nOutput: 45\n\"\"\"\n\n\"\"\"\nInput: n = 1\nOutput: 1\n\nInput: n = 2\nOutput: 4\n\nInput: n = 3\nOutput: 9\n\nInput: n = 4\nOutput: 16\n\nInput: n = 5\nOutput: 25\n\nInput: n = 6\nOutput: 36\n\nInput: n = 7\nOutput: 49\n\nInput: n = 8\nOutput: 64\n\nInput: n = 9\nOutput: 81\n\"\"\""
    }
  ]
}