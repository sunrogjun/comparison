{
  "timestamp": "2025-09-14T17:29:26.242544",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "mbpp",
  "problem_number": 17,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def binom_coeff(n, k):\n    \"\"\"\n    Find the binomial coefficient.\n    \"\"\"\n    return math.factorial(n) / math.factorial(n - k) / math.factorial(k)\n\n\ndef main():\n    \"\"\"\n    Main program\n    \"\"\"\n    print(binom_coeff(10, 5))\n    return 0\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Returns binomial coefficient\n\n    :param n:\n    :param k:\n    :return:\n    \"\"\"\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    elif n == k:\n        return 1\n    elif k == 0:\n        return 1\n    elif n < k:\n        return 0\n    else:\n        return binomial_coefficient(n - 1, k) * binomial_coefficient(n, k - 1)"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    n: int, number of trials\n    k: int, number of successes\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef factorial(n):\n    \"\"\"\n    n: int, number of trials\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\n\nif __name__ == \"__main__\":\n    print binom(5, 3)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    :type n: int\n    :type k: int\n    :rtype: int\n    \"\"\"\n    if k > n:\n        return 0\n    if n == 0 or k == 0:\n        return 1\n    return binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n\ndef main():\n    print binomial_coefficient(3, 2)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "#!/usr/bin/python\n\ndef binomial_coefficient(n, k):\n    return (n * (n - 1)) / (k * (k - 1))\n\nprint binomial_coefficient(5, 2)"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Find the binomial coefficient.\n    \"\"\"\n    if k < 0 or n < k:\n        return 0\n    else:\n        return math.factorial(n) / math.factorial(k) / math.factorial(n-k)\n\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    print(binomial_coefficient(10, 5))\n\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    n = the number of elements, k = the number of elements to choose from,\n    n!/(n-k)!(k!)/(k+1)!\n    \"\"\"\n    return factorial(n) / (factorial(n - k) * factorial(k) * factorial(k + 1))\n\n\nif __name__ == \"__main__\":\n    print binomial_coefficient(2, 1)\n    print binomial_coefficient(5, 1)\n    print binomial_coefficient(5, 2)\n    print binomial_coefficient(10, 1)\n    print binomial_coefficient(10, 2)\n    print binomial_coefficient(10, 3)\n    print binomial_coefficient(10, 4)\n    print binomial_coefficient(10, 5)\n    print binomial_coefficient(10, 6)\n    print binomial_coefficient(10, 7)\n    print binomial_coefficient(10, 8)\n    print binomial_coefficient(10, 9)\n    print binomial_coefficient(10, 10)"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Calculate binomial coefficient.\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n-k))\n\n\ndef factorial(n):\n    \"\"\"\n    Calculate factorial.\n    \"\"\"\n    if n < 0:\n        return 0\n    return reduce(lambda x, y: x * y, range(1, n + 1))\n\ndef binomial_coefficient_2(n, k):\n    \"\"\"\n    Calculate binomial coefficient.\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n-k))\n\ndef main():\n    n = int(input())\n    k = int(input())\n    print(binomial_coefficient(n, k))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "import math\n\n\ndef binom(n, k):\n    \"\"\"\n    Write a function to calculate binomial co-efficient.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    print(binom(5, 2))\n    print(binom(20, 5))\n    print(binom(5, 5))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "from math import factorial\n\n\ndef binomial_coefficient(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef main():\n    \"\"\"\n    >>> binomial_coefficient(15, 5)\n    24\n    \"\"\"\n    print(binomial_coefficient(15, 5))\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()\n    main()"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    n and k must be integers.\n    \"\"\"\n    if k > n:\n        return 0\n    if k == 0 or n == 0:\n        return 1\n    return binom(n - 1, k - 1) + binom(n - 1, k)\n\ndef main():\n    \"\"\"\n    Test cases.\n    \"\"\"\n    assert binom(3, 2) == 0\n    assert binom(3, 3) == 1\n    assert binom(3, 4) == 5\n    assert binom(4, 3) == 4\n    assert binom(4, 4) == 1\n    assert binom(5, 3) == 20\n    assert binom(5, 4) == 120\n    assert binom(6, 3) == 720\n    assert binom(6, 4) == 5040\n    assert binom(7, 3) == 14350\n    assert binom(7, 4) == 176480\n    assert binom(8, 3) == 55296\n    assert binom(8, 4) == 332640\n    assert binom(9, 3) == 1307672\n    assert binom(9, 4) == 13076720\n    assert binom(10, 3) == 5153842\n    assert binom(10, 4) == 34359738\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    n is the number of objects, k is the number of objects in the\n    subset.\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * binom(n, k-1)\n\ndef binom_coeff(n, k):\n    \"\"\"\n    n is the number of objects, k is the number of objects in the\n    subset.\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * binom(n, k-1) / (binom(n, k) * binom(n-k, k-1))\n\ndef main():\n    \"\"\"\n    >>> binom_coeff(10, 3)\n    3628800\n    \"\"\"\n    assert binom_coeff(10, 3) == 3628800\n    assert binom_coeff(10, 3) == 3628800\n    assert binom_coeff(10, 3) == 3628800\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    n: number of elements in the set\n    k: number of elements to remove\n    \"\"\"\n    numerator = 1\n    denominator = 1\n    for i in range(k, 0, -1):\n        numerator *= (n - i)\n        denominator *= (i + 1)\n        numerator /= (i + 1)\n        denominator /= (i + 1)\n    return numerator / denominator\n\n\ndef binomial_coefficient_recursive(n, k):\n    \"\"\"\n    n: number of elements in the set\n    k: number of elements to remove\n    \"\"\"\n    if k == 0:\n        return 1\n    else:\n        return (binomial_coefficient(n, k - 1) * (n - k + 1)) / (k + 1)\n\n\nif __name__ == \"__main__\":\n    print(binomial_coefficient(10, 1))\n    print(binomial_coefficient(10, 2))\n    print(binomial_coefficient(10, 3))\n    print(binomial_coefficient(10, 4))\n    print(binomial_coefficient(10, 5))\n    print(binomial_coefficient(10, 6))\n    print(binomial_coefficient(10, 7))\n    print(binomial_coefficient(10, 8))\n    print(binomial_coefficient(10, 9))\n    print(binomial_coefficient(10, 10))\n    print(binomial_coefficient(10, 11))\n    print(binomial_coefficient(10, 12))\n    print(binomial_coefficient(10, 13))\n    print(binomial_coefficient(10, 14))\n    print(binomial_coefficient(10, 15))\n    print(binomial_coefficient(10, 16))\n    print(binomial_coefficient(10, 17))\n    print(binomial_coefficient(10, 18))\n    print(binomial_coefficient(10, 19))\n    print(binomial_coefficient(10, 20))\n    print(binomial_coefficient(10, 21"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    n is the number of trials, k is the number of successes.\n    Returns the binomial coefficient C(n,k).\n    \"\"\"\n    return reduce(lambda x, y: x*y, range(1, k+1), 1) / reduce(lambda x, y: x*(k-y+1), range(2, k+1), 1)\n\ndef test_binomial_coefficient():\n    assert binomial_coefficient(10, 5) == 120\n    assert binomial_coefficient(10, 6) == 362880\n    assert binomial_coefficient(10, 7) == 39916800\n\nif __name__ == \"__main__\":\n    test_binomial_coefficient()"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    >>> binom(5, 2)\n    15\n    >>> binom(5, 3)\n    210\n    >>> binom(5, 4)\n    5555\n    >>> binom(5, 0)\n    1\n    >>> binom(5, 1)\n    5\n    >>> binom(5, 5)\n    1\n    >>> binom(5, -1)\n    0\n    >>> binom(5, -5)\n    1\n    >>> binom(5, -6)\n    0\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k == 2:\n        return n * (n + 1) / 2\n    else:\n        return n * (n + k - 1) * (n + k) / (k * (k - 1))\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n\n    def test_binom(n, k):\n        return binom(n, k)\n    print(test_binom(3, 2))"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "import math\n\ndef binomial(n, k):\n    if k == 0 or k == n:\n        return 1\n    if k < 0 or k > n:\n        return 0\n    if k == 1:\n        return n\n    return binomial(n - 1, k - 1) + binomial(n - 1, k)\n\ndef binomial_coefficient(n, k):\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef main():\n    print binomial(4, 1)\n    print binomial(4, 2)\n    print binomial(4, 3)\n    print binomial(4, 4)\n    print binomial(4, 5)\n    print binomial(4, 6)\n    print binomial(4, 7)\n    print binomial(4, 8)\n    print binomial(4, 9)\n    print binomial(4, 10)\n    print binomial(4, 11)\n    print binomial(4, 12)\n    print binomial(4, 13)\n    print binomial(4, 14)\n    print binomial(4, 15)\n    print binomial(4, 16)\n    print binomial(4, 17)\n    print binomial(4, 18)\n    print binomial(4, 19)\n    print binomial(4, 20)\n    print binomial(4, 21)\n    print binomial(4, 22)\n    print binomial(4, 23)\n    print binomial(4, 24)\n    print binomial(4, 25)\n    print binomial(4, 26)\n    print binomial(4, 27)\n    print binomial(4, 28)\n    print binomial(4, 29)\n    print binomial(4, 30)\n    print binomial(4, 31)\n    print binomial(4, 32)\n    print binomial(4, 33)\n    print binomial(4, 34)\n    print binomial(4, 35)\n    print binomial(4, 36)\n    print binomial(4, 37)\n    print binomial(4, 38)\n    print binomial(4"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "import math\n\n\ndef binom_coefficient(n, k):\n    \"\"\"\n    Compute binomial coefficient.\n\n    :param n: integer\n    :param k: integer\n    :return: binomial coefficient\n    \"\"\"\n    if k == 0 or n == 0:\n        return 1\n    if k == 1 or n == 1:\n        return 1\n    if k > n:\n        return 0\n    return binom_coefficient(n - 1, k - 1) * n / factorial(k)\n\n\ndef factorial(n):\n    \"\"\"\n    Compute factorial.\n\n    :param n: integer\n    :return: factorial\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\n\ndef factorial_inv(n):\n    \"\"\"\n    Compute factorial inverse.\n\n    :param n: integer\n    :return: factorial inverse\n    \"\"\"\n    if n == 0:\n        return 1\n    return math.factorial(n) / (math.factorial(n - 1) * math.factorial(n - 2) *... * math.factorial(n - n))\n\n\nif __name__ == \"__main__\":\n    print(binom_coefficient(4, 3))\n    print(factorial(4))\n    print(factorial_inv(4))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "import math\n\ndef binom(n, k):\n    \"\"\"\n    n is the total number of elements, k is the number of elements to\n    be counted.\n\n    The binomial coefficient is the number of combinations of k elements,\n    whereas the number of combinations of n elements is the product of the\n    factorials of the elements.\n\n    This is a recursive function.\n\n    Returns the value of the binomial coefficient.\n    \"\"\"\n    if n == k or k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binom(n, k-1)*binom(n-k, k)\n\n\ndef binom_coeff(n, k):\n    \"\"\"\n    n is the total number of elements, k is the number of elements to\n    be counted.\n\n    The binomial coefficient is the number of combinations of k elements,\n    whereas the number of combinations of n elements is the product of the\n    factorials of the elements.\n\n    This is a recursive function.\n\n    Returns the value of the binomial coefficient.\n    \"\"\"\n    if n == k or k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binom_coeff(n, k-1)*binom_coeff(n-k, k)\n\ndef main():\n    print(binom(3, 2))\n    print(binom_coeff(3, 2))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    n is the number of events,\n    k is the number of events.\n    \"\"\"\n    return (n - k + 1) * (k + 1) / 2\n\n\ndef test_binomial_coefficient():\n    assert binomial_coefficient(10, 3) == binomial_coefficient(10, 4) == 10\n    assert binomial_coefficient(10, 7) == binomial_coefficient(10, 8) == 10\n    assert binomial_coefficient(10, 10) == 1\n\n\nif __name__ == \"__main__\":\n    test_binomial_coefficient()"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "#!/usr/bin/env python\n\n# Calculate the binomial co-efficient\ndef binom(n, k):\n    return (n * (n - 1)) / ((k * (k - 1)) / 2)\n\n# Test\nif __name__ == '__main__':\n    print binom(5, 2)\n    print binom(6, 2)\n    print binom(7, 2)\n    print binom(8, 2)\n    print binom(9, 2)\n    print binom(10, 2)\n    print binom(11, 2)\n    print binom(12, 2)\n    print binom(13, 2)\n    print binom(14, 2)\n    print binom(15, 2)\n    print binom(16, 2)\n    print binom(17, 2)\n    print binom(18, 2)\n    print binom(19, 2)\n    print binom(20, 2)\n    print binom(21, 2)\n    print binom(22, 2)\n    print binom(23, 2)\n    print binom(24, 2)\n    print binom(25, 2)\n    print binom(26, 2)\n    print binom(27, 2)\n    print binom(28, 2)\n    print binom(29, 2)\n    print binom(30, 2)\n    print binom(31, 2)\n    print binom(32, 2)\n    print binom(33, 2)\n    print binom(34, 2)\n    print binom(35, 2)\n    print binom(36, 2)\n    print binom(37, 2)\n    print binom(38, 2)\n    print binom(39, 2)\n    print binom(40, 2)\n    print binom(41, 2)\n    print binom(42, 2)\n    print binom(43, 2)\n    print binom(44, 2)\n    print binom(45, 2)\n    print binom(46, 2)\n    print binom(47, 2)\n    print binom(48, 2)\n    print binom"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    :param n: the number of trial\n    :param k: the number of success\n    :return: the binomial coefficient\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef factorial(n):\n    \"\"\"\n    :param n: the number to calculate\n    :return: the factorial\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)\n\n\nif __name__ == '__main__':\n    print(binomial_coefficient(3, 3))\n    print(binomial_coefficient(5, 3))\n    print(binomial_coefficient(3, 0))\n    print(binomial_coefficient(3, 1))\n    print(binomial_coefficient(3, 2))\n    print(binomial_coefficient(3, 3))\n    print(binomial_coefficient(4, 3))"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "import math\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c2(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c3(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c4(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c5(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c6(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_c7(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\ndef binomial_coefficient_"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "import math\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Calculate the binomial coefficient\n    \"\"\"\n    if n == k:\n        return 1\n    if n > k:\n        return 0\n    if k > n:\n        return 0\n    return math.factorial(n) / math.factorial(k) / math.factorial(n-k)\n\n\ndef main():\n    print binomial_coefficient(10, 5)\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def binomial_coeff(n, k):\n    \"\"\"\n    Return the binomial coefficient for integer n and integer k.\n\n    The binomial coefficient is defined as:\n    binomial_coeff(n, k) = n! / (k! * (n - k)!)\n\n    This function returns the value of binomial coefficient.\n\n    Example:\n    >>> binomial_coeff(2, 1)\n    2\n    >>> binomial_coeff(3, 2)\n    6\n    >>> binomial_coeff(1, 1)\n    1\n    >>> binomial_coeff(4, 2)\n    8\n    >>> binomial_coeff(6, 3)\n    5040\n    >>> binomial_coeff(8, 3)\n    65387520\n    >>> binomial_coeff(10, 3)\n    73571040\n    >>> binomial_coeff(3, 3)\n    1\n    \"\"\"\n    if n == k:\n        return 1\n    if n < k:\n        return 0\n    return binomial_coeff(n - 1, k - 1) * n\n\nprint(binomial_coeff(5, 1))\nprint(binomial_coeff(5, 2))\nprint(binomial_coeff(5, 3))\nprint(binomial_coeff(5, 4))\nprint(binomial_coeff(5, 5))\nprint(binomial_coeff(5, 6))\nprint(binomial_coeff(5, 7))\nprint(binomial_coeff(5, 8))\nprint(binomial_coeff(5, 9))\nprint(binomial_coeff(5, 10))\nprint(binomial_coeff(5, 11))\nprint(binomial_coeff(5, 12))\nprint(binomial_coeff(5, 13))\nprint(binomial_coeff(5, 14))\nprint(binomial_coeff(5, 15))\nprint(binomial_coeff(5, 16))\nprint(binomial_coeff(5, 17))\nprint(binomial_coeff(5, 18))\nprint(binomial_coeff(5, 19))\nprint(bin"
    },
    {
      "rank": 25,
      "score": 10.0,
      "candidate": "def binomial(n,k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    \"\"\"\n    if k==0:\n        return 1\n    if k==1:\n        return n\n    return binomial(n-1,k-1)+binomial(n-1,k)\n\ndef main():\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    \"\"\"\n    print(binomial(10,1))\n    print(binomial(10,2))\n    print(binomial(10,3))\n    print(binomial(10,4))\n    print(binomial(10,5))\n    print(binomial(10,6))\n    print(binomial(10,7))\n    print(binomial(10,8))\n    print(binomial(10,9))\n    print(binomial(10,10))\n    print(binomial(10,11))\n    print(binomial(10,12))\n    print(binomial(10,13))\n    print(binomial(10,14))\n    print(binomial(10,15))\n    print(binomial(10,16))\n    print(binomial(10,17))\n    print(binomial(10,18))\n    print(binomial(10,19))\n    print(binomial(10,20))\n    print(binomial(10,21))\n    print(binomial(10,22))\n    print(binomial(10,23))\n    print(binomial(10,24))\n    print(binomial(10,25))\n    print(binomial(10,26))\n    print(binomial(10,27))\n    print(binomial(10,28))\n    print(binomial(10,29))\n    print(binomial(10,30))\n    print(binomial(10,31))\n    print(binomial(10,32))\n    print(binomial(10,33))\n    print(binomial(10,34))\n    print(binomial(10,35))\n    print(binomial(10,36))\n    print(binomial(10,37))\n    print(binomial"
    },
    {
      "rank": 26,
      "score": 10.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    n is positive integer, k is positive integer\n    \"\"\"\n    if n == 0:\n        return 1\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k > n:\n        return 0\n    if n == 1:\n        return 1\n    return binomial(n-1, k-1) * n * (k-1) / (k * (k-1))\n\ndef test():\n    assert binomial(0, 0) == 1\n    assert binomial(1, 0) == 1\n    assert binomial(1, 1) == 1\n    assert binomial(2, 1) == 2\n    assert binomial(3, 1) == 3\n    assert binomial(4, 1) == 4\n    assert binomial(5, 1) == 5\n    assert binomial(6, 1) == 6\n    assert binomial(7, 1) == 7\n    assert binomial(8, 1) == 8\n    assert binomial(9, 1) == 9\n    assert binomial(10, 1) == 10\n    assert binomial(11, 1) == 11\n    assert binomial(12, 1) == 12\n    assert binomial(13, 1) == 13\n    assert binomial(14, 1) == 14\n    assert binomial(15, 1) == 15\n    assert binomial(16, 1) == 16\n    assert binomial(17, 1) == 17\n    assert binomial(18, 1) == 18\n    assert binomial(19, 1) == 19\n    assert binomial(20, 1) == 20\n    assert binomial(21, 1) == 21\n    assert binomial(22, 1) == 22\n    assert binomial(23, 1) == 23\n    assert binomial(24, 1) == 24\n    assert binomial(25, 1) == 25\n    assert binomial(26, 1) == 26\n    assert binomial(27, 1) == 27\n    assert binomial(28, 1) == 28\n    assert binomial(29, 1) == 29\n    assert binomial(30, 1) == 30\n    assert binomial(31, 1) =="
    },
    {
      "rank": 27,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Find the binomial coefficient for n and k.\n    \"\"\"\n    return bin(n)[2:] == '0' * (k + 1) + bin(n)[k + 1:]\n\ndef main():\n    print(binomial_coefficient(10, 5))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 28,
      "score": 10.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    n is the number of objects, k is the number of objects to be counted.\n    Return the binomial coefficient (n choose k).\n    \"\"\"\n    result = 1\n    for i in range(k+1, n+1):\n        result *= i\n    return result\n\ndef main():\n    \"\"\"\n    Main function to call the other functions and test the output.\n    \"\"\"\n    test_cases = [\n        (3, 2),\n        (3, 3),\n        (5, 3),\n        (5, 4),\n        (5, 5),\n        (10, 4),\n        (10, 5),\n        (10, 6),\n        (10, 7),\n        (10, 8),\n        (10, 9),\n        (10, 10),\n        (10, 11),\n        (10, 12),\n        (10, 13),\n        (10, 14),\n        (10, 15),\n        (10, 16),\n        (10, 17),\n        (10, 18),\n        (10, 19),\n        (10, 20),\n        (10, 21),\n        (10, 22),\n        (10, 23),\n        (10, 24),\n        (10, 25),\n        (10, 26),\n        (10, 27),\n        (10, 28),\n        (10, 29),\n        (10, 30),\n        (10, 31),\n        (10, 32),\n        (10, 33),\n        (10, 34),\n        (10, 35),\n        (10, 36),\n        (10, 37),\n        (10, 38),\n        (10, 39),\n        (10, 40),\n        (10, 41),\n        (10, 42),\n        (10, 43),\n        (10, 44),\n        (10, 45),\n        (10, 46),\n        (10, 47),\n        (10, 48),\n        (10, 49),\n        (10, 50),\n        (10, 51),\n        (10, 52),\n        (10, 53),\n        (10, 54),\n        (10, 55),\n        (10,"
    },
    {
      "rank": 29,
      "score": 10.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    binomial(n, k) = n! / (k! * (n-k)!)\n    \"\"\"\n    return n**k * (n-k)**(n-k) / factorial(n)\n\ndef factorial(n):\n    \"\"\"\n    factorial(n) = n * (n - 1) * (n - 2) *... * 1\n    \"\"\"\n    return reduce(lambda x, y: x*y, range(1, n + 1))\n\ndef test():\n    assert binomial(0, 0) == 1\n    assert binomial(1, 0) == 1\n    assert binomial(1, 1) == 1\n    assert binomial(1, 2) == 1\n    assert binomial(2, 2) == 2\n    assert binomial(3, 2) == 3\n    assert binomial(3, 3) == 6\n    assert binomial(4, 2) == 7\n    assert binomial(4, 3) == 10\n    assert binomial(4, 4) == 24\n    assert binomial(5, 2) == 25\n    assert binomial(5, 3) == 35\n    assert binomial(5, 4) == 70\n    assert binomial(5, 5) == 210\n    assert binomial(6, 2) == 42\n    assert binomial(6, 3) == 84\n    assert binomial(6, 4) == 210\n    assert binomial(6, 5) == 350\n    assert binomial(7, 2) == 56\n    assert binomial(7, 3) == 126\n    assert binomial(7, 4) == 336\n    assert binomial(7, 5) == 630\n    assert binomial(8, 2) == 84\n    assert binomial(8, 3) == 252\n    assert binomial(8, 4) == 630\n    assert binomial(8, 5) == 1260\n    assert binomial(8, 6) == 3960\n    assert binomial(9, 2) == 126\n    assert binomial(9, 3) == 252\n    assert binomial(9, 4) == 630\n    assert binomial(9, 5) == 1260\n    assert binomial(9, 6"
    },
    {
      "rank": 30,
      "score": 10.0,
      "candidate": "# TODO:\n# 1. find the factorial of n\n# 2. find the binomial co-efficient\n# 3. find the binomial co-efficient in a function\n# 4. find the binomial co-efficient in a function\n# 5. find the binomial co-efficient in a function\n# 6. find the binomial co-efficient in a function\n# 7. find the binomial co-efficient in a function\n# 8. find the binomial co-efficient in a function\n# 9. find the binomial co-efficient in a function\n# 10. find the binomial co-efficient in a function\n# 11. find the binomial co-efficient in a function\n# 12. find the binomial co-efficient in a function\n# 13. find the binomial co-efficient in a function\n# 14. find the binomial co-efficient in a function\n# 15. find the binomial co-efficient in a function\n# 16. find the binomial co-efficient in a function\n# 17. find the binomial co-efficient in a function\n# 18. find the binomial co-efficient in a function\n# 19. find the binomial co-efficient in a function\n# 20. find the binomial co-efficient in a function\n# 21. find the binomial co-efficient in a function\n# 22. find the binomial co-efficient in a function\n# 23. find the binomial co-efficient in a function\n# 24. find the binomial co-efficient in a function\n# 25. find the binomial co-efficient in a function\n# 26. find the binomial co-efficient in a function\n# 27. find the binomial co-efficient in a function\n# 28. find the binomial co-efficient in a function\n# 29. find the binomial co-efficient in a function\n# 30. find the binomial co-efficient in a function\n# 31. find the binomial co-efficient in a function\n# 32. find the binomial co-efficient in a function\n# 33. find the binomial co-efficient in a function\n# 34. find the binomial co-efficient in a function\n# 35. find the binomial co-efficient in a function\n# 36. find the binomial co-efficient in a function\n# 37. find the binomial co-"
    },
    {
      "rank": 31,
      "score": 10.0,
      "candidate": "def binom(n, k):\n    return bin(n)\n\ndef binom_coeff(n, k):\n    return binom(n, k)\n\ndef binom_coeff_python(n, k):\n    return binom(n, k) % 1"
    },
    {
      "rank": 32,
      "score": 10.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    binomial(n, k) -> Returns the binomial coefficient n choose k.\n\n    Example:\n    >>> binomial(8, 3)\n    2\n    >>> binomial(3, 3)\n    3\n    >>> binomial(2, 3)\n    2\n    >>> binomial(3, 4)\n    24\n    >>> binomial(2, 4)\n    8\n    >>> binomial(3, 4)\n    24\n    >>> binomial(4, 4)\n    64\n    >>> binomial(4, 3)\n    0\n    >>> binomial(4, 3)\n    0\n    >>> binomial(4, 5)\n    0\n    >>> binomial(5, 5)\n    1\n    >>> binomial(5, 5)\n    1\n    >>> binomial(6, 3)\n    24\n    >>> binomial(6, 4)\n    48\n    >>> binomial(6, 5)\n    384\n    >>> binomial(6, 6)\n    1409\n    >>> binomial(7, 2)\n    2\n    >>> binomial(7, 3)\n    7\n    >>> binomial(7, 4)\n    21\n    >>> binomial(7, 5)\n    343\n    >>> binomial(7, 6)\n    1403\n    >>> binomial(7, 7)\n    7\n    >>> binomial(7, 8)\n    7\n    >>> binomial(8, 7)\n    7\n    >>> binomial(8, 8)\n    1\n    >>> binomial(9, 7)\n    0\n    >>> binomial(9, 8)\n    0\n    >>> binomial(10, 7)\n    0\n    >>> binomial(10, 8)\n    0\n    >>> binomial(11, 7)\n    0\n    >>> binomial(11, 8)\n    0\n    >>> binomial(12, 7)\n    0\n    >>> binomial(12, 8)\n    0\n    >>> binomial(13, 7)\n    0\n    >>> binomial(13, 8)\n    0\n    >>> binomial(14, 7)\n    0\n    >>> binomial(14"
    },
    {
      "rank": 33,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Compute binomial coefficient.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_recursive(n, k):\n    \"\"\"\n    Compute binomial coefficient recursively.\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial_coefficient_recursive(n - 1, k - 1) * n / (k * (n - k))\n\ndef binomial_coefficient_iterative(n, k):\n    \"\"\"\n    Compute binomial coefficient iteratively.\n    \"\"\"\n    ans = 1\n    for i in range(1, k + 1):\n        ans *= (n - i + 1) / (i + 1)\n    return ans\n\ndef test():\n    assert binomial_coefficient(5, 0) == 1\n    assert binomial_coefficient(5, 1) == 5\n    assert binomial_coefficient(5, 2) == 10\n    assert binomial_coefficient(5, 3) == 35\n    assert binomial_coefficient(5, 4) == 210\n    assert binomial_coefficient(5, 5) == 3570\n    assert binomial_coefficient(5, 6) == 69370\n    assert binomial_coefficient(5, 7) == 1259560\n    assert binomial_coefficient(5, 8) == 4096070\n    assert binomial_coefficient(5, 9) == 61414175\n    assert binomial_coefficient(5, 10) == 1228304975\n    assert binomial_coefficient(5, 11) == 314572875\n\n    assert binomial_coefficient_recursive(5, 0) == 1\n    assert binomial_coefficient_recursive(5, 1) == 5\n    assert binomial_coefficient_recursive(5, 2) == 10\n    assert binomial_coefficient_recursive(5, 3) == 35\n    assert binomial_coefficient_recursive(5, 4) == 210"
    },
    {
      "rank": 34,
      "score": 10.0,
      "candidate": "# https://www.hackerrank.com/challenges/binomial-coefficients/problem\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    :type n: int\n    :type k: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 1\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    return binomial_coefficient(n - 1, k - 1) * n / (k - 1)\n\nif __name__ == \"__main__\":\n    print(binomial_coefficient(1, 0))\n    print(binomial_coefficient(2, 1))\n    print(binomial_coefficient(2, 2))\n    print(binomial_coefficient(3, 1))\n    print(binomial_coefficient(3, 2))\n    print(binomial_coefficient(3, 3))"
    },
    {
      "rank": 35,
      "score": 10.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    Find binomial coefficient for n,k.\n    \"\"\"\n    if k < 0 or n < k:\n        return 0\n    if n == 0:\n        return 1\n    return binom(n-1, k) + binom(n-1, k-1)\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    n = int(input())\n    k = int(input())\n    print(binom(n, k))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 36,
      "score": 10.0,
      "candidate": "def binomial(n,k):\n    return reduce(lambda x,y: x*(y+1),range(1,k+1),1)\n\ndef binomial_coefficient(n,k):\n    return binomial(n,k)*(binomial(n-k,k-1)*binomial(k,k))\n\ndef test_binomial_coefficient():\n    assert binomial_coefficient(5,3) == 120\n\nif __name__ == \"__main__\":\n    test_binomial_coefficient()"
    },
    {
      "rank": 37,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Compute the binomial coefficient.\n\n    :param n: Integer\n    :param k: Integer\n    :return: Integer\n    \"\"\"\n    return (math.factorial(n) * math.factorial(k) /\n            math.factorial(n - k) / math.factorial(k))\n\n\ndef test_binomial_coefficient():\n    \"\"\"\n    Test the binomial_coefficient function.\n    \"\"\"\n    assert binomial_coefficient(0, 0) == 1\n    assert binomial_coefficient(0, 1) == 0\n    assert binomial_coefficient(1, 0) == 1\n    assert binomial_coefficient(1, 1) == 1\n    assert binomial_coefficient(2, 0) == 1\n    assert binomial_coefficient(2, 1) == 2\n    assert binomial_coefficient(2, 2) == 1\n    assert binomial_coefficient(3, 0) == 1\n    assert binomial_coefficient(3, 1) == 3\n    assert binomial_coefficient(3, 2) == 3\n    assert binomial_coefficient(3, 3) == 1\n    assert binomial_coefficient(4, 0) == 1\n    assert binomial_coefficient(4, 1) == 4\n    assert binomial_coefficient(4, 2) == 6\n    assert binomial_coefficient(4, 3) == 4\n    assert binomial_coefficient(4, 4) == 1\n    assert binomial_coefficient(5, 0) == 1\n    assert binomial_coefficient(5, 1) == 5\n    assert binomial_coefficient(5, 2) == 10\n    assert binomial_coefficient(5, 3) == 10\n    assert binomial_coefficient(5, 4) == 5\n    assert binomial_coefficient(5, 5) == 1\n    assert binomial_coefficient(6, 0) == 1\n    assert binomial_coefficient(6, 1) == 6\n    assert binomial_coefficient(6, 2) == 15\n    assert binomial_coefficient(6, 3) == 30\n    assert binomial_coefficient"
    },
    {
      "rank": 38,
      "score": 10.0,
      "candidate": "import math\n\ndef binom(n, k):\n    \"\"\"\n    n, k: int\n    Return the binomial coefficient.\n    \"\"\"\n    return math.factorial(n)/(math.factorial(k) * math.factorial(n-k))\n\ndef main():\n    print(binom(100, 10))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 39,
      "score": 10.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Compute the binomial coefficient of n and k.\n    \"\"\"\n    return (math.factorial(n) / (math.factorial(k) * math.factorial(n - k)))\n\ndef binom_coeff(n, k):\n    \"\"\"\n    Return the binomial coefficient\n    \"\"\"\n    return binomial(n, k)\n\ndef main():\n    \"\"\"\n    Write a program that prints the binomial coefficient\n    of a given number and the number of ways it can be\n    computed.\n    \"\"\"\n    for i in range(0, 10):\n        print(binom_coeff(i, i))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 40,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_2(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_3(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_4(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_5(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_6(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_7(n, k):\n    \"\"\"\n    n is the total number of terms, k is the number of terms to be counted.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n - k))\n\ndef binomial_coefficient_8(n, k):\n    \"\"\"\n    n is the total number of"
    },
    {
      "rank": 41,
      "score": 10.0,
      "candidate": "# http://www.mathsisfun.com/calculators/binomial-coefficient.html\n# http://www.mathsisfun.com/calculators/binary-number-factorial.html\n\n# http://www.mathsisfun.com/algebra/factorials.html\n# http://en.wikipedia.org/wiki/Factorial\n# http://en.wikipedia.org/wiki/Combination_%28number_theory%29\n# http://www.mathsisfun.com/algebra/combinations.html\n\ndef binomial(n, k):\n    \"\"\"\n    Calculate binomial co-efficient.\n\n    n = number of items\n    k = number of items in subset\n    \"\"\"\n    if n == 0:\n        return 1\n    elif k == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial(n - 1, k - 1) * n / (k * (k - 1))\n\n# Test cases\n\n# Test case 1\nprint binomial(100, 100)\n\n# Test case 2\nprint binomial(100, 0)\n\n# Test case 3\nprint binomial(0, 0)\n\n# Test case 4\nprint binomial(100, 101)\n\n# Test case 5\nprint binomial(100, 101)"
    },
    {
      "rank": 42,
      "score": 10.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Calculate the binomial coefficient\n    :param n: the number of elements\n    :param k: the number of elements\n    :return: the binomial coefficient\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n-k))\n\ndef factorial(n):\n    \"\"\"\n    Calculate factorial of n\n    :param n: the number of elements\n    :return: the factorial\n    \"\"\"\n    return reduce(lambda x, y: x * y, range(1, n+1), 1)\n\nif __name__ == \"__main__\":\n    print(binomial_coefficient(5, 1))\n    print(binomial_coefficient(5, 2))\n    print(binomial_coefficient(5, 3))\n    print(binomial_coefficient(5, 4))\n    print(binomial_coefficient(5, 5))\n    print(binomial_coefficient(5, 6))\n    print(binomial_coefficient(5, 7))\n    print(binomial_coefficient(5, 8))\n    print(binomial_coefficient(5, 9))\n    print(binomial_coefficient(5, 10))\n    print(binomial_coefficient(5, 11))\n    print(binomial_coefficient(5, 12))\n    print(binomial_coefficient(5, 13))\n    print(binomial_coefficient(5, 14))"
    },
    {
      "rank": 43,
      "score": 9.0,
      "candidate": "def binomial_coefficient(n, k):\n    return (1 + binomial_coefficient(n-1, k)) * (1 - binomial_coefficient(n-1, k-1))\n\nprint binomial_coefficient(6, 3)"
    },
    {
      "rank": 44,
      "score": 9.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    For n,k > 0, return the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k, 0, -1):\n        result = result * (n - i) / i\n    return result\n\ndef binomial_coefficient_2(n, k):\n    \"\"\"\n    For n,k > 0, return the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k, 0, -1):\n        result = result * (n - i) / (i + 1)\n    return result\n\ndef binomial_coefficient_3(n, k):\n    \"\"\"\n    For n,k > 0, return the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k, 0, -1):\n        result = result * (n - i) / (i + 1)\n    for j in range(2, k + 1):\n        result = result * (n - j) / (j + 1)\n    return result\n\ndef binomial_coefficient_4(n, k):\n    \"\"\"\n    For n,k > 0, return the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k, 0, -1):\n        result = result * (n - i) / (i + 1)\n    for j in range(2, k + 1):\n        result = result * (n - j) / (j + 1)\n    for m in range(2, k + 1):\n        result = result * (n - m) / (m + 1)\n    return result\n\nif __name__ == '__main__':\n    n = int(input())\n    k = int(input())\n    print(binomial_coefficient(n, k))\n    print(binomial_coefficient_2(n, k))\n    print(binomial_coefficient_3(n, k))\n    print(binomial_coefficient_4(n, k))"
    },
    {
      "rank": 45,
      "score": 9.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    n: int\n    k: int\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * binomial(n - 1, k - 1)\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    print(binomial(5, 4))\n    print(binomial(5, 6))\n    print(binomial(5, 7))\n    print(binomial(5, 8))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 46,
      "score": 9.0,
      "candidate": "# https://www.youtube.com/watch?v=kDf6xX8fK0I\n# http://www.mathsisfun.com/binomial-coefficient.html\n\ndef binom(n, k):\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return 1\n    if k > n:\n        return 0\n    if n < 0:\n        return 0\n    if k < 0:\n        return 0\n    result = 0\n    for i in range(2, k + 1):\n        result += binom(n - i, i) * binom(i, k - i)\n    return result\n\n\ndef binom_coeff(n, k):\n    return binom(n, k) / binom(k, k)\n\n\nif __name__ == '__main__':\n    print(binom(7, 1))\n    print(binom_coeff(7, 1))\n    print(binom(7, 2))\n    print(binom_coeff(7, 2))\n    print(binom(7, 3))\n    print(binom_coeff(7, 3))"
    },
    {
      "rank": 47,
      "score": 9.0,
      "candidate": "from math import factorial\n\ndef binomial(n, k):\n    \"\"\"\n    Return the binomial coefficient, n choose k.\n    n, k = int, int\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\nif __name__ == '__main__':\n    n = 3\n    k = 2\n    print binomial(n, k)\n    print binomial(n, k, 1)\n    print binomial(n, k, 2)"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    binomial(n, k) -> returns the binomial coefficient,\n    which is the number of ways of choosing k elements from\n    n elements.\n    \"\"\"\n    if n==k:\n        return 1\n    if n<=0:\n        return 0\n    if k<=0:\n        return 0\n    if k==0 or k==n:\n        return 1\n    return binomial(n-1, k-1) + binomial(n-1, k)\n\nif __name__ == '__main__':\n    print(binomial(2,3))"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Find binomial co-efficient.\n\n    :param n:\n        Number of terms.\n    :param k:\n        Number of terms to be counted.\n    :return:\n        Binomial co-efficient.\n    \"\"\"\n    return n * (k + 1) / (k + n - 1)"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Find binomial coefficient.\n    \"\"\"\n    if n == 0 or k == 0:\n        return 1\n    elif n == 1:\n        return k\n    elif k == 1:\n        return n\n    else:\n        return binomial_coefficient(n - 1, k) * binomial_coefficient(n - 1, k - 1)\n\ndef main():\n    \"\"\"\n    Main function\n    \"\"\"\n    n = int(input('Enter n: '))\n    k = int(input('Enter k: '))\n    print('The binomial coefficient of n, k is {}'.format(binomial_coefficient(n, k)))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    >>> binomial_coefficient(10, 4)\n    24\n    >>> binomial_coefficient(15, 2)\n    6\n    >>> binomial_coefficient(0, 0)\n    1\n    >>> binomial_coefficient(0, 1)\n    0\n    \"\"\"\n    if n == 0 or k == 0:\n        return 1\n    elif n == 1 or k == 1:\n        return 1\n    else:\n        return binomial_coefficient(n - 1, k - 1) * (n - 1) * (k - 1) / (k + 1)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def binom_coef(n, k):\n    \"\"\"\n    binom_coef(n, k) -> return the binomial coefficient of n and k\n    \"\"\"\n    if k > n or k < 0 or k > n - k:\n        return 0\n    else:\n        if k == 0 or k == n:\n            return 1\n        else:\n            return binom_coef(n - k, k) + binom_coef(n - k - 1, k - 1)\n\nprint binom_coef(4, 2)"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    return factorial(n) / (factorial(k) * factorial(n-k))\n\n# print binomial_coefficient(10, 4)\n\ndef factorial(n):\n    return reduce(lambda x, y: x*y, range(1, n+1))\n\n# print factorial(10)\n\ndef binomial_coefficient_2(n, k):\n    return reduce(lambda x, y: x*(y+1), range(1, k+1), 1) / (factorial(n) * factorial(k))\n\n# print binomial_coefficient_2(10, 4)\n\ndef binomial_coefficient_3(n, k):\n    return reduce(lambda x, y: x*(y+1), range(1, k+1), 1) / (factorial(n) * factorial(k-1) * factorial(n-k))\n\n# print binomial_coefficient_3(10, 4)\n\ndef binomial_coefficient_4(n, k):\n    return reduce(lambda x, y: x*(y+1), range(1, k+1), 1) / (factorial(n) * factorial(k-1) * factorial(n-k) * factorial(k))\n\n# print binomial_coefficient_4(10, 4)\n\ndef binomial_coefficient_5(n, k):\n    return reduce(lambda x, y: x*(y+1), range(1, k+1), 1) / (factorial(n) * factorial(k-1) * factorial(n-k) * factorial(k-1) * factorial(n-k-1))\n\n# print binomial_coefficient_5(10, 4)\n\ndef binomial_coefficient_6(n, k):\n    return reduce(lambda x, y: x*(y+1), range(1, k+1), 1) / (factorial(n) * factorial(k-1) * factorial(n-k) * factorial(k-1) * factorial(n-k-1) * factorial"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * binomial(n, k-1)\n\n\ndef binomial_coefficient(n, k):\n    return binomial(n, k) * pow(2, k)\n\n\nprint(binomial_coefficient(4, 1))\nprint(binomial_coefficient(4, 2))\nprint(binomial_coefficient(4, 3))\nprint(binomial_coefficient(4, 4))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Find binomial coefficient.\n\n    n: integer\n    k: integer\n\n    Return: binomial_coefficient(n, k)\n    \"\"\"\n    if n < 0 or k < 0 or k > n:\n        raise ValueError(\"n and k must be non-negative.\")\n\n    if k == 0:\n        return 1\n\n    if k == 1:\n        return n\n\n    if k == n:\n        return 1\n\n    # Recursively calculate the binomial coefficient of the next higher\n    # number\n    return binomial_coefficient(n-1, k-1) * k / (n-1)\n\n\ndef main():\n    print(binomial_coefficient(5, 3))\n    print(binomial_coefficient(5, 4))\n    print(binomial_coefficient(5, 5))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def binom_coef(n, k):\n    \"\"\"\n    Write a python function to calculate binomial coefficient.\n    \"\"\"\n    if k == 0 or n == 0:\n        return 1\n    if k == 1 or n == 1:\n        return n\n    return binom_coef(n - 1, k - 1) * binom_coef(n - 1, k)\n\n# Testing\nif __name__ == '__main__':\n    print binom_coef(4, 2)"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    return factorial(n)/(factorial(k)*factorial(n-k))\n\ndef factorial(n):\n    return reduce(lambda x, y: x*y, range(1, n+1))\n\ndef main():\n    for n in range(1, 10):\n        for k in range(1, 10):\n            print n, k, binomial_coefficient(n, k)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    if k > n:\n        return 0\n    elif k == n:\n        return 1\n    elif k == 0:\n        return 1\n    else:\n        return binomial(n-1, k-1) * n / (k+1)\n\ndef main():\n    print binomial(10, 5)\n    return 0\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a function to calculate binomial coefficient.\n    \"\"\"\n    return 1 if k == 0 or n == 0 else binomial_coefficient(n-1, k-1) * n / factorial(k)\n\ndef factorial(n):\n    \"\"\"\n    Write a function to calculate factorial.\n    \"\"\"\n    return reduce(lambda x, y: x * y, range(1, n+1))\n\ndef main():\n    print binomial_coefficient(8, 2)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Calculate binomial co-efficient.\n    \"\"\"\n    if n == 0:\n        return 1\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif n == 1:\n        return 1\n    elif k == n:\n        return 1\n    elif k == n - 1:\n        return n\n    else:\n        return n * binomial(n - 1, k)\n\ndef main():\n    \"\"\"\n    Calculate binomial co-efficient.\n    \"\"\"\n    print binomial(10, 1)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    \"\"\"\n    if n < k:\n        return 0\n    if n == k:\n        return 1\n    return binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n\ndef main():\n    print(binomial_coefficient(3, 1))\n    print(binomial_coefficient(3, 2))\n    print(binomial_coefficient(4, 3))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Binomial Coefficient\n    \"\"\"\n    if n < k:\n        return 0\n    return reduce(lambda x, y: x * (n - k + 1) * (n - k) * y,\n                  range(1, k + 1), 1)\n\ndef main():\n    n = int(input())\n    k = int(input())\n    print(binomial_coefficient(n, k))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a function to calculate the binomial co-efficient.\n    \"\"\"\n    if k > n:\n        return 0\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return 1\n    return binomial_coefficient(n-1, k-1) * n / (k * (k-1))\n\nprint binomial_coefficient(10, 5)"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n,k):\n    \"\"\"\n    >>> binomial_coefficient(3,1)\n    3\n    >>> binomial_coefficient(3,0)\n    1\n    >>> binomial_coefficient(2,1)\n    2\n    >>> binomial_coefficient(1,2)\n    1\n    >>> binomial_coefficient(2,3)\n    6\n    >>> binomial_coefficient(2,0)\n    1\n    \"\"\"\n    if k == 0 or n == k:\n        return 1\n    elif k == 1 or n == 1:\n        return 1\n    elif k < 0 or n < 0:\n        raise ValueError(\"n and k must be positive integers\")\n    elif k > n:\n        return 0\n    else:\n        return binomial_coefficient(n-1,k-1) * binomial_coefficient(n-1,k)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def binom(n, k):\n    return fact(n) / (fact(k) * fact(n - k))\n\ndef fact(n):\n    result = 1\n    for i in range(1, n + 1):\n        result *= i\n    return result\n\nif __name__ == \"__main__\":\n    print binom(10, 2)"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n,k):\n    if n == 0 or k == 0:\n        return 1\n    else:\n        return reduce(lambda a, b: a * b, map(lambda x: x + 1, range(n + 1, k + 1))) / reduce(lambda a, b: a * b, range(1, n + 1))\n\nn = int(input())\nk = int(input())\nprint(binomial_coefficient(n, k))"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "import math\n\ndef binomial(n, k):\n    \"\"\"\n    Returns the binomial coefficient.\n\n    n is a positive integer, k is a non-negative integer.\n\n    Example:\n    >>> binomial(7,2)\n    70\n    >>> binomial(7,3)\n    1067\n    >>> binomial(7,4)\n    92949\n    \"\"\"\n    if k < 0 or n < k:\n        raise ValueError(\"Invalid input. k must be a non-negative integer.\")\n    if k == 0 or k == n:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return 1\n    if k == n - 1:\n        return n\n    return binomial(n-1, k-1) * n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Returns the binomial coefficient.\n\n    n is a positive integer, k is a non-negative integer.\n\n    Example:\n    >>> binomial_coefficient(7,2)\n    70\n    >>> binomial_coefficient(7,3)\n    1067\n    >>> binomial_coefficient(7,4)\n    92949\n    \"\"\"\n    if k < 0 or n < k:\n        raise ValueError(\"Invalid input. k must be a non-negative integer.\")\n    if k == 0 or k == n:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return 1\n    if k == n - 1:\n        return n\n    return binomial(n-1, k-1) * n\n\ndef binomial_coefficient_recursive(n, k):\n    \"\"\"\n    Returns the binomial coefficient.\n\n    n is a positive integer, k is a non-negative integer.\n\n    Example:\n    >>> binomial_coefficient_recursive(7,2)\n    70\n    >>> binomial_coefficient_recursive(7,3)\n    1067\n    >>> binomial_coefficient_recursive(7,4)\n    92949\n    \"\"\"\n    if k < 0 or n < k:\n        raise ValueError(\"Invalid input. k must be a non"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Binomial coefficient\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n-k))\n\ndef factorial(n):\n    \"\"\"\n    Factorial\n    \"\"\"\n    return reduce(lambda x, y: x*y, range(1, n+1))\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Binomial coefficient\n    \"\"\"\n    return binomial(n, k)\n\ndef main():\n    n = raw_input('Enter n: ')\n    k = raw_input('Enter k: ')\n    result = binomial_coefficient(n, k)\n    print 'The binomial coefficient is:', result\n    \nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Returns the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k, 0, -1):\n        result *= n - i\n        result /= i\n    return result\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    n = int(input(\"Enter a positive integer : \"))\n    k = int(input(\"Enter a positive integer : \"))\n    print(\"The binomial coefficient is : \", binomial(n, k))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k > n:\n        return 0\n    else:\n        return (n*binomial(n-1, k-1) - n*binomial(n-1, k) + k*binomial(n, k-1)) / k\n\nn = int(input())\nk = int(input())\nprint(binomial(n, k))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "import math\ndef binomial(n, k):\n    \"\"\"\n    Find binomial co-efficient.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\n# Test\nprint binomial(20, 3)"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "import numpy as np\n\ndef binomial_coefficient(n,k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    \"\"\"\n    n = int(n)\n    k = int(k)\n    if (k < 0 or k > n):\n        return 0\n    else:\n        return np.power(2,k)*np.power(n,k-1)*np.power(n-k,k)\n\nif __name__ == '__main__':\n    print binomial_coefficient(10,3)"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Find binomial co-efficient of n and k.\n    \"\"\"\n    if n == 0:\n        return 1\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * binomial(n - 1, k - 1)\n\nprint(binomial(20, 10))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "#!/usr/bin/python\n\ndef binom(n, k):\n    if k == 0 or k == n:\n        return 1\n    elif k < 0 or k > n:\n        return 0\n    elif k == 1 or k == n - 1:\n        return 1\n    elif k == 2 or k == n - 2:\n        return 2\n    else:\n        return binom(n, k - 1) + binom(n - 1, k - 1)\n\ndef main():\n    print binom(15, 4)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    n is positive integer, k is positive integer\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k == 2:\n        return n*(n-1)/2\n    else:\n        return n*(n-1)*(n-2)/(k-1)*(k-2)/(k-1)\n\nprint binomial_coefficient(10, 2)"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Calculate binomial coefficient.\n\n    n: integer\n    k: integer\n    \"\"\"\n    if n == k:\n        return 1\n    elif n > k:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial_coefficient(n - 1, k) + binomial_coefficient(n - 1, k - 1)\n\nprint(binomial_coefficient(4, 3))"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    n and k are positive integers.\n    \"\"\"\n    if k == 0 or n == 0 or k == n:\n        return 1\n    else:\n        return binomial_coefficient(n - 1, k - 1) * binomial_coefficient(n - 1, k)\n\n\nif __name__ == '__main__':\n    print binomial_coefficient(10, 4)"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    return int(factorial(n) / (factorial(k) * factorial(n - k)))\n\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\ndef main():\n    print(binomial_coefficient(10, 3))\n    print(binomial_coefficient(10, 5))\n    print(binomial_coefficient(10, 10))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    Return the binomial coefficient C(n, k)\n    \"\"\"\n    if n == k:\n        return 1\n    elif k == 0 or n == 0:\n        return 0\n    elif n == 1 or k == 1:\n        return 1\n    elif k == 1 or n == 1:\n        return 1\n    else:\n        return binom(n-1, k-1) * binom(n-1, k) * binom(n-1, k-1)\n\ndef binom_coefficient(n, k):\n    \"\"\"\n    Return the binomial coefficient C(n, k)\n    \"\"\"\n    if n == k:\n        return 1\n    elif k == 0 or n == 0:\n        return 0\n    elif k == 1 or n == 1:\n        return 1\n    else:\n        return binom(n, k) / (binom(n-1, k-1) * binom(n-1, k))\n\ndef binom_coefficient_recursive(n, k):\n    \"\"\"\n    Return the binomial coefficient C(n, k)\n    \"\"\"\n    if n == k:\n        return 1\n    elif k == 0 or n == 0:\n        return 0\n    elif k == 1 or n == 1:\n        return 1\n    else:\n        return binom(n, k) + binom_coefficient_recursive(n-1, k-1) * binom_coefficient_recursive(n-1, k)\n\nif __name__ == '__main__':\n    print binom_coefficient(5, 2)\n    print binom_coefficient_recursive(5, 2)"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "def binom(n, k):\n    if (k > n):\n        return 0\n    if (k == 0 or k == n):\n        return 1\n    if (k == 1 or k == n - 1):\n        return n\n    return binom(n - 1, k - 1) + binom(n - 1, k)\n\n\ndef main():\n    print(binom(10, 5))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "from math import factorial\n\ndef binom(n, k):\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return factorial(n)\n    return binom(n-1, k-1) * binom(n-1, k)\n\n# Test\nprint(binom(4, 3))"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "from math import log\n\ndef binomial(n, k):\n    if n == k:\n        return 1\n    if n == 0:\n        return 0\n    return binomial(n - 1, k) + binomial(n - 1, k - 1)\n\ndef binomial_coefficient(n, k):\n    return binomial(n, k) / log(n)\n\ndef main():\n    n = int(input())\n    k = int(input())\n    print(binomial_coefficient(n, k))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "import math\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Returns the binomial coefficient.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(k) * math.factorial(n-k))\n\nif __name__ == '__main__':\n    print binomial_coefficient(6, 4)"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "def binomial_coeff(n, k):\n    \"\"\"\n    Compute the binomial coefficient.\n    Input: n and k are positive integers.\n    Output: the binomial coefficient.\n    \"\"\"\n    binomial_coeff = 1\n    for i in range(k, 0, -1):\n        binomial_coeff *= n - i\n        binomial_coeff /= i\n    return binomial_coeff\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter n: \"))\n    k = int(input(\"Enter k: \"))\n    print(\"Binomial co-efficient is {}\".format(binomial_coeff(n, k)))"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    n is the number of trials, k is the number of successes.\n    Return the binomial coefficient C(n, k)\n    \"\"\"\n    if n < k:\n        return 0\n    if n == k:\n        return 1\n    if n - k == k - 1:\n        return 1\n    if n - k == k - 2:\n        return n\n    return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)\n\n# Test Cases\nassert binomial_coefficient(4, 2) == 2\nassert binomial_coefficient(4, 3) == 4\nassert binomial_coefficient(4, 4) == 1\nassert binomial_coefficient(5, 1) == 1\nassert binomial_coefficient(5, 2) == 5\nassert binomial_coefficient(5, 3) == 10\nassert binomial_coefficient(5, 4) == 10\nassert binomial_coefficient(5, 5) == 1\nassert binomial_coefficient(5, 6) == 0\nassert binomial_coefficient(5, 7) == 0\nassert binomial_coefficient(5, 8) == 0\nassert binomial_coefficient(5, 9) == 0\nassert binomial_coefficient(5, 10) == 0\nassert binomial_coefficient(5, 11) == 0\nassert binomial_coefficient(5, 12) == 0\nassert binomial_coefficient(5, 13) == 0\nassert binomial_coefficient(5, 14) == 0\nassert binomial_coefficient(5, 15) == 0\nassert binomial_coefficient(5, 16) == 0\nassert binomial_coefficient(5, 17) == 0\nassert binomial_coefficient(5, 18) == 0\nassert binomial_coefficient(5, 19) == 0\nassert binomial_coefficient(5, 20) == 0\nassert binomial_coefficient(5, 21) == 0\nassert binomial_coefficient(5, 22) == 0\nassert binomial_coefficient(5, 23) == 0"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    n is the number of elements in the set and k is the number of elements\n    to be removed from the set.\n    \"\"\"\n    if n == 0:\n        return 1\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k == n:\n        return 1\n    elif k < n:\n        return n - k\n    elif k > n:\n        return k - n\n    else:\n        return (n - k) * binomial_coefficient(n - 1, k - 1)\n\nif __name__ == '__main__':\n    print binomial_coefficient(5, 2)"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Find binomial co-efficient for n and k.\n    \"\"\"\n    if k > n:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return (n * (k - 1)) / (k)\n\ndef main():\n    \"\"\"\n    Write a function to calculate binomial coefficient.\n    \"\"\"\n    print binomial(6, 2)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    n, k - integer\n    Return binomial coefficient.\n\n    For example:\n    >>> binomial_coefficient(4, 3)\n    120\n    >>> binomial_coefficient(5, 5)\n    120\n    >>> binomial_coefficient(5, 6)\n    30240\n    >>> binomial_coefficient(7, 4)\n    24290\n    >>> binomial_coefficient(7, 5)\n    720\n    >>> binomial_coefficient(7, 6)\n    720\n    >>> binomial_coefficient(7, 7)\n    0\n    >>> binomial_coefficient(8, 4)\n    362880\n    >>> binomial_coefficient(8, 5)\n    3628800\n    >>> binomial_coefficient(8, 6)\n    18678560\n    >>> binomial_coefficient(8, 7)\n    0\n    \"\"\"\n    if n < k:\n        return 0\n    if n == k:\n        return 1\n    if n == k + 1:\n        return 1\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k == 2:\n        return n * (n - 1)\n    if k == 3:\n        return n * (n - 1) * (n - 2)\n    if k == 4:\n        return n * (n - 1) * (n - 2) * (n - 3)\n    if k == 5:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4)\n    if k == 6:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5)\n    if k == 7:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6)\n    if k == 8:\n        return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5)"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "#!/usr/bin/env python\n\ndef binomial(n, k):\n    \"\"\"\n    n is the number of elements in the set.\n    k is the number of elements to be removed.\n    \"\"\"\n    if n == k:\n        return 1\n    elif n == 0:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial(n-1, k-1) * n / (k-1)\n\nprint binomial(10, 5)\n\ndef binomial_with_limit(n, k):\n    \"\"\"\n    n is the number of elements in the set.\n    k is the number of elements to be removed.\n    \"\"\"\n    if n == k:\n        return 1\n    elif n == 0:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial_with_limit(n-1, k-1) * n / (k-1)\n\nprint binomial_with_limit(10, 5)"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def binom(n, k):\n    \"\"\"\n    Binomial coefficient.\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k == n:\n        return 1\n    elif k > n:\n        return 0\n    elif k == n - 1:\n        return n\n    else:\n        return binom(n, k - 1) * k / (k + 1)\n\nif __name__ == '__main__':\n    print binom(6, 3)\n    print binom(6, 4)\n    print binom(6, 5)\n    print binom(6, 6)\n    print binom(6, 7)"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Find binomial coefficient.\n    \"\"\"\n    binomial_coefficient_list = [1]\n    for i in range(1, k + 1):\n        binomial_coefficient_list.append(binomial_coefficient_list[-1] * (n - i + 1))\n    return binomial_coefficient_list[-1]\n\nprint(binomial_coefficient(10, 3))"
    },
    {
      "rank": 92,
      "score": 8.0,
      "candidate": "from math import factorial\ndef binom(n,k):\n    return factorial(n)/(factorial(k)*factorial(n-k))\n\ndef binom_coeff(n,k):\n    return binom(n,k)\n\nprint binom(10,5)\nprint binom_coeff(10,5)"
    },
    {
      "rank": 93,
      "score": 8.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    binomial_coefficient(n, k) -> returns the binomial co-efficient of n\n    n, k\n    \"\"\"\n\n    if k == 0 or k == n:\n        return 1\n    elif k > n:\n        return 0\n    else:\n        return binomial_coefficient(n - 1, k - 1) + binomial_coefficient(n - 1, k)"
    },
    {
      "rank": 94,
      "score": 8.0,
      "candidate": "import time\nimport random\n\ndef binom(n, k):\n    \"\"\"\n    Given n and k, return the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k):\n        result *= (n - i)\n        result /= (i + 1)\n    return result\n\ndef binom_python(n, k):\n    \"\"\"\n    Given n and k, return the binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(k):\n        result *= (n - i)\n        result /= (i + 1)\n    return result\n\ndef timeit(f):\n    start = time.time()\n    f()\n    end = time.time()\n    print 'time taken:', end - start,'seconds'\n\ndef main():\n    n = random.randint(1, 10)\n    k = random.randint(1, 10)\n    print 'n:', n\n    print 'k:', k\n    timeit(binom_python)\n    timeit(binom)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 95,
      "score": 8.0,
      "candidate": "def binomial_coeff(n, k):\n    \"\"\"\n    n is a positive integer and k is a positive integer.\n    Return the binomial coefficient.\n    \"\"\"\n    if n == 0 or k == 0 or k > n:\n        return 0\n    if k == 1:\n        return 1\n    return binomial_coeff(n - 1, k - 1) + binomial_coeff(n - 1, k)\n\n# Test cases\nprint binomial_coeff(4, 2)\nprint binomial_coeff(4, 3)\nprint binomial_coeff(4, 4)\nprint binomial_coeff(4, 5)\nprint binomial_coeff(5, 4)\nprint binomial_coeff(5, 5)\nprint binomial_coeff(5, 6)\nprint binomial_coeff(6, 4)\nprint binomial_coeff(6, 5)\nprint binomial_coeff(6, 6)\nprint binomial_coeff(7, 3)\nprint binomial_coeff(7, 4)\nprint binomial_coeff(7, 5)\nprint binomial_coeff(7, 6)\nprint binomial_coeff(7, 7)\nprint binomial_coeff(8, 3)\nprint binomial_coeff(8, 4)\nprint binomial_coeff(8, 5)\nprint binomial_coeff(8, 6)\nprint binomial_coeff(8, 7)\nprint binomial_coeff(8, 8)"
    },
    {
      "rank": 96,
      "score": 8.0,
      "candidate": "import math\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Return binomial coefficient.\n    \"\"\"\n    result = 1\n    for i in range(1, k+1):\n        result *= (n - i + 1) / i\n    return result\n\nif __name__ == \"__main__\":\n    n = int(input())\n    k = int(input())\n    print(binomial_coefficient(n, k))"
    },
    {
      "rank": 97,
      "score": 8.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    n  n is the number of elements in the set\n    k k is the number of elements to be removed\n    \"\"\"\n    if k > n:\n        return 0\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    return binomial(n - 1, k - 1) + binomial(n - 1, k)\n\nprint binomial(5, 2)"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "def binomial(n, k):\n    \"\"\"\n    Returns the binomial coefficient (n choose k).\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return k\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k > n:\n        return 0\n    return binomial(n-1, k) * n * (k-1) * (n-k)\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Returns the binomial coefficient (n choose k).\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return k\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k > n:\n        return 0\n    return binomial_coefficient(n-1, k) * n * (k-1) * (n-k)\n\n\nif __name__ == '__main__':\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert binomial(5, 2) == 2, \"5! = 2\"\n    assert binomial(5, 3) == 5, \"5! = 5\"\n    assert binomial(5, 4) == 10, \"5! = 10\"\n    assert binomial(5, 5) == 1, \"5! = 1\"\n    assert binomial(5, 6) == 0, \"5! = 0\"\n\n    assert binomial_coefficient(5, 2) == 2, \"5! = 2\"\n    assert binomial_coefficient(5, 3) == 5, \"5! = 5\"\n    assert binomial_coefficient(5, 4) == 10, \"5! = 10\"\n    assert binomial_coefficient(5, 5) == 1, \"5! = 1\"\n    assert binomial_coefficient(5, 6) == 0, \"5! = 0\"\n\n    assert binomial(10, 3) == 10, \"10! = 10\"\n    assert binomial(10, 4) == 40, \"10! = 40\"\n    assert binomial(10, 5) == 10,"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def binomial_coefficient(n, k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    :param n: number of terms\n    :param k: number of terms\n    :return: binomial coefficient\n    \"\"\"\n    if n < k:\n        return 0\n    else:\n        return binomial(n, k) / binomial(k, k)\n\ndef binomial(n, k):\n    \"\"\"\n    Write a python function to find binomial co-efficient.\n    :param n: number of terms\n    :param k: number of terms\n    :return: binomial coefficient\n    \"\"\"\n    if n == 0:\n        return 1\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial(n - 1, k - 1) * n / (k - 1)\n\nif __name__ == \"__main__\":\n    assert binomial_coefficient(5, 2) == 15\n    assert binomial_coefficient(4, 2) == 4\n    assert binomial_coefficient(5, 3) == 10\n    assert binomial_coefficient(4, 3) == 2\n    assert binomial_coefficient(5, 4) == 10\n    assert binomial_coefficient(4, 4) == 1"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "from math import factorial\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Return the binomial coefficient n choose k.\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef main():\n    \"\"\"\n    Test the binomial_coefficient function.\n    \"\"\"\n    assert binomial_coefficient(4, 1) == 1\n    assert binomial_coefficient(4, 2) == 4\n    assert binomial_coefficient(4, 3) == 6\n    assert binomial_coefficient(4, 4) == 8\n    assert binomial_coefficient(4, 5) == 15\n    assert binomial_coefficient(5, 1) == 1\n    assert binomial_coefficient(5, 2) == 5\n    assert binomial_coefficient(5, 3) == 10\n    assert binomial_coefficient(5, 4) == 15\n    assert binomial_coefficient(5, 5) == 25\n    assert binomial_coefficient(5, 6) == 45\n    assert binomial_coefficient(6, 1) == 1\n    assert binomial_coefficient(6, 2) == 6\n    assert binomial_coefficient(6, 3) == 15\n    assert binomial_coefficient(6, 4) == 30\n    assert binomial_coefficient(6, 5) == 120\n    assert binomial_coefficient(6, 6) == 720\n    assert binomial_coefficient(7, 1) == 1\n    assert binomial_coefficient(7, 2) == 7\n    assert binomial_coefficient(7, 3) == 21\n    assert binomial_coefficient(7, 4) == 42\n    assert binomial_coefficient(7, 5) == 210\n    assert binomial_coefficient(7, 6) == 630\n    assert binomial_coefficient(7, 7) == 2835\n    assert binomial_coefficient(8, 1) == 1\n    assert binomial_coefficient(8, 2) == 8\n    assert binomial_coefficient(8, 3) == 36\n    assert binomial_coefficient(8, 4) == 120\n    assert binomial_coefficient(8"
    }
  ]
}