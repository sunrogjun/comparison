{
  "timestamp": "2025-09-14T20:24:24.366270",
  "method": "improved_llm_judge",
  "judge_model": "codellama/CodeLlama-7b-Python-hf",
  "target_model": "codegen-2b",
  "dataset": "mbpp",
  "problem_number": 409,
  "total_candidates": 100,
  "results": [
    {
      "rank": 1,
      "score": 10.0,
      "candidate": "def cube(n):\n    if n == 1:\n        return 1\n    return n*cube(n-1)\n\nprint(cube(5))"
    },
    {
      "rank": 2,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(1)\n    6\n    >>> cube_sum(2)\n    24\n    >>> cube_sum(3)\n    120\n    >>> cube_sum(4)\n    1260\n    >>> cube_sum(5)\n    40320\n    >>> cube_sum(6)\n    243240\n    >>> cube_sum(7)\n    241680\n    >>> cube_sum(8)\n    12132480\n    \"\"\"\n    if n == 0:\n        return 0\n    return sum(range(1, n + 1)) ** 3\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()"
    },
    {
      "rank": 3,
      "score": 10.0,
      "candidate": "def find_cube_sum(n):\n    # Write your code here\n    result = 0\n    for i in range(1, n+1):\n        result += i ** 3\n    return result\n\nif __name__ == \"__main__\":\n    print find_cube_sum(5)"
    },
    {
      "rank": 4,
      "score": 10.0,
      "candidate": "# from __future__ import print_function\n\nimport math\nimport time\n\ndef get_cube(n):\n    \"\"\"\n    >>> get_cube(5)\n    120\n    >>> get_cube(6)\n    2520\n    >>> get_cube(10)\n    3125\n    >>> get_cube(11)\n    362880\n    >>> get_cube(12)\n    4398046511104\n    \"\"\"\n    return math.factorial(n)\n\n\nif __name__ == '__main__':\n    start = time.time()\n    print(get_cube(5))\n    print(time.time() - start)"
    },
    {
      "rank": 5,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(1)\n    1\n    >>> cube_sum(2)\n    4\n    >>> cube_sum(3)\n    9\n    >>> cube_sum(4)\n    16\n    >>> cube_sum(5)\n    25\n    >>> cube_sum(6)\n    36\n    >>> cube_sum(7)\n    49\n    >>> cube_sum(8)\n    64\n    >>> cube_sum(9)\n    81\n    >>> cube_sum(10)\n    100\n    \"\"\"\n    return sum(map(lambda x: x**3, range(1, n+1)))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 6,
      "score": 10.0,
      "candidate": "def cube(n):\n    # write your code here\n    c = 0\n    for i in range(1, n):\n        c += i**3\n    return c\n\nprint cube(5)"
    },
    {
      "rank": 7,
      "score": 10.0,
      "candidate": "import math\n\ndef cube_sum(n):\n    '''\n    >>> cube_sum(1)\n    1\n    >>> cube_sum(2)\n    3\n    >>> cube_sum(3)\n    9\n    >>> cube_sum(4)\n    27\n    >>> cube_sum(5)\n    81\n    >>> cube_sum(6)\n    243\n    >>> cube_sum(7)\n    729\n    '''\n    if n <= 0:\n        return 0\n    result = 0\n    for i in range(1, n+1):\n        result = result + i**3\n    return result\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 8,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(1)\n    1\n    >>> cube_sum(2)\n    6\n    >>> cube_sum(3)\n    27\n    >>> cube_sum(4)\n    64\n    >>> cube_sum(5)\n    243\n    >>> cube_sum(6)\n    729\n    >>> cube_sum(7)\n    2187\n    >>> cube_sum(8)\n    4094\n    \"\"\"\n    return sum(i * i for i in range(1, n + 1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 9,
      "score": 10.0,
      "candidate": "# Example\n# f(1,2,3,4,5,6) -> 8\n# f(10,11,12,13,14,15) -> 637\n# f(16,17,18,19,20,21) -> 929\n# f(22,23,24,25,26,27) -> 1415\n# f(28,29,30,31,32,33) -> 2181\n# f(34,35,36,37,38,39) -> 3647\n# f(40,41,42,43,44,45) -> 5185\n# f(46,47,48,49,50,51) -> 7677\n# f(52,53,54,55,56,57) -> 10037\n# f(58,59,60,61,62,63) -> 15729\n# f(64,65,66,67,68,69) -> 24653\n# f(70,71,72,73,74,75) -> 35657\n# f(76,77,78,79,80,81) -> 51597\n# f(82,83,84,85,86,87) -> 72537\n# f(88,89,90,91,92,93) -> 104317\n# f(94,95,96,97,98,99) -> 162877\n\ndef f(n, a):\n    if n == 1:\n        return a\n    return f(n-1, a + n)\n\nif __name__ == '__main__':\n    for n in range(1,100):\n        print(\"f(%d, %d) = %d\" % (n, n, f(n, n)))"
    },
    {
      "rank": 10,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    sum_cube = 0\n    for i in range(1, n + 1):\n        sum_cube += i ** 3\n    return sum_cube\n\n\nprint cube_sum(5)"
    },
    {
      "rank": 11,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    return sum(i*i*i for i in range(1, n+1) if i % 3 == 0)\n\nprint cube_sum(3)"
    },
    {
      "rank": 12,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    # Your code here\n    sum = 0\n    for i in range(1,n+1):\n        if i%2==0:\n            sum += i**3\n    return sum\n\n\nif __name__ == \"__main__\":\n    print cube_sum(3)"
    },
    {
      "rank": 13,
      "score": 10.0,
      "candidate": "from __future__ import print_function\n\ndef sum_even_numbers(n):\n    \"\"\"\n    Given n, return the sum of the first n even natural numbers.\n\n    Example:\n    >>> sum_even_numbers(5)\n    45\n    >>> sum_even_numbers(10)\n    455\n    >>> sum_even_numbers(15)\n    1835\n    >>> sum_even_numbers(20)\n    9455\n\n    Time: O(n)\n    Space: O(n)\n    \"\"\"\n    s = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            s += i\n    return s\n\n\nif __name__ == \"__main__\":\n    print(sum_even_numbers(10))"
    },
    {
      "rank": 14,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    return sum(1 for i in range(n)) ** 3\n\nif __name__ == \"__main__\":\n    print(cube_sum(5))\n    print(cube_sum(6))\n    print(cube_sum(7))\n    print(cube_sum(8))\n    print(cube_sum(9))\n    print(cube_sum(10))"
    },
    {
      "rank": 15,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Write a python function to find the cube sum of first n even natural numbers.\n\n    >>> cube_sum(5)\n    10\n    >>> cube_sum(4)\n    20\n    >>> cube_sum(3)\n    36\n    >>> cube_sum(2)\n    81\n    >>> cube_sum(1)\n    8\n    >>> cube_sum(0)\n    1\n    \"\"\"\n    return sum(range(1,n+1))**3\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 16,
      "score": 10.0,
      "candidate": "def cube(n):\n    '''\n    This function calculates the cube of the first n natural numbers.\n    '''\n    a = 1\n    for i in range(0, n):\n        a *= i + 1\n    return a\n\nif __name__ == '__main__':\n    #print(cube(3))\n    print(cube(3))\n    #print(cube(4))"
    },
    {
      "rank": 17,
      "score": 10.0,
      "candidate": "import math\n\ndef cube_sum(n):\n    return math.factorial(n) / math.factorial(n - 1)\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(cube_sum(n))"
    },
    {
      "rank": 18,
      "score": 10.0,
      "candidate": "def cube(n):\n    \"\"\"\n    >>> cube(1)\n    1\n    >>> cube(2)\n    8\n    >>> cube(3)\n    27\n    >>> cube(4)\n    64\n    >>> cube(5)\n    625\n    >>> cube(6)\n    3125\n    >>> cube(7)\n    6425\n    >>> cube(8)\n    3125\n    >>> cube(9)\n    18125\n    >>> cube(10)\n    90625\n    >>> cube(11)\n    625\n    >>> cube(12)\n    5429375\n    >>> cube(13)\n    3125\n    >>> cube(14)\n    2304375\n    >>> cube(15)\n    1525\n    >>> cube(16)\n    180625\n    >>> cube(17)\n    13813125\n    >>> cube(18)\n    90625\n    >>> cube(19)\n    625\n    >>> cube(20)\n    4125\n    >>> cube(21)\n    25\n    >>> cube(22)\n    18125\n    >>> cube(23)\n    1525\n    >>> cube(24)\n    140625\n    >>> cube(25)\n    1225\n    >>> cube(26)\n    109375\n    >>> cube(27)\n    93125\n    >>> cube(28)\n    78125\n    >>> cube(29)\n    625\n    >>> cube(30)\n    5\n    \"\"\"\n    return sum(x for x in range(1, n+1) if x % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 19,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Write a function to calculate the cube sum of the first n even natural numbers.\n\n    Example:\n    >>> cube_sum(1)\n    30\n    >>> cube_sum(2)\n    90\n    >>> cube_sum(3)\n    405\n    >>> cube_sum(4)\n    1260\n    >>> cube_sum(5)\n    3025\n    >>> cube_sum(6)\n    4050\n    >>> cube_sum(7)\n    57960\n    >>> cube_sum(8)\n    754550\n    >>> cube_sum(9)\n    10973025\n    >>> cube_sum(10)\n    140625000\n    >>> cube_sum(11)\n    2036900000\n    >>> cube_sum(12)\n    3628800000\n    >>> cube_sum(13)\n    58806400000\n    >>> cube_sum(14)\n    8816000000\n    >>> cube_sum(15)\n    130345600000\n    >>> cube_sum(16)\n    192912000000\n    >>> cube_sum(17)\n    3291056000000\n    >>> cube_sum(18)\n    4980352000000\n    >>> cube_sum(19)\n    725873609600000\n    >>> cube_sum(20)\n    107060641520000\n    >>> cube_sum(21)\n    143535696048000\n    >>> cube_sum(22)\n    21474836480\n    >>> cube_sum(23)\n    42949672960\n    >>> cube_sum(24)\n    72057594049600\n    >>> cube_sum(25)\n    11232059403920\n    >>> cube_sum(26)\n    18014398509240\n    >>> cube_sum(27)\n    30071992280720\n    >>> cube_sum(28)\n    450359962737040\n    >>> cube_sum(29)\n    74976298047360\n    >>> cube_sum(30)\n    11232059403920\n    >>> cube_sum(31)\n    18014398509240\n    >>>"
    },
    {
      "rank": 20,
      "score": 10.0,
      "candidate": "def cube(n):\n    \"\"\"\n    >>> cube(5)\n    25\n    >>> cube(10)\n    625\n    >>> cube(15)\n    15625\n    >>> cube(20)\n    625\n    \"\"\"\n    return sum(n for n in range(2, n + 1) if n % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 21,
      "score": 10.0,
      "candidate": "def first_n_even_numbers(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i\n    return sum\n\n\nif __name__ == '__main__':\n    print first_n_even_numbers(10)"
    },
    {
      "rank": 22,
      "score": 10.0,
      "candidate": "import math\n\ndef cube(n):\n    \"\"\"\n    >>> cube(2)\n    8\n    >>> cube(3)\n    27\n    >>> cube(4)\n    64\n    >>> cube(5)\n    512\n    \"\"\"\n    return n * (n + 1) * (n + 2)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 23,
      "score": 10.0,
      "candidate": "def cube(n):\n    \"\"\"\n    >>> cube(2)\n    6\n    >>> cube(4)\n    24\n    >>> cube(10)\n    10240\n    \"\"\"\n    return sum(1 for i in range(1, n+1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n\n    print cube(5)"
    },
    {
      "rank": 24,
      "score": 10.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(5)\n    60\n    \"\"\"\n    return sum(range(1, n + 1)) ** 3\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 25,
      "score": 9.0,
      "candidate": "def cube_sum(n):\n    return sum(i**3 for i in range(n))\n\nprint cube_sum(10)"
    },
    {
      "rank": 26,
      "score": 9.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(10)\n    60\n    >>> cube_sum(20)\n    160\n    >>> cube_sum(30)\n    300\n    \"\"\"\n    return sum(map(lambda x: x * x * x, range(n, 0, -1)))\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 27,
      "score": 9.0,
      "candidate": "import sys\nimport math\n\ndef cube_sum(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i**3\n    return sum\n\nif __name__ == '__main__':\n    n = int(sys.argv[1])\n    print cube_sum(n)"
    },
    {
      "rank": 28,
      "score": 9.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    n is an integer\n    returns the cube sum of first n even natural numbers\n    \"\"\"\n    return sum(x**3 for x in range(n))\n\n\nif __name__ == \"__main__\":\n    assert(cube_sum(5) == 55)\n    assert(cube_sum(6) == 720)\n    assert(cube_sum(7) == 17280)\n    assert(cube_sum(8) == 43965)\n    assert(cube_sum(9) == 1138250)"
    },
    {
      "rank": 29,
      "score": 9.0,
      "candidate": "def cube(n):\n    sum = 0\n    for i in range(n):\n        sum += i**3\n    return sum\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of even natural numbers : \"))\n    print(cube(n))"
    },
    {
      "rank": 30,
      "score": 9.0,
      "candidate": "def cube(n):\n    result = 0\n    for i in range(n):\n        result += i\n    return result\n\n\ndef cube_sum(n):\n    return cube(n) * cube(n) * cube(n)\n\nif __name__ == '__main__':\n    print cube_sum(5)"
    },
    {
      "rank": 31,
      "score": 8.0,
      "candidate": "# https://en.wikipedia.org/wiki/Cube_number\ndef cube_sum(n):\n    return sum(range(1, n + 1)) * n\n\nprint(cube_sum(10))"
    },
    {
      "rank": 32,
      "score": 8.0,
      "candidate": "def sum_of_even_numbers(n):\n    if n < 2:\n        return 0\n    return sum(nums)\n\nnums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint sum_of_even_numbers(nums)"
    },
    {
      "rank": 33,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Input:\n        n = int\n    Output:\n        int\n    \"\"\"\n    return sum(map(lambda x: x * x, range(n, 1, -1)))\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter the number of even numbers to be found: \"))\n    print(cube_sum(n))"
    },
    {
      "rank": 34,
      "score": 8.0,
      "candidate": "def get_sum(n):\n    sum_ = 0\n    for i in range(1,n+1):\n        sum_ += i\n    return sum_\n\nif __name__ == '__main__':\n    n = int(input())\n    print(get_sum(n))"
    },
    {
      "rank": 35,
      "score": 8.0,
      "candidate": "def sum_cube(n):\n    \"\"\"\n    >>> sum_cube(3)\n    24\n    >>> sum_cube(5)\n    120\n    >>> sum_cube(7)\n    504\n    \"\"\"\n    return reduce(lambda x, y: x + y ** 3, range(1, n + 1), 0)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 36,
      "score": 8.0,
      "candidate": "def sum_even_numbers(n):\n    \"\"\"\n    :param n: An integer\n    :return: The sum of first n even natural numbers\n    \"\"\"\n    # We can use the fact that the sum of the first n even numbers is the sum of the first n odd numbers\n    # So we can iterate from 1 to n and add them together, then subtract them\n    sum_even = 0\n    for i in range(1, n + 1):\n        sum_even = sum_even + i\n        if i % 2 == 0:\n            sum_even = sum_even - i\n    return sum_even\n\nif __name__ == '__main__':\n    print(sum_even_numbers(3))\n    print(sum_even_numbers(10))\n    print(sum_even_numbers(100))\n    print(sum_even_numbers(1000))"
    },
    {
      "rank": 37,
      "score": 8.0,
      "candidate": "import math\n\ndef cube_sum(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i ** 3\n    return sum\n\nif __name__ == '__main__':\n    print(cube_sum(5))"
    },
    {
      "rank": 38,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Return the cube sum of first n even natural numbers.\n    >>> cube_sum(3)\n    1\n    >>> cube_sum(4)\n    8\n    >>> cube_sum(5)\n    27\n    >>> cube_sum(7)\n    486\n    >>> cube_sum(8)\n    8192\n    \"\"\"\n\n    return sum(1 for i in range(1, n + 1) if i % 2 == 0)\n\n\ndef test_cube_sum():\n    assert cube_sum(3) == 1\n    assert cube_sum(4) == 8\n    assert cube_sum(5) == 27\n    assert cube_sum(7) == 486\n    assert cube_sum(8) == 8192"
    },
    {
      "rank": 39,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(1 for _ in range(1, n + 1))\n\nprint(cube_sum(3))\n#>>> 24\n\nprint(cube_sum(10))\n#>>> 3024"
    },
    {
      "rank": 40,
      "score": 8.0,
      "candidate": "def first_n_even_natural_numbers(n):\n    sum_of_even_numbers = 0\n    for i in range(1,n+1):\n        sum_of_even_numbers += i\n        if i % 2 == 0:\n            sum_of_even_numbers += i\n    return sum_of_even_numbers\n\nprint(first_n_even_natural_numbers(5))"
    },
    {
      "rank": 41,
      "score": 8.0,
      "candidate": "def sum_of_first_n_even_numbers(n):\n    return sum(range(1, n+1))\n\nprint sum_of_first_n_even_numbers(10)"
    },
    {
      "rank": 42,
      "score": 8.0,
      "candidate": "import math\n\n\ndef cube_sum(n):\n    return sum(i**3 for i in range(1, n+1))\n\n\nprint(cube_sum(20))"
    },
    {
      "rank": 43,
      "score": 8.0,
      "candidate": "def cube(n):\n    if n < 1:\n        return 0\n    return n * (n + 1) * (2 * n + 1)\n\n\ndef sum_of_even_numbers(n):\n    return cube(n)\n\n\ndef main():\n    print(sum_of_even_numbers(10))\n\nif __name__ == \"__main__\":\n    main()"
    },
    {
      "rank": 44,
      "score": 8.0,
      "candidate": "import numpy as np\n\ndef cube_sum_of_even(n):\n    \"\"\"\n    Input:\n        n = int\n    Output:\n        int\n    \"\"\"\n    return np.sum(np.ones(n) * np.prod(np.arange(n)))\n\n\nif __name__ == '__main__':\n    print(cube_sum_of_even(5))\n    print(cube_sum_of_even(6))\n    print(cube_sum_of_even(7))\n    print(cube_sum_of_even(8))\n    print(cube_sum_of_even(9))\n    print(cube_sum_of_even(10))\n    print(cube_sum_of_even(11))"
    },
    {
      "rank": 45,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    :param n: the number of elements\n    :return: the cube sum of first n even natural numbers\n    \"\"\"\n    s = 0\n    for i in range(n):\n        s += i\n    return s**3\n\nif __name__ == '__main__':\n    print cube_sum(3)"
    },
    {
      "rank": 46,
      "score": 8.0,
      "candidate": "from math import sqrt\n\n\ndef cube(n):\n    return n ** 3\n\n\ndef get_sum(n):\n    return sum(cube(i) for i in range(1, n + 1))\n\n\ndef main():\n    print(get_sum(5))\n\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 47,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(range(1, n + 1)) ** 3\n\nprint(cube_sum(10))"
    },
    {
      "rank": 48,
      "score": 8.0,
      "candidate": "def sum_of_the_first_n_even_numbers(n):\n    \"\"\"\n    >>> sum_of_the_first_n_even_numbers(10)\n    933\n    \"\"\"\n    return sum(i for i in range(1, n + 1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 49,
      "score": 8.0,
      "candidate": "def get_cube_sum(n):\n    if n == 0:\n        return 0\n    return sum(get_cube_sum(n - 1) * 3 for _ in range(n))\n\nprint(get_cube_sum(5))"
    },
    {
      "rank": 50,
      "score": 8.0,
      "candidate": "def cube(n):\n    result = 0\n    for i in range(1, n+1):\n        result += i**3\n    return result\n\n#print cube(2)\n#print cube(3)\n#print cube(4)\n\n#print cube(5)\n\nprint cube(10)"
    },
    {
      "rank": 51,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(range(1, n + 1)) ** 3\n\n\nif __name__ == '__main__':\n    print cube_sum(5)"
    },
    {
      "rank": 52,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    s = 0\n    for i in range(1, n + 1):\n        s += i**3\n    return s\n\nif __name__ == '__main__':\n    print cube_sum(2)\n    print cube_sum(4)\n    print cube_sum(6)"
    },
    {
      "rank": 53,
      "score": 8.0,
      "candidate": "def cube(n):\n    c = 0\n    for i in range(n):\n        c += i\n    return c * (c + 1) * (c + 2)\n\nif __name__ == '__main__':\n    print(cube(10))"
    },
    {
      "rank": 54,
      "score": 8.0,
      "candidate": "def sum_cube(n):\n    # write your code here\n    sum = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum += i**3\n    return sum\n\nprint(sum_cube(10))"
    },
    {
      "rank": 55,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Write a function cube_sum that takes an integer n as input and returns the\n    cube sum of all the even natural numbers from 1 to n.\n    \"\"\"\n    sum_cube = 0\n    for i in range(1, n+1):\n        sum_cube += i*i*i\n    return sum_cube\n\nif __name__ == \"__main__\":\n    print cube_sum(5)"
    },
    {
      "rank": 56,
      "score": 8.0,
      "candidate": "def find_cube_sum(n):\n    \"\"\"\n    n is the number of even natural numbers.\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return (find_cube_sum(n - 1) + n * find_cube_sum(n - 2)) % 1000000\n\nprint find_cube_sum(5)"
    },
    {
      "rank": 57,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Input:\n        n: an integer, the number of natural numbers to sum\n    Output:\n        the sum of first n even natural numbers\n    \"\"\"\n    result = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            result += i\n    return result\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    print(cube_sum(2))\n    print(cube_sum(3))\n    print(cube_sum(4))\n    print(cube_sum(5))\n    print(cube_sum(6))\n    print(cube_sum(7))\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 58,
      "score": 8.0,
      "candidate": "def cube_sum_of_n_even_numbers(n):\n    if n <= 0:\n        return 0\n    else:\n        return n * (n + 1) * (n + 2) / 6\n\nprint(cube_sum_of_n_even_numbers(3))"
    },
    {
      "rank": 59,
      "score": 8.0,
      "candidate": "import math\n\ndef get_cube_sum(n):\n    \"\"\"\n    Return the cube sum of the first n even numbers.\n    \"\"\"\n    result = 0\n    for i in range(1, n + 1):\n        result += i * (i + 1) * (i + 2)\n    return result\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    print \"The cube sum of the first 3 even numbers is:\", get_cube_sum(3)\n\nif __name__ == '__main__':\n    main()"
    },
    {
      "rank": 60,
      "score": 8.0,
      "candidate": "def cube(n):\n    \"\"\"\n    Find the cube sum of first n even natural numbers.\n\n    Input:\n    n -- integer, the number of even natural numbers to find the cube sum of.\n\n    Output:\n    The cube sum of the first n even natural numbers.\n    \"\"\"\n\n    # Initialize the sum of the first n even numbers\n    sum = 0\n\n    # Initialize the sum of the first n even numbers\n    for i in range(n):\n        sum += i\n\n    # Find the cube sum of the first n even numbers\n    for i in range(n):\n        sum *= i\n\n    return sum\n\nif __name__ == \"__main__\":\n    print(cube(5))"
    },
    {
      "rank": 61,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(10)\n    924\n    >>> cube_sum(3)\n    27\n    >>> cube_sum(4)\n    36\n    >>> cube_sum(2)\n    4\n    \"\"\"\n    return sum(n for n in range(1, n+1) if n % 2 == 0)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 62,
      "score": 8.0,
      "candidate": "def sum_of_nth_natural_number(n):\n    # your code here\n    return 0\n\n\nif __name__ == \"__main__\":\n    print(sum_of_nth_natural_number(3))\n    print(sum_of_nth_natural_number(4))\n    print(sum_of_nth_natural_number(5))\n    print(sum_of_nth_natural_number(6))"
    },
    {
      "rank": 63,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(5)\n    120\n    >>> cube_sum(10)\n    40320\n    >>> cube_sum(20)\n    16777216\n    \"\"\"\n    sum = 0\n    for i in range(n):\n        sum += i * (i + 1) * (i + 2)\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()\n\n    #print cube_sum(5)\n    print cube_sum(10)\n    print cube_sum(20)"
    },
    {
      "rank": 64,
      "score": 8.0,
      "candidate": "def sum_even_numbers(n):\n    return sum(i for i in range(1, n+1) if i % 2 == 0)\n\nprint(sum_even_numbers(10))"
    },
    {
      "rank": 65,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(0)\n    0\n    >>> cube_sum(1)\n    3\n    >>> cube_sum(2)\n    15\n    >>> cube_sum(3)\n    105\n    >>> cube_sum(4)\n    243\n    \"\"\"\n    return sum([n**3 for n in range(1, n + 1) if n % 2 == 0])"
    },
    {
      "rank": 66,
      "score": 8.0,
      "candidate": "import math\n\ndef cube_sum(n):\n    return sum(i**3 for i in range(n+1) if i % 3 == 0)\n\nprint cube_sum(3)\nprint cube_sum(4)\nprint cube_sum(5)"
    },
    {
      "rank": 67,
      "score": 8.0,
      "candidate": "from __future__ import print_function\n\ndef sum_even_numbers(n):\n    \"\"\"\n    Compute the cube sum of the first n even numbers.\n    \"\"\"\n    if n <= 0:\n        return 0\n\n    sum = 0\n    for i in range(1, n+1):\n        sum += i * i\n    return sum\n\nprint(\"The sum of the first n even numbers is %d\" % sum_even_numbers(3))"
    },
    {
      "rank": 68,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    Return the cube sum of first n even natural numbers.\n    \"\"\"\n    return sum(x for x in range(1, n + 1) if x % 2 == 0)\n\nprint(cube_sum(10))"
    },
    {
      "rank": 69,
      "score": 8.0,
      "candidate": "import math\n\n\ndef cube_sum(n):\n    \"\"\"\n    Find the cube sum of first n even natural numbers.\n    \"\"\"\n    return sum([math.factorial(i) for i in range(1, n + 1) if i % 2 == 0])\n\n\ndef test_cube_sum():\n    assert cube_sum(1) == 1\n    assert cube_sum(2) == 8\n    assert cube_sum(3) == 27\n    assert cube_sum(4) == 64\n    assert cube_sum(5) == 125\n    assert cube_sum(6) == 216\n    assert cube_sum(7) == 343\n    assert cube_sum(8) == 512\n    assert cube_sum(9) == 729\n    assert cube_sum(10) == 1000"
    },
    {
      "rank": 70,
      "score": 8.0,
      "candidate": "import math\n\ndef first_n_even(n):\n    return sum(1 for i in range(1, n + 1) if i % 2 == 0)\n\nif __name__ == \"__main__\":\n    print(first_n_even(10))"
    },
    {
      "rank": 71,
      "score": 8.0,
      "candidate": "import math\n\ndef even_numbers_cube_sum(n):\n    total = 0\n    for i in range(1, n+1):\n        total += i ** 3\n    return total\n\nif __name__ == '__main__':\n    print(even_numbers_cube_sum(10))\n    print(even_numbers_cube_sum(3))\n    print(even_numbers_cube_sum(5))\n    print(even_numbers_cube_sum(4))\n    print(even_numbers_cube_sum(6))\n    print(even_numbers_cube_sum(7))\n    print(even_numbers_cube_sum(8))\n    print(even_numbers_cube_sum(9))\n    print(even_numbers_cube_sum(10))"
    },
    {
      "rank": 72,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(range(1, n + 1)) ** 3\n\nif __name__ == '__main__':\n    print cube_sum(10)"
    },
    {
      "rank": 73,
      "score": 8.0,
      "candidate": "def get_cube(n):\n    return sum([1 for i in range(1, n + 1) if i % 3 == 0 and i % 5 == 0])\n\n\nif __name__ == \"__main__\":\n    print(get_cube(100))\n    print(get_cube(200))"
    },
    {
      "rank": 74,
      "score": 8.0,
      "candidate": "#!/usr/bin/env python\n\nfrom math import factorial\n\n\ndef cube_sum(n):\n    return sum(factorial(x) for x in range(1, n + 1) if x % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    print cube_sum(10)"
    },
    {
      "rank": 75,
      "score": 8.0,
      "candidate": "def sum_of_even_numbers_cube_sum(n):\n    return sum(range(1, n+1) * 2)\n\n\n\nif __name__ == '__main__':\n    print sum_of_even_numbers_cube_sum(15)"
    },
    {
      "rank": 76,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(range(1,n+1))**3\n\nprint cube_sum(5)"
    },
    {
      "rank": 77,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    n is an integer, the number of numbers to sum.\n    Return the cube sum of the first n even natural numbers.\n    \"\"\"\n    s = 0\n    for i in range(1, n + 1):\n        s += i ** 3\n    return s\n\nif __name__ == '__main__':\n    print cube_sum(5)"
    },
    {
      "rank": 78,
      "score": 8.0,
      "candidate": "# Write your code here.\n\ndef sum_even_numbers(n):\n    return sum(i for i in range(1, n + 1) if i % 2 == 0)\n\n\nif __name__ == '__main__':\n    print(sum_even_numbers(10))"
    },
    {
      "rank": 79,
      "score": 8.0,
      "candidate": "def sum_of_even_numbers_cube(n):\n    sum_of_even_numbers = 0\n    for i in range(1, n + 1):\n        sum_of_even_numbers += i * i * i\n    return sum_of_even_numbers\n\nprint(sum_of_even_numbers_cube(3))"
    },
    {
      "rank": 80,
      "score": 8.0,
      "candidate": "from math import factorial\n\ndef cube_sum(n):\n    return sum(factorial(n) for n in range(1, n+1) if n % 2 == 0)\n\nprint(cube_sum(6))"
    },
    {
      "rank": 81,
      "score": 8.0,
      "candidate": "from math import factorial\n\ndef cube_sum(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(factorial(n) for n in range(1, n + 1))\n\nif __name__ == \"__main__\":\n    print cube_sum(10)\n    print cube_sum(100)\n    print cube_sum(1000)"
    },
    {
      "rank": 82,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(n * (n + 1) * (n + 2))\n\nprint(cube_sum(3))"
    },
    {
      "rank": 83,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(5)\n    120\n    >>> cube_sum(6)\n    720\n    >>> cube_sum(7)\n    5040\n    \"\"\"\n    return sum(n*n*n for n in range(1, n+1))\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 84,
      "score": 8.0,
      "candidate": "from math import sqrt\n\ndef nth_cube_sum(n):\n    sum = 0\n    for i in range(1, n):\n        sum += i * (i + 1) * (i + 2) / 6\n    return sum\n\nprint(nth_cube_sum(5))\n\nprint(sqrt(nth_cube_sum(5)))\n\n# nth_cube_sum(5) == 20"
    },
    {
      "rank": 85,
      "score": 8.0,
      "candidate": "import math\n\ndef find_cube(n):\n    sum = 0\n    for i in range(n):\n        sum = sum * (i + 1)\n    return sum\n\nif __name__ == '__main__':\n    n = int(input())\n    print(find_cube(n))"
    },
    {
      "rank": 86,
      "score": 8.0,
      "candidate": "def cube_sum(n):\n    return sum(map(lambda x: x**3, range(1, n + 1)))\n\nprint(cube_sum(10))"
    },
    {
      "rank": 87,
      "score": 8.0,
      "candidate": "import sys\n\ndef cube_sum(n):\n    \"\"\"\n    >>> cube_sum(1)\n    1\n    >>> cube_sum(2)\n    4\n    >>> cube_sum(3)\n    9\n    >>> cube_sum(4)\n    16\n    >>> cube_sum(5)\n    25\n    >>> cube_sum(6)\n    36\n    \"\"\"\n    result = 0\n    for i in range(1, n+1):\n        result += i**3\n    return result\n\nif __name__ == '__main__':\n    if len(sys.argv) == 1:\n        print cube_sum(1)\n    else:\n        n = int(sys.argv[1])\n        print cube_sum(n)"
    },
    {
      "rank": 88,
      "score": 8.0,
      "candidate": "def sum_even_numbers(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum += i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(sum_even_numbers(5))"
    },
    {
      "rank": 89,
      "score": 8.0,
      "candidate": "def find_cube_sum(n):\n    \"\"\"\n    Input:\n        n: an integer.\n    Output:\n        a list of n integers.\n    \"\"\"\n    result = []\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            result.append(i * i * i)\n    return result\n\nif __name__ == \"__main__\":\n    n = int(input(\"Enter a number: \"))\n    print(find_cube_sum(n))"
    },
    {
      "rank": 90,
      "score": 8.0,
      "candidate": "def sum_of_even_numbers_cube(n):\n    return sum(range(n, 0, -1))\n\n\"\"\"\nTest cases\n\"\"\"\nprint(sum_of_even_numbers_cube(2))\nprint(sum_of_even_numbers_cube(3))\nprint(sum_of_even_numbers_cube(4))\nprint(sum_of_even_numbers_cube(5))"
    },
    {
      "rank": 91,
      "score": 8.0,
      "candidate": "import math\n\ndef cube_sum(n):\n    \"\"\"\n    Return the cube sum of n even natural numbers.\n    \"\"\"\n    return sum(math.factorial(x) for x in range(1, n + 1) if x % 2 == 0)\n\nif __name__ == \"__main__\":\n    print(cube_sum(100))"
    },
    {
      "rank": 92,
      "score": 7.0,
      "candidate": "def sum_even_numbers(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i\n    return sum\n\n# Test\nprint \"Test 1:\", sum_even_numbers(4)\nprint \"Test 2:\", sum_even_numbers(8)"
    },
    {
      "rank": 93,
      "score": 1.0,
      "candidate": "def cube_sum_of_even_numbers(n):\n    \"\"\"\n    n = 10\n    >>> cube_sum_of_even_numbers(n)\n    3628800\n    \"\"\"\n    return sum(i * i for i in range(1, n + 1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
    },
    {
      "rank": 94,
      "score": 1.0,
      "candidate": "def cube_sum(n):\n    \"\"\"\n    >>> cube_sum(1)\n    3\n    >>> cube_sum(2)\n    9\n    >>> cube_sum(3)\n    27\n    >>> cube_sum(4)\n    243\n    >>> cube_sum(5)\n    729\n    >>> cube_sum(6)\n    3291\n    >>> cube_sum(7)\n    8837\n    >>> cube_sum(8)\n    48863\n    >>> cube_sum(9)\n    190163\n    >>> cube_sum(10)\n    518937\n    >>> cube_sum(11)\n    202677\n    >>> cube_sum(12)\n    608031\n    >>> cube_sum(13)\n    294093\n    >>> cube_sum(14)\n    1170657\n    >>> cube_sum(15)\n    4447123\n    >>> cube_sum(16)\n    1892861\n    >>> cube_sum(17)\n    5951287\n    >>> cube_sum(18)\n    2909863\n    >>> cube_sum(19)\n    11598079\n    >>> cube_sum(20)\n    44363537\n    >>> cube_sum(21)\n    1892861\n    >>> cube_sum(22)\n    5951287\n    >>> cube_sum(23)\n    2909863\n    >>> cube_sum(24)\n    11598079\n    >>> cube_sum(25)\n    44363537\n    >>> cube_sum(26)\n    1892861\n    >>> cube_sum(27)\n    5951287\n    >>> cube_sum(28)\n    2909863\n    >>> cube_sum(29)\n    11598079\n    >>> cube_sum(30)\n    44363537\n    >>> cube_sum(31)\n    1892861\n    >>> cube_sum(32)\n    5951287\n    >>> cube_sum(33)\n    2909863\n    >>> cube_sum(34)\n    11598079\n    >>> cube_sum(35)\n    44363537\n    >>> cube_sum(36)"
    },
    {
      "rank": 95,
      "score": 1.0,
      "candidate": "def find_sum_of_even_numbers(n):\n    return sum(1 for x in range(1, n+1) if x % 2 == 0)\n\nprint(find_sum_of_even_numbers(10))\n\n\"\"\"\nWrite a python function to find the cube sum of first n odd natural numbers.\n\"\"\"\ndef find_sum_of_odd_numbers(n):\n    return sum(1 for x in range(1, n+1) if x % 2 == 1)\n\nprint(find_sum_of_odd_numbers(10))"
    },
    {
      "rank": 96,
      "score": 1.0,
      "candidate": "def sum_of_even_numbers(n):\n    return sum(i for i in range(1, n + 1) if i % 2 == 0)\n\n\"\"\"\nWrite a python function to find the cube sum of first n odd natural numbers.\n\"\"\"\ndef sum_of_odd_numbers(n):\n    return sum(i for i in range(1, n + 1) if i % 2 == 1)\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers(n):\n    return sum(i for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_2(n):\n    return sum(i**3 for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_3(n):\n    return sum(i**4 for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_4(n):\n    return sum(i**5 for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_5(n):\n    return sum(i**6 for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_6(n):\n    return sum(i**7 for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_7(n):\n    return sum(i**8 for i in range(1, n + 1))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\ndef sum_of_numbers_8(n):\n    return sum(i**9 for i in range(1, n"
    },
    {
      "rank": 97,
      "score": 1.0,
      "candidate": "def cube(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i * i\n    return sum\n\nprint(cube(3))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\n\ndef cube(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i * i\n    return sum\n\nprint(cube(5))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\n\ndef cube(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i * i\n    return sum\n\nprint(cube(10))\n\n\"\"\"\nWrite a python function to find the cube sum of first n natural numbers.\n\"\"\"\n\ndef cube(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i * i\n    return sum\n\nprint(cube(20))"
    },
    {
      "rank": 98,
      "score": 1.0,
      "candidate": "# https://www.hackerrank.com/challenges/cubesum/problem\n\ndef cube_sum(n):\n    n = int(n)\n    if n < 1:\n        return 0\n    sum = 0\n    for i in range(1, n + 1):\n        sum = sum + i ** 3\n    return sum\n\n# Test Cases\n# n = 0\n# expected = 0\n# assert cube_sum(0) == expected\n\n# n = 1\n# expected = 1\n# assert cube_sum(1) == expected\n\n# n = 2\n# expected = 8\n# assert cube_sum(2) == expected\n\n# n = 3\n# expected = 27\n# assert cube_sum(3) == expected\n\n# n = 4\n# expected = 64\n# assert cube_sum(4) == expected\n\n# n = 5\n# expected = 225\n# assert cube_sum(5) == expected\n\n# n = 6\n# expected = 1225\n# assert cube_sum(6) == expected\n\n# n = 7\n# expected = 5120\n# assert cube_sum(7) == expected\n\n# n = 8\n# expected = 2040\n# assert cube_sum(8) == expected\n\n# n = 9\n# expected = 1225\n# assert cube_sum(9) == expected\n\n# n = 10\n# expected = 4270\n# assert cube_sum(10) == expected\n\n# n = 11\n# expected = 17490\n# assert cube_sum(11) == expected\n\n# n = 12\n# expected = 55260\n# assert cube_sum(12) == expected\n\n# n = 13\n# expected = 243520\n# assert cube_sum(13) == expected\n\n# n = 14\n# expected = 108570\n# assert cube_sum(14) == expected\n\n# n = 15\n# expected = 472070\n# assert cube_sum(15) == expected\n\n# n = 16\n# expected = 2408570\n# assert cube_sum(16) == expected\n\n# n = 17\n# expected = 12234070\n# assert cube_sum(17) == expected\n\n# n = 18\n# expected = 5488570"
    },
    {
      "rank": 99,
      "score": 1.0,
      "candidate": "def find_sum_of_even_numbers(n):\n    \"\"\"\n    Write a python function to find the cube sum of first n even natural numbers.\n    :param n: The number of even numbers to find\n    :return: The cube sum of first n even numbers\n    \"\"\"\n\n    # Write your code here\n    return 0\n\nif __name__ == '__main__':\n    print(find_sum_of_even_numbers(5))"
    },
    {
      "rank": 100,
      "score": 1.0,
      "candidate": "def cube_sum(n):\n    # write your code here\n    result = 0\n    for i in range(n,0,-1):\n        result += i**3\n    return result\n\nif __name__ == \"__main__\":\n    #These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert cube_sum(3)==27, \"Test for cube sum\"\n    assert cube_sum(5)==125, \"Test for cube sum\"\n    assert cube_sum(10)==362880, \"Test for cube sum\""
    }
  ]
}