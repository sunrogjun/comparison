{
  "problem": {
    "task_id": "MBPP/274",
    "prompt": "Write a python function to find sum of even index binomial coefficients.",
    "canonical_solution": "import math  \r\ndef even_binomial_Coeff_Sum( n): \r\n    return (1 << (n - 1)) ",
    "test_list": [
      "assert even_binomial_Coeff_Sum(4) == 8",
      "assert even_binomial_Coeff_Sum(6) == 32",
      "assert even_binomial_Coeff_Sum(2) == 2"
    ],
    "challenge_test_list": [],
    "problem_id": 263
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def sum_even_binomial_coeff(n):\n    \"\"\"\n    Finds sum of even index binomial coefficients.\n\n    :param n: int, number of elements\n    :return: int\n    \"\"\"\n    total = 0\n    for i in range(1, n+1):\n        total += i * (i - 1) / 2\n    return total\n\nprint(sum_even_binomial_coeff(10))",
    "def binomial_coeff(n, k):\n    \"\"\"\n    Calculate binomial coefficient.\n\n    n    : integer\n    k    : integer\n    return: integer\n    \"\"\"\n    return (n+k-1)//2 * (n-k+1)//2\n\ndef binomial_coeff_sum(n, k):\n    \"\"\"\n    Calculate sum of binomial coefficients.\n\n    n    : integer\n    k    : integer\n    return: integer\n    \"\"\"\n    return binomial_coeff(n+1, k) - binomial_coeff(n, k)\n\ndef test_binomial_coeff():\n    \"\"\"\n    Test function.\n    \"\"\"\n    assert binomial_coeff(0, 0) == 1\n    assert binomial_coeff(1, 0) == 1\n    assert binomial_coeff(2, 0) == 1\n    assert binomial_coeff(3, 0) == 1\n    assert binomial_coeff(4, 0) == 1\n    assert binomial_coeff(5, 0) == 1\n    assert binomial_coeff(6, 0) == 1\n    assert binomial_coeff(7, 0) == 1\n    assert binomial_coeff(8, 0) == 1\n    assert binomial_coeff(9, 0) == 1\n    assert binomial_coeff(10, 0) == 1\n    assert binomial_coeff(11, 0) == 1\n    assert binomial_coeff(12, 0) == 1\n    assert binomial_coeff(13, 0) == 1\n    assert binomial_coeff(14, 0) == 1\n    assert binomial_coeff(15, 0) == 1\n    assert binomial_coeff(16, 0) == 1\n    assert binomial_coeff(17, 0) == 1\n    assert binomial_coeff(18, 0) == 1\n    assert binomial_coeff(19, 0) == 1\n    assert binomial_coeff(20, 0) == 1\n    assert binomial_coeff(21, 0) == 1\n    assert binomial_coeff(22, 0) == 1\n    assert bin",
    "from itertools import combinations\nfrom functools import reduce\nfrom operator import add\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    Return the binomial coefficient C(n, k)\n    \"\"\"\n    return reduce(add, combinations(range(1, k+1), k))\n\ndef sum_even_binomial(n):\n    \"\"\"\n    Return the sum of even binomial coefficients\n    \"\"\"\n    return reduce(add, (binomial_coefficient(n, i) for i in range(2, n+1)))\n\ndef test_binomial_coefficient():\n    assert binomial_coefficient(5, 2) == 10\n    assert binomial_coefficient(5, 3) == 15\n    assert binomial_coefficient(5, 4) == 25\n\ndef test_sum_even_binomial():\n    assert sum_even_binomial(5) == 10\n    assert sum_even_binomial(6) == 30\n    assert sum_even_binomial(7) == 70\n    assert sum_even_binomial(8) == 126",
    "from math import factorial\n\ndef sum_even_binomial_coefficients(n):\n    return sum(factorial(n) / (factorial(n-1) * factorial(n-2)) )\n\nprint sum_even_binomial_coefficients(20)",
    "import math\n\ndef even_binomial_coefficient(n):\n    \"\"\"\n    n = number of elements\n    Return the sum of even index binomial coefficients.\n    \"\"\"\n\n    sum = 0\n    for i in range(2, n + 1):\n        if i % 2 == 0:\n            sum += math.factorial(i) / (math.factorial(i - 1) * math.factorial(i - 2))\n    return sum\n\n\nprint(even_binomial_coefficient(20))",
    "def binomial(n, k):\n    \"\"\"\n    Find the sum of k-th index binomial coefficient in the range of\n    0 <= k <= n.\n\n    >>> binomial(3, 1)\n    3\n    >>> binomial(3, 2)\n    6\n    >>> binomial(3, 3)\n    9\n    >>> binomial(3, 4)\n    24\n    >>> binomial(3, 5)\n    120\n    >>> binomial(3, 6)\n    720\n    >>> binomial(3, 7)\n    5040\n    >>> binomial(3, 8)\n    40320\n    >>> binomial(3, 9)\n    362880\n    >>> binomial(3, 10)\n    3628800\n    >>> binomial(3, 11)\n    39916800\n    >>> binomial(3, 12)\n    479001600\n    >>> binomial(3, 13)\n    5580899200\n    >>> binomial(3, 14)\n    63101447680\n    >>> binomial(3, 15)\n    724424012800\n    >>> binomial(3, 16)\n    8680139237520\n    >>> binomial(3, 17)\n    100382096702560\n    >>> binomial(3, 18)\n    1115948034301760\n    >>> binomial(3, 19)\n    12843964835759520\n    >>> binomial(3, 20)\n    158437504390524800\n    >>> binomial(3, 21)\n    2199162035109715200\n    >>> binomial(3, 22)\n    2979653742110188800\n    >>> binomial(3, 23)\n    40269801458717171200\n    >>> binomial(3, 24)\n    56274628962610766400\n    >>> binomial(3, 25)\n    70366836506088505600\n    >>> binomial(3, 26)\n    90183920646854014400\n    >>> binomial(3, 27)\n    118458865450199692800\n    >>> binomial(3, 28",
    "import math\n\n\ndef sum_even_binomial(n):\n    \"\"\"\n    Calculate the sum of even binomial coefficients of n.\n    \"\"\"\n    return math.factorial(n) / (math.factorial(n - 1) * (n - 1))\n\n\ndef sum_odd_binomial(n):\n    \"\"\"\n    Calculate the sum of odd binomial coefficients of n.\n    \"\"\"\n    return math.factorial(n + 1) / (math.factorial(n) * (n + 1))\n\n\ndef main():\n    \"\"\"\n    Write a python function to calculate sum of even binomial coefficients of n.\n    \"\"\"\n    print sum_even_binomial(5)\n    print sum_odd_binomial(5)\n\nif __name__ == '__main__':\n    main()",
    "def binomial_coefficient_sum(n):\n    \"\"\"\n    Calculate sum of all binomial coefficients for n.\n    \"\"\"\n\n    if n == 0:\n        return 0\n\n    result = 0\n\n    for i in range(0, n + 1):\n        result += binomial_coefficient(n, i)\n\n    return result\n\ndef binomial_coefficient(n, i):\n    \"\"\"\n    Calculate binomial coefficient for n and i.\n    \"\"\"\n\n    if i == 0:\n        return 1\n\n    if i == n:\n        return 1\n\n    if i > n:\n        return 0\n\n    result = binomial_coefficient(n, i - 1)\n\n    return result * (i + 1) / (i * (i - 1))\n\nif __name__ == '__main__':\n\n    n = int(input())\n\n    result = binomial_coefficient_sum(n)\n\n    print(result)",
    "def sum_even_binomial_coeff(n):\n    \"\"\"\n    :param n: an integer\n    :return: the sum of even binomial coefficients\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n        sum += binomial(n, i) / (i+1)\n    return sum\n\nif __name__ == '__main__':\n    print sum_even_binomial_coeff(4)",
    "from math import factorial\n\ndef binom(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\ndef sum_even_binom(n):\n    return binom(n, 0) + binom(n, 1) + binom(n, 2) + binom(n, 3)\n\nprint sum_even_binom(5)",
    "def sum_even_binomial_coeff(n):\n    \"\"\"\n    n = [0,1,2,3,4,5,6,7,8,9]\n    sum_even_binomial_coeff(n) = [0, 1, 4, 10, 21, 35, 50, 65, 84, 100]\n    \"\"\"\n    \n    sum = 0\n    for i in range(len(n)):\n        if i % 2 == 0:\n            sum += n[i]\n    return sum\n\n#print sum_even_binomial_coeff([0,1,2,3,4,5,6,7,8,9])\n\n#print sum_even_binomial_coeff(range(10))\n\nprint sum_even_binomial_coeff(range(10))",
    "def even_binomial(n,k):\n    return sum([(n+1)**i for i in range(k+1) if i >= 0 and (n+1)**i <= k])\n\ndef test_even_binomial():\n    assert(even_binomial(0, 0) == 0)\n    assert(even_binomial(1, 0) == 1)\n    assert(even_binomial(2, 0) == 1)\n    assert(even_binomial(3, 0) == 1)\n    assert(even_binomial(4, 0) == 1)\n    assert(even_binomial(5, 0) == 1)\n    assert(even_binomial(6, 0) == 1)\n    assert(even_binomial(7, 0) == 1)\n    assert(even_binomial(8, 0) == 1)\n    assert(even_binomial(9, 0) == 1)\n    assert(even_binomial(10, 0) == 1)\n    assert(even_binomial(11, 0) == 1)\n    assert(even_binomial(12, 0) == 1)\n    assert(even_binomial(13, 0) == 1)\n    assert(even_binomial(14, 0) == 1)\n    assert(even_binomial(15, 0) == 1)\n    assert(even_binomial(16, 0) == 1)\n    assert(even_binomial(17, 0) == 1)\n    assert(even_binomial(18, 0) == 1)\n    assert(even_binomial(19, 0) == 1)\n    assert(even_binomial(20, 0) == 1)\n    assert(even_binomial(21, 0) == 1)\n    assert(even_binomial(22, 0) == 1)\n    assert(even_binomial(23, 0) == 1)\n    assert(even_binomial(24, 0) == 1)\n    assert(even_binomial(25, 0) == 1)\n    assert(even_binomial(26, 0) == 1)\n    assert(even_binomial(27, 0) == 1)\n    assert(even_bin",
    "def binomial_coefficient(n, k):\n    \"\"\"\n    Compute binomial coefficient.\n    \"\"\"\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if n < k:\n        return 0\n    return binomial_coefficient(n - 1, k - 1) * n / (k - 1)\n\ndef find_sum_of_even_binomial_coefficients(n):\n    \"\"\"\n    Write a python function to find sum of even index binomial coefficients.\n    \"\"\"\n    sum = 0\n    for k in range(1, n + 1):\n        sum += binomial_coefficient(n, k)\n    return sum\n\nif __name__ == \"__main__\":\n    print(find_sum_of_even_binomial_coefficients(7))",
    "def sum_even_binomial_coefficients(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(binomial(n, i) for i in range(1, n + 1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    print(sum_even_binomial_coefficients(6))\n    print(sum_even_binomial_coefficients(8))\n    print(sum_even_binomial_coefficients(9))",
    "def sum_even_binomial(n):\n  return sum(binomial(n,i) for i in range(2,n+1))\n\nif __name__ == \"__main__\":\n  print(sum_even_binomial(6))",
    "from itertools import islice\n\n\ndef sum_even_binomial_coefficients(n):\n    \"\"\"\n    For example, if n = 4, the sum of even binomial coefficients is [1, 2, 5, 8].\n    :param n: integer\n    :return: list\n    \"\"\"\n    return [sum(islice(binomial(n, i), i, None, 2)) for i in range(1, n + 1)]\n\n\ndef binomial(n, k):\n    \"\"\"\n    Returns the binomial coefficient of n and k.\n    :param n: integer\n    :param k: integer\n    :return: list\n    \"\"\"\n    return [n//i for i in range(1, k + 1)] + [1]\n\n\nif __name__ == '__main__':\n    print(sum_even_binomial_coefficients(4))",
    "def sum_even_binomial_coeff(n):\n    return sum(binomial(n, i) for i in range(1, n + 1) if i % 2 == 0)\n\n\"\"\"\nTest cases:\n\n>>> sum_even_binomial_coeff(0)\n0\n>>> sum_even_binomial_coeff(1)\n1\n>>> sum_even_binomial_coeff(2)\n2\n>>> sum_even_binomial_coeff(3)\n6\n>>> sum_even_binomial_coeff(4)\n20\n>>> sum_even_binomial_coeff(5)\n60\n>>> sum_even_binomial_coeff(6)\n210\n\"\"\"",
    "def sum_even_binomial_coeffs(n):\n    \"\"\"\n    Write a python function to find sum of even index binomial coefficients.\n    n - the number of binomial coefficients to sum\n    \"\"\"\n    s = 0\n    for i in range(2, n+1):\n        s += i * (i-1) / 2\n    return s\n\nprint sum_even_binomial_coeffs(3)",
    "def sum_binomial(n):\n    return sum(i for i in range(n+1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    print sum_binomial(5)",
    "def sumEvenBinomialCoeffs(n):\n    \"\"\"\n    Find sum of even index binomial coefficients.\n    n - positive integer\n    Returns -1 if n is not a positive integer\n    \"\"\"\n    if n < 0:\n        return -1\n\n    binomialCoeffs = [1]\n    for i in range(2, n + 1):\n        binomialCoeffs.append(binomialCoeffs[i - 1] * (n - i + 1))\n\n    return sum(binomialCoeffs[:n + 1])\n\nif __name__ == \"__main__\":\n    print(sumEvenBinomialCoeffs(5))\n    print(sumEvenBinomialCoeffs(6))\n    print(sumEvenBinomialCoeffs(7))\n    print(sumEvenBinomialCoeffs(8))",
    "def find_sum_even_binomial_coefficients(n):\n    '''\n    n: an integer\n    return: sum of even index binomial coefficients\n    '''\n    return sum([1 for i in range(1, n+1) if i % 2 == 0 and i < n**2])",
    "#!/usr/bin/env python\n\ndef binom(n, k):\n    return bin(n)[2:].zfill(k+1)\n\ndef sum_even_binom(n):\n    return sum(binom(n, i) for i in range(0, n+1) if i % 2 == 0)\n\nprint sum_even_binom(5)",
    "def sum_even_binomial(n):\n    \"\"\"\n    n is the number of rows,\n    i is the index of the row,\n    k is the index of the binomial coefficient\n    \"\"\"\n    s = 0\n    for i in range(1, n+1):\n        s += binomial(n, i) * binomial(n, i-1)\n    return s\n\nif __name__ == \"__main__\":\n    assert sum_even_binomial(5) == 120\n    assert sum_even_binomial(20) == 420000\n    assert sum_even_binomial(10) == 10",
    "from itertools import product\n\ndef sum_even_binomial_coeff(n, k):\n    \"\"\"\n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even_binomial_coeff(n, k) -> int\n    \n    sum_even",
    "def sum_even_binomial_coeff(n):\n    if n == 0:\n        return 0\n\n    return sum(binomial_coeff(n, i) for i in range(1, n + 1) if i % 2 == 0)\n\n# Your code here\n\nprint(sum_even_binomial_coeff(0))\nprint(sum_even_binomial_coeff(1))\nprint(sum_even_binomial_coeff(2))\nprint(sum_even_binomial_coeff(3))\nprint(sum_even_binomial_coeff(4))\nprint(sum_even_binomial_coeff(5))\nprint(sum_even_binomial_coeff(6))\nprint(sum_even_binomial_coeff(7))\nprint(sum_even_binomial_coeff(8))\nprint(sum_even_binomial_coeff(9))",
    "#!/usr/bin/env python\n\ndef binomial_coeff(n,k):\n    sum = 0\n    for i in range(k+1):\n        sum += binomial(n,i) * pow(2,k-i)\n    return sum\n\ndef binomial(n,k):\n    if k > n:\n        return 0\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return 1\n    if k > n/2:\n        return binomial(n,k) + binomial(n-1,k-1)\n    else:\n        return binomial(n-1,k-1) + binomial(n-1,k)\n\ndef sum_even_binomial_coeff():\n    sum = 0\n    for i in range(2,101):\n        if i % 2 == 0:\n            sum += binomial(i,i/2)\n    return sum\n\nprint sum_even_binomial_coeff()",
    "def binom_sum(n, k):\n    return sum(binom(n, i) for i in range(k, n+1))\n\nprint binom_sum(5, 2)",
    "def sum_even_binomial_coeff(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(binomial(n, i) for i in range(1, n + 1) if i % 2 == 0)\n\n\nif __name__ == '__main__':\n    print(sum_even_binomial_coeff(10))\n    print(sum_even_binomial_coeff(20))",
    "from math import factorial\n\ndef binomial_coefficient(n, k):\n    return factorial(n) / (factorial(k) * factorial(n - k))\n\n\ndef sum_of_even_binomial_coefficients():\n    return sum(binomial_coefficient(n, k) for k in range(0, n + 1) if k % 2 == 0)\n\n\nif __name__ == '__main__':\n    print(sum_of_even_binomial_coefficients())",
    "from math import factorial\n\ndef sum_even_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of even binomial coefficients in range [0, n].\n\n    :param n: int\n    :return: sum of even binomial coefficients in range [0, n]\n    \"\"\"\n    return sum(factorial(n) / factorial(i) * factorial(n - i)\n               for i in range(0, n + 1)\n               if i % 2 == 0)\n\n\nif __name__ == '__main__':\n    assert sum_even_binomial_coefficients(5) == 36\n    assert sum_even_binomial_coefficients(15) == 546\n    assert sum_even_binomial_coefficients(100) == 70910\n    assert sum_even_binomial_coefficients(101) == 70911",
    "def sum_of_even_binomial_coeff(n, k):\n    \"\"\"\n    sum_of_even_binomial_coeff(n, k) -> int\n    \n    sum_of_even_binomial_coeff(n, k) returns the sum of all the binomial\n    coefficients with even index and number of terms less than or equal to k.\n    \"\"\"\n    return sum(binomial(n, i) * binomial(n - i, k - i) for i in range(k + 1))\n\ndef test_sum_of_even_binomial_coeff():\n    assert sum_of_even_binomial_coeff(2, 0) == 1\n    assert sum_of_even_binomial_coeff(3, 0) == 1\n    assert sum_of_even_binomial_coeff(4, 0) == 1\n    assert sum_of_even_binomial_coeff(5, 0) == 1\n    assert sum_of_even_binomial_coeff(6, 0) == 1\n    assert sum_of_even_binomial_coeff(7, 0) == 1\n    assert sum_of_even_binomial_coeff(8, 0) == 1\n    assert sum_of_even_binomial_coeff(9, 0) == 1\n    assert sum_of_even_binomial_coeff(10, 0) == 1\n    assert sum_of_even_binomial_coeff(11, 0) == 1\n    assert sum_of_even_binomial_coeff(12, 0) == 1\n    assert sum_of_even_binomial_coeff(13, 0) == 1\n    assert sum_of_even_binomial_coeff(14, 0) == 1\n    assert sum_of_even_binomial_coeff(15, 0) == 1\n    assert sum_of_even_binomial_coeff(16, 0) == 1\n    assert sum_of_even_binomial_coeff(17, 0) == 1\n    assert sum_of_even_binomial_coeff(18, 0) == 1\n    assert sum_of_even_binomial_coeff(",
    "def even_binomial(n, k):\n    return sum(binomial(n, i) * binomial(k, i) for i in range(k, 0, -1))\n\n\nif __name__ == '__main__':\n    print(even_binomial(8, 2))\n    print(even_binomial(10, 2))",
    "def even_binomial_coeff(n):\n    \"\"\"\n    Write a function to return the sum of all the even index binomial\n    coefficients.\n\n    >>> even_binomial_coeff(10)\n    5040\n    >>> even_binomial_coeff(20)\n    1260\n    >>> even_binomial_coeff(30)\n    8160\n    >>> even_binomial_coeff(40)\n    10240\n    >>> even_binomial_coeff(50)\n    30240\n    >>> even_binomial_coeff(60)\n    125480\n    >>> even_binomial_coeff(70)\n    491520\n    >>> even_binomial_coeff(80)\n    205840\n    >>> even_binomial_coeff(90)\n    1037280\n    >>> even_binomial_coeff(100)\n    3557040\n    >>> even_binomial_coeff(200)\n    171440\n    \"\"\"\n    return sum(binomial(n, i) for i in range(n + 1) if i % 2 == 0)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "from functools import reduce\n\ndef even_binomial(n):\n    return sum(reduce(lambda a, b: a + b, range(2, n + 1)) for i in range(1, n + 1))\n\nif __name__ == \"__main__\":\n    print(even_binomial(10))",
    "import sys\nimport math\n\ndef sum_even(n):\n    \"\"\"\n    >>> sum_even(5)\n    30\n    \"\"\"\n    return math.factorial(n) / (math.factorial(n - 1) * math.factorial(n - 2))\n\n\ndef sum_even_rec(n):\n    \"\"\"\n    >>> sum_even_rec(5)\n    30\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return sum_even_rec(n - 1) + sum_even_rec(n - 2)\n\n\ndef sum_even_iter(n):\n    \"\"\"\n    >>> sum_even_iter(5)\n    30\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return sum_even_iter(n - 1) + sum_even_iter(n - 2)\n\n\ndef sum_even_iter_rec(n):\n    \"\"\"\n    >>> sum_even_iter_rec(5)\n    30\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return sum_even_iter_rec(n - 1) + sum_even_iter_rec(n - 2)\n\n\ndef sum_even_dp(n):\n    \"\"\"\n    >>> sum_even_dp(5)\n    30\n    \"\"\"\n    return sum_even_dp_iter(n, [])\n\n\ndef sum_even_dp_iter(n, dp):\n    if n == 0:\n        return dp[0]\n    elif n == 1:\n        return dp[1]\n    else:\n        return sum_even_dp_iter(n - 1, [x + y for x, y in zip(dp, dp[-1:])]) + sum_even_dp_iter(n - 2, dp)\n\n\ndef sum_even_dp_rec(n):\n    \"\"\"\n    >>> sum_even_dp_rec(5)\n    30\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return",
    "import math\n\ndef binom_sum(n):\n    \"\"\"\n    n is an integer.\n    Return the sum of all binomial coefficients with n as the\n    number of terms.\n\n    >>> binom_sum(0)\n    0\n    >>> binom_sum(1)\n    1\n    >>> binom_sum(2)\n    2\n    >>> binom_sum(3)\n    6\n    >>> binom_sum(4)\n    24\n    >>> binom_sum(5)\n    120\n    >>> binom_sum(6)\n    720\n    >>> binom_sum(7)\n    5040\n    >>> binom_sum(8)\n    40320\n    >>> binom_sum(9)\n    362880\n    >>> binom_sum(10)\n    3628800\n    \"\"\"\n    if n == 0:\n        return 0\n    return math.factorial(n) / math.factorial(n - 1)\n\nif __name__ == '__main__':\n    print(binom_sum(4))\n    print(binom_sum(6))\n    print(binom_sum(8))\n    print(binom_sum(10))",
    "def sumEven(n):\n    \"\"\"\n    :param n: integer\n    :return: sum of even binomial coefficients\n    \"\"\"\n    return sum(binomial(n, i) for i in range(1, n + 1) if binomial(n, i) % 2 == 0)\n\ndef binomial(n, k):\n    \"\"\"\n    :param n: integer\n    :param k: integer\n    :return: n choose k\n    \"\"\"\n    return reduce(lambda x, y: x * (n - k + 1) / (y + 1), range(1, k + 1), 1)\n\nif __name__ == \"__main__\":\n    print sumEven(10)\n    print sumEven(100)\n    print sumEven(1000)",
    "import numpy as np\n\ndef even_binomial(n):\n    \"\"\"\n    returns sum of even binomial coefficients\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return n * (n - 1) * (n - 2) / 2\n    else:\n        return n * (n - 1) * (n - 2)\n\ndef binomial(n, m):\n    \"\"\"\n    returns sum of binomial coefficients\n    \"\"\"\n    if n == 0 or m == 0:\n        return 0\n    if n < m:\n        return 0\n    if n == m:\n        return 1\n    return binomial(n - 1, m - 1) + binomial(n - 1, m)\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    n = 5\n    m = 4\n    print binomial(n, m)\n    print even_binomial(n)\n    print binomial(n, m)\n    print even_binomial(n)\n\nif __name__ == '__main__':\n    main()",
    "def sum_of_binomial_coefficients(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    # the idea is to iterate the binomial coefficents\n    # and sum the even index ones\n    return sum(binomial(n, i) for i in range(n+1) if i%2==0)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(sum_of_binomial_coefficients(n))",
    "def find_sum_binomial_coef_even(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    sum = 0\n    for i in range(2, n+1):\n        if i % 2 == 0:\n            sum += i * find_sum_binomial_coef_even(n-i)\n    return sum\n\nif __name__ == '__main__':\n    assert find_sum_binomial_coef_even(20) == 3950",
    "def binom_sum(n, k):\n    \"\"\"\n    n: int\n    k: int\n    Return: int\n    \"\"\"\n    if k == 0 or n == k:\n        return 1\n    if k == 1:\n        return n\n    return binom_sum(n-1, k-1) + binom_sum(n-1, k)\n\nprint(binom_sum(20, 6))",
    "def sum_even_binomial(n):\n    return sum(binomial(n, i) for i in range(0, n + 1) if i % 2 == 0)\n\n# Test cases\nprint sum_even_binomial(3)\nprint sum_even_binomial(4)\nprint sum_even_binomial(5)",
    "def sum_of_even_binomial_coefficients(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(binomial(n, i) for i in range(n+1) if i%2==0)\n\nif __name__ == '__main__':\n    assert sum_of_even_binomial_coefficients(3) == 15\n    assert sum_of_even_binomial_coefficients(5) == 105\n    assert sum_of_even_binomial_coefficients(10) == 55\n    assert sum_of_even_binomial_coefficients(20) == 1220",
    "def sum_even_binomial_coeff(n):\n    return sum(binomial(n, i) for i in range(1, n + 1) if i % 2 == 0)\n\nprint sum_even_binomial_coeff(10)",
    "def binomial_coefficient(n, k):\n    \"\"\"\n    Find the number of ways to choose k elements from n elements.\n\n    Example:\n    n = 5, k = 2\n    returns 1\n    \"\"\"\n    return binomial(n, k)\n\ndef binomial(n, k):\n    \"\"\"\n    Find the number of ways to choose k elements from n elements.\n    \"\"\"\n    if k == 0 or n == k:\n        return 1\n    elif k == 1 or n == k - 1:\n        return n\n    else:\n        return binomial(n, k-1) * binomial(n-k, k-1)\n\ndef sum_of_even_binomial_coefficients(n):\n    \"\"\"\n    Find the sum of all even binomial coefficients up to n.\n    \"\"\"\n    return sum(binomial_coefficient(n, x) for x in range(n+1) if x%2 == 0)\n\nif __name__ == \"__main__\":\n    assert sum_of_even_binomial_coefficients(3) == 12\n    assert sum_of_even_binomial_coefficients(5) == 30",
    "def binomial_sum(n):\n    \"\"\"\n    Find sum of even index binomial coefficients.\n\n    Example:\n        >>> binomial_sum(10)\n        210\n    \"\"\"\n    return sum(i * (n-i) for i in range(n+1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    print(binomial_sum(20))",
    "def sum_of_even_binomial_coefficients(n):\n    return sum(binomial(n, i) for i in range(n+1) if i % 2 == 0)\n\n\nprint(sum_of_even_binomial_coefficients(15))",
    "def find_sum_of_even_binomial_coeffs(n):\n    return sum(binomial(n, i) for i in range(0, n+1) if i % 2 == 0)\n\n\nif __name__ == '__main__':\n    print(find_sum_of_even_binomial_coeffs(5))",
    "from itertools import count\n\n\ndef sum_even_binomial_coefficients(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return sum(next(count(0, 2)) for _ in range(2, n+1))\n\n\nif __name__ == '__main__':\n    assert sum_even_binomial_coefficients(0) == 0\n    assert sum_even_binomial_coefficients(1) == 1\n    assert sum_even_binomial_coefficients(2) == 2\n    assert sum_even_binomial_coefficients(3) == 5\n    assert sum_even_binomial_coefficients(4) == 14\n    assert sum_even_binomial_coefficients(5) == 42\n    assert sum_even_binomial_coefficients(6) == 132\n    assert sum_even_binomial_coefficients(7) == 286\n    assert sum_even_binomial_coefficients(8) == 1792\n    assert sum_even_binomial_coefficients(9) == 6561\n    assert sum_even_binomial_coefficients(10) == 2520\n    assert sum_even_binomial_coefficients(11) == 10080\n    assert sum_even_binomial_coefficients(12) == 40960\n    assert sum_even_binomial_coefficients(13) == 163840\n    assert sum_even_binomial_coefficients(14) == 655360\n    assert sum_even_binomial_coefficients(15) == 2621440",
    "def binom_sum(n):\n    \"\"\"\n    n = number of elements\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return sum(binom(n, i) for i in range(n+1) if i % 2 == 0)\n\ndef binom(n, i):\n    \"\"\"\n    n = number of elements\n    i = index of binomial coefficient to sum\n    \"\"\"\n    return factorial(n) / (factorial(i) * factorial(n-i))\n\nif __name__ == \"__main__\":\n    print(binom_sum(3))\n    print(binom_sum(5))\n    print(binom_sum(20))",
    "def binomial_coeff(n, k):\n    if k == 0:\n        return 1\n    else:\n        return binomial_coeff(n, k - 1) * (n + 1) / (k + 1)\n\n\ndef sum_even_binomial_coeff(n):\n    return binomial_coeff(n, n / 2)\n\n\nif __name__ == \"__main__\":\n    print(sum_even_binomial_coeff(15))",
    "def even_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of the binomial coefficients with even index.\n    \"\"\"\n\n    result = 0\n    for i in range(2, n + 1):\n        result += binomial_coefficients(i, n)\n    return result\n\ndef binomial_coefficients(n, k):\n    \"\"\"\n    Return the binomial coefficients with k index.\n    \"\"\"\n\n    result = 1\n    for i in range(1, k + 1):\n        result *= n - i + 1\n        result /= i\n    return result\n\nif __name__ == '__main__':\n    print(even_binomial_coefficients(4))",
    "def find_sum_even_binomial_coeff(n):\n    \"\"\"\n    Write a python function to find sum of even index binomial coefficients.\n    \n    n - number of terms\n    \"\"\"\n    \n    sum_even_binomial_coeff = 0\n    \n    for i in range(1, n+1):\n        if (i%2 == 0):\n            sum_even_binomial_coeff += i*find_binomial_coeff(i, n)\n    \n    return sum_even_binomial_coeff\n\ndef find_binomial_coeff(n, k):\n    \"\"\"\n    Write a python function to find binomial coefficients.\n    \n    n - number of terms\n    k - number of terms\n    \"\"\"\n    \n    binomial_coeff = 1\n    \n    for i in range(1, n+1):\n        binomial_coeff *= i\n        \n        if (i%k == 0):\n            binomial_coeff -= 1\n    \n    return binomial_coeff\n\nif __name__ == \"__main__\":\n    print find_sum_even_binomial_coeff(5)",
    "def binomial(n, k):\n    \"\"\"\n    n, k - integer values\n    \"\"\"\n    if k > n:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * (binomial(n, k-1) + binomial(n-1, k-1))\n\ndef binomial_sum(n, k):\n    \"\"\"\n    n, k - integer values\n    \"\"\"\n    if k > n:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n * (binomial(n, k-1) + binomial(n-1, k-1))\n\ndef main():\n    print(\"Sum of even index binomial coefficients is: \", binomial_sum(100, 10))\n\nif __name__ == '__main__':\n    main()",
    "def binomial(n, k):\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return n*binomial(n-1, k-1)\n\n\ndef sum_even_binomials():\n    \"\"\"\n    Calculate sum of even binomial coefficients.\n    \"\"\"\n    print binomial(100, 0), binomial(99, 0)\n    print binomial(100, 1), binomial(99, 1)\n    print binomial(100, 2), binomial(99, 2)\n    print binomial(100, 3), binomial(99, 3)\n    print binomial(100, 4), binomial(99, 4)\n    print binomial(100, 5), binomial(99, 5)\n    print binomial(100, 6), binomial(99, 6)\n    print binomial(100, 7), binomial(99, 7)\n    print binomial(100, 8), binomial(99, 8)\n    print binomial(100, 9), binomial(99, 9)\n\nif __name__ == '__main__':\n    sum_even_binomials()",
    "def sum_binomial(n, k):\n    \"\"\"\n    sum_binomial(n, k)\n\n    Returns the sum of k-th binomial coefficient in n.\n    \"\"\"\n    return sum([1 if n % 2 == 0 else 0 for k in range(1, n + 1)])\n\n\nif __name__ == '__main__':\n    print(sum_binomial(10, 3))",
    "def even_binomial(n, k):\n    if n < k:\n        return 0\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if n < k:\n        return 0\n    if n < k + 1:\n        return 0\n    if k > n / 2:\n        k -= n / 2\n    sum = 0\n    for i in range(1, k + 1):\n        sum += even_binomial(n - i, i)\n    return sum\n\nprint(even_binomial(4, 2))\nprint(even_binomial(5, 3))\nprint(even_binomial(6, 2))\nprint(even_binomial(7, 3))\nprint(even_binomial(8, 2))",
    "def binomial(n, k):\n    \"\"\"\n    n, k : ints\n\n    Calculate the binomial coefficient.\n    \"\"\"\n    if k > n:\n        return 0\n    if k == 0 or k == n:\n        return 1\n    return binomial(n - 1, k - 1) + binomial(n - 1, k)\n\n\ndef sum_even_binomial(n):\n    \"\"\"\n    n : int\n\n    Calculate the sum of all even index binomial coefficients.\n    \"\"\"\n    return sum(binomial(n, i) for i in range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    for n in range(1, 21):\n        print(\"{0} = {1}\".format(n, sum_even_binomial(n)))",
    "def binomial_coefficient(n, k):\n    return reduce(lambda x, y: x * (n-k) * (k+1) * (n-k-1), range(1, k+1), 1)\n\nprint binomial_coefficient(30, 3)",
    "def sum_even_binomial(n):\n    return sum(x * (n - i) for i in range(1, n + 1) if i % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    print sum_even_binomial(6)",
    "import sys\nsys.setrecursionlimit(10000)\n\ndef binom_sum(n):\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    return binom_sum(n - 1) + binom_sum(n - 2)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(binom_sum(n))",
    "def binomial_coeff(n, k):\n    \"\"\"\n    Calculate the sum of binomial coefficients in a range.\n    \"\"\"\n    total = 1\n    for i in range(k + 1, n + 1):\n        total += binomial_coeff(n, i) * (i - k) / (i + 1)\n    return total\n\nprint(binomial_coeff(100, 100))",
    "def binomial_coefficient(n, k):\n    \"\"\"\n    Find the sum of binomial coefficients.\n\n    n, k: positive integers\n    \"\"\"\n    return sum(binomial(n, i) * binomial(k, i) for i in range(0, k + 1))\n\nif __name__ == '__main__':\n    n = int(input())\n    k = int(input())\n\n    print(binomial_coefficient(n, k))",
    "def binomial_coefficient(n, k):\n    \"\"\"\n    Return the n choose k.\n    \"\"\"\n    return sum(bin(n, i) == '0' * (i + 1) for i in range(k))\n\ndef sum_even_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of all even index binomial coefficients.\n    \"\"\"\n    return binomial_coefficient(n, n / 2)\n\ndef test_binomial_coefficient():\n    assert binomial_coefficient(1, 0) == 1\n    assert binomial_coefficient(2, 0) == 1\n    assert binomial_coefficient(3, 0) == 1\n    assert binomial_coefficient(4, 0) == 1\n    assert binomial_coefficient(5, 0) == 1\n    assert binomial_coefficient(6, 0) == 1\n    assert binomial_coefficient(7, 0) == 1\n    assert binomial_coefficient(8, 0) == 1\n    assert binomial_coefficient(9, 0) == 1\n    assert binomial_coefficient(10, 0) == 1\n    assert binomial_coefficient(11, 0) == 1\n    assert binomial_coefficient(12, 0) == 1\n    assert binomial_coefficient(13, 0) == 1\n    assert binomial_coefficient(14, 0) == 1\n    assert binomial_coefficient(15, 0) == 1\n    assert binomial_coefficient(16, 0) == 1\n    assert binomial_coefficient(17, 0) == 1\n    assert binomial_coefficient(18, 0) == 1\n    assert binomial_coefficient(19, 0) == 1\n    assert binomial_coefficient(20, 0) == 1\n    assert binomial_coefficient(21, 0) == 1\n    assert binomial_coefficient(22, 0) == 1\n    assert binomial_coefficient(23, 0) == 1\n    assert binomial_coefficient(24, 0) == 1\n    assert binomial_coefficient(25, 0) == 1\n    assert binomial_coefficient(26, 0) == 1\n    assert binomial_coefficient",
    "def binomial(n, k):\n    \"\"\"\n    Find the sum of the binomial coefficients.\n    \"\"\"\n    # The binomial coefficient is defined as the product of\n    # n choose k.\n    # For n, 1 <= n <= 10, k <= 10, we can get the sum of\n    # n choose k by using the following formula:\n    # n choose k = n * (n - 1) * (n - 2) *... * (n - k + 1)\n    # In this case, we can use the fact that the sum of the\n    # binomial coefficients is equal to the product of the\n    # even-index binomial coefficients.\n    # For n, 11 <= n <= 100, k <= 100, we can use the following\n    # formula:\n    # n choose k = (n * (n + 1)) / 2\n    # In this case, we can use the fact that the sum of the\n    # binomial coefficients is equal to the product of the\n    # odd-index binomial coefficients.\n    if n == 0 or k == 0:\n        return 0\n    if n < 0 or k < 0:\n        return 0\n    if n == 1 or k == 0:\n        return 1\n    if n == 2:\n        return k\n    if k > n / 2:\n        return binomial(n, k)\n    return binomial(n, k) + binomial(n - k, k)\n\ndef test_binomial():\n    assert binomial(0, 0) == 1\n    assert binomial(0, 1) == 0\n    assert binomial(1, 0) == 1\n    assert binomial(1, 1) == 1\n    assert binomial(2, 0) == 1\n    assert binomial(2, 1) == 2\n    assert binomial(3, 0) == 1\n    assert binomial(3, 1) == 3\n    assert binomial(3, 2) == 6\n    assert binomial(4, 0) == 1\n    assert binomial(4, 1) == 4\n    assert binomial(4, 2) == 8\n    assert binomial(4, 3) == 12\n    assert binomial(5, 0) == 1\n    assert binomial(5,",
    "# Definition for a binomial.\nclass Binomial:\n    def __init__(self, n, k):\n        self.n = n\n        self.k = k\n\n    def __repr__(self):\n        return 'Binomial(%d, %d)' % (self.n, self.k)\n\n# @include\ndef binomial_sum(n, k):\n    # Compute the sum of binomial coefficients using recursive formula.\n    def sum(n, k):\n        if n == 0:\n            return 0\n        if k == 0:\n            return 1\n        if k > n:\n            return 0\n        if k == n:\n            return 1\n        return sum(n - 1, k - 1) + sum(n - 1, k)\n    return sum(n, k)\n# @exclude\n\n\ndef main():\n    for n in range(1, 11):\n        for k in range(1, n + 1):\n            print(Binomial(n, k), binomial_sum(n, k))\n        print()\n\n\nif __name__ == '__main__':\n    main()",
    "import itertools\n\ndef find_sum(n, k):\n    \"\"\"\n    n: int\n    k: int\n    \"\"\"\n    return sum(itertools.combinations(range(n), k))\n\ndef main():\n    \"\"\"\n    n: int\n    k: int\n    \"\"\"\n    n = int(input(\"Enter n: \"))\n    k = int(input(\"Enter k: \"))\n    print(find_sum(n, k))\n\nif __name__ == \"__main__\":\n    main()",
    "def binom(n, k):\n    \"\"\"\n    binom(n, k) -> The number of ways of choosing k elements from n.\n    \"\"\"\n    return sum(bin(k, i) * bin(n - i, k - i) for i in range(k + 1))\n\nif __name__ == '__main__':\n    print binom(10, 5)",
    "def even_binomial(n, k):\n    \"\"\"\n    :type n: int\n    :type k: int\n    :rtype: int\n    \"\"\"\n    result = 0\n    for i in range(k, n + 1):\n        result += i / 2 ** k * (i - 1) / 2 ** i\n    return result\n\n\nif __name__ == '__main__':\n    print(even_binomial(7, 1))\n    print(even_binomial(7, 2))\n    print(even_binomial(7, 3))\n    print(even_binomial(7, 4))\n    print(even_binomial(7, 5))\n    print(even_binomial(7, 6))\n    print(even_binomial(7, 7))\n    print(even_binomial(7, 8))\n    print(even_binomial(7, 9))",
    "def binom(n, k):\n    \"\"\"\n    Return the binomial coefficient (n choose k).\n    \"\"\"\n    return reduce(lambda x, y: x * (n - y), range(1, k + 1), 1)\n\ndef sum_even_bins(n):\n    \"\"\"\n    Return sum of even index binomial coefficients.\n    \"\"\"\n    return binom(n, 2) * binom(n, 3) * binom(n, 4) * binom(n, 5) * binom(n, 6)\n\ndef test_binom():\n    assert binom(0, 0) == 1\n    assert binom(1, 1) == 1\n    assert binom(2, 2) == 1\n    assert binom(3, 3) == 1\n    assert binom(4, 4) == 1\n    assert binom(5, 5) == 1\n    assert binom(6, 6) == 1\n    assert binom(7, 7) == 1\n    assert binom(8, 8) == 1\n    assert binom(9, 9) == 1\n    assert binom(10, 10) == 1\n    assert binom(11, 11) == 1\n    assert binom(12, 12) == 1\n    assert binom(13, 13) == 1\n    assert binom(14, 14) == 1\n    assert binom(15, 15) == 1\n    assert binom(16, 16) == 1\n    assert binom(17, 17) == 1\n    assert binom(18, 18) == 1\n    assert binom(19, 19) == 1\n    assert binom(20, 20) == 1\n    assert binom(21, 21) == 1\n    assert binom(22, 22) == 1\n    assert binom(23, 23) == 1\n    assert binom(24, 24) == 1\n    assert binom(25, 25) == 1\n    assert binom(26, 26) == 1\n    assert binom(27, 27) == 1\n    assert binom(28, 28) == 1\n    assert binom(29, 29) == 1\n    assert binom(30, 30) == 1\n    assert binom(31",
    "def even_binomial(n, k):\n    \"\"\"\n    Find the sum of the even index binomial coefficients.\n    n: an integer\n    k: an integer\n    \"\"\"\n    return sum(bin(i)[2:].count('1') for i in range(n+1) if i%2==0 and i>=k)\n\n# if __name__ == \"__main__\":\n#     print(even_binomial(3,2))\n#     print(even_binomial(10,1))\n#     print(even_binomial(10,2))\n#     print(even_binomial(10,3))\n#     print(even_binomial(10,4))",
    "import math\n\ndef binom(n,k):\n    return math.factorial(n)/(math.factorial(k)/math.factorial(n-k))\n\ndef sum_even_binomial(n):\n    return sum(binom(i,k) for i in range(1,n+1) for k in range(0,i))\n\nif __name__ == '__main__':\n    print sum_even_binomial(10)",
    "def sumEvenBinomials(n):\n    \"\"\"\n    n = number of elements in the binomial array\n    returns sum of even binomial coefficients\n    \"\"\"\n\n    return sum([binomial(n, i) for i in range(n) if i % 2 == 0])",
    "def sum_even_binomial(n):\n    return sum(n * (n+1) / 2 for n in range(1, n+1) if n % 2 == 0)\n\nprint(sum_even_binomial(10))",
    "import math\n\ndef binomial_coefficient(n, k):\n    '''\n    n is the number of elements\n    k is the number of elements to be counted\n    '''\n    return math.factorial(n) / math.factorial(k) / math.factorial(n - k)\n\ndef main():\n    n = int(input())\n    k = int(input())\n    print(binomial_coefficient(n, k))\n\nif __name__ == '__main__':\n    main()",
    "def sum_even_binomial_coefficients(n):\n    \"\"\"\n    sum_even_binomial_coefficients(n)\n\n    Sum of even index binomial coefficients.\n\n    Arguments:\n        n (int):\n            Number of terms.\n\n    Returns:\n        (int):\n            Sum of even index binomial coefficients.\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i\n    return sum",
    "def binomial_coeff(n, k):\n    return bin(n)[2:].zfill(k)[:-1]\n\ndef binomial_coeff_sum(n, k):\n    return sum(binomial_coeff(n, k))\n\ndef main():\n    print(binomial_coeff_sum(20, 2))\n\nif __name__ == '__main__':\n    main()",
    "def sum_of_even_binomial_coefficients(n):\n    \"\"\"\n    Returns sum of even index binomial coefficients from 1 to n.\n    \"\"\"\n    return sum(binomial(n, i) for i in range(1, n+1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    print(sum_of_even_binomial_coefficients(10))",
    "def binomial(n, k):\n    \"\"\"\n    Returns the binomial coefficient for n and k.\n\n    >>> binomial(5, 2)\n    120\n    >>> binomial(10, 3)\n    125\n    >>> binomial(2, 10)\n    10\n    >>> binomial(10, 10)\n    10\n    >>> binomial(10, 0)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    elif k == 0:\n        return 1\n    elif n < 0 or k < 0:\n        return 0\n    else:\n        return binomial(n, k) * binomial(n - k, k)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "def binomial(n, k):\n    \"\"\"\n    Write a python function to calculate n choose k.\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k == n:\n        return 1\n    else:\n        return n * binomial(n-1, k-1)\n\ndef binomial_sum(n):\n    \"\"\"\n    Write a python function to calculate sum of binomial coefficients.\n    \"\"\"\n    total = 0\n    for i in range(1, n+1):\n        total += binomial(n, i)\n    return total\n\ndef main():\n    print(binomial(5, 2))\n    print(binomial_sum(5))\n\nif __name__ == \"__main__\":\n    main()",
    "import math\n\ndef sum_even_binomial_coefficients(n):\n    \"\"\"\n    Return the sum of even index binomial coefficients.\n    \"\"\"\n    return sum(1 for x in range(2, n+1) if x % 2 == 0 and n % x == 0)\n\nprint sum_even_binomial_coefficients(100)\n\n# print sum_even_binomial_coefficients(30)\n# print sum_even_binomial_coefficients(20)\n# print sum_even_binomial_coefficients(16)\n# print sum_even_binomial_coefficients(14)\n# print sum_even_binomial_coefficients(12)\n# print sum_even_binomial_coefficients(10)\n# print sum_even_binomial_coefficients(8)\n# print sum_even_binomial_coefficients(6)\n# print sum_even_binomial_coefficients(4)\n# print sum_even_binomial_coefficients(2)\n# print sum_even_binomial_coefficients(1)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_coefficients(0)\n# print sum_even_binomial_",
    "import numpy as np\n\ndef even_binomial_coeff(n):\n    \"\"\"\n    Find the sum of even index binomial coefficients.\n    \"\"\"\n    return np.sum(np.arange(2, n+1) * np.binom(n, i)\n                  for i in range(1, n+1) if i % 2 == 0)\n\nif __name__ == '__main__':\n    print(even_binomial_coeff(20))",
    "def binomial(n, k):\n    \"\"\"\n    Calculate binomial coefficient.\n    \"\"\"\n    if k == 0:\n        return 1\n    elif k == 1:\n        return n\n    elif k == n:\n        return 1\n    elif k > n:\n        return 0\n    else:\n        return binomial(n, k-1) * binomial(n-k, k)\n\n\ndef main():\n    \"\"\"\n    Write a python function to calculate sum of even index binomial coefficients.\n    \"\"\"\n    print(binomial(10, 3))\n    print(binomial(10, 5))\n    print(binomial(10, 7))\n    print(binomial(10, 9))\n    print(binomial(10, 11))\n    print(binomial(10, 13))\n    print(binomial(10, 15))\n    print(binomial(10, 17))\n    print(binomial(10, 19))\n    print(binomial(10, 21))\n    print(binomial(10, 23))\n    print(binomial(10, 25))\n    print(binomial(10, 27))\n    print(binomial(10, 29))\n    print(binomial(10, 31))\n    print(binomial(10, 33))\n    print(binomial(10, 35))\n    print(binomial(10, 37))\n    print(binomial(10, 39))\n    print(binomial(10, 41))\n    print(binomial(10, 43))\n    print(binomial(10, 45))\n    print(binomial(10, 47))\n    print(binomial(10, 49))\n    print(binomial(10, 51))\n    print(binomial(10, 53))\n    print(binomial(10, 55))\n    print(binomial(10, 57))\n    print(binomial(10, 59))\n    print(binomial(10, 61))\n    print(binomial(10, 63))\n    print(binomial(10, 65))\n    print(binomial(10, 67))\n    print(binomial(10, 69))\n    print(binomial(10, 71))\n    print",
    "#!/usr/bin/python\n\ndef binomial_sum(n):\n    sum = 0\n    for i in range(2, n+1):\n        sum += i * (n-i) / i\n    return sum\n\nn = int(raw_input('Enter number of elements'))\n\nprint binomial_sum(n)",
    "import numpy as np\nimport time\n\ndef sum_even_binomial(n,k):\n    \"\"\"\n    sum_even_binomial(n,k)\n    :param n:\n    :param k:\n    :return:\n    \"\"\"\n    return sum(binomial(n,k))\n\ndef binomial(n,k):\n    \"\"\"\n    binomial(n,k)\n    :param n:\n    :param k:\n    :return:\n    \"\"\"\n    if k < 0:\n        return 0\n    if k > n:\n        return 1\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k == n:\n        return n\n    return binomial(n-1,k-1) + binomial(n-1,k)\n\ndef time_binomial(n,k):\n    \"\"\"\n    time_binomial(n,k)\n    :param n:\n    :param k:\n    :return:\n    \"\"\"\n    return time.time() - time_binomial.start\n\ntime_binomial.start = time.time()\nprint sum_even_binomial(5,3)\nprint time_binomial.start",
    "def find_sum_binomial(n):\n    \"\"\"\n    Find sum of even index binomial coefficients\n\n    :param n: input integer\n    :return: sum of even index binomial coefficients\n    \"\"\"\n    sum_binomial = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum_binomial += i * find_sum_binomial(n - i)\n    return sum_binomial\n\n\nprint(find_sum_binomial(5))",
    "def binomial_coeff(n, k):\n    \"\"\"\n    Sum of even binomial coefficients.\n\n    >>> binomial_coeff(10, 6)\n    120\n    >>> binomial_coeff(10, 7)\n    1040\n    >>> binomial_coeff(10, 8)\n    40320\n    >>> binomial_coeff(10, 9)\n    362880\n    \"\"\"\n    if k < 0 or k > n:\n        return 0\n    elif k == 0:\n        return 1\n    elif k == 1:\n        return n\n    else:\n        return binomial_coeff(n - 1, k - 1) + binomial_coeff(n - 1, k)\n\nprint(binomial_coeff(10, 6))\nprint(binomial_coeff(10, 7))\nprint(binomial_coeff(10, 8))\nprint(binomial_coeff(10, 9))",
    "def even_binomial(n, k):\n    \"\"\"\n    n is even, k is odd\n    returns sum of even index binomial coefficents\n    \"\"\"\n    return sum([binomial(n, k) for k in range(0, n+1) if k % 2 == 0])\n\ndef binomial(n, k):\n    \"\"\"\n    n is even, k is odd\n    returns sum of binomial coefficents\n    \"\"\"\n    return sum([binomial(n-k, k) for k in range(0, n+1) if k % 2 == 0])\n\nprint(even_binomial(5, 1))\nprint(even_binomial(5, 2))\nprint(even_binomial(5, 3))\nprint(even_binomial(5, 4))\nprint(even_binomial(5, 5))\nprint(even_binomial(5, 6))",
    "from math import factorial\n\ndef binomial(n, k):\n    \"\"\"\n    Return the binomial coefficient n choose k\n    \"\"\"\n    return factorial(n) / (factorial(k) * factorial(n-k))\n\ndef sum_even_binomial(n):\n    \"\"\"\n    Return the sum of the even binomial coefficients.\n    \"\"\"\n    return sum(binomial(n, k) for k in range(0, n+1))\n\nif __name__ == '__main__':\n    n = int(input())\n    print(sum_even_binomial(n))",
    "import math\nimport sys\n\ndef binomial_sum(n, k):\n    return math.factorial(n) / math.factorial(n - k) / math.factorial(k)\n\n\ndef main():\n    if len(sys.argv)!= 3:\n        print \"Usage: {} n k\".format(sys.argv[0])\n        sys.exit(1)\n\n    n = int(sys.argv[1])\n    k = int(sys.argv[2])\n\n    print binomial_sum(n, k)\n\nif __name__ == \"__main__\":\n    main()",
    "def binomial(n, k):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += binomial(n, k-i)\n    return sum\n\ndef sumEven(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += binomial(n, i)\n    return sum\n\nprint(sumEven(10))",
    "def binomial_coeff_sum(n):\n    \"\"\"\n    Return sum of even index binomial coefficients.\n    \"\"\"\n    return sum(i*(n-i)/2 for i in range(1, n+1) if n % i == 0)\n\ndef test():\n    assert binomial_coeff_sum(5) == 7\n\nif __name__ == \"__main__\":\n    test()",
    "from math import factorial\n\n\ndef binomial_coefficient(n, k):\n    \"\"\"\n    :param n: positive integer\n    :param k: positive integer\n    :return: the sum of even index binomial coefficients\n    \"\"\"\n    return sum([factorial(k) * factorial(n - k) / factorial(n)])\n\n\ndef main():\n    \"\"\"\n    For example:\n    >>> binomial_coefficient(6, 3)\n    210\n    >>> binomial_coefficient(0, 2)\n    0\n    >>> binomial_coefficient(7, 4)\n    12\n    \"\"\"\n    print(binomial_coefficient(6, 3))\n    print(binomial_coefficient(0, 2))\n    print(binomial_coefficient(7, 4))\n\n\nif __name__ == '__main__':\n    main()",
    "def find_binomial_coefficient(n, k):\n    \"\"\"\n    :type n: int\n    :type k: int\n    :rtype: int\n    \"\"\"\n    return 0\n\ndef main():\n    n = int(input())\n    k = int(input())\n    print(find_binomial_coefficient(n, k))\n\nif __name__ == '__main__':\n    main()",
    "def binomial_coeff(n, k):\n    \"\"\"\n    n is a positive integer, k is a non-negative integer.\n    Return the sum of all binomial coefficients.\n    \"\"\"\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    if k > n:\n        return 0\n    return sum(binomial_coeff(n - 1, i) * binomial_coeff(n - 1, k - i)\n               for i in range(k + 1))\n\n\nif __name__ == '__main__':\n    n = int(input())\n    k = int(input())\n    print(binomial_coeff(n, k))",
    "def sum_even_binomial_coefficients(n):\n    \"\"\"\n    n: number of elements in the binomial array\n    return: sum of even index binomial coefficients\n    \"\"\"\n    sum = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum += binomial(n, i)\n    return sum\n\n\ndef binomial(n, k):\n    \"\"\"\n    n: number of elements in the binomial array\n    k: index of the binomial coefficient\n    return: the binomial coefficient\n    \"\"\"\n    if k == 0:\n        return 1\n    if k == 1:\n        return n\n    return binomial(n-1, k-1) + binomial(n-1, k)\n\n\nn = 10\nprint(sum_even_binomial_coefficients(n))",
    "import math\n\ndef even_binomial_coefficients(n):\n    return math.factorial(n) / math.factorial(n-1)\n\ndef main():\n    print(even_binomial_coefficients(10))\n\nif __name__ == \"__main__\":\n    main()",
    "def binom_sum(n, k):\n    return sum(binom(n, i) * binom(k, i) for i in range(k + 1))\n\n\nif __name__ == '__main__':\n    print binom_sum(3, 1)\n    print binom_sum(3, 2)\n    print binom_sum(3, 3)",
    "def sum_of_even_binomial_coeff(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    s = 0\n    for i in range(1, n+1):\n        s += i*(i-1)/2\n    return s\n\nclass Solution:\n    \"\"\"\n    @param: n: An integer\n    @return: An integer\n    \"\"\"\n    def sum_of_even_binomial_coeff(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        return sum(self.binomial_coeff(n, i) for i in range(1, n+1) if i%2==0)\n    \n    def binomial_coeff(self, n, i):\n        \"\"\"\n        :type n: int\n        :type i: int\n        :rtype: int\n        \"\"\"\n        if i > n:\n            return 0\n        return self.binomial_coeff(n-1, i) + self.binomial_coeff(n-1, n-i)\n\ns = Solution()\nn = 4\nprint s.sum_of_even_binomial_coeff(n)",
    "def even_binomial(n):\n    \"\"\"\n    sum of even index binomial coefficients\n    \"\"\"\n    return sum(x for x in range(n + 1) if x % 2 == 0)\n\nprint(even_binomial(10))\n\n\"\"\"\nOutput\n\nsum of even index binomial coefficients\n4\n\"\"\""
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}