{
  "problem": {
    "task_id": "MBPP/329",
    "prompt": "Write a python function to count negative numbers in a list.",
    "canonical_solution": "def neg_count(list):\r\n  neg_count= 0\r\n  for num in list: \r\n    if num <= 0: \r\n      neg_count += 1\r\n  return neg_count ",
    "test_list": [
      "assert neg_count([-1,-2,3,-4,-5]) == 4",
      "assert neg_count([1,2,3]) == 0",
      "assert neg_count([1,2,-3,-10,20]) == 2"
    ],
    "challenge_test_list": [],
    "problem_id": 318
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def countNegatives(numbers):\n    \"\"\"\n    Write a function that takes a list of numbers and returns the number of\n    negative numbers in the list.\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    numbers = [-1, -2, -3, 4, 5, 6, 7, 8, 9, 10]\n    print(countNegatives(numbers))",
    "def countNegatives(numbers):\n    count = 0\n    for num in numbers:\n        if num < 0:\n            count += 1\n    return count\n\ndef main():\n    numbers = [-1, -2, -3, 4, 5, 6, 7, 8, 9]\n    print(countNegatives(numbers))\n\nif __name__ == '__main__':\n    main()",
    "def countNegatives(numbers):\n    \"\"\"\n    >>> countNegatives([1,2,3])\n    3\n    >>> countNegatives([-1,-2,-3])\n    1\n    >>> countNegatives([1,2,-3])\n    2\n    >>> countNegatives([1,-2,-3])\n    1\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def countNegatives(list):\n    return len([x for x in list if x < 0])\n\nif __name__ == \"__main__\":\n    assert countNegatives([-1, 2, 3]) == 1\n    assert countNegatives([-1, -2, -3]) == 2\n    assert countNegatives([-1, -2, 3]) == 1\n    assert countNegatives([-1, -2, -3, 4]) == 3",
    "def countNegatives(list):\n    count = 0\n    for num in list:\n        if num < 0:\n            count += 1\n    return count\n\ndef main():\n    list = [-1, 2, -2, -5]\n    print countNegatives(list)\n\nif __name__ == \"__main__\":\n    main()",
    "# Count the number of negative numbers in a list.\n# Assume the list is sorted from smallest to largest.\ndef countNegatives(list):\n    count = 0\n    for i in range(len(list)):\n        if list[i] < 0:\n            count += 1\n    return count\n\n# Test your function by running the following command:\n# python negativeNumbersInList.py test\n# and then compare the result to the expected output.\n# For example, given the list [-2, -3, 4, -1, -2, 1],\n# the function should return 4, because there are 4 negative numbers.",
    "# Function definition\ndef count_negative_numbers(numbers):\n  \"\"\"\n  count_negative_numbers(numbers)\n  \n  Arguments:\n  numbers - list of numbers\n  \n  Returns:\n  count of negative numbers\n  \"\"\"\n  negative_numbers = 0\n  for number in numbers:\n    if number < 0:\n      negative_numbers += 1\n  return negative_numbers\n\n# Sample run\nprint count_negative_numbers([-1, 2, -4, 5, -6, -1, 3, 4, -2, 1, -6, 1, -3, 2, 1, 1, -3])",
    "#!/usr/bin/python\n\ndef countNegatives(list):\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n    return count\n\n# Test Cases\nprint \"Test 1:\"\ntest1 = [2, -1, -3, 4, -5, -6, -7]\ntest1_result = countNegatives(test1)\nprint \"The result of countNegatives on test1 is: \" + str(test1_result)\n\nprint \"Test 2:\"\ntest2 = [1, 2, 3, -4, -5, -6, -7]\ntest2_result = countNegatives(test2)\nprint \"The result of countNegatives on test2 is: \" + str(test2_result)\n\nprint \"Test 3:\"\ntest3 = [1, 2, 3, 4, 5, 6, 7]\ntest3_result = countNegatives(test3)\nprint \"The result of countNegatives on test3 is: \" + str(test3_result)\n\nprint \"Test 4:\"\ntest4 = [1, 2, 3, 4, 5, 6, 7, 8, 9]\ntest4_result = countNegatives(test4)\nprint \"The result of countNegatives on test4 is: \" + str(test4_result)\n\nprint \"Test 5:\"\ntest5 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, -1, -2, -3, -4, -5, -6, -7, -8, -9]\ntest5_result = countNegatives(test5)\nprint \"The result of countNegatives on test5 is: \" + str(test5_result)\n\nprint \"Test 6:\"\ntest6 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\ntest6_result = countNegatives(test6)\nprint \"The result of countNegatives on test6 is: \" + str(test6_result)",
    "# Create a list of all numbers in the range from 1 to 100.\nnumbers = [i for i in range(1, 101)]\n\n# Create a copy of the list, removing any number that is negative.\nfiltered = [x for x in numbers if x >= 0]\n\n# Count the number of negative numbers in the list.\nprint(\"There are {} negative numbers in the list\".format(\n    len([x for x in numbers if x < 0])))",
    "def countNegatives(list):\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n    return count\n\ndef countNegatives2(list):\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n            continue\n    return count\n\ndef countNegatives3(list):\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n            continue\n        else:\n            break\n    return count\n\nprint countNegatives([-2, 1, -2, 3, -1, -2, -3, 1, -3, -2])\nprint countNegatives2([-2, 1, -2, 3, -1, -2, -3, 1, -3, -2])\nprint countNegatives3([-2, 1, -2, 3, -1, -2, -3, 1, -3, -2])",
    "# -*- coding: utf-8 -*-\n\ndef count_negative_numbers(numbers):\n    \"\"\"\n    :param numbers: a list of numbers\n    :return: the number of negative numbers in the list\n    \"\"\"\n    return sum(1 for number in numbers if number < 0)\n\n\nif __name__ == \"__main__\":\n    numbers = [2, -3, 4, -1, -2, 2]\n    print(count_negative_numbers(numbers))",
    "def countNegatives(list):\n    \"\"\"\n    list: a list of numbers\n    returns: the number of negative numbers in the list\n    \"\"\"\n\n    # this is the only thing that's different from the other functions.\n    # we have to count the number of negatives in the list, not the sum.\n    # this is because negative numbers are counted twice, once in the\n    # function, and then again here.\n    # we need to count the number of negatives in the list, not the sum.\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n\n    return count\n\n\nprint countNegatives([1, -3, 4, -5, 2, -6])\nprint countNegatives([2, -3, 4, -5, 2, -6])\nprint countNegatives([1, 2, 3])\nprint countNegatives([1, 2, 3, -4])",
    "def countNegatives(list):\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n    return count\n\n# Test cases\ntest_cases = [\n    [[1, 2, 3, 4], 1],\n    [[-1, 2, -3, 4], 1],\n    [[-5, -2, -3, 4], 1],\n    [[-5, -2, 3, 4], 0],\n    [[-5, -2, 3, -4], 0],\n    [[-5, -2, 3, 4], 0],\n    [[-5, -2, 3, 4], 0],\n]\n\nfor test in test_cases:\n    result = countNegatives(test[0])\n    if result!= test[1]:\n        print(\"Error: %s\" % test[0])\n    else:\n        print(\"Correct: %s\" % test[0])",
    "import sys\n\ndef count_negative_numbers(list_of_numbers):\n    \"\"\"\n    Write a function to count the number of negative numbers in the given list.\n    \"\"\"\n    count = 0\n    for i in range(0, len(list_of_numbers)):\n        if list_of_numbers[i] < 0:\n            count += 1\n    return count\n\ndef main():\n    \"\"\"\n    Write a main function to test the function count_negative_numbers.\n    \"\"\"\n    list_of_numbers = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5, -6]\n    print count_negative_numbers(list_of_numbers)\n\nif __name__ == \"__main__\":\n    main()",
    "def countNegatives(l):\n    result = 0\n    for x in l:\n        if x < 0:\n            result += 1\n    return result\n\nl = [-1, -2, -3, 4, 5, 6]\nprint countNegatives(l)",
    "def count_negative_numbers(my_list):\n    # +++your code here+++\n    count = 0\n    for i in my_list:\n        if i < 0:\n            count += 1\n    return count",
    "def countNegatives(list):\n    count = 0\n    for i in list:\n        if i < 0:\n            count += 1\n    return count\n\ndef main():\n    #print(countNegatives([-1, -2, 3, 4, -5, 6, -7, 8]))\n    print(countNegatives([-1, -2, 3, 4, -5, 6, -7, 8, -9, 10]))\n    \nif __name__ == '__main__':\n    main()",
    "def count_negative_numbers(list_of_numbers):\n    \"\"\"\n    Write a function that counts the numbers in a list that are negative.\n    :param list_of_numbers: a list of numbers\n    :return: a list of the numbers that are negative\n    \"\"\"\n    negative_numbers = [num for num in list_of_numbers if num < 0]\n    return negative_numbers\n\n\ndef count_negative_numbers2(list_of_numbers):\n    \"\"\"\n    Write a function that counts the numbers in a list that are negative.\n    :param list_of_numbers: a list of numbers\n    :return: a list of the numbers that are negative\n    \"\"\"\n    negative_numbers = [num for num in list_of_numbers if num < 0]\n    return len(negative_numbers)\n\n\nif __name__ == \"__main__\":\n    list_of_numbers = [-1, -2, -3, -4, -5, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(count_negative_numbers(list_of_numbers))\n    print(count_negative_numbers2(list_of_numbers))",
    "def count_negatives(numbers):\n    \"\"\"\n    count_negatives(numbers) -> int\n\n    counts the number of negative numbers in a list.\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nnumbers = [1, -2, -3, 4, 5, 6]\n\nprint count_negatives(numbers)",
    "def countNegatives(list):\n    \"\"\"\n    >>> countNegatives([-1, -2, 3])\n    1\n    >>> countNegatives([-1, -2, 3, 4])\n    2\n    >>> countNegatives([-1, -2, 3, 4, 5])\n    3\n    >>> countNegatives([-1, -2, 3, 4, 5, 6])\n    4\n    \"\"\"\n    total = 0\n    for i in list:\n        if i < 0:\n            total += 1\n    return total\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def countNegatives(numbers):\n    count = 0\n    for i in numbers:\n        if i < 0:\n            count += 1\n    return count\n\ndef main():\n    numbers = [1, 2, -3, 4, -5]\n    print countNegatives(numbers)\n\nif __name__ == '__main__':\n    main()",
    "def count_negative_numbers(l):\n    count = 0\n    for num in l:\n        if num < 0:\n            count += 1\n    return count\n\n#print count_negative_numbers([-1, -2, -3])\n\n\"\"\"\nWrite a python function to count even numbers in a list.\n\"\"\"\n\ndef count_even_numbers(l):\n    count = 0\n    for num in l:\n        if num % 2 == 0:\n            count += 1\n    return count\n\n#print count_even_numbers([1, 2, 3, 4, 5, 6])\n\n\"\"\"\nWrite a python function to count odds in a list.\n\"\"\"\n\ndef count_odd_numbers(l):\n    count = 0\n    for num in l:\n        if num % 2 == 1:\n            count += 1\n    return count\n\n#print count_odd_numbers([1, 2, 3, 4, 5, 6])\n\n\"\"\"\nWrite a python function to find the largest number in a list.\n\"\"\"\n\ndef find_largest_number(l):\n    max_number = -1\n    for num in l:\n        if num > max_number:\n            max_number = num\n    return max_number\n\n#print find_largest_number([1, 2, 3, 4, 5, 6])\n\n\"\"\"\nWrite a python function to find the smallest number in a list.\n\"\"\"\n\ndef find_smallest_number(l):\n    min_number = 999999999\n    for num in l:\n        if num < min_number:\n            min_number = num\n    return min_number\n\n#print find_smallest_number([1, 2, 3, 4, 5, 6])\n\n\"\"\"\nWrite a python function to find the average of a list.\n\"\"\"\n\ndef find_average(l):\n    sum = 0\n    for num in l:\n        sum += num\n    return sum / len(l)\n\n#print find_average([1, 2, 3, 4, 5, 6])\n\n\"\"\"\nWrite a python function to find the median of a list.\n\"\"\"\n\ndef find_median(l):\n    sorted_list",
    "def countNegatives(numbers):\n    count = 0\n    for i in numbers:\n        if i < 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print countNegatives([-2, -1, 0, 1, 2])",
    "def countNegativeNumbers(list):\n    \"\"\"\n    Arguments:\n    list -- a list of numbers\n\n    Return:\n    a list of integers, containing the number of negative numbers in the list\n    \"\"\"\n    negative_numbers = 0\n    for number in list:\n        if number < 0:\n            negative_numbers += 1\n    return negative_numbers\n\ndef test():\n    \"\"\"\n    Test the function with some numbers.\n    \"\"\"\n    assert countNegativeNumbers([-1, 2, 3]) == 2\n    assert countNegativeNumbers([-1, -2, 3, 4]) == 4\n    assert countNegativeNumbers([-1, 2, 3, -4, 5]) == 4\n    assert countNegativeNumbers([-1, 2, 3, -4, -5]) == 4\n\nif __name__ == \"__main__\":\n    test()",
    "def count_negative_numbers(numbers):\n    return sum(n < 0 for n in numbers)\n\nif __name__ == \"__main__\":\n    assert count_negative_numbers([1, -1, -1, 3, -2, -1]) == 5",
    "def countNegatives(lst):\n    return sum(1 for x in lst if x < 0)\n\nprint(countNegatives([-3, -2, -1, 0, 1, 2, 3]))",
    "def countNegatives(lst):\n    return sum(i < 0 for i in lst)\n\nif __name__ == \"__main__\":\n    # These \"asserts\" using only for self-checking and not necessary for auto-testing\n    assert countNegatives([1, 2, 3, 4, -1, -2, -3]) == 6, \"1\"\n    assert countNegatives([-1, -2, -3]) == 3, \"2\"\n    assert countNegatives([]) == 0, \"3\"\n    assert countNegatives([-2, -1, 0, 1, 2]) == 1, \"4\"",
    "def countNegatives(list):\n    \"\"\"\n    countNegatives(list) -> int\n    \n    Returns the number of negative numbers in the list.\n    \"\"\"\n    \n    return sum(1 for num in list if num < 0)\n\nif __name__ == '__main__':\n    \n    list = [-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12]\n    \n    print countNegatives(list)",
    "def countNegatives(list):\n    negativeCount = 0\n    for i in list:\n        if i < 0:\n            negativeCount += 1\n    return negativeCount\n\ndef main():\n    testList = [1, 2, -3, -4, 5, -6, 7]\n    print countNegatives(testList)\n\nif __name__ == \"__main__\":\n    main()",
    "def count_negative_numbers(my_list):\n    \"\"\"\n    >>> my_list = [1, -2, 3, 4]\n    >>> count_negative_numbers(my_list)\n    2\n    \"\"\"\n    return sum(i < 0 for i in my_list)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "# Definition for singly-linked list.\n# class ListNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution(object):\n    def countNegatives(self, head):\n        \"\"\"\n        :type head: ListNode\n        :rtype: int\n        \"\"\"\n        count = 0\n        while head is not None:\n            if head.val < 0:\n                count += 1\n            head = head.next\n        return count",
    "# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\n\nclass Solution:\n    # @param {TreeNode} root\n    # @return {integer}\n    def countNegatives(self, root):\n        if not root: return 0\n        count = 0\n        self.countNegativesHelper(root, count)\n        return count\n    def countNegativesHelper(self, root, count):\n        if not root:\n            return\n        count += root.val < 0\n        self.countNegativesHelper(root.left, count)\n        self.countNegativesHelper(root.right, count)\n\nif __name__ == \"__main__\":\n    root = TreeNode(4, TreeNode(1, TreeNode(-1, TreeNode(-2, TreeNode(-3))), TreeNode(-2)), TreeNode(-5))\n    print Solution().countNegatives(root)",
    "def countNegatives(list_of_numbers):\n    \"\"\"\n    :param list_of_numbers: a list of numbers\n    :return: a tuple of two integers, the first is the number of negative numbers in the list, the second is the number of positive numbers in the list.\n    \"\"\"\n    negative_count = 0\n    positive_count = 0\n    for number in list_of_numbers:\n        if number < 0:\n            negative_count += 1\n        elif number > 0:\n            positive_count += 1\n    return negative_count, positive_count\n\nif __name__ == '__main__':\n    number_list = [1, 2, 3, -4, 5, -6, 7]\n    negative_count, positive_count = countNegatives(number_list)\n    print(negative_count, positive_count)",
    "def count_negative_numbers(numbers):\n    \"\"\"\n    :param numbers: A list of positive integers\n    :return: The total number of negative numbers\n    \"\"\"\n    negative_number_count = 0\n    for number in numbers:\n        if number < 0:\n            negative_number_count += 1\n    return negative_number_count\n\ndef main():\n    \"\"\"\n    :return: The total number of negative numbers\n    \"\"\"\n    numbers = [1, -3, -5, -10, -4, -3, -5, -10, -4, -3]\n    print(count_negative_numbers(numbers))\n\nif __name__ == '__main__':\n    main()",
    "def countNegatives(numbers):\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nnumbers = [-1, -2, -3, 4, 5]\nprint(countNegatives(numbers))",
    "def count_negative_numbers(numbers):\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nnumbers = [1, 2, -3, -4, -5, 6, -8, -9]\nprint(count_negative_numbers(numbers))",
    "import unittest\n\ndef countNegatives(list):\n    \"\"\"\n    >>> countNegatives([1, -2, 3, 4, -5])\n    3\n    \"\"\"\n    count = 0\n    for num in list:\n        if num < 0:\n            count += 1\n    return count\n\nclass TestCountNegatives(unittest.TestCase):\n    def test_countNegatives(self):\n        self.assertEqual(countNegatives([1, -2, 3, 4, -5]), 3)\n\nif __name__ == '__main__':\n    unittest.main()",
    "def count_negative_numbers(numbers):\n    \"\"\"\n    Count the numbers that are negative.\n    \"\"\"\n    \n    negative_count = 0\n    for number in numbers:\n        if number < 0:\n            negative_count += 1\n    return negative_count\n\nif __name__ == '__main__':\n    numbers = [1, -1, -2, -3, 4, 5]\n    print(count_negative_numbers(numbers))",
    "def count_negative_numbers(l):\n    \"\"\"\n    >>> count_negative_numbers([1,2,-1,3])\n    1\n    >>> count_negative_numbers([-1,2,-1,3])\n    3\n    >>> count_negative_numbers([-1,-1,-1,-1])\n    0\n    >>> count_negative_numbers([-1,2,3,4])\n    2\n    \"\"\"\n    count = 0\n    for i in l:\n        if i < 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "# import the necessary packages\nimport collections\n\n# define the function\ndef count_negative_numbers(numbers):\n    \"\"\"\n    Take a list and return a dict of the numbers and how many are negative.\n    \"\"\"\n    # create a dict to hold the negative numbers\n    negative_numbers = collections.defaultdict(int)\n\n    # iterate through the list and add the negative numbers to the dict\n    for number in numbers:\n        if number < 0:\n            negative_numbers[number] += 1\n\n    # return the dict of the negative numbers\n    return negative_numbers\n\n# call the function with some numbers\nprint(count_negative_numbers([-1, -2, 3, -4, -5, 6, -7]))",
    "#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\ndef is_negative(x):\n    if x < 0:\n        return True\n    else:\n        return False\n\n# YOUR CODE STARTS HERE\n\ndef count_negative(lst):\n    count = 0\n    for i in lst:\n        if is_negative(i):\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, -1, -4, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [-1, -2, -3, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [1, 2, 3, -1, -4, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [-1, -2, -3, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [1, 2, 3, -1, -4, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [-1, -2, -3, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [1, 2, 3, -1, -4, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [-1, -2, -3, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [1, 2, 3, -1, -4, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [-1, -2, -3, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [1, 2, 3, -1, -4, 0]\n    print count_negative(lst)\n    print \"---------------------\"\n    lst = [-1, -2, -3, 0]\n    print count_negative(lst",
    "def count_negatives(numbers):\n    \"\"\"\n    >>> count_negatives([1,2,3,4,5,6,7,8,9,-1,-2,1,2,3,4,5,6,7,8,9])\n    5\n    \"\"\"\n    return sum(1 for number in numbers if number < 0)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def countNegativeNumbers(lst):\n    return sum(1 for n in lst if n < 0)\n\nprint(countNegativeNumbers([1, 2, -3, -1, -5, 3, -2, 4]))",
    "def countNegatives(l):\n    return sum(1 for n in l if n < 0)\n\nprint(countNegatives([-3, -1, 0, 3, 4]))",
    "import math\n\n\ndef is_negative(num):\n    return num < 0\n\n\ndef count_negative_numbers(numbers):\n    return sum(is_negative(num) for num in numbers)\n\n\ndef main():\n    numbers = [1, -1, 2, -2, -3, 4, -4, -5, 6]\n    print(count_negative_numbers(numbers))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def count_negative_numbers(nums):\n    \"\"\"\n    Given a list of numbers, return the number of negative numbers in the list.\n\n    >>> count_negative_numbers([1,2,3,4])\n    1\n    >>> count_negative_numbers([-2,-1,0,1,2])\n    2\n    >>> count_negative_numbers([-3,-2,-1,0,1,2])\n    3\n    \"\"\"\n    count = 0\n    for number in nums:\n        if number < 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "def countNegatives(list):\n    negative = 0\n    for item in list:\n        if item < 0:\n            negative += 1\n    return negative\n\ndef main():\n    # Test 1\n    test1 = [3, -5, 4, -6, -7]\n    print countNegatives(test1)\n\n    # Test 2\n    test2 = [-3, -2, -1, 0, 1, 2, 3]\n    print countNegatives(test2)\n\nif __name__ == '__main__':\n    main()",
    "def count_negative(my_list):\n    \"\"\"\n    >>> count_negative([1,2,3,4,5,-1,-2])\n    [1,1,1,1,0,0,0]\n    \"\"\"\n    return [0 for _ in range(len(my_list))] + [sum([-i for i in my_list])]\n\ndef main():\n    \"\"\"\n    >>> count_negative([1,2,3,4,5,-1,-2])\n    [1,1,1,1,0,0,0]\n    \"\"\"\n    my_list = [1,2,3,4,5,-1,-2]\n    print(count_negative(my_list))\n\nif __name__ == '__main__':\n    main()",
    "# create a list of strings\nlist = ['a', 'b', 'c']\n\n# the function should return the number of negative numbers in the list\ndef countNegatives(list):\n    # create a negative number counter variable\n    neg_counter = 0\n\n    # loop through the list and check for negative numbers\n    for i in list:\n        if i < 0:\n            # increment the negative counter\n            neg_counter += 1\n\n    return neg_counter\n\n\n# call the function\nprint(countNegatives(list))",
    "def countNegatives(l):\n    \"\"\"\n    >>> countNegatives([1, 2, 3, -4, 5])\n    2\n    >>> countNegatives([1, 2, 3, 4, 5])\n    0\n    \"\"\"\n    return sum(x < 0 for x in l)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "def count_negative(numbers):\n    \"\"\"\n    count_negative(numbers) -> int\n\n    Returns the number of negative numbers in the list numbers.\n    \"\"\"\n    return len([x for x in numbers if x < 0])\n\ndef test():\n    assert count_negative([3, -3, -4, -5]) == 2, \"Test failed!\"\n\nif __name__ == \"__main__\":\n    test()",
    "def countNegatives(lst):\n    \"\"\"\n    :type lst: List[int]\n    :rtype: int\n    \"\"\"\n    return sum([x < 0 for x in lst])\n\n# Your Solution\n# Your code here",
    "def countNegatives(numbers):\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nnumbers = [1, -1, -2, 3, -4, -5, 6, -7]\nprint(countNegatives(numbers))",
    "def count_negative(l):\n    \"\"\"\n    >>> count_negative([1,2,3,4,5])\n    3\n    >>> count_negative([1,2,3,4,5,6])\n    2\n    >>> count_negative([1,2,3,4,5,6,7,8,9,10])\n    1\n    \"\"\"\n    count = 0\n    for i in l:\n        if i < 0:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def count_negative_numbers(nums):\n    \"\"\"\n    >>> count_negative_numbers([-1, -3, -5])\n    2\n    >>> count_negative_numbers([-1, -3, -5, -4, -2])\n    3\n    >>> count_negative_numbers([-1, -3, -5, -4, -2, 0])\n    1\n    >>> count_negative_numbers([-1, -3, -5, -4, -2, 0, 1])\n    1\n    \"\"\"\n    return sum(num < 0 for num in nums)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def countNegatives(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    result = 0\n    for number in numbers:\n        if number < 0:\n            result += 1\n    return result\n\nif __name__ == '__main__':\n    numbers = [-1, 0, 1, -2, 3, -4]\n    print(countNegatives(numbers))",
    "def countNegatives(numbers):\n    \"\"\"\n    countNegatives(numbers)\n    \n    counts the number of negative numbers in numbers\n    \n    numbers = [1,2,3,4,5,6,7,8,9,-1,-2,-3,-4]\n    \n    >>> countNegatives([1,2,3,4,5,6,7,8,9, -1, -2, -3, -4])\n    6\n    \"\"\"\n    return sum(1 for x in numbers if x < 0)",
    "def countNegatives(numbers):\n    count = 0\n    for i in numbers:\n        if i < 0:\n            count += 1\n    return count\n\nprint countNegatives([-2, -1, 0, 1, 2])",
    "def countNegatives(lst):\n    count = 0\n    for i in lst:\n        if i < 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    assert countNegatives([1, -1, -2, 3]) == 1, 'Negative numbers should be counted'\n    assert countNegatives([-1, 1, -2, 3]) == 2, 'Negative numbers should be counted'\n    assert countNegatives([-1, -2, 3]) == 3, 'Negative numbers should be counted'\n    assert countNegatives([-1, -2, 3, 0]) == 4, 'Negative numbers should be counted'\n    assert countNegatives([]) == 0, 'Empty list should not be counted'\n    assert countNegatives([-1]) == 1, 'Negative numbers should be counted'",
    "def countNegative(numbers):\n    \"\"\"\n    :param numbers: list of ints\n    :return: int\n    \"\"\"\n\n    # list of negative numbers\n    negativeNumbers = []\n\n    for number in numbers:\n        if number < 0:\n            negativeNumbers.append(number)\n\n    return len(negativeNumbers)\n\nprint countNegative([-3, -2, -1, 0, 1, 2, 3, 4, 5])",
    "def count_negative(list):\n    return sum([1 for i in list if i < 0])\n\ndef main():\n    list = [3, 2, -2, -1, 0, 1, 2, 3]\n    print(count_negative(list))\n\nif __name__ == '__main__':\n    main()",
    "def countNegatives(list):\n    \"\"\"\n    Write a function that counts the number of negative numbers in a list.\n    \"\"\"\n    result = 0\n    for number in list:\n        if number < 0:\n            result += 1\n    return result\n\ndef main():\n    \"\"\"\n    Call countNegatives function to find the number of negative numbers in a list.\n    \"\"\"\n    list = [1, -2, 3, -4, 5, -6, 7, -8, 9]\n    print countNegatives(list)\n\nif __name__ == '__main__':\n    main()",
    "def count_negative_numbers(numbers):\n    \"\"\"\n    Return the number of negative numbers in the list.\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\n\nnumbers = [1, -2, -3, 4, 5]\n\nprint(count_negative_numbers(numbers))",
    "# Define a function to count the negative numbers in a list\ndef countNegatives(list):\n    # Initialize a counter for negative numbers\n    count = 0\n    # Iterate over the list\n    for element in list:\n        # If the element is negative, increment the counter\n        if element < 0:\n            count += 1\n    # Return the counter\n    return count\n\n# Test your function\nlist = [-1, 2, -3, 4, -5, 6, -7, 8]\nprint \"The number of negative numbers is:\", countNegatives(list)\n\n# Your code here",
    "def count_negative_numbers(numbers):\n    \"\"\"\n    Write a function that counts the numbers in a list that are negative.\n\n    Arguments:\n        numbers: a list of numbers\n\n    Returns:\n        A list of numbers.\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    numbers = [-2, -1, 0, 1, 2]\n    print count_negative_numbers(numbers)\n    #>>> [1, 0, -1, -2]",
    "def countNegatives(list):\n    \"\"\"\n    Returns the number of negative numbers in the list.\n    \"\"\"\n    count = 0\n    for x in list:\n        if x < 0:\n            count += 1\n    return count\n\n\nlist = [5, -5, 3, -3, -5, -5, 5, 5, -5, -5]\nprint(countNegatives(list))",
    "# Function for counting negative numbers in a list\ndef countNegatives(numbers):\n    # Initialize dictionary to store number of negative numbers\n    negative_numbers = {}\n\n    # Iterate over the list\n    for number in numbers:\n        # If the number is negative\n        if number < 0:\n            # Add number to dictionary\n            negative_numbers[number] = negative_numbers.get(number, 0) + 1\n\n    # Return dictionary\n    return negative_numbers\n\n\nif __name__ == \"__main__\":\n    # Test case 1\n    numbers = [1, -2, -3, 4, -5, -6, 7, 8, -9, -10, -11, -12]\n    print(countNegatives(numbers))\n\n    # Test case 2\n    numbers = [1, 2, 3, -4, 5, 6, 7, 8, 9, 10, 11, 12]\n    print(countNegatives(numbers))",
    "def count_negatives(numbers):\n    \"\"\"\n    Write a function to count negative numbers in a list.\n\n    :param numbers:\n    :return:\n    \"\"\"\n    return sum(1 for number in numbers if number < 0)",
    "def countNegativeNumbers(list):\n    \"\"\"\n    @param list: The input list.\n    @return: The count of negative numbers in the list.\n    \"\"\"\n    count = 0\n    for i in range(0, len(list)):\n        if list[i] < 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    print countNegativeNumbers([1,2,3,-4,5])",
    "def negative_numbers_in_list(numbers):\n    \"\"\"\n    Write a function that counts the number of negative numbers in a list.\n    \"\"\"\n    negative_numbers = 0\n    for number in numbers:\n        if number < 0:\n            negative_numbers += 1\n    return negative_numbers\n\n\n# Tests\n\n# Tests for negative_numbers_in_list()\n\nnumbers = [2, 3, -5, -4, 4, 2, -5, -4, 4]\nprint(negative_numbers_in_list(numbers))\n\n# Tests for negative_numbers_in_list()\n\nnumbers = [2, 3, -5, -4, 4, 2, -5, -4, 4, -3, -2, -1]\nprint(negative_numbers_in_list(numbers))",
    "def countNegatives(numbers):\n    \"\"\"\n    :param numbers: list of integers\n    :return: the number of negative numbers in the list\n    \"\"\"\n    return sum(i < 0 for i in numbers)\n\n\ndef main():\n    numbers = [1, -2, -3, 4, -5, 6]\n    print(countNegatives(numbers))\n\n\nif __name__ == '__main__':\n    main()",
    "def countNegatives(myList):\n    \"\"\"\n    :type myList: List[int]\n    :rtype: int\n    \"\"\"\n    return len(filter(lambda x: x < 0, myList))",
    "def countNegatives(numbers):\n    \"\"\"\n    >>> countNegatives([1,2,3,4,5])\n    4\n    >>> countNegatives([-1,2,3,4,5])\n    3\n    >>> countNegatives([-1,-1,-1,-1,-1])\n    0\n    >>> countNegatives([-1,-1,-1,-1,-1])\n    0\n    >>> countNegatives([1,2,3,4,5,6])\n    5\n    >>> countNegatives([-1,-2,-3,-4,-5,-6])\n    5\n    >>> countNegatives([-1,-2,-3,-4,-5,-6,7])\n    6\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def countNegatives(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    return sum(1 for x in numbers if x < 0)\n\n\nif __name__ == \"__main__\":\n    numbers = [1, -2, 0, 3, -4, 5]\n    print(countNegatives(numbers))",
    "def countNegatives(inputList):\n    count = 0\n    for element in inputList:\n        if element < 0:\n            count += 1\n    return count\n\n# Test case\nprint countNegatives([1, -2, 3, -4, -5])",
    "def countNegatives(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count",
    "def countNegatives(numbers):\n    \"\"\"\n    Write a function that counts the number of negative numbers in a list.\n    \"\"\"\n    return len([n for n in numbers if n < 0])\n\nif __name__ == '__main__':\n    print countNegatives([-3, -2, 1, 2, 3, 4, 5])",
    "def countNegatives(list):\n  return sum(1 for i in list if i < 0)\n\n# Test Cases\ntestCases = [\n  [-5, [1,2,3,4,5]],\n  [-1, [1,2,3,4,5]],\n  [0, [1,2,3,4,5]],\n  [1, [1,2,3,4,5]],\n  [2, [1,2,3,4,5]],\n  [3, [1,2,3,4,5]],\n  [4, [1,2,3,4,5]],\n  [5, [1,2,3,4,5]],\n  [-100, [1,2,3,4,5]],\n  [-100, [-100, -99, -98, -97, -96, -95, -94, -93, -92, -91, -90, -89, -88, -87, -86, -85, -84, -83, -82, -81, -80, -79, -78, -77, -76, -75, -74, -73, -72, -71, -70, -69, -68, -67, -66, -65, -64, -63, -62, -61, -60, -59, -58, -57, -56, -55, -54, -53, -52, -51, -50, -49, -48, -47, -46, -45, -44, -43, -42, -41, -40, -39, -38, -37, -36, -35, -34, -33, -32, -31, -30, -29, -28, -27, -26, -25, -24, -23, -22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]],\n  [",
    "def countNegatives(list):\n    \"\"\"\n    list is a list of numbers.\n    Returns the number of negative numbers in the list.\n    \"\"\"\n    count = 0\n    for x in list:\n        if x < 0:\n            count += 1\n    return count",
    "def countNegatives(numbers):\n    return sum(i < 0 for i in numbers)\n\nnumbers = [1, -2, 3, -4, 5, -6, 7, -8]\nprint(countNegatives(numbers))",
    "def countNegatives(numbers):\n    \"\"\"\n    >>> countNegatives([-1, -2, 3, -1, -2, -1, 2, -1])\n    5\n    \"\"\"\n    return sum(i < 0 for i in numbers)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def countNegatives(l):\n    \"\"\"\n    >>> countNegatives([1,2,3,4,5])\n    3\n    >>> countNegatives([-1,-2,-3,-4,-5])\n    5\n    >>> countNegatives([-1,-2,-3,-4,-5,-6])\n    6\n    \"\"\"\n    count = 0\n    for i in l:\n        if i < 0:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "def countNegativeNumbers(list):\n    \"\"\"\n    :type list: List[int]\n    :rtype: int\n    \"\"\"\n    total = 0\n    for num in list:\n        if num < 0:\n            total += 1\n    return total\n\n\nif __name__ == '__main__':\n    l = [-2, -1, 0, 1, 2]\n    print(countNegativeNumbers(l))",
    "def countNegatives(list):\n    return sum(1 for x in list if x < 0)\n\nif __name__ == '__main__':\n    print(countNegatives([-1, 0, 1, -2, 3]))",
    "import sys\n\ndef count_neg(list_of_numbers):\n    \"\"\"\n    :type list_of_numbers: list\n    :rtype: int\n    \"\"\"\n    count = 0\n    for number in list_of_numbers:\n        if number < 0:\n            count += 1\n    return count\n\ndef main():\n    \"\"\"\n    :rtype: None\n    \"\"\"\n    list_of_numbers = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205",
    "def countNegatives(aList):\n    \"\"\"\n    Counts the number of negative numbers in a list.\n    \"\"\"\n    count = 0\n    for i in aList:\n        if i < 0:\n            count += 1\n    return count\n\nprint countNegatives([1, 2, -3, 4, -5, 6])",
    "def count_negative_numbers(numbers):\n    # write your code here\n    negative_numbers = 0\n    for number in numbers:\n        if number < 0:\n            negative_numbers += 1\n    return negative_numbers",
    "def countNegatives(numbers):\n    count = 0\n    for number in numbers:\n        if number < 0:\n            count += 1\n    return count\n\nnumbers = [1, 2, 3, 4, -5, -6, 7]\n\nprint(countNegatives(numbers))",
    "def countNegatives(list):\n    return sum([x < 0 for x in list])\n\n# Test Cases\nlist = [1, 2, -3, 4, -5, 6]\nprint(\"Number of negative numbers in list is: {}\".format(countNegatives(list)))",
    "def countNegatives(inputList):\n    return sum([1 for i in inputList if i < 0])\n\nprint countNegatives([-1, 2, -3, 4, -5, 6, -7])",
    "import sys\nfrom functools import reduce\n\ndef count_negative_numbers(numbers):\n    \"\"\"\n    Write a function to count negative numbers in a list.\n    \"\"\"\n    return sum(numbers) - reduce(lambda x, y: x+y, numbers)\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, -1, -2, -3]\n    print(count_negative_numbers(numbers))",
    "def countNegatives(l):\n    return sum(i<0 for i in l)\n\n# Complete the countNegatives function below.\n\ndef countNegatives(l):\n    return sum(i<0 for i in l)\n\nif __name__ == '__main__':\n    l = [1, -1, -2, 3, -4, -5]\n    print(countNegatives(l))",
    "def countNegatives(nums):\n  neg = 0\n  for i in nums:\n    if i < 0:\n      neg += 1\n  return neg\n\nnums = [1, -3, -1, -3, 4]\n\nprint(countNegatives(nums))",
    "def countNegatives(list):\n    count = 0\n    for item in list:\n        if item < 0:\n            count += 1\n    return count\n\nprint(countNegatives([-1, -2, -3, 4, 5, 6]))",
    "def countNegativeNumbers(nums):\n    \"\"\"\n    >>> countNegativeNumbers([1, 2, 3, -4, -5, -6])\n    3\n    >>> countNegativeNumbers([1, 2, 3, 4, 5, 6])\n    0\n    >>> countNegativeNumbers([-1, -2, -3, -4, -5, -6])\n    6\n    >>> countNegativeNumbers([])\n    0\n    \"\"\"\n    return sum(num < 0 for num in nums)\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def count_negative(lst):\n    \"\"\"\n    >>> count_negative([1, 2, -3, -4])\n    2\n    \"\"\"\n    count = 0\n    for i in lst:\n        if i < 0:\n            count += 1\n    return count\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def count_negative_numbers(numbers):\n    \"\"\"\n    >>> count_negative_numbers([1, 2, 3])\n    0\n    >>> count_negative_numbers([1, -2, 3])\n    3\n    >>> count_negative_numbers([-1, 2, 3])\n    2\n    >>> count_negative_numbers([-1, -2, 3])\n    3\n    >>> count_negative_numbers([-1, -2, -3])\n    4\n    \"\"\"\n    result = 0\n    for i in numbers:\n        if i < 0:\n            result += 1\n    return result\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "def countNegatives(numbers):\n    \"\"\"\n    Return a dictionary containing the number of negative numbers in the\n    list.\n\n    numbers: a list of integers\n\n    returns: a dictionary containing the number of negative numbers in the\n    list.\n\n    >>> countNegatives([-1, -2, 3])\n    {-1: 1, -2: 1, 3: 1}\n    \"\"\"\n    numbers = set(numbers)\n    negative_numbers = set(numbers) - set([0])\n    return dict(zip(negative_numbers, [len(numbers - negative_numbers)]))\n\n\nprint(countNegatives([-1, -2, 3]))",
    "# Write your code here\n\ndef countNegativeNumbers(numbers):\n    total = 0\n    for n in numbers:\n        if n < 0:\n            total += 1\n    return total\n\n\nnumbers = [-3, -2, -1, 0, 1, 2, 3]\nprint(countNegativeNumbers(numbers))",
    "def countNegatives(myList):\n    \"\"\"\n    >>> countNegatives([1, 2, -3, -2, -3])\n    0\n    >>> countNegatives([-2, 1, -2, -3, -2, 1])\n    2\n    \"\"\"\n    return sum(x < 0 for x in myList)\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}