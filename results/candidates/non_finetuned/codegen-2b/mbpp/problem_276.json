{
  "problem": {
    "task_id": "MBPP/287",
    "prompt": "Write a python function to find the sum of squares of first n even natural numbers.",
    "canonical_solution": "def square_Sum(n):  \r\n    return int(2*n*(n+1)*(2*n+1)/3)",
    "test_list": [
      "assert square_Sum(2) == 20",
      "assert square_Sum(3) == 56",
      "assert square_Sum(4) == 120"
    ],
    "challenge_test_list": [],
    "problem_id": 276
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def even_sum(n):\n    sum = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum += i ** 2\n    return sum\n\nprint even_sum(10)",
    "import math\n\ndef sum_squares(n):\n    \"\"\"\n    Calculate sum of squares of n even natural numbers.\n    :param n: number of even natural numbers\n    :return: sum of squares of n even natural numbers\n    \"\"\"\n    return sum(math.pow(i, 2) for i in range(1, n + 1))\n\nprint sum_squares(10)",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nif __name__ == '__main__':\n    print(sum_of_squares(10))",
    "def sum_squares(n):\n    return sum(x ** 2 for x in range(1, n+1) if x % 2 == 0)\n\nprint(sum_squares(10))",
    "def sum_of_squares(n):\n    \"\"\"\n    >>> sum_of_squares(2)\n    4\n    >>> sum_of_squares(4)\n    16\n    >>> sum_of_squares(10)\n    385\n    >>> sum_of_squares(100)\n    90625\n    \"\"\"\n    # write your code here\n    sum = 0\n    for i in range(n):\n        sum += i ** 2\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\n\nprint(sum_of_squares(5))",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\ndef main():\n    n = int(input())\n    sum = sum_of_squares(n)\n    print(sum)\n\nif __name__ == '__main__':\n    main()",
    "import math\n\ndef sum_of_squares(n):\n    \"\"\"\n    sum of squares\n    \"\"\"\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum += i * i\n    return sum\n\nprint(sum_of_squares(10))\n\n\"\"\"\nOutput:\n\nsum of squares\n25\n\"\"\"",
    "def sum_of_squares(n):\n    \"\"\"\n    >>> sum_of_squares(5)\n    10\n    >>> sum_of_squares(3)\n    9\n    >>> sum_of_squares(0)\n    0\n    \"\"\"\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i*i\n    return sum\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def sum_squares(n):\n    sum_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_squares += i**2\n    return sum_squares\n\nprint(sum_squares(4))",
    "def find_sum_of_squares(n):\n    \"\"\"\n    sum of squares of first n even natural numbers\n    \"\"\"\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    print(find_sum_of_squares(20))",
    "# Function\ndef sum_of_squares(n):\n    return sum(i * i for i in range(1, n + 1) if i % 2 == 0)\n\n\n# Test Cases\n\n# Sum of Squares of 2\nassert sum_of_squares(2) == 0\nassert sum_of_squares(3) == 9\nassert sum_of_squares(4) == 16\nassert sum_of_squares(5) == 25\nassert sum_of_squares(6) == 36\n\n# Sum of Squares of 3\nassert sum_of_squares(3) == 9\nassert sum_of_squares(4) == 16\nassert sum_of_squares(5) == 25\nassert sum_of_squares(6) == 36\nassert sum_of_squares(7) == 49\n\n# Sum of Squares of 10\nassert sum_of_squares(10) == 385\nassert sum_of_squares(11) == 504\nassert sum_of_squares(12) == 665\nassert sum_of_squares(13) == 810\nassert sum_of_squares(14) == 1009\nassert sum_of_squares(15) == 1209\n\n# Sum of Squares of 100\nassert sum_of_squares(100) == 385\nassert sum_of_squares(101) == 504\nassert sum_of_squares(102) == 665\nassert sum_of_squares(103) == 810\nassert sum_of_squares(104) == 1009\nassert sum_of_squares(105) == 1209\n\n# Sum of Squares of 1000\nassert sum_of_squares(1000) == 385\nassert sum_of_squares(1001) == 504\nassert sum_of_squares(1002) == 665\nassert sum_of_squares(1003) == 810\nassert sum_of_squares(1004) == 1009\nassert sum_of_squares(1005) == 1209\n\n# Sum of Squares of 10000\nassert sum_of_squares(10000) == 385\nassert sum_of_squares(10001) == 504\nassert sum_of_",
    "import math\n\ndef sum_of_squares(n):\n    return sum(map(lambda x: x * x, range(1, n + 1)))\n\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(100))\n    print(sum_of_squares(1000))",
    "def sum_of_squares(n):\n    \"\"\"\n    sum of squares of first n even natural numbers\n    :param n: int\n    :return: int\n    \"\"\"\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += i * i\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print(sum_of_squares(5))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint sum_of_squares(10)",
    "def sum_of_squares(n):\n    total = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            total += i * i\n    return total\n\nprint(sum_of_squares(5))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print sum_of_squares(5)",
    "def sum_squares(n):\n    sum_squares = 0\n    for i in range(n):\n        sum_squares += i ** 2\n    return sum_squares\n\n#print sum_squares(10)\n#print sum_squares(100)\n#print sum_squares(1000)\n#print sum_squares(10000)\n#print sum_squares(100000)\n#print sum_squares(1000000)",
    "def sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            s += i**2\n    return s\n\nprint(sum_of_squares(20))",
    "# Note:\n# 1. For n = 0, the result is 0.\n# 2. For n = 1, the result is 1.\n# 3. For n = 2, the result is 4.\n# 4. For n = 3, the result is 9.\n# 5. For n = 4, the result is 16.\n# 6. For n = 5, the result is 25.\n# 7. For n = 6, the result is 36.\n# 8. For n = 7, the result is 49.\n# 9. For n = 8, the result is 64.\n# 10. For n = 9, the result is 81.\n# 11. For n = 10, the result is 100.\n# 12. For n = 11, the result is 121.\n# 13. For n = 12, the result is 144.\n# 14. For n = 13, the result is 169.\n# 15. For n = 14, the result is 196.\n# 16. For n = 15, the result is 225.\n# 17. For n = 16, the result is 276.\n# 18. For n = 17, the result is 321.\n# 19. For n = 18, the result is 362.\n# 20. For n = 19, the result is 399.\n# 21. For n = 20, the result is 462.\n# 22. For n = 21, the result is 515.\n# 23. For n = 22, the result is 582.\n# 24. For n = 23, the result is 645.\n# 25. For n = 24, the result is 712.\n# 26. For n = 25, the result is 786.\n# 27. For n = 26, the result is 868.\n# 28. For n = 27, the result is 958.\n# 29. For n = 28, the result is 1044.\n# 30. For n = 29, the result is 1130.\n# 31. For n = 30, the result is 1220.\n# 32. For n = 31, the result is 1320.\n# 33. For n = 32, the result is 1420.\n# 34. For n = 33, the result is 1520.\n# 35. For n = 34, the result is 1620.\n#",
    "from math import sqrt\n\ndef sum_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i ** 2\n    return sum\n\nprint sum_squares(10)",
    "from math import sqrt\n\ndef sum_of_squares(n):\n    return sum([i**2 for i in range(1, n+1) if i % 2 == 0])\n\n\ndef test():\n    assert sum_of_squares(1) == 1\n    assert sum_of_squares(2) == 4\n    assert sum_of_squares(3) == 9\n    assert sum_of_squares(4) == 16\n    assert sum_of_squares(5) == 25\n    assert sum_of_squares(6) == 36\n    assert sum_of_squares(7) == 49\n    assert sum_of_squares(8) == 64\n    assert sum_of_squares(9) == 81\n    assert sum_of_squares(10) == 100\n    assert sum_of_squares(11) == 121\n    assert sum_of_squares(12) == 144\n    assert sum_of_squares(13) == 169\n    assert sum_of_squares(14) == 196\n    assert sum_of_squares(15) == 225\n    assert sum_of_squares(16) == 256\n    assert sum_of_squares(17) == 289\n    assert sum_of_squares(18) == 324\n    assert sum_of_squares(19) == 361\n    assert sum_of_squares(20) == 462\n    assert sum_of_squares(21) == 609\n    assert sum_of_squares(22) == 765\n    assert sum_of_squares(23) == 927\n    assert sum_of_squares(24) == 1085\n    assert sum_of_squares(25) == 1272\n    assert sum_of_squares(26) == 1461\n    assert sum_of_squares(27) == 1750\n    assert sum_of_squares(28) == 2045\n    assert sum_of_squares(29) == 2344\n    assert sum_of_squares(30) == 2637\n    assert sum_of_squares(31) == 2931\n    assert sum_of_squares(32) == 3162",
    "def sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        s += i**2\n    return s\n\ndef main():\n    print sum_of_squares(10)\n\nif __name__ == '__main__':\n    main()",
    "import math\ndef sum_of_squares(n):\n    return sum(map(lambda x: x ** 2, range(1, n + 1)))\n\nprint(sum_of_squares(10))\n#>>> 30",
    "def sum_of_even_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum += i ** 2\n    return sum\n\nprint sum_of_even_squares(10)",
    "import time\nstart_time = time.time()\n\ndef sum_squares(n):\n    return sum(i ** 2 for i in range(1, n+1) if i % 2 == 0)\n\n\nprint(\"Time elapsed:\", time.time() - start_time)",
    "def sum_of_squares(n):\n    \"\"\"\n    sum_of_squares(n) -> int\n    sum_of_squares(n) returns the sum of the squares of the first n natural\n    numbers.\n\n    sum_of_squares(0) = 0\n    sum_of_squares(1) = 1\n    sum_of_squares(2) = 4\n    sum_of_squares(3) = 9\n    sum_of_squares(4) = 16\n    sum_of_squares(5) = 25\n    sum_of_squares(6) = 36\n    sum_of_squares(7) = 49\n    sum_of_squares(8) = 64\n    sum_of_squares(9) = 81\n    sum_of_squares(10) = 100\n    sum_of_squares(11) = 121\n    sum_of_squares(12) = 144\n    sum_of_squares(13) = 169\n    sum_of_squares(14) = 196\n    sum_of_squares(15) = 225\n    sum_of_squares(16) = 256\n    sum_of_squares(17) = 289\n    sum_of_squares(18) = 324\n    sum_of_squares(19) = 361\n    sum_of_squares(20) = 409\n    sum_of_squares(21) = 456\n    sum_of_squares(22) = 504\n    sum_of_squares(23) = 561\n    sum_of_squares(24) = 618\n    sum_of_squares(25) = 679\n    sum_of_squares(26) = 740\n    sum_of_squares(27) = 829\n    sum_of_squares(28) = 929\n    sum_of_squares(29) = 1058\n    sum_of_squares(30) = 1222\n    sum_of_squares(31) = 1396\n    sum_of_squares(32) = 1580\n    sum_of_squares(33) = 1893\n    sum_",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\n\nif __name__ == '__main__':\n    print(sum_of_squares(5))\n    print(sum_of_squares(15))\n    print(sum_of_squares(25))",
    "def sumOfSquares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += (i ** 2)\n    return sum\n\n\nif __name__ == \"__main__\":\n    print(sumOfSquares(10))",
    "def sum_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nprint sum_squares(10)",
    "# Problem Statement\n#\n# Write a python function to find the sum of squares of first n even natural numbers.\n#\n#\n# Hint:\n#\n# Use a for loop to sum up the squares of the first n even numbers.\n#\n#\n#\n# Example:\n#\n# Input:\n# n = 3\n#\n# Output:\n# 12\n#\n# Explanation:\n# The first three even natural numbers are 2, 4, and 6.\n# The sum of their squares is 2 + 4 + 6 = 12.\n#\n#\n#\n# Note:\n#\n# The range of n is [1, 100].\n#\n#\n#\n#\n# Follow up:\n#\n# What if the numbers in the set are stored in an array instead of a list?\n# How would you optimize your function?\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
    "import math\n\ndef sum_of_squares(n):\n    return sum(x * x for x in range(1, n + 1) if x % 2 == 0)\n\nif __name__ == '__main__':\n    print(sum_of_squares(7))",
    "import math\n\ndef sum_squares(n):\n    return sum(i**2 for i in range(n))\n\ndef test():\n    assert sum_squares(1) == 1\n    assert sum_squares(2) == 4\n    assert sum_squares(3) == 9\n    assert sum_squares(4) == 16\n    assert sum_squares(5) == 25\n\nif __name__ == \"__main__\":\n    test()",
    "def find_sum_of_squares(n):\n    s = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            s += i * i\n    return s\n\n# Find sum of squares\nprint(find_sum_of_squares(5))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(0, n):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(10))\n\n\"\"\"\nOutput:\n\n1425\n\"\"\"",
    "import math\n\ndef sum_of_squares(n):\n    \"\"\"\n    sum_of_squares(n) -> sum of squares\n    \n    Sum of the squares of the first n even numbers.\n    \"\"\"\n    \n    sums = []\n    for i in range(1, n+1):\n        sums.append(i ** 2)\n    return sum(sums)\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(20))\n    print(sum_of_squares(15))",
    "def sum_of_squares(n):\n    \"\"\"\n    >>> sum_of_squares(3)\n    9\n    >>> sum_of_squares(4)\n    16\n    >>> sum_of_squares(5)\n    25\n    >>> sum_of_squares(6)\n    36\n    >>> sum_of_squares(7)\n    49\n    >>> sum_of_squares(8)\n    64\n    >>> sum_of_squares(9)\n    81\n    \"\"\"\n    result = 0\n    for i in range(1, n):\n        if i % 2 == 0:\n            result += i * i\n    return result\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "def sum_of_squares(n):\n    \"\"\"\n    Write a function called sum_of_squares that takes an integer n as its input and returns the sum of the squares of the first n even natural numbers.\n    \"\"\"\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(10))",
    "def sum_even_squares(n):\n    return sum(x**2 for x in range(1, n + 1) if x % 2 == 0)\n\n\nif __name__ == '__main__':\n    n = int(input())\n    print(sum_even_squares(n))",
    "def sum_of_squares(n):\n    return sum(x*x for x in range(1, n+1) if x % 2 == 0)\n\nprint(sum_of_squares(5))",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += (i ** 2)\n    return sum\n\n#Test Cases\nprint sum_of_squares(0)\nprint sum_of_squares(1)\nprint sum_of_squares(2)\nprint sum_of_squares(3)\nprint sum_of_squares(4)\nprint sum_of_squares(5)\nprint sum_of_squares(6)\nprint sum_of_squares(7)\nprint sum_of_squares(8)\nprint sum_of_squares(9)\nprint sum_of_squares(10)\nprint sum_of_squares(11)\nprint sum_of_squares(12)\nprint sum_of_squares(13)\nprint sum_of_squares(14)\nprint sum_of_squares(15)\nprint sum_of_squares(16)\nprint sum_of_squares(17)\nprint sum_of_squares(18)\nprint sum_of_squares(19)\nprint sum_of_squares(20)\nprint sum_of_squares(21)\nprint sum_of_squares(22)\nprint sum_of_squares(23)\nprint sum_of_squares(24)\nprint sum_of_squares(25)\nprint sum_of_squares(26)\nprint sum_of_squares(27)\nprint sum_of_squares(28)\nprint sum_of_squares(29)\nprint sum_of_squares(30)\nprint sum_of_squares(31)\nprint sum_of_squares(32)\nprint sum_of_squares(33)\nprint sum_of_squares(34)\nprint sum_of_squares(35)\nprint sum_of_squares(36)\nprint sum_of_squares(37)\nprint sum_of_squares(38)\nprint sum_of_squares(39)\nprint sum_of_squares(40)\nprint sum_of_squares(41)\nprint sum_of_squ",
    "def sum_squares(n):\n    result = 0\n    for i in range(0,n):\n        result += i**2\n    return result\n\nif __name__ == \"__main__\":\n    print sum_squares(10)",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nprint(\"Sum of squares of first n even natural numbers:\", sum_of_squares(5))",
    "# http://www.tutorialspoint.com/python/python_math.htm\n\ndef sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# test\nprint sum_of_squares(10)\nprint sum_of_squares(20)\nprint sum_of_squares(30)\nprint sum_of_squares(40)",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i * i\n    return sum_of_squares\n\nprint sum_of_squares(10)",
    "def sum_of_squares(n):\n    total = 0\n    for i in range(1, n+1):\n        total += i**2\n    return total\n\nprint(sum_of_squares(10))",
    "def sumOfSquares(n):\n    sumOfSquares = 0\n    for i in range(1, n+1):\n        sumOfSquares += i**2\n    return sumOfSquares\n\nprint(sumOfSquares(5))",
    "def sum_of_squares(n):\n    return sum([x * x for x in range(1, n + 1) if x % 2 == 0])\n\nprint(sum_of_squares(10))",
    "# https://leetcode.com/problems/sum-of-squares/\n# https://leetcode.com/submissions/detail/153924783/\n# https://leetcode.com/submissions/detail/153924783/\n# https://leetcode.com/submissions/detail/153924783/\n# https://leetcode.com/submissions/detail/153924783/\n\n# Time:  O(n)\n# Space: O(1)\n\nclass Solution(object):\n    def getSum(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\"\n        s = 0\n        for i in range(1, n + 1):\n            s += i ** 2\n        return s\n\nif __name__ == \"__main__\":\n    sol = Solution()\n    print(sol.getSum(5))\n    print(sol.getSum(6))",
    "import math\nimport timeit\n\ndef sum_squares_even(n):\n    sum_squares = 0\n    for i in range(1, n+1):\n        sum_squares += (i**2)\n    return sum_squares\n\nn = 1000\n\nprint(timeit.timeit(\"sum_squares_even(%s)\" % n, setup=\"from __main__ import sum_squares_even\", number=1))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(10))",
    "import numpy as np\n\ndef sum_squares(n):\n    \"\"\"\n    sum_squares(n) -> int\n    Sum of the squares of the first n even natural numbers.\n    \"\"\"\n    return sum(np.square(x) for x in range(1, n + 1))\n\n\nif __name__ == \"__main__\":\n    print(sum_squares(5))",
    "import math\n\ndef sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(20))",
    "def sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1))\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(10))",
    "def sum_squares(n):\n    return sum(i**2 for i in range(1,n+1))\n\nif __name__ == '__main__':\n    print(sum_squares(5))",
    "# http://www.geeksforgeeks.org/sum-of-squares-of-first-n-even-natural-numbers/\n\ndef sum_of_squares_of_first_n_even(n):\n    return sum([i * i for i in range(1, n+1) if i % 2 == 0])\n\nprint(sum_of_squares_of_first_n_even(10))",
    "def sum_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i ** 2\n    return sum\n\nprint sum_squares(5)",
    "def sum_squares(n):\n    sum = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum += i**2\n    return sum\n\nprint sum_squares(10)",
    "def sum_of_squares(n):\n    \"\"\"\n    sum_of_squares(n) -> int\n    sum_of_squares(n) calculates the sum of squares of first n even natural numbers.\n    :param n: number of even numbers\n    :return: sum of squares of first n even numbers\n    \"\"\"\n\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n\n    return sum_of_squares\n\nprint sum_of_squares(10)",
    "import numpy as np\nimport math\n\ndef sum_of_squares(n):\n    \"\"\"\n    Given a number n, sum the squares of the first n even numbers.\n    \"\"\"\n    return sum(map(lambda x: x ** 2, range(1, n + 1)))\n\nif __name__ == '__main__':\n    print(sum_of_squares(5))\n    print(sum_of_squares(6))\n    print(sum_of_squares(7))\n    print(sum_of_squares(8))\n    print(sum_of_squares(9))\n    print(sum_of_squares(10))\n    print(sum_of_squares(11))\n    print(sum_of_squares(12))\n    print(sum_of_squares(13))\n    print(sum_of_squares(14))\n    print(sum_of_squares(15))\n    print(sum_of_squares(16))\n    print(sum_of_squares(17))\n    print(sum_of_squares(18))\n    print(sum_of_squares(19))\n    print(sum_of_squares(20))\n    print(sum_of_squares(21))\n    print(sum_of_squares(22))\n    print(sum_of_squares(23))\n    print(sum_of_squares(24))\n    print(sum_of_squares(25))\n    print(sum_of_squares(26))\n    print(sum_of_squares(27))\n    print(sum_of_squares(28))\n    print(sum_of_squares(29))\n    print(sum_of_squares(30))\n    print(sum_of_squares(31))\n    print(sum_of_squares(32))\n    print(sum_of_squares(33))\n    print(sum_of_squares(34))\n    print(sum_of_squares(35))\n    print(sum_of_squares(36))\n    print(sum_of_squares(37))\n    print(sum",
    "def sum_of_squares(n):\n    \"\"\"\n    sum_of_squares(n) -> int\n    \"\"\"\n    result = 0\n    for i in range(1, n + 1):\n        result += i * i\n    return result\n\nprint sum_of_squares(4)",
    "def sum_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum += i ** 2\n    return sum\n\n# Your code here.",
    "# sum_of_squares\ndef sum_of_squares(n):\n    return sum(i * i for i in range(1, n + 1))\n\n# test\nassert sum_of_squares(10) == 385\nassert sum_of_squares(20) == 17900\nassert sum_of_squares(21) == 256500",
    "def sum_of_squares(n):\n    s = 0\n    for i in range(n):\n        s += i ** 2\n    return s\n\nprint(sum_of_squares(10))\n#>>> 9",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i**2\n    return sum\n\nif __name__ == '__main__':\n    print sum_of_squares(10)",
    "def sum_squares(n):\n    return sum(x**2 for x in range(1, n+1) if x % 2 == 0)\n\n# print sum_squares(10)\n# print sum_squares(15)\n# print sum_squares(20)\n# print sum_squares(25)",
    "def sum_of_squares(n):\n    return sum([i**2 for i in range(1, n+1)])\n\nprint sum_of_squares(10)\n#>>> 285\n\nprint sum_of_squares(100)\n#>>> 145625\n\nprint sum_of_squares(1000)\n#>>> 6873740800",
    "import timeit\n\n\ndef sum_of_squares(n):\n    return sum(i**2 for i in range(1, n+1) if i % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    t = timeit.timeit(\"sum_of_squares(10)\", setup=\"from __main__ import sum_of_squares\", number=1)\n    print(\"sum_of_squares(10) took %f seconds\" % t)",
    "from math import sqrt\n\ndef sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += i*i\n    return sum_of_squares\n\ndef main():\n    sum_of_squares(10)\n\nif __name__ == '__main__':\n    main()",
    "def sumOfSquares(n):\n    return sum(i**2 for i in range(1,n+1) if i % 2 == 0)\n\nprint sumOfSquares(5)",
    "def sum_of_squares(n):\n    s = 0\n    for i in range(n):\n        s += i ** 2\n    return s\n\nprint sum_of_squares(5)",
    "import math\n\ndef even_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += i*i\n    return sum_of_squares\n\nprint(even_sum_of_squares(5))\nprint(even_sum_of_squares(10))\nprint(even_sum_of_squares(15))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\ndef main():\n    sum_of_squares(2)\n\nif __name__ == '__main__':\n    main()",
    "def sum_squares(n):\n    sum_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_squares += i ** 2\n    return sum_squares\n\nprint sum_squares(10)",
    "def sum_squares_even(n):\n    sum_squares = 0\n    for i in range(n):\n        if i % 2 == 0:\n            sum_squares += i ** 2\n    return sum_squares\n\nprint sum_squares_even(5)",
    "def sum_of_squares(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    sum = 0\n    for i in range(1, n + 1):\n        sum += i * i\n    return sum\n\n\nif __name__ == \"__main__\":\n    print sum_of_squares(100)",
    "# Example\n# n = 5\n# sum(n ** 2 for n in range(1, n + 1))\n\ndef sum_even_squares(n):\n    return sum(n ** 2 for n in range(1, n + 1) if n % 2 == 0)\n\n# Test\nassert sum_even_squares(5) == 70\nassert sum_even_squares(10) == 462\nassert sum_even_squares(15) == 884\nassert sum_even_squares(20) == 1554",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(n):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == \"__main__\":\n    print(sum_of_squares(5))",
    "def sum_of_squares(n):\n    \"\"\"\n    Return the sum of squares of first n even natural numbers.\n    \"\"\"\n    s = 0\n    for i in range(n):\n        s += i**2\n    return s\n\nif __name__ == \"__main__\":\n    print sum_of_squares(3)",
    "def sum_of_squares(n):\n    return sum([(i**2) for i in range(1, n+1) if i % 2 == 0])\n\nif __name__ == \"__main__\":\n    print sum_of_squares(5)\n    #print sum_of_squares(10)",
    "# Problem Statement\n#\n# Given an integer n, return the sum of squares of the first n even natural numbers.\n#\n#\n#\n# Example 1:\n#\n# Input: n = 2\n# Output: 4\n# Explanation:\n# The first two natural numbers are 2 and 4.\n# The sum of their squares is 4.\n#\n#\n#\n# Note:\n#\n# n is a non-negative integer and won't exceed 10^5.\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#\n#",
    "def sum_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i**2\n    return sum\n\nif __name__ == '__main__':\n    print(sum_squares(5))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += i**2\n    return sum_of_squares\n\nprint(sum_of_squares(10))",
    "# The following solution is not correct\n\ndef sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 0)\n\n# The following solution is correct\n\ndef sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 0)\n\n# The following solution is incorrect\n\ndef sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 0) + sum(i ** 2 for i in range(2, n + 1) if i % 2 == 0)\n\n# The following solution is correct\n\ndef sum_of_squares(n):\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 0) + sum(i ** 2 for i in range(2, n + 1) if i % 2 == 0) - sum(i ** 2 for i in range(3, n + 1) if i % 2 == 0)",
    "def find_sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i**2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print(find_sum_of_squares(20))",
    "def sumOfSquares(n):\n\tsum = 0\n\tfor i in range(1, n+1):\n\t\tsum += i * i\n\treturn sum\n\nprint sumOfSquares(10)",
    "def sum_of_squares(n):\n    if n < 1:\n        return 0\n    return sum(i ** 2 for i in range(1, n + 1) if i % 2 == 0)\n\nif __name__ == \"__main__\":\n    print sum_of_squares(10)",
    "def sum_of_squares(n):\n    return sum(x**2 for x in range(1,n+1) if x%2==0)\n\n#print sum_of_squares(5)\n#print sum_of_squares(10)\n#print sum_of_squares(15)",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(0, n):\n        sum += i**2\n    return sum\n\nprint sum_of_squares(10)",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum += i ** 2\n    return sum\n\nprint sum_of_squares(4)",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print sum_of_squares(5)\n    print sum_of_squares(6)\n    print sum_of_squares(7)\n    print sum_of_squares(8)",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Write a function that returns the sum of the squares of the first n natural numbers.\ndef sum_of_squares_2(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Write a function that returns the sum of the squares of the first n natural numbers.\ndef sum_of_squares_3(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Write a function that returns the sum of the squares of the first n natural numbers.\ndef sum_of_squares_4(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Write a function that returns the sum of the squares of the first n natural numbers.\ndef sum_of_squares_5(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Write a function that returns the sum of the squares of the first n natural numbers.\ndef sum_of_squares_6(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Write a function that returns the sum of the squares of the first n natural numbers.\ndef sum_of_squares_7(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        sum_of_squares += i ** 2\n    return sum",
    "import math\n\ndef sum_squares(n):\n    return sum(i * i for i in range(1, n + 1) if i % 2 == 0)\n\n\nif __name__ == \"__main__\":\n    print(sum_squares(5))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nif __name__ == '__main__':\n    print(sum_of_squares(6))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n+1):\n        if i % 2 == 0:\n            sum_of_squares += i ** 2\n    return sum_of_squares\n\nn = int(input())\nprint(sum_of_squares(n))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\n# Test Cases\nprint(sum_of_squares(1))\nprint(sum_of_squares(2))\nprint(sum_of_squares(3))\nprint(sum_of_squares(4))\nprint(sum_of_squares(5))\nprint(sum_of_squares(6))\nprint(sum_of_squares(7))\nprint(sum_of_squares(8))\nprint(sum_of_squares(9))",
    "def sum_squares(n):\n    \"\"\"\n    >>> sum_squares(1)\n    0\n    >>> sum_squares(2)\n    4\n    >>> sum_squares(3)\n    9\n    >>> sum_squares(4)\n    16\n    >>> sum_squares(5)\n    25\n    \"\"\"\n    sum = 0\n    for i in range(1, n + 1):\n        if i % 2 == 0:\n            sum += i**2\n    return sum\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "def sumOfSquares(n):\n    result = 0\n    for i in range(1, n):\n        result += i * i\n    return result\n\nif __name__ == \"__main__\":\n    print sumOfSquares(10)",
    "def sum_of_squares(n):\n    sum = 0\n    for i in range(n):\n        sum += i * i\n    return sum\n\nif __name__ == '__main__':\n    print(sum_of_squares(5))",
    "def sum_of_squares(n):\n    sum_of_squares = 0\n    for i in range(1, n + 1):\n        sum_of_squares += i ** 2\n    return sum_of_squares\n\nprint(sum_of_squares(10))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}