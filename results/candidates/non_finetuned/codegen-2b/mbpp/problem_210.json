{
  "problem": {
    "task_id": "MBPP/221",
    "prompt": "Write a python function to find the first even number in a given list of numbers.",
    "canonical_solution": "def first_even(nums):\r\n    first_even = next((el for el in nums if el%2==0),-1)\r\n    return first_even",
    "test_list": [
      "assert first_even ([1, 3, 5, 7, 4, 1, 6, 8]) == 4",
      "assert first_even([2, 3, 4]) == 2",
      "assert first_even([5, 6, 7]) == 6"
    ],
    "challenge_test_list": [],
    "problem_id": 210
  },
  "model_name": "codegen-2b",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def find_first_even(numbers):\n    evens = [num for num in numbers if num % 2 == 0]\n    if len(evens) == 0:\n        return None\n    return evens[0]\n\n# Test Cases\n#numbers = [2, 3, 4, 5, 7, 8, 9, 10]\n#numbers = [4, 5, 6, 7, 8, 9, 10]\n#numbers = [1, 3, 5, 7, 9]\n#numbers = [1, 3, 5, 7, 9, 11]\n#numbers = [1, 3, 5, 7, 9, 11, 12]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23, 25]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23, 25, 27]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23, 25, 27, 29]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31]\n#numbers = [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33]\n#numbers = [1",
    "def find_even_number(num_list):\n    # Your code here\n    even_number_list = []\n    for num in num_list:\n        if num % 2 == 0:\n            even_number_list.append(num)\n    return even_number_list",
    "from random import randint\n\ndef get_even_number(numbers):\n    \"\"\"\n    Given a list of numbers, find the first even number in it and return it.\n    \"\"\"\n    for i in range(len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return None\n\nif __name__ == \"__main__\":\n    numbers = [randint(0, 100) for i in range(100)]\n    print(get_even_number(numbers))",
    "# First, we define a function, first_even, that takes a list of numbers and returns\n# the first even number in that list.\n\n# Note that this function is not concerned with whether the number is even or odd.\n# It just returns the first even number in the list.\ndef first_even(numbers):\n    # We define a list of all even numbers in the given list of numbers.\n    evens = [x for x in numbers if x % 2 == 0]\n\n    # We return the first number in evens.\n    return evens[0]\n\n\n# Then, we run the function.\n\n# The first_even function should return 5.\nprint first_even([2, 4, 6, 8, 10])",
    "def find_even_number(numbers):\n    # +++your code here+++\n    # Write tests for your code here.\n    # return None\n\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nif __name__ == '__main__':\n    print find_even_number([1,3,4,5,7,9,11])",
    "def first_even_number(numbers):\n    \"\"\"\n    Function to find the first even number in a given list of numbers.\n    :param numbers: list of numbers\n    :return: the first even number in the list\n    \"\"\"\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nprint first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])",
    "def even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return 0",
    "def find_even_number(nums):\n    for i in range(0,len(nums)):\n        if nums[i] % 2 == 0:\n            return nums[i]\n\nif __name__ == \"__main__\":\n    nums = [1,2,3,4,5,6,7,8]\n    print find_even_number(nums)",
    "def first_even(numbers):\n    for i in range(0,len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return -1\n\nnumbers = [1,2,3,4,5,6,7,8,9,10]\nprint(first_even(numbers))",
    "def is_even(n):\n    return n % 2 == 0\n\ndef find_first_even(nums):\n    for i in range(0, len(nums)):\n        if is_even(nums[i]):\n            return i\n    return -1\n\nprint(find_first_even([1, 3, 4, 6, 5, 2, 8, 7]))",
    "def first_even_number(numbers):\n    \"\"\"\n    Args:\n        numbers: A list of integers\n\n    Returns:\n        A single integer.\n    \"\"\"\n    # Write your code here\n    \n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    \n    return None\n\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    \n    print(first_even_number(numbers))",
    "def find_even_number(numbers):\n    \"\"\"\n    Find the first even number in a list of numbers.\n    :param numbers: a list of numbers\n    :return: the first even number in the list\n    \"\"\"\n    return next(filter(lambda x: x % 2 == 0, numbers))\n\nif __name__ == \"__main__\":\n    numbers = [2, 4, 6, 8, 10]\n    even_number = find_even_number(numbers)\n    print(even_number)",
    "import math\n\ndef first_even(numbers):\n    return [i for i in numbers if i % 2 == 0 and i >= 0]\n\n\nif __name__ == \"__main__\":\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))",
    "def find_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nprint(find_even(numbers))",
    "from random import randint\n\n\ndef even_numbers(numbers):\n    return [n for n in numbers if n % 2 == 0]\n\n\nif __name__ == '__main__':\n    numbers = [randint(1, 1000) for _ in range(1000)]\n    print(even_numbers(numbers))",
    "#!/usr/bin/env python\n\ndef first_even(numbers):\n    \"\"\"\n    Find the first even number in a given list of numbers\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return None\n\n\nif __name__ == '__main__':\n    numbers = [4, 3, 2, 1]\n    print first_even(numbers)",
    "def first_even(numbers):\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return None\n\n\"\"\"\nWrite a python function to find the first odd number in a given list of numbers.\n\"\"\"\n\ndef first_odd(numbers):\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2!= 0:\n            return numbers[i]\n    return None\n\n\"\"\"\nWrite a python function to find the sum of the first odd and the first even number in a given list of numbers.\n\"\"\"\n\ndef sum_of_odd_and_even(numbers):\n    odd = first_odd(numbers)\n    even = first_even(numbers)\n    if odd is None or even is None:\n        return None\n    return odd + even\n\nif __name__ == \"__main__\":\n    numbers = [2, 4, 6, 8, 10]\n    print(first_odd(numbers))\n    print(first_even(numbers))\n    print(sum_of_odd_and_even(numbers))",
    "# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(range(0, 100, 2))))\n# print(find_even_number(list(",
    "import random\n\ndef find_even(nums):\n    for i in range(0, len(nums)):\n        if nums[i] % 2 == 0:\n            return nums[i]\n    return None\n\nif __name__ == '__main__':\n    nums = [random.randint(1, 100) for i in range(10)]\n    even = find_even(nums)\n    print \"Even number is {}\".format(even)",
    "def find_even_number(numbers):\n    # write your code here\n    even_numbers = []\n    for number in numbers:\n        if number % 2 == 0:\n            even_numbers.append(number)\n    return even_numbers\n\n\nif __name__ == '__main__':\n    print find_even_number([1, 3, 5, 6, 8, 9])",
    "# Your function should return 0 if the number is even, 1 if the number is odd\n# and -1 if the number is not an even number\n\ndef is_even(n):\n    if n % 2 == 0:\n        return 0\n    else:\n        return 1\n\n# Your function should take in a list of numbers and return a single number\n# that is the first even number in the list\n\ndef first_even(n):\n    n = list(n)\n    return n[0] if is_even(n[0]) else first_even(n[1:])\n\n# Test your function\n\nassert first_even([1, 2, 3]) == 1\nassert first_even([4, 5, 6]) == 6\nassert first_even([1, 2, 3, 4]) == 1\nassert first_even([-1, -2, -3, -4]) == -1\nassert first_even([-1, -2, -3, -4, -5]) == -1\nassert first_even([-1, -2, -3, -4, -5, -6]) == -1\nassert first_even([-1, -2, -3, -4, -5, -6, -7]) == -1",
    "#!/usr/bin/env python\n\nfrom math import sqrt\n\ndef firstEven(list):\n    result = list[0]\n    for i in range(1, len(list)):\n        if list[i] % 2 == 0:\n            result = list[i]\n    return result\n\ndef firstEven_recur(list):\n    if len(list) == 0:\n        return None\n    if len(list) == 1:\n        return list[0]\n    else:\n        return list[0] + firstEven_recur(list[1:])\n\nlist = [1, 3, 5, 7, 9]\nprint(firstEven(list))\nprint(firstEven_recur(list))\n\n\"\"\"\n\nWrite a python function to find the first odd number in a given list of numbers.\n\"\"\"\n\ndef firstOdd(list):\n    result = list[0]\n    for i in range(1, len(list)):\n        if list[i] % 2!= 0:\n            result = list[i]\n    return result\n\ndef firstOdd_recur(list):\n    if len(list) == 0:\n        return None\n    if len(list) == 1:\n        return list[0]\n    else:\n        return list[0] + firstOdd_recur(list[1:])\n\nlist = [1, 3, 5, 7, 9]\nprint(firstOdd(list))\nprint(firstOdd_recur(list))\n\n\"\"\"\n\nWrite a python function to find the first odd number in a given list of numbers.\n\"\"\"\n\ndef firstOdd(list):\n    result = list[0]\n    for i in range(1, len(list)):\n        if list[i] % 2 == 0:\n            result = list[i]\n    return result\n\ndef firstOdd_recur(list):\n    if len(list) == 0:\n        return None\n    if len(list) == 1:\n        return list[0]\n    else:\n        return list[0] + firstOdd_recur(list[1:])\n\nlist = [1, 3, 5, 7, 9]",
    "def find_even(numbers):\n\t\"\"\"\n\t>>> find_even([1,2,3,4,5,6,7,8,9])\n\t2\n\t>>> find_even([1,2,3,4,5,6,7,8,9,10])\n\t10\n\t\"\"\"\n\t# Your code here\n\tfor i in numbers:\n\t\tif i%2 == 0:\n\t\t\treturn i\n\nif __name__ == \"__main__\":\n\tassert find_even([1,2,3,4,5,6,7,8,9]) == 2\n\tassert find_even([1,2,3,4,5,6,7,8,9,10]) == 10",
    "def first_even_number(numbers):\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\n# Sample Output\n# [1, 3, 5, 7, 9]\n# 1\n# 3\n# 5\n# 7\n# 9\n#\n# Sample Input\n# [1, 3, 5, 7, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# [1,",
    "def first_even(numbers):\n    \"\"\"\n    :param numbers:\n    :return: the first even number\n    \"\"\"\n    return next(i for i in numbers if i % 2 == 0)\n\nif __name__ == \"__main__\":\n    numbers = [1, 2, 3, 4, 5]\n    print(first_even(numbers))",
    "from random import randint\n\ndef even_number(numbers):\n    \"\"\"\n    :param numbers: list of numbers\n    :return: the first even number in the list\n    \"\"\"\n    for i in range(len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\n\ndef test():\n    \"\"\"\n    Test the function\n    \"\"\"\n    assert even_number([1, 2, 3, 4, 5]) == 2\n    assert even_number([1, 2, 3, 4, 5, 6]) == 6\n    assert even_number([1, 2, 3, 4, 5, 6, 7]) == 3\n    assert even_number([1, 2, 3, 4, 5, 6, 7, 8]) == 8\n    assert even_number([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 4\n\nif __name__ == '__main__':\n    test()",
    "def even_number(numbers):\n    return [i for i in numbers if i % 2 == 0]\n\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(even_number(numbers))",
    "def find_first_even(numbers):\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    raise ValueError('No even number found')",
    "import numpy as np\nimport matplotlib.pyplot as plt\n\ndef find_even_numbers(numbers):\n    \"\"\"\n    Finds the first even number in a given list of numbers\n    \"\"\"\n    return np.where(np.mod(numbers, 2) == 0)\n\n\ndef main():\n    \"\"\"\n    Finds the first even number in a given list of numbers.\n    \"\"\"\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]\n    first_even_number = find_even_numbers(numbers)\n    print(first_even_number)\n\n\nif __name__ == '__main__':\n    main()",
    "def first_even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    if len(numbers) == 0:\n        return 0\n    \n    if len(numbers) == 1:\n        return numbers[0]\n    \n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    \n    return numbers[len(numbers) - 1]\n\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7]\n    print(first_even_number(numbers))",
    "# Define a function that takes a list of numbers and returns the first even number.\ndef find_even(numbers):\n    # Your code here\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\n# Run the function\nprint(find_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n\n# Output:\n# 3",
    "def find_even_number(numbers):\n    \"\"\"\n    Args:\n        numbers: List of integers.\n\n    Returns:\n        The first even number in the list.\n    \"\"\"\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n\nnumbers = [3, 4, 1, 6, 2, 7]\n\nprint find_even_number(numbers)",
    "# First number\ndef first_even(nums):\n    for i in range(0, len(nums)):\n        if nums[i] % 2 == 0:\n            return nums[i]\n\n# Test\nprint(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "def find_even(numbers):\n    \"\"\"\n    Find the first even number in a given list of numbers.\n    \"\"\"\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n        else:\n            pass",
    "# Your code here\n\ndef first_even(numbers):\n    even = 0\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            even = numbers[i]\n    return even\n\nif __name__ == \"__main__\":\n    numbers = [5, 6, 7, 8]\n    print first_even(numbers)",
    "def first_even(numbers):\n    \"\"\"\n    Function to return first even number in the list.\n\n    :param numbers: List of numbers.\n    :return: First even number in the list.\n    \"\"\"\n\n    return [n for n in numbers if n % 2 == 0][0]\n\n\nif __name__ == \"__main__\":\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(first_even(numbers))",
    "def find_first_even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    even_numbers = []\n    for number in numbers:\n        if number % 2 == 0:\n            even_numbers.append(number)\n    return min(even_numbers)\n\nif __name__ == \"__main__\":\n    assert find_first_even_number([1, 3, 4, 5]) == 2\n    assert find_first_even_number([1, 3, 5, 7, 9]) == 3",
    "def first_even(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\n# This is the standard boilerplate that calls the main() function.\nif __name__ == '__main__':\n    import sys\n    sys.exit(main())",
    "def even_numbers(numbers):\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n\nprint(even_numbers([1, 3, 5, 7, 9]))",
    "def first_even(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    return next(filter(lambda x: x % 2 == 0, numbers), None)\n\n# Your FirstEvenFunction object will be instantiated and called as such:\n# obj = FirstEvenFunction()\n# param_1 = obj.first_even(numbers)",
    "def first_even(list):\n    for i in range(0, len(list)):\n        if list[i] % 2 == 0:\n            return list[i]\n\nif __name__ == '__main__':\n    test_list = [1, 3, 5, 7, 9, 12, 13, 15, 16, 18, 19, 21]\n    print(first_even(test_list))",
    "#!/usr/bin/python\n\nimport sys\n\ndef find_first_even(numbers):\n    even_list = []\n    for number in numbers:\n        if number % 2 == 0:\n            even_list.append(number)\n    return even_list\n\nif __name__ == \"__main__\":\n    numbers = map(int, sys.argv[1:])\n    even_list = find_first_even(numbers)\n    print \"First even number in numbers is\", even_list[0]",
    "def first_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nif __name__ == \"__main__\":\n    print(first_even([1,2,3,4,5,6,7,8,9,10]))",
    "def find_first_even(nums):\n    \"\"\"\n    Given a list of numbers, return the first even number in the list.\n    \"\"\"\n    for i in range(0, len(nums)):\n        if nums[i] % 2 == 0:\n            return nums[i]\n    return None\n\nif __name__ == '__main__':\n    assert find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 2\n    assert find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 6\n    assert find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]) == 8\n    assert find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]) == 10\n    assert find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) == 12\n    assert find_first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]) == 14",
    "def even(numbers):\n    return [i for i in numbers if i % 2 == 0]\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\neven_numbers = even(numbers)\nprint(even_numbers)",
    "def even_number(numbers):\n    \"\"\"\n    Write a function that returns the first even number in a list.\n    \"\"\"\n    return [x for x in numbers if x % 2 == 0]\n\nprint(even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "import sys\n\ndef find_even(nums):\n    \"\"\"\n    Find the first even number in a list of numbers.\n    :param nums: a list of numbers\n    :return: the first even number in the list\n    \"\"\"\n    i = 0\n    while i < len(nums):\n        if nums[i] % 2 == 0:\n            return nums[i]\n        i += 1\n    return None\n\ndef main():\n    \"\"\"\n    Main function.\n    \"\"\"\n    try:\n        nums = [int(n) for n in sys.stdin.read().split()]\n        even = find_even(nums)\n        print even\n    except ValueError:\n        sys.exit(\"error\")\n\nif __name__ == \"__main__\":\n    main()",
    "import sys\nsys.path.append(\"..\")\nimport py_functions\n\ndef is_even(num):\n    return num % 2 == 0\n\ndef even_numbers(numbers):\n    return [x for x in numbers if is_even(x)]\n\nif __name__ == \"__main__\":\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\n    even_numbers = even_numbers(numbers)\n    print(even_numbers)",
    "def find_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nprint find_even([1,2,3,4,5,6])",
    "def is_even(n):\n    if n % 2 == 0:\n        return True\n    else:\n        return False\n\nnumbers = [1,2,3,4,5]\n\nfirst_even_number = 0\nfor i in numbers:\n    if is_even(i):\n        first_even_number = i\n\nprint(first_even_number)",
    "# Example\n# def first_even_number(numbers):\n#     return next_even(numbers[0])\n\n# def next_even(number):\n#     return number + 1 if number % 2 == 0 else number - 1\n\n# input = [1,2,3,4,5]\n# output = first_even_number(input)\n# print(output)\n\n\ndef first_even_number(numbers):\n    return next_even(numbers[0])\n\ndef next_even(number):\n    return number + 1 if number % 2 == 0 else number - 1\n\nnumbers = [1,2,3,4,5]\noutput = first_even_number(numbers)\nprint(output)",
    "def first_even(numbers):\n    return [n for n in numbers if n % 2 == 0]\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print(first_even(numbers))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]))\n    print(first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]))\n    print(first_even([1",
    "def first_even_number(numbers):\n    for i in range(len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\nprint first_even_number([1,2,3,4,5,6,7,8,9,10])",
    "def first_even(nums):\n    for num in nums:\n        if num % 2 == 0:\n            return num\n    return None\n\nprint(first_even([1, 2, 3, 4, 5, 6]))\nprint(first_even([1, 2, 3, 4, 5]))\nprint(first_even([1, 2, 3, 4]))",
    "def first_even(list_of_numbers):\n    \"\"\"\n    :param list_of_numbers: A list of integers\n    :return: The first even number in the list of numbers\n    \"\"\"\n    \n    for i in range(0, len(list_of_numbers)):\n        if list_of_numbers[i] % 2 == 0:\n            return list_of_numbers[i]",
    "def first_even_number(numbers):\n    for n in numbers:\n        if n % 2 == 0:\n            return n\n\nprint(first_even_number([1, 2, 3, 4, 5, 6]))",
    "def first_even_number(numbers):\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n\nprint first_even_number([1, 2, 3, 4, 5])\nprint first_even_number([1, 2, 3, 4, 6])",
    "def even_number(list_of_numbers):\n    for number in list_of_numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\nprint(even_number([1, 2, 3, 4, 5]))\nprint(even_number([1, 2, 3, 4, 5, 6]))\nprint(even_number([1, 2, 3, 4, 5, 6, 7]))\nprint(even_number([1, 2, 3, 4, 5, 6, 7, 8]))\nprint(even_number([1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))",
    "def even_num(num_list):\n    for i in num_list:\n        if i % 2 == 0:\n            return i\n    return None\n\nprint(even_num([1,2,3,4,5,6]))",
    "def first_even_number(numbers):\n    \"\"\"\n    Write a function that takes a list of numbers and returns the first even number in the list.\n    \"\"\"\n    \n    for number in numbers:\n        if number % 2 == 0:\n            return number\n\n# Test Cases\nprint(first_even_number([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))\nprint(first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]))\nprint(first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))",
    "def find_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nif __name__ == \"__main__\":\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print find_even(numbers)",
    "import sys\n\ndef find_even(numbers):\n    \"\"\"\n    Find the first even number in a given list of numbers.\n    \"\"\"\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\nif __name__ == \"__main__\":\n    # This is your code you have to write\n    print find_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    print find_even([1, 2, 3, 4, 5, 6, 7, 8, 9])\n    print find_even([1, 3, 5, 7, 9])\n    print find_even([1, 3, 5, 7, 9, 11])\n    print find_even([1, 3, 5, 7, 9, 11, 13])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31])\n    print find_even([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33])\n    print",
    "def first_even_number(numbers):\n    \"\"\"\n    Write a function that takes a list of integers and returns the first\n    even number in the list.\n\n    For example:\n\n    >>> first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    6\n\n    >>> first_even_number([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\n    10\n\n    >>> first_even_number([2, 3, 4, 5, 6, 7, 8, 9, 10])\n    6\n\n    >>> first_even_number([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11])\n    -9\n\n    >>> first_even_number([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10, -11, -12])\n    -12\n    \"\"\"\n    return numbers[0] % 2 == 0 and numbers[0] or first_even_number(numbers[1:])",
    "def firstEven(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    # write your code here\n    return next((i for i in numbers if i % 2 == 0), None)\n\nif __name__ == \"__main__\":\n    assert firstEven([1, 2, 4, 5, 7, 9, 10]) == 2, \"firstEven()\"\n    assert firstEven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 2, \"firstEven()\"\n    assert firstEven([]) == None, \"firstEven()\"\n    assert firstEven([-1, -2, -3, -4, -5, -6, -7, -8, -9, -10]) == -1, \"firstEven()\"\n    assert firstEven([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 0, \"firstEven()\"\n    assert firstEven([-2, -3, -4, -5, -6, -7, -8, -9, -10]) == -2, \"firstEven()\"\n    assert firstEven([2, 4, 6, 8, 10]) == 2, \"firstEven()\"\n    assert firstEven([1, 3, 5, 7, 9, 11]) == 2, \"firstEven()\"\n    assert firstEven([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]) == 2, \"firstEven()\"",
    "def find_first_even(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\nnumbers = [1, 3, 5, 7, 9, 11, 13, 15]\n\nprint(find_first_even(numbers))",
    "def find_even(numbers):\n    \"\"\"\n    Input:\n        numbers: A list of numbers.\n\n    Output:\n        The index of the first even number in the list.\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return i\n\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n    print(find_even(numbers))",
    "def first_even(my_list):\n    for i in my_list:\n        if i % 2 == 0:\n            return i\n    return 0\n\nprint(first_even([1, 2, 3, 4, 5, 6]))",
    "def find_even_number(numbers):\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print find_even_number(numbers)",
    "def find_even_number(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    print find_even_number(numbers)",
    "def first_even(numbers):\n    return next(i for i in numbers if i % 2 == 0)\n\n\ndef test():\n    assert first_even([3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 10\n    assert first_even([10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 10\n    assert first_even([-3, -2, -1, 0, 1, 2, 3]) == 2\n    assert first_even([-3, -2, -1, 0, 1, 2, 3]) == 2\n    assert first_even([-3, -2, -1, 0, 1, 2, 3, 4, 5]) == 4\n    assert first_even([-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]) == 6\n    assert first_even([-3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]) == 11\n\nif __name__ == '__main__':\n    test()",
    "def firstEven(numbers):\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n\nprint(firstEven([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "def first_even_number(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return 0\n\n# Test Cases\nnumbers = [1,2,3,4,5,6,7,8,9]\nprint(first_even_number(numbers))\nnumbers = [2,4,6,8]\nprint(first_even_number(numbers))\nnumbers = [3,4,5,6,7,8,9]\nprint(first_even_number(numbers))\nnumbers = [3,4,5,6,7,8,9,10,11]\nprint(first_even_number(numbers))",
    "import sys\n\ndef firstEven(inputList):\n    for item in inputList:\n        if item % 2 == 0:\n            return item\n    return None\n\nif __name__ == \"__main__\":\n    inputList = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    print firstEven(inputList)\n    print firstEven(inputList[:])\n    print firstEven(inputList[:2])\n    print firstEven(inputList[:3])\n    print firstEven(inputList[:4])\n    print firstEven(inputList[:5])\n    print firstEven(inputList[:6])\n    print firstEven(inputList[:7])\n    print firstEven(inputList[:8])\n    print firstEven(inputList[:9])\n    print firstEven(inputList[:10])\n    print firstEven(inputList[:11])\n    print firstEven(inputList[:12])\n    print firstEven(inputList[:13])\n    print firstEven(inputList[:14])\n    print firstEven(inputList[:15])\n    print firstEven(inputList[:16])\n    print firstEven(inputList[:17])\n    print firstEven(inputList[:18])\n    print firstEven(inputList[:19])\n    print firstEven(inputList[:20])\n    print firstEven(inputList[:21])\n    print firstEven(inputList[:22])\n    print firstEven(inputList[:23])\n    print firstEven(inputList[:24])\n    print firstEven(inputList[:25])\n    print firstEven(inputList[:26])\n    print firstEven(inputList[:27])\n    print firstEven(inputList[:28])\n    print firstEven(inputList[:29])\n    print firstEven(inputList[:30])\n    print firstEven(inputList[:31])\n    print firstEven(inputList[:32])\n    print firstEven(inputList[:33])\n    print firstEven(inputList[:34])\n    print firstEven(inputList[:35])\n    print firstEven",
    "def find_first_even(numbers):\n    \"\"\"\n    numbers: List of numbers\n    return: The first even number in the list of numbers.\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\nprint(find_first_even([1, 2, 3, 4, 5, 6]))",
    "def first_even_number(list_of_numbers):\n    \"\"\"\n    :param list_of_numbers: A list of numbers\n    :return: The first even number in the list\n    \"\"\"\n\n    for i in range(0, len(list_of_numbers)):\n        if list_of_numbers[i] % 2 == 0:\n            return list_of_numbers[i]\n\nif __name__ == \"__main__\":\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    print first_even_number(numbers)",
    "def firstEven(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6]\n    firstEven(numbers)",
    "def even_number_in_list(numbers):\n    \"\"\"\n    Write a function that returns the first even number in a list.\n    \"\"\"\n\n    return [number for number in numbers if number % 2 == 0]\n\n# test functions\n\ndef test_even_number_in_list():\n    assert even_number_in_list([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [2, 4, 6, 8, 10]\n\nif __name__ == '__main__':\n    test_even_number_in_list()",
    "# create a list of numbers\nnumbers = [2, 3, 4, 5, 6, 7, 8, 9]\n# create a list to hold the first even number\neven = []\n# loop through the list and append the even numbers to the list\nfor number in numbers:\n    if number % 2 == 0:\n        even.append(number)\n# print the even numbers\nprint(even)",
    "def firstEvenNumber(numbers):\n    return [n for n in numbers if n % 2 == 0]\n\nprint(firstEvenNumber([1,2,3,4,5,6,7,8,9]))\n#>>> [2,4,6,8]\n\nprint(firstEvenNumber([1,2,3,4,5,6,7,8,9,10]))\n#>>> [2,4,6,8]",
    "# This is a helper function to return the first even number in a list.\ndef first_even(list):\n    first_even = 0\n    for item in list:\n        if item % 2 == 0:\n            first_even = item\n            break\n    return first_even\n\n# This is the main function.\ndef main():\n    # Here we create a list of numbers.\n    list_of_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    # Here we call the helper function.\n    first_even_number = first_even(list_of_numbers)\n    # Here we print the value of the first even number.\n    print \"The first even number in the list is %d\" % first_even_number\n\n# This is the code that was executed to run the program.\nif __name__ == \"__main__\":\n    main()",
    "def first_even_number(numbers):\n    \"\"\"\n    :param numbers: list of numbers\n    :return: first even number in the list\n    \"\"\"\n    first_even_number = None\n    for number in numbers:\n        if number % 2 == 0:\n            first_even_number = number\n            break\n    return first_even_number\n\nif __name__ == '__main__':\n    print first_even_number([1, 2, 3, 4, 5])\n    print first_even_number([6, 7, 8, 9, 10])",
    "def first_even(numbers):\n    for i in range(len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\nprint(first_even([3, 4, 5, 6, 7, 8]))",
    "def first_even(numbers):\n    \"\"\"\n    Function to return the first even number in the given list of numbers.\n    \"\"\"\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return None\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint first_even(numbers)",
    "def find_first_even(nums):\n    return [i for i in nums if i % 2 == 0]\n\ndef main():\n    nums = [1, 2, 3, 4, 5]\n    print find_first_even(nums)\n\nif __name__ == '__main__':\n    main()",
    "def find_even_number(numbers):\n    # write your code here\n    for number in numbers:\n        if number % 2 == 0:\n            return number\n    return None\n\nprint(find_even_number([2, 3, 5, 6, 7, 8, 9, 10]))",
    "def first_even_number(numbers):\n    for i in numbers:\n        if i % 2 == 0:\n            return i\n    return 0\n\n\nprint(first_even_number([2, 3, 4, 5, 7, 8, 9]))",
    "def find_even(numbers):\n    # +++your code here+++\n    return\n\nif __name__ == \"__main__\":\n    numbers = [1,2,3,4,5,6,7,8,9,10,11]\n    print(find_even(numbers))",
    "def find_even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return -1\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nprint(find_even_number(numbers))",
    "def find_even_number(numbers):\n    \"\"\"\n    Write a function find_even_number that takes a list of numbers and returns\n    the first even number in that list.\n    \"\"\"\n    for i in range(len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\n#-------------------------------------------------------------------------------\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n    print(find_even_number(numbers))",
    "from __future__ import print_function\nimport timeit\n\n\"\"\"\nThis is the python version.\n\"\"\"\n\ndef find_even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    # Your Code Here\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n\n\nif __name__ == '__main__':\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197,",
    "def first_even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return 0\n\nif __name__ == \"__main__\":\n    numbers = [2, 4, 6, 8, 10, 12]\n    print(first_even_number(numbers))",
    "def first_even(numbers):\n    \"\"\"\n    Find the first even number in the list of numbers.\n    \"\"\"\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return -1\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint first_even(numbers)\n\nnumbers = [3, 4, 5, 6, 7, 8, 9, 10]\nprint first_even(numbers)\n\nnumbers = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nprint first_even(numbers)\n\nnumbers = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\nprint first_even(numbers)\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\nprint first_even(numbers)\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]\nprint first_even(numbers)",
    "def even_number(numbers):\n    \"\"\"\n    Returns the first even number in the given list of numbers.\n\n    Args:\n        numbers: A list of numbers.\n\n    Returns:\n        The first even number in the given list of numbers.\n    \"\"\"\n    return sum(numbers[i] for i in range(len(numbers)) if numbers[i] % 2 == 0)\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nprint(even_number(numbers))",
    "def first_even(numbers):\n    for n in numbers:\n        if n % 2 == 0:\n            return n\n    raise ValueError\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nprint(first_even(numbers))\n\nnumbers = [2, 4, 6, 8, 10, 12, 14, 16, 18]\nprint(first_even(numbers))",
    "def is_even(x):\n    if x % 2 == 0:\n        return True\n    else:\n        return False\n\ndef first_even(numbers):\n    for i in range(0, len(numbers)):\n        if is_even(numbers[i]):\n            return numbers[i]\n\ndef test_is_even():\n    assert is_even(6) == True\n    assert is_even(0) == False\n\ndef test_first_even():\n    assert first_even([1, 2, 3]) == 2\n    assert first_even([1, 2, 3, 4]) == 2\n\nif __name__ == '__main__':\n    test_is_even()\n    test_first_even()",
    "def first_even_number(numbers):\n    for i in range(0, len(numbers)):\n        if numbers[i] % 2 == 0:\n            return numbers[i]\n    return 0\n\nnumbers = [2,4,6,8]\nprint(first_even_number(numbers))",
    "def first_even(numbers):\n    return next(i for i in numbers if i % 2 == 0)\n\nnumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\nprint(first_even(numbers))",
    "def find_even_number(numbers):\n    return sum(numbers[::2])\n\n# numbers = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24]\n# print(find_even_number(numbers))\n\nnumbers = [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24]\n\nprint(find_even_number(numbers))",
    "def first_even(numbers):\n    \"\"\"\n    :type numbers: list[int]\n    :rtype: int\n    \"\"\"\n    if not numbers:\n        return None\n    if not numbers[0]:\n        return numbers[0]\n    if numbers[0] % 2 == 0:\n        return numbers[0]\n    for num in numbers:\n        if num % 2 == 0:\n            return num\n    return None\n\n\nif __name__ == '__main__':\n    assert first_even([1, 2, 3, 4, 5, 6]) == 3\n    assert first_even([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 6\n    assert first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 8\n    assert first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == 10\n    assert first_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 10",
    "def find_first_even_number(numbers):\n    \"\"\"\n    :type numbers: List[int]\n    :rtype: int\n    \"\"\"\n    even_numbers = 0\n    for number in numbers:\n        if number % 2 == 0:\n            even_numbers += 1\n    return even_numbers\n\nif __name__ == '__main__':\n    numbers = [1,2,3,4,5,6]\n    print(find_first_even_number(numbers))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}