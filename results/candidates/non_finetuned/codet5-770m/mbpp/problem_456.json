{
  "problem": {
    "task_id": "MBPP/467",
    "prompt": "Write a python function to convert decimal number to octal number.",
    "canonical_solution": "def decimal_to_Octal(deciNum):\r\n    octalNum = 0\r\n    countval = 1;\r\n    dNo = deciNum;\r\n    while (deciNum!= 0):\r\n        remainder= deciNum % 8;\r\n        octalNum+= remainder*countval;\r\n        countval= countval*10;\r\n        deciNum //= 8; \r\n    return (octalNum)",
    "test_list": [
      "assert decimal_to_Octal(10) == 12",
      "assert decimal_to_Octal(2) == 2",
      "assert decimal_to_Octal(33) == 41"
    ],
    "challenge_test_list": [],
    "problem_id": 456
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def octal_to_decimal(n):\n    if n < 0:\n        return -1\n    elif n < 8:\n        return n\n    else:\n        return n + 8\n\nprint(octal_to_decimal(4))\nprint(octal_to_decimal(-1))\nprint(octal_to_decimal(0))",
    "def decimal_to_octal(num):\n    octal_num = ''\n    while num > 0:\n        octal_num = octal_num + str(num % 8)\n        num = num // 8\n    return octal_num\n\nprint(decimal_to_octal(123))",
    "def decimal_to_octal(num):\n    if num >= 0:\n        octal = int(str(num)[-1])\n        return octal\n    else:\n        return -1\n\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(-32))",
    "def decimal_to_octal(n):\n    octal = []\n    while n > 0:\n        n, i = divmod(n, 8)\n        octal.append(i)\n    octal.reverse()\n    return octal\n\n\nprint(decimal_to_octal(1234))",
    "def decimal_to_octal(num):\n    octal = \"\"\n    while num > 0:\n        num, mod = divmod(num, 8)\n        octal = octal + str(mod)\n    return octal\n\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_to_octal(36))\nprint(decimal_to_octal(37))\nprint(decimal_to_octal(38))\nprint(decimal_to_octal(39))\nprint(decimal_to_octal(40))",
    "def octal(number):\n    return format(number, 'o')\n\nprint(octal(123))",
    "def decimal_to_octal(decimal):\n    octal = 0\n\n    while decimal:\n        octal = octal * 8 + decimal % 8\n        decimal = decimal // 8\n\n    return octal\n\n\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(64))\nprint(decimal_to_octal(128))\nprint(decimal_to_octal(256))\nprint(decimal_to_octal(512))",
    "def decimal_to_octal(num):\n    if num < 0:\n        return \"Invalid input\"\n    if num < 8:\n        return str(num) + \"octal\"\n    if num < 16:\n        return str(num) + \"hexadecimal\"\n    if num < 32:\n        return str(num) + \"binadecimal\"\n    if num < 64:\n        return str(num) + \"decadecimal\"\n    if num < 128:\n        return str(num) + \"binadecimal\"\n    if num < 256:\n        return str(num) + \"decadecimal\"\n    if num < 512:\n        return str(num) + \"octal\"\n    if num < 1024:\n        return str(num) + \"octal\"\n    return str(num) + \"hexadecimal\"\n\n\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(-10))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(-10))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(-10))\nprint(decimal_to",
    "def decimal_to_octal(num):\n    if num == 0:\n        return '0'\n    if num < 0:\n        return '-'\n    octal_num = []\n    while num > 0:\n        octal_num.append(num % 8)\n        num = num // 8\n    return ''.join(str(x) for x in octal_num)\n\nprint(decimal_to_octal(123456789))",
    "def decimal_to_octal(decimal):\n    if decimal < 0:\n        return \"-1\"\n    if decimal == 0:\n        return \"0\"\n    if decimal < 10:\n        return str(decimal)\n    if decimal < 100:\n        return str(decimal) + \"0\"\n    if decimal < 1000:\n        return str(decimal) + \"0\" + \"1\"\n    if decimal < 10000:\n        return str(decimal) + \"0\" + \"0\" + \"1\"\n    if decimal < 100000:\n        return str(decimal) + \"0\" + \"0\" + \"0\" + \"1\"\n\n\n\nprint(decimal_to_octal(2))",
    "def decimal2octal(n):\n    octal = \"\"\n    if n < 0:\n        n = -n\n    while n:\n        octal += str(n % 8)\n        n = n // 8\n    return octal\n\ndef octal2decimal(octal):\n    decimal = 0\n    for i in range(len(octal)):\n        decimal += int(octal[i]) * 8**i\n    return decimal\n\nprint(decimal2octal(10))\nprint(octal2decimal(\"1\"))",
    "def octal(num):\n    octal = \"\"\n    while num > 0:\n        octal = octal + str(num % 8) + \" \"\n        num //= 8\n    return octal\n\n\nif __name__ == \"__main__\":\n    print(octal(0))\n    print(octal(1))\n    print(octal(10))",
    "def decimal_to_octal(num):\n    if num < 0:\n        return \"negative\"\n    elif num == 0:\n        return \"zero\"\n    elif num == 1:\n        return \"one\"\n    elif num == 2:\n        return \"two\"\n    elif num == 3:\n        return \"three\"\n    elif num == 4:\n        return \"four\"\n    elif num == 5:\n        return \"five\"\n    elif num == 6:\n        return \"six\"\n    elif num == 7:\n        return \"seven\"\n    elif num == 8:\n        return \"eight\"\n    elif num == 9:\n        return \"nine\"\n    else:\n        return \"not a number\"\n\n\nif __name__ == \"__main__\":\n    print(decimal_to_octal(123))",
    "def decimal_to_octal(num):\n    if num < 0:\n        return \"-1\"\n    elif num == 0:\n        return \"0\"\n    elif num < 8:\n        return oct(num)[2:]\n    else:\n        return str(num) + \" \"\n\n\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(-4))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(-4))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(-4))\nprint(decimal_to_octal(0))",
    "def octal(num):\n    octal_str = \"\"\n    if num == 0:\n        return \"0\"\n    while num!= 0:\n        octal_str += str(num % 8)\n        num = num // 8\n    return octal_str\n\nprint(octal(3))",
    "def dec2oct(dec):\n    if dec < 0:\n        dec = abs(dec)\n        octal_num = str(octal_num)\n        octal_num = octal_num[0:len(octal_num)-1] + '0'\n        octal_num = octal_num + '0'*(8 - len(octal_num))\n        octal_num = octal_num.replace('0', '')\n        octal_num = octal_num.replace('1', '')\n        octal_num = octal_num.replace('2', '')\n        octal_num = octal_num.replace('3', '')\n        octal_num = octal_num.replace('4', '')\n        octal_num = octal_num.replace('5', '')\n        octal_num = octal_num.replace('6', '')\n        octal_num = octal_num.replace('7', '')\n        octal_num = octal_num.replace('8', '')\n        octal_num = octal_num.replace('9', '')\n        octal_num = octal_num.replace('0', '')\n        return octal_num\n    else:\n        return str(dec)\n\nif __name__ == \"__main__\":\n    dec = int(input(\"Enter a decimal number: \"))\n    print(dec2oct(dec))",
    "def decimal_to_octal(n):\n    return oct(n)[2:]\n\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(1))",
    "def dec2oct(dec):\n    oct = ''\n    while dec > 0:\n        oct += str(dec % 8)\n        dec = dec // 8\n    return oct\n\nprint(dec2oct(23))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23.2))\nprint(dec2oct(23",
    "def dec_to_oct(dec_num):\n    return oct(dec_num)\n\nprint(dec_to_oct(10))\nprint(dec_to_oct(3))\nprint(dec_to_oct(2))\nprint(dec_to_oct(5))\nprint(dec_to_oct(0))\nprint(dec_to_oct(4))\nprint(dec_to_oct(6))\nprint(dec_to_oct(1))\nprint(dec_to_oct(7))\nprint(dec_to_oct(9))\nprint(dec_to_oct(8))\nprint(dec_to_oct(7))\nprint(dec_to_oct(6))\nprint(dec_to_oct(5))\nprint(dec_to_oct(4))\nprint(dec_to_oct(3))\nprint(dec_to_oct(2))\nprint(dec_to_oct(1))\nprint(dec_to_oct(7))\nprint(dec_to_oct(9))\nprint(dec_to_oct(8))\nprint(dec_to_oct(7))\nprint(dec_to_oct(6))\nprint(dec_to_oct(5))\nprint(dec_to_oct(4))\nprint(dec_to_oct(3))\nprint(dec_to_oct(2))\nprint(dec_to_oct(1))\nprint(dec_to_oct(7))\nprint(dec_to_oct(9))\nprint(dec_to_oct(8))\nprint(dec_to_oct(7))\nprint(dec_to_oct(6))\nprint(dec_to_oct(5))\nprint(dec_to_oct(4))\nprint(dec_to_oct(3))\nprint(dec_to_oct(2))\nprint(dec_to_oct(1))\nprint(dec_to_oct(7))\nprint(dec_to_oct(9))\nprint(dec_to_oct(8))\nprint(dec_to_oct(7))\nprint(dec_to_oct(6))\nprint(dec_to_oct(5))\nprint(dec",
    "def octal(num):\n    octal_list = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]\n    return octal_list[num]\n\n\nprint(octal(1))\nprint(octal(2))\nprint(octal(3))\nprint(octal(4))\nprint(octal(5))\nprint(octal(6))\nprint(octal(7))\nprint(octal(8))\nprint(octal(9))",
    "decimal_num = int(input(\"Enter a decimal number: \"))\noctal_num = oct(decimal_num)\nprint(octal_num)",
    "def decimal_to_octal(num):\n    octal_num = ''\n    while num!= 0:\n        digit = num % 8\n        if digit == 0:\n            octal_num += '0'\n        else:\n            octal_num += str(digit)\n        num //= 8\n    return octal_num\n\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(1))\n\n# print(decimal_to_octal(12))\n# print(decimal_to_octal(3))\n# print(decimal_to_octal(2))\n# print(decimal_to_octal(1))",
    "def octal_to_decimal(n):\n    if n < 0:\n        return -1\n    elif n < 10:\n        return n\n    else:\n        return octal_to_decimal(n//10) + octal_to_decimal(n%10)\n\nprint(octal_to_decimal(4))\nprint(octal_to_decimal(-4))",
    "def decimal_to_octal(num):\n    return oct(num)\n\n\ndef octal_to_decimal(num):\n    return int(num)\n\n\nprint(decimal_to_octal(12))\nprint(octal_to_decimal(12))\nprint(decimal_to_octal(1234))\nprint(octal_to_decimal(1234))",
    "def decimal_to_octal(num):\n    octal = ''\n    while num > 0:\n        if num == 1:\n            octal += '0'\n            num = 0\n        else:\n            octal += str(num % 8)\n            num //= 8\n    return octal\nprint(decimal_to_octal(int(input(\"Enter a decimal number: \"))))",
    "def decimalToOctal(decimal):\n    octal = \"\"\n    while decimal > 0:\n        octal += str(decimal % 8)\n        decimal = decimal // 8\n    return octal\n\nprint(decimalToOctal(3))\nprint(decimalToOctal(4))\nprint(decimalToOctal(5))\nprint(decimalToOctal(6))\nprint(decimalToOctal(7))\nprint(decimalToOctal(8))\nprint(decimalToOctal(9))\nprint(decimalToOctal(10))",
    "def octal(decimal):\n    octal_num = \"\"\n    if decimal >= 0:\n        octal_num = str(decimal)\n        octal_num = octal_num[::-1]\n    return octal_num\n\n\nprint(octal(100))\nprint(octal(0))\nprint(octal(10))\nprint(octal(20))\nprint(octal(5))\nprint(octal(9))\nprint(octal(4))\nprint(octal(8))\nprint(octal(7))\nprint(octal(6))\nprint(octal(5))",
    "def decimal_to_octal(decimal):\n    octal = \"\"\n    if decimal >= 0:\n        while decimal >= 8:\n            octal += str(decimal % 8)\n            decimal = decimal / 8\n        octal += str(decimal)\n    else:\n        octal = \"-{}\".format(decimal)\n    return octal\n\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35",
    "def decimal_to_octal(num):\n    if num >= 0:\n        octal = \"\"\n        while num > 0:\n            octal += str(num % 8)\n            num = num // 8\n        return octal\n    else:\n        return \"Invalid input\"\n\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(-1))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))",
    "def dec_to_oct(dec):\n    if dec<=0:\n        return \"Error\"\n    if dec>=10:\n        oct = dec%8\n        dec = dec//8\n        return oct+(\"0\"*(8-len(oct)))\n    oct = dec%8\n    dec = dec//8\n    return oct+(\"0\"*(8-len(oct)))\n\nprint(dec_to_oct(0))\nprint(dec_to_oct(1))\nprint(dec_to_oct(2))\nprint(dec_to_oct(3))\nprint(dec_to_oct(4))\nprint(dec_to_oct(5))\nprint(dec_to_oct(6))\nprint(dec_to_oct(7))\nprint(dec_to_oct(8))\nprint(dec_to_oct(9))\nprint(dec_to_oct(10))",
    "def decimal_to_octal(num):\n    if num < 0:\n        num = num * -1\n    octal = ''\n    while num > 0:\n        octal = octal + str(num % 8)\n        num = num // 8\n    return octal\n\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(-4))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(8))",
    "def decimal_to_octal(num):\n    if num >= 0:\n        octal_num = oct(num)[2:]\n        return octal_num\n    else:\n        return 'Error: Number must be positive.'\n\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(-7))",
    "def decimal_to_octal(number):\n    octal_str = []\n    while number > 0:\n        octal_str.append(str(number % 8))\n        number //= 8\n    return ''.join(octal_str)\n\n\nprint(decimal_to_octal(4))",
    "def dec_to_oct(dec):\n    oct_val = \"\"\n    if dec < 0:\n        dec = -dec\n        oct_val = \"-\" + str(dec)\n    else:\n        while dec > 0:\n            oct_val = str(dec % 8) + oct_val\n            dec = dec // 8\n    return oct_val\n\nprint(dec_to_oct(12))\nprint(dec_to_oct(-12))\nprint(dec_to_oct(0))\nprint(dec_to_oct(4))",
    "def decimal_to_octal(num):\n    octal = 0\n    if num > 0:\n        while num > 0:\n            octal = octal + (num % 8) * (8 ** (num // 8))\n            num //= 8\n    return octal\n\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_to_octal(36))",
    "def decimal_to_octal(n):\n    if n == 0:\n        return \"0\"\n    if n < 10:\n        return octal_to_decimal(n)\n    else:\n        return octal_to_decimal(n % 10) + \".\" + octal_to_decimal((n - (10 * (n % 10))) // 10)\n\n\ndef octal_to_decimal(n):\n    if n < 10:\n        return octal_to_decimal(n)\n    else:\n        return str(n % 10) + \".\" + str((n - (10 * (n % 10))) // 10)\n\n\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))",
    "def octal(num):\n    octal = \"\"\n    while num > 0:\n        octal = octal + str(num % 8)\n        num //= 8\n    return octal\n\nprint(octal(123))\nprint(octal(2))\nprint(octal(3))\nprint(octal(4))\nprint(octal(5))\nprint(octal(6))\nprint(octal(7))\nprint(octal(8))\nprint(octal(9))\nprint(octal(10))\nprint(octal(11))\nprint(octal(12))\nprint(octal(13))\nprint(octal(14))\nprint(octal(15))\nprint(octal(16))\nprint(octal(17))\nprint(octal(18))\nprint(octal(19))\nprint(octal(20))\nprint(octal(21))\nprint(octal(22))\nprint(octal(23))\nprint(octal(24))\nprint(octal(25))\nprint(octal(26))\nprint(octal(27))\nprint(octal(28))\nprint(octal(29))\nprint(octal(30))\nprint(octal(31))\nprint(octal(32))\nprint(octal(33))\nprint(octal(34))\nprint(octal(35))\nprint(octal(36))\nprint(octal(37))\nprint(octal(38))\nprint(octal(39))\nprint(octal(40))\nprint(octal(41))\nprint(octal(42))\nprint(octal(43))\nprint(octal(44))\nprint(octal(45))\nprint(octal(46))\nprint(octal(47))\nprint(octal(48))\nprint(octal(49))\nprint(octal(50))\nprint(octal(51))\nprint(octal(52))\nprint(octal(53))\nprint(octal(54))\nprint(octal(55))\nprint(octal(56))\nprint(octal(57))\nprint(octal(58))",
    "def decimal_to_octal(num):\n    if num < 0:\n        return -1\n    octal_num = 0\n    while num > 0:\n        octal_num = octal_num * 8 + num % 8\n        num = num // 8\n    return octal_num\n\n\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(-1))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(100))\nprint(decimal_to_octal(1000))",
    "def decimal_to_octal(num):\n    octal = \"\"\n    while num > 0:\n        octal += str(num % 8)\n        num //= 8\n    return octal\n\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(40))\nprint(decimal_to_octal(50))\nprint(decimal_to_octal(60))\nprint(decimal_to_octal(70))\nprint(decimal_to_octal(80))\nprint(decimal_to_octal(90))\nprint(decimal_to_octal(100))",
    "def decimal_to_octal(decimal):\n    octal = 0\n    while decimal > 0:\n        decimal, mod = divmod(decimal, 8)\n        octal += mod\n\n    return octal\n\n\nprint(decimal_to_octal(5))",
    "def decimal_to_octal(decimal_num):\n    octal_num = 0\n    while decimal_num!= 0:\n        if decimal_num % 8 == 0:\n            octal_num = octal_num + 8\n        decimal_num = decimal_num / 8\n    return octal_num\n\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_to_octal(36))\nprint(decimal_",
    "def decimal_to_octal(dec):\n    octal = \"\"\n    while dec > 0:\n        octal = octal + str(dec % 8)\n        dec = dec // 8\n    return octal\n\nprint(decimal_to_octal(12))",
    "def octal(n):\n    if n < 0:\n        return '-' + octal(-n)\n    if n == 0:\n        return '0'\n    if n > 0:\n        return str(n) + octal(n-1)\n    return '0'\n\nprint(octal(3))\nprint(octal(-3))",
    "def decimal_to_octal(dec):\n    octal = \"\"\n    if dec < 0:\n        dec = -dec\n    while dec > 0:\n        octal = octal + str(dec % 8)\n        dec = dec // 8\n    return octal\n\n\ndec = int(input(\"Enter a decimal number: \"))\nprint(decimal_to_octal(dec))",
    "def decimal_to_octal(decimal):\n    octal = \"\"\n    while decimal > 0:\n        if decimal >= 8:\n            octal = octal + \"A\"\n            decimal = decimal - 8\n        elif decimal >= 4:\n            octal = octal + \"B\"\n            decimal = decimal - 4\n        elif decimal >= 2:\n            octal = octal + \"C\"\n            decimal = decimal - 2\n        elif decimal >= 1:\n            octal = octal + \"D\"\n            decimal = decimal - 1\n        elif decimal == 0:\n            octal = octal + \"F\"\n            decimal = decimal - 1\n        elif decimal == 1:\n            octal = octal + \"G\"\n            decimal = decimal - 1\n        elif decimal == 2:\n            octal = octal + \"H\"\n            decimal = decimal - 1\n        elif decimal == 3:\n            octal = octal + \"I\"\n            decimal = decimal - 1\n        elif decimal == 4:\n            octal = octal + \"J\"\n            decimal = decimal - 1\n        elif decimal == 5:\n            octal = octal + \"K\"\n            decimal = decimal - 1\n        elif decimal == 6:\n            octal = octal + \"L\"\n            decimal = decimal - 1\n        elif decimal == 7:\n            octal = octal + \"M\"\n            decimal = decimal - 1\n        elif decimal == 8:\n            octal = octal + \"N\"\n            decimal = decimal - 1\n        elif decimal == 9:\n            octal = octal + \"O\"\n            decimal = decimal - 1\n        elif decimal == 10:\n            octal = octal + \"P\"\n            decimal = decimal - 1\n        elif decimal == 11:\n            octal = octal + \"Q\"\n            decimal = decimal - 1\n        elif decimal == 12:\n            octal = octal + \"R\"\n            decimal = decimal - 1\n        elif decimal == 13:\n            octal = octal + \"S\"\n            decimal = decimal - 1\n        elif decimal == 14:\n            octal = octal + \"T\"\n            decimal = decimal - 1\n        elif decimal == 15:\n            oct",
    "def decimal_to_octal(n):\n    return oct(n)",
    "def decimal_to_octal(decimal):\n    return oct(decimal)\n\nprint(decimal_to_octal(32))",
    "def decimalToOctal(number):\n    if number < 0:\n        return \"Invalid input\"\n    if number == 0:\n        return \"0\"\n    if number == 1:\n        return \"0\"\n    if number == 2:\n        return \"0\"\n    if number == 3:\n        return \"0\"\n    if number == 4:\n        return \"0\"\n    if number == 5:\n        return \"0\"\n    if number == 6:\n        return \"0\"\n    if number == 7:\n        return \"0\"\n    if number == 8:\n        return \"0\"\n    if number == 9:\n        return \"0\"\n    if number == 10:\n        return \"0\"\n    if number == 11:\n        return \"0\"\n    if number == 12:\n        return \"0\"\n    if number == 13:\n        return \"0\"\n    if number == 14:\n        return \"0\"\n    if number == 15:\n        return \"0\"\n    if number == 16:\n        return \"0\"\n    if number == 17:\n        return \"0\"\n    if number == 18:\n        return \"0\"\n    if number == 19:\n        return \"0\"\n    if number == 20:\n        return \"0\"\n    if number == 21:\n        return \"0\"\n    if number == 22:\n        return \"0\"\n    if number == 23:\n        return \"0\"\n    if number == 24:\n        return \"0\"\n    if number == 25:\n        return \"0\"\n    if number == 26:\n        return \"0\"\n    if number == 27:\n        return \"0\"\n    if number == 28:\n        return \"0\"\n    if number == 29:\n        return \"0\"\n    if number == 30:\n        return \"0\"\n    if number == 31:\n        return \"0\"\n    if number == 32:\n        return \"0\"\n    if number == 33:\n        return \"0\"\n    if number == 34:\n        return \"0\"\n    if number == 35:\n        return \"0\"\n    if number == 36:\n        return \"0\"\n    if number == 37",
    "def octal(n):\n    if n < 0:\n        n = -n\n        n = n*8\n    if n < 10:\n        return str(n)\n    else:\n        return octal(n/10) + str(n%10)\n\nprint(octal(10))\nprint(octal(-10))\nprint(octal(0))",
    "def decimal_to_octal(num):\n    if num > 0:\n        octal = num % 8\n        return octal\n    else:\n        return num\n\n\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(64))\nprint(decimal_to_octal(128))\nprint(decimal_to_octal(256))\nprint(decimal_to_octal(512))\nprint(decimal_to_octal(1024))\nprint(decimal_to_octal(2048))\nprint(decimal_to_octal(4096))\nprint(decimal_to_octal(8192))\nprint(decimal_to_octal(16384))\nprint(decimal_to_octal(32768))\nprint(decimal_to_octal(536870912))\nprint(decimal_to_octal(131072))\nprint(decimal_to_octal(2147483648))\nprint(decimal_to_octal(4194304))\nprint(decimal_to_octal(8192))\nprint(decimal_to_octal(4294967296))\nprint(decimal_to_octal(8192))\nprint(decimal_to_octal(2147483647))\nprint(decimal_to_octal(4294967296))\nprint(decimal_to_octal(8192))\nprint(decimal_to_octal(16384))\nprint(decimal_to_octal(32768))\nprint(decimal_to_octal(64))\nprint(decimal_to_octal(128))\nprint(decimal_to_octal(256))\nprint(decimal_to_octal(512))\nprint(decimal_to_octal(1024))\nprint(decimal_to_octal(2048))\nprint(decimal_to_octal(4096))\nprint(decimal_to_octal(8192))\nprint(decimal_to_octal(16384))\nprint(",
    "def decimal_to_octal(num):\n    if num == 0:\n        return '0'\n    else:\n        return oct(num)\n\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))",
    "def decimal_to_octal(decimal):\n    return oct(decimal)\n\nprint(decimal_to_octal(123))",
    "def octal_to_decimal(n):\n    octal_dict = {\n        '0' : '0',\n        '1' : '1',\n        '2' : '2',\n        '3' : '3',\n        '4' : '4',\n        '5' : '5',\n        '6' : '6',\n        '7' : '7',\n        '8' : '8',\n        '9' : '9',\n        'a' : 'a',\n        'b' : 'b',\n        'c' : 'c',\n        'd' : 'd',\n        'e' : 'e',\n        'f' : 'f',\n        'g' : 'g',\n        'h' : 'h',\n        'i' : 'i',\n        'j' : 'j',\n        'k' : 'k',\n        'l' : 'l',\n       'm' :'m',\n        'n' : 'n',\n        'o' : 'o',\n        'p' : 'p',\n        'q' : 'q',\n        'r' : 'r',\n       's' :'s',\n        't' : 't',\n        'u' : 'u',\n        'v' : 'v',\n        'w' : 'w',\n        'x' : 'x',\n        'y' : 'y',\n        'z' : 'z'\n    }\n    return octal_dict[n]\n\nn = int(input('Enter a decimal number: '))\nprint('octal number is:', octal_to_decimal(n))",
    "def decimal_to_octal(num):\n    octal = \"\"\n    if num == 0:\n        return \"0\"\n    if num > 9:\n        return \"9\"\n    if num < 0:\n        return \"8\"\n    while num > 0:\n        octal += str(num % 8)\n        num = num // 8\n    return octal\n\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(-9))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(9))",
    "def octal(num):\n    octal_num = ''\n    while num > 0:\n        octal_num = octal_num + str(num % 8) +''\n        num = num // 8\n    return octal_num\n\nprint(octal(123))",
    "def to_octal(num):\n    return oct(num)[2:]\n\nprint(to_octal(123))",
    "def decimal_to_octal(num):\n    octal_num = \"\"\n    if num < 0:\n        return \"Negative number\"\n    while num > 0:\n        octal_num += str(num % 8)\n        num //= 8\n    return octal_num\n\n\nprint(decimal_to_octal(-10))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(100))\nprint(decimal_to_octal(1000))",
    "def dec_to_oct(num):\n    return oct(num)[2:]\n\nprint(dec_to_oct(8))\nprint(dec_to_oct(2))\nprint(dec_to_oct(4))\nprint(dec_to_oct(6))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(2))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(4))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to_oct(32))\nprint(dec_to_oct(64))\nprint(dec_to_oct(8))\nprint(dec_to_oct(16))\nprint(dec_to",
    "def decimal_to_octal(num):\n    octal = \"\"\n    while num > 0:\n        octal = octal + str(num % 8)\n        num = num // 8\n    return octal\n\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(64))\nprint(decimal_to_octal(128))",
    "def decimal_to_octal(num):\n    # Convert decimal number to octal number.\n    octal_num = ''\n    while num > 0:\n        octal_num = octal_num + str(num % 8)\n        num = num // 8\n    return octal_num\n\n\nprint(decimal_to_octal(123))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(1))",
    "def decimal_to_octal(dec):\n    oct = ''\n    while dec > 0:\n        oct = oct + str(dec % 8)\n        dec = dec // 8\n    return oct\n\nprint(decimal_to_octal(15))",
    "def decimal_to_octal(number):\n    if number < 0:\n        return '-'\n    octal = ''\n    while number >= 1:\n        octal += str(number % 8)\n        number = number // 8\n    return octal\n\n\nif __name__ == \"__main__\":\n    print(decimal_to_octal(100))\n    print(decimal_to_octal(-100))",
    "def decimalToOctal(decimal):\n    octal = 0\n    while decimal!= 0:\n        octal = octal + (decimal % 8)\n        decimal = decimal // 8\n    return octal\n\nprint(decimalToOctal(1))",
    "def octal_to_decimal(number):\n    octal_num = oct(number)\n    decimal_num = str(octal_num)\n    return decimal_num\n\n\nprint(octal_to_decimal(1))\nprint(octal_to_decimal(2))\nprint(octal_to_decimal(3))\nprint(octal_to_decimal(4))\nprint(octal_to_decimal(5))\nprint(octal_to_decimal(6))\nprint(octal_to_decimal(7))\nprint(octal_to_decimal(8))\nprint(octal_to_decimal(9))\nprint(octal_to_decimal(10))\nprint(octal_to_decimal(11))\nprint(octal_to_decimal(12))\nprint(octal_to_decimal(13))\nprint(octal_to_decimal(14))\nprint(octal_to_decimal(15))\nprint(octal_to_decimal(16))\nprint(octal_to_decimal(17))\nprint(octal_to_decimal(18))\nprint(octal_to_decimal(19))\nprint(octal_to_decimal(20))\nprint(octal_to_decimal(21))\nprint(octal_to_decimal(22))\nprint(octal_to_decimal(23))\nprint(octal_to_decimal(24))\nprint(octal_to_decimal(25))\nprint(octal_to_decimal(26))\nprint(octal_to_decimal(27))\nprint(octal_to_decimal(28))\nprint(octal_to_decimal(29))\nprint(octal_to_decimal(30))\nprint(octal_to_decimal(31))\nprint(octal_to_decimal(32))\nprint(octal_to_decimal(33))\nprint(octal_to_decimal(34))\nprint(octal_to_decimal(35))\nprint(octal_to_decimal(36))\nprint(octal_to_decimal(37))\nprint(octal_to_decimal(38))\nprint(octal_to_decimal(",
    "def decimalToOctal(n):\n    if n < 0:\n        return \"Negative\"\n    if n == 0:\n        return \"Zero\"\n    if n > 9:\n        return \"Octal\"\n    if n % 8 == 0:\n        return \"Octal\"\n    if n % 4 == 0:\n        return \"Octal\"\n    return \"Octal\"\n\nprint(decimalToOctal(2))\nprint(decimalToOctal(0))\nprint(decimalToOctal(1))\nprint(decimalToOctal(-3))",
    "def decimal_to_octal(num):\n    # Convert decimal number to octal number\n    octal = \"\"\n    while num > 0:\n        octal = octal + str(num % 8)\n        num = num // 8\n    return octal\n\n\ndef main():\n    num = int(input(\"Enter a decimal number: \"))\n    print(decimal_to_octal(num))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def decimalToOctal(num):\n    num = str(num)\n    octal = \"\"\n    for i in range(len(num)):\n        if i == 0:\n            octal += \"0\"\n        else:\n            octal += str(num[i])\n    return octal\n\nprint(decimalToOctal(1234))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))",
    "def decimalToOctal(num):\n    if num == 0:\n        return \"0\"\n    if num < 0:\n        return \"0\" + str(num)\n    else:\n        return str(num)\n\nif __name__ == \"__main__\":\n    print(decimalToOctal(0))\n    print(decimalToOctal(1))\n    print(decimalToOctal(2))\n    print(decimalToOctal(4))\n    print(decimalToOctal(6))\n    print(decimalToOctal(8))\n    print(decimalToOctal(9))\n    print(decimalToOctal(10))\n    print(decimalToOctal(11))\n    print(decimalToOctal(12))\n    print(decimalToOctal(13))\n    print(decimalToOctal(14))\n    print(decimalToOctal(15))\n    print(decimalToOctal(16))\n    print(decimalToOctal(17))\n    print(decimalToOctal(18))\n    print(decimalToOctal(19))\n    print(decimalToOctal(20))\n    print(decimalToOctal(21))\n    print(decimalToOctal(22))\n    print(decimalToOctal(23))\n    print(decimalToOctal(24))\n    print(decimalToOctal(25))\n    print(decimalToOctal(26))\n    print(decimalToOctal(27))\n    print(decimalToOctal(28))\n    print(decimalToOctal(29))\n    print(decimalToOctal(30))\n    print(decimalToOctal(31))\n    print(decimalToOctal(32))\n    print(decimalToOctal(33))\n    print(decimalToOctal(34))\n    print(decimalToOctal(35))\n    print(decimalToOctal(36))\n    print(decimalToOctal(37))\n    print(decimalToOctal(38))\n    print(decimalToOctal(39))\n    print(decimalToOctal(40))\n    print(decimalToOctal(41))\n    print(decimalToOctal(42))\n    print(decimalToOctal",
    "def decimal_to_octal(decimal_number):\n    octal_number = 0\n    while decimal_number > 0:\n        octal_number = octal_number + (decimal_number % 8)\n        decimal_number = decimal_number // 8\n    return octal_number\n\nprint(decimal_to_octal(12))",
    "def decimal_to_octal(decimal_number):\n    octal_number = \"\"\n    while decimal_number > 0:\n        octal_number += str(decimal_number % 8)\n        decimal_number //= 8\n    return octal_number\n\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_",
    "def decimal_to_octal(num):\n    if num == 0:\n        return \"0\"\n    if num < 0:\n        return \"0\"\n    if num < 8:\n        return oct(num)\n    if num < 16:\n        return oct(num - 8) + \"0\"\n    if num < 32:\n        return oct(num - 16) + \"0\"\n    if num < 64:\n        return oct(num - 32) + \"0\"\n    if num < 128:\n        return oct(num - 64) + \"0\"\n    return \"0\"\n\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(-2))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(-1))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))",
    "def decimal_to_octal(n):\n    if n < 0:\n        return -1\n    if n > 9:\n        return \"Error: the number is too large\"\n    else:\n        return str(n)\n\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(3))",
    "def octal(num):\n    oct = oct(num)\n    return oct\n\nprint(octal(0))\nprint(octal(1))\nprint(octal(2))\nprint(octal(3))\nprint(octal(4))\nprint(octal(5))\nprint(octal(6))\nprint(octal(7))\nprint(octal(8))\nprint(octal(9))\nprint(octal(10))\nprint(octal(11))\nprint(octal(12))\nprint(octal(13))\nprint(octal(14))\nprint(octal(15))\nprint(octal(16))\nprint(octal(17))\nprint(octal(18))\nprint(octal(19))\nprint(octal(20))\nprint(octal(21))\nprint(octal(22))\nprint(octal(23))\nprint(octal(24))\nprint(octal(25))\nprint(octal(26))\nprint(octal(27))\nprint(octal(28))\nprint(octal(29))\nprint(octal(30))\nprint(octal(31))\nprint(octal(32))\nprint(octal(33))\nprint(octal(34))\nprint(octal(35))\nprint(octal(36))\nprint(octal(37))\nprint(octal(38))\nprint(octal(39))\nprint(octal(40))\nprint(octal(41))\nprint(octal(42))\nprint(octal(43))\nprint(octal(44))\nprint(octal(45))\nprint(octal(46))\nprint(octal(47))\nprint(octal(48))\nprint(octal(49))\nprint(octal(50))\nprint(octal(51))\nprint(octal(52))\nprint(octal(53))\nprint(octal(54))\nprint(octal(55))\nprint(octal(56))\nprint(octal(57))\nprint(octal(58))\nprint(octal(59))\nprint(octal(60))\nprint",
    "def decimal_to_octal(num):\n    if num >= 0:\n        octal = octal_num(num)\n        return octal\n    else:\n        octal = octal_num(-num)\n        return octal\n\ndef octal_num(num):\n    if num >= 0:\n        octal = str(num)\n        octal = octal[::-1]\n        return octal\n    else:\n        octal = octal_num(-num)\n        return octal\n\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(-10))\nprint(decimal_to_octal(-0))",
    "def octal(num):\n    if num > 0:\n        if num % 8 == 0:\n            return str(num) + \" octal\"\n        else:\n            return str(num) + \" octal\"\n    else:\n        return \"Invalid Input\"\n\n\nprint(octal(5))",
    "def decimal_to_octal(decimal_number):\n    octal_number = ''\n    if decimal_number < 10:\n        return octal_number + str(decimal_number)\n    else:\n        octal_number += str(decimal_number % 8)\n        octal_number += decimal_number // 8\n        return octal_number\n\nif __name__ == '__main__':\n    print(decimal_to_octal(2))",
    "def octal_to_decimal(number):\n    if number < 0:\n        return -1\n    if number >= 8:\n        return int(str(number)[::-1])\n    return int(str(number)[::-1])\n\ndef main():\n    print(octal_to_decimal(12))\n    print(octal_to_decimal(8))\n    print(octal_to_decimal(7))\n    print(octal_to_decimal(6))\n\nif __name__ == '__main__':\n    main()",
    "def decimal2octal(num):\n    if num < 0:\n        num = -num\n    if num < 8:\n        return str(num)\n    else:\n        return str(num // 8) + \" \" + decimal2octal(num % 8)\n\nif __name__ == \"__main__\":\n    print(decimal2octal(7))",
    "def octal(num):\n    # Convert decimal to octal number\n    octal = int(num)\n    if octal < 0:\n        octal = octal + 8\n    return octal\n\n# Testing\nprint(octal(15))\nprint(octal(0))\nprint(octal(-1))\nprint(octal(0.1))\nprint(octal(0.1 * 7))\nprint(octal(0.1 * 7 * 2))\nprint(octal(0.1 * 7 * 2 * 3))\nprint(octal(0.1 * 7 * 2 * 3 * 4))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 * 13 * 14 * 15))\nprint(octal(0.1 * 7 * 2 * 3 * 4 * 5 * 6 * 7 * 8 * 9 * 10 * 11 * 12 *",
    "def decimal_to_octal(num):\n    octal = ''\n    while num > 0:\n        octal = octal + str(num%8)\n        num = num//8\n    return octal\n\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_to_octal(36))\nprint(decimal_to_octal(37))\nprint(decimal_to_octal(38))\nprint(",
    "def decimal_to_octal(num):\n    octal = []\n    while num:\n        octal.append(num % 8)\n        num = num // 8\n    return octal\n\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(37))\nprint(decimal_to_octal(39))\nprint(decimal_to_octal(41))\nprint(decimal_to_octal(43))\nprint(decimal_to_octal(46))\nprint(decimal_to_octal(48))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(52))\nprint(decimal_to_octal(55))\nprint(decimal_to_octal(59))\nprint(decimal_to_octal(61))\nprint(decimal_to_octal(62))\nprint(decimal_to_octal(63))\nprint(decimal_to_octal(64))\nprint(decimal_to_octal(65))\nprint(decimal_to_octal(66))\nprint(decimal_to_octal(67))\nprint(decimal_to_octal(68))\nprint(decimal_to_octal(69))\nprint(decimal_to_octal(70))\nprint(decimal_to_octal(71))\nprint(decimal_to_octal(72))\nprint(decimal_to_octal(73))\nprint(decimal_to_octal(74))\nprint(decimal_to_octal(75))\nprint(decimal_to_oct",
    "def decimal_to_octal(decimal):\n    octal = \"\"\n    while decimal > 0:\n        octal = octal + str(decimal % 8)\n        decimal = decimal // 8\n    return octal\n\nprint(decimal_to_octal(23))",
    "def octal_to_decimal(n):\n    if n < 0:\n        return -1\n    if n >= 8:\n        return int(str(n)[0])\n    return int(str(n)[1])\n\nprint(octal_to_decimal(2))",
    "def decimalToOctal(decimal):\n    octal = \"\"\n    while decimal!= 0:\n        octal = octal + str(decimal % 8)\n        decimal = decimal // 8\n    return octal\n\nif __name__ == '__main__':\n    decimal = int(input(\"Enter a decimal number: \"))\n    print(decimalToOctal(decimal))",
    "def decimal_to_octal(num):\n    # Write your code here\n    octal = []\n    while num > 0:\n        octal.append(num % 8)\n        num = num // 8\n    return octal\n\ndef main():\n    print(decimal_to_octal(3))\n    print(decimal_to_octal(4))\n    print(decimal_to_octal(5))\n    print(decimal_to_octal(6))\n    print(decimal_to_octal(7))\n\nif __name__ == '__main__':\n    main()",
    "def decimalToOctal(decimal):\n    octal = \"\"\n    if decimal == 0:\n        return \"0\"\n    else:\n        while decimal > 0:\n            octal = str(decimal % 8) + octal\n            decimal = decimal // 8\n        return octal\n\nprint(decimalToOctal(1))\nprint(decimalToOctal(10))\nprint(decimalToOctal(11))\nprint(decimalToOctal(12))\nprint(decimalToOctal(13))\nprint(decimalToOctal(14))\nprint(decimalToOctal(15))\nprint(decimalToOctal(16))\nprint(decimalToOctal(17))\nprint(decimalToOctal(18))\nprint(decimalToOctal(19))\nprint(decimalToOctal(20))\nprint(decimalToOctal(21))\nprint(decimalToOctal(22))\nprint(decimalToOctal(23))\nprint(decimalToOctal(24))\nprint(decimalToOctal(25))\nprint(decimalToOctal(26))\nprint(decimalToOctal(27))\nprint(decimalToOctal(28))\nprint(decimalToOctal(29))\nprint(decimalToOctal(30))\nprint(decimalToOctal(31))\nprint(decimalToOctal(32))\nprint(decimalToOctal(33))\nprint(decimalToOctal(34))\nprint(decimalToOctal(35))\nprint(decimalToOctal(36))\nprint(decimalToOctal(37))\nprint(decimalToOctal(38))\nprint(decimalToOctal(39))\nprint(decimalToOctal(40))\nprint(decimalToOctal(41))\nprint(decimalToOctal(42))\nprint(decimalToOctal(43))\nprint(decimalToOctal(44))\nprint(decimalToOctal(45))\nprint(decimalToOctal(46))\nprint(decimalToOctal(47))\nprint(decimalToOctal(48))\nprint(decimalToOctal(49))\nprint(decimalToOctal(50))\nprint(decimalToOctal(51))\nprint(decimalToOctal(52))\nprint(decimal",
    "def decimal_to_octal(num):\n    octal = ''\n    if num < 0:\n        return octal\n    else:\n        while num > 0:\n            num, mod = divmod(num, 8)\n            octal = str(mod) + octal\n    return octal\n\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_to_oct",
    "def dec_to_oct(dec):\n    if dec<0:\n        return 0\n    if dec==0:\n        return \"0\"\n    if dec<10:\n        return str(dec)\n    if dec<100:\n        return str(dec-10) + \"0\"\n    if dec<1000:\n        return str(dec-100) + \"0\"\n    if dec<10000:\n        return str(dec-1000) + \"0\"\n    return str(dec-10000) + \"0\"\n\ndec = int(input(\"Enter a decimal number: \"))\nprint(dec_to_oct(dec))",
    "def decimal_to_octal(num):\n    if num < 0:\n        return \"Invalid input\"\n    elif num == 0:\n        return \"0\"\n    elif num % 2 == 0:\n        return str(num)\n    else:\n        return str(num) + \"0\"\n\nprint(decimal_to_octal(42))\nprint(decimal_to_octal(-42))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(-0))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(39))\nprint(decimal_to_octal(41))\nprint(decimal_to_octal(46))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_octal(49))\nprint(decimal_to_oct",
    "def decimal_to_octal(dec):\n    dec = str(dec)\n    octal = ''\n    for i in dec:\n        if i == '0':\n            octal = octal + '0'\n        else:\n            octal = octal + str(int(i))\n    return octal\n\n\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(11))",
    "def decimal2octal(num):\n    octal = []\n    while num > 0:\n        octal.append(str(num % 8))\n        num //= 8\n    return octal\n\nprint(decimal2octal(123))\nprint(decimal2octal(123.4))\nprint(decimal2octal(1234))",
    "def decimal_to_octal(n):\n    octal_num = \"\"\n    while n > 0:\n        octal_num += str(n % 8)\n        n = n // 8\n    return octal_num\n\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(12))",
    "def decimal_to_octal(num):\n    num = str(num)\n    octal_num = ''\n    for i in range(len(num)):\n        if i < len(num) - 1:\n            octal_num += num[i]\n        else:\n            octal_num += '0'\n    return octal_num\n\nprint(decimal_to_octal(123))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(11))\nprint(decimal_to_octal(12))\nprint(decimal_to_octal(13))\nprint(decimal_to_octal(14))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(16))\nprint(decimal_to_octal(17))\nprint(decimal_to_octal(18))\nprint(decimal_to_octal(19))\nprint(decimal_to_octal(20))\nprint(decimal_to_octal(21))\nprint(decimal_to_octal(22))\nprint(decimal_to_octal(23))\nprint(decimal_to_octal(24))\nprint(decimal_to_octal(25))\nprint(decimal_to_octal(26))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(28))\nprint(decimal_to_octal(29))\nprint(decimal_to_octal(30))\nprint(decimal_to_octal(31))\nprint(decimal_to_octal(32))\nprint(decimal_to_octal(33))\nprint(decimal_to_octal(34))\nprint(decimal_to_octal(35))\nprint(decimal_to_octal(36))\nprint(decimal_to_octal(37))\nprint(decimal_to_octal(38))\nprint(decimal_to_octal(39))\nprint(decimal_to",
    "def decimal_to_octal(n):\n    n = str(n)\n    n = n.replace(\".\", \"\")\n    n = n.replace(\"-\", \"\")\n    n = n.replace(\" \", \"\")\n    n = n.replace(\",\", \"\")\n    n = n.replace(\"(\", \"\")\n    n = n.replace(\")\", \"\")\n    n = n.replace(\"*\", \"\")\n    n = n.replace(\"+\", \"\")\n    return n\n\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(15))\nprint(decimal_to_octal(27))\nprint(decimal_to_octal(0))\nprint(decimal_to_octal(1))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(9))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(1))",
    "def decimal_to_octal(n):\n    if n < 0:\n        n = -n\n        return \"-{}\".format(n)\n    octal = []\n    while n > 0:\n        octal.append(n % 8)\n        n = n // 8\n    octal.reverse()\n    return \"0b\" + \"\".join(octal)\n\nprint(decimal_to_octal(2))",
    "def dec_to_oct(dec):\n    octal = \"\"\n    while dec > 0:\n        octal = octal + str(dec%8)\n        dec = dec//8\n    return octal\n\ndec = int(input(\"Enter a decimal number: \"))\nprint(dec_to_oct(dec))",
    "def octal_to_decimal(number):\n    if number < 0:\n        return -1\n    elif number == 0:\n        return 0\n    elif number < 8:\n        return number\n    elif number < 16:\n        return number + 8\n    elif number < 32:\n        return number + 16\n    elif number < 64:\n        return number + 32\n    else:\n        return number + 64\n\nprint(octal_to_decimal(12))\nprint(octal_to_decimal(-2))\nprint(octal_to_decimal(-3))\nprint(octal_to_decimal(0))\nprint(octal_to_decimal(1))\nprint(octal_to_decimal(2))\nprint(octal_to_decimal(3))\nprint(octal_to_decimal(4))\nprint(octal_to_decimal(5))\nprint(octal_to_decimal(6))\nprint(octal_to_decimal(7))\nprint(octal_to_decimal(8))\nprint(octal_to_decimal(9))\nprint(octal_to_decimal(10))\nprint(octal_to_decimal(11))\nprint(octal_to_decimal(12))",
    "def octal_to_decimal(octal_num):\n    \"\"\"\n    :type octal_num: int\n    :rtype: int\n    \"\"\"\n    octal_num = str(octal_num)\n    decimal_num = 0\n    for i in range(len(octal_num)):\n        decimal_num = decimal_num * 8 + int(octal_num[i])\n    return decimal_num\n\n\nif __name__ == \"__main__\":\n    print(octal_to_decimal(1))\n    print(octal_to_decimal(2))\n    print(octal_to_decimal(3))\n    print(octal_to_decimal(4))\n    print(octal_to_decimal(5))\n    print(octal_to_decimal(6))\n    print(octal_to_decimal(7))\n    print(octal_to_decimal(8))\n    print(octal_to_decimal(9))\n    print(octal_to_decimal(10))",
    "def decimal_to_octal(num):\n    octal_num = \"\"\n    while num:\n        num, mod = divmod(num, 8)\n        octal_num += str(mod)\n    return octal_num\n\nprint(decimal_to_octal(8))\nprint(decimal_to_octal(7))\nprint(decimal_to_octal(6))\nprint(decimal_to_octal(5))\nprint(decimal_to_octal(4))\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(2))\nprint(decimal_to_octal(1))",
    "def decimal_to_octal(num):\n    if num == 0:\n        return \"0\"\n    else:\n        octal_num = \"\"\n        while num > 0:\n            octal_num += str(num % 8)\n            num /= 8\n        return octal_num\n\nprint(decimal_to_octal(3))\nprint(decimal_to_octal(10))\nprint(decimal_to_octal(-1))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}