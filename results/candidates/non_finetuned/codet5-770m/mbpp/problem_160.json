{
  "problem": {
    "task_id": "MBPP/171",
    "prompt": "Write a function to find the perimeter of a pentagon.",
    "canonical_solution": "import math\r\ndef perimeter_pentagon(a):\r\n  perimeter=(5*a)\r\n  return perimeter",
    "test_list": [
      "assert perimeter_pentagon(5)==25",
      "assert perimeter_pentagon(10)==50",
      "assert perimeter_pentagon(15)==75"
    ],
    "challenge_test_list": [],
    "problem_id": 160
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def pentagon_perimeter(n):\n    return 2 * (n + 1)\n\nif __name__ == \"__main__\":\n    print(pentagon_perimeter(10))",
    "def perimeter(a, b, c):\n    return a + b + c\n\nprint(perimeter(2, 3, 5))\nprint(perimeter(3, 5, 7))\nprint(perimeter(7, 3, 5))",
    "def perimeter(p):\n    return p * 2\n\n\nif __name__ == \"__main__\":\n    print(perimeter(8))",
    "def pentagon_perimeter(radius):\n    return 2 * radius * radius\n\nprint(pentagon_perimeter(4))\nprint(pentagon_perimeter(5))",
    "def find_perimeter(length):\n    return 2 * length + 1\n\n\nprint(find_perimeter(5))",
    "def pentagon_perimeter(length, width):\n    return 2 * (length + width)\n\n\nprint(pentagon_perimeter(10, 15))",
    "def pentagon_perimeter(pentagon_length):\n    return 2 * pentagon_length\n\n\nprint(pentagon_perimeter(3))",
    "def perimeter(n):\n    return 2*n*(n+1)\n\nprint(perimeter(5))",
    "def perimeter(a):\n    return 2*a\n\n\nprint(perimeter(5))\nprint(perimeter(2))\nprint(perimeter(3))\nprint(perimeter(6))\nprint(perimeter(4))",
    "def perimeter(length):\n    return length * 2\n\n\nif __name__ == '__main__':\n    assert perimeter(10) == 24",
    "def pentagon(r):\n    perimeter = 2 * r\n    return perimeter\n\nprint(pentagon(3))",
    "def find_perimeter(r):\n    return 2 * r * r\n\nprint(find_perimeter(6))",
    "def pentagon_perimeter(height):\n\treturn 2 * height + 1\n\nprint(pentagon_perimeter(4))",
    "def perimeter(length, width):\n    perimeter = (length * 2) + (width * 2)\n    return perimeter\n\n\nprint(perimeter(5, 5))",
    "def pentagon(n):\n    return n*2\n\n\nprint(pentagon(5))",
    "def perimeter(length):\n    return (2 * length) + 1\n\n\nprint(perimeter(4))",
    "def perimeter(h):\n    return 2 * h\n\nprint(perimeter(5))\nprint(perimeter(7))\nprint(perimeter(9))\nprint(perimeter(10))",
    "def perimeter(pentagon_length):\n    perimeter = pentagon_length * 2\n    return perimeter\n\nprint(perimeter(4))",
    "def pentagon(a,b):\n    perimeter = 2 * (a + b)\n    return perimeter\n\nprint(pentagon(5,3))",
    "def pentagon_perimeter(n):\n    return n * (2 * n - 1)\n\n\nprint(pentagon_perimeter(2))",
    "def perimeter(width):\n    return width * 2\n\n\ndef main():\n    print(perimeter(10))\n\n\nif __name__ == '__main__':\n    main()",
    "def perimeter(l):\n    perimeter = l * 2\n    return perimeter\n\n\nif __name__ == \"__main__\":\n    print(perimeter(5))",
    "def find_perimeter(length):\n    perimeter = length * 2\n    return perimeter\n\nprint(find_perimeter(4))",
    "def perimeter(height):\n    return 2*height\n\nif __name__ == \"__main__\":\n    print(perimeter(5))",
    "def find_perimeter(height):\n    perimeter = 2 * height\n    return perimeter",
    "def perimeter(n):\n    return n * 2\n\nprint(perimeter(10))\nprint(perimeter(20))\nprint(perimeter(30))\nprint(perimeter(40))\nprint(perimeter(50))",
    "def pentagon_perimeter(length, width):\n    return 2 * length + 2 * width\n\nprint(pentagon_perimeter(5, 6))",
    "def perimeter(a, b):\n    return 2*a + 2*b\n\nprint(perimeter(1, 2))",
    "def perimeter(a):\n    return a**2\n\nprint(perimeter(5))\nprint(perimeter(10))\nprint(perimeter(20))",
    "def perimeter(length):\n    return 2*length\n\nprint(perimeter(5))",
    "def perimeter(l):\n    perimeter = 2*l\n    return perimeter\n\n\nprint(perimeter(3))\nprint(perimeter(4))\nprint(perimeter(5))",
    "def perimeter(p):\n    return 2 * p\n\n\nprint(perimeter(5))",
    "def perimeter(r):\n    return 2*r\n\nprint(perimeter(5))\nprint(perimeter(8))\nprint(perimeter(6))\nprint(perimeter(7))\nprint(perimeter(4))",
    "def pentagon_perimeter(height):\n    return 2 * height\n\n\nprint(pentagon_perimeter(4))",
    "def perimeter(radius):\n    return 2 * radius * radius\n\n\nprint(perimeter(3))\nprint(perimeter(5))",
    "def perimeter(l):\n    return l*2\n\nprint(perimeter(4))",
    "def perimeter(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return n*(n+1)/2\n\n\nif __name__ == \"__main__\":\n    print(perimeter(9))",
    "def find_pentagon_perimeter(width, height):\n    perimeter = 2 * width + 2 * height\n    return perimeter\n\n\nprint(find_pentagon_perimeter(5, 4))\nprint(find_pentagon_perimeter(4, 5))\nprint(find_pentagon_perimeter(2, 2))",
    "def pentagon_perimeter(l):\n    return l * 2",
    "def perimeter(p):\n    return (p * 2)\n\n\nprint(perimeter(4))",
    "def pentagon_perimeter(n):\n    return n ** 2\n\n\nprint(pentagon_perimeter(5))",
    "def perimeter(a):\n    return a*2",
    "def pentagon_perimeter(height):\n    perimeter = 2 * height\n    return perimeter\n\n\nprint(pentagon_perimeter(5))",
    "def perimeter(length):\n    return 2*length + 4\n\nprint(perimeter(5))",
    "def perimeter(p):\n    return p * 2\n\n\nif __name__ == \"__main__\":\n    print(perimeter(1))",
    "def perimeter(r):\n    return 2 * r\n\n\nprint(perimeter(3))\nprint(perimeter(5))\nprint(perimeter(7))",
    "def perimeter(length):\n    return (2 * length) + 1\n\nprint(perimeter(4))",
    "def perimeter(r):\n    return 2 * r + 1\n\nprint(perimeter(5))",
    "def pentagon_perimeter(a, b):\n    return (2 * a + 2 * b)\n\n\nprint(pentagon_perimeter(2, 3))",
    "def find_perimeter(length, width):\n    return 2 * (length + width)\n\n\nprint(find_perimeter(10, 2))",
    "def pentagon_perimeter(p):\n    return p * 4\n\nprint(pentagon_perimeter(10))\nprint(pentagon_perimeter(20))\nprint(pentagon_perimeter(30))\nprint(pentagon_perimeter(40))\nprint(pentagon_perimeter(50))\nprint(pentagon_perimeter(60))\nprint(pentagon_perimeter(70))\nprint(pentagon_perimeter(80))",
    "def perimeter(pentagon_length):\n    return (2 * pentagon_length)\n\n\nif __name__ == '__main__':\n    print(perimeter(10))",
    "def perimeter(length):\n    perimeter = 2 * length\n    return perimeter\n\n\nprint(perimeter(2))",
    "def find_perimeter(length):\n    return 2 * length + 1\n\n\nprint(find_perimeter(3))",
    "def perimeter(l):\n    return l * 2\n\nprint(perimeter([1, 2, 3]))\nprint(perimeter([1, 2, 4, 5]))\nprint(perimeter([1, 2, 4, 6]))\nprint(perimeter([1, 2, 3, 4, 5, 6]))",
    "def find_perimeter(n):\n    return n * 2\n\nprint(find_perimeter(5))",
    "def perimeter(pentagon):\n    return (pentagon * 2) + (pentagon * 4)\n\nprint(perimeter(3))\nprint(perimeter(5))\nprint(perimeter(7))\nprint(perimeter(9))\nprint(perimeter(11))",
    "def pentagon(r):\n    return 2 * r * r\n\nprint(pentagon(5))",
    "def perimeter(p):\n    return 2 * p\n\n\nprint(perimeter(3))\nprint(perimeter(4))\nprint(perimeter(5))",
    "def pentagon(r, h):\n    return 2 * r * h\n\nprint(pentagon(1, 1))",
    "def perimeter(width, height):\n    perimeter = width * height\n    return perimeter\n\nprint(perimeter(10, 10))\nprint(perimeter(20, 20))\nprint(perimeter(30, 30))\nprint(perimeter(40, 40))",
    "def find_perimeter(a):\n    return 2*a\n\ndef main():\n    print(find_perimeter(3))\n\nif __name__ == \"__main__\":\n    main()",
    "def perimeter(pentagon):\n    return 2 * (pentagon - 2)\n\nprint(perimeter(5))\nprint(perimeter(8))",
    "def find_perimeter(h, w):\n    return (h * 2) + (w * 2)\n\nif __name__ == '__main__':\n    print(find_perimeter(10, 20))",
    "def pentagon_perimeter(height):\n    return 2 * height + 1\n\nif __name__ == '__main__':\n    print(pentagon_perimeter(10))",
    "def pentagon_perimeter(l):\n    return l * 2\n\n\nprint(pentagon_perimeter(10))",
    "def perimeter(l):\n    return 2*l + 2\n\nprint(perimeter(5))",
    "def find_perimeter(pentagon):\n    return 2 * pentagon\n\nif __name__ == \"__main__\":\n    print(find_perimeter(3))",
    "def pentagon_perimeter(height):\n    return 2 * (height + height)\n\n\ndef main():\n    print(pentagon_perimeter(15))\n\n\nif __name__ == '__main__':\n    main()",
    "def pentagon_perimeter(p):\n    return 2 * p + 1\n\nprint(pentagon_perimeter(2))\nprint(pentagon_perimeter(5))\nprint(pentagon_perimeter(10))",
    "def perimeter(a, b):\n    return a + b\n\n\ndef main():\n    print(perimeter(3, 4))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def perimeter(a, b):\n    return (a + b) * 2\n\n\nprint(perimeter(3, 4))\nprint(perimeter(3, 2))\nprint(perimeter(2, 3))\nprint(perimeter(5, 3))\nprint(perimeter(5, 4))\nprint(perimeter(5, 5))\nprint(perimeter(5, 6))",
    "def perimeter(a):\n    return a*2\n\nprint(perimeter(10))",
    "def perimeter(p):\n    return 2 * (p**2)\n\n\nprint(perimeter(2))\nprint(perimeter(4))\nprint(perimeter(8))",
    "def pentagon_perimeter(length):\n    perimeter = 2 * length\n    return perimeter\n\n\nprint(pentagon_perimeter(3))",
    "def perimeter(r):\n    return 2 * (r**2)\n\n\nprint(perimeter(2))\nprint(perimeter(4))\nprint(perimeter(6))\nprint(perimeter(8))\nprint(perimeter(10))\nprint(perimeter(12))\nprint(perimeter(18))",
    "def perimeter(height):\n    return 2 * height + 1\n\n\nif __name__ == '__main__':\n    print(perimeter(4))",
    "def perimeter(r):\n    return 2 * r * r\n\nprint(perimeter(4))",
    "def pentagon_perimeter(height):\n    return height * 2\n\n\ndef main():\n    print(\"Perimeter of a pentagon is: {}\".format(pentagon_perimeter(5)))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def pentagon_perimeter(width):\n    return width * 2\n\n\nprint(pentagon_perimeter(5))",
    "def pentagon(p):\n    return p * 2\n\nprint(pentagon(4))\nprint(pentagon(8))\nprint(pentagon(12))\nprint(pentagon(16))\nprint(pentagon(20))\nprint(pentagon(32))\nprint(pentagon(40))\nprint(pentagon(48))\nprint(pentagon(48))\nprint(pentagon(48))",
    "def perimeter(r):\n    return 2 * r * r\n\nprint(perimeter(10))",
    "def pentagon_perimeter(height):\n    return 2 * (height + 1)\n\nprint(pentagon_perimeter(1))",
    "def perimeter(a):\n    return 2 * (a + 1)\n\n\nprint(perimeter(3))",
    "def pentagon_perimeter(a, b):\n    return (a + b) * 2\n\n\nif __name__ == \"__main__\":\n    print(pentagon_perimeter(3, 4))",
    "def perimeter(length):\n    return length**2\n\nprint(perimeter(3))",
    "def perimeter(p):\n    return 2 * p\n\nif __name__ == \"__main__\":\n    print(perimeter(4))",
    "def perimeter(l):\n    return 2 * l\n\n\nprint(perimeter(3))\nprint(perimeter(5))",
    "def pentagon_perimeter(n):\n    \"\"\"\n    Finds the perimeter of a pentagon.\n    \"\"\"\n    return 2 * n\n\nprint(pentagon_perimeter(10))\nprint(pentagon_perimeter(20))\nprint(pentagon_perimeter(30))\nprint(pentagon_perimeter(40))",
    "def find_perimeter(length):\n    return 2 * length\n\n\nassert find_perimeter(5) == 10\nassert find_perimeter(4) == 12",
    "def perimeter(l):\n    return l**2\n\nprint(perimeter(4))",
    "def perimeter(a):\n    return 2 * a\n\nprint(perimeter(5))\nprint(perimeter(15))\nprint(perimeter(20))\nprint(perimeter(25))\nprint(perimeter(30))\nprint(perimeter(35))\nprint(perimeter(40))\nprint(perimeter(45))\nprint(perimeter(50))",
    "def pentagon_perimeter(p):\n    return 2 * p\n\np = int(input(\"Enter the number of pentagons: \"))\nprint(\"The perimeter of the pentagon is: \", pentagon_perimeter(p))",
    "def pentagon_perimeter(n):\n    return (n * 2)\n\nprint(pentagon_perimeter(3))\nprint(pentagon_perimeter(4))",
    "def perimeter(pentagon_length):\n    return pentagon_length * 2\n\ndef main():\n    pentagon_length = float(input(\"Enter the length of the pentagon: \"))\n    print(f\"The perimeter of a pentagon is {perimeter(pentagon_length)}\")\n\nif __name__ == \"__main__\":\n    main()",
    "def perimeter(r):\n    return 2 * (r ** 2)\n\n\nprint(perimeter(1))\nprint(perimeter(2))\nprint(perimeter(3))",
    "def pentagon_perimeter(p):\n    return (2 * p)\n\nprint(pentagon_perimeter(4))\nprint(pentagon_perimeter(8))\nprint(pentagon_perimeter(16))\nprint(pentagon_perimeter(32))\nprint(pentagon_perimeter(64))",
    "def pentagon_perimeter(l):\n    if l == 0:\n        return 0\n    return 2 * l\n\n\nif __name__ == \"__main__\":\n    print(pentagon_perimeter(5))",
    "def find_perimeter(pentagon):\n    perimeter = (pentagon ** 2)\n    return perimeter\n\nprint(find_perimeter(4))\nprint(find_perimeter(2))\nprint(find_perimeter(1))",
    "def pentagon(radius):\n    perimeter = 2 * radius * radius\n    return perimeter\n\nprint(pentagon(10))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}