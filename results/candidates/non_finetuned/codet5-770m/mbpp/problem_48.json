{
  "problem": {
    "task_id": "MBPP/59",
    "prompt": "Write a function to find the nth octagonal number.",
    "canonical_solution": "def is_octagonal(n): \r\n\treturn 3 * n * n - 2 * n ",
    "test_list": [
      "assert is_octagonal(5) == 65",
      "assert is_octagonal(10) == 280",
      "assert is_octagonal(15) == 645"
    ],
    "challenge_test_list": [],
    "problem_id": 48
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def octagonal(n):\n    return n ** 3\n\n\nprint(octagonal(3))",
    "def octagonal_number(n):\n    return n * (2 * (n + 1) - 1) // 6\n\n\nprint(octagonal_number(1))",
    "def octagonal(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1 + 3 * (1 + 2 * (1 + 4 * (1 + 6 * (1 + 8 * (1 + 10 * (1 + 12 * (1 + 14 * (1 + 16 * (1 + 18 * (1 + 20 * (1 + 24 * (1 + 28 * (1 + 30 * (1 + 36 * (1 + 40 * (1 + 48 * (1 + 54 * (1 + 64 * (1 + 72 * (1 + 72 * (1 + 72 * (1 + 72 * (1 + 80 * (1 + 120 * (1 + 24 * (1 + 80 * (1 + 96 * (1 + 96 * (1 + 24 * (1 + 120 * (1 + 80 * (1 + 36 * (1 + 72 * (1 + 78 * (1 + 48 * (1 + 24 * (1 + 40 * (1 + 72 * (1 + 24 * (1 + 88 * (1 + 28 * (1 + 72 * (1 + 8 * (1 + 72 * (1 + 8) * (1 + 24 * (1 + 24 * (1 + 88 * (1 + 48 * (1 + 24 * (1 + 80 * (1 + 48) * (1 + 24 * (1 + 24 * (1 + 8) * (1 + 24 * (1 + 24 * (1 + 24 * (1 + 4) * (1 + 24 * (1 + 24 * (1 + 24 * (1 + 24 * (1 + 4) * (1 + 4) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (1 + 2) * (",
    "def nth_octagonal(n):\n    octagonal = [1, 3, 6, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 90, 95, 100]\n    if n < 0:\n        print(\"Input must be a non-negative integer\")\n    elif n == 0:\n        return 0\n    else:\n        return octagonal[n]\n\nif __name__ == \"__main__\":\n    print(nth_octagonal(0))",
    "def nth_octagonal(n):\n    if n == 0:\n        return 0\n\n    if n == 1:\n        return 1\n\n    if n == 2:\n        return 1 + 2\n\n    if n == 3:\n        return 1 + 2 + 3\n\n    if n == 4:\n        return 1 + 2 + 3 + 4\n\n    if n == 5:\n        return 1 + 2 + 3 + 4 + 5\n\n    if n == 6:\n        return 1 + 2 + 3 + 4 + 5 + 6\n\n    if n == 7:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7\n\n    if n == 8:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8\n\n    if n == 9:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9\n\n    if n == 10:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10\n\n    if n == 11:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11\n\n    if n == 12:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12\n\n    if n == 13:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13\n\n    if n == 14:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14\n\n    if n == 15:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15\n\n    if n == 16:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16\n\n    if n == 17:\n        return 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10 + 11 + 12 + 13 + 14 + 15 + 16 + 17\n\n    if n == 18:\n        return 1",
    "def find_octagonal_number(n):\n    octagonal_numbers = [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072]\n    return octagonal_numbers[n-1]\n\n\nprint(find_octagonal_number(1))",
    "def octagonal(n):\n    n = int(n)\n    if n < 0:\n        return -1\n    elif n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    elif n == 3:\n        return 8\n    elif n == 4:\n        return 12\n    elif n == 5:\n        return 16\n    elif n == 6:\n        return 18\n    elif n == 7:\n        return 20\n    elif n == 8:\n        return 24\n    elif n == 9:\n        return 30\n    elif n == 10:\n        return 32\n    elif n == 11:\n        return 44\n    elif n == 12:\n        return 48\n    elif n == 13:\n        return 56\n    elif n == 14:\n        return 64\n    elif n == 15:\n        return 80\n    elif n == 16:\n        return 96\n    elif n == 17:\n        return 128\n    elif n == 18:\n        return 192\n    elif n == 19:\n        return 224\n    elif n == 20:\n        return 288\n    elif n == 21:\n        return 320\n    elif n == 22:\n        return 384\n    elif n == 23:\n        return 416\n    elif n == 24:\n        return 488\n    elif n == 25:\n        return 520\n    elif n == 26:\n        return 576\n    elif n == 27:\n        return 624\n    elif n == 28:\n        return 704\n    elif n == 29:\n        return 832\n    elif n == 30:\n        return 960\n    elif n == 31:\n        return 1080\n    elif n == 32:\n        return 1152\n    elif n == 33:\n        return 1280\n    elif n == 34:\n        return 1360\n    elif n == 35:\n        return 1440\n    elif n == 36:\n        return 1544\n    elif n == 37:\n        return 1688\n    elif n == 38:\n        return 1720\n    elif n == 39:\n        return 1864\n    elif n == 40:\n        return 1944\n    elif n == 41:",
    "def octagonal(n):\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    if n == 2:\n        return 4\n    if n == 3:\n        return 6\n    if n == 4:\n        return 8\n    if n == 5:\n        return 10\n    if n == 6:\n        return 12\n    if n == 7:\n        return 14\n    if n == 8:\n        return 16\n    if n == 9:\n        return 18\n    if n == 10:\n        return 20\n    if n == 11:\n        return 22\n    if n == 12:\n        return 24\n    if n == 13:\n        return 26\n    if n == 14:\n        return 28\n    if n == 15:\n        return 30\n    if n == 16:\n        return 32\n    if n == 17:\n        return 34\n    if n == 18:\n        return 36\n    if n == 19:\n        return 38\n    if n == 20:\n        return 40\n    if n == 21:\n        return 42\n    if n == 22:\n        return 44\n    if n == 23:\n        return 46\n    if n == 24:\n        return 48\n    if n == 25:\n        return 50\n    if n == 26:\n        return 56\n    if n == 27:\n        return 58\n    if n == 28:\n        return 60\n    if n == 29:\n        return 62\n    if n == 30:\n        return 64\n    if n == 31:\n        return 66\n    if n == 32:\n        return 68\n    if n == 33:\n        return 70\n    if n == 34:\n        return 72\n    if n == 35:\n        return 76\n    if n == 36:\n        return 78\n    if n == 37:\n        return 80\n    if n == 38:\n        return 82\n    if n == 39:\n        return 84\n    if n == 40:\n        return 82\n    if n == 41:\n        return 82\n    if n == 42:\n        return 84\n    if n == 43:\n        return 86\n    if n == 44:",
    "def find_octagonal_number(n):\n    # Create a list of numbers\n    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]\n    # Initialize the list with the first value\n    octagonal_num = numbers[0]\n    # Loop through the range of numbers\n    for i in range(1, n):\n        # Calculate the next octagonal number\n        octagonal_num = octagonal_num + numbers[i]\n    # Return the octagonal number\n    return octagonal_num\n\n\nprint(find_octagonal_number(10))",
    "def octagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 3\n    if n == 3:\n        return 5\n    if n == 4:\n        return 7\n    if n == 5:\n        return 9\n    if n == 6:\n        return 11\n    if n == 7:\n        return 13\n    if n == 8:\n        return 15\n    if n == 9:\n        return 17\n    if n == 10:\n        return 19\n    if n == 11:\n        return 21\n    if n == 12:\n        return 23\n    if n == 13:\n        return 29\n    if n == 14:\n        return 31\n    if n == 15:\n        return 37\n    if n == 16:\n        return 41\n    if n == 17:\n        return 43\n    if n == 18:\n        return 47\n    if n == 19:\n        return 53\n    if n == 20:\n        return 59\n    if n == 21:\n        return 61\n    if n == 22:\n        return 67\n    if n == 23:\n        return 73\n    if n == 24:\n        return 79\n    if n == 25:\n        return 81\n    if n == 26:\n        return 93\n    if n == 27:\n        return 97\n\n\nprint(octagonal(12))",
    "def find_octagonal(n):\n    return n * (n + 1) // 2\n\n\nif __name__ == \"__main__\":\n    print(find_octagonal(1))\n    print(find_octagonal(2))\n    print(find_octagonal(3))\n    print(find_octagonal(4))\n    print(find_octagonal(5))\n    print(find_octagonal(6))\n    print(find_octagonal(7))\n    print(find_octagonal(8))\n    print(find_octagonal(9))\n    print(find_octagonal(10))",
    "def octagonal(n):\n    return int(n ** 0.5)\n\n\nif __name__ == '__main__':\n    print(octagonal(8))",
    "def nth_octagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 2\n    if n == 5:\n        return 2\n    if n == 6:\n        return 3\n    if n == 7:\n        return 3\n    if n == 8:\n        return 4\n    if n == 9:\n        return 4\n    if n == 10:\n        return 5\n    if n == 11:\n        return 5\n    if n == 12:\n        return 6\n    if n == 13:\n        return 6\n    if n == 14:\n        return 7\n    if n == 15:\n        return 7\n    if n == 16:\n        return 8\n    if n == 17:\n        return 8\n    if n == 18:\n        return 9\n    if n == 19:\n        return 9\n    if n == 20:\n        return 10\n    if n == 21:\n        return 10\n    if n == 22:\n        return 11\n    if n == 23:\n        return 11\n    if n == 24:\n        return 12\n    if n == 25:\n        return 12\n    if n == 26:\n        return 13\n    if n == 27:\n        return 13\n    if n == 28:\n        return 14\n    if n == 29:\n        return 14\n    if n == 30:\n        return 15\n    if n == 31:\n        return 15\n    if n == 32:\n        return 16\n    if n == 33:\n        return 16\n    if n == 34:\n        return 17\n    if n == 35:\n        return 17\n    if n == 36:\n        return 18\n    if n == 37:\n        return 18\n    if n == 38:\n        return 19\n    if n == 39:\n        return 19\n    if n == 40:\n        return 20\n    if n == 41:\n        return 20\n    if n == 42:\n        return 21\n    if n == 43:\n        return 21\n    if n == 44",
    "def octagonal(n):\n    if n == 0:\n        return 0\n    else:\n        return octagonal(n - 1) + 4 * octagonal(n - 2) + octagonal(n - 3)\n\n\nif __name__ == \"__main__\":\n    print(octagonal(10))",
    "def octagonal(n):\n    a=1\n    for i in range(n):\n        a=a*9\n    return a\n\n\nprint(octagonal(10))",
    "def octagonal(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    if n == 2:\n        return 4\n    if n == 3:\n        return 6\n    if n == 4:\n        return 8\n    if n == 5:\n        return 12\n    if n == 6:\n        return 16\n    if n == 7:\n        return 20\n    if n == 8:\n        return 24\n    if n == 9:\n        return 32\n    if n == 10:\n        return 40\n    if n == 11:\n        return 48\n    if n == 12:\n        return 56\n    if n == 13:\n        return 64\n    if n == 14:\n        return 80\n    if n == 15:\n        return 96\n    if n == 16:\n        return 112\n    if n == 17:\n        return 120\n    if n == 18:\n        return 144\n    if n == 19:\n        return 160\n    if n == 20:\n        return 288\n    if n == 21:\n        return 384\n    if n == 22:\n        return 448\n    if n == 23:\n        return 576\n    if n == 24:\n        return 672\n    if n == 25:\n        return 784\n    if n == 26:\n        return 896\n    if n == 27:\n        return 996\n    if n == 28:\n        return 1096\n    if n == 29:\n        return 1196\n    if n == 30:\n        return 1296\n    if n == 31:\n        return 1396\n    if n == 32:\n        return 1496\n    if n == 33:\n        return 1596\n    if n == 34:\n        return 1696\n    if n == 35:\n        return 1796\n    if n == 36:\n        return 1896\n    if n == 37:\n        return 1996\n    if n == 38:\n        return 2096\n    if n == 39:\n        return 2196\n    if n == 40:\n        return 2296\n    if n == 41:\n        return 2396\n    if n == 42:\n        return 2496\n    if n == 43",
    "def octagonal_number(n):\n    octagonal = [1, 2, 4, 7, 10, 12, 15, 16, 18, 19, 20, 21, 22, 24, 27, 30, 34, 36, 40, 48, 56, 60, 62, 64, 72, 72]\n    i = 0\n    while i < n:\n        i += 1\n        print(octagonal[i])\n\noctagonal_number(7)",
    "def octagonal(n):\n    if n == 0:\n        return 0\n    else:\n        return octagonal(n - 1) + 4 * octagonal(n - 2) + 2 * octagonal(n - 3) + 1\n\ndef main():\n    print(octagonal(3))\n    print(octagonal(4))\n    print(octagonal(5))\n    print(octagonal(6))\n    print(octagonal(7))\n\nif __name__ == \"__main__\":\n    main()",
    "def find_nth_octagonal(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 3\n    if n == 3:\n        return 5\n    if n == 4:\n        return 7\n    if n == 5:\n        return 9\n    if n == 6:\n        return 11\n    if n == 7:\n        return 13\n    if n == 8:\n        return 15\n    if n == 9:\n        return 17\n    if n == 10:\n        return 19\n    if n == 11:\n        return 23\n    if n == 12:\n        return 29\n    if n == 13:\n        return 37\n    if n == 14:\n        return 41\n    if n == 15:\n        return 43\n    if n == 16:\n        return 47\n    if n == 17:\n        return 53\n    if n == 18:\n        return 59\n    if n == 19:\n        return 61\n    if n == 20:\n        return 67\n    if n == 21:\n        return 71\n    if n == 22:\n        return 73\n    if n == 23:\n        return 79\n    if n == 24:\n        return 81\n    if n == 25:\n        return 83\n    if n == 26:\n        return 89\n    if n == 27:\n        return 97\n    if n == 28:\n        return 100\n    if n == 29:\n        return 101\n    if n == 30:\n        return 102\n    if n == 31:\n        return 103\n    if n == 32:\n        return 104\n    if n == 33:\n        return 105\n    if n == 34:\n        return 106\n    if n == 35:\n        return 107\n    if n == 36:\n        return 108\n    if n == 37:\n        return 109\n    if n == 38:\n        return 110\n    if n == 39:\n        return 111\n    if n == 40:\n        return 112\n    if n == 41:\n        return 113\n    if n == 42:\n        return 114\n    if n == 43:\n        return 115\n    if n == 44:\n        return 116\n    if n == 45:",
    "def octagonal_number(n):\n    if n < 0:\n        return None\n    elif n == 0:\n        return 1\n    elif n == 1:\n        return 8\n    elif n == 2:\n        return 4\n    elif n == 3:\n        return 2\n    elif n == 4:\n        return 6\n    elif n == 5:\n        return 8\n    elif n == 6:\n        return 4\n    elif n == 7:\n        return 2\n    elif n == 8:\n        return 6\n    elif n == 9:\n        return 8\n    elif n == 10:\n        return 4\n    elif n == 11:\n        return 6\n    elif n == 12:\n        return 8\n    elif n == 13:\n        return 2\n    elif n == 14:\n        return 6\n    elif n == 15:\n        return 8\n    elif n == 16:\n        return 4\n    elif n == 17:\n        return 2\n    elif n == 18:\n        return 6\n    elif n == 19:\n        return 8\n    elif n == 20:\n        return 4\n    elif n == 21:\n        return 2\n    elif n == 22:\n        return 6\n    elif n == 23:\n        return 8\n    elif n == 24:\n        return 4\n    elif n == 25:\n        return 2\n    elif n == 26:\n        return 6\n    elif n == 27:\n        return 8\n    elif n == 28:\n        return 4\n    elif n == 29:\n        return 2\n    elif n == 30:\n        return 6\n    elif n == 31:\n        return 8\n    elif n == 32:\n        return 4\n    elif n == 33:\n        return 2\n    elif n == 34:\n        return 6\n    elif n == 35:\n        return 8\n    elif n == 36:\n        return 4\n    elif n == 37:\n        return 2\n    elif n == 38:\n        return 6\n    elif n == 39:\n        return 8\n    elif n == 40:\n        return 4\n    elif n == 41:\n        return 2\n    elif n == 42:\n        return 6\n    elif n == 43:\n        return 8\n    elif n",
    "def nth_octagonal(n):\n    return (n * (n + 1) * (2 * n + 3)) // 6\n\n\nprint(nth_octagonal(1))\nprint(nth_octagonal(2))\nprint(nth_octagonal(3))\nprint(nth_octagonal(4))\nprint(nth_octagonal(5))\nprint(nth_octagonal(6))\nprint(nth_octagonal(7))\nprint(nth_octagonal(8))\nprint(nth_octagonal(9))",
    "def octagonal(n):\n    sum = 0\n    for i in range(1, n+1):\n        sum = sum + (i**3)\n    return sum\n\n\nif __name__ == \"__main__\":\n    n = int(input())\n    print(octagonal(n))",
    "def octagonal(n):\n    a = int(n**0.5)\n    return a**3 + a**2 + a\n\n\nprint(octagonal(100))",
    "def octagonal(n):\n    return sum(1 for i in range(1, n+1) if i * i == n)\n\n\nif __name__ == '__main__':\n    print(octagonal(3))",
    "def octagonal_num(n):\n    a = int(n**0.5)\n    b = int(n**0.25)\n    c = int(n**0.5)\n    d = int(n**0.25)\n    return a*b*c*d\n\n\nif __name__ == \"__main__\":\n    print(octagonal_num(input(\"Enter the number to find: \")))",
    "def nth_octagonal(n):\n    sum_ = 0\n    for i in range(1, n + 1):\n        sum_ += (i ** 3)\n    return sum_\n\nprint(nth_octagonal(7))",
    "def get_octagonal(n):\n    octagonal = [1, 2, 4, 7, 8, 11, 13, 15, 17, 19, 21, 23, 28, 31, 36, 39, 42, 45, 47, 53, 59, 62, 67, 71, 73, 79, 83, 89, 97]\n    return octagonal[n-1]\n\n\n\nprint(get_octagonal(7))",
    "def octagonal(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n\n    oct_num = 1\n    for i in range(2, n + 1):\n        oct_num = oct_num * 3 + i\n    return oct_num\n\n\nif __name__ == '__main__':\n    print(octagonal(1))\n    print(octagonal(2))\n    print(octagonal(3))\n    print(octagonal(4))\n    print(octagonal(5))\n    print(octagonal(6))\n    print(octagonal(7))\n    print(octagonal(8))\n    print(octagonal(9))\n    print(octagonal(10))",
    "def octagonal(n):\n    return (n**3 + 4*n**2 + 1)//6\n\nprint(octagonal(int(input())))",
    "def octagonal_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 8\n    if n == 4:\n        return 12\n    if n == 5:\n        return 16\n    if n == 6:\n        return 20\n    if n == 7:\n        return 24\n    if n == 8:\n        return 36\n    if n == 9:\n        return 48\n    if n == 10:\n        return 64\n    if n == 11:\n        return 96\n    if n == 12:\n        return 128\n    if n == 13:\n        return 192\n    if n == 14:\n        return 288\n    if n == 15:\n        return 384\n    if n == 16:\n        return 464\n    if n == 17:\n        return 572\n    if n == 18:\n        return 672\n    if n == 19:\n        return 768\n    if n == 20:\n        return 896\n    if n == 21:\n        return 972\n    if n == 22:\n        return 1088\n    if n == 23:\n        return 1280\n    if n == 24:\n        return 1440\n    if n == 25:\n        return 1680\n    if n == 26:\n        return 1864\n    if n == 27:\n        return 1984\n    if n == 28:\n        return 2160\n    if n == 29:\n        return 2240\n    if n == 30:\n        return 2460\n    if n == 31:\n        return 2560\n    if n == 32:\n        return 2640\n    if n == 33:\n        return 3060\n    if n == 34:\n        return 3120\n    if n == 35:\n        return 3320\n    if n == 36:\n        return 3440\n    if n == 37:\n        return 3560\n    if n == 38:\n        return 3840\n    if n == 39:\n        return 3680\n    if n == 40:\n        return 3920\n    if n == 41:\n        return 39440\n    if n == 42",
    "def nth_octagonal(n):\n    n = int(n)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 8\n    if n == 4:\n        return 16\n    if n == 5:\n        return 32\n    if n == 6:\n        return 64\n    if n == 7:\n        return 128\n    if n == 8:\n        return 256\n    if n == 9:\n        return 512\n    if n == 10:\n        return 1024\n\n    for i in range(1, n + 1):\n        i_str = str(i)\n        if i % 2 == 0:\n            print(int(i_str[::-1]) + 1)\n        else:\n            print(int(i_str[::-1]) + 2)\n\n\nif __name__ == \"__main__\":\n    print(nth_octagonal(1))",
    "def nth_octagonal(n):\n    return (n**3 + n**2 + n + 1) % 7\n\nprint(nth_octagonal(4))",
    "def find_nth_octagonal_number(n):\n    return sum(\n        [int(i) ** 3 for i in str(n)]\n    )\n\nprint(find_nth_octagonal_number(1))\nprint(find_nth_octagonal_number(2))\nprint(find_nth_octagonal_number(3))\nprint(find_nth_octagonal_number(4))\nprint(find_nth_octagonal_number(5))\nprint(find_nth_octagonal_number(6))\nprint(find_nth_octagonal_number(7))\nprint(find_nth_octagonal_number(8))\nprint(find_nth_octagonal_number(9))\nprint(find_nth_octagonal_number(10))\nprint(find_nth_octagonal_number(11))\nprint(find_nth_octagonal_number(12))\nprint(find_nth_octagonal_number(13))\nprint(find_nth_octagonal_number(14))\nprint(find_nth_octagonal_number(15))\nprint(find_nth_octagonal_number(16))\nprint(find_nth_octagonal_number(17))\nprint(find_nth_octagonal_number(18))\nprint(find_nth_octagonal_number(19))",
    "def nth_octagonal(n):\n    # Write your code here\n    n = int(n)\n    if n < 0:\n        return\n    if n == 0:\n        return 1\n    return 3 * (n + 1) * (n + 2) * (n + 3) * (n + 4)\n\nprint(nth_octagonal(3))",
    "def octagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    octagonal_sum = 0\n    for i in range(1, n + 1):\n        octagonal_sum += i**3\n    return octagonal_sum\n\n\nif __name__ == \"__main__\":\n    print(octagonal(1))\n    print(octagonal(2))\n    print(octagonal(3))\n    print(octagonal(4))\n    print(octagonal(5))\n    print(octagonal(6))\n    print(octagonal(7))\n    print(octagonal(8))\n    print(octagonal(9))",
    "def nth_octagonal(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 8\n    if n == 3:\n        return 4\n    if n == 4:\n        return 9\n    if n == 5:\n        return 16\n    if n == 6:\n        return 25\n    if n == 7:\n        return 36\n    if n == 8:\n        return 49\n    if n == 9:\n        return 64\n    if n == 10:\n        return 91\n    if n == 11:\n        return 100\n    if n == 12:\n        return 101\n    if n == 13:\n        return 102\n    if n == 14:\n        return 103\n    if n == 15:\n        return 104\n    if n == 16:\n        return 105\n    if n == 17:\n        return 106\n    if n == 18:\n        return 107\n    if n == 19:\n        return 108\n    if n == 20:\n        return 109\n    if n == 21:\n        return 110\n    if n == 22:\n        return 111\n    if n == 23:\n        return 112\n    if n == 24:\n        return 113\n    if n == 25:\n        return 114\n    if n == 26:\n        return 115\n    if n == 27:\n        return 116\n    if n == 28:\n        return 117\n    if n == 29:\n        return 118\n    if n == 30:\n        return 119\n    if n == 31:\n        return 120\n    if n == 32:\n        return 121\n    if n == 33:\n        return 122\n    if n == 34:\n        return 123\n    if n == 35:\n        return 134\n    if n == 36:\n        return 135\n    if n == 37:\n        return 136\n    if n == 38:\n        return 137\n    if n == 39:\n        return 140\n    if n == 40:\n        return 141\n    if n == 41:\n        return 142\n    if n == 42:\n        return 143\n    if n == 43:\n        return 144",
    "def octagonal_number(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 8\n    elif n == 3:\n        return 13\n    elif n == 4:\n        return 21\n    elif n == 5:\n        return 34\n    elif n == 6:\n        return 55\n    elif n == 7:\n        return 89\n    elif n == 8:\n        return 128\n    elif n == 9:\n        return 256\n    elif n == 10:\n        return 512\n    elif n == 11:\n        return 1024\n    elif n == 12:\n        return 2048\n    elif n == 13:\n        return 4096\n    elif n == 14:\n        return 8192\n    elif n == 15:\n        return 16384\n    elif n == 16:\n        return 32768\n    elif n == 17:\n        return 65536\n    elif n == 18:\n        return 131072\n    elif n == 19:\n        return 262144\n    elif n == 20:\n        return 524288\n    elif n == 21:\n        return 1048576\n    elif n == 22:\n        return 2097152\n    elif n == 23:\n        return 4194304\n    elif n == 24:\n        return 3276808\n    elif n == 25:\n        return 16777216\n    elif n == 26:\n        return 536870912\n    elif n == 27:\n        return 131072\n    elif n == 28:\n        return 262144\n    elif n == 29:\n        return 1048576\n    elif n == 30:\n        return 2097152\n    elif n == 31:\n        return 4194304\n    elif n == 32:\n        return 3276808\n    elif n == 33:\n        return 16777216\n    elif n == 34:\n        return 536870912\n    elif n == 35:\n        return 131072\n    elif n == 36:\n        return 262144\n    elif n == 37:\n        return 1048576\n    elif n == 38:\n        return 2097152\n    elif n == 39:\n        return 4194304\n    elif n == 40:\n        return 327680",
    "def octagonal(n):\n    a = 0\n    for i in range(n):\n        a = a + (i + 1) * 7\n    return a\n\nprint(octagonal(6))\nprint(octagonal(7))\nprint(octagonal(8))\nprint(octagonal(9))\nprint(octagonal(10))\nprint(octagonal(11))\nprint(octagonal(12))\nprint(octagonal(13))\nprint(octagonal(14))\nprint(octagonal(15))\nprint(octagonal(16))\nprint(octagonal(17))\nprint(octagonal(18))\nprint(octagonal(19))\nprint(octagonal(20))\nprint(octagonal(21))\nprint(octagonal(22))\nprint(octagonal(23))\nprint(octagonal(24))\nprint(octagonal(25))\nprint(octagonal(26))\nprint(octagonal(27))\nprint(octagonal(28))\nprint(octagonal(29))\nprint(octagonal(30))\nprint(octagonal(31))\nprint(octagonal(32))\nprint(octagonal(33))\nprint(octagonal(34))\nprint(octagonal(35))\nprint(octagonal(36))\nprint(octagonal(37))\nprint(octagonal(38))\nprint(octagonal(39))\nprint(octagonal(40))\nprint(octagonal(41))\nprint(octagonal(42))\nprint(octagonal(43))\nprint(octagonal(44))\nprint(octagonal(45))\nprint(octagonal(46))\nprint(octagonal(47))\nprint(octagonal(48))\nprint(octagonal(49))\nprint(octagonal(50))\nprint(octagonal(51))\nprint(octagonal(52))\nprint(octagonal(53))\nprint(octagonal(54))\nprint(octagonal(55))\nprint(octagonal(56))\nprint(octagonal(57))\nprint",
    "def nth_octagonal(n):\n    #Write your code here\n    i = 0\n    if n <= 1:\n        return 1\n    while i < n:\n        i += 1\n        print(i)\n        oct_i = i * 4\n        print(oct_i)\n        print(oct_i - 1)\n        print(oct_i - 2)\n        print(oct_i - 3)\n        print(oct_i - 4)\n        print(oct_i - 5)\n        print(oct_i - 6)\n        print(oct_i - 7)\n        print(oct_i - 8)\n        print(oct_i - 9)\n        print(oct_i - 10)\n        print(oct_i - 11)\n        print(oct_i - 12)\n        print(oct_i - 13)\n        print(oct_i - 14)\n        print(oct_i - 15)\n        print(oct_i - 16)\n        print(oct_i - 17)\n        print(oct_i - 18)\n        print(oct_i - 19)\n        print(oct_i - 20)\n        print(oct_i - 21)\n        print(oct_i - 22)\n        print(oct_i - 23)\n        print(oct_i - 24)\n        print(oct_i - 25)\n        print(oct_i - 26)\n        print(oct_i - 27)\n        print(oct_i - 28)\n        print(oct_i - 29)\n        print(oct_i - 30)\n        print(oct_i - 31)\n        print(oct_i - 32)\n        print(oct_i - 33)\n        print(oct_i - 34)\n        print(oct_i - 35)\n        print(oct_i - 36)\n        print(oct_i - 37)\n        print(oct_i - 38)\n        print(oct_i - 39)\n        print(oct_i - 40)\n        print(oct_i - 41)\n        print(oct_i - 42)\n        print(oct_i - 43)\n        print(oct_i - 44)",
    "def nth_octagonal(n):\n    result = 1\n    for i in range(2, n + 1):\n        result = result * 10 + i\n    return result\n\n\nif __name__ == \"__main__\":\n    print(nth_octagonal(6))",
    "def nth_octagonal(n):\n    octagonal = [0] * (n+1)\n    octagonal[0] = 1\n    octagonal[1] = 2\n    octagonal[2] = 4\n    octagonal[3] = 6\n    octagonal[4] = 8\n    octagonal[5] = 12\n    octagonal[6] = 16\n    octagonal[7] = 20\n    octagonal[8] = 24\n    octagonal[9] = 32\n    octagonal[10] = 40\n    octagonal[11] = 48\n    octagonal[12] = 56\n    octagonal[13] = 64\n    octagonal[14] = 80\n    octagonal[15] = 96\n    octagonal[16] = 128\n    octagonal[17] = 192\n    octagonal[18] = 288\n    octagonal[19] = 384\n    octagonal[20] = 464\n    octagonal[21] = 576\n    octagonal[22] = 672\n    octagonal[23] = 784\n    octagonal[24] = 896\n    octagonal[25] = 976\n    octagonal[26] = 1024\n    octagonal[27] = 1280\n    octagonal[28] = 1404\n    octagonal[29] = 1600\n    octagonal[30] = 1800\n    octagonal[31] = 1900\n    octagonal[32] = 2000\n    octagonal[33] = 2100\n    octagonal[34] = 2300\n    octagonal[35] = 2400\n    octagonal[36] = 2500\n    octagonal[37] = 2600\n    octagonal[38] = 2700\n    octagonal[39] = 2800\n    octagonal[40] = 2900\n    octagonal[41] = 3080\n    octagonal[42] = 3100\n    octagonal[43] = 3500\n    octagonal[44] = 3600\n    octagonal[45] =",
    "def octagonal(n):\n    return n**3 - n**2 - n + 1\n\n\ndef main():\n    print(octagonal(1))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def octagonal_number(n):\n    return (n * (n + 1)) // 2\n\n\nif __name__ == '__main__':\n    print(octagonal_number(4))",
    "def octagonal(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 8\n    if n == 4:\n        return 16\n    if n == 5:\n        return 32\n    if n == 6:\n        return 64\n    if n == 7:\n        return 128\n    if n == 8:\n        return 256\n    if n == 9:\n        return 512\n    if n == 10:\n        return 1024\n    if n == 11:\n        return 2048\n    if n == 12:\n        return 4096\n    if n == 13:\n        return 8192\n    if n == 14:\n        return 16384\n    if n == 15:\n        return 32768\n    if n == 16:\n        return 65536\n    if n == 17:\n        return 131072\n    if n == 18:\n        return 262144\n    if n == 19:\n        return 524288\n    if n == 20:\n        return 1048576\n    if n == 21:\n        return 2097152\n    if n == 22:\n        return 4194304\n    if n == 23:\n        return 8476096\n    if n == 24:\n        return 16777216\n    if n == 25:\n        return 32768064\n    if n == 26:\n        return 536870912\n    if n == 27:\n        return 1073741824\n    if n == 28:\n        return 2097152\n    if n == 29:\n        return 4194304\n    if n == 30:\n        return 8476096\n    if n == 31:\n        return 16777216\n    if n == 32:\n        return 32768064\n    if n == 33:\n        return 536870912\n    if n == 34:\n        return 1073741824\n    if n == 35:\n        return 2097152\n    if n == 36:\n        return 4194304\n    if n == 37:\n        return 8476096\n    if n == 38:\n        return 16777216\n    if n == 39:",
    "def octagonal(n):\n    res = 0\n    for i in range(1, n+1):\n        res += (i * (i + 1) / 2)\n    return res\n\nif __name__ == \"__main__\":\n    print(octagonal(5))",
    "def octagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    return (n ** 3) + (n ** 2) + (n + 1)\n\n\ndef main():\n    print(octagonal_number(10))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def octagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return int(n**0.5)\n\n\ndef main():\n    \"\"\"\n    main function\n    \"\"\"\n    print(octagonal(3))\n    print(octagonal(6))\n    print(octagonal(9))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def octagonal(n):\n    if n == 1:\n        return 1\n    else:\n        return n + octagonal(n-1)\n\n\nprint(octagonal(5))",
    "def octagonal(n):\n    return sum([int(i) for i in str(n)])\n\nif __name__ == \"__main__\":\n    print(octagonal(8))",
    "def octagonal_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 + 3 * octagonal_number(n - 1)\n    if n == 3:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1)\n    if n == 4:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1) + 3 * octagonal_number(n - 1)\n    if n == 5:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1) + 3 * octagonal_number(n - 1) + 4 * octagonal_number(n - 1)\n    if n == 6:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1) + 3 * octagonal_number(n - 1) + 4 * octagonal_number(n - 1) + 5 * octagonal_number(n - 1)\n    if n == 7:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1) + 3 * octagonal_number(n - 1) + 4 * octagonal_number(n - 1) + 5 * octagonal_number(n - 1) + 6 * octagonal_number(n - 1)\n    if n == 8:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1) + 3 * octagonal_number(n - 1) + 4 * octagonal_number(n - 1) + 5 * octagonal_number(n - 1) + 6 * octagonal_number(n - 1) + 7 * octagonal_number(n - 1)\n    if n == 9:\n        return 1 + 3 * octagonal_number(n - 1) + 2 * octagonal_number(n - 1",
    "def find_nth_octagonal_number(n):\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 7\n    if n == 4:\n        return 9\n    if n == 5:\n        return 11\n    if n == 6:\n        return 13\n    if n == 7:\n        return 15\n    if n == 8:\n        return 17\n    if n == 9:\n        return 19\n    if n == 10:\n        return 21\n    if n == 11:\n        return 23\n    if n == 12:\n        return 27\n    if n == 13:\n        return 29\n    if n == 14:\n        return 31\n    if n == 15:\n        return 37\n    if n == 16:\n        return 43\n    if n == 17:\n        return 47\n    if n == 18:\n        return 49\n    if n == 19:\n        return 51\n    if n == 20:\n        return 58\n    if n == 21:\n        return 59\n    if n == 22:\n        return 61\n    if n == 23:\n        return 65\n    if n == 24:\n        return 71\n    if n == 25:\n        return 73\n    if n == 26:\n        return 78\n    if n == 27:\n        return 79\n    if n == 28:\n        return 83\n    if n == 29:\n        return 84\n    if n == 30:\n        return 85\n    if n == 31:\n        return 86\n    if n == 32:\n        return 87\n    if n == 33:\n        return 89\n    if n == 34:\n        return 90\n    if n == 35:\n        return 91\n    if n == 36:\n        return 92\n    if n == 37:\n        return 93\n    if n == 38:\n        return 94\n    if n == 39:\n        return 95\n    if n == 40:\n        return 96\n    if n == 41:\n        return 97\n    if n == 42:\n        return 98\n    if n == 43:\n        return 99\n    if n == 44:",
    "def find_nth_octagonal_number(n):\n    a = 1\n    for i in range(1, n):\n        a += a * (2 * i + 1)\n    return a\n\nprint(find_nth_octagonal_number(10))",
    "def nth_octagonal(n):\n    def is_even(num):\n        return num % 2 == 0\n\n    def is_odd(num):\n        return num % 2!= 0\n\n    def is_octagonal(num):\n        return (num % 4 == 0 or num % 8 == 0) and is_even(num) and is_odd(num)\n\n    def is_triple(num):\n        return num % 6 == 0\n\n    if is_octagonal(n):\n        return n\n\n    if is_triple(n):\n        return n * 3\n\n    if is_octagonal(n + 1):\n        return n + 1\n\n    return None\n\n\nprint(nth_octagonal(1))\nprint(nth_octagonal(2))\nprint(nth_octagonal(3))\nprint(nth_octagonal(4))\nprint(nth_octagonal(5))\nprint(nth_octagonal(6))\nprint(nth_octagonal(7))\nprint(nth_octagonal(8))\nprint(nth_octagonal(9))\nprint(nth_octagonal(10))",
    "def get_octagonal(n):\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 4\n    if n == 4:\n        return 8\n    if n == 5:\n        return 16\n    if n == 6:\n        return 32\n    if n == 7:\n        return 64\n    if n == 8:\n        return 128\n    if n == 9:\n        return 256\n    if n == 10:\n        return 512\n    if n == 11:\n        return 1024\n    return 0\n\nprint(get_octagonal(int(input(\"Input: \"))))",
    "def octagonal_number(n):\n    #write your code here\n    total = 0\n    for i in range(1, n+1):\n        total += i * (i+1) / 2\n    return total\n\nprint(octagonal_number(10))",
    "def get_octagonal_number(n):\n    i = 1\n    while n > 1:\n        i += 1\n        n -= 1\n        if i % 2 == 0:\n            print(i)\n            break\n\nget_octagonal_number(3)",
    "def nth_octagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    return int(n ** (1/3))\n\n\nif __name__ == \"__main__\":\n    print(nth_octagonal_number(int(input())))",
    "def nth_octagonal(n):\n    octagonal = [0 for i in range(n+1)]\n    octagonal[0] = 1\n    octagonal[1] = 3\n    for i in range(2, n+1):\n        octagonal[i] = octagonal[i-1] + octagonal[i-2] + octagonal[i-3]\n    return octagonal[n]\n\n\nprint(nth_octagonal(8))",
    "def nth_octagonal_number(n):\n    # Write your code here.\n    if n <= 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    elif n == 3:\n        return 9\n    elif n == 4:\n        return 16\n    elif n == 5:\n        return 25\n    elif n == 6:\n        return 36\n    elif n == 7:\n        return 49\n    elif n == 8:\n        return 64\n    elif n == 9:\n        return 81\n    elif n == 10:\n        return 100\n    elif n == 11:\n        return 101\n    elif n == 12:\n        return 103\n    elif n == 13:\n        return 104\n    elif n == 14:\n        return 105\n    elif n == 15:\n        return 106\n    elif n == 16:\n        return 107\n    elif n == 17:\n        return 108\n    elif n == 18:\n        return 109\n    elif n == 19:\n        return 110\n    elif n == 20:\n        return 111\n    elif n == 21:\n        return 112\n    elif n == 22:\n        return 113\n    elif n == 23:\n        return 114\n    elif n == 24:\n        return 115\n    elif n == 25:\n        return 116\n    elif n == 26:\n        return 117\n    elif n == 27:\n        return 118\n    elif n == 28:\n        return 119\n    elif n == 29:\n        return 120\n    elif n == 30:\n        return 121\n    elif n == 31:\n        return 122\n    elif n == 32:\n        return 123\n    elif n == 33:\n        return 124\n    elif n == 34:\n        return 125\n    elif n == 35:\n        return 126\n    elif n == 36:\n        return 127\n    elif n == 37:\n        return 130\n    elif n == 38:\n        return 131\n    elif n == 39:\n        return 132\n    elif n == 40:\n        return 133\n    elif n == 41:\n        return 134\n    elif n == 42:\n        return 135\n    elif n ==",
    "def octagonal_number(n):\n    oct_num = 1\n    for i in range(1,n+1):\n        oct_num = oct_num * 3 + 1\n    return oct_num",
    "def octagonal(n):\n    a = [1, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 24, 28, 32]\n    a = a[n-1]\n    for i in range(2, n+1):\n        a += a[i-1]*i\n    return a\n\nprint(octagonal(3))",
    "def nth_octagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n < 0:\n        return None\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 9\n    if n == 4:\n        return 16\n    if n == 5:\n        return 25\n    if n == 6:\n        return 36\n    if n == 7:\n        return 49\n    if n == 8:\n        return 64\n    if n == 9:\n        return 81\n    if n == 10:\n        return 100\n    if n == 11:\n        return 101\n    if n == 12:\n        return 102\n    if n == 13:\n        return 103\n    if n == 14:\n        return 104\n    if n == 15:\n        return 105\n    if n == 16:\n        return 106\n    if n == 17:\n        return 107\n    if n == 18:\n        return 108\n    if n == 19:\n        return 109\n    if n == 20:\n        return 110\n    if n == 21:\n        return 111\n    if n == 22:\n        return 112\n    if n == 23:\n        return 113\n    if n == 24:\n        return 114\n    if n == 25:\n        return 115\n    if n == 26:\n        return 116\n    if n == 27:\n        return 117\n    if n == 28:\n        return 118\n    if n == 29:\n        return 119\n    if n == 30:\n        return 120\n    if n == 31:\n        return 121\n    if n == 32:\n        return 122\n    if n == 33:\n        return 123\n    if n == 34:\n        return 124\n    if n == 35:\n        return 125\n    if n == 36:\n        return 126\n    if n == 37:\n        return 127\n    if n == 38:\n        return 128\n    if n == 39:\n        return 131\n    if n == 40:\n        return 132\n    if n == 41:",
    "def octagonal_number(n):\n    if n == 1:\n        return 1\n    else:\n        return n * (n + 1) / 2\n\n\nprint(octagonal_number(8))",
    "def nth_octagonal(n):\n    n = int(n)\n    if n < 1:\n        raise ValueError\n\n    i = 2\n    while i <= n:\n        i += 1\n        for j in range(i,n+1):\n            if j%2==0:\n                print(j)\n            else:\n                print(j+1)\n\nif __name__ == '__main__':\n    nth_octagonal(10)",
    "def octagonal(n):\n    return sum(map(lambda i: i**2, range(1, n+1)))\n\n\nif __name__ == \"__main__\":\n    assert octagonal(2) == 4\n    assert octagonal(3) == 9\n    assert octagonal(5) == 12",
    "def find_octagonal_number(n):\n    # Write your code here\n    i = 1\n    while i < n:\n        print(i, oct(i), sep='')\n        i += 1\n\ndef oct(n):\n    return int(str(n**(1/3))[::-1])\n\nfind_octagonal_number(7)",
    "def nth_octagonal(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    else:\n        return (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8) * (n - 9) * (n - 10)\n\n\nif __name__ == \"__main__\":\n    print(nth_octagonal(1))\n    print(nth_octagonal(2))\n    print(nth_octagonal(3))\n    print(nth_octagonal(4))\n    print(nth_octagonal(5))\n    print(nth_octagonal(6))\n    print(nth_octagonal(7))\n    print(nth_octagonal(8))\n    print(nth_octagonal(9))\n    print(nth_octagonal(10))",
    "def nth_octagonal(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    elif n == 3:\n        return 9\n    elif n == 4:\n        return 16\n    elif n == 5:\n        return 25\n    elif n == 6:\n        return 36\n    elif n == 7:\n        return 49\n    elif n == 8:\n        return 64\n    elif n == 9:\n        return 81\n    elif n == 10:\n        return 100\n    elif n == 11:\n        return 110\n    elif n == 12:\n        return 120\n    elif n == 13:\n        return 130\n    elif n == 14:\n        return 140\n    elif n == 15:\n        return 160\n    elif n == 16:\n        return 170\n    elif n == 17:\n        return 180\n    elif n == 18:\n        return 200\n    elif n == 19:\n        return 210\n    elif n == 20:\n        return 240\n    elif n == 21:\n        return 260\n    elif n == 22:\n        return 280\n    elif n == 23:\n        return 300\n    elif n == 24:\n        return 310\n    elif n == 25:\n        return 320\n    elif n == 26:\n        return 330\n    elif n == 27:\n        return 340\n    elif n == 28:\n        return 350\n    elif n == 29:\n        return 360\n    elif n == 30:\n        return 410\n    elif n == 31:\n        return 420\n    elif n == 32:\n        return 430\n    elif n == 33:\n        return 440\n    elif n == 34:\n        return 450\n    elif n == 35:\n        return 510\n    elif n == 36:\n        return 520\n    elif n == 37:\n        return 530\n    elif n == 38:\n        return 540\n    elif n == 39:\n        return 610\n    elif n == 40:\n        return 620\n    elif n == 41:",
    "def octagonal_number(n):\n    i = 0\n    while i < n:\n        print(i)\n        i += 1\n\n\noctagonal_number(3)",
    "def octagonal_num(n):\n    i = 1\n    while i <= n:\n        if (i % 3 == 0) and (i % 5 == 0):\n            print(i)\n        i += 1\n\n\noctagonal_num(7)",
    "def octagonal_number(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 4\n    elif n == 4:\n        return 6\n    elif n == 5:\n        return 8\n    elif n == 6:\n        return 10\n    elif n == 7:\n        return 12\n    elif n == 8:\n        return 14\n    elif n == 9:\n        return 16\n    elif n == 10:\n        return 18\n    elif n == 11:\n        return 20\n    elif n == 12:\n        return 24\n    elif n == 13:\n        return 28\n    elif n == 14:\n        return 32\n    elif n == 15:\n        return 36\n    elif n == 16:\n        return 40\n    elif n == 17:\n        return 44\n    elif n == 18:\n        return 48\n    elif n == 19:\n        return 54\n    elif n == 20:\n        return 56\n    elif n == 21:\n        return 64\n    elif n == 22:\n        return 72\n    elif n == 23:\n        return 80\n    elif n == 24:\n        return 88\n    elif n == 25:\n        return 96\n    elif n == 26:\n        return 112\n    elif n == 27:\n        return 144\n    elif n == 28:\n        return 160\n    elif n == 29:\n        return 176\n    elif n == 30:\n        return 192\n    elif n == 31:\n        return 224\n    elif n == 32:\n        return 288\n    elif n == 33:\n        return 324\n    elif n == 34:\n        return 352\n    elif n == 35:\n        return 376\n    elif n == 36:\n        return 384\n    elif n == 37:\n        return 388\n    elif n == 38:\n        return 432\n    elif n == 39:\n        return 448\n    elif n == 40:\n        return 464\n    elif n == 41:\n        return 472\n    elif n == 42:\n        return 488\n    elif n == 43:\n        return 524\n    elif n == 44:\n        return 552",
    "def nth_octagonal_number(n):\n    a = 1\n    for i in range(n):\n        a = a + 3\n    print(a)\n\nnth_octagonal_number(10)",
    "def nth_octagonal(n):\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1 + 2\n    if n == 3:\n        return 1 + 2 + 4\n    if n == 4:\n        return 1 + 2 + 4 + 8\n    if n == 5:\n        return 1 + 2 + 4 + 8 + 16\n    if n == 6:\n        return 1 + 2 + 4 + 8 + 16 + 32\n    if n == 7:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64\n    if n == 8:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128\n    if n == 9:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256\n    if n == 10:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512\n    if n == 11:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024\n    if n == 12:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048\n    if n == 13:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096\n    if n == 14:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192\n    if n == 15:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192\n    if n == 16:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192\n    if n == 17:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192\n    if n == 18:\n        return 1 + 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 + 2048 + 4096 + 8192\n    if n == 19:\n        return 1 + 2 + 4 +",
    "def find_nth_octagonal_number(n):\n    a = 0\n    b = 1\n    c = 2\n    d = 3\n    e = 4\n    f = 5\n    g = 6\n    h = 7\n    i = 8\n    j = 9\n    k = 10\n    l = 11\n    m = 12\n    n = 13\n    o = 14\n    p = 15\n    q = 16\n    r = 17\n    s = 18\n    t = 19\n    u = 20\n    v = 21\n    w = 22\n    x = 23\n    y = 24\n    z = 25\n    a = a + b + c\n    b = b + d + e\n    c = c + f + g\n    d = d + h + i\n    e = e + j + k\n    f = f + l + m\n    g = g + n\n    h = h + o + p\n    i = i + q + r\n    j = j + s + t\n    k = k + u + v\n    l = l + w\n    m = m + x + y\n    n = n + z\n    return a\n\n\nprint(find_nth_octagonal_number(6))",
    "def octagonal(n):\n    octagonal_list = []\n    for i in range(1, n+1):\n        octagonal_list.append(i * (i + 1) / 2)\n    return octagonal_list\n\ndef test():\n    assert octagonal(1) == [1]\n    assert octagonal(2) == [1, 2]\n    assert octagonal(3) == [1, 2, 4]\n    assert octagonal(4) == [1, 2, 4, 8]\n    assert octagonal(5) == [1, 2, 4, 8, 16]\n    assert octagonal(6) == [1, 2, 4, 8, 16, 32]\n    assert octagonal(7) == [1, 2, 4, 8, 16, 32, 64]\n    assert octagonal(8) == [1, 2, 4, 8, 16, 32, 64, 128]\n    assert octagonal(9) == [1, 2, 4, 8, 16, 32, 64, 128, 256]\n    assert octagonal(10) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512]\n    assert octagonal(11) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024]\n    assert octagonal(12) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048]\n    assert octagonal(13) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]\n    assert octagonal(14) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]\n    assert octagonal(15) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]\n    assert octagonal(16) == [1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 4096]\n    assert octagonal(17) == [",
    "def nth_octagonal(n):\n    n += 1\n    a = 1\n    b = 1\n    c = 1\n    d = 1\n    e = 1\n    f = 1\n    g = 1\n    h = 1\n    i = 1\n    j = 1\n    k = 1\n    l = 1\n    m = 1\n    n = 1\n    o = 1\n    p = 1\n    q = 1\n    r = 1\n    s = 1\n    t = 1\n    u = 1\n    v = 1\n    w = 1\n    x = 1\n    y = 1\n    z = 1\n\n    if n <= 1:\n        return 1\n    while n > 0:\n        a += 1\n        b += 1\n        c += 1\n        d += 1\n        e += 1\n        f += 1\n        g += 1\n        h += 1\n        i += 1\n        j += 1\n        k += 1\n        l += 1\n        m += 1\n        n -= 1\n        o += 1\n        p += 1\n        q += 1\n        r += 1\n        s += 1\n        t += 1\n        u += 1\n        v += 1\n        w += 1\n        x += 1\n        y += 1\n        z += 1\n\n    return (a * b * c * d * e * f * g * h * i * j * k * l * m * n * o * p * q * r * s * t * u * v * w)\n\n\nif __name__ == \"__main__\":\n    print(nth_octagonal(4))\n    print(nth_octagonal(5))\n    print(nth_octagonal(6))\n    print(nth_octagonal(7))\n    print(nth_octagonal(8))\n    print(nth_octagonal(9))\n    print(nth_octagonal(10))\n    print(nth_octagonal(11))\n    print(nth_octagonal(12))\n    print(nth_octagonal(13))\n    print(nth_octagonal(14))\n    print(nth_octagonal",
    "def nth_octagonal(n):\n    # Write your code here\n    return sum(range(1, n + 1))\n\n\nprint(nth_octagonal(10))",
    "def find_octagonal(n):\n    n = int(n)\n    if n < 1:\n        return None\n\n    if n == 1:\n        return 1\n\n    prev = 0\n    cur = 1\n    for i in range(2, n + 1):\n        prev, cur = cur, prev + cur\n    return cur\n\n\nif __name__ == \"__main__\":\n    print(find_octagonal(3))",
    "def octagonal(n):\n    count = 1\n    while count <= n:\n        count += 1\n        count += 2\n        count += 3\n        count += 4\n        count += 5\n        count += 6\n        count += 7\n        count += 8\n        count += 9\n        count += 10\n        count += 11\n        count += 12\n        count += 13\n        count += 14\n        count += 15\n        count += 16\n        count += 17\n        count += 18\n        count += 19\n        count += 20\n        count += 21\n        count += 22\n        count += 23\n        count += 24\n        count += 25\n        count += 26\n        count += 27\n        count += 28\n        count += 29\n        count += 30\n        count += 31\n        count += 32\n        count += 33\n        count += 34\n        count += 35\n        count += 36\n        count += 37\n        count += 38\n        count += 39\n        count += 40\n        count += 41\n        count += 42\n        count += 43\n        count += 44\n        count += 45\n        count += 46\n        count += 47\n        count += 48\n        count += 49\n        count += 50\n        count += 51\n        count += 52\n        count += 53\n        count += 54\n        count += 55\n        count += 56\n        count += 57\n        count += 58\n        count += 59\n        count += 60\n        count += 61\n        count += 62\n        count += 63\n        count += 64\n        count += 65\n        count += 66\n        count += 67\n        count += 68\n        count += 69\n        count += 70\n        count += 71\n        count += 72\n        count += 73\n        count += 74\n        count += 75\n        count += 76\n        count += 77\n        count += 78\n        count += 79\n        count += 80\n        count += 81\n        count += 82\n        count += 83\n        count += 84\n        count += 85\n        count += 86\n        count += 87\n        count += 88\n        count += 89\n        count += 90\n        count += 91\n        count += 92\n        count += 93\n        count += 94\n        count += 95\n        count += 96\n        count += 97\n        count",
    "class Solution:\n    def findNthOctagonalNumber(self, n: int) -> int:\n        octagonal = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n        count = 0\n        for i in range(1, n+1):\n            count += octagonal[i-1]\n        return count",
    "def octagonal_number(n):\n    if n <= 1:\n        return 1\n    else:\n        return n * (n + 1) // 2",
    "def nth_octagonal(n):\n    n = n+1\n    return n**2",
    "def octagonal_number(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 2\n    else:\n        return octagonal_number(n-1) + octagonal_number(n-2) + octagonal_number(n-3)\n\n\nprint(octagonal_number(0))\nprint(octagonal_number(1))\nprint(octagonal_number(2))\nprint(octagonal_number(3))\nprint(octagonal_number(4))\nprint(octagonal_number(5))\nprint(octagonal_number(6))\nprint(octagonal_number(7))\nprint(octagonal_number(8))\nprint(octagonal_number(9))\nprint(octagonal_number(10))",
    "def octagonal_num(n):\n    if n < 0:\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 4\n    if n == 3:\n        return 9\n    if n == 4:\n        return 16\n    if n == 5:\n        return 25\n    if n == 6:\n        return 36\n    if n == 7:\n        return 49\n    if n == 8:\n        return 64\n    if n == 9:\n        return 81\n    if n == 10:\n        return 100\n    if n == 11:\n        return 101\n    if n == 12:\n        return 102\n    if n == 13:\n        return 103\n    if n == 14:\n        return 104\n    if n == 15:\n        return 105\n    if n == 16:\n        return 106\n    if n == 17:\n        return 107\n    if n == 18:\n        return 108\n    if n == 19:\n        return 109\n    if n == 20:\n        return 111\n    if n == 21:\n        return 112\n    if n == 22:\n        return 113\n    if n == 23:\n        return 114\n    if n == 24:\n        return 115\n    if n == 25:\n        return 116\n    if n == 26:\n        return 117\n    if n == 27:\n        return 118\n    if n == 28:\n        return 119\n    if n == 29:\n        return 120\n    if n == 30:\n        return 121\n    if n == 31:\n        return 122\n    if n == 32:\n        return 123\n    if n == 33:\n        return 134\n    if n == 34:\n        return 135\n    if n == 35:\n        return 136\n    if n == 36:\n        return 137\n    if n == 37:\n        return 138\n    if n == 38:\n        return 149\n    if n == 39:\n        return 151\n    if n == 40:\n        return 162\n    if n == 41:\n        return 173\n    if n == 42:\n        return",
    "def octagonal(n):\n    n = n % 7\n    if n == 0:\n        return 0\n    else:\n        return n + 1\n\n\nprint(octagonal(7))",
    "def octagonal(n):\n    oct = 1\n    for i in range(n):\n        oct = oct * 9 + 1\n    return oct\n\nif __name__ == '__main__':\n    assert octagonal(1) == 1\n    assert octagonal(2) == 2\n    assert octagonal(3) == 3\n    assert octagonal(4) == 4\n    assert octagonal(5) == 5\n    assert octagonal(6) == 6\n    assert octagonal(7) == 7\n    assert octagonal(8) == 8\n    assert octagonal(9) == 9",
    "def nth_octagonal(n):\n    i = 1\n    while i < n:\n        print(i, end=' ')\n        i += 1\n    print()\n\nnth_octagonal(6)",
    "def find_nth_octagonal_number(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 4\n    elif n == 3:\n        return 8\n    elif n == 4:\n        return 16\n    elif n == 5:\n        return 32\n    elif n == 6:\n        return 64\n    elif n == 7:\n        return 128\n    elif n == 8:\n        return 256\n    elif n == 9:\n        return 512\n    elif n == 10:\n        return 1024\n    elif n == 11:\n        return 2048\n    elif n == 12:\n        return 4096\n    elif n == 13:\n        return 8192\n    elif n == 14:\n        return 16384\n    elif n == 15:\n        return 32768\n    elif n == 16:\n        return 65536\n    elif n == 17:\n        return 131072\n    elif n == 18:\n        return 262144\n    elif n == 19:\n        return 524288\n    elif n == 20:\n        return 1048576\n    elif n == 21:\n        return 2097152\n    elif n == 22:\n        return 4194304\n    elif n == 23:\n        return 8466400\n    elif n == 24:\n        return 16777216\n    elif n == 25:\n        return 3276808\n    elif n == 26:\n        return 4943040\n    elif n == 27:\n        return 104857600\n    elif n == 28:\n        return 26214400\n    elif n == 29:\n        return 52428800\n    elif n == 30:\n        return 104857600\n    elif n == 31:\n        return 1677721600\n    elif n == 32:\n        return 4943040\n    elif n == 33:\n        return 1677721600\n    elif n == 34:\n        return 32768\n    elif n == 35:\n        return 32768\n    elif n == 36:\n        return 64768\n    elif n == 37:\n        return 64768\n    elif n == 38:\n        return 128768\n    elif n",
    "def octagonal_number(n):\n    return (n + 1) ** 3 - 2 * n ** 2 + 1\n\n\nif __name__ == \"__main__\":\n    print(octagonal_number(8))",
    "def find_octagonal(n):\n    num = 1\n    while n > 1:\n        if n % 2 == 0:\n            num += 1\n        n -= 1\n    return num\n\n\nif __name__ == \"__main__\":\n    print(find_octagonal(1))\n    print(find_octagonal(2))\n    print(find_octagonal(3))\n    print(find_octagonal(4))\n    print(find_octagonal(5))\n    print(find_octagonal(6))\n    print(find_octagonal(7))\n    print(find_octagonal(8))\n    print(find_octagonal(9))\n    print(find_octagonal(10))\n    print(find_octagonal(11))\n    print(find_octagonal(12))\n    print(find_octagonal(13))\n    print(find_octagonal(14))\n    print(find_octagonal(15))\n    print(find_octagonal(16))\n    print(find_octagonal(17))\n    print(find_octagonal(18))\n    print(find_octagonal(19))\n    print(find_octagonal(20))\n    print(find_octagonal(21))\n    print(find_octagonal(22))\n    print(find_octagonal(23))\n    print(find_octagonal(24))\n    print(find_octagonal(25))\n    print(find_octagonal(26))\n    print(find_octagonal(27))\n    print(find_octagonal(28))\n    print(find_octagonal(29))\n    print(find_octagonal(30))\n    print(find_octagonal(31))\n    print(find_octagonal(32))\n    print(find_octagonal(33))\n    print(find_octagonal(34))\n    print(find_octagonal(35))\n    print(find_octagonal(36))\n    print(find_octagonal(37))\n    print(find_octag",
    "def octagonal(n):\n    if n < 0:\n        return -1\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return octagonal(n-1) + octagonal(n-2) + octagonal(n-3)\n\n\nif __name__ == '__main__':\n    print(octagonal(5))",
    "def octagonal_num(n):\n    return int((2 * n + 1) / 3)\n\n\ndef test_octagonal_num():\n    assert octagonal_num(3) == 4\n    assert octagonal_num(4) == 8\n    assert octagonal_num(5) == 13\n    assert octagonal_num(6) == 22",
    "def nth_octagonal_number(n):\n    result = 0\n    for i in range(1, n+1):\n        result += i\n    return result\n\nprint(nth_octagonal_number(10))",
    "def octagonal_number(n):\n    \"\"\"\n    :type n: int\n    :rtype: int\n    \"\"\"\n    # the first octagonal number is 1\n    if n == 1:\n        return 1\n\n    # the next octagonal number is the number of numbers in the previous octagonal number\n    next_oct = 1\n    for _ in range(n - 1):\n        # the next octagonal number is the number of numbers in the previous octagonal number\n        next_oct += 1\n\n    # the next octagonal number is the number of numbers in the current octagonal number\n    oct = 1\n    for _ in range(next_oct - 1):\n        oct += 1\n\n    return oct\n\n\nif __name__ == \"__main__\":\n    assert octagonal_number(3) == 4\n    assert octagonal_number(5) == 6\n    assert octagonal_number(7) == 9\n    assert octagonal_number(8) == 11\n    assert octagonal_number(9) == 13",
    "def nth_octagonal_number(n):\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 4\n    elif n == 4:\n        return 6\n    elif n == 5:\n        return 8\n    elif n == 6:\n        return 9\n    elif n == 7:\n        return 10\n    elif n == 8:\n        return 11\n    elif n == 9:\n        return 12\n    elif n == 10:\n        return 13\n    elif n == 11:\n        return 14\n    elif n == 12:\n        return 15\n    elif n == 13:\n        return 16\n    elif n == 14:\n        return 17\n    elif n == 15:\n        return 18\n    elif n == 16:\n        return 19\n    elif n == 17:\n        return 20\n    elif n == 18:\n        return 21\n    elif n == 19:\n        return 22\n    elif n == 20:\n        return 23\n    elif n == 21:\n        return 24\n    elif n == 22:\n        return 25\n    elif n == 23:\n        return 26\n    elif n == 24:\n        return 27\n    elif n == 25:\n        return 28\n    elif n == 26:\n        return 29\n    elif n == 27:\n        return 30\n    elif n == 28:\n        return 31\n    elif n == 29:\n        return 32\n    elif n == 30:\n        return 33\n    elif n == 31:\n        return 34\n    elif n == 32:\n        return 35\n    elif n == 33:\n        return 36\n    elif n == 34:\n        return 37\n    elif n == 35:\n        return 38\n    elif n == 36:\n        return 39\n    elif n == 37:\n        return 40\n    elif n == 38:\n        return 41\n    elif n == 39:\n        return 42\n    elif n == 40:\n        return 43\n    elif n == 41:\n        return 44\n    elif n == 42:\n        return 45\n    elif n == 43:\n        return 46\n    elif n == 44:\n        return 47\n    elif n == 45:\n        return 48\n    elif",
    "def octagonal_number(n):\n    if n <= 1:\n        return 1\n\n    sum = 0\n    for i in range(1, n + 1):\n        sum += (i ** 3)\n\n    return sum\n\n\ndef main():\n    print(octagonal_number(10))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def find_nth_octagonal_number(n):\n    return find_nth_octagonal_number_helper(n, 0, 1)\n\ndef find_nth_octagonal_number_helper(n, i, j):\n    if n == 0:\n        return i\n    if i == 0:\n        return j\n    if j == 0:\n        return find_nth_octagonal_number_helper(n - 1, i - 1, j)\n    return find_nth_octagonal_number_helper(n - 1, i - 1, j + 1) + find_nth_octagonal_number_helper(n - 1, i, j - 1)\n\nprint(find_nth_octagonal_number(3))\nprint(find_nth_octagonal_number(5))\nprint(find_nth_octagonal_number(7))\nprint(find_nth_octagonal_number(9))",
    "def nth_octagonal(n):\n    oct = 1\n    for i in range(1, n + 1):\n        oct += 1\n        oct *= 4\n        oct %= 12\n        print(oct)\n\n\nnth_octagonal(10)",
    "def octagonal_number(n):\n    a = 1\n    for i in range(1, n+1):\n        a = a * 3\n        a += 1\n    return a\n\n\ndef test():\n    assert octagonal_number(1) == 1\n    assert octagonal_number(3) == 2\n    assert octagonal_number(5) == 4\n    assert octagonal_number(7) == 6\n    assert octagonal_number(10) == 15\n    assert octagonal_number(20) == 30\n    assert octagonal_number(40) == 60\n    assert octagonal_number(100) == 100\n\n\nif __name__ == '__main__':\n    test()",
    "def get_nth_octagonal(n):\n    # Base case\n    if n <= 1:\n        return n\n\n    # Recursive case\n    return n + get_nth_octagonal(n - 1)\n\n\nif __name__ == \"__main__\":\n    print(get_nth_octagonal(6))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}