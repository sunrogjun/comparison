{
  "problem": {
    "task_id": "MBPP/130",
    "prompt": "Write a function to find the item with maximum frequency in a given list.",
    "canonical_solution": "from collections import defaultdict\r\ndef max_occurrences(nums):\r\n    dict = defaultdict(int)\r\n    for i in nums:\r\n        dict[i] += 1\r\n    result = max(dict.items(), key=lambda x: x[1]) \r\n    return result",
    "test_list": [
      "assert max_occurrences([2,3,8,4,7,9,8,2,6,5,1,6,1,2,3,2,4,6,9,1,2])==(2, 5)",
      "assert max_occurrences([2,3,8,4,7,9,8,7,9,15,14,10,12,13,16,16,18])==(8, 2)",
      "assert max_occurrences([10,20,20,30,40,90,80,50,30,20,50,10])==(20, 3)"
    ],
    "challenge_test_list": [],
    "problem_id": 119
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def find_max_freq(lst):\n    if len(lst) == 0:\n        return None\n\n    if len(lst) == 1:\n        return lst[0]\n\n    freq = {}\n    for i in lst:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n\n    max_freq = None\n    max_freq_count = None\n    for key, val in freq.items():\n        if max_freq == None or val > max_freq_count:\n            max_freq = key\n            max_freq_count = val\n\n    return max_freq\n\n\nprint(find_max_freq([1, 1, 1, 1, 2, 2, 2, 3, 3]))\nprint(find_max_freq([1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3]))\nprint(find_max_freq([1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3",
    "def find_max_freq(arr):\n    if len(arr) == 0:\n        return None\n\n    max_freq = 0\n    max_freq_index = 0\n\n    for index, val in enumerate(arr):\n        if val > max_freq:\n            max_freq = val\n            max_freq_index = index\n\n    return arr[max_freq_index]\n\n\nprint(find_max_freq([1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 3]))",
    "def find_item(arr, max_freq):\n    return max(arr, key = arr.count)\n\n\nif __name__ == \"__main__\":\n    print(find_item([1, 2, 3, 4, 5, 6], 3))",
    "def max_freq(arr):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_item = i\n    return max_freq_item\n\n\ndef max_freq_recursive(arr, max_freq):\n    if max_freq == 0:\n        return max_freq_item\n    else:\n        max_freq = max(max_freq, arr[max_freq_item])\n        return max_freq_recursive(arr, max_freq)\n\n\ndef max_freq_iterative(arr):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_item = i\n    return max_freq_item\n\n\ndef main():\n    print(\"max_freq: \" + str(max_freq(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))\n    print(\"max_freq_recursive: \" + str(max_freq_recursive(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))\n    print(\"max_freq_iterative: \" + str(max_freq_iterative(arr=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))\n\n\nmain()",
    "def maximum_frequency(arr):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n\n    return max_freq_index\n\n\nprint(maximum_frequency([1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5]))",
    "def find_max_freq(lst):\n    freq = {}\n    for i in range(len(lst)):\n        if lst[i] not in freq:\n            freq[lst[i]] = 1\n        else:\n            freq[lst[i]] += 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == '__main__':\n    assert find_max_freq([1, 1, 2, 2, 2, 2, 3, 3, 3, 3]) == 3",
    "def maximum_frequency(arr):\n    freq = {}\n    for item in arr:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    return max(freq, key=freq.get)\n\nprint(maximum_frequency([1,2,3,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,",
    "def find_max_freq(arr):\n    dic = {}\n    for item in arr:\n        if item in dic:\n            dic[item] += 1\n        else:\n            dic[item] = 1\n\n    for key in dic:\n        if dic[key] > len(arr) // 2:\n            return key\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([\"a\", \"b\", \"a\", \"b\", \"a\", \"b\"]))",
    "def max_frequency(l):\n    dic = {}\n    for i in l:\n        dic[i] = dic.get(i, 0) + 1\n\n    return max(dic, key=dic.get)\n\n\nif __name__ == \"__main__\":\n    print(max_frequency([1, 2, 1, 2, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,",
    "def find_max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    return max(freq, key=freq.get)\n\n\nprint(find_max_freq([1, 2, 2, 3, 4, 2, 3, 4, 5]))",
    "def find_max_freq(l):\n    # Your code here\n    freq_dict = {}\n    for item in l:\n        if item in freq_dict:\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n\n    max_freq = max(freq_dict, key=freq_dict.get)\n    return max_freq\n\n\n\n\nprint(find_max_freq([\"a\", \"b\", \"c\", \"a\", \"c\", \"b\"]))",
    "def maximum_freq(arr):\n    freq_dict = {}\n    for i in arr:\n        if i in freq_dict.keys():\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    max_freq = max(freq_dict.values())\n    max_freq_key = max(freq_dict.keys())\n    return max_freq_key\n\n\n\n\n\nprint(maximum_freq([1,2,3,4,5,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7",
    "def max_freq(arr):\n    max_freq = -1\n    max_freq_item = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_item = i\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    print(max_freq([1, 2, 1, 2, 3, 3, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,",
    "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    max_freq = None\n    max_freq_index = None\n    for key, value in freq.items():\n        if max_freq is None or value > max_freq:\n            max_freq = value\n            max_freq_index = key\n    return max_freq_index\n\n\narr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(find_max_freq(arr))",
    "def maximum_frequency(l):\n    d = {}\n    for i in l:\n        d[i] = d.get(i, 0) + 1\n    return max(d, key=d.get)\n\nprint(maximum_frequency([1, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6]))",
    "def max_freq(data):\n    freq = {}\n    for i in data:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    max_freq = ''\n    for i in freq:\n        if freq[i] > len(max_freq):\n            max_freq = i\n    return max_freq\n\n\nif __name__ == '__main__':\n    data = [1, 2, 1, 1, 3, 2, 2, 3, 4, 2, 4, 4, 4, 4, 5, 6, 4, 6, 5]\n    print(max_freq(data))",
    "def find_max_freq(l):\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return l[0]\n    freq = {}\n    for i in l:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5]))\n    print(find_max_freq([1, 2, 3, 4, 5]))\n    print(find_max_freq([1, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5]))",
    "def max_freq(lst):\n    freq_dict = {}\n    for item in lst:\n        if item in freq_dict.keys():\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n    max_freq = max(freq_dict.values())\n    for item in freq_dict.keys():\n        if freq_dict[item] == max_freq:\n            return item",
    "def find_max_freq(lst):\n    if len(lst) == 0:\n        return -1\n    if len(lst) == 1:\n        return lst[0]\n    freq = {}\n    for item in lst:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    max_freq = None\n    max_freq_item = None\n    for key in freq:\n        if max_freq is None or freq[key] > max_freq:\n            max_freq = freq[key]\n            max_freq_item = key\n    return max_freq_item\n\n\nprint(find_max_freq([1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4]))",
    "def find_max_freq(a):\n    freq_dict = {}\n    for item in a:\n        if item not in freq_dict:\n            freq_dict[item] = 1\n        else:\n            freq_dict[item] += 1\n\n    max_freq = max(freq_dict.values())\n    max_item = freq_dict.keys()[freq_dict.values().index(max_freq)]\n\n    return max_item\n\nprint(find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\nprint(find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]))",
    "def max_frequency(list):\n    freq_dict = {}\n    for item in list:\n        if item not in freq_dict:\n            freq_dict[item] = 1\n        else:\n            freq_dict[item] += 1\n    max_freq = max(freq_dict, key=freq_dict.get)\n    return max_freq\n\nif __name__ == '__main__':\n    print(max_frequency([1, 2, 3, 2, 2, 3, 1, 1, 2, 2, 2, 2, 1, 2, 2]))",
    "def find_max_freq(nums):\n    # Fill this in.\n    pass\n\n\nprint(find_max_freq([2, 2, 3, 3, 3, 3, 3, 4, 4]))",
    "def max_freq(lst):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(lst)):\n        if lst[i] > max_freq:\n            max_freq = lst[i]\n            max_freq_index = i\n    return max_freq_index\n\n\nprint(max_freq([1, 2, 2, 3, 4, 5, 4, 5, 5, 6, 6, 7, 7, 8, 8, 8, 8, 9, 9, 9]))",
    "def find_max_frequency(arr):\n    freq_dict = {}\n    max_freq = -1\n    for item in arr:\n        if item in freq_dict:\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n\n        if freq_dict[item] > max_freq:\n            max_freq = freq_dict[item]\n\n    return max_freq\n\n\nif __name__ == '__main__':\n    assert find_max_frequency([1, 2, 1, 1, 1, 2, 2, 2, 2, 2]) == 2\n    assert find_max_frequency([1, 2, 3, 1, 1, 2, 2, 2, 2, 2]) == 3\n    assert find_max_frequency([1, 2, 2, 2, 2, 2, 2, 2]) == 2\n    assert find_max_frequency([1, 2, 3, 3, 3, 3, 3, 3, 3]) == 3",
    "def max_freq(arr):\n    freq = {}\n    for i in range(len(arr)):\n        if arr[i] not in freq:\n            freq[arr[i]] = 1\n        else:\n            freq[arr[i]] += 1\n    max_freq = max(freq.items(), key=lambda x: x[1])[0]\n    return max_freq\n\n\narr = [1, 3, 4, 5, 6, 7, 8, 9, 1, 4, 7, 6]\nprint(max_freq(arr))",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_item = None\n    for item in arr:\n        if item in arr:\n            arr.remove(item)\n        if len(arr) == 0:\n            return max_freq_item\n        if item > max_freq:\n            max_freq = item\n            max_freq_item = item\n    return max_freq_item\n\n\ndef test_find_max_freq():\n    assert find_max_freq([]) == None\n    assert find_max_freq([1]) == 1\n    assert find_max_freq([1, 2, 3, 4, 5, 6]) == 2\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8]) == 5\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 9\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 10\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == 11\n    assert find_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == 12\n\n\ntest_find_max_freq()",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_index = i\n    return max_index\n\n\n\narr = [1, 2, 2, 3, 3, 4, 4, 4, 4]\nprint(find_max_freq(arr))",
    "def find_max_freq(l):\n    freq_dict = {}\n    for i in l:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    max_value = max(freq_dict.values())\n    for i in freq_dict:\n        if freq_dict[i] == max_value:\n            return i\n    return -1\n\n\nif __name__ == '__main__':\n    print(find_max_freq([\"a\", \"a\", \"b\", \"b\", \"c\", \"a\", \"a\", \"a\", \"a\"]))",
    "def find_max_freq(list_):\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(list_)):\n        if list_[i] > max_freq:\n            max_freq = list_[i]\n            max_freq_index = i\n    return max_freq_index\n\n\nif __name__ == \"__main__\":\n    assert find_max_freq([1, 2, 2, 2, 3, 3]) == 1\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3]) == 2\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3]) == 3\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3]) == 3\n    assert find_max_freq([1, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3]) == 3",
    "def find_max_freq(arr):\n    freq_dict = {}\n    for i in arr:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    for key in freq_dict.keys():\n        if freq_dict[key] > len(arr) // 2:\n            return key\n\n\nprint(find_max_freq([1, 2, 3, 3, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2",
    "def find_max_freq(lst):\n    # Your code here\n    freq_dict = {}\n    for i in lst:\n        if i not in freq_dict:\n            freq_dict[i] = 1\n        else:\n            freq_dict[i] += 1\n    max_freq = max(freq_dict.values())\n    return max_freq\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n    print(find_max_freq(lst))\n\n\nif __name__ == '__main__':\n    main()",
    "def max_freq(a):\n    max_freq = 0\n    max_freq_idx = -1\n    for i in range(len(a)):\n        if a[i] > max_freq:\n            max_freq = a[i]\n            max_freq_idx = i\n    return max_freq_idx\n\n\nprint(max_freq([1, 2, 3, 2, 3, 2, 1, 2, 3, 3, 3, 2, 4, 5, 6, 7, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,",
    "def max_freq(arr):\n    count = {}\n    for i in arr:\n        if i in count:\n            count[i] += 1\n        else:\n            count[i] = 1\n    return max(count, key=count.get)\n\n\nprint(max_freq([1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 5, 5, 5]))",
    "def find_max_freq(list):\n    freq = {}\n    for item in list:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    return max(freq, key=freq.get)\n\n\nprint(find_max_freq([1, 2, 3, 2, 2, 3, 3, 3]))",
    "def find_max_freq(list):\n    max_freq = 0\n    max_index = 0\n    for i, x in enumerate(list):\n        if x > max_freq:\n            max_freq = x\n            max_index = i\n\n    return max_index\n\n\nprint(find_max_freq([1, 2, 3, 4, 2, 2, 3, 2, 2, 2, 4, 5, 3, 2, 3, 2, 2, 2, 3, 2, 4, 4, 4, 4, 4, 4, 5, 4, 4, 4, 4, 5, 4, 4, 5, 4, 5, 4, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 4, 5, 5, 4, 5, 5, 4, 4, 5, 5, 5, 4, 5, 4, 5, 5, 5, 5, 4, 4, 5, 5, 5, 5, 4, 5, 5, 5, 4, 5, 4, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 5, 4, 5, 5, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 4, 4, 5, 5, 5, 5, 5, 5, 5, 4, 5, 5, 5, 5, 4, 5, 5, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "def max_freq(lst):\n    max_freq = 0\n    max_item = \"\"\n    for item in lst:\n        if lst.count(item) > max_freq:\n            max_freq = lst.count(item)\n            max_item = item\n    return max_item\n\nprint(max_freq([1, 2, 3, 4, 5, 5, 3, 4, 2]))\nprint(max_freq([3, 2, 1, 1, 2, 3]))\nprint(max_freq([3, 2, 1, 1, 2, 3, 4, 5, 4, 3, 4, 2, 5, 4, 3, 5, 4, 3, 3, 2, 1, 2, 4, 2]))\nprint(max_freq([4, 5, 4, 4, 4, 5, 5, 4, 4, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "def find_max_freq(arr):\n    freq_dict = {}\n    for element in arr:\n        if element not in freq_dict:\n            freq_dict[element] = 1\n        else:\n            freq_dict[element] += 1\n\n    max_freq = 0\n    max_freq_item = None\n    for key, value in freq_dict.items():\n        if value > max_freq:\n            max_freq = value\n            max_freq_item = key\n\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6",
    "def max_freq(arr):\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(arr)):\n        if arr[i] == max_freq:\n            max_freq_index = i\n    return max_freq_index\n\nprint(max_freq([1, 2, 1, 2, 3, 1, 4, 4, 1, 3, 1, 2, 3, 3, 4, 4, 4, 5]))\nprint(max_freq([1, 2, 1, 2, 3, 1, 4, 4, 1, 3, 1, 2, 3, 3, 4, 4, 4, 5]))\nprint(max_freq([1, 2, 1, 2, 3, 1, 4, 4, 1, 3, 1, 2, 3, 3, 4, 4, 4, 5]))",
    "def max_freq(arr):\n    freq_dict = {}\n    max_freq = 0\n    for val in arr:\n        if val not in freq_dict:\n            freq_dict[val] = 1\n        else:\n            freq_dict[val] += 1\n\n        if freq_dict[val] > max_freq:\n            max_freq = freq_dict[val]\n            idx = val\n\n    return idx",
    "def max_frequency(lst):\n    dic = {}\n    for i in lst:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n\n    return max(dic, key=dic.get)\n\n\nlst = [1, 2, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,",
    "def find_item_max_freq(arr):\n    if len(arr) == 0:\n        return None\n    if len(arr) == 1:\n        return arr[0]\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return arr[max_freq_index]\n\n\ndef main():\n    arr = [3, 2, 4, 1, 1, 4, 5, 5, 5, 5, 5, 5, 6, 5, 5, 5, 5, 6, 5, 6, 5, 6, 5, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 6, 5, 5, 5, 6, 6, 6, 5, 6, 5, 6, 5, 6, 6, 6, 6, 6, 6, 6, 5, 5, 6, 6, 5, 6, 6, 6, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_idx = 0\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_idx = i\n    return max_idx\n\n\narr = [1, 3, 3, 3, 4, 4, 4, 4, 3, 2, 2, 3]\nprint(find_max_freq(arr))",
    "def find_max_freq(lst):\n    max_freq = 0\n    max_freq_item = None\n    for item in lst:\n        if item[1] > max_freq:\n            max_freq = item[1]\n            max_freq_item = item\n    return max_freq_item\n\n\nprint(find_max_freq([1, 1, 1, 2, 2, 2, 3, 3]))",
    "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    for i in freq:\n        if freq[i] > len(arr)//2:\n            return i\n\n\nprint(find_max_freq([1, 1, 1, 2, 2, 3, 3, 3, 4, 4]))",
    "def find_max_frequency(arr):\n    count = {}\n    for i in range(len(arr)):\n        if arr[i] in count:\n            count[arr[i]] += 1\n        else:\n            count[arr[i]] = 1\n    \n    max_freq = 0\n    max_num = 0\n    for k, v in count.items():\n        if v > max_freq:\n            max_freq = v\n            max_num = k\n    \n    return max_num\n\n\nprint(find_max_frequency([1,2,1,2,3,3,4,4,4]))",
    "def max_freq(lst):\n    if len(lst) == 0:\n        return None\n    else:\n        max_freq = 0\n        max_freq_item = None\n        for item in lst:\n            if lst.count(item) > max_freq:\n                max_freq = lst.count(item)\n                max_freq_item = item\n\n        return max_freq_item\n\n\nprint(max_freq([1, 3, 2, 1, 3, 2, 1, 3]))\nprint(max_freq([1, 1, 1, 1, 1, 1, 1]))",
    "def find_max_freq(lst):\n    freq = {}\n    for i in range(len(lst)):\n        if lst[i] in freq:\n            freq[lst[i]] += 1\n        else:\n            freq[lst[i]] = 1\n    \n    max_freq = 0\n    max_freq_item = ''\n    for key, value in freq.items():\n        if value > max_freq:\n            max_freq = value\n            max_freq_item = key\n    \n    return max_freq_item\n\n\nprint(find_max_freq([1,1,2,2,3,3,4,4,5,5,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,",
    "def find_max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    arr = [1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5]\n    print(find_max_freq(arr))",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_item = None\n\n    for item in arr:\n        if max_freq < item:\n            max_freq = item\n            max_freq_item = item\n\n    return max_freq_item",
    "def find_max_freq(arr):\n    freq_dict = {}\n    for i in arr:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    return max(freq_dict.items(), key=lambda x: x[1])[0]\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5, 2, 3, 4, 5]\n    print(find_max_freq(arr))",
    "def max_freq(list_of_nums):\n    max_freq = list_of_nums[0]\n    for i in list_of_nums:\n        if i > max_freq:\n            max_freq = i\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    print(max_freq([1, 2, 3, 4, 5, 5, 5, 5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7",
    "def find_max_frequency(arr):\n    if not arr:\n        return -1\n    max_freq = -1\n    max_freq_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return max_freq_index\n\n\ndef find_max_frequency_v2(arr):\n    if not arr:\n        return -1\n    max_freq = -1\n    max_freq_index = -1\n    freq_dict = {}\n    for i in range(len(arr)):\n        if arr[i] not in freq_dict:\n            freq_dict[arr[i]] = 1\n        else:\n            freq_dict[arr[i]] += 1\n    for k, v in freq_dict.items():\n        if v > max_freq:\n            max_freq = v\n            max_freq_index = k\n    return max_freq_index\n\n\nif __name__ == \"__main__\":\n    print(find_max_frequency([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5]))\n    print(find_max_frequency([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5]))\n    print(find_max_frequency([1, 1, 1, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5]))",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_index = 0\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return max_freq_index\n\n\narr = [1, 3, 2, 4, 5, 5, 2, 3, 4, 2, 2]\nprint(find_max_freq(arr))",
    "def find_item_with_max_freq(items):\n    freq = {}\n    for item in items:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    print(find_item_with_max_freq([1, 1, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6]))",
    "def max_freq(arr):\n    freq = {}\n    for x in arr:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n\n    max_val = max(freq.values())\n    for key, value in freq.items():\n        if value == max_val:\n            return key\n\n\nif __name__ == \"__main__\":\n    assert max_freq([1, 1, 2, 2, 2, 3, 3, 4, 4]) == 2\n    assert max_freq([1, 1, 2, 2, 2, 3, 3, 4, 4]) == 3",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n    return max_freq_index\n\n\ndef main():\n    print(find_max_freq([1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 4]))\n\n\nif __name__ == '__main__':\n    main()",
    "def find_max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n\n    max_freq = max(freq, key=freq.get)\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    assert find_max_freq([1, 1, 2, 2, 1, 3, 3]) == 2",
    "def find_max_frequency(list_of_numbers):\n    max_frequency = 0\n    max_num = None\n    for num in list_of_numbers:\n        if num > max_frequency:\n            max_frequency = num\n            max_num = num\n    return max_num\n\n\nlist_of_numbers = [3, 2, 1, 5, 4, 6, 2, 6]\nprint(find_max_frequency(list_of_numbers))",
    "def find_max_freq(lst):\n    freq = {}\n\n    for x in lst:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n\n    max_freq = 0\n    max_freq_item = None\n\n    for x in freq:\n        if freq[x] > max_freq:\n            max_freq = freq[x]\n            max_freq_item = x\n\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 4, 3, 1, 2, 4, 3, 4, 1, 2, 4, 3, 4]))",
    "def find_max_freq(arr):\n    max_freq = 0\n    max_item = None\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_item = i\n    return max_item\n\n\nprint(find_max_freq([1, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7",
    "def find_max_freq(l):\n    # Write your code here\n    l.sort()\n    freq_dict = {}\n    for i in range(len(l)):\n        if l[i] not in freq_dict:\n            freq_dict[l[i]] = 1\n        else:\n            freq_dict[l[i]] += 1\n    return max(freq_dict, key=freq_dict.get)\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4]))\n    print(find_max_freq([4, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4]))\n    print(find_max_freq([3, 4, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 2, 3, 2, 3, 2, 2, 3, 2, 2, 2, 3, 4, 3, 4, 4, 2, 4, 3, 2, 2, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        freq[i] = freq.get(i, 0) + 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 3, 4, 5, 5, 5, 6]))",
    "def find_max_freq(lst):\n    dic = {}\n    max_freq = 0\n    for i in lst:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n\n    for i in dic:\n        if dic[i] > max_freq:\n            max_freq = dic[i]\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3, 3, 4, 4, 3, 4, 3, 4, 2, 2, 2, 1, 4, 1, 2, 3, 2, 3, 2, 2, 2, 2, 4, 3, 4, 4, 4, 4, 4, 4, 2, 2, 2, 4, 1, 4, 2, 2, 4, 4, 2, 4, 4, 3, 4, 2, 3, 2, 3, 2, 3, 4, 4, 3, 3, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 2, 2, 2, 4, 4, 3, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4",
    "def max_freq(lst):\n    max_freq_key = -1\n    max_freq_value = -1\n    for key, value in enumerate(lst):\n        if value > max_freq_value:\n            max_freq_value = value\n            max_freq_key = key\n\n    return lst[max_freq_key]\n\n\nif __name__ == '__main__':\n    print(max_freq([1, 2, 2, 3, 1, 1, 2, 3]))",
    "def find_max_frequency(arr):\n    max_frequency = 0\n    max_index = 0\n    for i, val in enumerate(arr):\n        if val > max_frequency:\n            max_frequency = val\n            max_index = i\n    return arr[max_index]\n\n\narr = [1, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]\nprint(find_max_frequency(arr))",
    "def find_max_freq(lst):\n    # your code here\n    lst.sort()\n    return lst[-1]\n\n\nprint(find_max_freq([1,2,2,3,3,4,4,5,5,5,5,5]))",
    "def find_max_freq(items):\n    max_freq = 0\n    max_freq_item = None\n    for item in items:\n        if items.count(item) > max_freq:\n            max_freq = items.count(item)\n            max_freq_item = item\n\n    return max_freq_item\n\n\nprint(find_max_freq([\"a\", \"a\", \"b\", \"c\", \"b\", \"a\", \"a\", \"c\", \"b\", \"a\"]))",
    "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    return max(freq, key=freq.get)\n\n\nif __name__ == '__main__':\n    print(find_max_freq([1, 2, 2, 3, 4, 4, 3, 2, 2, 1]))\n    print(find_max_freq([1, 2, 2, 3, 4, 4, 3, 2, 2, 1]))",
    "def find_max_frequency(a):\n    freq = {}\n    for item in a:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    max_freq = max(freq.values())\n    for item in freq:\n        if freq[item] == max_freq:\n            return item\n    return None\n\n\nprint(find_max_frequency([\"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]))",
    "def max_freq(a):\n    dic = {}\n    for i in a:\n        if i in dic:\n            dic[i] += 1\n        else:\n            dic[i] = 1\n    max_freq = max(dic.values())\n    for i in dic.keys():\n        if dic[i] == max_freq:\n            return i\n\n\nif __name__ == \"__main__\":\n    print(max_freq([1, 1, 2, 2, 3, 3, 4, 5, 5, 6]))\n    print(max_freq([1, 1, 2, 2, 3, 3, 4, 5, 5, 6]))\n    print(max_freq([]))\n    print(max_freq([1, 1, 1, 1, 1, 1, 1, 1]))",
    "def find_max_frequency(arr):\n    freq_dict = {}\n    max_frequency = -1\n    for i in arr:\n        if i in freq_dict:\n            freq_dict[i] += 1\n        else:\n            freq_dict[i] = 1\n    for key, value in freq_dict.items():\n        if value > max_frequency:\n            max_frequency = value\n            max_key = key\n    return max_key\n\n\nif __name__ == \"__main__\":\n    assert find_max_frequency([1, 1, 1, 2, 2, 2, 3]) == 2\n    assert find_max_frequency([1, 1, 1, 2, 2, 2, 3]) == 3\n    assert find_max_frequency([1, 2, 3, 4, 5, 6, 7, 8, 9]) == 9\n    assert find_max_frequency([]) == None",
    "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n    return max(freq, key=freq.get)\n\n\narr = [1, 2, 2, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5]\n\nprint(find_max_freq(arr))",
    "def find_max_freq(lst):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(lst)):\n        if lst[i] in lst:\n            lst.remove(lst[i])\n        else:\n            if lst.count(lst[0]) > max_freq:\n                max_freq = lst.count(lst[0])\n                max_freq_item = lst[0]\n    return max_freq_item\n\nprint(find_max_freq([1, 2, 3, 4, 4, 5, 6, 6]))",
    "def max_freq(lst):\n    freq = {}\n    for item in lst:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n\n    max_item = max(freq, key=freq.get)\n    return max_item\n\nprint(max_freq([1,1,2,1,2,3,3,4,4,4,5,5]))",
    "def find_max_freq(l):\n    freq = {}\n    max_freq = 0\n    for i in l:\n        if i in freq:\n            freq[i] += 1\n        else:\n            freq[i] = 1\n\n    for i in freq:\n        if freq[i] > max_freq:\n            max_freq = freq[i]\n\n    return max_freq\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 2, 2, 1, 2, 3, 4, 2, 3, 2, 3, 3, 2, 1]))",
    "def maximum_frequency(arr):\n    max_frequency = 0\n    max_freq_index = 0\n\n    for i, val in enumerate(arr):\n        if val > max_frequency:\n            max_frequency = val\n            max_freq_index = i\n\n    return arr[max_freq_index]\n\n\nif __name__ == '__main__':\n    assert maximum_frequency([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 8\n    assert maximum_frequency([4, 2, 1, 3, 5, 6, 7, 8]) == 6\n    assert maximum_frequency([1, 1, 1, 1, 1, 1]) == 1",
    "def find_max_freq(arr):\n    max_freq = -1\n    max_freq_index = -1\n\n    for i in range(len(arr)):\n        if arr[i] > max_freq:\n            max_freq = arr[i]\n            max_freq_index = i\n\n    return max_freq_index\n\n\ndef main():\n    arr = [1, 2, 3, 4, 2, 2, 2, 3, 3, 4, 2, 4, 4, 2, 4]\n    print(find_max_freq(arr))\n\n\nif __name__ == '__main__':\n    main()",
    "def find_max_freq(lst):\n    freq_dict = {}\n    for i in lst:\n        if i not in freq_dict:\n            freq_dict[i] = 1\n        else:\n            freq_dict[i] += 1\n\n    max_freq = max(freq_dict.values())\n    max_freq_index = freq_dict.keys()[freq_dict.values().index(max_freq)]\n\n    return max_freq_index\n\nprint(find_max_freq([1, 2, 1, 2, 3, 4, 3, 2]))",
    "def maximum_frequency(lst):\n    max_freq = 0\n    max_item = None\n    for item in lst:\n        if item in lst:\n            lst.remove(item)\n        if max_freq < len(lst):\n            max_freq = len(lst)\n            max_item = item\n    return max_item\n\n\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]))\nprint(maximum_frequency([1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,",
    "class Solution:\n    def findMaxFrequency(self, nums: List[int]) -> int:\n        d = {}\n        for n in nums:\n            if n in d:\n                d[n] += 1\n            else:\n                d[n] = 1\n        return max(d, key=d.get)",
    "def max_freq(arr):\n    freq = {}\n    for item in arr:\n        if item not in freq:\n            freq[item] = 1\n        else:\n            freq[item] += 1\n    return max(freq, key=freq.get)\n\n\nprint(max_freq([1, 2, 1, 3, 4, 4, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "def find_max_freq(a):\n    a = sorted(a)\n    freq = {}\n    for i in a:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    max_freq = max(freq, key=freq.get)\n    return freq[max_freq]\n\n\nif __name__ == \"__main__\":\n    a = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2",
    "def find_max_freq(arr):\n    freq_dict = {}\n    for item in arr:\n        if item in freq_dict:\n            freq_dict[item] += 1\n        else:\n            freq_dict[item] = 1\n    max_freq_item = None\n    max_freq_value = 0\n    for key in freq_dict:\n        if freq_dict[key] > max_freq_value:\n            max_freq_item = key\n            max_freq_value = freq_dict[key]\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    arr = [1, 2, 1, 3, 3, 2, 1, 2, 2, 1]\n    print(find_max_freq(arr))",
    "def find_max_freq(lst):\n    dic = {}\n    for x in lst:\n        if x not in dic.keys():\n            dic[x] = 1\n        else:\n            dic[x] += 1\n    return max(dic.items(), key=lambda x: x[1])[0]",
    "def max_freq(arr):\n    max_freq_dict = {}\n    for x in arr:\n        if x not in max_freq_dict:\n            max_freq_dict[x] = 1\n        else:\n            max_freq_dict[x] += 1\n    max_freq_dict_sorted = sorted(max_freq_dict.items(), key=lambda x: x[1], reverse=True)\n    return max_freq_dict_sorted[0][0]\n\n\nprint(max_freq([1, 2, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4]))",
    "def find_max_freq(arr):\n    freq = {}\n    for x in arr:\n        if x in freq:\n            freq[x] += 1\n        else:\n            freq[x] = 1\n    max_freq = None\n    max_val = 0\n    for k, v in freq.items():\n        if v > max_val:\n            max_freq = k\n            max_val = v\n    return max_freq\n\n\nif __name__ == '__main__':\n    arr = [1, 2, 3, 4, 5, 5, 5, 5, 5]\n    print(find_max_freq(arr))",
    "def maximum_frequency(arr):\n    return max(set(arr), key=arr.count)\n\n\nif __name__ == \"__main__\":\n    assert maximum_frequency([1, 2, 3, 2, 4, 3, 2, 2, 1]) == 2\n    assert maximum_frequency([1, 2, 3, 2, 4, 3, 2, 2, 1]) == 4\n    assert maximum_frequency([1, 2, 3, 2, 4, 3, 2, 2, 1]) == 1",
    "def max_frequency(lst):\n    dict = {}\n    for i in lst:\n        if i in dict:\n            dict[i] += 1\n        else:\n            dict[i] = 1\n    max_freq = max(dict.values())\n    max_freq_index = dict.keys().index(max_freq)\n    return lst[max_freq_index]\n\nlst = [1, 1, 2, 2, 1, 3, 3, 4, 4, 3, 2, 1, 1, 1, 1, 4, 3, 2, 2, 4]\nprint(max_frequency(lst))",
    "def max_freq(lst):\n    freq = {}\n    for item in lst:\n        if item in freq:\n            freq[item] += 1\n        else:\n            freq[item] = 1\n    max_freq_item = max(freq, key=freq.get)\n    return max_freq_item\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3, 4, 5, 1, 3, 2, 5, 4, 6, 7]\n    print(max_freq(lst))",
    "def find_max_freq(arr):\n    freq = {}\n    for i in arr:\n        if i not in freq:\n            freq[i] = 1\n        else:\n            freq[i] += 1\n    return max(freq, key=freq.get)\n\nif __name__ == '__main__':\n    print(find_max_freq([1,2,2,3,3,2,4,2,2,4]))",
    "def find_max_freq(nums):\n    count = dict()\n\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n\n    max_val = max(count.values())\n    max_val_index = count.values().index(max_val)\n\n    return nums[max_val_index]\n\n\nif __name__ == \"__main__\":\n    print(find_max_freq([1, 1, 2, 2, 3, 3, 4, 4]))",
    "def find_max_freq(list):\n    count = dict()\n    for item in list:\n        if item in count:\n            count[item] += 1\n        else:\n            count[item] = 1\n    max_freq = max(count.values())\n    max_item = list(filter(lambda item: count[item] == max_freq, count.keys()))[0]\n    return max_item\n\nprint(find_max_freq([1,1,1,1,2,2,2,2,2,2,3,3,3,4,4,4,4,4,4,4,4,4,4,4]))",
    "def maximum_freq(list):\n    max_freq = 0\n    max_freq_index = -1\n    for i in range(len(list)):\n        if list[i] > max_freq:\n            max_freq = list[i]\n            max_freq_index = i\n    return max_freq_index\n\nprint(maximum_freq([1,2,3,4,4,3,2,1]))\nprint(maximum_freq([1,2,3,4,4,3,2,1]))",
    "def find_max_freq(items):\n    count = {}\n    max_freq = 0\n    for item in items:\n        if item in count:\n            count[item] += 1\n        else:\n            count[item] = 1\n\n        if count[item] > max_freq:\n            max_freq = count[item]\n            max_freq_item = item\n    return max_freq_item\n\n\nprint(find_max_freq([\"a\", \"a\", \"b\", \"b\", \"c\", \"c\", \"a\"]))",
    "def find_max_freq(lst):\n    max_freq = 0\n    max_freq_item = None\n    for i in range(len(lst)):\n        if lst[i] > max_freq:\n            max_freq = lst[i]\n            max_freq_item = i\n    return max_freq_item\n\nprint(find_max_freq([3, 5, 2, 1, 3, 2, 5, 3, 1, 5, 3]))",
    "def max_frequency(lst):\n    max_freq = 0\n    max_freq_idx = 0\n    for idx, value in enumerate(lst):\n        if value > max_freq:\n            max_freq = value\n            max_freq_idx = idx\n    return lst[max_freq_idx]\n\nif __name__ == \"__main__\":\n    print(max_frequency([1,1,2,2,3,3,4,4,5,5,5,6,6,7,7,7,7,8,8,9,9]))",
    "def find_max_freq(list_of_freq):\n    max_freq = list_of_freq[0]\n    max_index = 0\n    for i in range(len(list_of_freq)):\n        if list_of_freq[i] > max_freq:\n            max_freq = list_of_freq[i]\n            max_index = i\n    return max_index\n\n\nif __name__ == '__main__':\n    list_of_freq = [1, 3, 3, 2, 2, 2, 1, 2, 3, 2]\n    print(find_max_freq(list_of_freq))",
    "from collections import Counter\n\n\ndef find_item_with_max_freq(lst):\n    freq = Counter(lst)\n    return max(freq, key=freq.get)\n\n\nprint(find_item_with_max_freq([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "def max_freq(list):\n    freq_dict = {}\n    for i in range(len(list)):\n        freq_dict[list[i]] = freq_dict.get(list[i], 0) + 1\n    max_freq = 0\n    max_freq_item = None\n    for key, val in freq_dict.items():\n        if val > max_freq:\n            max_freq = val\n            max_freq_item = key\n    return max_freq_item\n\nprint(max_freq([1, 3, 2, 2, 1, 3, 2]))",
    "def find_max_frequency(a):\n    # Write your code here\n    d = {}\n    for item in a:\n        if item not in d:\n            d[item] = 1\n        else:\n            d[item] += 1\n    \n    return max(d, key=d.get)\n\n\nif __name__ == '__main__':\n    print(find_max_frequency([3, 2, 2, 3, 2, 3, 1]))\n    print(find_max_frequency([1, 2, 3, 4, 2, 1, 1, 2]))\n    print(find_max_frequency([1, 2, 3, 4, 2, 1, 2, 3]))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}