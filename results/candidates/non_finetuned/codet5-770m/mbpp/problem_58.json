{
  "problem": {
    "task_id": "MBPP/69",
    "prompt": "Write a function to check whether a list contains the given sublist or not.",
    "canonical_solution": "def is_sublist(l, s):\r\n\tsub_set = False\r\n\tif s == []:\r\n\t\tsub_set = True\r\n\telif s == l:\r\n\t\tsub_set = True\r\n\telif len(s) > len(l):\r\n\t\tsub_set = False\r\n\telse:\r\n\t\tfor i in range(len(l)):\r\n\t\t\tif l[i] == s[0]:\r\n\t\t\t\tn = 1\r\n\t\t\t\twhile (n < len(s)) and (l[i+n] == s[n]):\r\n\t\t\t\t\tn += 1\t\t\t\t\r\n\t\t\t\tif n == len(s):\r\n\t\t\t\t\tsub_set = True\r\n\treturn sub_set",
    "test_list": [
      "assert is_sublist([2,4,3,5,7],[3,7])==False",
      "assert is_sublist([2,4,3,5,7],[4,3])==True",
      "assert is_sublist([2,4,3,5,7],[1,6])==False"
    ],
    "challenge_test_list": [],
    "problem_id": 58
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def contains_sublist(l, s):\n    for i in l:\n        if i in s:\n            return True\n    return False\n\nprint(contains_sublist([1,2,3,4], [1,3]))\nprint(contains_sublist([1,2,3,4], [2,4]))\nprint(contains_sublist([1,2,3,4], [3]))",
    "def check_sublist(lst, sublist):\n    for i in range(len(lst)):\n        if lst[i] in sublist:\n            return True\n    return False\n\n\nlst = [1, 2, 3, 4, 5]\nsublist = [2, 3]\nprint(check_sublist(lst, sublist))",
    "def check_sublist(sublist, list):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\ndef main():\n    print(check_sublist([2, 5, 8, 11, 13, 15], [2, 5, 8, 11, 13, 15]))\n    print(check_sublist([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]))\n    print(check_sublist([1, 2, 3, 4, 5], [1, 2, 3, 5]))\n\nif __name__ == \"__main__\":\n    main()",
    "def contains_sub(list, sub):\n    return any(sub in item for item in list)\n\nprint(contains_sub([1,2,3,4], 3))\nprint(contains_sub([1,2,3,4], 4))\nprint(contains_sub([1,2,3,4], 5))\nprint(contains_sub([1,2,3,4], 6))\nprint(contains_sub([1,2,3,4], 7))\nprint(contains_sub([1,2,3,4], 8))\nprint(contains_sub([1,2,3,4], 9))\nprint(contains_sub([1,2,3,4], 10))\nprint(contains_sub([1,2,3,4], 11))\nprint(contains_sub([1,2,3,4], 12))\nprint(contains_sub([1,2,3,4], 13))\nprint(contains_sub([1,2,3,4], 14))\nprint(contains_sub([1,2,3,4], 15))\nprint(contains_sub([1,2,3,4], 16))\nprint(contains_sub([1,2,3,4], 17))\nprint(contains_sub([1,2,3,4], 18))\nprint(contains_sub([1,2,3,4], 19))\nprint(contains_sub([1,2,3,4], 20))",
    "def check_list_sublist(list, sublist):\n    for i in range(len(list)):\n        if list[i] == sublist[0]:\n            if sublist[1] <= list[i] <= sublist[2]:\n                return True\n    return False\n\n\nlist = [1, 2, 3, 4, 5]\nsublist = [1, 2]\nprint(check_list_sublist(list, sublist))\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nsublist = [1, 2, 4, 5, 7, 8, 9, 10]\nprint(check_list_sublist(list, sublist))",
    "def check_list(list, sub):\n    return all(item in list for item in sub)\n\nprint(check_list([1,2,3,4,5,6], [1,2,3]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5]))\nprint(check_list([1,2,3,4,5,6], [1,2]))\nprint(check_list([1,2,3,4,5,6], [1,3,4]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5]))\nprint(check_list([1,2,3,4,5,6], [1,2]))\nprint(check_list([1,2,3,4,5,6], [1,2,3]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8,9,10]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8,9,10,11]))\nprint(check_list([1,2,3,4,5,6], [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]))",
    "def sublist(list, sub_list):\n    if len(sub_list) > len(list):\n        return False\n    for i in range(len(sub_list)):\n        if sub_list[i] not in list:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    list_to_check = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n    sub_list = [6, 7, 8]\n    print(sublist(list_to_check, sub_list))",
    "def contains_sublist(list_of_elements, sublist):\n    for i in sublist:\n        if i not in list_of_elements:\n            return False\n    return True\n\nlist_of_elements = [1,2,3,4,5,6,7,8,9,10]\nsublist = [1,5]\n\nprint(contains_sublist(list_of_elements, sublist))",
    "def contains_sublist(list, sublist):\n    return sublist in list\n\n\nif __name__ == \"__main__\":\n    assert contains_sublist([1, 2, 3], [1, 2]) == True\n    assert contains_sublist([1, 2, 3], [2]) == False\n    assert contains_sublist([1, 2, 3], [3]) == True\n    assert contains_sublist([1, 2, 3], [1]) == False\n    assert contains_sublist([1, 2, 3], [2, 3]) == False\n    assert contains_sublist([1, 2, 3], [1, 3]) == True\n    assert contains_sublist([1, 2, 3], [2, 4]) == False\n    assert contains_sublist([1, 2, 3], [3, 4]) == True\n    assert contains_sublist([1, 2, 3], [3, 3]) == True\n    assert contains_sublist([1, 2, 3], [3, 4]) == False\n    assert contains_sublist([1, 2, 3], [3, 5]) == False",
    "def contains_sub_list(list, sub_list):\n    return all(x in list for x in sub_list)\n\n\nprint(contains_sub_list([1, 2, 3], [1, 2, 3]))",
    "def sublist_exists(lst, sublist):\n    return lst.count(sublist)!= 0\n\n\nprint(sublist_exists([1, 2, 3, 4, 5], 1))\nprint(sublist_exists([1, 2, 3, 4, 5], 3))\nprint(sublist_exists([1, 2, 3, 4, 5], 5))\nprint(sublist_exists([1, 2, 3, 4, 5], 4))",
    "def check(list_of_elements, sublist):\n    for i in sublist:\n        if i not in list_of_elements:\n            return False\n    return True\n\n\nlist_of_elements = [1, 2, 3, 4, 5]\nsublist = [1, 2]\n\nprint(check(list_of_elements, sublist))",
    "def check_sublist(list_, sublist):\n    return sublist in list_\n\ndef test_sublist():\n    assert check_sublist([1, 2, 3, 4, 5], [1, 2]) == True\n    assert check_sublist([1, 2, 3, 4, 5], [2, 3]) == False\n    assert check_sublist([1, 2, 3, 4, 5], [1, 5]) == True\n    assert check_sublist([1, 2, 3, 4, 5], [2, 3, 4]) == False",
    "def sublist_check(list, sublist):\n    if len(list) == 0 or len(sublist) == 0:\n        return False\n    else:\n        for i in range(len(list)):\n            if list[i] in sublist:\n                return True\n        return False\n\n\nif __name__ == \"__main__\":\n    print(sublist_check([1, 2, 3, 4, 5], [1, 2]))\n    print(sublist_check([1, 2, 3, 4, 5], [3, 4]))\n    print(sublist_check([1, 2, 3, 4, 5], [1, 3]))\n    print(sublist_check([1, 2, 3, 4, 5], [4, 5]))",
    "def contains(sublist, lst):\n\treturn sublist in lst\n\nprint(contains([1,2,3,4,5], [1,2,3,4]))\nprint(contains([1,2,3,4,5], [2,3]))\nprint(contains([1,2,3,4,5], [3,4]))\nprint(contains([1,2,3,4,5], [4,5]))",
    "def check_sublist(lst, sub_list):\n    for i in range(len(lst)):\n        if lst[i] in sub_list:\n            return True\n    return False\n\n\nlst = [1, 2, 3, 4, 5, 6]\nsub_list = [1, 4]\nprint(check_sublist(lst, sub_list))",
    "def contains_sublist(list, sub):\n    for i in range(len(list)):\n        if list[i] == sub:\n            return True\n    return False\n\nprint(contains_sublist([1, 2, 3, 4, 5], 2))\nprint(contains_sublist([1, 2, 3, 4, 5], 4))\nprint(contains_sublist([1, 2, 3, 4, 5], 1))\nprint(contains_sublist([1, 2, 3, 4, 5], 3))\nprint(contains_sublist([1, 2, 3, 4, 5], 5))",
    "def check_list(list, sublist):\n    return sublist in list\n\nlist = [1,2,3,4,5,6]\nprint(check_list(list, 4))\nprint(check_list(list, 5))\nprint(check_list(list, 1))\nprint(check_list(list, 6))\nprint(check_list(list, 2))\nprint(check_list(list, 1))\nprint(check_list(list, 7))\nprint(check_list(list, 4))\nprint(check_list(list, 2))\nprint(check_list(list, 3))",
    "def check_sub(lst, sub):\n    for i in range(len(lst)):\n        if lst[i] in sub:\n            return True\n    return False\n\n\nprint(check_sub([1, 2, 3, 4, 5], [3, 4, 5]))",
    "def contains(s, e):\n    if e not in s:\n        return False\n    return True\n\ndef main():\n    s = [1,2,3,4,5]\n    e = [1,2,3]\n\n    print(contains(s, e))\n\nif __name__ == \"__main__\":\n    main()\n\n\"\"\"\nTime Complexity: O(n)\nSpace Complexity: O(1)\n\"\"\"",
    "def check(list, sub):\n    if sub in list:\n        return True\n    else:\n        return False\n\n\nprint(check([1, 2, 3], 1))\nprint(check([1, 2, 3], 2))\nprint(check([1, 2, 3], 3))\nprint(check([1, 2, 3], 4))",
    "def contains_sublist(l, s):\n    for i in range(len(l)):\n        if l[i] in s:\n            return True\n    return False\n\n\nl = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ns = [1, 2]\n\nprint(contains_sublist(l, s))\nprint(contains_sublist(l, s))\nprint(contains_sublist(l, s))\nprint(contains_sublist(l, s))",
    "def list_contains(list, sub_list):\n    for i in range(len(sub_list)):\n        if sub_list[i] in list:\n            return True\n    return False\n\nif __name__ == '__main__':\n    list1 = [1,2,3,4]\n    sub_list = [1,2]\n    print(list_contains(list1, sub_list))",
    "def check_if_list_contains(list, sublist):\n    return any(x in sublist for x in list)\n\n\ndef check_if_list_not_contains(list, sublist):\n    return any(x not in sublist for x in list)\n\n\nif __name__ == '__main__':\n    assert check_if_list_contains([1, 2, 3, 4], [2, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [2, 1]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [2, 1, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 2, 3, 4]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [2, 4]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 4]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 5]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 2, 4]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 4, 5]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 5, 2]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 3, 4, 5]) == False\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 5, 2, 3]) == True\n    assert check_if_list_contains([1, 2, 3, 4], [1, 4, 5, 2, 3, 2]) == False\n    assert check_if_list_",
    "def check_sub_list(lst, sub_list):\n    for i in sub_list:\n        if i not in lst:\n            return False\n    return True\n\n\nprint(check_sub_list([1, 2, 3, 4, 5], [2, 3, 4]))",
    "def contains(lst, sub):\n    if len(lst) == 0:\n        return False\n    if len(sub) == 0:\n        return True\n    if lst[0] in sub:\n        return contains(lst[1:], sub[1:])\n    else:\n        return contains(lst[1:], sub)\n\n\nlst = [1, 2, 3, 4, 5]\nsub = [2, 3]\n\nprint(contains(lst, sub))",
    "def check_sublist(a, b):\n    return a in b",
    "def check_sublist(lst, sub):\n    for i in lst:\n        if i in sub:\n            return True\n    return False\n\n\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3]))",
    "def contains(list_of_sublists, sublist):\n    for i in sublist:\n        if i not in list_of_sublists:\n            return False\n    return True\n\n\ndef test_contains():\n    assert contains([1,2,3,4], [1,2]) == True\n    assert contains([1,2,3,4], [2,3]) == False\n    assert contains([1,2,3,4], [1]) == False",
    "def check_sublist(list, sublist):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\nlist1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsublist1 = [5, 6]\nprint(check_sublist(list1, sublist1))\n\nlist2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsublist2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\nprint(check_sublist(list2, sublist2))\n\nlist3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nsublist3 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\nprint(check_sublist(list3, sublist3))",
    "def contains_sublist(lst, sublist):\n    for i in range(len(lst) - len(sublist) + 1):\n        if lst[i:i + len(sublist)] == sublist:\n            return True\n    return False\n\n\nprint(contains_sublist([1, 2, 3], [2, 3]))\nprint(contains_sublist([1, 2, 3], [2, 4]))",
    "def check_sublist(list, sublist):\n    for i in range(len(list)):\n        if list[i] in sublist:\n            return True\n    return False\n\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8]\nsublist = [1, 4]\n\nprint(check_sublist(list, sublist))",
    "def check_list_contains_sub_list(list, sub_list):\n    for sub in sub_list:\n        if sub in list:\n            return True\n    return False\n\n\nlist = [1, 2, 3, 4, 5]\nsub_list = [4, 5, 6]\n\nprint(check_list_contains_sub_list(list, sub_list))",
    "def check_sub_list(list_, sub_list):\n    return list_ in sub_list\n\n\nprint(check_sub_list([1, 2, 3, 4], [1, 2]))\nprint(check_sub_list([1, 2, 3, 4], [2, 4]))\nprint(check_sub_list([1, 2, 3, 4], [1, 3]))\nprint(check_sub_list([1, 2, 3, 4], [1, 4]))",
    "def contains_sublist(list, sublist):\n    for i in range(len(list)):\n        if list[i:i+len(sublist)] == sublist:\n            return True\n    return False\n\nprint(contains_sublist([1,2,3], [1,2]))\nprint(contains_sublist([1,2,3], [2,3]))\nprint(contains_sublist([1,2,3], [1,4]))\nprint(contains_sublist([1,2,3], [3,4]))",
    "def contains_sublist(list, sub_list):\n    return sub_list in list",
    "def check_sub_list(lst, sub_list):\n    if len(lst) < len(sub_list):\n        return False\n    else:\n        for i in range(len(sub_list)):\n            if sub_list[i] not in lst:\n                return False\n        return True\n\n\nprint(check_sub_list([1, 2, 3, 4, 5, 6, 7], [2, 5]))\nprint(check_sub_list([1, 2, 3, 4, 5, 6, 7], [2, 3]))\nprint(check_sub_list([1, 2, 3, 4, 5, 6, 7], [1, 2]))",
    "def contains_sublist(list_, sub_list):\n    for i in sub_list:\n        if i in list_:\n            return True\n    return False\n\n\nprint(contains_sublist([1, 2, 3, 4, 5], [1, 3]))\nprint(contains_sublist([1, 2, 3, 4, 5], [3, 4]))\nprint(contains_sublist([1, 2, 3, 4, 5], [5, 4]))\nprint(contains_sublist([1, 2, 3, 4, 5], [4, 3]))\nprint(contains_sublist([1, 2, 3, 4, 5], [5, 4, 3]))\nprint(contains_sublist([1, 2, 3, 4, 5], [3, 4, 5]))",
    "def sublist_check(list1, sublist):\n    for i in range(len(list1)):\n        if sublist == list1[i:i+len(sublist)]:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    list1 = [1, 2, 3, 4, 5]\n    sublist = [1, 2]\n    print(sublist_check(list1, sublist))",
    "def contains_list_sublist(arr, sub_list):\n    for i in range(len(arr)):\n        if arr[i] in sub_list:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(contains_list_sublist([1, 2, 3], [2, 3]))\n    print(contains_list_sublist([1, 2, 3], [2, 4]))\n    print(contains_list_sublist([1, 2, 3], [1, 4]))\n    print(contains_list_sublist([1, 2, 3], [1, 5]))",
    "def check_if_sublist_exist(list_of_sublists, sublist):\n    for sublist in sublist:\n        if sublist in list_of_sublists:\n            return True\n    return False\n\nlist_of_sublists = [\"ab\", \"cd\", \"cde\", \"dde\", \"ede\", \"fde\"]\nsublist = [\"ede\"]\n\nif check_if_sublist_exist(list_of_sublists, sublist):\n    print(\"List contains the sublist\")\nelse:\n    print(\"List does not contain the sublist\")",
    "def contains_sub(list, sub):\n    if len(list) == 0:\n        return False\n    for i in range(len(list)):\n        if list[i] == sub:\n            return True\n    return False\n\nprint(contains_sub([1, 2, 3, 4, 5, 6], 5))",
    "def check_sublist(list_, sublist):\n    for i in range(len(list_)):\n        if list_[i] in sublist:\n            return True\n    return False\n\n\nlist_ = [1, 2, 3, 4, 5, 6]\nsublist = [2, 3, 5]\n\nprint(check_sublist(list_, sublist))",
    "def has_sub_list(lst, sub):\n    for i in sub:\n        if i not in lst:\n            return False\n    return True\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, 4, 5, 6]\n    sub = [2, 3]\n    print(has_sub_list(lst, sub))",
    "def contains_sublist(list, sublist):\n    for element in sublist:\n        if element in list:\n            return True\n    return False\n\n\nprint(contains_sublist([1, 2, 3], [1, 2, 3]))\nprint(contains_sublist([1, 2, 3], [2, 3]))",
    "def contains_list(list, sublist):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\nprint(contains_list([1, 2, 3, 4, 5], [2]))\nprint(contains_list([1, 2, 3, 4, 5], [3]))\nprint(contains_list([1, 2, 3, 4, 5], [4]))\nprint(contains_list([1, 2, 3, 4, 5], [4, 3]))\nprint(contains_list([1, 2, 3, 4, 5], [4, 3, 5]))",
    "def contains(arr, sub):\n    for i in range(len(arr)-len(sub)+1):\n        if arr[i:i+len(sub)] == sub:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    print(contains([1, 2, 3, 4, 5], [1, 2, 3]))\n    print(contains([1, 2, 3, 4, 5], [2, 4]))\n    print(contains([1, 2, 3, 4, 5], [3, 5]))\n    print(contains([1, 2, 3, 4, 5], [1, 2]))\n    print(contains([1, 2, 3, 4, 5], [4, 5]))\n    print(contains([1, 2, 3, 4, 5], [3, 5, 6]))\n    print(contains([1, 2, 3, 4, 5], [4, 5, 6, 7]))",
    "def check_list(list_, sub_list):\n    for i in sub_list:\n        if i not in list_:\n            return False\n    return True\n\nlist1 = [1, 2, 3, 4, 5, 6]\nlist2 = [2, 3, 4, 5, 6, 7]\n\nprint(check_list(list1, list2))",
    "def contains_sublist(list_, sublist):\n    for i in sublist:\n        if i not in list_:\n            return False\n    return True\n\nprint(contains_sublist([1,2,3,4,5], [1,2,3]))\nprint(contains_sublist([1,2,3,4,5], [3,4]))\nprint(contains_sublist([1,2,3,4,5], [5,4]))\nprint(contains_sublist([1,2,3,4,5], [1,2,3,4,5,6,7]))\nprint(contains_sublist([1,2,3,4,5], [1,2,3,4,5,6,7,8,9]))",
    "def contains_sublist(sublist, list):\n    if sublist in list:\n        return True\n    return False\n\nif __name__ == \"__main__\":\n    print(contains_sublist([1,2,3,4], [1,2]))",
    "def contains(sublist, list):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\nprint(contains([1, 2, 3], [1, 2, 3]))\nprint(contains([1, 2, 3], [4, 5, 6]))\nprint(contains([1, 2, 3], [4, 5, 6, 7, 8, 9]))\nprint(contains([1, 2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13]))\nprint(contains([1, 2, 3], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]))",
    "def check_list_contains_sub_list(list, sub_list):\n    for i in sub_list:\n        if i in list:\n            return True\n    return False\n\nlist = [1,2,3,4,5,6]\nsub_list = [4,5]\nprint(check_list_contains_sub_list(list, sub_list))",
    "def check_sublist(lst, sublist):\n    for i in range(len(lst)):\n        if lst[i] in sublist:\n            return True\n    return False\n\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))",
    "def check_list(lst, sublist):\n    return sublist in lst\n\n\nprint(check_list([1, 2, 3, 4, 5], [1, 2]))\nprint(check_list([1, 2, 3, 4, 5], [3, 4]))\nprint(check_list([1, 2, 3, 4, 5], [5, 6]))\nprint(check_list([1, 2, 3, 4, 5], [6, 7]))\nprint(check_list([1, 2, 3, 4, 5], [8, 9]))",
    "def contains(list1, sublist):\n    return sublist in list1\n\nprint(contains([1,2,3,4,5,6,7,8,9], [1,2,3,4,5,6,7,8,9]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,5,6,7,8]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4,5,6,7,8,9]))\nprint(contains([1,2,3,4,5,6,7,8,9], [1,4",
    "def check_list(list_, sublist):\n    if len(list_) == 0:\n        return False\n    elif list_[0] in sublist:\n        return True\n    else:\n        return False\n\nlist_ = [1,2,3,4,5]\nsublist = [3,4,5]\nprint(check_list(list_, sublist))",
    "def contains_sublist(list_of_elements, sublist):\n    return sublist in list_of_elements\n\n\nlist_of_elements = [1, 2, 3, 4, 5, 6]\nsublist = [1, 3]\n\nprint(contains_sublist(list_of_elements, sublist))\n\nlist_of_elements = [1, 2, 3, 4, 5, 6]\nsublist = [1, 3, 5]\n\nprint(contains_sublist(list_of_elements, sublist))\n\nlist_of_elements = [1, 2, 3, 4, 5, 6]\nsublist = [1, 3, 5, 7, 9]\n\nprint(contains_sublist(list_of_elements, sublist))",
    "def check_list_sublist(list, sublist):\n    for item in sublist:\n        if item not in list:\n            return False\n    return True\n\n\nlist1 = [1, 2, 3, 4, 5, 6]\nlist2 = [3, 4, 5]\n\nprint(check_list_sublist(list1, list2))",
    "def contains_sublist(l, s):\n    return s in l\n\n\nprint(contains_sublist([1, 2, 3], 3))\nprint(contains_sublist([1, 2, 3], 4))\nprint(contains_sublist([1, 2, 3], 5))\nprint(contains_sublist([1, 2, 3], 6))",
    "def contains_sublist(list_to_search, sublist):\n    for element in sublist:\n        if element not in list_to_search:\n            return False\n    return True\n\nlist_to_search = [1, 3, 5, 4, 7]\nsublist = [3, 5, 7]\nprint(contains_sublist(list_to_search, sublist))",
    "def check_if_list_contains(list, sub_list):\n    for item in sub_list:\n        if item in list:\n            return True\n    return False\n\n\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 2]))\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 3]))\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 2, 3, 4, 5]))\nprint(check_if_list_contains([1, 2, 3, 4, 5], [1, 3, 2]))",
    "def sublist_check(sublist, lst):\n    for i in range(len(sublist)):\n        if sublist[i] in lst:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(sublist_check([1, 2, 3, 4], [1, 2, 3]))",
    "def check_list_contains(list_, sublist):\n    for i in sublist:\n        if i not in list_:\n            return False\n    return True\n\nprint(check_list_contains([1,2,3,4,5], [2,4]))",
    "def contains_list_sublist(my_list, sublist):\n    for i in range(len(my_list)):\n        if my_list[i] in sublist:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    my_list = [1, 2, 3, 4, 5, 6]\n    sublist = [2, 4, 6]\n    print(contains_list_sublist(my_list, sublist))",
    "def contains_sublist(sublist, list):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\n\nprint(contains_sublist([1, 2, 3], [1, 2, 3, 4, 5]))",
    "def contains_sublist(lst, sub_list):\n    return sub_list in lst",
    "def contains_sub_list(list_, sub_list):\n    for element in sub_list:\n        if element not in list_:\n            return False\n    return True\n\n\ndef main():\n    list_ = [1, 2, 3, 4, 5]\n    sub_list = [2, 4]\n    print(contains_sub_list(list_, sub_list))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def contains(list, sub):\n    for i in range(len(list)):\n        if list[i:i+len(sub)] == sub:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(contains([1, 2, 3, 4, 5, 6], [2, 3]))",
    "def check_sublist(arr, sub):\n    for i in range(len(arr)):\n        if arr[i] in sub:\n            return True\n    return False\n\n\nprint(check_sublist([1, 2, 3], [1, 3]))\nprint(check_sublist([1, 2, 3], [2]))\nprint(check_sublist([1, 2, 3], [1, 3]))",
    "def check_sublist(list, sublist):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\nprint(check_sublist([1,2,3,4], [2]))\nprint(check_sublist([1,2,3,4], [3]))\nprint(check_sublist([1,2,3,4], [2,3,4]))\nprint(check_sublist([1,2,3,4], [1,2,3]))",
    "def check_list(list1, sublist):\n    for i in sublist:\n        if i not in list1:\n            return False\n    return True\n\nprint(check_list([1, 2, 3, 4, 5, 6], [1, 3, 5, 6]))\nprint(check_list([1, 2, 3, 4, 5, 6], [1, 4]))\nprint(check_list([1, 2, 3, 4, 5, 6], [2, 4]))\nprint(check_list([1, 2, 3, 4, 5, 6], [1, 5, 6]))",
    "def contains_sub_list(list, sub_list):\n    for i in sub_list:\n        if i in list:\n            return True\n    return False\n\n\nlist_1 = [1, 3, 5, 7, 9]\nsub_list = [5, 7, 9]\n\nprint(contains_sub_list(list_1, sub_list))",
    "def contains(lst, sub):\n    for i in lst:\n        if i in sub:\n            return True\n    return False",
    "def contains(nums, sub_list):\n    for num in nums:\n        if num in sub_list:\n            return True\n    return False\n\n\nprint(contains([1, 2, 3, 4, 5], [2, 4]))\nprint(contains([1, 2, 3, 4, 5], [2, 3]))\nprint(contains([1, 2, 3, 4, 5], [2, 4, 5, 6]))",
    "def contains(l, sub):\n    for i in l:\n        if i not in sub:\n            return False\n    return True\n\nprint(contains([1,2,3,4,5], [1,2]))\nprint(contains([1,2,3,4,5], [1,4]))\nprint(contains([1,2,3,4,5], [3,4]))\nprint(contains([1,2,3,4,5], [3,2]))\nprint(contains([1,2,3,4,5], [2,3]))\nprint(contains([1,2,3,4,5], [1]))\nprint(contains([1,2,3,4,5], [1,4,2]))\nprint(contains([1,2,3,4,5], [2]))\nprint(contains([1,2,3,4,5], [3,4,5]))\nprint(contains([1,2,3,4,5], [3,2,1]))\nprint(contains([1,2,3,4,5], [2,1,3]))",
    "def contains_sublist(list, sub_list):\n    return sub_list in list",
    "def contains(l, s):\n    return s in l\n\n\ndef main():\n    l = [1, 2, 3, 4, 5, 6, 7, 8]\n    s = 4\n\n    print(contains(l, s))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def check_sublist(list, sub):\n    for i in range(len(list)):\n        if list[i] == sub:\n            return True\n\n    return False\n\n\nlist = [1, 2, 3, 4, 5, 6]\nsub = 5\n\nprint(check_sublist(list, sub))",
    "def check_sublist(list, sublist):\n    for i in sublist:\n        if i not in list:\n            return False\n    return True\n\n\nprint(check_sublist([1, 2, 3, 4, 5], [2, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [3, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3, 3]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3, 2, 4]))\nprint(check_sublist([1, 2, 3, 4, 5], [2, 3, 4, 5]))\nprint(check_sublist([1, 2, 3, 4, 5], [1, 3",
    "def contains_sublist(list, sub_list):\n    if len(list) == len(sub_list):\n        return True\n    else:\n        return False\n\nprint(contains_sublist([1,2,3,4,5], [2,4]))\nprint(contains_sublist([1,2,3,4,5], [5]))",
    "def check_list(lst, sublist):\n    return lst[0:len(sublist)] == sublist\n\n\nprint(check_list([1, 2, 3, 4, 5], [2, 3]))\nprint(check_list([1, 2, 3, 4, 5], [2, 3, 4, 5, 6]))",
    "def contains_sublist(list, sub_list):\n    for element in sub_list:\n        if element in list:\n            return True\n    return False\n\nprint(contains_sublist([1,2,3,4,5], [2,4]))\nprint(contains_sublist([1,2,3,4,5], [2,3]))\nprint(contains_sublist([1,2,3,4,5], [3,4]))\nprint(contains_sublist([1,2,3,4,5], [1]))",
    "def contains_sub_list(l, sub_list):\n    for i in range(len(l)):\n        if l[i] in sub_list:\n            return True\n\n    return False\n\n\nprint(contains_sub_list([1, 2, 3, 4, 5, 6], [2, 5]))\nprint(contains_sub_list([1, 2, 3, 4, 5, 6], [3, 5]))\nprint(contains_sub_list([1, 2, 3, 4, 5, 6], [5]))",
    "def sublist(lst, sublist):\n    return lst.count(sublist) == 1\n\n\nif __name__ == \"__main__\":\n    print(sublist([1, 2, 3, 4], 3))",
    "def contains_sublist(lst, sub):\n    for i in lst:\n        if i in sub:\n            return True\n    return False\n\n\nif __name__ == '__main__':\n    lst = [1, 2, 3, 4, 5, 6]\n    sub = [1, 3]\n    print(contains_sublist(lst, sub))",
    "def sublist(arr, sublist):\n    return len(sublist) == 0 or arr[sublist[0]] in sublist or arr[sublist[-1]] in sublist\n\nprint(sublist([1,2,3,4,5], [2,4]))\nprint(sublist([1,2,3,4,5], [1]))\nprint(sublist([1,2,3,4,5], [3,4]))\nprint(sublist([1,2,3,4,5], [1,4]))\nprint(sublist([1,2,3,4,5], [1,5]))\nprint(sublist([1,2,3,4,5], [1,4,3]))\nprint(sublist([1,2,3,4,5], [1,5,4]))\nprint(sublist([1,2,3,4,5], [1,4,3,5]))\nprint(sublist([1,2,3,4,5], [1,4,4]))\nprint(sublist([1,2,3,4,5], [2,3]))\nprint(sublist([1,2,3,4,5], [1,4,4,5]))",
    "def sublist(list, sub):\n    for i in sub:\n        if i in list:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    print(sublist([1, 2, 3, 4, 5], [1, 2]))\n    print(sublist([1, 2, 3, 4, 5], [5, 2]))\n    print(sublist([1, 2, 3, 4, 5], [4, 2]))\n    print(sublist([1, 2, 3, 4, 5], [2, 4]))\n    print(sublist([1, 2, 3, 4, 5], [4, 4, 4, 4, 4]))\n    print(sublist([1, 2, 3, 4, 5], [4, 4, 4, 4, 4]))\n    print(sublist([1, 2, 3, 4, 5], [1, 2, 3]))",
    "def has_sublist(list, sublist):\n    for i in range(len(list) - len(sublist) + 1):\n        if list[i:i+len(sublist)] == sublist:\n            return True\n    return False\n\ndef main():\n    print(has_sublist([1, 2, 3, 4, 5], [2, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2]))\n    print(has_sublist([1, 2, 3, 4, 5], [1]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 3]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 3]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 3, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2]))\n    print(has_sublist([1, 2, 3, 4, 5], [1, 2, 4]))\n\nif __name__ == \"__main__\":\n    main()",
    "def contains_sublist(sublist, list):\n\tfor i in range(len(sublist)):\n\t\tif sublist[i] in list:\n\t\t\treturn True\n\treturn False\n\n\nprint(contains_sublist([1,2,3,4,5,6], [2,4]))",
    "def contains_sublist(list_, sublist):\n    return sublist in list_\n\n\ndef main():\n    print(contains_sublist([1, 2, 3, 4, 5], [1, 2, 3, 4]))\n\n\nif __name__ == '__main__':\n    main()",
    "def contains(list, item):\n    if list == []:\n        return False\n    if item in list:\n        return True\n    return False\n\nprint(contains([1, 2, 3, 4], 2))\nprint(contains([1, 2, 3, 4], 3))\nprint(contains([1, 2, 3, 4], 5))\nprint(contains([1, 2, 3, 4], 1))",
    "def contains(arr, sublist):\n    for i in arr:\n        if i in sublist:\n            return True\n    return False\n\n\nif __name__ == \"__main__\":\n    assert contains([1, 2, 3, 4, 5, 6, 7], [1, 2]) == True\n    assert contains([1, 2, 3, 4, 5, 6, 7], [5, 6]) == False",
    "def sublist(list, sub):\n    for i in list:\n        if i in sub:\n            return True\n    return False\n\nif __name__ == \"__main__\":\n    list = [\"a\", \"b\", \"c\"]\n    sub = [\"a\", \"b\"]\n    print(sublist(list, sub))",
    "def check_sublist(l: list, sublist: list) -> bool:\n    for i in sublist:\n        if i not in l:\n            return False\n    return True\n\n\nif __name__ == \"__main__\":\n    assert check_sublist([1, 2, 3], [1, 2]) == True\n    assert check_sublist([1, 2, 3], [3, 2]) == False\n    assert check_sublist([1, 2, 3], [1]) == False\n    assert check_sublist([1, 2, 3], [2, 3]) == True\n    assert check_sublist([1, 2, 3], [3, 2]) == False\n    assert check_sublist([1, 2, 3], [2, 1]) == False\n    assert check_sublist([1, 2, 3], [2, 3, 1]) == True\n    assert check_sublist([1, 2, 3], [2, 3, 2]) == True\n    assert check_sublist([1, 2, 3], [3, 2, 2]) == False",
    "def contains(list1, list2):\n    for item in list1:\n        if item in list2:\n            return True\n    return False\n\nprint(contains([1,2,3,4,5],[2,4]))",
    "def check_if_in_list(list, sublist):\n    for i in sublist:\n        if i in list:\n            return True\n    return False\n\nprint(check_if_in_list([1,2,3,4,5], [2,3]))\nprint(check_if_in_list([1,2,3,4,5], [2,4]))\nprint(check_if_in_list([1,2,3,4,5], [3,4]))\nprint(check_if_in_list([1,2,3,4,5], [4,5]))\nprint(check_if_in_list([1,2,3,4,5], [1,3]))",
    "def contains(arr, sub):\n    for i in sub:\n        if i not in arr:\n            return False\n    return True\n\nprint(contains([1,2,3,4,5,6,7], [5,6]))\nprint(contains([1,2,3,4,5,6,7], [3,4,5]))\nprint(contains([1,2,3,4,5,6,7], [1,5]))\nprint(contains([1,2,3,4,5,6,7], [1,6]))\nprint(contains([1,2,3,4,5,6,7], [2,4]))\nprint(contains([1,2,3,4,5,6,7], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7], [1,3,5]))\nprint(contains([1,2,3,4,5,6,7], [1,2]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4]))\nprint(contains([1,2,3,4,5,6,7], [1,2]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4]))\nprint(contains([1,2,3,4,5,6,7], [3,4,5]))\nprint(contains([1,2,3,4,5,6,7], [4,5,6,7]))\nprint(contains([1,2,3,4,5,6,7], [1,4,5]))\nprint(contains([1,2,3,4,5,6,7], [1,3,4]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4]))\nprint(contains([1,2,3,4,5,6,7], [2,3,4,6]))\nprint(contains([1,2,3,4,5,6,7], [3,4,5,6,7]))\nprint(contains([1,2,3,4,5",
    "def sublist(arr, sub):\n    for i in range(len(arr)):\n        if arr[i] in sub:\n            return True\n    return False\n\nprint(sublist([1, 2, 3, 4], [1, 2]))",
    "def sublist_check(arr, sublist):\n    if sublist in arr:\n        return True\n    else:\n        return False\n\nif __name__ == \"__main__\":\n    print(sublist_check([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [2, 3, 4]))",
    "def contains(a, sub):\n    return a in sub\n\n\ndef contains_2(a, sub):\n    return sub in a\n\n\nprint(contains([1, 2, 3, 4, 5, 6, 7], [4, 5]))\nprint(contains_2([1, 2, 3, 4, 5, 6, 7], [4, 5]))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}