{
  "problem": {
    "task_id": "MBPP/426",
    "prompt": "Write a function to filter odd numbers using lambda function.",
    "canonical_solution": "def filter_oddnumbers(nums):\r\n odd_nums = list(filter(lambda x: x%2 != 0, nums))\r\n return odd_nums",
    "test_list": [
      "assert filter_oddnumbers([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])==[1,3,5,7,9]",
      "assert filter_oddnumbers([10,20,45,67,84,93])==[45,67,93]",
      "assert filter_oddnumbers([5,7,9,8,6,4,3])==[5,7,9,3]"
    ],
    "challenge_test_list": [],
    "problem_id": 415
  },
  "model_name": "codet5-770m",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 101)))\nprint(odd_numbers)",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 21)))\nprint(odd_numbers)",
    "odd_numbers = list(filter(lambda num: num % 2 == 1, range(1, 51)))\nprint(odd_numbers)",
    "odd_numbers = lambda x: x % 2 == 0\n\nprint(list(filter(odd_numbers, [1, 2, 3, 4, 5, 6, 7, 8, 9])))",
    "def odd(x):\n    return x % 2 == 0\n\nprint(list(filter(odd, range(1, 21))))",
    "even_odd = lambda x: x % 2 == 0\nodd_even = lambda x: x % 2!= 0\nprint(even_odd(5))\nprint(odd_even(5))",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 101)))\nprint(odd_numbers)",
    "even_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(even_numbers)",
    "odd_numbers = [num for num in range(1, 101) if num % 2 == 1]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 1]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 0]\nprint(odd_numbers)",
    "def odd_numbers():\n    odd_numbers = filter(lambda x: x % 2!= 0, range(1, 101))\n    return odd_numbers\n\n\nprint(odd_numbers())",
    "odd_numbers = [i for i in range(10) if i % 2!= 0]\nprint(odd_numbers)\n\n# Odd numbers are not even\nodd_numbers_even = [i for i in range(10) if i % 2 == 0]\nprint(odd_numbers_even)",
    "numbers = [5, 7, 8, 9]\n\nodd_numbers = list(filter(lambda n: n % 2 == 1, numbers))\nprint(odd_numbers)",
    "def odd_numbers(x):\n    return x % 2 == 1\n\n\nprint(odd_numbers(5))\nprint(odd_numbers(1))\nprint(odd_numbers(8))\nprint(odd_numbers(8))\nprint(odd_numbers(7))\nprint(odd_numbers(6))\nprint(odd_numbers(4))\nprint(odd_numbers(2))\nprint(odd_numbers(0))\nprint(odd_numbers(0))\nprint(odd_numbers(0))\nprint(odd_numbers(0))\nprint(odd_numbers(0))\nprint(odd_numbers(0))\nprint(odd_numbers(0))",
    "# odd numbers\nodd_numbers = filter(lambda num: num % 2 == 1, range(1, 101))\n\n# even numbers\neven_numbers = filter(lambda num: num % 2 == 0, range(1, 101))\n\nprint(odd_numbers)\nprint(even_numbers)",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1, 21))\nprint(list(odd_numbers))",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1, 21))\nprint(list(odd_numbers))",
    "odd = lambda num: num % 2 == 1\n\nodd(1)\nodd(2)\nodd(3)\nodd(4)\nodd(5)\nodd(6)\nodd(7)\nodd(8)\nodd(9)",
    "odd_numbers = lambda n: n % 2!= 0\n\nprint(list(filter(odd_numbers, range(1, 1000))))",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1,101))\n\nfor number in odd_numbers:\n    print(number)",
    "odd_numbers = filter(lambda num: num % 2 == 0, range(1, 101))\n\nprint(list(odd_numbers))",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1, 100))\n\nfor odd_number in odd_numbers:\n    print(odd_number)",
    "filter_odd = lambda x: x % 2 == 1\n\nprint(list(filter(filter_odd, range(1, 21))))",
    "odd_numbers = filter(lambda num: num % 2 == 1, range(1, 101))\nprint(list(odd_numbers))",
    "odd_numbers = list(filter(lambda x: x % 2!= 0, range(1, 100)))\nprint(odd_numbers)",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1, 100))\nprint(list(odd_numbers))",
    "even_odd = lambda n: n % 2 == 0\n\nprint(list(filter(even_odd, range(1, 101))))",
    "odd = lambda x: x % 2 == 1\n\nprint(list(filter(odd, [1, 2, 3, 4, 5])))",
    "even_odd = lambda n: n % 2 == 0\n\nprint(list(filter(even_odd, range(1, 51))))",
    "def odd_numbers(numbers):\n    return filter(lambda x: x % 2 == 1, numbers)\n\nprint(odd_numbers([1, 2, 3, 4, 5, 6, 7, 8, 9]))",
    "from functools import reduce\n\n\ndef odd_filter(lst):\n    return reduce(lambda x, y: x & y, filter(lambda x: x % 2!= 0, lst), [])\n\n\nif __name__ == \"__main__\":\n    print(odd_filter([1, 2, 3, 4, 5, 6]))",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 101)))\nprint(odd_numbers)",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(10))\nprint(list(odd_numbers))",
    "odd_numbers = [num for num in range(1, 101) if num % 2 == 1]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2!= 1]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 1 and num % 3 == 0]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 1 and num % 3!= 0]\nprint(odd_numbers)\n\nodd_numbers = [num for num in range(1, 101) if num % 2 == 1 and num % 3!= 0 and num % 5 == 0]\nprint(odd_numbers)",
    "odd_number = lambda x: x % 2!= 0\nprint(list(filter(odd_number, [1, 2, 3, 4, 5])))",
    "odd_numbers = filter(lambda x: x % 2 == 1, [1, 2, 3, 4, 5])\n\nfor x in odd_numbers:\n    print(x)",
    "from functools import reduce\n\nodd_numbers = [i for i in range(10) if i % 2 == 1]\nodd_numbers.sort()\n\nprint(odd_numbers)\n\nodd_numbers = list(map(lambda x: x % 2, range(10)))\nodd_numbers.sort()\n\nprint(odd_numbers)\n\nodd_numbers = list(filter(lambda x: x % 2 == 1, range(10)))\nodd_numbers.sort()\n\nprint(odd_numbers)\n\nodd_numbers = list(map(lambda x: x % 2, range(10)))\nodd_numbers.sort(reverse=True)\n\nprint(odd_numbers)\n\nodd_numbers = list(map(lambda x: x % 2, range(10)))\nodd_numbers.sort(key=lambda x: x, reverse=True)\n\nprint(odd_numbers)",
    "odd_num = lambda num: num % 2 == 1\n\nprint(list(filter(odd_num, range(1, 101))))",
    "odd_number = lambda x: x%2 == 1\n\nprint(odd_number(100))\nprint(odd_number(100, True))",
    "odd_numbers = list(filter(lambda x: x % 2!= 0, range(10)))\nprint(odd_numbers)",
    "odd_numbers = filter(lambda x: x % 2!= 0, range(1, 101))\n\nprint(list(odd_numbers))",
    "odd_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nodd_numbers = list(filter(lambda x: x % 2 == 1, odd_numbers))\nprint(odd_numbers)",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1, 101))\nprint(list(odd_numbers))",
    "odd_numbers = filter(lambda x: x%2==1, range(1,101))\n\nfor num in odd_numbers:\n    print(num)",
    "# filter odd numbers\nodd_numbers = list(filter(lambda x: x % 2!= 0, range(1, 101)))\n\n# print odd numbers\nprint(odd_numbers)",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 11)))\nprint(odd_numbers)",
    "odd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)",
    "odd_numbers = [x for x in range(1, 101) if x % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\nodd_numbers = [x for x in range(1,",
    "def odd(x):\n    return x % 2 == 1\n\nprint(list(filter(odd, [1, 2, 3, 4, 5, 6, 7, 8, 9])))",
    "odd_numbers = [x for x in range(1,101) if x % 2!= 0]\nprint(odd_numbers)",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, [1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(odd_numbers)",
    "odd = lambda num: num % 2 == 1\n\nprint(list(filter(odd, [1, 2, 3, 4, 5])))",
    "odd = filter(lambda num: num%2==1, range(1,101))\n\nprint(list(odd))",
    "def odd_numbers(num):\n    odd_numbers = filter(lambda x: x % 2 == 1, range(1, num + 1))\n    return list(odd_numbers)\n\nprint(odd_numbers(10))",
    "even_odd = lambda x: x % 2 == 0\n\nodd_numbers = list(filter(even_odd, range(1, 101)))\nprint(odd_numbers)",
    "odd_numbers = [x for x in range(1, 101) if x % 2!= 0]\nprint(odd_numbers)",
    "odd_list = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_list)\n\n# filter odd numbers using lambda function\nodd_list_lambda = [x for x in range(1, 101) if x % 2!= 0]\nprint(odd_list_lambda)",
    "even_odd = lambda x: x % 2 == 0\n\nprint(list(filter(even_odd, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))",
    "odd_numbers = [1, 2, 3, 4, 5]\n\nodd_numbers = list(filter(lambda x: x % 2 == 1, odd_numbers))\n\nprint(odd_numbers)",
    "odd_numbers = [x for x in range(1, 11) if x % 2 == 1]\nprint(odd_numbers)\n\nodd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 11)))\nprint(odd_numbers)",
    "def odd_numbers(n):\n    return filter(lambda x: x % 2 == 1, range(n))\n\n\nprint(list(odd_numbers(10)))",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1,101)))\nprint(odd_numbers)",
    "def filter_odd(n):\n    return lambda x: x % 2!= 0\n\n\nprint(list(filter(filter_odd, [1, 2, 3, 4, 5, 6, 7, 8, 9])))",
    "odd_numbers = [num for num in range(1, 101) if num % 2 == 1]\nprint(odd_numbers)",
    "odd_list = list(filter(lambda x: x % 2 == 0, [1, 2, 3, 4, 5]))\n\nprint(odd_list)",
    "odd_numbers = filter(lambda x: x % 2 == 1, range(1, 1000))\n\nprint(list(odd_numbers))",
    "odd_numbers = list(filter(lambda num: num % 2 == 1, range(1, 11)))\nprint(odd_numbers)",
    "odd_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\nodd_numbers_filter = list(filter(lambda x: x % 2 == 1, odd_numbers))\nprint(odd_numbers_filter)",
    "odd_numbers = filter(lambda x: x % 2!= 0, range(10))\n\nfor x in odd_numbers:\n    print(x)",
    "odd_numbers = [i for i in range(1, 101) if i % 2!= 0]\nprint(odd_numbers)\n\n\ndef odd_numbers_filter(numbers):\n    return [i for i in numbers if i % 2!= 0]\n\n\nprint(odd_numbers_filter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))",
    "odd = lambda x: x % 2 == 1\n\nprint(list(filter(odd, [1, 2, 3, 4, 5, 6, 7, 8, 9])))",
    "odd_numbers = list(filter(lambda x: x % 2 == 0, range(1, 101)))\nprint(odd_numbers)",
    "# Odd numbers\nfilter_odd_numbers = lambda x: x % 2 == 1\n\nprint(list(filter(filter_odd_numbers, [1, 2, 3, 4, 5, 6, 7, 8, 9])))",
    "odd_numbers = [x for x in range(1, 101) if x % 2!= 0]\nprint(odd_numbers)\n\nodd_numbers = list(filter(lambda x: x % 2!= 0, range(1, 101)))\nprint(odd_numbers)",
    "def odd_numbers(n):\n    return lambda x: x % 2 == 1\n\nprint(odd_numbers(12))\nprint(odd_numbers(20))\nprint(odd_numbers(21))\nprint(odd_numbers(26))\nprint(odd_numbers(33))\nprint(odd_numbers(44))\nprint(odd_numbers(55))\nprint(odd_numbers(61))\nprint(odd_numbers(75))",
    "odd_numbers = lambda num: num % 2 == 1\n\nprint(list(filter(odd_numbers, [1, 2, 3, 4, 5])))",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, [1, 2, 3, 4, 5, 6, 7, 8, 9]))\nprint(odd_numbers)",
    "def odd_numbers(number):\n    return lambda x: x%2 == 0\n\nprint(odd_numbers(1))\nprint(odd_numbers(5))\nprint(odd_numbers(15))",
    "def odd_numbers():\n    odd_numbers = [n for n in range(1,101) if n%2!=0]\n    print(odd_numbers)\n\nodd_numbers()",
    "odd_numbers = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n    100,\n    101,\n    102,\n    103,\n    104,\n    105,\n    106,\n    107,\n    108,\n    109,\n    110,\n    111,\n    112,\n    113,\n    114,\n    115,\n    116,\n    117,\n    118,\n    119,\n    120,\n    121,\n    122,\n    123,\n    124",
    "odd_numbers = filter(lambda x: x % 2!= 0, range(1, 101))\n\nfor odd_number in odd_numbers:\n    print(odd_number)",
    "even = lambda x: x % 2 == 0\n\nprint(list(filter(even, range(1, 101))))",
    "odd = lambda x: x % 2 == 1\n\nprint(list(filter(odd, [1, 2, 3, 4, 5, 6, 7, 8, 9])))",
    "odd_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]\n\nodd_numbers = [x for x in odd_numbers if x % 2 == 0]\nprint(odd_numbers)",
    "odd_numbers = [n for n in range(1, 101) if n % 2!= 0]\n\nprint(odd_numbers)",
    "odd_numbers = [\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11,\n    12,\n    13,\n    14,\n    15,\n    16,\n    17,\n    18,\n    19,\n    20,\n    21,\n    22,\n    23,\n    24,\n    25,\n    26,\n    27,\n    28,\n    29,\n    30,\n    31,\n    32,\n    33,\n    34,\n    35,\n    36,\n    37,\n    38,\n    39,\n    40,\n    41,\n    42,\n    43,\n    44,\n    45,\n    46,\n    47,\n    48,\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    58,\n    59,\n    60,\n    61,\n    62,\n    63,\n    64,\n    65,\n    66,\n    67,\n    68,\n    69,\n    70,\n    71,\n    72,\n    73,\n    74,\n    75,\n    76,\n    77,\n    78,\n    79,\n    80,\n    81,\n    82,\n    83,\n    84,\n    85,\n    86,\n    87,\n    88,\n    89,\n    90,\n    91,\n    92,\n    93,\n    94,\n    95,\n    96,\n    97,\n    98,\n    99,\n]\n\n\ndef odd_numbers_filter(x):\n    return [x for x in odd_numbers if x % 2!= 0]\n\n\nif __name__ == '__main__':\n    print(odd_numbers_filter(11))",
    "def odd_numbers(number):\n    return lambda x: x % 2!= 0\n\n\nodd_numbers_list = list(filter(odd_numbers, range(1, 21)))\nprint(odd_numbers_list)",
    "def odd_numbers(number):\n    return [x for x in range(1, number) if x % 2 == 1]\n\nprint(odd_numbers(3))\nprint(odd_numbers(4))\nprint(odd_numbers(5))",
    "odd_numbers = filter(lambda x: x % 2!= 0, range(1, 101))\n\nprint(list(odd_numbers))",
    "# Filter odd numbers using lambda function\nodd_numbers = [x for x in range(1, 101) if x % 2 == 1]\nprint(odd_numbers)\n\n# Filter odd numbers using lambda function\nodd_numbers = [x for x in range(1, 101) if x % 2 == 0]\nprint(odd_numbers)\n\n# Filter odd numbers using lambda function\nodd_numbers = [x for x in range(1, 101) if x % 2!= 0]\nprint(odd_numbers)",
    "def filter_odd_numbers(num):\n    return filter(lambda x: x % 2 == 1, num)\n\nprint(list(filter_odd_numbers([1,2,3,4,5,6,7,8,9,10])))",
    "even_odd = lambda n: n % 2 == 0\n\nprint(list(filter(even_odd, range(1, 101))))",
    "numbers = [1,2,3,4,5,6,7,8,9,10]\nodd_numbers = list(filter(lambda x: x % 2 == 1, numbers))\nprint(odd_numbers)",
    "def odd_numbers(number):\n    return lambda num: num%2 == 1\n\n\nprint(odd_numbers(10))\nprint(odd_numbers(5))",
    "odd_numbers = list(filter(lambda x: x % 2 == 0, range(1, 101)))\nprint(odd_numbers)",
    "odd_numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n\nodd_numbers = filter(lambda x: x % 2 == 1, odd_numbers)\n\nprint(odd_numbers)",
    "def odd_numbers(n):\n    return lambda x: x % 2 == 0\n\nodd_numbers(9)",
    "odd_numbers = list(filter(lambda x: x % 2 == 1, range(1, 101)))\nprint(odd_numbers)",
    "even_numbers = list(map(lambda x: x % 2 == 0, range(1, 101)))\n\nprint(even_numbers)",
    "def odd_numbers(n):\n    return lambda x: x % 2 == 1\n\nodd_numbers(4)",
    "odd_numbers = filter(lambda n: n % 2 == 1, range(1, 101))\nprint(list(odd_numbers))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}