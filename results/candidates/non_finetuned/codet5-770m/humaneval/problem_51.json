{
  "problem": {
    "task_id": "HumanEval/51",
    "prompt": "\n\ndef remove_vowels(text):\n    \"\"\"\n    remove_vowels is a function that takes string and returns string without vowels.\n    >>> remove_vowels('')\n    ''\n    >>> remove_vowels(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels('abcdef')\n    'bcdf'\n    >>> remove_vowels('aaaaa')\n    ''\n    >>> remove_vowels('aaBAA')\n    'B'\n    >>> remove_vowels('zbcd')\n    'zbcd'\n    \"\"\"\n",
    "canonical_solution": "    return \"\".join([s for s in text if s.lower() not in [\"a\", \"e\", \"i\", \"o\", \"u\"]])\n",
    "test": "\n\nMETADATA = {}\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate(\"abcdef\\nghijklm\") == 'bcdf\\nghjklm'\n    assert candidate('fedcba') == 'fdcb'\n    assert candidate('eeeee') == ''\n    assert candidate('acBAA') == 'cB'\n    assert candidate('EcBOO') == 'cB'\n    assert candidate('ybcd') == 'ybcd'\n\n",
    "entry_point": "remove_vowels",
    "docstring": "",
    "problem_id": 51
  },
  "model_name": "codet5-770m",
  "dataset": "humaneval",
  "num_candidates": 100,
  "candidates": [
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    text = list(text)\n    for i in range(len(text)):\n        if text[i] in vowels:\n            text[i] = ''\n    return ''.join(text)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    text = list(text)\n    for i in range(len(text)):\n        if text[i] not in vowels:\n            text.pop(i)\n    return ''.join(text)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    new_string = \"\"\n    for char in text:\n        if char not in vowels:\n            new_string += char\n    return new_string\n\n\ndef main():\n    print(remove_vowels(''))\n    print(remove_vowels(\"abcdef\\nghijklm\"))\n    print(remove_vowels('abcdef'))\n    print(remove_vowels('aaaaa'))\n    print(remove_vowels('aaBAA'))\n    print(remove_vowels('zbcd'))\n\n\nif __name__ == '__main__':\n    main()",
    "vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowel_list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    return \"\".join([ch for ch in text if ch not in vowel_list])",
    "vowels = 'aeiou'\n    return ''.join(i for i in text if i not in vowels)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join(char for char in text if char not in vowels)\n\n\ndef remove_vowels_2(text):\n    vowels = 'aeiou'\n    return ''.join(char for char in text if char not in vowels)\n\n\ndef remove_vowels_3(text):\n    vowels = 'aeiou'\n    return ''.join(char for char in text if char not in vowels)\n\n\ndef remove_vowels_4(text):\n    vowels = 'aeiou'\n    return ''.join(char for char in text if char not in vowels)",
    "import re\n    vowels = 'aeiou'\n    return re.sub('[{}]'.format(vowels), '', text)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = \"aeiou\"\n    return \"\".join([c for c in text if c not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    if not text:\n        return ''\n    return ''.join(c for c in text if c not in vowels)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod(verbose=True)",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_removed = ''\n    for character in text:\n        if character not in vowels:\n            vowels_removed += character\n    return vowels_removed\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join(c for c in text if c not in vowels)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return \"\".join(filter(lambda x: x not in 'aeiouAEIOU', text))\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    if text == '':\n        return ''\n    if text.isalpha():\n        return ''.join([char for char in text if char not in vowels])\n    else:\n        return \"\"\n\n\nif __name__ == '__main__':\n    print(remove_vowels(''))\n    print(remove_vowels(\"abcdef\\nghijklm\"))\n    print(remove_vowels('abcdef'))\n    print(remove_vowels('aaaaa'))\n    print(remove_vowels('aaBAA'))\n    print(remove_vowels('zbcd'))",
    "vowels = 'aeiou'\n    text_without_vowels = ''\n    for char in text:\n        if char not in vowels:\n            text_without_vowels += char\n    return text_without_vowels\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return ''.join(i for i in text if i not in \"aeiouAEIOU\")\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    new_text = ''\n    for letter in text:\n        if letter in vowels:\n            new_text += letter\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join(i for i in text if i not in vowels)",
    "vowels = 'aeiouAEIOU'\n    if not text:\n        return ''\n    return ''.join([char for char in text if char not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = set('aeiou')\n    return ''.join(c for c in text if c not in vowels)\n\n\ndef remove_vowels_recursive(text):\n    \"\"\"\n    remove_vowels_recursive is a function that takes string and returns string without vowels.\n    >>> remove_vowels_recursive('')\n    ''\n    >>> remove_vowels_recursive(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_recursive('abcdef')\n    'bcdf'\n    >>> remove_vowels_recursive('aaaaa')\n    ''\n    >>> remove_vowels_recursive('aaBAA')\n    'B'\n    >>> remove_vowels_recursive('zbcd')\n    'zbcd'\n    \"\"\"\n    vowels = set('aeiou')\n    if text == '':\n        return ''\n    if text[0] in vowels:\n        return remove_vowels_recursive(text[1:])\n    return text[0] + remove_vowels_recursive(text[1:])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowel = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    return \"\".join(ch for ch in text if ch not in vowel)\n\n\nif __name__ == \"__main__\":\n    print(remove_vowels(\"abcdef\\nghijklm\"))\n    print(remove_vowels(\"abcdef\"))\n    print(remove_vowels(\"aaaaa\"))\n    print(remove_vowels(\"aaBAA\"))\n    print(remove_vowels(\"zbcd\"))",
    "vowels = 'aeiouAEIOU'\n    return ''.join([c for c in text if c not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = \"aeiouAEIOU\"\n    vowels_list = [v for v in vowels if v in text]\n    return \"\".join(vowels_list)",
    "return ''.join([i for i in text if i not in 'aeiouAEIOU'])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    return ''.join([x for x in text if x not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_string = ''\n    for i in text:\n        if i not in vowels:\n            vowels_string += i\n    return vowels_string\n\n\nif __name__ == '__main__':\n    print(remove_vowels(''))\n    print(remove_vowels(\"abcdef\\nghijklm\"))\n    print(remove_vowels('abcdef'))\n    print(remove_vowels('aaaaa'))\n    print(remove_vowels('aaBAA'))\n    print(remove_vowels('zbcd'))",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return ''.join(c for c in text if c not in 'aeiouAEIOU')\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowel_set = 'aeiou'\n\n    return ''.join(char for char in text if char not in vowel_set)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    text = ''.join(c for c in text if c not in vowels)\n    return text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    return ''.join(c for c in text if c not in vowels)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join(x for x in text if x not in vowels)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    vowels_list = list(vowels)\n    result = ''\n    for char in text:\n        if char not in vowels_list:\n            result += char\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "text = list(text)\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_index = 0\n    for index, letter in enumerate(text):\n        if letter not in vowels:\n            text[index] = text[vowels_index]\n            vowels_index += 1\n    return \"\".join(text)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    text = ''.join([char for char in text if char not in vowels])\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = \"aeiouAEIOU\"\n    new_text = \"\"\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    new_text = ''\n    for i in text:\n        if i not in vowels:\n            new_text += i\n    return new_text\n\n\ndef remove_vowels_v2(text):\n    \"\"\"\n    remove_vowels_v2 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_v2('')\n    ''\n    >>> remove_vowels_v2(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_v2('abcdef')\n    'bcdf'\n    >>> remove_vowels_v2('aaaaa')\n    ''\n    >>> remove_vowels_v2('aaBAA')\n    'B'\n    >>> remove_vowels_v2('zbcd')\n    'zbcd'\n    \"\"\"\n    vowels = 'aeiou'\n    new_text = ''\n    for i in text:\n        if i not in vowels:\n            new_text += i\n    return new_text",
    "vowels = 'aeiou'\n    return \"\".join([c for c in text if c not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = set('aeiouAEIOU')\n    new_text = \"\"\n    for word in text.split():\n        if word not in vowels:\n            new_text += word\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join([c for c in text if c not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    text_without_vowels = ''\n    for letter in text:\n        if letter not in vowels:\n            text_without_vowels += letter\n    return text_without_vowels\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    return \"\".join(filter(lambda letter: letter not in vowels, text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    result = ''\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    return ''.join([char for char in text if char not in vowels])\n\n\ndef remove_vowels_using_list(text):\n    \"\"\"\n    remove_vowels_using_list is a function that takes a list and returns a list without vowels.\n    >>> remove_vowels_using_list([])\n    []\n    >>> remove_vowels_using_list([\"abcdef\\nghijklm\"])\n    ['bcdf\\nghjklm']\n    >>> remove_vowels_using_list('abcdef')\n    ['bcdf']\n    >>> remove_vowels_using_list('aaaaa')\n    []\n    >>> remove_vowels_using_list('aaBAA')\n    ['B']\n    >>> remove_vowels_using_list('zbcd')\n    ['zbcd']\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    return [char for char in text if char not in vowels]",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\ndef main():\n    import doctest\n    doctest.testmod()\n\n\nif __name__ == \"__main__\":\n    main()",
    "vowels = 'aeiou'\n    text = ''.join(i for i in text if i not in vowels)\n    return text\n\n\ndef main():\n    text = input('Enter a string: ')\n    print(remove_vowels(text))\n\n\nif __name__ == '__main__':\n    main()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    for letter in text:\n        if letter not in vowels:\n            result += letter\n    return result",
    "if not text:\n        return \"\"\n    vowels = \"aeiou\"\n    result = \"\"\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = \"aeiouAEIOU\"\n    new_text = \"\"\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "if text == '':\n        return ''\n    vowels = 'aeiouAEIOU'\n    return ''.join([c for c in text if c not in vowels])\n\n\ndef remove_vowels_2(text):\n    \"\"\"\n    remove_vowels_2 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_2('')\n    ''\n    >>> remove_vowels_2(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_2('abcdef')\n    'bcdf'\n    >>> remove_vowels_2('aaaaa')\n    ''\n    >>> remove_vowels_2('aaBAA')\n    'B'\n    >>> remove_vowels_2('zbcd')\n    'zbcd'\n    \"\"\"\n    if text == '':\n        return ''\n    vowels = 'aeiouAEIOU'\n    return ''.join([c for c in text if c not in vowels])",
    "vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    vowels_list = list(vowels)\n    for i in range(len(text)):\n        if text[i] not in vowels_list:\n            text = text[:i] + text[i+1:]\n    return text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return \"\".join(c for c in text if not c.isalpha())\n\n\ndef remove_punctuation(text):\n    \"\"\"\n    remove_punctuation is a function that takes string and returns string without punctuation.\n    >>> remove_punctuation('')\n    ''\n    >>> remove_punctuation(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_punctuation('abcdef')\n    'bcdf'\n    >>> remove_punctuation('aaaaa')\n    ''\n    >>> remove_punctuation('aaBAA')\n    'B'\n    >>> remove_punctuation('zbcd')\n    'zbcd'\n    \"\"\"\n    return \"\".join(c for c in text if c.isalpha() and c.isupper() or c.isdigit() or c == '.' or c == ',' or c == '?' or c == '!' or c == '\"')\n\n\ndef remove_numbers(text):\n    \"\"\"\n    remove_numbers is a function that takes string and returns string without numbers.\n    >>> remove_numbers('')\n    ''\n    >>> remove_numbers(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_numbers('abcdef')\n    'bcdf'\n    >>> remove_numbers('aaaaa')\n    ''\n    >>> remove_numbers('aaBAA')\n    'B'\n    >>> remove_numbers('zbcd')\n    'zbcd'\n    \"\"\"\n    return \"\".join(c for c in text if c.isdigit() or c == '.' or c == ',' or c == '?' or c == '!' or c == '\"')\n\n\ndef remove_numbers_and_punctuation(text):\n    \"\"\"\n    remove_numbers_and_punctuation is a function that takes string and returns string without numbers and punctuation.\n    >>> remove_numbers_and_punctuation('')\n    ''\n    >>> remove_numbers_and_punctuation(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_numbers_and_punctuation('abcdef')\n    'bcdf'\n    >>> remove_numbers_and_punctuation('aaaaa')\n    ''",
    "vowel_list = ['a', 'e', 'i', 'o', 'u']\n    if text == '':\n        return ''\n    else:\n        output_string = ''\n        for letter in text:\n            if letter not in vowel_list:\n                output_string += letter\n        return output_string\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "text = text.lower()\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    result = ''\n    for letter in text:\n        if letter not in vowels:\n            result += letter\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return ''.join(c for c in text if c not in 'aeiou')\n\n\ndef remove_vowels_2(text):\n    \"\"\"\n    remove_vowels_2 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_2('')\n    ''\n    >>> remove_vowels_2(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_2('abcdef')\n    'bcdf'\n    >>> remove_vowels_2('aaaaa')\n    ''\n    >>> remove_vowels_2('aaBAA')\n    'B'\n    >>> remove_vowels_2('zbcd')\n    'zbcd'\n    \"\"\"\n    return ''.join(c for c in text if c not in 'aeiou')\n\n\ndef remove_vowels_3(text):\n    \"\"\"\n    remove_vowels_3 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_3('')\n    ''\n    >>> remove_vowels_3(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_3('abcdef')\n    'bcdf'\n    >>> remove_vowels_3('aaaaa')\n    ''\n    >>> remove_vowels_3('aaBAA')\n    'B'\n    >>> remove_vowels_3('zbcd')\n    'zbcd'\n    \"\"\"\n    return ''.join(c for c in text if c not in 'aeiou')\n\n\ndef remove_vowels_4(text):\n    \"\"\"\n    remove_vowels_4 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_4('')\n    ''\n    >>> remove_vowels_4(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_4('abcdef')\n    'bcdf'\n    >>> remove_vowels_4('aaaaa')\n    ''\n    >>> remove_vowels_4('aaBAA')\n    '",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    output = ''\n    for char in text:\n        if char in vowels:\n            output += char\n    return output",
    "vowels = 'aeiou'\n    return ''.join([char for char in text if char not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    vowels_list = list(vowels)\n    vowels_list.remove('a')\n    vowels_list.remove('e')\n    vowels_list.remove('i')\n    vowels_list.remove('o')\n    vowels_list.remove('u')\n    vowels_list.remove('A')\n    vowels_list.remove('E')\n    vowels_list.remove('I')\n    vowels_list.remove('O')\n    vowels_list.remove('U')\n    vowels_list.remove('A')\n    vowels_list.remove('E')\n    vowels_list.remove('I')\n    vowels_list.remove('O')\n    vowels_list.remove('U')\n    vowels_list.remove('A')\n    vowels_list.remove('E')\n    vowels_list.remove('I')\n    vowels_list.remove('O')\n    vowels_list.remove('U')\n    vowels_list.remove('B')\n    vowels_list.remove('C')\n    vowels_list.remove('D')\n    vowels_list.remove('F')\n    vowels_list.remove('G')\n    vowels_list.remove('H')\n    vowels_list.remove('J')\n    vowels_list.remove('K')\n    vowels_list.remove('L')\n    vowels_list.remove('M')\n    vowels_list.remove('N')\n    vowels_list.remove('O')\n    vowels_list.remove('P')\n    vowels_list.remove('Q')\n    vowels_list.remove('R')\n    vowels_list.remove('S')\n    vowels_list.remove('T')\n    vowels_list.remove('U')\n    vowels_list.remove('V')\n    vowels_list.remove('X')\n    vowels_list.remove('Y')\n    vowels_list.remove('Z')\n    vowels_list.remove('0')\n    vowels_list.remove('1')\n    vowels_",
    "vowels = 'aeiouAEIOU'\n    new_text = ''\n    for char in text:\n        if char not in vowels:\n            new_text += char\n    return new_text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "return \"\".join(char for char in text if char not in 'aeiou')\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = set('aeiouAEIOU')\n    text = ''.join(c for c in text if c not in vowels)\n    return text",
    "import re\n\n    return re.sub(r\"[^a-zA-Z]\", \"\", text)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join([word for word in text if word not in vowels])",
    "vowels = 'aeiou'\n    new_text = ''\n    for i in text:\n        if i not in vowels:\n            new_text += i\n    return new_text\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    result = ''\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return ''.join(i for i in text if not i.isalpha())\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    return ''.join([x for x in text if x not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "if text == \"\":\n        return \"\"\n    if text[0] == \"a\" or text[0] == \"e\" or text[0] == \"i\" or text[0] == \"o\" or text[0] == \"u\":\n        return text[1:]\n    else:\n        return text[0] + remove_vowels(text[1:])\n\n\ndef remove_vowels_2(text):\n    \"\"\"\n    remove_vowels_2 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_2('')\n    ''\n    >>> remove_vowels_2(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_2('abcdef')\n    'bcdf'\n    >>> remove_vowels_2('aaaaa')\n    ''\n    >>> remove_vowels_2('aaBAA')\n    'B'\n    >>> remove_vowels_2('zbcd')\n    'zbcd'\n    \"\"\"\n\n    if text == \"\":\n        return \"\"\n    if text[0] == \"a\" or text[0] == \"e\" or text[0] == \"i\" or text[0] == \"o\" or text[0] == \"u\":\n        return text[1:]\n    else:\n        vowels = ['a', 'e', 'i', 'o', 'u']\n        text = list(text)\n        for i in range(len(vowels)):\n            if vowels[i] in text:\n                text.remove(vowels[i])\n        return \"\".join(text)\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowel_list = ['a', 'e', 'i', 'o', 'u']\n    return ''.join(char for char in text if char not in vowel_list)",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    result = ''\n    for i in text:\n        if i not in vowels:\n            result += i\n    return result\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "if text == '':\n        return text\n    vowels = 'aeiou'\n    return ''.join(filter(lambda x: x not in vowels, text))\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    output = ''\n    for char in text:\n        if char not in vowels:\n            output += char\n    return output\n\n\ndef remove_vowels_2(text):\n    \"\"\"\n    remove_vowels_2 is a function that takes string and returns string without vowels.\n    >>> remove_vowels_2('')\n    ''\n    >>> remove_vowels_2(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_2('abcdef')\n    'bcdf'\n    >>> remove_vowels_2('aaaaa')\n    ''\n    >>> remove_vowels_2('aaBAA')\n    'B'\n    >>> remove_vowels_2('zbcd')\n    'zbcd'\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    output = ''\n    for char in text:\n        if char in vowels:\n            output += char\n    return output",
    "vowels = \"aeiouAEIOU\"\n    result = \"\"\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    return ''.join(char for char in text if char not in vowels)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = set('aeiou')\n    vowels_text = ''\n    for letter in text:\n        if letter not in vowels:\n            vowels_text += letter\n    return vowels_text",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    text = \"\".join(char for char in text if char not in vowels)\n    return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    return \"\".join([c for c in text if c not in vowels])\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "return \"\".join(filter(lambda x: x not in \"aeiouAEIOU\", text))\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "import re\n    vowels = re.compile('[aeiou]')\n    return vowels.sub('', text)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_text = ''\n    for char in text:\n        if char not in vowels:\n            vowels_text += char\n    return vowels_text\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    if len(text) == 0:\n        return ''\n    if text[0] not in vowels:\n        return text\n    return text[1:]\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    if type(text) is str:\n        return ''.join([i for i in text if not i in vowels])\n\n\ndef main():\n    import doctest\n    doctest.testmod()\n\n\nif __name__ == '__main__':\n    main()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    new_text = []\n    for letter in text:\n        if letter not in vowels:\n            new_text.append(letter)\n    return ''.join(new_text)",
    "vowels = \"aeiouAEIOU\"\n    vowels_count = 0\n    text = text.lower()\n    for i in text:\n        if i in vowels:\n            vowels_count += 1\n    if vowels_count == 0:\n        return \"\"\n    else:\n        return text\n\n\nif __name__ == \"__main__\":\n    import doctest\n    doctest.testmod()",
    "text = text.lower()\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = []\n    for i in text:\n        if i in vowels:\n            vowels_list.append(i)\n\n    return \"\".join(vowels_list)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiou'\n    vowels_list = list(vowels)\n    text_list = list(text)\n    vowels_list.remove('a')\n    vowels_list.remove('e')\n    vowels_list.remove('i')\n    vowels_list.remove('o')\n    vowels_list.remove('u')\n    vowels_list.remove('A')\n    vowels_list.remove('E')\n    vowels_list.remove('I')\n    vowels_list.remove('O')\n    vowels_list.remove('U')\n    vowels_list = ''.join(vowels_list)\n    text_list = ''.join(text_list)\n    if vowels_list == text_list:\n        return ''\n    else:\n        return text_list\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "if not text:\n        return ''\n    vowels = 'aeiouAEIOU'\n    return ''.join([c for c in text if c not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "return \"\".join([c for c in text if not c.isalpha()])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod(verbose=True)",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = list(text)\n    for vowel in vowels:\n        if vowel in vowels_list:\n            vowels_list.remove(vowel)\n    return ''.join(vowels_list)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    result = \"\"\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\ndef remove_vowels_slow(text):\n    \"\"\"\n    remove_vowels_slow is a function that takes string and returns string without vowels.\n    >>> remove_vowels_slow('')\n    ''\n    >>> remove_vowels_slow(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_slow('abcdef')\n    'bcdf'\n    >>> remove_vowels_slow('aaaaa')\n    ''\n    >>> remove_vowels_slow('aaBAA')\n    'B'\n    >>> remove_vowels_slow('zbcd')\n    'zbcd'\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    result = \"\"\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result\n\n\ndef remove_vowels_fast(text):\n    \"\"\"\n    remove_vowels_fast is a function that takes string and returns string without vowels.\n    >>> remove_vowels_fast('')\n    ''\n    >>> remove_vowels_fast(\"abcdef\\nghijklm\")\n    'bcdf\\nghjklm'\n    >>> remove_vowels_fast('abcdef')\n    'bcdf'\n    >>> remove_vowels_fast('aaaaa')\n    ''\n    >>> remove_vowels_fast('aaBAA')\n    'B'\n    >>> remove_vowels_fast('zbcd')\n    'zbcd'\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    result = \"\"\n    for char in text:\n        if char not in vowels:\n            result += char\n    return result",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    final_string = ''\n    for char in text:\n        if char not in vowels:\n            final_string += char\n    return final_string\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    return ''.join([i for i in text if i not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n\n    doctest.testmod()",
    "vowels = 'aeiouAEIOU'\n    return ''.join(ch for ch in text if ch not in vowels)\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = 'aeiou'\n    vowels_list = list(vowels)\n    vowels_list.remove('a')\n    vowels_list.remove('e')\n    vowels_list.remove('i')\n    vowels_list.remove('o')\n    vowels_list.remove('u')\n    vowels_list.remove('A')\n    vowels_list.remove('E')\n    vowels_list.remove('I')\n    vowels_list.remove('O')\n    vowels_list.remove('U')\n    new_text = ''\n    for i in text:\n        if i not in vowels_list:\n            new_text += i\n    return new_text",
    "vowels = 'aeiouAEIOU'\n    return ''.join([char for char in text if char not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()",
    "vowels = ['a', 'e', 'i', 'o', 'u']\n    return ''.join([char for char in text if char not in vowels])\n\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 10,
    "inference_batch_size": 64,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_length": 512,
    "source_len": 600,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}