{
  "problem": {
    "task_id": "MBPP/436",
    "prompt": "Write a python function to print negative numbers in a list.",
    "canonical_solution": "def neg_nos(list1):\r\n  for num in list1: \r\n    if num < 0: \r\n       return num ",
    "test_list": [
      "assert neg_nos([-1,4,5,-6]) == -1,-6",
      "assert neg_nos([-1,-2,3,4]) == -1,-2",
      "assert neg_nos([-7,-6,8,9]) == -7,-6"
    ],
    "challenge_test_list": [],
    "problem_id": 425
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def negative_numbers(list_of_numbers):\n    for num in list_of_numbers:\n        if num < 0:\n            print(num)\n\n\nif __name__ == '__main__':\n    list_of_numbers = [12, 13, -12, -14, 21, -45]\n    negative_numbers(list_of_numbers)",
    "def print_negative_numbers(input_list):\n    for num in input_list:\n        if num < 0:\n            print(num)\n\n\ndef main():\n    list1 = [1, 2, 3, 4, -5, -6, -7]\n    print_negative_numbers(list1)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(my_list):\n    negative = []\n    for i in my_list:\n        if i < 0:\n            negative.append(i)\n    return negative\n\nprint(negative_numbers([2, -1, -4, 0, 5]))",
    "def negative_numbers(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\nnegative_numbers([23, 56, -12, 12, 45, 67, 89])",
    "def negative_num(num_list):\n    for num in num_list:\n        if num < 0:\n            print(num)\n\nnegative_num([1, 2, 3, -4, 5, -6, -7, 8, 9, -10, -11, -12])",
    "def negative_nums(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, -1, 0, 2, -3]\n    negative_nums(lst)",
    "def negative_nums(list):\n    for num in list:\n        if num < 0:\n            print(num)\n\nif __name__ == \"__main__\":\n    nums = [-1, -2, -3, -4, -5, 1, 2, 3, 4, 5]\n    negative_nums(nums)",
    "def negative_number_list(numbers):\n    for i in numbers:\n        if i < 0:\n            print(i)\n\n\nnegative_number_list([-4, -3, -1, 0, 3, 5])",
    "def print_negative(list_):\n    for i in list_:\n        if i < 0:\n            print(i)\n\n\ndef print_negative_2(list_):\n    negatives = [i for i in list_ if i < 0]\n    for i in negatives:\n        print(i)\n\n\ndef print_negative_3(list_):\n    for i in list_:\n        if i < 0:\n            yield i\n\n\ndef main():\n    list_ = [-1, -2, 0, 3, -4]\n    print_negative(list_)\n    print_negative_2(list_)\n    print(list(print_negative_3(list_)))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def print_negative_numbers(my_list: list) -> None:\n    \"\"\"Print negative numbers in a list.\n\n    Args:\n        my_list (list): list of numbers\n\n    Returns:\n        None\n    \"\"\"\n    for number in my_list:\n        if number < 0:\n            print(number)\n\n\nif __name__ == \"__main__\":\n    my_list = [1, -2, 3, -4, 5]\n    print_negative_numbers(my_list)",
    "def negative_nums(my_list):\n    neg_list = []\n    for i in my_list:\n        if i < 0:\n            neg_list.append(i)\n    return neg_list\n\nmy_list = [2, 4, -7, 0, -1, 5, -2, 10]\nprint(negative_nums(my_list))",
    "def negative_numbers(nums):\n    negative_nums = []\n    for i in nums:\n        if i < 0:\n            negative_nums.append(i)\n\n    return negative_nums\n\n\ndef main():\n    n = negative_numbers([1,2,3,-4,-5,-6,7,-8,-9,-10])\n    print(n)\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(input_list):\n    return [i for i in input_list if i < 0]\n\n\ndef main():\n    print(negative_numbers([-1, -2, -3, 4, 5]))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(input_list):\n    return [num for num in input_list if num < 0]\n\ninput_list = [1,2,3,-4,-5,6,-7]\nprint(negative_numbers(input_list))",
    "def negative_numbers(list_num):\n    for i in list_num:\n        if i < 0:\n            print(i)\n\n\nnegative_numbers([1, 2, 3, -1, -5, -7, 22])",
    "def print_neg(my_list):\n    \"\"\"\n    Print negative numbers in a list.\n\n    Args:\n        my_list(list): List of integers.\n    Returns:\n        None\n    \"\"\"\n    for num in my_list:\n        if num < 0:\n            print(num)\n\n\nif __name__ == '__main__':\n    my_list = [1, 2, 3, -5, -6, -9, 10, 12]\n    print_neg(my_list)",
    "def negative_numbers(arr):\n    for num in arr:\n        if num < 0:\n            print(num)\n\n\nif __name__ == '__main__':\n    arr = [1, 2, -4, 5, -10, 8]\n    negative_numbers(arr)",
    "def print_negative(nums):\n    for num in nums:\n        if num < 0:\n            print(num)\n\n\ndef main():\n    print_negative([1, 2, 3, -4, -5, -6, 7, -8])\n\n\nif __name__ == \"__main__\":\n    main()",
    "def printNegativeNumbers(nums):\n    for i in range(len(nums)):\n        if nums[i] < 0:\n            print(nums[i])\n\nnums = [10,-15,3,0,-9,-8,45,78,2]\nprintNegativeNumbers(nums)",
    "def negative_nums(list_in):\n    negative_nums = []\n    for i in list_in:\n        if i < 0:\n            negative_nums.append(i)\n    print(negative_nums)\n\nnegative_nums([1, 2, 3, -4, 5, -6, -7, -8])\nnegative_nums([1, 2, 3, 4, 5, 6, 7, 8])\nnegative_nums([-1, -2, -3, -4, -5, -6, -7, -8])",
    "def negative_numbers(nums):\n    for i in nums:\n        if i < 0:\n            print(i)\n\n\nnegative_numbers([1, 2, -1, 3, -5, 6])",
    "def negative_numbers(numbers):\n    for num in numbers:\n        if num < 0:\n            print(num)\n\n\nnegative_numbers([1, -2, 3, -4, 5, -6])",
    "def negative_nums(lst):\n    result = []\n    for num in lst:\n        if num < 0:\n            result.append(num)\n    return result\n\n\ndef main():\n    list1 = [1, 2, 3, 4, 5, -1, -2, -3, -4, -5]\n    print(negative_nums(list1))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(list_nums):\n    for num in list_nums:\n        if num < 0:\n            print(num)\n\n\nif __name__ == '__main__':\n    list_nums = [2, 4, -9, 12, -1, 0, 1]\n    negative_numbers(list_nums)",
    "def negative_numbers(nums):\n    return [x for x in nums if x < 0]\n\ndef main():\n    print(negative_numbers([1, 2, 3, 4, 5, -7, -9]))\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(nums):\n    for num in nums:\n        if num < 0:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    negative_numbers([1, 2, 3, -5, -8])",
    "def print_negative_numbers(l):\n    for i in l:\n        if i < 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    print_negative_numbers([1, 2, 3, 4, 5, 6, -1, -2, -3, -4, -5, -6])",
    "def negative_numbers(arr):\n    for x in arr:\n        if x < 0:\n            print(x)\n\n\nnegative_numbers([1, 2, -3, 4, -5, -6, 7, -8])",
    "def negative_nums(arr):\n    res = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            res.append(arr[i])\n    return res\n\n\nprint(negative_nums([1,2,-5,-3,4,-6]))\n\n\"\"\"\ndef negative_nums(arr):\n    return [i for i in arr if i < 0]\n\"\"\"",
    "def negative_numbers(lst):\n    for i in lst:\n        if i < 0:\n            print(i, end=' ')\n\n\ndef main():\n    lst = [1, -1, 2, -2, 3, -3, 4, -4, 5, -5, 6, -6, 7, -7, 8, -8, 9, -9]\n    negative_numbers(lst)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_number(lst: list):\n    return [i for i in lst if i < 0]\n\n\ndef main():\n    lst = [1, 2, -3, -4, 5, 6, 7]\n    result = negative_number(lst)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_num_print(list_input):\n    return [i for i in list_input if i < 0]\n\n\ndef main():\n    list_num = [-1, -2, 1, 2, 3, -4]\n    print(negative_num_print(list_num))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative(x):\n    for i in x:\n        if i<0:\n            print(i)\n\nif __name__ == '__main__':\n    x = [1,2,-3,-4,5]\n    negative(x)",
    "def print_negative_numbers(nums):\n    neg_nums = []\n    for num in nums:\n        if num < 0:\n            neg_nums.append(num)\n    return neg_nums\n\n\nnums = [-1, 2, -3, 4, -5]\nprint(print_negative_numbers(nums))",
    "def negative_num(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\nif __name__ == '__main__':\n    list = [1, 2, 3, 4, -1, -2, 5, 6, 7, -3]\n    negative_num(list)",
    "def printNegative(nums):\n    neg_nums = []\n    for num in nums:\n        if num < 0:\n            neg_nums.append(num)\n    return neg_nums\n\ndef main():\n    nums = [-1, -2, 1, 2]\n    neg_nums = printNegative(nums)\n    print(neg_nums)\n\nif __name__ == \"__main__\":\n    main()",
    "def negative(lst):\n    for num in lst:\n        if num < 0:\n            print(num)\n\n\nnegative([1, 2, -3, -4, 5, -6])",
    "def negative_numbers(input_list):\n    result = []\n    for i in input_list:\n        if i < 0:\n            result.append(i)\n    return result\n\n\ninput_list = [1, 2, -3, -4, -5, 6, 7, 8, -9, 10]\nprint(negative_numbers(input_list))",
    "def negative_nums(arr):\n    neg = []\n    for i in arr:\n        if i < 0:\n            neg.append(i)\n    return neg\n\n\nprint(negative_nums([3, -4, -3, 2, -2, 5]))",
    "def negative_numbers(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\n\nnums = [10, 20, -30, 40, -50, -60]\nnegative_numbers(nums)",
    "def negative_num(nums):\n    for i in nums:\n        if i < 0:\n            print(i)\n\nnums = [1, -2, -5, 10, 4, -1]\nnegative_num(nums)",
    "def negative_num(numbers):\n    neg_nums = []\n    for num in numbers:\n        if num < 0:\n            neg_nums.append(num)\n    return neg_nums\n\nprint(negative_num([3,4,-7,-1,2,-10,11]))",
    "def negative_nums(input_list):\n    \"\"\"\n    Print negative numbers in a list.\n\n    >>> negative_nums([1, -2, -5, 2, -4, 0])\n    -2\n    -5\n    -4\n    \"\"\"\n    for num in input_list:\n        if num < 0:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def print_negative(list_):\n    for i in list_:\n        if i < 0:\n            print(i)\n\n\nprint_negative([1, 2, 3, 4, 5, -1, -2, -3])",
    "def print_negative_num(nums):\n    negative = []\n    for num in nums:\n        if num < 0:\n            negative.append(num)\n    return negative\n\ndef main():\n    nums = [-2, -1, 0, 1, 2]\n    negative = print_negative_num(nums)\n    print(negative)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_nums(numbers):\n    neg = []\n    for i in numbers:\n        if i < 0:\n            neg.append(i)\n    return neg\n\nif __name__ == \"__main__\":\n    print(\"enter the numbers\")\n    numbers = list(map(int, input().split()))\n    print(negative_nums(numbers))",
    "def negative_numbers(nums):\n    return [n for n in nums if n < 0]\n\n\ndef test_function(test_case):\n    test_input, test_expected = test_case\n    test_actual = negative_numbers(test_input)\n    if test_expected == test_actual:\n        print(\"Pass\")\n    else:\n        print(\"Fail\")\n\n\ntest_function(([3, -5, -2, -1, 6, 7, 10], [-5, -2, -1]))\ntest_function(([3, 6, 7, 10], []))\ntest_function(([-5, 6, 7, -10], [-5, -10]))",
    "def print_negative_numbers(nums):\n    \"\"\"\n    Print negative numbers in a list\n\n    Args:\n       nums(list): list of integers containing one or more negative numbers\n    \"\"\"\n    negative_numbers = []\n    for num in nums:\n        if num < 0:\n            negative_numbers.append(num)\n    print(negative_numbers)\n\n\n# Example:\n# print_negative_numbers([2, 3, -10, 4, -20, -40, 5])\nprint_negative_numbers([2, 3, 4, -20, -40, 5])",
    "def negative_list(numbers):\n    for num in numbers:\n        if num < 0:\n            print(num)\n\nnegative_list([1, 2, 3, -4, 5, -6, 7, 8, -9, -10])",
    "def negative_numbers(lst):\n    return [num for num in lst if num < 0]\n\n\ndef main():\n    lst = [1, 2, 3, 4, 5, -6, -7, -8, 9]\n    print(negative_numbers(lst))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_num(nums):\n    negative_list = []\n    for i in nums:\n        if i < 0:\n            negative_list.append(i)\n    return negative_list\n\n\nnums = [1, -1, 4, -3, 2]\nprint(negative_num(nums))",
    "def negative_numbers(list):\n    negative_numbers = []\n    for num in list:\n        if num < 0:\n            negative_numbers.append(num)\n    return negative_numbers",
    "def negative_nums(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\n\n\nif __name__ == '__main__':\n    negative_nums([1,2,3,-4,-5])",
    "def negative_numbers(arr: list) -> list:\n    \"\"\"\n    >>> negative_numbers([1, 2, -1, 3, -5, 7])\n    [-1, -5]\n    \"\"\"\n    return [num for num in arr if num < 0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def negative_numbers(numbers: list) -> list:\n    \"\"\"\n    >>> negative_numbers([1, 2, 3, -5, -10, 11, 12])\n    [-5, -10]\n    \"\"\"\n    return [number for number in numbers if number < 0]\n\n\ndef negative_numbers_v2(numbers: list) -> list:\n    \"\"\"\n    >>> negative_numbers_v2([1, 2, 3, -5, -10, 11, 12])\n    [-5, -10]\n    \"\"\"\n    return list(filter(lambda number: number < 0, numbers))\n\n\ndef negative_numbers_v3(numbers: list) -> list:\n    \"\"\"\n    >>> negative_numbers_v3([1, 2, 3, -5, -10, 11, 12])\n    [-5, -10]\n    \"\"\"\n    return [number for number in numbers if number < 0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def negative_numbers(input_list):\n    negative_numbers = []\n    for number in input_list:\n        if number < 0:\n            negative_numbers.append(number)\n    return negative_numbers\n\n\nprint(negative_numbers([1, -2, 4, -7, 8]))",
    "def negative_number_finder(array):\n    for i in array:\n        if i < 0:\n            print(i)\n\n\nnegative_number_finder([1, 2, 3, 4, 5, -7, -11, -15])",
    "def negative_numbers(list_num):\n    for i in list_num:\n        if i < 0:\n            print(i)\n\n\nnegative_numbers([1, 2, -1, -5, 7, -4])",
    "def negative_numbers(lst):\n    \"\"\"\n    This function takes a list as an argument and returns a list of negative numbers in the list.\n    \"\"\"\n    negative_list = []\n    for item in lst:\n        if item < 0:\n            negative_list.append(item)\n    return negative_list\n\nif __name__ == '__main__':\n    print(negative_numbers([-2, -4, -6, -8, -10]))\n    print(negative_numbers([2, 4, 6, 8, 10]))",
    "def print_negative(nums):\n    for num in nums:\n        if num < 0:\n            print(num)\n\n\nprint_negative([1, 2, -1, -5, 3, -2])",
    "def negative(a: list) -> list:\n    result = []\n    for i in a:\n        if i < 0:\n            result.append(i)\n    return result\n\n\ndef main():\n    a = [-1, 2, -5, -3, 1]\n    print(negative(a))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(nums):\n    negative_numbers = []\n    for num in nums:\n        if num < 0:\n            negative_numbers.append(num)\n    return negative_numbers\n\n\nnums = [-1, -2, 1, 2, -3]\nprint(negative_numbers(nums))",
    "def negative_numbers(nums):\n    negative_nums = []\n    for num in nums:\n        if num < 0:\n            negative_nums.append(num)\n    return negative_nums\n\n\nif __name__ == \"__main__\":\n    nums = [1, -2, -3, 4, -5, 6, 7, -8, -9]\n    print(negative_numbers(nums))",
    "def print_negative_numbers(input_list):\n    for i in input_list:\n        if i < 0:\n            print(i)\n\ndef main():\n    input_list = [2, 3, -4, -1, 5, -6]\n    print_negative_numbers(input_list)\n\nif __name__ == '__main__':\n    main()",
    "def print_neg(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    lst = [1, 2, 3, -4, 5, -6, -7, 8]\n    print_neg(lst)",
    "def print_negative(lst):\n    for num in lst:\n        if num < 0:\n            print(num)\n\n\nlst = [-1, -2, 0, 5, 6]\nprint_negative(lst)",
    "def negative(a):\n    res = []\n    for i in a:\n        if i < 0:\n            res.append(i)\n    return res\n\n\nif __name__ == '__main__':\n    print(negative([-1, -2, -3, -4, 5, 6]))",
    "def negative_numbers(list1):\n    negative_numbers = []\n    for num in list1:\n        if num < 0:\n            negative_numbers.append(num)\n    return negative_numbers\n\n\nprint(negative_numbers([1, 2, -1, 0, -5]))",
    "def negative(a):\n    for i in a:\n        if i < 0:\n            print(i)\n\na = [-2,-3,4,5,6,7,8]\nnegative(a)",
    "def print_negative_numbers(numbers: list) -> list:\n    \"\"\"\n    >>> print_negative_numbers([1, 2, 3, 4, 5, -7, -9])\n    -7\n    -9\n    \"\"\"\n    for number in numbers:\n        if number < 0:\n            print(number)\n    return numbers\n\n\ndef main():\n    from doctest import testmod\n\n    testmod()\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(lst):\n    return [x for x in lst if x < 0]\n\nnegative_numbers([1,2,3,-4,5,-6,-7,8])",
    "def negative_num(input_list):\n    output_list = []\n    for i in input_list:\n        if i < 0:\n            output_list.append(i)\n    return output_list\n\n\nprint(negative_num([1,2,3,4,-1,5,-6,7,-8,-9]))",
    "def negative_number(my_list):\n    for num in my_list:\n        if num < 0:\n            print(num)\n\n\nnegative_number([-5, -3, -1, 0, 2, 5])\nnegative_number([1, 2, 3, 4, 5, 6])\nnegative_number([-5, -4, -3, -2, -1, 0])\nnegative_number([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6])",
    "def negative_numbers(nums):\n    negative_nums = []\n    for num in nums:\n        if num < 0:\n            negative_nums.append(num)\n    return negative_nums\n\n\ndef main():\n    print(negative_numbers([1, -2, 3, -4, 5, -6, 7, -8]))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_number_printer(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\nnegative_number_printer([1, 2, 3, -5, -4, 7, 10])",
    "def negative_numbers(input_list: list) -> list:\n    \"\"\"Returns all negative numbers in a list.\n\n    Args:\n        input_list (list): input list.\n\n    Examples:\n        >>> negative_numbers([1, 2, 3, 4, -5])\n        [-5]\n        >>> negative_numbers([-1, 2, 3, 4, 5])\n        [-1]\n        >>> negative_numbers([-1, -2, -3, -4, -5])\n        [-1, -2, -3, -4, -5]\n    \"\"\"\n    return [num for num in input_list if num < 0]",
    "def print_negatives(nums):\n    for num in nums:\n        if num < 0:\n            print(num)\n\n\nif __name__ == \"__main__\":\n    print_negatives([1, 2, 3, 4, -5, 6, -7, 8, -9])",
    "def negative_list(list):\n    return [x for x in list if x < 0]\n\ndef main():\n    print(negative_list([2, -1, 3, -2, -1]))\n\nif __name__ == \"__main__\":\n    main()",
    "def print_negative(numbers):\n    for number in numbers:\n        if number < 0:\n            print(number)\n\n\nprint_negative([2, 3, -5, 2, -4, 8, -2])",
    "def print_negative_numbers(numbers):\n    for number in numbers:\n        if number < 0:\n            print(number)\n\n\nif __name__ == '__main__':\n    print_negative_numbers([2, 3, 4, 5, -6, 7, 8, -9, 10, -11, 12, 13, -14, 15])",
    "def negative_numbers(list):\n    for i in range(len(list)):\n        if list[i] < 0:\n            print(list[i], end=' ')\n\nif __name__ == '__main__':\n    list = [2, -7, 8, 9, 3, -1]\n    negative_numbers(list)",
    "def print_negative_number(lst):\n    negative_numbers = []\n    for num in lst:\n        if num < 0:\n            negative_numbers.append(num)\n    print(negative_numbers)\n\n\nprint_negative_number([1, 2, -3, -4, 5])",
    "def negative_numbers(lst: list) -> None:\n    \"\"\"Print negative numbers in a list.\n\n    Args:\n        lst (list): list of numbers\n    \"\"\"\n    for i in lst:\n        if i < 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    negative_numbers([1, 2, -3, 4, -5, 6, -7, 8, -9])",
    "def negative_num(lst: list) -> list:\n    \"\"\"\n    This function takes a list as argument and prints negative numbers in the list.\n    >>> lst = [1, -2, 3, 4, 5]\n    >>> negative_num(lst)\n    [-2]\n    >>> lst = [1, 2, 3, 4, 5]\n    >>> negative_num(lst)\n    []\n    \"\"\"\n    return [num for num in lst if num < 0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def printNegative(arr):\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            print(arr[i], end = \" \")\n\narr = [1, -2, -5, 12, 0, -1]\nprint(\"The negative numbers in the array are :\")\nprintNegative(arr)",
    "def negative_numbers(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\n\ndef main():\n    list = [-1, -2, 0, 3, 4, 5]\n    negative_numbers(list)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def negative_numbers(list):\n    for i in list:\n        if i < 0:\n            print(i)\n\nnegative_numbers([-1, 0, 1, -10])",
    "def negative_num(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\n\ndef main():\n    lst = [-4, -1, 2, -5, 0, 7]\n    negative_num(lst)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def print_negatives(list):\n    for num in list:\n        if num < 0:\n            print(num)\n\nlist = [2, 3, 4, -6, 8, -10, -15]\nprint_negatives(list)",
    "def negative_num(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\nnegative_num([2, 3, 4, -7, 8, -9])",
    "def negative_list(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\n\nlst = [1, -2, 3, -4, 5]\nnegative_list(lst)",
    "def negative_numbers(my_list):\n    negative_numbers = []\n    for i in my_list:\n        if i < 0:\n            negative_numbers.append(i)\n    print(negative_numbers)\n\n\nnegative_numbers([1, 2, -3, 4, 5, -6, 7, -8, 9, -10])",
    "def negative_numbers(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\n\nnegative_numbers([2, 3, 4, 5, -6, -7])",
    "def negative_numbers(nums):\n    neg_nums = []\n    for num in nums:\n        if num < 0:\n            neg_nums.append(num)\n    return neg_nums\n\nprint(negative_numbers([1, 2, -1, 3, -5, 4, 5]))",
    "def negative_numbers(a: list) -> list:\n    \"\"\"\n    >>> negative_numbers([1, 2, -3, 4, -5, 6, -7, 8, -9, -10])\n    [-3, -5, -7, -9, -10]\n    \"\"\"\n    return [i for i in a if i < 0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def print_negative_numbers(nums):\n    for num in nums:\n        if num < 0:\n            print(num)\n\nprint_negative_numbers([1,2,3,-1])",
    "def negative_nums(nums: list) -> list:\n    \"\"\"\n    >>> negative_nums([1, -2, 3, 4, 5])\n    [-2]\n    >>> negative_nums([1, 2, 3, 4, 5])\n    []\n    >>> negative_nums([-1, -2, -3, -4, -5])\n    [-1, -2, -3, -4, -5]\n    \"\"\"\n    return [num for num in nums if num < 0]\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def negative_num(nums):\n    negatives = []\n    for num in nums:\n        if num < 0:\n            negatives.append(num)\n    return negatives",
    "def negative_numbers(lst):\n    for i in lst:\n        if i < 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    lst = [1, -2, 3, -4, 5, -6]\n    negative_numbers(lst)",
    "def print_negative_numbers(list_of_numbers):\n    for i in list_of_numbers:\n        if i < 0:\n            print(i)\n\n\nif __name__ == \"__main__\":\n    print_negative_numbers([1,2,3,-5,-3,5,6,-7])"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}