{
  "problem": {
    "task_id": "MBPP/131",
    "prompt": "Write a python function to reverse only the vowels of a given string.",
    "canonical_solution": "def reverse_vowels(str1):\r\n\tvowels = \"\"\r\n\tfor char in str1:\r\n\t\tif char in \"aeiouAEIOU\":\r\n\t\t\tvowels += char\r\n\tresult_string = \"\"\r\n\tfor char in str1:\r\n\t\tif char in \"aeiouAEIOU\":\r\n\t\t\tresult_string += vowels[-1]\r\n\t\t\tvowels = vowels[:-1]\r\n\t\telse:\r\n\t\t\tresult_string += char\r\n\treturn result_string",
    "test_list": [
      "assert reverse_vowels(\"Python\") == \"Python\"",
      "assert reverse_vowels(\"USA\") == \"ASU\"",
      "assert reverse_vowels(\"ab\") == \"ab\""
    ],
    "challenge_test_list": [],
    "problem_id": 120
  },
  "model_name": "codellama-7b",
  "dataset": "mbpp",
  "num_candidates": 100,
  "candidates": [
    "def reverse_vowels(s):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    s = list(s)\n    i, j = 0, len(s) - 1\n    while i < j:\n        while i < j and s[i] not in vowels:\n            i += 1\n        while i < j and s[j] not in vowels:\n            j -= 1\n        s[i], s[j] = s[j], s[i]\n        i += 1\n        j -= 1\n    return ''.join(s)\n\ndef reverse_vowels_using_regex(s):\n    vowels = '[aeiouAEIOU]'\n    non_vowels = '[^aeiouAEIOU]'\n    return re.sub(vowels, lambda x: re.sub(non_vowels, lambda y: x.group(), vowels), s)\n\nprint(reverse_vowels(\"hello\"))\nprint(reverse_vowels_using_regex(\"hello\"))\nprint(reverse_vowels(\"How are you?\"))\nprint(reverse_vowels_using_regex(\"How are you?\"))",
    "def reverseVowels(s):\n    vowels = \"aeiouAEIOU\"\n    vowel_index = []\n    rev_string = \"\"\n\n    for i in range(len(s)):\n        if s[i] in vowels:\n            vowel_index.append(i)\n\n    for i in range(len(s)):\n        if i in vowel_index:\n            rev_string += s[vowel_index[len(vowel_index) - i - 1]]\n        else:\n            rev_string += s[i]\n\n    return rev_string\n\n\ns = \"hello\"\nprint(\"Original String: \", s)\nprint(\"Reverse Vowels: \", reverseVowels(s))\n\ns = \"hello world\"\nprint(\"Original String: \", s)\nprint(\"Reverse Vowels: \", reverseVowels(s))\n\ns = \"Aeiou\"\nprint(\"Original String: \", s)\nprint(\"Reverse Vowels: \", reverseVowels(s))\n\ns = \"aeiou\"\nprint(\"Original String: \", s)\nprint(\"Reverse Vowels: \", reverseVowels(s))\n\ns = \"AEIOU\"\nprint(\"Original String: \", s)\nprint(\"Reverse Vowels: \", reverseVowels(s))\n\ns = \"aeiouAEIOU\"\nprint(\"Original String: \", s)\nprint(\"Reverse Vowels: \", reverseVowels(s))",
    "def reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    l = list(s)\n    i, j = 0, len(l) - 1\n\n    while i < j:\n        while i < j and l[i] not in vowels:\n            i += 1\n        while i < j and l[j] not in vowels:\n            j -= 1\n        l[i], l[j] = l[j], l[i]\n        i += 1\n        j -= 1\n    return ''.join(l)\n\n\ndef main():\n    print(reverse_vowels(\"Hello\"))\n    print(reverse_vowels(\"Python\"))\n\n\nif __name__ == '__main__':\n    main()",
    "def reverse_vowels(s):\n    s = list(s)\n    vowels = []\n    for i in range(len(s)):\n        if s[i] in 'aeiouAEIOU':\n            vowels.append(s[i])\n    for i in range(len(vowels)):\n        s[i] = vowels[-(i+1)]\n    return ''.join(s)\n\n\ndef main():\n    s = input(\"Enter a string:\")\n    print(reverse_vowels(s))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(input_str):\n    vowels = \"aeiou\"\n    vowel_list = []\n    for char in input_str:\n        if char in vowels:\n            vowel_list.append(char)\n    vowel_list.reverse()\n    result = \"\"\n    for char in input_str:\n        if char in vowels:\n            result += vowel_list.pop()\n        else:\n            result += char\n    return result\n\n\ndef main():\n    input_str = \"Hello\"\n    final_str = reverse_vowels(input_str)\n    print(final_str)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(input_string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    rev_string = \"\"\n    for i in input_string:\n        if i in vowels:\n            rev_string += i\n    for i in input_string:\n        if i not in vowels:\n            rev_string += i\n    return rev_string\n\n\ndef main():\n    print(reverse_vowels('hello'))\n    print(reverse_vowels('aeye'))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(input_str):\n    #your code goes here\n    vowels = \"aeiouAEIOU\"\n    vowel_list = []\n    non_vowel_list = []\n    for char in input_str:\n        if char in vowels:\n            vowel_list.append(char)\n        else:\n            non_vowel_list.append(char)\n    vowel_list.reverse()\n    result = \"\"\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            result += vowel_list[0]\n            vowel_list.pop(0)\n        else:\n            result += non_vowel_list[0]\n            non_vowel_list.pop(0)\n    return result\n\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('world'))\nprint(reverse_vowels('abcedf'))\nprint(reverse_vowels('python'))\nprint(reverse_vowels('gamedev'))\nprint(reverse_vowels('12345'))\nprint(reverse_vowels('12345abcde'))\nprint(reverse_vowels(''))",
    "def reverse_vowels(str1):\n    vowels = \"aeiouAEIOU\"\n    str_list = list(str1)\n    i = 0\n    j = len(str_list) - 1\n\n    while i < j:\n        if str_list[i] in vowels:\n            while str_list[j] not in vowels:\n                j -= 1\n                if j < i:\n                    break\n            str_list[i], str_list[j] = str_list[j], str_list[i]\n            i += 1\n            j -= 1\n        i += 1\n\n    return \"\".join(str_list)\n\n\ndef main():\n    str1 = \"Hello World\"\n    print(reverse_vowels(str1))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(str1):\n    vowels = \"\"\n    for i in str1:\n        if i in \"aeiouAEIOU\":\n            vowels += i\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = \"\".join(vowels)\n    res = \"\"\n    for i in str1:\n        if i in \"aeiouAEIOU\":\n            res += vowels[0]\n            vowels = vowels[1:]\n        else:\n            res += i\n    return res\n\nprint(reverse_vowels(\"abcdef\"))",
    "def reverse_vowels(string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    result = \"\"\n\n    for char in string:\n        if char in vowels:\n            result = result + char\n\n    for char in string:\n        if char not in vowels:\n            result = result + char\n\n    return result\n\n\nprint(reverse_vowels(\"hello\"))\nprint(reverse_vowels(\"leetcode\"))\nprint(reverse_vowels(\"geeksforgeeks\"))",
    "def reverse_vowels(str1):\n    vowels = 'aeiouAEIOU'\n    i = 0\n    j = len(str1) - 1\n\n    while i < j:\n        while i < len(str1) and str1[i] not in vowels:\n            i += 1\n        while j >= 0 and str1[j] not in vowels:\n            j -= 1\n        if i < j:\n            str1 = str1[:i] + str1[j] + str1[i+1:j] + str1[i] + str1[j+1:]\n            i += 1\n            j -= 1\n    return str1\n\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('HOW ARE YOU'))\nprint(reverse_vowels('hiii'))",
    "def reverse_vowels(string):\n    vowels = \"aeiouAEIOU\"\n    i, j = 0, len(string) - 1\n    v_list = []\n    while i < j:\n        if string[i] in vowels:\n            v_list.append(string[i])\n            i += 1\n        if string[j] in vowels:\n            v_list.append(string[j])\n            j -= 1\n        if string[i] not in vowels and string[j] not in vowels:\n            i += 1\n            j -= 1\n\n    return \"\".join(v_list) + string[i:j+1]\n\n\ndef main():\n    string = \"hello\"\n    print(reverse_vowels(string))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(str1):\n    vowels = \"aeiouAEIOU\"\n    vowel_list = []\n    non_vowel_list = []\n    for i in str1:\n        if i in vowels:\n            vowel_list.append(i)\n        else:\n            non_vowel_list.append(i)\n    vowel_list.reverse()\n    new_str = \"\"\n    for i in non_vowel_list:\n        new_str += i\n    for i in vowel_list:\n        new_str += i\n    return new_str\n\n\nprint(reverse_vowels(\"Hello World\"))",
    "def reverse_vowels(input_str: str) -> str:\n    \"\"\"\n    >>> reverse_vowels(\"hello\")\n    'holle'\n    >>> reverse_vowels(\"Aaiy\")\n    'Ayia'\n    >>> reverse_vowels(\"\")\n    ''\n    >>> reverse_vowels(\" \" * 10)\n    '                    '\n    >>> reverse_vowels(\"the\")\n    'the'\n    >>> reverse_vowels(\"The\")\n    'The'\n    >>> reverse_vowels(\"the-\")\n    'the-'\n    \"\"\"\n    vowels: str = \"aeiouAEIOU\"\n    i: int = 0\n    j: int = len(input_str) - 1\n\n    while i < j:\n        if input_str[i] not in vowels:\n            i += 1\n        elif input_str[j] not in vowels:\n            j -= 1\n        else:\n            input_str = (\n                input_str[:i]\n                + input_str[j]\n                + input_str[i + 1 : j]\n                + input_str[i]\n                + input_str[j + 1 :]\n            )\n            i += 1\n            j -= 1\n    return input_str\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
    "def reverse_vowels(input_str):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    rev_str = \"\"\n    for ch in input_str:\n        if ch in vowels:\n            rev_str = rev_str + vowels.pop()\n        else:\n            rev_str = rev_str + ch\n    return rev_str\n\n\nprint(reverse_vowels(\"Hello\"))\nprint(reverse_vowels(\"Bye\"))\nprint(reverse_vowels(\"The\"))\nprint(reverse_vowels(\"Python\"))",
    "def reverse_vowels(string):\n    vowels = set(\"aeiouAEIOU\")\n    if len(string) == 0:\n        return string\n    i, j = 0, len(string)-1\n    while i < j:\n        if string[i] not in vowels:\n            i += 1\n        elif string[j] not in vowels:\n            j -= 1\n        else:\n            string = string[:i] + string[j] + string[i+1:j] + string[i] + string[j+1:]\n            i += 1\n            j -= 1\n    return string\n\n\ndef main():\n    string = \"hello\"\n    print(reverse_vowels(string))\n\n\nif __name__ == \"__main__\":\n    main()",
    "\"\"\"Question 18\nLevel 3\nQuestion:\nWrite a python function to reverse only the vowels of a given string.\nExample:\ninput_string = 'hello'\noutput_string = 'holle'\n\"\"\"\ndef reverse_vowels(input_string):\n    vowels = ['a','e','i','o','u']\n    vowels_list = []\n    res = \"\"\n    for i in input_string:\n        if i in vowels:\n            vowels_list.append(i)\n    vowels_list.reverse()\n    for i in input_string:\n        if i in vowels:\n            res += vowels_list[0]\n            vowels_list.pop(0)\n        else:\n            res += i\n    return res\n\nprint reverse_vowels(\"hello\")",
    "def reverse_vowels(string):\n    vowels = \"AEIOUaeiou\"\n    string_list = list(string)\n    start, end = 0, len(string_list) - 1\n    while start < end:\n        while start < end and string_list[start] not in vowels:\n            start += 1\n        while start < end and string_list[end] not in vowels:\n            end -= 1\n        string_list[start], string_list[end] = string_list[end], string_list[start]\n        start += 1\n        end -= 1\n    return \"\".join(string_list)\n\n\nif __name__ == \"__main__\":\n    string = input(\"Enter a string: \")\n    print(f\"Reverse of vowels in {string} is {reverse_vowels(string)}\")",
    "def reverse_vowels(string):\n    vowels = \"aeiouAEIOU\"\n    vowels_in_string = [char for char in string if char in vowels]\n    vowels_in_string.reverse()\n    vowels_in_string = \"\".join(vowels_in_string)\n    return string.replace(vowels, vowels_in_string)\n\n\nprint(reverse_vowels(\"Hello\"))\nprint(reverse_vowels(\"Bye\"))",
    "def reverse_vowels(string):\n    vowels = \"aeiouAEIOU\"\n    vowel_list = []\n    for char in string:\n        if char in vowels:\n            vowel_list.append(char)\n    vowels = vowel_list[::-1]\n    for i in range(len(string)):\n        if string[i] in vowels:\n            string = string[:i] + vowels[0] + string[i+1:]\n            vowels = vowels[1:]\n    return string\n\n\nstring = input(\"Enter a string: \")\nprint(\"String after reversing vowels:\", reverse_vowels(string))",
    "def reverse_vowels(string):\n    vowels = \"aeiouAEIOU\"\n    string_list = list(string)\n    i, j = 0, len(string_list) - 1\n    while i < j:\n        while i < j and string_list[i] not in vowels:\n            i += 1\n        while i < j and string_list[j] not in vowels:\n            j -= 1\n        if i < j:\n            string_list[i], string_list[j] = string_list[j], string_list[i]\n            i += 1\n            j -= 1\n    return \"\".join(string_list)\n\n\nif __name__ == \"__main__\":\n    string = \"Hello World\"\n    print(reverse_vowels(string))",
    "def reverse_vowels(string: str) -> str:\n    \"\"\"\n    >>> reverse_vowels(\"hello\")\n    'holle'\n    >>> reverse_vowels(\"aeyo\")\n    'yeao'\n    >>> reverse_vowels(\"aeiou\")\n    'uoiea'\n    >>> reverse_vowels(\"aeiouu\")\n    'uoieau'\n    >>> reverse_vowels(\"aeioua\")\n    'uaieoa'\n    \"\"\"\n    vowels: list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_list: list = []\n    vowels_to_replace: list = []\n\n    for i in string:\n        if i in vowels:\n            vowels_list.append(i)\n\n    for i in string:\n        if i in vowels:\n            vowels_to_replace.append(vowels_list.pop())\n        else:\n            vowels_to_replace.append(i)\n\n    return \"\".join(vowels_to_replace)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
    "def reverse_vowels(string):\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    string_list = list(string)\n    first_index = 0\n    last_index = len(string_list) - 1\n\n    while first_index < last_index:\n        if string_list[first_index] in vowels:\n            while string_list[last_index] not in vowels:\n                last_index -= 1\n                if first_index == last_index:\n                    break\n            if first_index == last_index:\n                break\n            string_list[first_index], string_list[last_index] = string_list[last_index], string_list[first_index]\n            first_index += 1\n            last_index -= 1\n        else:\n            first_index += 1\n\n    return \"\".join(string_list)\n\nprint(reverse_vowels(\"Hello World!\"))\nprint(reverse_vowels(\"Python\"))\nprint(reverse_vowels(\"Aaiye\"))\nprint(reverse_vowels(\"Pear\"))\nprint(reverse_vowels(\"The\"))",
    "def reverse_vowels(input_str):\n    vowels = set(['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'])\n    output = list()\n    for char in input_str:\n        if char in vowels:\n            output.append(char)\n    for char in reversed(input_str):\n        if char in vowels:\n            output.append(char)\n    return ''.join(output)\n\ndef test_reverse_vowels():\n    input_str = \"Hello World!\"\n    expected_output = \"Hollo World!\"\n    assert reverse_vowels(input_str) == expected_output\n\ndef test_reverse_vowels_2():\n    input_str = \"Python\"\n    expected_output = \"nohtyP\"\n    assert reverse_vowels(input_str) == expected_output\n\ndef test_reverse_vowels_3():\n    input_str = \"Python is awesome\"\n    expected_output = \"nohtyP is awesoe\"\n    assert reverse_vowels(input_str) == expected_output\n\ndef test_reverse_vowels_4():\n    input_str = \"Python is very very very very very very very very very very very very very very very long\"\n    expected_output = \"nohtyP is very very very very very very very very very very very very very very very long\"\n    assert reverse_vowels(input_str) == expected_output",
    "def reverse_vowels(string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_rev = []\n    for char in string:\n        if char in vowels:\n            vowels_rev.append(char)\n\n    vowels_rev.reverse()\n    vowels_rev_str = \"\".join(vowels_rev)\n\n    final_str = \"\"\n    for char in string:\n        if char in vowels:\n            final_str += vowels_rev_str[-1]\n            vowels_rev_str = vowels_rev_str[:-1]\n        else:\n            final_str += char\n\n    return final_str\n\n\nprint(reverse_vowels(\"Hello\"))\nprint(reverse_vowels(\"Bye\"))\nprint(reverse_vowels(\"Python\"))\nprint(reverse_vowels(\"Guru\"))",
    "def reverse_vowels(s):\n    vowels = \"aeiou\"\n    vowel_list = []\n    for i in range(len(s)):\n        if s[i] in vowels:\n            vowel_list.append(s[i])\n    print(vowel_list)\n    rev_vowels = vowel_list[::-1]\n    print(rev_vowels)\n    for i in range(len(s)):\n        if s[i] in vowels:\n            s = s[:i] + rev_vowels[0] + s[i+1:]\n            rev_vowels.pop(0)\n    return s\n\n\nif __name__ == \"__main__\":\n    inp = input(\"Enter a string: \\n\")\n    print(\"Reverse vowels: \", reverse_vowels(inp))",
    "def reverse_vowels(string):\n    vowels = ['a','e','i','o','u']\n    vowels_list = []\n    for i in string:\n        if i in vowels:\n            vowels_list.append(i)\n    reverse_vowels_list = vowels_list[::-1]\n    for i in range(len(string)):\n        if string[i] in vowels:\n            string = string[:i] + reverse_vowels_list[0] + string[i+1:]\n            reverse_vowels_list = reverse_vowels_list[1:]\n    return string\n\nprint(reverse_vowels(\"hello\"))\nprint(reverse_vowels(\"Python\"))\nprint(reverse_vowels(\"Aaj\"))\nprint(reverse_vowels(\"Bhaj\"))",
    "def reverse_vowels(string: str) -> str:\n    \"\"\"\n    >>> reverse_vowels(\"hello\")\n    'holle'\n    \"\"\"\n    vowels = list(\"aeiouAEIOU\")\n    string = list(string)\n    i, j = 0, len(string) - 1\n    while i < j:\n        if string[i] not in vowels:\n            i += 1\n        elif string[j] not in vowels:\n            j -= 1\n        else:\n            string[i], string[j] = string[j], string[i]\n            i += 1\n            j -= 1\n    return \"\".join(string)\n\n\nif __name__ == \"__main__\":\n    from doctest import testmod\n\n    testmod()",
    "\"\"\"Question:\nWrite a python function to reverse only the vowels of a given string.\nHints:\nUse list comprehension to create a list of vowels.\nUse string concatenation to create the new string.\n\n\"\"\"\ndef reverse_vowels(str1):\n\tvowels = \"aeiouAEIOU\"\n\trev_str = [v for v in str1 if v not in vowels]\n\trev_vowels = [v for v in str1 if v in vowels]\n\trev_vowels.reverse()\n\tprint rev_str + rev_vowels\n\treturn ''.join(rev_str + rev_vowels)\n\n\nprint reverse_vowels('hello')\nprint reverse_vowels('Python')\nprint reverse_vowels('Aaj')",
    "def reverse_vowels(str1):\n    vowels = \"aeiouAEIOU\"\n    vowels_list = []\n    rev_vowels_list = []\n    for char in str1:\n        if char in vowels:\n            vowels_list.append(char)\n    for i in range(len(vowels_list)-1, -1, -1):\n        rev_vowels_list.append(vowels_list[i])\n    str1 = list(str1)\n    for i in range(len(str1)):\n        if str1[i] in vowels:\n            str1[i] = rev_vowels_list[0]\n            rev_vowels_list.pop(0)\n    str1 = ''.join(str1)\n    return str1\n\n\nstr1 = \"hello\"\nprint(\"Original string: \" + str1)\nprint(\"Reverse vowels: \" + reverse_vowels(str1))\n\nstr1 = \"world\"\nprint(\"\\nOriginal string: \" + str1)\nprint(\"Reverse vowels: \" + reverse_vowels(str1))\n\nstr1 = \"python\"\nprint(\"\\nOriginal string: \" + str1)\nprint(\"Reverse vowels: \" + reverse_vowels(str1))",
    "def reverse_vowels(input_str: str) -> str:\n    vowels = \"AEIOUaeiou\"\n    vowel_list = []\n\n    for char in input_str:\n        if char in vowels:\n            vowel_list.append(char)\n\n    vowel_list.reverse()\n    output_str = \"\"\n    for char in input_str:\n        if char in vowels:\n            output_str += vowel_list.pop()\n        else:\n            output_str += char\n    return output_str\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels(\"hello\"))",
    "def reverse_vowels(input_string):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    input_list = [x for x in input_string]\n    output_list = []\n    for i in range(len(input_list)):\n        if input_list[i] in vowels:\n            output_list.append(input_list[i])\n    for i in range(len(input_list)):\n        if input_list[i] not in vowels:\n            output_list.append(input_list[i])\n    output = ''.join(output_list)\n    return output\n\n\nprint(reverse_vowels(\"Hello World\"))\nprint(reverse_vowels(\"Python\"))\nprint(reverse_vowels(\"String\"))",
    "def reverse_vowels(str_in: str) -> str:\n    \"\"\"\n    >>> reverse_vowels(\"hello\")\n    'holle'\n    >>> reverse_vowels(\"Aaaahhh\")\n    'Aahhaaa'\n    >>> reverse_vowels(\"Python\")\n    'Pythno'\n    >>> reverse_vowels(\"Python\")\n    'Pythno'\n    \"\"\"\n    vowels = (\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n    vowels_list = []\n    non_vowels_list = []\n    for char in str_in:\n        if char in vowels:\n            vowels_list.append(char)\n        else:\n            non_vowels_list.append(char)\n\n    vowels_list.reverse()\n    return \"\".join(non_vowels_list + vowels_list)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def reverse_vowels(input_string):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    output = \"\"\n    for char in input_string:\n        if char in vowels:\n            output = output + char\n    for char in input_string:\n        if char not in vowels:\n            output = output + char\n    return output\n\n\ndef main():\n    print(reverse_vowels('Hacker'))\n    print(reverse_vowels('Programmers'))\n    print(reverse_vowels('hacker'))\n    print(reverse_vowels('programmers'))\n\n\nif __name__ == '__main__':\n    main()",
    "def reverse_vowels(string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowel_list = []\n    for char in string:\n        if char in vowels:\n            vowel_list.append(char)\n\n    vowel_string = \"\".join(vowel_list)\n    vowel_string_list = [char for char in vowel_string]\n    vowel_string_list.reverse()\n    vowel_string = \"\".join(vowel_string_list)\n    return string.replace(vowel_string, \"\") + vowel_string\n\n\nstring = \"Hello World\"\nprint(reverse_vowels(string))",
    "def reverse_vowels(s):\n    vowels = set('aeiouAEIOU')\n    vowels_in_str = set(s) & vowels\n    return ''.join(c for c in reversed(s) if c not in vowels) + ''.join(c for c in s if c in vowels_in_str)\n\n\nif __name__ == '__main__':\n    string = 'hello'\n    print(reverse_vowels(string))",
    "def reverse_vowels(input_str):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    new_str = ''\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            new_str += input_str[len(input_str) - i - 1]\n        else:\n            new_str += input_str[i]\n    return new_str\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('Aeios'))",
    "def reverseVowels(string):\n    \"\"\"\n    :param string: input string to reverse vowels\n    :return: reversed vowels of the input string\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = []\n    vowels_rev_list = []\n\n    # get vowels from the input string\n    for i in string:\n        if i in vowels:\n            vowels_list.append(i)\n\n    # reverse the vowels\n    for i in vowels_list[::-1]:\n        vowels_rev_list.append(i)\n\n    # replace the vowels in the input string with the reversed vowels\n    for i in range(len(vowels_list)):\n        string = string.replace(vowels_list[i], vowels_rev_list[i], 1)\n\n    return string\n\nprint(reverseVowels(\"leetcode\"))",
    "def reverseVowels(s):\n    vowels = \"aeiouAEIOU\"\n    i, j = 0, len(s)-1\n    s = list(s)\n    while i < j:\n        if s[i] not in vowels:\n            i += 1\n        elif s[j] not in vowels:\n            j -= 1\n        else:\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n    return \"\".join(s)\n\n\ns = \"hello\"\nprint(reverseVowels(s))",
    "def reverse_vowels(str):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = list(filter(lambda x: x in vowels, str))\n    vowels_list.reverse()\n    for i in range(len(vowels_list)):\n        str = str.replace(vowels_list[i], '', 1)\n        str = str[:i] + vowels_list[i] + str[i:]\n    return str\n\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('Hi'))\nprint(reverse_vowels('aiohn'))",
    "def reverse_vowels(str1):\n    vowels = set('aeiouAEIOU')\n    return ''.join(x if x not in vowels else y for x, y in zip(str1, str1[::-1]))\n\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('hello world'))",
    "def reverse_vowels(text: str) -> str:\n    \"\"\"Return the string with vowels in reverse order.\n\n    Args:\n        text (str): The text to reverse vowels.\n\n    Returns:\n        str: The text with vowels in reverse order.\n    \"\"\"\n    vowels = list(filter(lambda char: char in 'aeiou', text))\n    vowels.reverse()\n    for vowel in vowels:\n        text = text.replace(vowel, '', 1)\n\n    for index, vowel in enumerate(vowels):\n        text = text[:index] + vowel + text[index:]\n\n    return text",
    "def reverse_vowels(s):\n    vowels = \"AEIOUaeiou\"\n    vowels_list = []\n    for char in s:\n        if char in vowels:\n            vowels_list.append(char)\n    vowels_list.reverse()\n    result = \"\"\n    for char in s:\n        if char in vowels:\n            result += vowels_list[0]\n            vowels_list.pop(0)\n        else:\n            result += char\n    return result\n\n\nprint(reverse_vowels(\"Hello World\"))",
    "def reverse_vowels(str1):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = []\n    for ch in str1:\n        if ch.lower() in vowels:\n            vowels_list.append(ch)\n    vowels_list.reverse()\n    for i in range(len(str1)):\n        if str1[i].lower() in vowels:\n            str1 = str1[:i] + vowels_list[0] + str1[i+1:]\n            vowels_list.pop(0)\n    return str1\n\nif __name__ == \"__main__\":\n    str1 = \"hello\"\n    print(reverse_vowels(str1))",
    "def reverse_vowels(input_string):\n    vowels = \"AEIOUaeiou\"\n    vowels_list = []\n    for char in input_string:\n        if char in vowels:\n            vowels_list.append(char)\n\n    vowels_list.reverse()\n    output_string = \"\"\n    for char in input_string:\n        if char in vowels:\n            output_string += vowels_list[0]\n            vowels_list.pop(0)\n        else:\n            output_string += char\n\n    return output_string\n\n\nprint(reverse_vowels(\"hello\"))\nprint(reverse_vowels(\"aA\"))\nprint(reverse_vowels(\"abAc\"))",
    "def reverse_vowels(string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_rev = []\n\n    for i in range(len(string)):\n        if string[i].lower() in vowels:\n            vowels_rev.append(string[i])\n\n    for i in range(len(vowels_rev)):\n        string = string.replace(vowels_rev[i], '', 1)\n\n    for i in range(len(vowels_rev)):\n        string = string + vowels_rev[i]\n\n    return string\n\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('world'))\nprint(reverse_vowels('Python'))\nprint(reverse_vowels('Hello World'))",
    "def reverse_vowels(string):\n    vowels = 'aeiou'\n    s = [char for char in string]\n    i = 0\n    j = len(s) - 1\n\n    while i < j:\n        if s[i].lower() in vowels and s[j].lower() in vowels:\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n        elif s[i].lower() in vowels:\n            j -= 1\n        elif s[j].lower() in vowels:\n            i += 1\n        else:\n            i += 1\n            j -= 1\n\n    return \"\".join(s)",
    "def reverse_vowels(str):\n    vowels = 'aeiou'\n    vowels_list = []\n    non_vowels_list = []\n    for char in str:\n        if char in vowels:\n            vowels_list.append(char)\n        else:\n            non_vowels_list.append(char)\n    vowels_list.reverse()\n    return ''.join(non_vowels_list + vowels_list)\n\n\ndef main():\n    str = input(\"Enter a string: \")\n    print(reverse_vowels(str))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(str):\n    vowels = []\n    for char in str:\n        if char in \"aeiou\":\n            vowels.append(char)\n\n    vowels.reverse()\n    result = \"\"\n    for char in str:\n        if char in \"aeiou\":\n            result += vowels.pop()\n        else:\n            result += char\n    return result\n\nprint(reverse_vowels(\"Hello World\"))",
    "def reverse_vowels(str1):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    vowels_list = list(filter(lambda x: x in vowels, str1))\n    vowels_list.reverse()\n    vowels_list = ''.join(vowels_list)\n    for i in vowels:\n        str1 = str1.replace(i, \"\")\n    return str1 + vowels_list\n\n\nprint(reverse_vowels('hello'))\nprint(reverse_vowels('aeyo'))\nprint(reverse_vowels('Aeyo'))",
    "def reverse_vowels(str):\n    vowels = list(filter(lambda c: c in 'aeiouAEIOU', list(str)))\n    return str.translate(\n        {ord(c): 'aeiouAEIOU'[(ord(c) - ord('a')) % 5] for c in vowels})\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels('hello'))\n    print(reverse_vowels('Hey yOu'))",
    "def reverse_vowels(input_str):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    vowels_list = []\n    non_vowels_list = []\n\n    for i in input_str:\n        if i in vowels:\n            vowels_list.append(i)\n        else:\n            non_vowels_list.append(i)\n\n    return ''.join(non_vowels_list + vowels_list[::-1])\n\n\nprint(reverse_vowels(\"Hello\"))\nprint(reverse_vowels(\"Python\"))\nprint(reverse_vowels(\"India\"))\nprint(reverse_vowels(\"aBe\"))",
    "def reverseVowels(str1):\n    vowels = 'aeiou'\n    vowels_lst = [i for i in str1 if i in vowels]\n    vowels_lst.reverse()\n    res = ''\n    for i in str1:\n        if i in vowels:\n            res += vowels_lst.pop()\n        else:\n            res += i\n    return res\n\n\nstr1 = 'hello'\nprint(reverseVowels(str1))",
    "def reverse_vowels(str):\n    vowels = []\n    for char in str:\n        if char in 'aeiou':\n            vowels.append(char)\n    str_arr = [char for char in str]\n    for i in range(len(str_arr)):\n        if str_arr[i] in 'aeiou':\n            str_arr[i] = vowels.pop()\n    return ''.join(str_arr)\n\n\nprint(reverse_vowels(\"hello\"))\nprint(reverse_vowels(\"aA\"))\nprint(reverse_vowels(\"Python\"))",
    "def reverse_vowels(string):\n    vowels = \"AEIOUaeiou\"\n    vowel_list = []\n    for c in string:\n        if c in vowels:\n            vowel_list.append(c)\n    temp = \"\"\n    for c in string:\n        if c not in vowels:\n            temp += c\n    temp2 = \"\"\n    for c in vowel_list:\n        temp2 += c\n    return temp + temp2\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    print(\"Reverse vowels:\", reverse_vowels(string))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverseVowels(str):\n    vowels = \"AEIOUaeiou\"\n    strList = list(str)\n    i, j = 0, len(str)-1\n    while i < j:\n        if strList[i] not in vowels:\n            i += 1\n        elif strList[j] not in vowels:\n            j -= 1\n        else:\n            strList[i], strList[j] = strList[j], strList[i]\n            i += 1\n            j -= 1\n    return \"\".join(strList)\n\n\nstr = \"abcdefghijklmnoQpQrstuvwxyz\"\nprint(reverseVowels(str))",
    "def reverse_vowels(string):\n    vowels = list(filter(lambda x: x in \"aeiouAEIOU\", string))\n    reverse_vowels = vowels[::-1]\n    for i in range(len(string)):\n        if string[i] in \"aeiouAEIOU\":\n            string = string[:i] + reverse_vowels[0] + string[i + 1 :]\n            reverse_vowels = reverse_vowels[1:]\n    return string\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels(\"hello\"))",
    "def reverse_vowels(s):\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    i, j = 0, len(s) - 1\n    s = list(s)\n    while i < j:\n        if s[i] not in vowels:\n            i += 1\n        if s[j] not in vowels:\n            j -= 1\n        if s[i] in vowels and s[j] in vowels:\n            s[i], s[j] = s[j], s[i]\n            i += 1\n            j -= 1\n    return ''.join(s)\n\n\nprint(reverse_vowels('Hello World'))\nprint(reverse_vowels('Python'))\nprint(reverse_vowels('India'))",
    "def reverse_vowels(str):\n    vowels = \"aeiouAEIOU\"\n    l = []\n    for i in str:\n        if i in vowels:\n            l.append(i)\n    s = \"\"\n    l.reverse()\n    for i in str:\n        if i in vowels:\n            s += l[0]\n            l.pop(0)\n        else:\n            s += i\n    return s\n\n\nstr = \"Hello World\"\nprint(\"Original String: \", str)\nprint(\"Reversed Vowels: \", reverse_vowels(str))",
    "def reverse_vowels(string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = []\n    non_vowels_list = []\n    for char in string:\n        if char in vowels:\n            vowels_list.append(char)\n        else:\n            non_vowels_list.append(char)\n    return ''.join(non_vowels_list[::-1] + vowels_list[::-1])\n\n\nif __name__ == '__main__':\n    string = 'hello'\n    print(reverse_vowels(string))",
    "def reverse_vowels(str):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    str = list(str)\n    first = 0\n    last = len(str) - 1\n\n    while first < last:\n        if str[first].lower() not in vowels:\n            first += 1\n        elif str[last].lower() not in vowels:\n            last -= 1\n        else:\n            str[first], str[last] = str[last], str[first]\n            first += 1\n            last -= 1\n\n    return ''.join(str)\n\n\ndef main():\n    str = 'hello world'\n    print(reverse_vowels(str))\n\n\nif __name__ == '__main__':\n    main()",
    "def reverseVowels(inputStr):\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    vowelsReversed = []\n    for i in inputStr:\n        if i in vowels:\n            vowelsReversed.append(i)\n    vowelsReversed.reverse()\n    for i in range(len(inputStr)):\n        if inputStr[i] in vowels:\n            inputStr = inputStr[:i] + vowelsReversed[0] + inputStr[i + 1:]\n            vowelsReversed.pop(0)\n    return inputStr\n\ninputStr = input()\nprint(reverseVowels(inputStr))",
    "def reverse_vowels(s):\n    vowels = \"aeiou\"\n    rev_s = \"\"\n    for char in s:\n        if char in vowels:\n            rev_s = char + rev_s\n        else:\n            rev_s += char\n    return rev_s",
    "def reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    vowels_list = [i for i in s if i in vowels]\n    s_list = [i for i in s if i not in vowels]\n    vowels_list.reverse()\n    s_list.extend(vowels_list)\n    return ''.join(s_list)\n\nif __name__ == \"__main__\":\n    s = \"Hello World\"\n    print(reverse_vowels(s))",
    "def reverse_vowels(string):\n    vowels = list(filter(lambda x: x in \"aeiou\", string))\n    vowels.reverse()\n    for i in range(len(vowels)):\n        string = string.replace(string[i], vowels[i])\n    return string\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels(\"Hello World\"))",
    "def reverse_vowels(s):\n    vowels = \"aeiou\"\n    if not s:\n        return s\n    vowel_list = [char for char in s if char.lower() in vowels]\n    reverse_vowel_list = vowel_list[::-1]\n    for i, vowel in enumerate(s):\n        if vowel.lower() in vowels:\n            s = s[:i] + reverse_vowel_list[0] + s[i+1:]\n            reverse_vowel_list = reverse_vowel_list[1:]\n    return s\n\n\nif __name__ == \"__main__\":\n    input_string = input(\"Enter a string: \")\n    print(reverse_vowels(input_string))",
    "def reverse_vowels(str1):\n    vowels = 'aeiou'\n    vowel_list = []\n\n    for char in str1:\n        if char in vowels:\n            vowel_list.append(char)\n\n    str1 = list(str1)\n\n    for index, char in enumerate(str1):\n        if char in vowels:\n            str1[index] = vowel_list.pop()\n\n    return ''.join(str1)\n\n\nif __name__ == '__main__':\n    string = 'hello'\n\n    print(reverse_vowels(string))",
    "def reverse_vowels(s):\n    vowels = 'aeiou'\n    vowel_list = [i for i in s if i in vowels]\n    vowel_list.reverse()\n    result = ''\n    for i in s:\n        if i in vowels:\n            result += vowel_list[0]\n            vowel_list.pop(0)\n        else:\n            result += i\n    return result\n\nprint(reverse_vowels(\"hello\"))\nprint(reverse_vowels(\"aeye\"))\nprint(reverse_vowels(\"ea\"))",
    "def reverse_vowels(str1):\n    vowels = \"aeiouAEIOU\"\n    rev = \"\"\n    for ch in str1:\n        if ch in vowels:\n            rev = rev + ch\n    for ch in str1:\n        if ch not in vowels:\n            rev = rev + ch\n    return rev\n\n\nif __name__ == \"__main__\":\n    str1 = \"abcdef\"\n    print(\"Original string: \" + str1)\n    print(\"After reversing vowels: \" + reverse_vowels(str1))\n\n    str2 = \"abcdefg\"\n    print(\"Original string: \" + str2)\n    print(\"After reversing vowels: \" + reverse_vowels(str2))\n\n    str3 = \"abcdefgh\"\n    print(\"Original string: \" + str3)\n    print(\"After reversing vowels: \" + reverse_vowels(str3))\n\n    str4 = \"abcdefghi\"\n    print(\"Original string: \" + str4)\n    print(\"After reversing vowels: \" + reverse_vowels(str4))\n\n    str5 = \"abcdefghij\"\n    print(\"Original string: \" + str5)\n    print(\"After reversing vowels: \" + reverse_vowels(str5))\n\n    str6 = \"abcdefghijk\"\n    print(\"Original string: \" + str6)\n    print(\"After reversing vowels: \" + reverse_vowels(str6))\n\n    str7 = \"abcdefghijkl\"\n    print(\"Original string: \" + str7)\n    print(\"After reversing vowels: \" + reverse_vowels(str7))\n\n    str8 = \"abcdefghijklm\"\n    print(\"Original string: \" + str8)\n    print(\"After reversing vowels: \" + reverse_vowels(str8))\n\n    str9 = \"abcdefghijklmn\"\n    print(\"Original string: \" + str9)\n    print(\"After reversing vowels: \" + reverse_vowels(str9))",
    "def reverse_vowels(input_str):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_list = []\n    non_vowels_list = []\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            vowels_list.append(input_str[i])\n        else:\n            non_vowels_list.append(input_str[i])\n    reverse_vowels = vowels_list[::-1]\n    return \"\".join(non_vowels_list) + \"\".join(reverse_vowels)\n\n\nif __name__ == \"__main__\":\n    input_str = input(\"Enter a string: \")\n    print(\"Reverse vowels in the string: \", reverse_vowels(input_str))",
    "def reverse_vowels(text: str) -> str:\n    \"\"\"\n    >>> reverse_vowels(\"Hello\")\n    'Holle'\n    >>> reverse_vowels(\"Bye\")\n    'Ybe'\n    \"\"\"\n    vowels = (\"a\", \"e\", \"i\", \"o\", \"u\")\n    vowel_index = []\n\n    for i, char in enumerate(text):\n        if char.lower() in vowels:\n            vowel_index.append(i)\n\n    vowel_count = len(vowel_index)\n    for i in range(vowel_count // 2):\n        vowel_index[i], vowel_index[vowel_count - i - 1] = vowel_index[vowel_count - i - 1], vowel_index[i]\n\n    new_string = list(text)\n    for i in range(len(vowel_index)):\n        new_string[vowel_index[i]] = text[vowel_index[i]].lower()\n\n    return \"\".join(new_string)\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def reverse_vowels(str1):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_rev = []\n    for i in str1:\n        if i in vowels:\n            vowels_rev.append(i)\n    vowels_rev.reverse()\n    str1_rev = ''\n    for i in str1:\n        if i in vowels:\n            str1_rev += vowels_rev[0]\n            vowels_rev.pop(0)\n        else:\n            str1_rev += i\n    return str1_rev\n\n\nif __name__ == \"__main__\":\n    str1 = 'hello'\n    print(reverse_vowels(str1))",
    "def reverse_vowels(str):\n    vowels = \"AEIOUaeiou\"\n    l = list(str)\n    i, j = 0, len(l) - 1\n\n    while i < j:\n        while i < j and l[i] not in vowels:\n            i += 1\n        while i < j and l[j] not in vowels:\n            j -= 1\n        if i < j:\n            l[i], l[j] = l[j], l[i]\n            i += 1\n            j -= 1\n    return \"\".join(l)\n\n\ndef main():\n    str1 = \"Hello\"\n    str2 = \"Python\"\n    print(\"Reverse vowels of \" + str1 + \" : \" + reverse_vowels(str1))\n    print(\"Reverse vowels of \" + str2 + \" : \" + reverse_vowels(str2))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(input_str):\n    vowels = \"aeiou\"\n    i, j = 0, len(input_str) - 1\n    vowel_list = []\n\n    for letter in input_str:\n        if letter in vowels:\n            vowel_list.append(letter)\n\n    for index in range(len(vowel_list)):\n        input_str = input_str.replace(vowel_list[index], \"\", 1)\n\n    while i < len(vowel_list) and j > 0:\n        input_str = input_str[:i] + vowel_list[i] + input_str[i + 1:]\n        input_str = input_str[:j] + vowel_list[j] + input_str[j + 1:]\n        i += 1\n        j -= 1\n\n    return input_str\n\n\ndef main():\n    input_str = \"hello\"\n    print(\"Input string is \" + input_str)\n    print(\"Reverse vowels of \" + input_str + \" is \" + reverse_vowels(input_str))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(str_input):\n    # Create a list of vowels and loop over the input string\n    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U']\n    vowels_list = []\n    for c in str_input:\n        if c in vowels:\n            vowels_list.append(c)\n    vowels_list.reverse()\n    vowels_output = \"\"\n    for c in str_input:\n        if c in vowels:\n            vowels_output += vowels_list.pop()\n        else:\n            vowels_output += c\n    return vowels_output\n\n\ndef main():\n    str_input = \"Hello\"\n    print(\"Input String is \" + str_input)\n    str_output = reverse_vowels(str_input)\n    print(\"Output String is \" + str_output)\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(string):\n    vowels = set(\"aeiouAEIOU\")\n    return \"\".join(c for c in reversed(string) if c not in vowels)\n\n\nif __name__ == \"__main__\":\n    string = \"Python\"\n    print(reverse_vowels(string))",
    "def reverse_vowels(str1):\n    vowels = \"aeiouAEIOU\"\n    i = 0\n    j = len(str1) - 1\n\n    while i < j:\n        while i < j and str1[i] not in vowels:\n            i += 1\n\n        while i < j and str1[j] not in vowels:\n            j -= 1\n\n        if i < j:\n            str1 = str1[:i] + str1[j] + str1[i + 1:j] + str1[i] + str1[j + 1:]\n            i += 1\n            j -= 1\n\n    return str1",
    "def reverse_vowels(string):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    string = list(string)\n    left, right = 0, len(string) - 1\n    while left < right:\n        while left < right and string[left] not in vowels:\n            left += 1\n        while left < right and string[right] not in vowels:\n            right -= 1\n        if left < right:\n            string[left], string[right] = string[right], string[left]\n            left += 1\n            right -= 1\n    return \"\".join(string)\n\n\ndef main():\n    string = input(\"Enter a string: \")\n    print(reverse_vowels(string))\n\n\nif __name__ == \"__main__\":\n    main()",
    "def reverse_vowels(st):\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    st = list(st)\n    left = 0\n    right = len(st) - 1\n\n    while left < right:\n        if st[left] not in vowels:\n            left += 1\n        elif st[right] not in vowels:\n            right -= 1\n        else:\n            st[left], st[right] = st[right], st[left]\n            left += 1\n            right -= 1\n\n    return \"\".join(st)",
    "def reverse_vowels(str1):\n    vowels = 'aeiouAEIOU'\n    vowels_list = []\n    for i in str1:\n        if i in vowels:\n            vowels_list.append(i)\n    new_str = ''\n    for i in str1:\n        if i in vowels:\n            new_str += vowels_list.pop()\n        else:\n            new_str += i\n    return new_str\n\n\nprint(reverse_vowels(\"Hello, World!\"))",
    "def reverse_vowels(s):\n    vowels = \"aeiou\"\n    vowel_indexes = [i for i, letter in enumerate(s) if letter in vowels]\n    reversed_vowels = s[::-1]\n    reversed_vowels_indexes = [i for i, letter in enumerate(reversed_vowels) if letter in vowels]\n    s = list(s)\n    for i, j in zip(vowel_indexes, reversed_vowels_indexes):\n        s[i] = reversed_vowels[j]\n    return \"\".join(s)\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels(\"hello\"))",
    "def reverse_vowels(str1: str) -> str:\n    \"\"\"\n    Time Complexity: O(n)\n    Space Complexity: O(n)\n    \"\"\"\n    vowels: list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_list: list = list(filter(lambda char: char in vowels, str1))\n    vowels_reversed: list = vowels_list[::-1]\n    str1 = list(str1)\n\n    for index, char in enumerate(str1):\n        if char in vowels:\n            str1[index] = vowels_reversed.pop()\n\n    return \"\".join(str1)\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels(\"Hello, World!\"))",
    "def reverse_vowels(input_string):\n    vowels = set(\"aeiouAEIOU\")\n    vowel_indices = [ (i,c) for i,c in enumerate(input_string) if c in vowels ]\n    for i,c in vowel_indices:\n        input_string = input_string[0:i] + input_string[i+1:]\n        input_string = input_string[:i] + c + input_string[i:]\n    return input_string\n\n\nif __name__ == \"__main__\":\n    input_string = \"Python\"\n    print(reverse_vowels(input_string))\n    input_string = \"python\"\n    print(reverse_vowels(input_string))\n    input_string = \"aabb\"\n    print(reverse_vowels(input_string))\n    input_string = \"aabbccdd\"\n    print(reverse_vowels(input_string))",
    "def reverse_vowels(input_str: str) -> str:\n    \"\"\"\n    Reverse vowels of a given string.\n\n    >>> reverse_vowels(\"Hello World\")\n    'HolWorlde'\n    >>> reverse_vowels(\"Aa\")\n    'Aa'\n    >>> reverse_vowels(\"\")\n    ''\n    >>> reverse_vowels(\"a\")\n    'a'\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n    vowels_list = [i for i in input_str if i in vowels]\n    vowels_list.reverse()\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            input_str = input_str[:i] + vowels_list[0] + input_str[i + 1 :]\n            vowels_list.pop(0)\n    return input_str\n\n\nif __name__ == \"__main__\":\n    import doctest\n\n    doctest.testmod()",
    "def reverse_vowels(input_str):\n    vowels = \"aeiouAEIOU\"\n    vowel_list = []\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            vowel_list.append(input_str[i])\n\n    vowel_list.reverse()\n    result = \"\"\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            result += vowel_list[0]\n            vowel_list.pop(0)\n        else:\n            result += input_str[i]\n\n    return result\n\n\ninput_str = \"hello\"\nprint(\"input: \", input_str)\nprint(\"output:\", reverse_vowels(input_str))",
    "def reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    i, j = 0, len(s)-1\n    s = list(s)\n    while i < j:\n        while i < j and s[i] not in vowels:\n            i += 1\n        while i < j and s[j] not in vowels:\n            j -= 1\n        s[i], s[j] = s[j], s[i]\n        i += 1\n        j -= 1\n    return ''.join(s)\n\n\ndef main():\n    s = \"Hello World\"\n    print(reverse_vowels(s))\n\n\nif __name__ == '__main__':\n    main()",
    "def reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    rev = []\n    for ch in s:\n        if ch in vowels:\n            rev.append(ch)\n\n    rev.reverse()\n    result = ''\n    for i in range(len(s)):\n        if s[i] not in vowels:\n            result += s[i]\n        else:\n            result += rev[0]\n            rev.pop(0)\n    return result\n\n\nif __name__ == \"__main__\":\n    s = \"Hello World\"\n    print(reverse_vowels(s))",
    "def reverse_vowels(str):\n    vowels = \"aeiouAEIOU\"\n    vowels_lst = []\n    non_vowels_lst = []\n\n    for char in str:\n        if char in vowels:\n            vowels_lst.append(char)\n        else:\n            non_vowels_lst.append(char)\n\n    return \"\".join(non_vowels_lst + vowels_lst[::-1])\n\n\nprint(reverse_vowels(\"Hello\"))\nprint(reverse_vowels(\"Bye\"))\nprint(reverse_vowels(\"Python\"))\nprint(reverse_vowels(\"Awesome\"))",
    "def reverseVowels(st):\n    vowels = \"aeiouAEIOU\"\n    st_list = list(st)\n    i, j = 0, len(st) - 1\n\n    while i < j:\n        if st_list[i] not in vowels:\n            i += 1\n        elif st_list[j] not in vowels:\n            j -= 1\n        else:\n            st_list[i], st_list[j] = st_list[j], st_list[i]\n            i += 1\n            j -= 1\n\n    return \"\".join(st_list)\n\nprint(reverseVowels(\"hello\"))",
    "\"\"\"Question 22\nLevel 2\nQuestion:\nWrite a python function to reverse only the vowels of a given string.\nSuppose the following input is supplied to the function:\nstr = \"hello world\"\nThen, the output should be:\n\"hollo dwrol\"\n\nHints:\nIn case of input data being supplied to the question, it should be assumed to be a console input.\nWe use list comprehension when we want to initialize a list with the values from an existing list or iterable. In most cases, when you want to create a new list from an existing list, a for loop is the best way to do it. But if you find yourself copying the same code again and again, list comprehension can simplify your work.\n\n\"\"\"\ndef reverseVowels(str):\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    l = list(str)\n    i = 0\n    j = len(l) - 1\n    while i < j:\n        if l[i].lower() in vowels and l[j].lower() in vowels:\n            l[i], l[j] = l[j], l[i]\n            i += 1\n            j -= 1\n        elif l[i].lower() not in vowels:\n            i += 1\n        else:\n            j -= 1\n    return \"\".join(l)\n\nstr = \"hello world\"\nprint reverseVowels(str)",
    "def reverseVowels(s):\n    vowels = \"aeiouAEIOU\"\n    l = []\n    for c in s:\n        if c in vowels:\n            l.append(c)\n    r = []\n    for c in s:\n        if c in vowels:\n            r.append(l[0])\n            l.pop(0)\n        else:\n            r.append(c)\n    return \"\".join(r)",
    "def reverse_vowels(s):\n    vowels = 'aeiouAEIOU'\n    vowels_list = [c for c in s if c in vowels]\n    s = [c for c in s if c not in vowels]\n    s.extend(vowels_list[::-1])\n    return ''.join(s)\n\nprint(reverse_vowels('hello world'))\nprint(reverse_vowels('Python'))\nprint(reverse_vowels('aeiou'))\nprint(reverse_vowels('a'))\nprint(reverse_vowels(''))\nprint(reverse_vowels('aeiouAEIOU'))\nprint(reverse_vowels('Hello world'))",
    "def reverse_vowels(s):\n    \"\"\"\n    :param s: str - String to reverse the vowels of\n    :return: str - String with vowels reversed\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowels_list = []\n    for letter in s:\n        if letter in vowels:\n            vowels_list.append(letter)\n\n    vowels_list.reverse()\n    new_s = \"\"\n    for letter in s:\n        if letter in vowels:\n            new_s += vowels_list.pop()\n        else:\n            new_s += letter\n    return new_s\n\nprint(reverse_vowels(\"Hello!\"))",
    "def reverseVowels(string):\n    vowels = 'AEIOUaeiou'\n    rev = ''\n\n    for ch in string:\n        if ch in vowels:\n            rev = rev + ch\n    return string.translate(str.maketrans(vowels, rev))\n\nif __name__ == \"__main__\":\n    print(reverseVowels(\"Hello, World\"))\n    print(reverseVowels(\"Python\"))",
    "def reverse_vowels(input_str):\n    vowels = \"aeiou\"\n    vowel_list = []\n    for i in input_str:\n        if i.lower() in vowels:\n            vowel_list.append(i)\n\n    vowel_list.reverse()\n    for i in range(len(input_str)):\n        if input_str[i] in vowels:\n            input_str = input_str[:i] + vowel_list[0] + input_str[i+1:]\n            vowel_list.pop(0)\n    return input_str\n\n\nif __name__ == \"__main__\":\n    input_str = \"Python\"\n    print(reverse_vowels(input_str))",
    "def reverseVowels(s):\n    vowels = list(\"aeiou\")\n    vowels_rev = list(\"aeiou\")[::-1]\n    vowels_rev_dict = dict(zip(vowels, vowels_rev))\n    res = \"\"\n    for c in s:\n        if c in vowels_rev_dict:\n            res += vowels_rev_dict[c]\n        else:\n            res += c\n    return res\n\n\nprint(reverseVowels(\"hello\"))",
    "def reverse_vowels(str1):\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\"]\n    result = \"\"\n    for i in str1:\n        if i in vowels:\n            result = result + i\n    for i in str1:\n        if i not in vowels:\n            result = result + i\n    return result\n\n\nstr1 = \"Hello World\"\nprint(\"Original String: \" + str1)\nprint(\"Reversed String: \" + reverse_vowels(str1))",
    "def reverse_vowels(str1):\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_str = ''\n    for ch in str1:\n        if ch.lower() in vowels:\n            vowels_str += ch\n\n    vowels_str = vowels_str[::-1]\n    for ch in str1:\n        if ch.lower() not in vowels:\n            vowels_str += ch\n    return vowels_str\n\n\nif __name__ == \"__main__\":\n    print(reverse_vowels(\"Hello, world!\"))\n    print(reverse_vowels(\"Python\"))\n    print(reverse_vowels(\"aeiou\"))\n    print(reverse_vowels(\"aeyo\"))",
    "def reverse_vowels(string):\n    vowels = \"aeiouAEIOU\"\n    res = []\n    for letter in string:\n        if letter in vowels:\n            res.insert(0, letter)\n        else:\n            res.append(letter)\n    return ''.join(res)\n\nprint(reverse_vowels(\"Hello, World\"))",
    "def reverseVowels(str):\n    vowels = 'aeiouAEIOU'\n    s = list(str)\n    i, j = 0, len(s) - 1\n    while i < j:\n        while i < j and s[i] not in vowels:\n            i += 1\n        while i < j and s[j] not in vowels:\n            j -= 1\n        if i < j:\n            s[i], s[j] = s[j], s[i]\n            i, j = i + 1, j - 1\n    return ''.join(s)\n\n\nstr = 'hello'\nprint(reverseVowels(str))"
  ],
  "generation_params": {
    "num_candidates": 100,
    "num_seqs_per_iter": 50,
    "inference_batch_size": 256,
    "temperature": 0.6,
    "top_p": 0.95,
    "max_new_tokens": 512,
    "do_sample": true,
    "pad_token_id": null,
    "eos_token_id": null
  }
}